{"UNKNOWN to If":[{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < (channelPane.getTabCount())) channelPane.setSelectedIndex(i);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/294/buggy-version/src.kirc.KIRCFrame.java", "BodyUseAPI": ["javax.swing.JTabbedPane.setSelectedIndex(int)"], "Fixed commit": "38e7b9e758472e0c3d726851b1ac9989dbea1062", "Url": "https://api.github.com/repos/kvitebjorn/kIRC", "Date": "2014-12-26T04:21:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (channelIndex < (channelPane.getTabCount())) channelArea = ((kirc.ChannelPane) (channelPane.getComponentAt(channelIndex)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/294/buggy-version/src.kirc.KIRCFrame.java", "BodyUseAPI": ["javax.swing.JTabbedPane.getComponentAt(int)"], "Fixed commit": "38e7b9e758472e0c3d726851b1ac9989dbea1062", "Url": "https://api.github.com/repos/kvitebjorn/kIRC", "Date": "2014-12-26T04:21:59Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((700 - (20 * (adlj.main.gui.Frame.LEVEL))) > 0) { new adlj.main.entity.Enemy(((rand.nextInt((700 - (20 * (adlj.main.gui.Frame.LEVEL))))) + 50), (-50), 50, 50, 0, adlj.main.entity.Enemy.movement_speed[type], type); }else { new adlj.main.entity.Enemy(50, (-50), 50, 50, 0, adlj.main.entity.Enemy.movement_speed[type], type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2231/buggy-version/src.adlj.main.threads.EnemySpawner.java", "BodyUseAPI": ["java.util.Random.nextInt((700 - (20 * (adlj.main.gui.Frame.LEVEL))))"], "Fixed commit": "5d2311c8de12dbd4b1bf0f77f1808c5b3469f072", "Url": "https://api.github.com/repos/clannoobz/AmourDeLeJeu", "Date": "2013-07-15T18:54:42Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (suggestion != null) { input.setValue(suggestion.getReplacementString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3604/buggy-version/app.web.src.main.java.uk.ac.ebi.fg.annotare2.web.gwt.editor.client.view.widget.SuggestBoxCell.java", "BodyUseAPI": ["com.google.gwt.dom.client.InputElement.setValue(suggestion.getReplacementString())", "SuggestOracle.Suggestion.getReplacementString()"], "Fixed commit": "eb8908df4384606307b992b69ef623a0cbfbbe00", "Url": "https://api.github.com/repos/arrayexpress/annotare2", "Date": "2013-05-29T15:54:52Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rabbit.next) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2260/buggy-version/src.PopAndPush.java", "BodyUseAPI": [], "Fixed commit": "cfa2de258a226ba2b619b7bc3bc2c1d0d92a0189", "Url": "https://api.github.com/repos/Stanislavk1982/Lesson21", "Date": "2016-06-11T07:50:11Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.nrohwer.skat.showdown.Table.getLatest()", "table.getAgentOfLatestGame(game.getPlayer()).getGameType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((type == (de.nrohwer.skat.GameType.NULL_OUVERT_HAND)) || (type == (de.nrohwer.skat.GameType.NULL_HAND))) && (game.isSwapped())) { game.setLossReason(Game.LossReason.ANNOUNCED_HAND_BUT_SWAPPED_SKAT); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5306/buggy-version/src.de.nrohwer.skat.showdown.GameEngine.java", "BodyUseAPI": ["de.nrohwer.skat.showdown.Game.setLossReason(Game.LossReason.ANNOUNCED_HAND_BUT_SWAPPED_SKAT)"], "Fixed commit": "d348a30ca53fedf5682f2c756b5b3d15143cb998", "Url": "https://api.github.com/repos/nrohwer/SkatShowdown", "Date": "2016-03-12T15:52:30Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isGroupFiles())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7149/buggy-version/components.formats-bsd.src.loci.formats.in.MicromanagerReader.java", "BodyUseAPI": [], "Fixed commit": "b83c20f1f5913cd9bede202a6884bff636706663", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-03-25T17:25:08Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((key[i]) != null) && ((replace[i]) != null)) msg = msg.replace(key[i], replace[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4927/buggy-version/src.org.caliog.Rolecraft.XMechanics.Messages.Msg.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "79d06be877a45b026da48baad07fa85b79303267", "Url": "https://api.github.com/repos/caliog/Rolecraft", "Date": "2017-03-04T13:01:24Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kardinia.mpj.MPI.Init(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((params.length) < 4) { com.kardinia.mpj.MPI.Finalize(); throw new java.lang.RuntimeException((\"Insufficient number of arguments: \" + (params.length))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6585/buggy-version/src.main.java.com.kardinia.mpj.ColourMandelbrot.java", "BodyUseAPI": [], "Fixed commit": "b72fbdeb16e3b81c010745afad8ba4226aa46438", "Url": "https://api.github.com/repos/MrDreamBot/mpj-example", "Date": "2017-09-04T07:22:38Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i + j) < (com.kardinia.mpj.ColourMandelbrot.WIDTH)) { pic.set((i + j), (((com.kardinia.mpj.ColourMandelbrot.HEIGHT) - 1) - k), colours[dots[k]]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6585/buggy-version/src.main.java.com.kardinia.mpj.ColourMandelbrot.java", "BodyUseAPI": ["com.kardinia.imaging.Picture.set(int,int,java.awt.Color)"], "Fixed commit": "b72fbdeb16e3b81c010745afad8ba4226aa46438", "Url": "https://api.github.com/repos/MrDreamBot/mpj-example", "Date": "2017-09-04T07:22:38Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (model.Type.AUTHOR)) { allPapers.add(paper); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3696/buggy-version/src.controller.FileController.java", "BodyUseAPI": [], "Fixed commit": "8706082678a2a4e1c284a0b7ff71b5662b6deeda", "Url": "https://api.github.com/repos/yeoniy/TCSS360", "Date": "2014-06-02T21:07:33Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { lvMessages.setAdapter(new chris.warin.channelmessaging.MessagesAdapter(getActivity().getApplicationContext(), msgs)); lvMessages.setOnItemClickListener(this); lvMessages.setSelectionFromTop(index, top); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6639/buggy-version/app.src.main.java.chris.warin.fragments.MessageFragment.java", "BodyUseAPI": [], "Fixed commit": "3ff709e0884f09759c930d0e4063e8d278fe59d9", "Url": "https://api.github.com/repos/chwar/ChannelMessaging", "Date": "2017-03-22T09:35:12Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.fs.FileSystem.globStatus(org.apache.hadoop.fs.Path)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files != null) { for (org.apache.hadoop.fs.FileStatus file : files) { fs.create(new org.apache.hadoop.fs.Path(file.getPath(), org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.SUCCEEDED_FILE_NAME)).close(); org.apache.ivory.replication.FeedReplicator.LOG.info((\"Created \" + (new org.apache.hadoop.fs.Path(file.getPath(), org.apache.hadoop.mapreduce.lib.output.FileOutputCommitter.SUCCEEDED_FILE_NAME)))); } }else { org.apache.ivory.replication.FeedReplicator.LOG.info((\"No files present in path: \" + (new org.apache.hadoop.fs.Path((((targetPath.toString()) + \"/\") + fixedPath)).toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/9113/buggy-version/replication.src.main.java.org.apache.ivory.replication.FeedReplicator.java", "BodyUseAPI": [], "Fixed commit": "83349d9f8511e53a4cab7422d14867b3e6ecbe2d", "Url": "https://api.github.com/repos/sriksun/Ivory", "Date": "2012-09-10T08:45:47Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((decoder) != null) { return decodeContent(null, c); }else { return c; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8190/buggy-version/codec-http.src.main.java.io.netty.handler.codec.http.HttpContentDecoder.java", "BodyUseAPI": [], "Fixed commit": "27190fcb7f00f725661cc71b3c2b3d76e22a005d", "Url": "https://api.github.com/repos/netty/netty", "Date": "2013-02-09T16:35:01Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lineNum >= (loaded.getTheLines().size())) { loaded.addLine(st); }else { loaded.setLine(lineNum, st); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6658/buggy-version/src.smp.components.general.Utilities.java", "BodyUseAPI": ["smp.components.staff.sequences.StaffSequence.addLine(smp.components.staff.sequences.StaffNoteLine)", "smp.components.staff.sequences.StaffSequence.setLine(int,smp.components.staff.sequences.StaffNoteLine)"], "Fixed commit": "3faefda778b5ea71d12a9a0d93504010f4882830", "Url": "https://api.github.com/repos/DC37/Super-Mario-Paint", "Date": "2016-06-10T03:50:25Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isShow) myView.setVisibility(View.VISIBLE); else myView.setVisibility(View.INVISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5061/buggy-version/circularanim.src.main.java.top.wefor.circularanim.CircularAnimUtil.java", "BodyUseAPI": [], "Fixed commit": "7aff32fe2a668bae4f697252ccc94bd63573d59d", "Url": "https://api.github.com/repos/XunMengWinter/CircularAnim", "Date": "2016-08-04T07:54:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fret - 1) > 0) { int position = fret - 1; result.add(new Fingering(note, string, position, 2, fret, duration)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2161/buggy-version/src.ParsedNote.java", "BodyUseAPI": ["java.util.List<Fingering>.add(Fingering)"], "Fixed commit": "5e59ff5ce9ca584fbdf8462a9de6d5b5b68b8963", "Url": "https://api.github.com/repos/chnor/Fingering", "Date": "2013-03-05T17:55:06Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fret - 2) > 0) { int position = fret - 2; result.add(new Fingering(note, string, position, 3, fret, duration)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2161/buggy-version/src.ParsedNote.java", "BodyUseAPI": ["java.util.List<Fingering>.add(Fingering)"], "Fixed commit": "5e59ff5ce9ca584fbdf8462a9de6d5b5b68b8963", "Url": "https://api.github.com/repos/chnor/Fingering", "Date": "2013-03-05T17:55:06Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fret - 2) > 0) { int position = fret - 2; result.add(new Fingering(note, string, position, 4, fret, duration)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2161/buggy-version/src.ParsedNote.java", "BodyUseAPI": ["java.util.List<Fingering>.add(Fingering)"], "Fixed commit": "5e59ff5ce9ca584fbdf8462a9de6d5b5b68b8963", "Url": "https://api.github.com/repos/chnor/Fingering", "Date": "2013-03-05T17:55:06Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fret - 3) > 0) { int position = fret - 3; result.add(new Fingering(note, string, position, 4, fret, duration)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2161/buggy-version/src.ParsedNote.java", "BodyUseAPI": ["java.util.List<Fingering>.add(Fingering)"], "Fixed commit": "5e59ff5ce9ca584fbdf8462a9de6d5b5b68b8963", "Url": "https://api.github.com/repos/chnor/Fingering", "Date": "2013-03-05T17:55:06Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fret - 3) > 0) { int position = fret - 3; result.add(new Fingering(note, string, position, 3, fret, duration)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2161/buggy-version/src.ParsedNote.java", "BodyUseAPI": ["java.util.List<Fingering>.add(Fingering)"], "Fixed commit": "5e59ff5ce9ca584fbdf8462a9de6d5b5b68b8963", "Url": "https://api.github.com/repos/chnor/Fingering", "Date": "2013-03-05T17:55:06Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fret - 1) > 0) { int position = fret - 1; result.add(new Fingering(note, string, position, 4, fret, duration)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2161/buggy-version/src.ParsedNote.java", "BodyUseAPI": ["java.util.List<Fingering>.add(Fingering)"], "Fixed commit": "5e59ff5ce9ca584fbdf8462a9de6d5b5b68b8963", "Url": "https://api.github.com/repos/chnor/Fingering", "Date": "2013-03-05T17:55:06Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fret - 1) > 0) { int position = fret - 1; result.add(new Fingering(note, string, position, 3, fret, duration)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2161/buggy-version/src.ParsedNote.java", "BodyUseAPI": ["java.util.List<Fingering>.add(Fingering)"], "Fixed commit": "5e59ff5ce9ca584fbdf8462a9de6d5b5b68b8963", "Url": "https://api.github.com/repos/chnor/Fingering", "Date": "2013-03-05T17:55:06Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fret > 0) { int position = fret; result.add(new Fingering(note, string, position, 1, fret, duration)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2161/buggy-version/src.ParsedNote.java", "BodyUseAPI": ["java.util.List<Fingering>.add(Fingering)"], "Fixed commit": "5e59ff5ce9ca584fbdf8462a9de6d5b5b68b8963", "Url": "https://api.github.com/repos/chnor/Fingering", "Date": "2013-03-05T17:55:06Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((valueStack.peek().getType()) == (com.neeraj2608.rpalinterpreter.ast.ASTNodeType.PRINT)) return valueStack.pop().getValue(); else return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6565/buggy-version/src.com.neeraj2608.rpalinterpreter.csem.CSEMachine.java", "BodyUseAPI": ["valueStack.pop().getValue()", "java.util.Stack<com.neeraj2608.rpalinterpreter.ast.ASTNode>.pop()"], "Fixed commit": "89d78eb1a0e14355ec940d847aea6868e3f9b093", "Url": "https://api.github.com/repos/neeraj2608/rpal-interpreter", "Date": "2014-04-23T02:14:43Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useId) initialValues.put(com.mad.achatz.fa_todo.TodoDbAdapter.COLUMN_ID, todo.getDbId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7337/buggy-version/app.src.main.java.com.mad.achatz.fa_todo.TodoDbAdapter.java", "BodyUseAPI": [], "Fixed commit": "94a7ba4603432810c0ab49e845ef6eb4b4693611", "Url": "https://api.github.com/repos/achatzSWT/MAD", "Date": "2016-06-29T16:54:15Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!save) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1693/buggy-version/src.com.gamelanlabs.chimple2.solvers.MatlabMetropolisHastingsSolver.java", "BodyUseAPI": [], "Fixed commit": "20951e3cb988c9dbf5f195bba6f29a049fab5823", "Url": "https://api.github.com/repos/gamelanlabs/chimple2", "Date": "2014-07-31T14:04:51Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!save) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1693/buggy-version/src.com.gamelanlabs.chimple2.solvers.MatlabMetropolisHastingsSolver.java", "BodyUseAPI": [], "Fixed commit": "20951e3cb988c9dbf5f195bba6f29a049fab5823", "Url": "https://api.github.com/repos/gamelanlabs/chimple2", "Date": "2014-07-31T14:04:51Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(children.isEmpty())) { children.remove(((children.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/967/buggy-version/src.smp.components.staff.StaffEventHandler.java", "BodyUseAPI": ["javafx.collections.ObservableList<javafx.scene.Node>.remove(((children.size()) - 1))", "javafx.collections.ObservableList<javafx.scene.Node>.size()"], "Fixed commit": "b79eb462702b72a8913a1111f7c2431f8199a7bb", "Url": "https://api.github.com/repos/DC37/Super-Mario-Paint", "Date": "2013-07-29T23:38:05Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(requests.isEmpty())) { philosophy.Request request = requests.poll(); if (request.getMessage().equals(Request.STOP_PLAY)) { if (philosophy.Philosopher.playState.equals(PlayState.PLAY_RIGHT)) { philosophy.Philosopher.playState = PlayState.INACTIVE; gui.updatePlayState(); philosophy.Philosopher.stopPlayFlag = false; }else if (philosophy.Philosopher.playState.equals(PlayState.PLAY_LEFT)) { philosophy.Philosopher.playState = PlayState.INACTIVE; gui.updatePlayState(); philosophy.Philosopher.stopPlayFlag = false; }else { java.lang.System.err.println(\"Inconsistent print state\"); } }else { requests.put(request); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8547/buggy-version/src.philosophy.Philosopher.java", "BodyUseAPI": ["java.util.concurrent.BlockingQueue<philosophy.Request>.put(philosophy.Request)", "java.util.concurrent.BlockingQueue<philosophy.Request>.poll()"], "Fixed commit": "dcdf8139eb5aaab3acea8dd64375c05d715fa26b", "Url": "https://api.github.com/repos/knispeja/DiningPhilosophers", "Date": "2017-05-03T04:14:11Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(v.toString().equals(\"-1\"))) neighbours.append(v.toString()).append(\",\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8371/buggy-version/parsingLiveJournalData.LiveJournalReducer.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(v.toString())", "org.apache.hadoop.io.Text.toString()"], "Fixed commit": "d5c25913efa11496d8d737ae191eef213d87c54c", "Url": "https://api.github.com/repos/metastableB/bigDataExperiments", "Date": "2015-05-26T21:00:30Z"},
{"Line": "=>727", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.ednovo.gooru.client.gin.AppClientFactory.isAnonymous()) { com.google.gwt.user.client.Window.enableScrolling(true); }else { com.google.gwt.user.client.Window.enableScrolling(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8739/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.ShelfView.java", "BodyUseAPI": [], "Fixed commit": "33be4d68f6a2572225e53004380bdbb37df2eabe", "Url": "https://api.github.com/repos/VinRudramurthy/Gooru-Web", "Date": "2014-08-01T11:25:47Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modulus == 0) && (actualCheckDigit == 0)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/403/buggy-version/oxalis-api.src.main.java.eu.peppol.start.identifier.ParticipantId.java", "BodyUseAPI": [], "Fixed commit": "7b111a59b49f8efb4b98fb9f8b7e46b2ca966487", "Url": "https://api.github.com/repos/difi/oxalis", "Date": "2012-04-11T10:44:13Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (drawing) { jsmli.slingyball.ControlBall.playerListener.setVx(((startX) - (endX))); jsmli.slingyball.ControlBall.playerListener.setVy(((startY) - (endY))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4264/buggy-version/app.src.main.java.jsmli.slingyball.ControlBall.java", "BodyUseAPI": [], "Fixed commit": "a70584ed934e0c61077537051941547ed1ff07e6", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-android-games-slingy-ball", "Date": "2017-11-16T00:40:39Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tmp[3].equals(\"180 min.\")) min180.put(x, y, new quadTree.Points(x, y)); else if (tmp[3].equals(\"Parkstra\u00dfe werktags\")) parkstrassen.put(x, y, new quadTree.Points(x, y));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8824/buggy-version/src.Model.DataReader.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "355c02d31e976adf9044ab5af7d545f352c08768", "Url": "https://api.github.com/repos/Philipp-p/InnsbruckMasterMeter", "Date": "2015-01-15T16:42:36Z"},
{"Line": "=>766", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cursor.getColumnIndex(com.stanford.tutti.DatabaseHandler.KEY_ADDED_BY)) != (-1)) { song.setAddedBy(cursor.getString(cursor.getColumnIndex(com.stanford.tutti.DatabaseHandler.KEY_ADDED_BY))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3325/buggy-version/src.com.stanford.tutti.DatabaseHandler.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(java.lang.String)", "com.stanford.tutti.Song.setAddedBy(cursor.getString(cursor.getColumnIndex(com.stanford.tutti.DatabaseHandler.KEY_ADDED_BY)))", "android.database.Cursor.getString(cursor.getColumnIndex(com.stanford.tutti.DatabaseHandler.KEY_ADDED_BY))"], "Fixed commit": "8f486be99865239408e8e7fe56eef9a23a8cba3f", "Url": "https://api.github.com/repos/JayThomason/Tutti", "Date": "2014-06-07T17:41:25Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.values.containsKey(com.auth0.android.authentication.AuthenticationException.DESCRIPTION_KEY))) { this.description = ((java.lang.String) (this.values.get(com.auth0.android.authentication.AuthenticationException.ERROR_DESCRIPTION_KEY))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/437/buggy-version/auth0.src.main.java.com.auth0.android.authentication.AuthenticationException.java", "BodyUseAPI": [], "Fixed commit": "f7aa36f62e0ff846b80fe6b800c1948604db0e93", "Url": "https://api.github.com/repos/auth0/Auth0.Android", "Date": "2016-12-26T15:31:38Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (c != null) { int i; int count = from.length; if (((mFrom) == null) || ((mFrom.length) != count)) { mFrom = new int[count]; } for (i = 0; i < count; i++) { mFrom[i] = c.getColumnIndexOrThrow(from[i]); } }else { mFrom = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8987/buggy-version/robolectric-shadows.shadows-core.src.main.java.org.robolectric.shadows.ShadowSimpleCursorAdapter.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndexOrThrow(java.lang.String)"], "Fixed commit": "97946d85f53ae2a2dc505dccd30bb23622ffa735", "Url": "https://api.github.com/repos/mag/robolectric", "Date": "2015-04-22T15:47:14Z"},
{"Line": "=>1445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ballerinalang.plugins.idea.psi.AssignmentStatementNode.getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(firstChild instanceof com.intellij.psi.impl.source.tree.LeafPsiElement)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5737/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.impl.BallerinaPsiImplUtil.java", "BodyUseAPI": [], "Fixed commit": "1c8e05b478f18ec4fa43ab20a370711d2ff1c2be", "Url": "https://api.github.com/repos/Shan1024/plugin-intellij", "Date": "2017-07-12T09:05:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()) instanceof org.springframework.security.authentication.AnonymousAuthenticationToken) { result = \"login\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/972/buggy-version/src.java.contactList.app.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "4d90c09418770f6548f4a5c38735536dfaa508e0", "Url": "https://api.github.com/repos/YehorKrivokon/contactList", "Date": "2017-04-06T13:23:06Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { findViewById(R.id.content_with_groups).setVisibility(View.VISIBLE); findViewById(R.id.content_without_groups).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/264/buggy-version/app.src.main.java.group3.myapplicationlab2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3200b6fac47f35a1f2bfb38e080e4f8391ef22e0", "Url": "https://api.github.com/repos/mad-group/Lab2", "Date": "2017-06-10T18:14:50Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.kmelia.model.KmeliaPublication.getDetail()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((pub.getStatus()) != null) && (pub.isRefused())) { if (((admin.isInRole(profile)) || (publisher.isInRole(profile))) || (currentUserId.equals(currentUser.getId()))) { pubColor = \"red\"; pubState = resources.getString(\"PublicationRefused\"); } }else { if ((((admin.isInRole(profile)) || (publisher.isInRole(profile))) || (currentUserId.equals(pub.getUpdaterId()))) || ((!(user.isInRole(profile))) && (kmeliaScc.isCoWritingEnable()))) { pubColor = \"red\"; if (pub.isRefused()) { pubState = resources.getString(\"kmelia.PubStateUnvalidate\"); }else { pubState = resources.getString(\"kmelia.PubStateToValidate\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7116/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.AjaxPublicationsListServlet.java", "BodyUseAPI": ["java.lang.String.equals(pub.getUpdaterId())", "com.stratelia.webactiv.util.publication.model.PublicationDetail.getUpdaterId()", "com.stratelia.webactiv.util.publication.model.PublicationDetail.isRefused()"], "Fixed commit": "b743c447bd3eb210541da16e9211561daeb1b433", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2013-08-02T12:36:28Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (company == null) FUSEKI_SPARQL_ENDPOINT_URL = this.FUSEKI_SPARQL_ENDPOINT_DEFAULT; else if (company.equals(this.FUSEKI_DATASET_HELLA)) FUSEKI_SPARQL_ENDPOINT_URL = this.FUSEKI_SPARQL_ENDPOINT_HELLA; else if (company.equals(this.FUSEKI_DATASET_MHWIRTH)) FUSEKI_SPARQL_ENDPOINT_URL = this.FUSEKI_SPARQL_ENDPOINT_MHWIRTH; else FUSEKI_SPARQL_ENDPOINT_URL = this.FUSEKI_SPARQL_ENDPOINT_DEFAULT;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2732/buggy-version/storage-registry.src.main.java.net.modelbased.proasense.storage.fuseki.StorageRegistryFusekiService.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "b2da9f8eff1ed48001e6cbdafcda0ff2ea9a1b89", "Url": "https://api.github.com/repos/SINTEF-9012/proasense-storage", "Date": "2016-06-16T12:11:03Z"},
{"Line": "=>875", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 3) { new uk.ac.susx.tag.dependencyparser.Parser(args[0]).parseFile(new java.io.File(args[1]), new java.io.File(args[3])); }else if ((args.length) == 4) { uk.ac.susx.tag.dependencyparser.Parser.convert(new java.io.File(args[0]), args[1], new java.io.File(args[2]), args[3]); }else throw new java.lang.RuntimeException(\"Unrecognised arguments. See main method of Parser class in top-level package.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/128/buggy-version/src.main.java.uk.ac.susx.tag.dependencyparser.Parser.java", "BodyUseAPI": ["uk.ac.susx.tag.dependencyparser.Parser.parseFile(java.io.File,java.io.File)", "uk.ac.susx.tag.dependencyparser.Parser.convert(java.io.File,java.lang.String,java.io.File,java.lang.String)"], "Fixed commit": "8c43e40074da3514954e7203e0089f9660651c68", "Url": "https://api.github.com/repos/andehr/tag-dependency-parser", "Date": "2014-07-18T09:16:48Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").startsWith(\"Windows\")) { dirPath = dirPath.toLowerCase(); nextPath = nextPath.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5101/buggy-version/src.main.java.org.commonjava.maven.plugins.execroot.HighestBasedirGoal.java", "BodyUseAPI": [], "Fixed commit": "a7cc705f8660fed5c8a53b8c490558608f4b09df", "Url": "https://api.github.com/repos/jdcasey/directory-maven-plugin", "Date": "2017-07-14T06:28:28Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").startsWith(\"Windows\")) { return first.getAbsolutePath().compareToIgnoreCase(second.getAbsolutePath()); }else { return first.getAbsolutePath().compareTo(second.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5101/buggy-version/src.main.java.org.commonjava.maven.plugins.execroot.HighestBasedirGoal.java", "BodyUseAPI": [], "Fixed commit": "a7cc705f8660fed5c8a53b8c490558608f4b09df", "Url": "https://api.github.com/repos/jdcasey/directory-maven-plugin", "Date": "2017-07-14T06:28:28Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isBlank(terminal))) builder.add(\"terminal\", terminal);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7857/buggy-version/deal.api-deal.src.main.java.cn.momia.api.deal.DealServiceApi.java", "BodyUseAPI": ["cn.momia.api.base.http.MomiaHttpParamBuilder.add(java.lang.String,java.lang.String)"], "Fixed commit": "ba711781a0b22a43222e9c0923d6953fd3eab9ef", "Url": "https://api.github.com/repos/lovemomia/service", "Date": "2015-08-21T04:12:02Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count != (-1)) { bufferUpto += count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5900/buggy-version/src.java.org.apache.lucene.server.handlers.BulkCSVAddDocumentHandler.java", "BodyUseAPI": [], "Fixed commit": "c5b2d3575338f7d83c0823eba9f2e2c552788953", "Url": "https://api.github.com/repos/mikemccand/luceneserver", "Date": "2016-07-30T10:11:07Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isBlank(tagName))) { note.addToTagNames(tagName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8517/buggy-version/com.prairie.eevernote.src.com.prairie.eevernote.client.impl.NoteOpsTextImpl.java", "BodyUseAPI": ["com.evernote.edam.type.Note.addToTagNames(java.lang.String)"], "Fixed commit": "0e800301c73b948207e9169cd3a6b03cdd638aac", "Url": "https://api.github.com/repos/prairie/EEvernote", "Date": "2014-09-10T06:54:47Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isBlank(tagName))) { note.addToTagNames(tagName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8517/buggy-version/com.prairie.eevernote.src.com.prairie.eevernote.client.impl.NoteOpsFileImpl.java", "BodyUseAPI": ["com.evernote.edam.type.Note.addToTagNames(java.lang.String)"], "Fixed commit": "0e800301c73b948207e9169cd3a6b03cdd638aac", "Url": "https://api.github.com/repos/prairie/EEvernote", "Date": "2014-09-10T06:54:47Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (criteria == null) criteria = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1904/buggy-version/Tweeter.app.controllers.Application.java", "BodyUseAPI": [], "Fixed commit": "f95c71cad33ad7b4795d9bc72b893d9f1596e73b", "Url": "https://api.github.com/repos/alandomiel/ProjetGMIN303", "Date": "2013-12-28T17:41:15Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((criteria = session(\"criteria\")) == null) criteria = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1904/buggy-version/Tweeter.app.controllers.Application.java", "BodyUseAPI": [], "Fixed commit": "f95c71cad33ad7b4795d9bc72b893d9f1596e73b", "Url": "https://api.github.com/repos/alandomiel/ProjetGMIN303", "Date": "2013-12-28T17:41:15Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pauseTime) == 0) { nextPlayer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2741/buggy-version/src.hu.harmakhis.shisha.Main.java", "BodyUseAPI": [], "Fixed commit": "a4ef2da7b0c2c21b14c6cde529fed3ba977ef1e2", "Url": "https://api.github.com/repos/andyskw/Shisha-Manager", "Date": "2013-01-13T11:04:14Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 0) || (j == 0)) { c[(i + 1)][(j + 1)] = 1; result[(i + 1)][(j + 1)] = \"\" + s1Char; }else { c[(i + 1)][(j + 1)] = (c[i][j]) + 1; result[(i + 1)][(j + 1)] = (result[i][j]) + s1Char; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4684/buggy-version/src.com.mozz.search.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "ce57a4af9ea28dcff64ead1c5bcb9e97c1ca70f8", "Url": "https://api.github.com/repos/hsllany/MozzAndroid", "Date": "2015-03-17T07:55:52Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.utils.media.VideoFFProbeTool.getVideoCreateTime(net.bramp.ffmpeg.probe.FFmpegStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(ptime)) { fi.setPhotoTime(new java.sql.Date(sf.parse(ptime).getTime())); }else { fi.setPhotoTime(fi.getcTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4291/buggy-version/photoweb.src.com.utils.media.VideoFFProbeTool.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)", "com.backend.FileInfo.setPhotoTime(java.sql.Date)", "java.util.Date.getTime()"], "Fixed commit": "26b1f0423b2ef691952ef7d9c1f4c472e071591e", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2016-10-29T15:32:30Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((password.length()) == 0) { this.mainPool = new net.bridgesapi.core.database.JedisSentinelPool(masterName, sentinels, config, 5000); this.cachePool = new net.bridgesapi.core.database.JedisSentinelPool(cacheName, sentinels, config, 5000); }else { this.mainPool = new net.bridgesapi.core.database.JedisSentinelPool(masterName, sentinels, config, 5000, password); this.cachePool = new net.bridgesapi.core.database.JedisSentinelPool(cacheName, sentinels, config, 5000, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7079/buggy-version/src.main.java.net.bridgesapi.core.database.DatabaseConnector.java", "BodyUseAPI": [], "Fixed commit": "48a4a88b1e934988d4a107a1219a01b1713135d4", "Url": "https://api.github.com/repos/BridgeAPIs/BukkitBridge", "Date": "2015-07-15T10:55:46Z"},
{"Line": "=>1498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.isImage()) { getContentResolver().delete(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, ((MediaStore.Images.Media.DATA) + \"=?\"), new java.lang.String[]{ path }); }else if (file.isAudio()) { getContentResolver().delete(MediaStore.Audio.Media.EXTERNAL_CONTENT_URI, ((MediaStore.Audio.Media.DATA) + \"=?\"), new java.lang.String[]{ path }); }else if (file.isVideo()) { getContentResolver().delete(MediaStore.Video.Media.EXTERNAL_CONTENT_URI, ((MediaStore.Video.Media.DATA) + \"=?\"), new java.lang.String[]{ path }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7070/buggy-version/src.com.owncloud.android.datamodel.FileDataStorageManager.java", "BodyUseAPI": ["com.owncloud.android.datamodel.OCFile.isAudio()", "com.owncloud.android.datamodel.OCFile.isVideo()"], "Fixed commit": "a69c04d8e938b67f1a44a72b9148b907ebd7b256", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2015-01-27T13:31:44Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConditionMet()) { emit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1303/buggy-version/src.main.java.org.culturegraph.mf.morph.collectors.AbstractFlushingCollect.java", "BodyUseAPI": [], "Fixed commit": "8acb68ff0b39840e36ae7bbce2449a04cd754397", "Url": "https://api.github.com/repos/zazi/metafacture-core", "Date": "2015-06-02T09:09:34Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.isi.karma.modeling.alignment.Alignment.getLinksByStatus(LinkStatus.ForcedByUser)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((linksForcedByUser == null) || (!(linksForcedByUser.contains(link)))) { this.graphBuilder.changeLinkStatus(link, LinkStatus.PreferredByUI); edu.isi.karma.modeling.alignment.Alignment.logger.debug(((\"link \" + (link.getId())) + \" has been added to preferred UI links.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6267/buggy-version/src.main.java.edu.isi.karma.modeling.alignment.Alignment.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(((\"link \" + (link.getId())) + \" has been added to preferred UI links.\"))", "edu.isi.karma.rep.alignment.Link.getId()", "edu.isi.karma.modeling.alignment.GraphBuilder.changeLinkStatus(edu.isi.karma.rep.alignment.Link,LinkStatus.PreferredByUI)"], "Fixed commit": "fa786d026c51cf1d6affc46c4620ef899ad0500b", "Url": "https://api.github.com/repos/InformationIntegrationGroup/Web-Karma", "Date": "2013-03-04T23:21:41Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"BIC\".equals(string)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8735/buggy-version/gedbrowser-datamodel.src.main.java.org.schoellerfamily.gedbrowser.datamodel.DateParsingUtil.java", "BodyUseAPI": [], "Fixed commit": "4d91a9317f78a9a881631c5ce84e6361aa43efe7", "Url": "https://api.github.com/repos/dickschoeller/gedbrowser", "Date": "2017-01-11T20:40:08Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evalString) == null) { evalString = token.getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6357/buggy-version/src.main.java.com.lfkdsk.justel.ast.base.AstLeaf.java", "BodyUseAPI": [], "Fixed commit": "b29efc34d3ed3818745d0e4077296bfa60b6cc1a", "Url": "https://api.github.com/repos/lfkdsk/Just-Evaluator", "Date": "2017-11-14T07:55:27Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (qName.equals(\"reference\")) { tmpProd.setReferenceNumber(tagValue); }else if (qName.equals(\"price\")) { tagValue.replace(\",\", \".\"); tmpProd.setPrice(new java.math.BigDecimal(tagValue)); }else if (qName.equals(\"location\")) { tmpProdImage.setParentProd(tmpProd); tmpProdImage.setLocation(tagValue); }else if (qName.equals(\"dateFrom\")) { tmpProdDisc.setDateFrom(pk.noz.utils.DateUtilslLib.parseXmlDate(tagValue)); }else if (qName.equals(\"dateTo\")) { tmpProdDisc.setDateTo(pk.noz.utils.DateUtilslLib.parseXmlDate(tagValue)); }else if (qName.equals(\"discount\")) { tagValue.replaceAll(\",\", \".\"); tmpProdDisc.setDiscount(new java.math.BigDecimal(tagValue)); tmpProdDisc.setParentProd(tmpProd); }else if (qName.equals(\"date\")) { prodCatDate = pk.noz.utils.DateUtilslLib.parseXmlDate(tagValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2027/buggy-version/src.pk.noz.db.management.ReloadProductCatalouge.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "0064b39a112aeadd553385bd1fcfd22419458d75", "Url": "https://api.github.com/repos/LoczekLodz/Nozownik", "Date": "2015-03-18T10:58:11Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bufLength) > 0) { np = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1583/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONReaderScanner.java", "BodyUseAPI": [], "Fixed commit": "500715c0fe1707df03beb4cd422015ed2bea0356", "Url": "https://api.github.com/repos/daPATHoming/fastjson", "Date": "2013-10-25T04:16:16Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPermits) > 0) { mCondition.signal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2078/buggy-version/week-3-assignment-2.src.edu.vuum.mocca.SimpleSemaphore.java", "BodyUseAPI": [], "Fixed commit": "e052d8d4766aed1dad31005202b9d00de6cfcef3", "Url": "https://api.github.com/repos/JiaweiLin/CourseraAndroidPOSA", "Date": "2014-06-27T16:25:45Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((squares[i]) == null) squares[i] = factory.gen(state); else squares[i].setTile(factory.gen(state).getTile());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/603/buggy-version/src.main.java.model.Board.java", "BodyUseAPI": ["squares[i].setTile(factory.gen(state).getTile())"], "Fixed commit": "0a0c803320006e19dd0845fc9fce5230015d48c0", "Url": "https://api.github.com/repos/arthurlockman/sixeswild", "Date": "2015-05-03T23:57:15Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((squares) == null) squares = new model.Square[81];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/603/buggy-version/src.main.java.model.Board.java", "BodyUseAPI": [], "Fixed commit": "0a0c803320006e19dd0845fc9fce5230015d48c0", "Url": "https://api.github.com/repos/arthurlockman/sixeswild", "Date": "2015-05-03T23:57:15Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, org.openhab.binding.zwave.internal.protocol.ZWaveSceneDevice>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (device == null) { org.openhab.binding.zwave.internal.protocol.ZWaveScene.logger.error(\"NODE {} is not associated with a Scene Device.\", nodeId); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6483/buggy-version/bundles.binding.org.openhab.binding.zwave.src.main.java.org.openhab.binding.zwave.internal.protocol.ZWaveScene.java", "BodyUseAPI": [], "Fixed commit": "7340ae0c949ff67b95e1b2c1aa8b73aee9c80ab3", "Url": "https://api.github.com/repos/paixaop/openhab", "Date": "2015-09-16T03:10:16Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (waitingForResult) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5308/buggy-version/Ports.Android.src.com.codename1.impl.android.CodenameOneActivity.java", "BodyUseAPI": [], "Fixed commit": "e151b5bb79d7b207469b76e4a4b72a1fb988ef96", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-08-19T22:38:01Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newValue == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6671/buggy-version/editor.core.src.main.java.es.eucm.ead.editor.view.builders.mockup.menu.InitialScreen.java", "BodyUseAPI": [], "Fixed commit": "c10800a9d224b02ed3ca2cf898fb1a70528d1ebb", "Url": "https://api.github.com/repos/RotaruDan/ead", "Date": "2014-03-07T00:52:40Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ListIterator<org.develnext.jphp.core.tokenizer.token.Token>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result instanceof org.develnext.jphp.core.tokenizer.token.CommentToken) { return nextTokenAndPrev(iterator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6266/buggy-version/jphp-core.src.org.develnext.jphp.core.syntax.generators.Generator.java", "BodyUseAPI": [], "Fixed commit": "0caa613c730194211a37eafd193ee331e36bf632", "Url": "https://api.github.com/repos/dim-s/jphp", "Date": "2014-04-15T11:43:48Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pr1.getPrice().contains(\",\")) { pr1.setPrice(pr1.getPrice().replace(\",\", \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3522/buggy-version/src.main.java.org.school.ezon.api.sorters.SortByPrice.java", "BodyUseAPI": ["pr1.getPrice().replace(java.lang.String,java.lang.String)", "org.school.ezon.api.pojo.Product.getPrice()", "org.school.ezon.api.pojo.Product.setPrice(pr1.getPrice().replace(\",\", \".\"))"], "Fixed commit": "2f46bb237392994607f00b598db1f12cf8166431", "Url": "https://api.github.com/repos/ziemerz/ezon-api", "Date": "2016-12-07T09:12:20Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pr2.getPrice().contains(\",\")) { pr2.setPrice(pr1.getPrice().replace(\",\", \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3522/buggy-version/src.main.java.org.school.ezon.api.sorters.SortByPrice.java", "BodyUseAPI": ["org.school.ezon.api.pojo.Product.setPrice(pr1.getPrice().replace(\",\", \".\"))"], "Fixed commit": "2f46bb237392994607f00b598db1f12cf8166431", "Url": "https://api.github.com/repos/ziemerz/ezon-api", "Date": "2016-12-07T09:12:20Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.equals(CacheManager.FAKE_SERVER_NODE)) { a = net.spy.memcached.ArcusReplNodeAddress.createFake(null); }else { java.lang.String[] temp = node.split(\"\\\\^\"); java.lang.String group = temp[0]; boolean master = (temp[1].equals(\"M\")) ? true : false; java.lang.String ipport = temp[2]; a = net.spy.memcached.ArcusReplNodeAddress.create(group, master, ipport); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/447/buggy-version/src.main.java.net.spy.memcached.ArcusReplNodeAddress.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "385522b3f9fce18e38ee90007ffab49320f85a36", "Url": "https://api.github.com/repos/naver/arcus-java-client", "Date": "2015-07-27T07:15:15Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(containsKey(uuid))) { loadPlayer(uuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5803/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.mysql.MySQL.java", "BodyUseAPI": ["com.Ben12345rocks.AdvancedCore.mysql.MySQL.loadPlayer(java.lang.String)"], "Fixed commit": "34bb3d2cd53794b5d8dd25a63ac74fb80efb785f", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-09-03T19:00:36Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (status != null) { final org.mifosplatform.portfolio.savings.domain.SavingsAccountStatusType saveStatus = org.mifosplatform.portfolio.savings.domain.SavingsAccountStatusType.fromInt(status); if ((saveStatus.isActiveOrAwaitingApprovalOrDisbursal()) || (saveStatus.isUnderTransfer())) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/759/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.account.service.AccountAssociationsReadPlatformServiceImpl.java", "BodyUseAPI": ["org.mifosplatform.portfolio.savings.domain.SavingsAccountStatusType.fromInt(java.lang.Integer)"], "Fixed commit": "e923631dc3deea32b95c5f279222465fa132da68", "Url": "https://api.github.com/repos/Musoni/mifosx", "Date": "2014-10-16T14:36:40Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (status != null) { final org.mifosplatform.portfolio.loanaccount.domain.LoanStatus loanStatus = org.mifosplatform.portfolio.loanaccount.domain.LoanStatus.fromInt(status); if ((loanStatus.isActiveOrAwaitingApprovalOrDisbursal()) || (loanStatus.isUnderTransfer())) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/759/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.account.service.AccountAssociationsReadPlatformServiceImpl.java", "BodyUseAPI": ["org.mifosplatform.portfolio.loanaccount.domain.LoanStatus.fromInt(java.lang.Integer)"], "Fixed commit": "e923631dc3deea32b95c5f279222465fa132da68", "Url": "https://api.github.com/repos/Musoni/mifosx", "Date": "2014-10-16T14:36:40Z"},
{"Line": "=>926", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["flaxbeard.steamcraft.tile.TileEntityFlashBoiler.getBlockMetadata()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (meta > 0) { if (meta == 1) { return this.burning; }else { if (this.hasMaster()) { return this.getMasterTileEntity().isBurning(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/154/buggy-version/src.main.java.flaxbeard.steamcraft.tile.TileEntityFlashBoiler.java", "BodyUseAPI": [], "Fixed commit": "54c7f6c3e44e0ec2eea837016296d71af5ebad90", "Url": "https://api.github.com/repos/Flaxbeard/Flaxbeards-Steam-Power", "Date": "2014-07-30T00:59:28Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (commentStart != (-1)) { line = line.substring(0, commentStart); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3312/buggy-version/src.main.java.name.kazennikov.morph.aot.MorphDict.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "3ec7ff91db821042e8b86a3134fe295da86a4476", "Url": "https://api.github.com/repos/kzn/jaot", "Date": "2012-11-12T14:02:57Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d == 0) { com.mcjty.rftools.dimension.RfToolsDimensionManager.unregisterDimensions(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8445/buggy-version/src.main.java.com.mcjty.rftools.WorldLoadEvent.java", "BodyUseAPI": [], "Fixed commit": "23145e85763e572c5ac0103f4b286757eb079f13", "Url": "https://api.github.com/repos/McJty/RFTools", "Date": "2014-12-07T06:46:11Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (episodeId != null) { com.mayhew3.gamesutil.BasicDBObject queryObject = new com.mayhew3.gamesutil.BasicDBObject(\"_id\", seriesId); com.mayhew3.gamesutil.BasicDBObject updateObject = new com.mayhew3.gamesutil.BasicDBObject(\"episodes\", episodeId); _db.getCollection(\"series\").update(queryObject, new com.mayhew3.gamesutil.BasicDBObject(\"$addToSet\", updateObject)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8786/buggy-version/src.com.mayhew3.gamesutil.TiVoCommunicator.java", "BodyUseAPI": [], "Fixed commit": "490daf967695848e95cab5c8a3bb26eb5e3b50c8", "Url": "https://api.github.com/repos/mayhew3/MediaMogulData", "Date": "2015-01-18T21:57:40Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RuneRuner.perHour(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (xpPerHR != 0) g2.drawString((\"Till level: \" + (RuneRuner.formatTime((((long) (xpTillLevel * 3600000.0)) / xpPerHR)))), 15, 280); else g2.drawString(\"Till level: -\", 15, 280);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8664/buggy-version/src.RuneRuner.java", "BodyUseAPI": ["RuneRuner.formatTime(long)", "java.awt.Graphics2D.drawString(java.lang.String,int,int)"], "Fixed commit": "cee2b3841f3c778cedf719661813c46bee691bd0", "Url": "https://api.github.com/repos/angeljruiz/RuneRunner", "Date": "2015-11-14T04:45:06Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((telephoneTypeShort) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3308/buggy-version/src.volo.voloCalendar.entity.User.java", "BodyUseAPI": [], "Fixed commit": "9eabb5982114ac68895419a710ffbb507e5acad6", "Url": "https://api.github.com/repos/mcany/VoloCalendar", "Date": "2015-02-09T03:26:54Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transportTypeShort) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3308/buggy-version/src.volo.voloCalendar.entity.User.java", "BodyUseAPI": [], "Fixed commit": "9eabb5982114ac68895419a710ffbb507e5acad6", "Url": "https://api.github.com/repos/mcany/VoloCalendar", "Date": "2015-02-09T03:26:54Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.game.getStages()) == null) || ((this.game.getStages().size()) == 0)) { this.game.getDirector().onStarted(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2216/buggy-version/src.main.java.uk.co.nickthecoder.itchy.editor.Editor.java", "BodyUseAPI": ["this.game.getDirector().onStarted()", "uk.co.nickthecoder.itchy.Game.getDirector()"], "Fixed commit": "fb365c3796969836b7394ce9893bcb79f95afa61", "Url": "https://api.github.com/repos/nickthecoder/itchy", "Date": "2016-01-08T11:27:12Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TurnBasedMultiplayer.InitiateMatchResult.getMatch()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (match != null) { handleMatch(match); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5670/buggy-version/src.com.airtactics.activities.GameMenuActivity.java", "BodyUseAPI": ["com.airtactics.activities.GameMenuActivity.5.handleMatch(com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch)"], "Fixed commit": "d80a1ae568c1f5132da007611b272caec8469674", "Url": "https://api.github.com/repos/vladfatu/Air-Tactics-2", "Date": "2014-07-06T21:02:58Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pubDetail.getInstanceId().equals(getComponentId()))) { throw new com.silverpeas.tags.util.VisibilityException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1174/buggy-version/src.main.java.com.silverpeas.tags.kmelia.KmeliaTagUtil.java", "BodyUseAPI": [], "Fixed commit": "29dd4e5049ecf58cf8c662ca6c53211eb16461bb", "Url": "https://api.github.com/repos/CecileBONIN/taglibs", "Date": "2014-01-15T12:41:10Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.web.entity.dom.DOMNode.getOwnerDocument()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (doc != null) { if (!(doc.equals(otherNode.getOwnerDocument()))) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.WRONG_DOCUMENT_ERR, org.structr.web.entity.dom.DOMNode.WRONG_DOCUMENT_ERR_MESSAGE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3776/buggy-version/structr-ui.src.main.java.org.structr.web.entity.dom.DOMNode.java", "BodyUseAPI": ["org.w3c.dom.Document.equals(org.w3c.dom.Document)"], "Fixed commit": "957831b8d394babab03ad15bab96b65401af7156", "Url": "https://api.github.com/repos/structr/structr", "Date": "2013-01-16T13:50:23Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.diffplug.common.base.Splitter.splitToList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(lines.isEmpty())) { addIntendedLine(com.diffplug.gradle.spotless.DiffMessageFormatter.NORMAL_INDENT, lines.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8951/buggy-version/src.main.java.com.diffplug.gradle.spotless.DiffMessageFormatter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "com.diffplug.gradle.spotless.DiffMessageFormatter.addIntendedLine(java.lang.String,java.lang.String)"], "Fixed commit": "a9d765c7e2e94a005a49dfb3e8479c1da5c91cf0", "Url": "https://api.github.com/repos/jbduncan/spotless", "Date": "2016-11-13T22:10:28Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.charAt(0)) == '-') { s = \"~\" + (s.substring(1, s.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3361/buggy-version/src.org.ruhlendavis.mc.abacus.Parser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "3cfbb0508dbaf0aba450a67ab50f17f109e605d2", "Url": "https://api.github.com/repos/iain-davis/Abacus", "Date": "2013-07-07T19:26:24Z"},
{"Line": "=>760", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activeParticipantIdSet.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4949/buggy-version/src.presage.Simulation.java", "BodyUseAPI": [], "Fixed commit": "4cf7d3964ad8e85678e7ed3dc1e106c2d44ce380", "Url": "https://api.github.com/repos/javajawa/presage", "Date": "2011-06-02T20:39:43Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.amazonaws.services.s3.model.S3ObjectSummary.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(key.endsWith(\"/\"))) { java.net.URI keyUri = uri.resolve((\"/\" + key)); if (uriPredicate.apply(keyUri)) { uris.add(keyUri); if (io.crate.operation.collect.files.S3FileInput.logger.isDebugEnabled()) { io.crate.operation.collect.files.S3FileInput.logger.debug(\"{}\", keyUri); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7313/buggy-version/sql.src.main.java.io.crate.operation.collect.files.S3FileInput.java", "BodyUseAPI": ["java.net.URI.resolve(java.lang.String)"], "Fixed commit": "088fc1bff749fa241b174cd21fe8643b1e2443ff", "Url": "https://api.github.com/repos/crate/crate", "Date": "2015-09-28T07:59:02Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (scope != null) { this.fullName = shiro.expressions.Path.createFullName(scope.getFullName(), name); }else { this.fullName = name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2340/buggy-version/src.main.java.shiro.Node.java", "BodyUseAPI": [], "Fixed commit": "efebe55c0571a17665501a851a4fc045fd845fa1", "Url": "https://api.github.com/repos/jrguenther/shiro", "Date": "2014-04-09T21:53:40Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isSpectating.get(cmdsender)) != null) { if (isSpectating.get(cmdsender)) { if ((targetPlayer.getName()) == (target.get(cmdsender).getName())) { cmdsender.sendMessage(\"\ufffd7You are already spectating them.\"); return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1224/buggy-version/src.com.Chipmunk9998.Spectate.SpectateCommandExecutor.java", "BodyUseAPI": ["java.util.Map<org.bukkit.entity.Player, java.lang.Boolean>.get(org.bukkit.entity.Player)", "java.util.Map<org.bukkit.entity.Player, org.bukkit.entity.Player>.get(org.bukkit.entity.Player)", "org.bukkit.entity.Player.sendMessage(java.lang.String)", "target.get(cmdsender).getName()"], "Fixed commit": "985f54b06fb7bdea657d1ede87cb92949a1bc0f4", "Url": "https://api.github.com/repos/Chipmunk9998/Spectate", "Date": "2012-04-11T10:22:30Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cmdsender.getName()) == (targetPlayer.getName())) { cmdsender.sendMessage(\"\ufffd7Did you really just try to spectate yourself?\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1224/buggy-version/src.com.Chipmunk9998.Spectate.SpectateCommandExecutor.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(java.lang.String)"], "Fixed commit": "985f54b06fb7bdea657d1ede87cb92949a1bc0f4", "Url": "https://api.github.com/repos/Chipmunk9998/Spectate", "Date": "2012-04-11T10:22:30Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getEntity()) instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player p = ((org.bukkit.entity.Player) (event.getEntity())); if ((plugin.CommandExecutor.isSpectating.get(p)) != null) { if (plugin.CommandExecutor.isSpectating.get(p)) { event.setCancelled(true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1224/buggy-version/src.com.Chipmunk9998.Spectate.SpectateListener.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityRegainHealthEvent.getEntity()", "org.bukkit.event.entity.EntityRegainHealthEvent.setCancelled(boolean)"], "Fixed commit": "985f54b06fb7bdea657d1ede87cb92949a1bc0f4", "Url": "https://api.github.com/repos/Chipmunk9998/Spectate", "Date": "2012-04-11T10:22:30Z"},
{"Line": "=>1122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getNativeEvent().getKeyCode()) == 46) && ((event.getNativeEvent().getKeyCode()) == 37)) { ((com.google.gwt.user.client.ui.TextBox) (event.getSource())).cancelKey(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5780/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.collection.tab.assign.CollectionAssignTabView.java", "BodyUseAPI": ["com.google.gwt.event.dom.client.KeyPressEvent.getSource()", "((com.google.gwt.user.client.ui.TextBox) (event.getSource())).cancelKey()"], "Fixed commit": "9f80ea7e232c43d8738d612a71e35ff421f0bcaf", "Url": "https://api.github.com/repos/ssushma/Gooru-Web", "Date": "2014-10-08T10:45:47Z"},
{"Line": "=>865", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getNativeEvent().getKeyCode()) == 46) && ((event.getNativeEvent().getKeyCode()) == 37)) { ((com.google.gwt.user.client.ui.TextBox) (event.getSource())).cancelKey(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5780/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.classpages.tabitem.assignments.collections.CollectionsView.java", "BodyUseAPI": ["com.google.gwt.event.dom.client.KeyPressEvent.getSource()", "((com.google.gwt.user.client.ui.TextBox) (event.getSource())).cancelKey()"], "Fixed commit": "9f80ea7e232c43d8738d612a71e35ff421f0bcaf", "Url": "https://api.github.com/repos/ssushma/Gooru-Web", "Date": "2014-10-08T10:45:47Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getNativeEvent().getKeyCode()) == 46) && ((event.getNativeEvent().getKeyCode()) == 37)) { ((com.google.gwt.user.client.ui.TextBox) (event.getSource())).cancelKey(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5780/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.classpages.unitdetails.ScoreHedingView.java", "BodyUseAPI": ["((com.google.gwt.user.client.ui.TextBox) (event.getSource())).cancelKey()", "com.google.gwt.event.dom.client.KeyPressEvent.getSource()"], "Fixed commit": "9f80ea7e232c43d8738d612a71e35ff421f0bcaf", "Url": "https://api.github.com/repos/ssushma/Gooru-Web", "Date": "2014-10-08T10:45:47Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dockerCertPath != null) { this.sslConfig = new com.github.dockerjava.core.LocalDirectorySSLConfig(dockerCertPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/9196/buggy-version/src.main.java.com.github.dockerjava.core.DockerClientConfig.java", "BodyUseAPI": [], "Fixed commit": "408a320adefea160881dbf5036eaab09aa21a4f9", "Url": "https://api.github.com/repos/sabre1041/docker-java", "Date": "2015-03-20T22:49:56Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dockerClientConfig.getSslConfig()) != null) { try { sslContext = dockerClientConfig.getSslConfig().getSSLContext(); } catch (java.lang.Exception ex) { throw new com.github.dockerjava.api.DockerClientException(\"Error in SSL Configuration\", ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/9196/buggy-version/src.main.java.com.github.dockerjava.jaxrs.DockerCmdExecFactoryImpl.java", "BodyUseAPI": ["dockerClientConfig.getSslConfig().getSSLContext()", "com.github.dockerjava.core.DockerClientConfig.getSslConfig()"], "Fixed commit": "408a320adefea160881dbf5036eaab09aa21a4f9", "Url": "https://api.github.com/repos/sabre1041/docker-java", "Date": "2015-03-20T22:49:56Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (max == null) { return org.apache.tajo.datum.NullDatum.get(); }else { return max; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/611/buggy-version/tajo-core.src.main.java.org.apache.tajo.engine.function.builtin.Max.java", "BodyUseAPI": [], "Fixed commit": "96946489eaadb5418b2bcdb60b2f7c8f5b52588e", "Url": "https://api.github.com/repos/sirpkt/tajo", "Date": "2014-12-23T02:32:40Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min == null) { return org.apache.tajo.datum.NullDatum.get(); }else { return min; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/611/buggy-version/tajo-core.src.main.java.org.apache.tajo.engine.function.builtin.Min.java", "BodyUseAPI": [], "Fixed commit": "96946489eaadb5418b2bcdb60b2f7c8f5b52588e", "Url": "https://api.github.com/repos/sirpkt/tajo", "Date": "2014-12-23T02:32:40Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2148/buggy-version/src.org.qii.weiciyuan.ui.browser.BrowserWebFragment.java", "BodyUseAPI": [], "Fixed commit": "b7c1ffbefebedd870e291de5a9db91e9e3e59817", "Url": "https://api.github.com/repos/Max-Sum/weiciyuan", "Date": "2014-01-04T05:15:11Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pratilipiData.getCategoryIdList()) != null) for (java.lang.String genreName : pratilipiData.getCategoryNameList()) { docBuilder.addField(com.google.appengine.api.search.Field.newBuilder().setName(\"genre\").setText(genreName)); docBuilder.addField(com.google.appengine.api.search.Field.newBuilder().setName(\"genre\").setText(genreName)); docBuilder.addField(com.google.appengine.api.search.Field.newBuilder().setName(\"genre\").setText(genreName)); docBuilder.addField(com.google.appengine.api.search.Field.newBuilder().setName(\"genre\").setText(genreName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6289/buggy-version/src.main.java.com.pratilipi.data.SearchAccessorGaeImpl.java", "BodyUseAPI": ["com.pratilipi.data.client.PratilipiData.getCategoryNameList()"], "Fixed commit": "b4ffe5de96e57e3c02a70f879514ed5ae0e5b93d", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-07-27T11:03:10Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jsc.cactus.com.weanimal.g_animal.main.mission.view.MissionDialog.missionAdapter) == null) jsc.cactus.com.weanimal.g_animal.main.mission.view.MissionDialog.missionAdapter = new jsc.cactus.com.weanimal.g_animal.main.mission.view.MissionAdapter(getActivity(), R.layout.mission_item, jsc.cactus.com.weanimal.g_animal.main.mission.view.MissionDialog.items);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8883/buggy-version/app.src.main.java.jsc.cactus.com.weanimal.g_animal.main.mission.view.MissionDialog.java", "BodyUseAPI": [], "Fixed commit": "60780513c45f651dee120c6caa7d4d31c86002d3", "Url": "https://api.github.com/repos/nyyynyyy/WeAnimal", "Date": "2015-10-07T02:38:30Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ord) { result_list.setText(controller.getWordList(searchedText)); }else { result_list.setText(controller.getWordList(new java.lang.StringBuilder(searchedText).reverse().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5134/buggy-version/src.MainPanel.java", "BodyUseAPI": [], "Fixed commit": "3254850309a09a784e5280504f00ad470df69a68", "Url": "https://api.github.com/repos/FlorescuAndreea/CuSubstrat", "Date": "2013-07-24T08:20:01Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((base) == null) { return super.getProperties(includeSuperTypes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4224/buggy-version/modules.feature.geotk-feature.src.main.java.org.geotoolkit.feature.ViewFeatureType.java", "BodyUseAPI": [], "Fixed commit": "d373ca005699ffdd38e0ea3df9b78cc3825cbb19", "Url": "https://api.github.com/repos/Geomatys/geotoolkit", "Date": "2017-06-02T14:41:20Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (library.contains(card.getId())) { library.remove(card.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7883/buggy-version/Mage.src.mage.players.Library.java", "BodyUseAPI": ["mage.cards.Card.getId()", "java.util.Deque<java.util.UUID>.remove(card.getId())"], "Fixed commit": "73be785bc7a9b7fc59831048d69ac7aa4a59a474", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2012-06-03T12:11:48Z"},
{"Line": "=>1321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (callbackAutoAdded) { setCallbacks(new java.lang.String[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2323/buggy-version/flyway-core.src.main.java.org.flywaydb.core.Flyway.java", "BodyUseAPI": [], "Fixed commit": "ec9dadeb37d0ea36d571c21065e563b0f2195ec3", "Url": "https://api.github.com/repos/flyway/flyway", "Date": "2014-11-27T12:43:21Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mbid) != null) && (!((mbid.length()) == 0))) { return mbid; }else if (((name) != null) && (!((name.length()) == 0))) { return name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/136/buggy-version/app.src.main.java.com.osacky.hipsterviz.models.artist.TrackArtist.java", "BodyUseAPI": [], "Fixed commit": "820ecfa1e5e1fc472e8a68df7cd55d4238312833", "Url": "https://api.github.com/repos/runningcode/Hipster-Visualization", "Date": "2014-04-30T22:46:18Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (parentNode != null) { return \"Variable\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8718/buggy-version/src.main.java.org.ballerinalang.plugins.idea.usage.BallerinaFindUsageProvider.java", "BodyUseAPI": [], "Fixed commit": "20026c0a92f0f4842b3f9a7cddce6ab128530c08", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2017-07-24T05:47:18Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visited.isEmpty()) { targets.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8498/buggy-version/src.clueGame.Board.java", "BodyUseAPI": [], "Fixed commit": "88ca69b864be37ae89da8d11fa899b43262f8b5b", "Url": "https://api.github.com/repos/adamnelson97/ClueGame", "Date": "2017-10-23T11:48:32Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((visited.size()) == 1) && (visited.contains(cell))) { visited.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8498/buggy-version/src.clueGame.Board.java", "BodyUseAPI": ["java.util.Set<clueGame.BoardCell>.clear()"], "Fixed commit": "88ca69b864be37ae89da8d11fa899b43262f8b5b", "Url": "https://api.github.com/repos/adamnelson97/ClueGame", "Date": "2017-10-23T11:48:32Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.spo.fw.service.DriverFactory.state) == (Constants.LifeCycleState.STOPPED)) { org.spo.fw.service.DriverFactory.log.error(\"Trying to stop a Stopped DriverFactory\"); return; }else { throw new org.spo.fw.exception.ServiceLifeCycleException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2230/buggy-version/src.main.java.org.spo.fw.service.DriverFactory.java", "BodyUseAPI": [], "Fixed commit": "7f48e7cd4b2608470b234327357dd9b86465f770", "Url": "https://api.github.com/repos/premganz/SeleniumPageObjects", "Date": "2015-08-25T12:27:07Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hello.jwt.TokenAuthUtil.parseToken(javax.servlet.ServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (username != null) org.springframework.security.core.context.SecurityContextHolder.getContext().setAuthentication(new org.springframework.security.authentication.UsernamePasswordAuthenticationToken(username, null, java.util.Collections.emptyList()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6198/buggy-version/src.main.java.hello.jwt.JWTAuthenticationFilter.java", "BodyUseAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().setAuthentication(org.springframework.security.authentication.UsernamePasswordAuthenticationToken)"], "Fixed commit": "4a3ff7e75ab70ecab1286f2e92f80b9dfaf12442", "Url": "https://api.github.com/repos/ZhongjunTian/spring-boot-jwt-demo", "Date": "2017-04-29T00:24:40Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bothAreOpen()) { closeEndTime = (java.lang.System.currentTimeMillis()) + (closeTime); mode = com.coderedrobotics.tiberius.Petals.CLOSE_ONTO_BALL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2412/buggy-version/src.com.coderedrobotics.tiberius.Petals.java", "BodyUseAPI": [], "Fixed commit": "803f687f91cc7a12e6afcb5c1a7b417c0684fb35", "Url": "https://api.github.com/repos/CodeRed2771/Tiberius2014", "Date": "2014-02-26T02:27:38Z"},
{"Line": "=>842", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.client.mvp.gsearch.addResourcePopup.SearchAddResourceToCollectionView.FolderTreeItem.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((getStatus()) && (org.ednovo.gooru.client.mvp.gsearch.addResourcePopup.LESSON.equalsIgnoreCase(foldertypevalue))) { enableDisableAddBtn(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7465/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gsearch.addResourcePopup.SearchAddResourceToCollectionView.java", "BodyUseAPI": [], "Fixed commit": "be7e6a66c09798b7b71c7d027332e2df08b69421", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-09-28T11:35:34Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((vertexPlan.getInputsCount()) > 0) { setAdditionalInputs(vertexPlan.getInputsList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3740/buggy-version/tez-dag.src.main.java.org.apache.tez.dag.app.dag.impl.VertexImpl.java", "BodyUseAPI": [], "Fixed commit": "751920750e8c3bcab1d17917f51630a62feaa531", "Url": "https://api.github.com/repos/apache/incubator-tez", "Date": "2013-10-09T22:53:34Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((vertexPlan.getOutputsCount()) > 0) { setAdditionalOutputs(vertexPlan.getOutputsList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3740/buggy-version/tez-dag.src.main.java.org.apache.tez.dag.app.dag.impl.VertexImpl.java", "BodyUseAPI": [], "Fixed commit": "751920750e8c3bcab1d17917f51630a62feaa531", "Url": "https://api.github.com/repos/apache/incubator-tez", "Date": "2013-10-09T22:53:34Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5577/buggy-version/src.com.game.othello.ChessRule.java", "BodyUseAPI": [], "Fixed commit": "e9e3384a1942134042db1e089d7a268ea236d830", "Url": "https://api.github.com/repos/TimBao/Android_Othello", "Date": "2014-02-12T10:07:41Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loaded) { reload(new byte[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/50/buggy-version/config-core.src.main.java.com.github.autoconf.impl.RemoteConfig.java", "BodyUseAPI": [], "Fixed commit": "9c915facb3d6a82d360068f13d5b8bf97a7cfb63", "Url": "https://api.github.com/repos/colin-lee/autoconf", "Date": "2015-10-24T13:22:30Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((existing != null) && (runStatus != (co.cask.cdap.proto.ProgramRunStatus.FAILED))) { throw new java.lang.UnsupportedOperationException(java.lang.String.format(\"Cannot record program %s in status %s\", programId, runStatus)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1456/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.internal.app.store.AppMetadataStore.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,co.cask.cdap.proto.id.ProgramId,co.cask.cdap.proto.ProgramRunStatus)"], "Fixed commit": "2fa06e845cb6f199b13429b482162c698dfc6bfb", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2017-07-20T17:50:15Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.moma.bi.member.mapper.MemberMapper.selectVipDetailConcatFromVipConsumeDetail(detail.getVipCode())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (consume != null) { detail.setRecentConsume(consume.getRecentConsume()); detail.setConsumeTime(consume.getConsumeTime()); if ((detail.getTel()) != null) { com.moma.bi.member.modal.bo.VipDetailConcat flow = memberMapper.selectVipDetailConcatFromFlow(detail.getTel()); if (flow != null) { detail.setRecentVisit(flow.getRecentVisit()); detail.setAverageStay(flow.getAverageStay()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1722/buggy-version/member.src.main.java.com.moma.bi.member.service.impl.MemberServiceImpl.java", "BodyUseAPI": ["com.moma.bi.member.modal.bo.VipDetailConcat.getConsumeTime()", "com.moma.bi.member.service.impl.VipDetail.setConsumeTime(consume.getConsumeTime())", "com.moma.bi.member.service.impl.VipDetail.setRecentConsume(consume.getRecentConsume())", "com.moma.bi.member.modal.bo.VipDetailConcat.getRecentConsume()"], "Fixed commit": "ace62e0bac81cbeaf7df0c9758598e9049e8289d", "Url": "https://api.github.com/repos/PATHochai1027/apiPriLab", "Date": "2017-12-11T08:42:30Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((is0lates.GrandExchangeAlcher.GrandExchangeAlcher.f2pItemsOnly) || (!(isMember()))) && (alchItem.members)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/601/buggy-version/src.is0lates.GrandExchangeAlcher.GrandExchangeAlcher.java", "BodyUseAPI": [], "Fixed commit": "a627929c0f5e47982708879dccd5982b8675f732", "Url": "https://api.github.com/repos/powerbot/powerbot", "Date": "2016-04-20T12:03:29Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jpac.hackernews.data.Comments.getComment()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(main.getText())) { holder.commentAuthor.setVisibility(View.GONE); holder.commentTime.setVisibility(View.GONE); holder.commentContent.setText(\"This comment has been deleted.\"); }else { holder.commentAuthor.setVisibility(View.VISIBLE); holder.commentTime.setVisibility(View.VISIBLE); holder.commentContent.setText(android.text.Html.fromHtml(main.getText())); holder.commentAuthor.setText(main.getBy()); holder.commentTime.setText(com.jpac.hackernews.utils.Utils.getTimeAgo(main.getTime())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7492/buggy-version/HackerNews.app.src.main.java.com.jpac.hackernews.data.CommentsAdapter.java", "BodyUseAPI": ["holder.commentContent.setText(android.text.Html.fromHtml(main.getText()))", "com.jpac.hackernews.data.News.getText()", "holder.commentTime.setText(com.jpac.hackernews.utils.Utils.getTimeAgo(main.getTime()))", "com.jpac.hackernews.utils.Utils.getTimeAgo(main.getTime())", "holder.commentAuthor.setText(main.getBy())", "com.jpac.hackernews.data.News.getTime()", "android.text.Html.fromHtml(main.getText())", "com.jpac.hackernews.data.News.getBy()"], "Fixed commit": "6fb2132da1dafbff2e1be22aed8f675592af2ef5", "Url": "https://api.github.com/repos/kishido05/hackernewsreader-jpac", "Date": "2015-07-25T15:16:37Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(params.contains(file.toString()))) params.add(file.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3912/buggy-version/src.gool.executor.cpp.CppCompiler.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.io.File.toString()"], "Fixed commit": "d0a7750d77724d98a0aa28e4055fcbf2080f499f", "Url": "https://api.github.com/repos/librecoop/GOOL", "Date": "2013-05-28T11:38:03Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(shouldListen)) { callbackContext.error(\"Geen identiteitskaart gevonden...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1001/buggy-version/src.android.org.cordova.eid.EidReaderGrabba.java", "BodyUseAPI": [], "Fixed commit": "08f35ed2f3a57fa914c7e7e72e7ccd6c08d0097b", "Url": "https://api.github.com/repos/aximobile/cordova-plugin-eid", "Date": "2017-04-03T14:34:10Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mService) != null) mService.setBeaconEventListener(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2010/buggy-version/library.src.main.java.house.heka.eddytooth.scan.EddyScan.java", "BodyUseAPI": [], "Fixed commit": "5bd03fef20fe19de594de3ee8e497d3368d621d0", "Url": "https://api.github.com/repos/HekaHouse/EddyTooth", "Date": "2016-06-01T17:39:15Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (session != null) { if (!(com.liferay.portal.util.PropsValues.SPRING_HIBERNATE_SESSION_DELEGATED)) { session.flush(); session.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1414/buggy-version/portal-impl.src.com.liferay.portal.dao.orm.hibernate.SessionFactoryImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.dao.orm.Session.flush()", "com.liferay.portal.kernel.dao.orm.Session.close()"], "Fixed commit": "b4bd78115eab827a0b9274eed0c1af5ce7d56d2f", "Url": "https://api.github.com/repos/matethurzo/liferay-portal", "Date": "2012-11-19T19:09:08Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (session != null) { session.flush(); if (!(com.liferay.portal.util.PropsValues.SPRING_HIBERNATE_SESSION_DELEGATED)) { session.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1414/buggy-version/portal-impl.src.com.liferay.portal.dao.orm.hibernate.PortletSessionFactoryImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.dao.orm.Session.close()", "com.liferay.portal.kernel.dao.orm.Session.flush()"], "Fixed commit": "b4bd78115eab827a0b9274eed0c1af5ce7d56d2f", "Url": "https://api.github.com/repos/matethurzo/liferay-portal", "Date": "2012-11-19T19:09:08Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"div\".equals(localName)) { currentRef.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4635/buggy-version/pn-dispatcher.src.main.java.info.papyri.dispatch.CTSPassageServlet.java", "BodyUseAPI": [], "Fixed commit": "663be6eee53cde431efdafd8ee8ae0fd96c5f7eb", "Url": "https://api.github.com/repos/papyri/navigator", "Date": "2012-11-16T16:07:02Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.startsWith(PlaceDM.ID)) { return new VASL.build.module.PlaceDM(type, inner); }else if (type.startsWith(Translate.ID)) { return new VASL.build.module.ASLTranslate(type, inner); }else if (type.startsWith(ASLAreaOfEffect.ID)) { return new VASL.build.module.ASLAreaOfEffect(type, inner); }else if (type.startsWith(ASLAreaOfEffectDL.ID)) { return new VASL.build.module.ASLAreaOfEffectDL(type, inner); }else { return super.createDecorator(type, inner); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/383/buggy-version/src.VASL.build.module.ASLCommandEncoder.java", "BodyUseAPI": ["VASSAL.build.module.BasicCommandEncoder.createDecorator(java.lang.String,VASL.build.module.GamePiece)", "java.lang.String.startsWith(ASLAreaOfEffect.ID)", "java.lang.String.startsWith(ASLAreaOfEffectDL.ID)", "java.lang.String.startsWith(Translate.ID)"], "Fixed commit": "c69a1bd8628fcf0052388fafeac2e752bf49c570", "Url": "https://api.github.com/repos/vasl-developers/vasl", "Date": "2013-12-08T19:56:26Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (refQualified.qualifiedId.isMissing()) { return qualifier; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2992/buggy-version/plugin_tooling.src.dtool.parser.DeeParser_RefOrExp.java", "BodyUseAPI": [], "Fixed commit": "f5e27d577b77c3071a671dafbe559089a193d11e", "Url": "https://api.github.com/repos/DDT-IDE/DDT", "Date": "2015-03-16T18:26:51Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (type_configured == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1330/buggy-version/src.main.us.exultant.mdm.MdmModuleSet.java", "BodyUseAPI": [], "Fixed commit": "e8a0be9974da8cd95a2bbeaad3e0c05857e6f5c9", "Url": "https://api.github.com/repos/heavenlyhash/mdm", "Date": "2013-07-13T02:55:28Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((registration.getDegree()) != null) && ((registration.getDegree().getEctsCredits()) != null)) { possibleECTS = possibleECTS.add(new java.math.BigDecimal(registration.getDegree().getEctsCredits())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7581/buggy-version/src.main.java.net.sourceforge.fenixedu.domain.mobility.outbound.OutboundMobilityCandidacySubmission.java", "BodyUseAPI": [], "Fixed commit": "5471d49d7b41b6590f293b79eda32ebcbd47176a", "Url": "https://api.github.com/repos/jcarvalho/fenix", "Date": "2014-02-18T13:19:09Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((android.text.TextUtils.isEmpty(message)) || (type == null)) || (view == null)) || (context == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7185/buggy-version/adisnackbarlib.src.main.java.cl.uchile.ing.adi.adisnackbarlib.ADISnackbar.java", "BodyUseAPI": [], "Fixed commit": "c64023b774060e636680b6c6a6eddfcafc6aa3a9", "Url": "https://api.github.com/repos/badgercl/ADISnackbar", "Date": "2017-03-27T13:21:51Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<jetbrains.buildServer.agent.AgentRunningBuild, jetbrains.buildServer.agent.BuildFinishedStatus>.get(runner.getBuild())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((previousStepStatus == null) || (previousStepStatus.equals(BuildFinishedStatus.FINISHED_SUCCESS))) { statuses.put(runner.getBuild(), status); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3712/buggy-version/teamcity-gerrit-agent.src.com.maxifier.teamcity.gerrit.GerritBuildProcessFactory.java", "BodyUseAPI": [], "Fixed commit": "f9c99ff80cbff2e4f08c5c167ca34aa37e456d21", "Url": "https://api.github.com/repos/maxifier/teamcity-gerrit-plugin", "Date": "2013-02-12T07:46:06Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pTypes != null) { for (int i = 0; i < (pTypes.length); i++) { if ((pTypesStr.length()) > 0) pTypesStr.append(\", \"); if ((pTypes[i]) == null) pTypesStr.append(\"NULL\"); pTypesStr.append(pTypes[i].getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8871/buggy-version/src.tap.config.TAPConfiguration.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)", "java.lang.Class<?>.getName()"], "Fixed commit": "d8f409fad6bb8a27070ae0afe5d2e27a2f694d6c", "Url": "https://api.github.com/repos/aoberto/taplib", "Date": "2015-06-02T15:40:39Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jaggeryjs.scriptengine.util.Scriptable.getClassName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"Error\".equals(jsClass)) { return org.jaggeryjs.scriptengine.util.HostObjectUtil.serializeNativeError(object); }else if (\"String\".equals(jsClass)) { return obj.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2885/buggy-version/components.script-engine.org.jaggeryjs.scriptengine.src.main.java.org.jaggeryjs.scriptengine.util.HostObjectUtil.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "d1a15a9d9758996dac18435d52fa929f6aa97bdd", "Url": "https://api.github.com/repos/dulichan/jaggery", "Date": "2013-11-06T10:59:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action.equals(\"goToCheckout\")) { url = \"/checkout.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8205/buggy-version/src.java.edu.elon.library.LibraryServlet.java", "BodyUseAPI": [], "Fixed commit": "290e9aca41e228985bef116e672f26221591bb8c", "Url": "https://api.github.com/repos/pburnett/homework4", "Date": "2016-12-07T14:12:20Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.getRemoveItem()", "T.getAddItem()", "T.getRemoveItem()", "T.getAddItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((add1 && remove2) || (remove1 && add2)) { if (!(removeChildren.contains(child1))) removeChildren.add(child1); if (!(removeChildren.contains(child2))) removeChildren.add(child2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4199/buggy-version/src.main.java.com.redhat.topicindex.rest.collections.BaseRestCollectionV1.java", "BodyUseAPI": [], "Fixed commit": "7e602e11446327414fb10a73fff20f45e0f0b73f", "Url": "https://api.github.com/repos/mcasperson/Common-utilities", "Date": "2012-07-09T23:04:24Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRoot) != null) { for (int i = 0; i < (mColumnCount); i++) { org.gdg.frisbee.android.view.ListView lv = ((org.gdg.frisbee.android.view.ListView) (mRoot.getChildAt(i))); if ((lv.getFirstVisiblePosition()) > val) val = lv.getFirstVisiblePosition(); } timber.log.Timber.d((\"Visible: \" + val)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1932/buggy-version/app.src.main.java.org.gdg.frisbee.android.view.MyView.java", "BodyUseAPI": [], "Fixed commit": "f250b32ec7f4bb371e305716d5c7059c7536bd17", "Url": "https://api.github.com/repos/jmsalcido/frisbee", "Date": "2014-06-21T13:54:28Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (userAux != null) { luserid.remove(userAux); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3623/buggy-version/cleia.cleia-dao.src.main.java.com.abada.cleia.dao.impl.UserDaoImpl.java", "BodyUseAPI": ["java.util.List<com.abada.cleia.entity.user.User>.remove(com.abada.cleia.entity.user.User)"], "Fixed commit": "621b7c2d4f3c8ce8c27fa9d375dfd3baff30d387", "Url": "https://api.github.com/repos/abada-investigacion/cleia", "Date": "2013-09-17T08:44:38Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((zombie.getEquipment().getItemInHand()) != null) { zombie.getWorld().dropItemNaturally(zombie.getLocation(), zombie.getEquipment().getItemInHand()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3446/buggy-version/src.com.github.cman85.PvPTag.PvPLoggerZombie.java", "BodyUseAPI": ["zombie.getWorld().dropItemNaturally(zombie.getLocation(),zombie.getEquipment().getItemInHand())", "zombie.getEquipment().getItemInHand()", "org.bukkit.entity.Zombie.getLocation()", "org.bukkit.entity.Zombie.getEquipment()", "org.bukkit.entity.Zombie.getWorld()"], "Fixed commit": "b45937af14b04beb08eaf2b37e59d0c30eaab2d4", "Url": "https://api.github.com/repos/ptoal/PvPTag", "Date": "2013-06-21T02:17:29Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ex instanceof org.sagebionetworks.client.exceptions.SynapseBadRequestException) { return new org.sagebionetworks.web.shared.exceptions.BadRequestException(ex.getMessage()); }else if (ex instanceof org.sagebionetworks.client.exceptions.SynapseNotFoundException) { return new org.sagebionetworks.web.shared.exceptions.NotFoundException(ex.getMessage()); }else if (ex instanceof org.sagebionetworks.client.exceptions.SynapseUnauthorizedException) { return new org.sagebionetworks.web.shared.exceptions.UnauthorizedException(ex.getMessage()); }else if ((ex instanceof org.sagebionetworks.client.exceptions.SynapseUserException) && (ex.getMessage().contains(\"(409)\"))) { return new org.sagebionetworks.web.shared.exceptions.ConflictException(ex.getMessage()); }else { return new org.sagebionetworks.web.shared.exceptions.UnknownErrorException(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/209/buggy-version/src.main.java.org.sagebionetworks.web.shared.exceptions.ExceptionUtil.java", "BodyUseAPI": ["org.sagebionetworks.client.exceptions.SynapseException.getMessage()", "org.sagebionetworks.client.exceptions.SynapseException.getMessage()", "org.sagebionetworks.client.exceptions.SynapseException.getMessage()", "org.sagebionetworks.client.exceptions.SynapseException.getMessage()", "org.sagebionetworks.client.exceptions.SynapseException.getMessage()", "ex.getMessage().contains(java.lang.String)", "org.sagebionetworks.client.exceptions.SynapseException.getMessage()"], "Fixed commit": "8847fc028e0fcfca774fb14e0f306f142563686c", "Url": "https://api.github.com/repos/Sage-Bionetworks/SynapseWebClient", "Date": "2012-12-14T00:18:19Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (heroBasicAttack <= 40) { heroBasicAttack = 40; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2440/buggy-version/UniSurvivalHorror.src.LevelUACEG.java", "BodyUseAPI": [], "Fixed commit": "14098e7d8bb1d73af6c0da53ae491adf733afc91", "Url": "https://api.github.com/repos/Mexico-Team/Java-Game", "Date": "2015-02-03T12:17:59Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cars != null) { com.wsb.biz.service.CarBO.getCarBO().update(cars, customer.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8777/buggy-version/src.wsb.src.com.wsb.biz.service.CustomerBO.java", "BodyUseAPI": ["com.wsb.biz.service.CarBO.getCarBO().update(java.util.List<com.wsb.biz.entity.Car>,customer.getId())"], "Fixed commit": "467888c7449484341ccc0efa363bb72d014b8fea", "Url": "https://api.github.com/repos/virgilchen/wsb", "Date": "2015-01-17T14:35:14Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getConfig().getBoolean(\"dynMapSupport\")) == true) { removeFromDynMap(w); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/962/buggy-version/src.com.github.sessional.waypoints.WpsPlugin.java", "BodyUseAPI": [], "Fixed commit": "6a166207d9af81832e98b7b4dc79037d85468b86", "Url": "https://api.github.com/repos/Sessional/Waypoints", "Date": "2012-04-12T02:08:33Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.script.ScriptEngine.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resultList == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3309/buggy-version/imixs-workflow-engine.src.main.java.org.imixs.workflow.plugins.RulePlugin.java", "BodyUseAPI": [], "Fixed commit": "183ca215d05c59e34964fe306bfd145a6648df69", "Url": "https://api.github.com/repos/imixs/imixs-workflow", "Date": "2015-12-23T16:06:52Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.script.ScriptEngine.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"[undefined]\".equals(resultList.toString())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3309/buggy-version/imixs-workflow-engine.src.main.java.org.imixs.workflow.plugins.RulePlugin.java", "BodyUseAPI": [], "Fixed commit": "183ca215d05c59e34964fe306bfd145a6648df69", "Url": "https://api.github.com/repos/imixs/imixs-workflow", "Date": "2015-12-23T16:06:52Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fragmentMedia.isOpened())) { if (!(fragmentMedia.open(keepFileName))) { new android.support.v7.app.AlertDialog.Builder(this).setIcon(R.drawable.ic_error_black_24dp).setTitle(R.string.audio_error_dialog_title).setMessage(R.string.audio_error_dialog_message).setNeutralButton(R.string.audio_error_dialog_neutral, null).show(); }else buttonRecord.setEnabled(false); }else { fragmentMedia.close(); buttonRecord.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1784/buggy-version/app.src.main.java.diy.uimedia.AudioRecorderActivity.java", "BodyUseAPI": ["diy.uimedia.MediaPlayerFragment.close()", "diy.uimedia.MediaPlayerFragment.open(java.lang.String)"], "Fixed commit": "c55192a0f4c5253fe42668bfe08ec94b871ccdda", "Url": "https://api.github.com/repos/taworn/uimedia", "Date": "2016-06-11T09:06:47Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["backtype.storm.spout.Scheme.deserialize(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (o == null) return null; else return java.util.Arrays.asList(o);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/429/buggy-version/src.jvm.backtype.storm.spout.SchemeAsMultiScheme.java", "BodyUseAPI": ["java.util.Arrays.asList(java.util.List<java.lang.Object>)"], "Fixed commit": "cf7cb81451b8bf6f50d4f836b30aef8fb68570fb", "Url": "https://api.github.com/repos/lorcan/storm", "Date": "2013-01-10T12:18:06Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cameraInfo.facing) == (Camera.CameraInfo.CAMERA_FACING_BACK)) { if (isScreenOriatationPortrait()) { if ((cameraInfo.orientation) == 90) { mediaRecorder.setOrientationHint(90); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6316/buggy-version/SkyEyeDemo.src.main.java.com.xmh.skyeyedemo.utils.CameraHelper.java", "BodyUseAPI": [], "Fixed commit": "78a207e7eb63718a53ad8340969e42250b3e9d8f", "Url": "https://api.github.com/repos/xmh19936688/SkyeyeProject", "Date": "2016-03-08T06:26:50Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getMySchedule(context).getLectures().size()) != 0) { for (de.hof.university.app.model.schedule.LectureItem lectureItem : lecturesItems) { de.hof.university.app.calendar.CalendarInterfaceController.getInstance(context).createAllEvents(lectureItem); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/676/buggy-version/app.src.main.java.de.hof.university.app.data.DataManager.java", "BodyUseAPI": ["de.hof.university.app.calendar.CalendarInterfaceController.getInstance(android.content.Context)", "de.hof.university.app.calendar.CalendarInterfaceController.getInstance(context).createAllEvents(de.hof.university.app.model.schedule.LectureItem)"], "Fixed commit": "b9310687699a11504d752e04b970ee65d0d1f18a", "Url": "https://api.github.com/repos/HochschuleHofStundenplanapp/AndroidStundenplanHof", "Date": "2017-06-16T16:55:49Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["en.location.grid.findPath(entity.BaseEntity,en.location.row,en.location.col,t.row,t.col)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((path == null) || ((path.size()) == 0)) return 9999;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4659/buggy-version/src.level.Intelligence.java", "BodyUseAPI": [], "Fixed commit": "e95afb08803b4df82e02b22935db4c916d2f8501", "Url": "https://api.github.com/repos/dantetam/aiterraingen", "Date": "2016-01-22T00:33:20Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tweet.contains(\"RT @\"))) { java.lang.String before = tweet.split(\" @\")[0]; java.lang.String sub = \"@\" + (tweet.split(\" @\")[1]); com.example.fantasyfootballrankings.ClassFiles.LittleStorage.NewsObjects obj = new com.example.fantasyfootballrankings.ClassFiles.LittleStorage.NewsObjects(before, sub, \"\"); newsList.add(obj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2950/buggy-version/FFR.src.com.example.fantasyfootballrankings.ClassFiles.PlayerNewsActivity.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "3119bd0155ba197cfdc79172d6034c080b4000de", "Url": "https://api.github.com/repos/jbailey2010/FFR", "Date": "2014-04-24T05:55:17Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!winningLastVersionDeleted) { org.syncany.operations.down.actions.FileSystemAction action = new org.syncany.operations.down.actions.ChangeFileSystemAction(config, localLastVersion, winningLastVersion, winnersDatabase); fileSystemActions.add(action); org.syncany.operations.down.FileSystemActionReconciliator.logger.log(java.util.logging.Level.INFO, (((((\" -> (14) Content changed: Local file does NOT exist, and winning version changed: local file = \" + localLastFile) + \", local version = \") + localLastVersion) + \", winning version = \") + winningLastVersion)); org.syncany.operations.down.FileSystemActionReconciliator.logger.log(java.util.logging.Level.INFO, (\" -> \" + action)); changeSet.getChangedFiles().add(winningLastVersion.getPath()); }else { org.syncany.operations.down.FileSystemActionReconciliator.logger.log(java.util.logging.Level.INFO, (((((\" -> (15) Doing nothing: Local file does NOT exist, and winning version is marked DELETED: local file = \" + localLastFile) + \", local version = \") + localLastVersion) + \", winning version = \") + winningLastVersion)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4595/buggy-version/syncany-lib.src.main.java.org.syncany.operations.down.FileSystemActionReconciliator.java", "BodyUseAPI": [], "Fixed commit": "89076f068baeb4504e0a370d142d08dc24182114", "Url": "https://api.github.com/repos/syncany/syncany", "Date": "2014-08-16T14:58:08Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getIndexOfStep()) > (task.getLifetime())) task.setCompleted(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2292/buggy-version/energy2d.src.org.concord.energy2d.system.TaskManager.java", "BodyUseAPI": ["org.concord.energy2d.system.Task.setCompleted(boolean)"], "Fixed commit": "5603b21aee001c0c7e9b5b4439788609b6e77c78", "Url": "https://api.github.com/repos/charxie/energy2d", "Date": "2017-07-13T12:09:36Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.size()) > position) { return list.get(position).getSortLetters().charAt(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/567/buggy-version/app.src.main.java.xu.ferris.azapps.SortGroupMemberAdapter.java", "BodyUseAPI": ["java.util.List<xu.ferris.azapps.GroupMemberBean>.get(int)", "list.get(position).getSortLetters().charAt(int)", "list.get(position).getSortLetters()"], "Fixed commit": "0ccadda93059f07ff1a580d7acbca88494dca837", "Url": "https://api.github.com/repos/chongbo2013/AZApps", "Date": "2017-12-14T06:50:44Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((focusRect.left) >= (focusRect.right)) || ((focusRect.top) >= (focusRect.bottom))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8787/buggy-version/library.src.main.java.org.mariotaku.simplecamera.CameraView.java", "BodyUseAPI": [], "Fixed commit": "4a5fb7856ab32e345b6a50e36294066c370b732d", "Url": "https://api.github.com/repos/mariotaku/SimpleCameraLibrary", "Date": "2014-09-15T02:47:47Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mariotaku.simplecamera.CameraView.newVideoRecordConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (config == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8787/buggy-version/sample.src.main.java.org.mariotaku.simplecamera.sample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4a5fb7856ab32e345b6a50e36294066c370b732d", "Url": "https://api.github.com/repos/mariotaku/SimpleCameraLibrary", "Date": "2014-09-15T02:47:47Z"},
{"Line": "=>1823", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 1) { javax.swing.JOptionPane.showMessageDialog(org.concord.energy3d.gui.MainFrame.getInstance(), \"There are multiple buildings. You must select a building first.\", \"No Selection\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }else { javax.swing.JOptionPane.showMessageDialog(org.concord.energy3d.gui.MainFrame.getInstance(), \"There is no building.\", \"No Building\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1949/buggy-version/src.main.java.org.concord.energy3d.scene.SceneManager.java", "BodyUseAPI": [], "Fixed commit": "50c23b308eda8283b3e4ab56353774ab32bd0b6b", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2016-03-09T18:51:08Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.isDrawable()) org.concord.energy3d.scene.Scene.getInstance().add(p, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1949/buggy-version/src.main.java.org.concord.energy3d.undo.RemoveMultiplePartsOfSameTypeCommand.java", "BodyUseAPI": ["org.concord.energy3d.scene.Scene.getInstance().add(org.concord.energy3d.model.HousePart,boolean)"], "Fixed commit": "50c23b308eda8283b3e4ab56353774ab32bd0b6b", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2016-03-09T18:51:08Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((str.length()) > 0) && (!(str.endsWith(\";\")))) str += \";\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/694/buggy-version/src.main.java.org.quantumbadger.redreader.io.WritableHashSet.java", "BodyUseAPI": [], "Fixed commit": "33dd4a81813ead264cde2a3a48ac6d889c8a11c8", "Url": "https://api.github.com/repos/nikolaychernov/RedReader", "Date": "2014-07-28T08:02:51Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.insertOrThrow(java.lang.String,<nulltype>,android.content.ContentValues)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result < 0) throw new java.lang.RuntimeException(\"Bulk database write failed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/694/buggy-version/src.main.java.org.quantumbadger.redreader.io.RawObjectDB.java", "BodyUseAPI": [], "Fixed commit": "33dd4a81813ead264cde2a3a48ac6d889c8a11c8", "Url": "https://api.github.com/repos/nikolaychernov/RedReader", "Date": "2014-07-28T08:02:51Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.insertOrThrow(java.lang.String,<nulltype>,android.content.ContentValues)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result < 0) throw new java.lang.RuntimeException(\"Database write failed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/694/buggy-version/src.main.java.org.quantumbadger.redreader.io.RawObjectDB.java", "BodyUseAPI": [], "Fixed commit": "33dd4a81813ead264cde2a3a48ac6d889c8a11c8", "Url": "https://api.github.com/repos/nikolaychernov/RedReader", "Date": "2014-07-28T08:02:51Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rawResult.containsKey(id)) && ((rawResult.get(id)) != null)) { result.add(rawResult.get(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2936/buggy-version/components.vocabularies.api.src.main.java.org.phenotips.vocabulary.internal.solr.AbstractSolrVocabulary.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.phenotips.vocabulary.VocabularyTerm>.get(java.lang.String)", "java.util.Set<org.phenotips.vocabulary.VocabularyTerm>.add(rawResult.get(id))"], "Fixed commit": "2a7498d214f61206f5da86ebc83fdf6b55c8661a", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2017-02-07T22:00:43Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != versionName) && (!(versionName.isEmpty()))) { this.version = new com.github.yeriomin.yalpstore.model.Version(versionName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5021/buggy-version/app.src.main.java.com.github.yeriomin.yalpstore.model.App.java", "BodyUseAPI": [], "Fixed commit": "8370a2d767f4396417554040514e397fe1676944", "Url": "https://api.github.com/repos/yeriomin/YalpStore", "Date": "2017-01-11T01:11:21Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataSet.size()) != 0) { for (data.Point p : dataSet) { data.Cluster nearestCluster = getNearestCluster(p); nearestCluster.addPoint(p); dataSet.remove(p); nearestCluster.calculateCentroid(); } }else { stillShifting = false; for (data.Cluster c : clusters) { for (data.Point p : c.getPoints()) { data.Cluster nearestCluster = getNearestCluster(p); if (nearestCluster != c) { nearestCluster.addPoint(p); c.removePoint(p); c.calculateCentroid(); nearestCluster.calculateCentroid(); stillShifting = true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6525/buggy-version/src.main.java.algorithms.Kmeans.java", "BodyUseAPI": ["java.util.List<data.Point>.remove(data.Point)"], "Fixed commit": "21402613f44fedfb40ad07d4d07f66b92a793680", "Url": "https://api.github.com/repos/markhun/univie-SDM_K-means", "Date": "2017-03-31T11:24:06Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(m_collectCorpusStats)) { return term; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8651/buggy-version/src.topicmodels.ParentChildBase_Gibbs.java", "BodyUseAPI": [], "Fixed commit": "cdab4bd463d56c05bb91b721e6fcec8ff7f0c72d", "Url": "https://api.github.com/repos/Linda-sunshine/IR_Base", "Date": "2016-05-23T01:07:17Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((topStories == null) || ((topStories.size()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1430/buggy-version/app.src.main.java.com.zxw.madaily.adapter.TopStoryAdapter.java", "BodyUseAPI": [], "Fixed commit": "bd02bf7437a8e0411f58075798aafe7c256e8f08", "Url": "https://api.github.com/repos/xzwszl/MZhihuDaily", "Date": "2015-09-15T03:13:19Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.beginLine) > 0) { line[0] = java.lang.Math.min(line[0], ((node.beginLine) - 1)); }else { org.python.pydev.core.log.Log.log((((\"Found node with beginLine <= 0:\" + node) + \" line: \") + (node.beginLine))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3114/buggy-version/plugins.org.python.pydev.refactoring.src.org.python.pydev.refactoring.coderefactoring.extractlocal.edit.CreateLocalVariableEdit.java", "BodyUseAPI": ["java.lang.Math.min(int,((node.beginLine) - 1))", "org.python.pydev.core.log.Log.log((((\"Found node with beginLine <= 0:\" + node) + \" line: \") + (node.beginLine)))"], "Fixed commit": "521c18ef077285bc6a1fed3ac3918edd51fc002e", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-11-07T22:30:15Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((coordinates[net.canadensys.processor.geography.CoordinatePairProcessor.LATITUDE_IDX]) != null) && (!(net.canadensys.processor.geography.CoordinatePairProcessor.CHECK_LATITUDE.matcher(coordinates[net.canadensys.processor.geography.CoordinatePairProcessor.LATITUDE_IDX]).find()))) { if (result != null) { result.addError(java.text.MessageFormat.format(resourceBundle.getString(\"coordinatePair.error.noLatitude\"), coordinatePair)); } coordinates = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2835/buggy-version/src.main.java.net.canadensys.processor.geography.CoordinatePairProcessor.java", "BodyUseAPI": [], "Fixed commit": "cd4bd7706afb5d879cc24faab56f36b637f9abdc", "Url": "https://api.github.com/repos/Canadensys/narwhal-processor", "Date": "2013-03-04T18:59:05Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sbuf.length()) > 0) { newReplicas = sbuf.substring(0, ((sbuf.length()) - 1)).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1894/buggy-version/src.org.sstore.server.metaserver.MetaServer.java", "BodyUseAPI": ["java.lang.String.toString()", "java.lang.StringBuffer.substring(int,int)", "java.lang.StringBuffer.length()"], "Fixed commit": "58ca7e9362bfcef4bc0d9944561ccca28dae11f5", "Url": "https://api.github.com/repos/lbcdev/sstore", "Date": "2017-07-18T21:56:42Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.door43.translationstudio.AppContext.getSelectedSourceTranslationId(mTargetTranslation.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sourceTranslationId == null) { com.door43.translationstudio.core.SourceTranslation sourceTranslation = com.door43.translationstudio.AppContext.getLibrary().getDefaultSourceTranslation(mTargetTranslation.getProjectId(), java.util.Locale.getDefault().getLanguage()); if (sourceTranslation != null) { sourceTranslationId = sourceTranslation.getId(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1795/buggy-version/app.src.main.java.com.door43.translationstudio.newui.publish.PublishActivity.java", "BodyUseAPI": [], "Fixed commit": "c14669f0046defab6972dbf178a6c7045acd346d", "Url": "https://api.github.com/repos/neutrinog/ts-android", "Date": "2016-04-15T23:11:54Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(proposals.containsKey(m.slot_number))) || ((proposals.get(m.slot_number).op) == null)) { if ((proposals.containsKey(m.slot_number)) && ((proposals.get(m.slot_number).op) == null)) { m.command.readOnlySets = proposals.get(m.slot_number).readOnlySets; }else { proposals.put(m.slot_number, m.command); } if (active) { new paxos.Commander(env, new paxos.ProcessId((((((\"commander:\" + (me)) + \":\") + (ballot_number)) + \":\") + (m.slot_number))), this, acceptors, replicas, ballot_number, m.slot_number, m.command); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1402/buggy-version/src.paxos.Leader.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, paxos.Command>.get(m.slot_number)", "java.util.Map<java.lang.Integer, paxos.Command>.get(m.slot_number)", "java.util.Map<java.lang.Integer, paxos.Command>.containsKey(m.slot_number)", "java.util.Map<java.lang.Integer, paxos.Command>.put(m.slot_number,m.command)"], "Fixed commit": "a662a23e66b61b4a93a3cb130222319e8f023ca7", "Url": "https://api.github.com/repos/banaka/paxos", "Date": "2013-11-13T18:23:56Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ballerinalang.util.repository.BuiltinPackageRepository.getFileNames(java.lang.ClassLoader)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fileNames.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3527/buggy-version/modules.ballerina-core.src.main.java.org.ballerinalang.util.repository.BuiltinPackageRepository.java", "BodyUseAPI": [], "Fixed commit": "b15b28fc02f68b5227949a793268cfb106d87e5d", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2017-07-21T12:50:04Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lsinf1225.ezmeal.ezmeal.SQLiteManager.mostTime(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (Times == 0) { mostTime = \"None\"; }else if (Times < 15) { mostTime = \"< 15 minutes\"; }else if (Times > 60) { mostTime = \"> 60 minutes\"; }else { mostTime = \"15-60 minutes\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3794/buggy-version/EZMeal.app.src.main.java.com.lsinf1225.ezmeal.ezmeal.Fragment4.java", "BodyUseAPI": [], "Fixed commit": "a6b67bbe7d8d7ebc095a6ac194a0b6063aeee963", "Url": "https://api.github.com/repos/lodykas/LSINF1225-GroupeV-EZMeal", "Date": "2017-05-18T15:37:29Z"},
{"Line": "=>2466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((res.get(i)) == \"None\") { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3794/buggy-version/EZMeal.app.src.main.java.com.lsinf1225.ezmeal.ezmeal.SQLiteManager.java", "BodyUseAPI": [], "Fixed commit": "a6b67bbe7d8d7ebc095a6ac194a0b6063aeee963", "Url": "https://api.github.com/repos/lodykas/LSINF1225-GroupeV-EZMeal", "Date": "2017-05-18T15:37:29Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((damager.hasMetadata(\"JunctionPVP.team\")) && (entity.hasMetadata(\"JunctionPVP.team\")))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2825/buggy-version/src.main.java.at.junction.pvp.JunctionPVPListener.java", "BodyUseAPI": [], "Fixed commit": "dc38d50dcaefb56586ee96b0f14690ca758323e5", "Url": "https://api.github.com/repos/JunctionAt/JunctionPVP", "Date": "2014-01-05T23:06:04Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == (this)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7993/buggy-version/api.jobs-api.src.main.java.org.browsermob.core.har.HarNameValuePair.java", "BodyUseAPI": [], "Fixed commit": "a47710e395c2e9113bbdd0149175c2774cd9adbc", "Url": "https://api.github.com/repos/Cognifide/aet", "Date": "2016-12-19T09:43:17Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(other instanceof org.browsermob.core.har.HarNameValuePair)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7993/buggy-version/api.jobs-api.src.main.java.org.browsermob.core.har.HarNameValuePair.java", "BodyUseAPI": [], "Fixed commit": "a47710e395c2e9113bbdd0149175c2774cd9adbc", "Url": "https://api.github.com/repos/Cognifide/aet", "Date": "2016-12-19T09:43:17Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7993/buggy-version/api.jobs-api.src.main.java.org.browsermob.core.har.HarNameValuePair.java", "BodyUseAPI": [], "Fixed commit": "a47710e395c2e9113bbdd0149175c2774cd9adbc", "Url": "https://api.github.com/repos/Cognifide/aet", "Date": "2016-12-19T09:43:17Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thebetweenlands.TheBetweenlands.DEBUG) { cpw.mods.fml.common.FMLCommonHandler.instance().bus().register(DebugHandler.INSTANCE); MinecraftForge.EVENT_BUS.register(DebugHandler.INSTANCE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5222/buggy-version/java.thebetweenlands.TheBetweenlands.java", "BodyUseAPI": [], "Fixed commit": "60dbc70a9b715f5560962db0ee70106d19e16b7e", "Url": "https://api.github.com/repos/Angry-Pixel/The-Betweenlands", "Date": "2015-03-15T20:43:17Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((companyName == null) || (companyName.equals(\"\"))) { }else { publisher = (companyName + \"-\") + publisher; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8347/buggy-version/src.com.microbox.airshow.MessageFragment.java", "BodyUseAPI": [], "Fixed commit": "1967a00b0d265e5175cfaf49cfa6c856c374faa8", "Url": "https://api.github.com/repos/yuzx99/AirShow", "Date": "2015-01-04T12:34:06Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (which == 1) { android.content.Intent sendIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW); sendIntent.putExtra(\"sms_body\", sms); sendIntent.setType(\"vnd.android-dir/mms-sms\"); mapActivity.startActivity(sendIntent); }else if (which == 2) { android.text.ClipboardManager clipboard = ((android.text.ClipboardManager) (mapActivity.getSystemService(Activity.CLIPBOARD_SERVICE))); clipboard.setText(sms); }else if (which == 3) { final java.lang.String simpleGeo = ((((\"geo:\" + ((float) (latitude))) + \",\") + ((float) (longitude))) + \"?z=\") + zoom; android.net.Uri location = android.net.Uri.parse(simpleGeo); android.content.Intent mapIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, location); mapActivity.startActivity(mapIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5743/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivityActions.java", "BodyUseAPI": [], "Fixed commit": "44e3087509f6633206e24c784f75b7ec73d086d6", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2012-10-23T05:30:03Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().getBackStackEntryCount()) > 0) { android.support.v4.app.Fragment fragment = getSupportFragmentManager().findFragmentByTag(\"ScrollingFragment\"); if ((fragment.getView()) != null) fragment.getView().setVisibility(View.VISIBLE); }else { mainPlayer.startAnimation(new com.riseapps.xmusic.component.CustomAnimation().slide_down(this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3104/buggy-version/app.src.main.java.com.riseapps.xmusic.view.Activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "40c7f0633163a549a99752d8ecd6e02f0b02c43a", "Url": "https://api.github.com/repos/srivnaimish/X-Music-Player-Pro", "Date": "2017-07-25T19:14:52Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wurst.mods.panicMod.isActive()) mc.gameSettings.gammaSetting = 0.5F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4078/buggy-version/src.tk.wurst_client.mods.FullbrightMod.java", "BodyUseAPI": [], "Fixed commit": "d8ce7b9a685e7e7f27d1f6c4c73d0126411f7459", "Url": "https://api.github.com/repos/CisBetter/Wurst-MC-1.10", "Date": "2016-11-10T16:45:43Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(documented)) { synchronized(this) { if (!(documented)) { org.restlet.routing.Router rootRouter = org.restlet.ext.raml.RamlApplication.getNextRouter(inboundRoot); documented = org.restlet.ext.raml.RamlApplication.isDocumented(rootRouter); if (!(documented)) { attachRamlSpecificationRestlet(rootRouter); documented = true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3537/buggy-version/modules.org.restlet.ext.raml.src.org.restlet.ext.raml.RamlApplication.java", "BodyUseAPI": [], "Fixed commit": "03ccb3b78d93c28de582bf72b5b960fb8ae9d7a4", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2014-08-13T16:52:54Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>.get(field.getFieldId().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (values != null) { com.intetics.bean.FieldValue fieldValue = field.getValueType().newValue(values, field); fieldValue.setField(field); fieldValues.add(fieldValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3808/buggy-version/src.main.java.com.intetics.controller.EntityInstanceController.java", "BodyUseAPI": ["field.getValueType().newValue(java.util.List<java.lang.String>,com.intetics.bean.Field)"], "Fixed commit": "2f19e5edf9154d4923c5fffab5048237828d197f", "Url": "https://api.github.com/repos/nikolay-kvetko/DataManager", "Date": "2015-04-13T08:27:19Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((remoteMediaClient.getPlayerState()) == (com.google.android.gms.cast.MediaStatus.PLAYER_STATE_PLAYING)) { playStatusFound = true; }else { if (((playStatusFound) && ((remoteMediaClient.getPlayerState()) == (com.google.android.gms.cast.MediaStatus.PLAYER_STATE_IDLE))) && ((remoteMediaClient.getPlayerState()) == (com.google.android.gms.cast.MediaStatus.IDLE_REASON_FINISHED))) { fireEvent(\"videoEnded\", null); remoteMediaClient.removeListener(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6666/buggy-version/android.src.com.cbcnewmedia.cast.CastProxy.java", "BodyUseAPI": ["com.google.android.gms.cast.framework.media.RemoteMediaClient.getPlayerState()", "com.google.android.gms.cast.framework.media.RemoteMediaClient.getPlayerState()", "com.google.android.gms.cast.framework.media.RemoteMediaClient.removeListener(com.cbcnewmedia.cast.CastProxy.1)"], "Fixed commit": "200f48ef9236dba6a879451a4a5baa76b5a95a8d", "Url": "https://api.github.com/repos/TylerZubke/ti-cast", "Date": "2017-10-31T22:48:49Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7089/buggy-version/src.com.tracker.Main.java", "BodyUseAPI": [], "Fixed commit": "7c85d0bbf581974dab557c4d65ac3d6b40a92d62", "Url": "https://api.github.com/repos/kimeugene/Tracker", "Date": "2011-03-29T05:21:41Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sk.upjs.kombinatorika.GraphReader.readGraphFromIncidencyMatrix(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (graph == null) { boolean successfull = graph.loadFromFile(filename); if (!successfull) { graph = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4074/buggy-version/src.sk.upjs.kombinatorika.GraphReader.java", "BodyUseAPI": ["sk.upjs.paz.Graph.loadFromFile(java.lang.String)"], "Fixed commit": "16a0e82f12b62bc19d25dce47a1e3d01458f1fae", "Url": "https://api.github.com/repos/sbocko/Grapher", "Date": "2014-05-12T12:26:59Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.money_tracker.AddEntryActivity.BtnListener.compute(double,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (added != null) { com.example.money_tracker.Toast.makeText(this, \"Entry Added\", Toast.LENGTH_SHORT).show(); android.content.Intent i = new android.content.Intent(getBaseContext(), com.example.money_tracker.MainActivity.class); i.setFlags(((android.content.Intent.FLAG_ACTIVITY_NEW_TASK) | (android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK))); startActivity(i); }else { com.example.money_tracker.Toast.makeText(this, \"Entry couldn't be added, try again\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7969/buggy-version/src.com.example.money_tracker.AddEntryActivity.java", "BodyUseAPI": [], "Fixed commit": "13f169f3ffd5e0580fcf9a4e236bcc869d7204b7", "Url": "https://api.github.com/repos/sushill647/money-tacker", "Date": "2014-10-21T05:30:34Z"},
{"Line": "=>647", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getActionBar()) != null) && (getActionBar().isShowing())) { getActionBar().hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4970/buggy-version/src.odesk.johnlife.glimpse.activity.PhotoActivity.java", "BodyUseAPI": [], "Fixed commit": "260d6f5899b1a59f38ea45fc8d3effb10c0a6ad8", "Url": "https://api.github.com/repos/johnlife/Glimpse-Android", "Date": "2014-12-10T08:50:15Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scanner_pcl.Scanner_PCL.getTokens_type()", "java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.util.ArrayList<java.lang.Integer>>>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((types.get(entry.getKey())) == (symbols.sym.ID)) { java.lang.String type = symbols.sym.getValue(types.get(entry.getKey())); java.lang.String st = ((java.lang.String) (entry.getKey())); st = st.toLowerCase(); res += ((((type + \"_____\") + st) + \"_____\") + lines) + \"\\n\"; }else { res += (((((symbols.sym.getValue(types.get(entry.getKey()))) + \"_____\") + (entry.getKey())) + \"_____\") + lines) + \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/9139/buggy-version/SCANNER.Scanner_PCL.src.scanner_pcl.Scann_Main.java", "BodyUseAPI": ["java.util.Map<java.lang.Object, java.lang.Integer>.get(java.lang.Object)", "java.util.Map.Entry<java.lang.Object, java.util.ArrayList<java.lang.Integer>>.getKey()", "java.util.Map.Entry<java.lang.Object, java.util.ArrayList<java.lang.Integer>>.getKey()", "java.util.Map.Entry<java.lang.Object, java.util.ArrayList<java.lang.Integer>>.getKey()", "symbols.sym.getValue(java.lang.Integer)", "java.util.Map.Entry<java.lang.Object, java.util.ArrayList<java.lang.Integer>>.getKey()", "java.util.Map<java.lang.Object, java.lang.Integer>.get(java.lang.Object)", "symbols.sym.getValue(java.lang.Integer)"], "Fixed commit": "5a9eb9546c0301ff2ce860a70e5c0e8dfc0e701b", "Url": "https://api.github.com/repos/nara15/Compilador-PCL", "Date": "2016-10-04T02:52:01Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.Scanner_PCL.getTokens_type()", "java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.util.ArrayList<java.lang.Integer>>>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((types.get(entry.getKey())) == (symbols.sym.ID)) { java.lang.String type = symbols.sym.getValue(types.get(entry.getKey())); java.lang.String st = ((java.lang.String) (entry.getKey())); st = st.toLowerCase(); res += ((((type + \"_____\") + st) + \"_____\") + lines) + \"\\n\"; }else { res += (((((symbols.sym.getValue(types.get(entry.getKey()))) + \"_____\") + (entry.getKey())) + \"_____\") + lines) + \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/9139/buggy-version/SCANNER.Scanner_PCL.src.view.ScannControlador.java", "BodyUseAPI": ["java.util.Map<java.lang.Object, java.lang.Integer>.get(java.lang.Object)", "java.util.Map.Entry<java.lang.Object, java.util.ArrayList<java.lang.Integer>>.getKey()", "symbols.sym.getValue(java.lang.Integer)", "java.util.Map.Entry<java.lang.Object, java.util.ArrayList<java.lang.Integer>>.getKey()", "java.util.Map.Entry<java.lang.Object, java.util.ArrayList<java.lang.Integer>>.getKey()", "java.util.Map<java.lang.Object, java.lang.Integer>.get(java.lang.Object)", "symbols.sym.getValue(java.lang.Integer)", "java.util.Map.Entry<java.lang.Object, java.util.ArrayList<java.lang.Integer>>.getKey()"], "Fixed commit": "5a9eb9546c0301ff2ce860a70e5c0e8dfc0e701b", "Url": "https://api.github.com/repos/nara15/Compilador-PCL", "Date": "2016-10-04T02:52:01Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<com.dexels.navajo.dependency.Dependency>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (allDeps == null) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/555/buggy-version/core.com.dexels.navajo.core.src.com.dexels.navajo.dependency.DependencyAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "bc330539b0d0d9124d0af9b153b65a9305e04726", "Url": "https://api.github.com/repos/Dexels/navajo", "Date": "2015-01-05T09:50:22Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NamedNodeMap.getNamedItem(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (attributeValue == null) { matchedAll = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8172/buggy-version/src.NodeValidator.java", "BodyUseAPI": [], "Fixed commit": "45130fa3954a32730fc573ac0800ea802dcb6870", "Url": "https://api.github.com/repos/vardhman1996/code_autocorrector", "Date": "2015-07-10T08:53:10Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(com.inepex.ineForm.client.IneFormProperties.showIds)) && (!(tableRDesc.hasProp(FormRDescBase.prop_showIDs)))) { columnSize--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8766/buggy-version/ineform.src.main.java.com.inepex.ineForm.server.tablerenderer.pdf.PdfRenderer.java", "BodyUseAPI": [], "Fixed commit": "89262b0cb00a72cc5b773d2e0c2e1c965be2db1b", "Url": "https://api.github.com/repos/inepex/ineform", "Date": "2015-12-02T13:57:19Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.lwjgl.input.Keyboard.isKeyDown(Keyboard.KEY_LSHIFT)) { position.y += 0.981F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/942/buggy-version/src.entities.Camera.java", "BodyUseAPI": [], "Fixed commit": "1b71a6941d2ffecc3defab1de26af40a956cc822", "Url": "https://api.github.com/repos/marcelvanworkum/3D-game-engine", "Date": "2015-09-10T12:35:04Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.lwjgl.input.Keyboard.isKeyDown(Keyboard.KEY_Q)) { position.y += 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/942/buggy-version/src.entities.Camera.java", "BodyUseAPI": [], "Fixed commit": "1b71a6941d2ffecc3defab1de26af40a956cc822", "Url": "https://api.github.com/repos/marcelvanworkum/3D-game-engine", "Date": "2015-09-10T12:35:04Z"},
{"Line": "=>2206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.springframework.util.CollectionUtils.isEmpty(exportGroup.getVolumes()))) { exportGroupVolumes.addAll(exportGroup.getVolumes().keySet()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4274/buggy-version/controllersvc.src.main.java.com.emc.storageos.util.ExportUtils.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.addAll(exportGroup.getVolumes().keySet())", "com.emc.storageos.db.client.model.ExportGroup.getVolumes()", "exportGroup.getVolumes().keySet()"], "Fixed commit": "5cfcb12d51bc5246d7184d2bf305a7e0dc4d249d", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-03-13T17:55:35Z"},
{"Line": "=>2210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.springframework.util.CollectionUtils.isEmpty(exportGroup.getSnapshots()))) { exportGroupVolumes.addAll(exportGroup.getSnapshots()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4274/buggy-version/controllersvc.src.main.java.com.emc.storageos.util.ExportUtils.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.addAll(exportGroup.getSnapshots())", "com.emc.storageos.db.client.model.ExportGroup.getSnapshots()"], "Fixed commit": "5cfcb12d51bc5246d7184d2bf305a7e0dc4d249d", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-03-13T17:55:35Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetfolder == null) { de.uni_potsdam.hpi.asg.common.remote.SFTP.logger.error(\"Targetfolder is not defined\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8256/buggy-version/src.main.java.de.uni_potsdam.hpi.asg.common.remote.SFTP.java", "BodyUseAPI": [], "Fixed commit": "15cc62fb76059a2b59ebbda5f7edf1541bee0944", "Url": "https://api.github.com/repos/hpiasg/asgcommon", "Date": "2017-01-10T15:46:05Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((strflags.length()) > 0) { this.source = (strflags + \" \") + (this.source); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8683/buggy-version/src.soofw.trk.Task.java", "BodyUseAPI": [], "Fixed commit": "871db3abd0a5a56d38ee7b03f5b975d43279a394", "Url": "https://api.github.com/repos/scizzorz/trk-android", "Date": "2013-08-14T21:49:49Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (parent != null) this.path = ((parent.getPath()) + \"/\") + (getName()); else this.path = getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1000/buggy-version/src.nexus_rest.TemporaryRestEntity.java", "BodyUseAPI": [], "Fixed commit": "40363564658d4da24fc70078bfd7e215fb693d30", "Url": "https://api.github.com/repos/Mikkomario/UtopiaNexus", "Date": "2015-01-26T15:55:19Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(REMOTE_DEVICE.equals(initiatingDevice))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4150/buggy-version/src.main.java.org.openmucextensions.driver.bacnet.BACnetConnection.java", "BodyUseAPI": [], "Fixed commit": "5fcade1e7456d3f3e20cf2fe25bb37e366ffaef8", "Url": "https://api.github.com/repos/openmucextensions/bacnet", "Date": "2016-04-26T10:06:11Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.openmucextensions.driver.bacnet.BACnetConnection.logger.isTraceEnabled()) { org.openmucextensions.driver.bacnet.BACnetConnection.logger.trace(\"received (listener) new value for channel {} is type {} with value {}\", container.getChannel().getId(), listOfValues.get(1).getValue().getClass().getName(), listOfValues.get(1).getValue().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4150/buggy-version/src.main.java.org.openmucextensions.driver.bacnet.BACnetConnection.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String,container.getChannel().getId(),listOfValues.get(1).getValue().getClass().getName(),listOfValues.get(1).getValue().toString())"], "Fixed commit": "5fcade1e7456d3f3e20cf2fe25bb37e366ffaef8", "Url": "https://api.github.com/repos/openmucextensions/bacnet", "Date": "2016-04-26T10:06:11Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (checkers.util.TreeUtils.isSelfAccess(node)) { receiverString = \"this\"; }else { com.sun.source.tree.MemberSelectTree mst = ((com.sun.source.tree.MemberSelectTree) (node.getMethodSelect())); receiverString = mst.getExpression().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6632/buggy-version/checkers.src.checkers.jimmu.JimmuVisitor.java", "BodyUseAPI": ["com.sun.source.tree.MethodInvocationTree.getMethodSelect()"], "Fixed commit": "3b121d1ee71dec244b2e50558ecf0158d6aec5db", "Url": "https://api.github.com/repos/saf/Funcheck", "Date": "2011-08-15T20:40:12Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.get(position)) != null) { if ((data.get(position).type.compareTo(\"Fixed\")) == 0) { convertView.setBackgroundColor(android.graphics.Color.rgb(173, 206, 247)); }else if ((current.compareTo(thisTime)) >= 0) { convertView.setBackgroundColor(android.graphics.Color.argb(125, 75, 236, 90)); }else if ((isSet) && ((data.get(position)) != null)) { if ((data.get(position).type.compareTo(\"Flex\")) == 0) convertView.setBackgroundColor(android.graphics.Color.argb(255, 255, 200, 200)); }else { convertView.setBackgroundColor(android.graphics.Color.argb(255, 255, 255, 255)); } }else if ((current.compareTo(thisTime)) >= 0) { convertView.setBackgroundColor(android.graphics.Color.argb(125, 75, 236, 90)); }else if ((isSet) && ((data.get(position)) != null)) { if ((data.get(position).type.compareTo(\"Flex\")) == 0) convertView.setBackgroundColor(android.graphics.Color.argb(255, 255, 200, 200)); }else { convertView.setBackgroundColor(android.graphics.Color.argb(255, 255, 255, 255)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3651/buggy-version/Do-It-Today.src.com.loulijun.demo2.arrange.ArrangeListAdapter.java", "BodyUseAPI": ["java.util.ArrayList<com.loulijun.demo2.data.CalEvent>.get(int)", "java.util.ArrayList<com.loulijun.demo2.data.CalEvent>.get(int)", "data.get(position).type.compareTo(java.lang.String)", "java.util.ArrayList<com.loulijun.demo2.data.CalEvent>.get(int)", "java.util.ArrayList<com.loulijun.demo2.data.CalEvent>.get(int)", "data.get(position).type.compareTo(java.lang.String)", "data.get(position).type.compareTo(java.lang.String)", "java.util.ArrayList<com.loulijun.demo2.data.CalEvent>.get(int)"], "Fixed commit": "8457fbfe46f33b4c5e6d6caccfc19bf076af63f3", "Url": "https://api.github.com/repos/awefcxsd/Do-It-Today", "Date": "2014-06-25T23:26:54Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(event.getPlayer().getGameMode().equals(GameMode.CREATIVE))) { if ((event.getPlayer().getItemInHand().getAmount()) > 1) { event.getPlayer().getItemInHand().setAmount(((event.getPlayer().getItemInHand().getAmount()) - 1)); }else { event.getPlayer().getInventory().remove(event.getPlayer().getItemInHand()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6826/buggy-version/src.main.java.in.nikitapek.blocksaver.events.BlockSaverListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().getItemInHand()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().getInventory()", "event.getPlayer().getItemInHand().setAmount(((event.getPlayer().getItemInHand().getAmount()) - 1))", "event.getPlayer().getItemInHand()", "event.getPlayer().getItemInHand()", "event.getPlayer().getInventory().remove(event.getPlayer().getItemInHand())", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().getItemInHand()", "event.getPlayer().getItemInHand().getAmount()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().getItemInHand().getAmount()"], "Fixed commit": "53a1c0fcf60187b9968b2180bd789971908bbf02", "Url": "https://api.github.com/repos/Indiv0/block-saver", "Date": "2013-05-21T20:28:44Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (dom.contains(\":\")) dom = dom.substring(0, dom.indexOf(\":\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7133/buggy-version/src.org.avuna.httpd.http.plugins.javaloader.lib.SetCookie.java", "BodyUseAPI": [], "Fixed commit": "32685f2c08cce800e716941a146a44a673c115dc", "Url": "https://api.github.com/repos/paullaz/Avuna-HTTPD", "Date": "2015-05-21T01:02:11Z"},
{"Line": "=>727", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isHead) { ((ixa.kaflib.NonTerminal) (childNode)).setHead(isHead); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6877/buggy-version/src.main.java.ixa.kaflib.ReadWriteManager.java", "BodyUseAPI": ["ixa.kaflib.TreeNode.setHead(boolean)"], "Fixed commit": "beda3628ef8fd9e5d672ca45b9da3d6112cb04f4", "Url": "https://api.github.com/repos/ixa-ehu/kaflib", "Date": "2014-01-07T17:30:37Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uk.pigpioj.PigpioJNI.loaded) { int rc = uk.pigpioj.PigpioGpio.initialise(); return rc; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2084/buggy-version/pigpioj-java.src.main.java.uk.pigpioj.PigpioJNI.java", "BodyUseAPI": [], "Fixed commit": "f1b963317617d547854c2089a8b516008ddeebbe", "Url": "https://api.github.com/repos/mattjlewis/pigpioj", "Date": "2017-05-05T09:50:49Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.Flibio.EconomyLite.EconomyLite.currency) == null) { me.Flibio.EconomyLite.EconomyLite.currency = new me.Flibio.EconomyLite.API.LiteCurrency(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5348/buggy-version/src.me.Flibio.EconomyLite.EconomyLite.java", "BodyUseAPI": [], "Fixed commit": "8d4b80b213103fcbde912b0f0edac2b28185061d", "Url": "https://api.github.com/repos/Flibio/EconomyLite", "Date": "2016-01-02T14:29:49Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prefs.getBoolean(\"sound\", true)) textToSpeech.speak(text, TextToSpeech.QUEUE_FLUSH, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8366/buggy-version/FastEnglish.src.com.adpol.fastenglish.WordActivity.java", "BodyUseAPI": [], "Fixed commit": "b6d3e136d2247c146e2060027b0f869809080978", "Url": "https://api.github.com/repos/kamilsherco/FastEnglish", "Date": "2014-08-26T10:50:06Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (age < 18) throw new illegalArgumentException(\"Age must be above 18. Sorry !\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3944/buggy-version/src.Player.java", "BodyUseAPI": [], "Fixed commit": "b64680017e415d4b757c5c61272fc920e59f6b8f", "Url": "https://api.github.com/repos/11580932/TestMagic-Assgn-4", "Date": "2016-10-13T10:05:44Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gamepad2.left_trigger) > 0.5) { cat.setPower((-1)); }else { cat.setPower(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4240/buggy-version/src.main.java.org.firstinspires.ftc.teamcode.Marv7UserControl.java", "BodyUseAPI": [], "Fixed commit": "7dd178562bdf2a9942739dfe819496d6d3fb3afb", "Url": "https://api.github.com/repos/aedancullen/marv-mk7", "Date": "2017-02-26T22:47:58Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text.charAt(i)) == '-') { l.setVolume(maxVol, maxVol); l.start(); }else if ((text.charAt(i)) == '/') { android.os.SystemClock.sleep(500); }else if ((text.charAt(i)) == ' ') { android.os.SystemClock.sleep(300); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6880/buggy-version/app.src.main.java.teamname.morselight.MorseLight.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)"], "Fixed commit": "f2224a39b804d0cc54d7f027ecec470bdfd03aee", "Url": "https://api.github.com/repos/Vicken52/MorseLight", "Date": "2015-06-05T22:43:08Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.comze_instancelabs.minigamesapi.MinigamesAPI.getAPI().global_lost.containsKey(playername)) { com.comze_instancelabs.minigamesapi.MinigamesAPI.getAPI().global_lost.remove(playername); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4663/buggy-version/API.src.main.java.com.comze_instancelabs.minigamesapi.Arena.java", "BodyUseAPI": ["com.comze_instancelabs.minigamesapi.MinigamesAPI.getAPI().global_lost.remove(java.lang.String)"], "Fixed commit": "461b9bf440c7cc22fa88e9e767cb0277b44d67f7", "Url": "https://api.github.com/repos/instance01/MinigamesAPI", "Date": "2014-06-28T10:56:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((verbIndex > (-1)) && (tagsListIndex > verbIndex)) && (Tags.ADVERB.equals(tag))) { containsAdverbPredicate = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6785/buggy-version/src.main.java.com.trainingdataprocessor.semantics.preprocessing.SemanticPreprocessorImpl.java", "BodyUseAPI": [], "Fixed commit": "11c32bed4e57230cc78272820122ca1afdcf7b08", "Url": "https://api.github.com/repos/ares2015/AresPosTaggerModelDataProcessor", "Date": "2017-02-19T12:19:25Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((verbIndex > (-1)) && (tagsListIndex > verbIndex)) && ((((Tags.NOUN.equals(tag)) || (Tags.ADJECTIVE.equals(tag))) || (Tags.VERB_ED.equals(tag))) || (Tags.VERB_ING.equals(tag)))) { containsNounAdjectivePredicate = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6785/buggy-version/src.main.java.com.trainingdataprocessor.semantics.preprocessing.SemanticPreprocessorImpl.java", "BodyUseAPI": [], "Fixed commit": "11c32bed4e57230cc78272820122ca1afdcf7b08", "Url": "https://api.github.com/repos/ares2015/AresPosTaggerModelDataProcessor", "Date": "2017-02-19T12:19:25Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.supermomonga.rukkit.JRubyPlugin.fireEvent(java.lang.String,org.bukkit.command.CommandSender,org.bukkit.command.Command,java.lang.String,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ret instanceof java.util.List) { @java.lang.SuppressWarnings(\"unchecked\") java.util.List<java.lang.String> raw = ((java.util.List<java.lang.String>) (ret)); return java.util.Collections.checkedList(raw, java.lang.String.class); }else { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2672/buggy-version/javasrc.com.supermomonga.rukkit.JRubyPlugin.java", "BodyUseAPI": [], "Fixed commit": "cd9973f147c76a1dfc53fa77c3fed3d02bf6a70a", "Url": "https://api.github.com/repos/supermomonga/rukkit", "Date": "2015-02-01T09:30:53Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((server) != null) { server.updateExecutionState(aState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/519/buggy-version/de.gebit.integrity.runner.src.de.gebit.integrity.runner.forking.Fork.java", "BodyUseAPI": [], "Fixed commit": "7e3f169cde9003ecc0f53712d0d1ac1be5c78ef4", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2015-09-29T05:38:38Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (receivingPower) { if (this.isBeingRidden()) { this.removePassengers(); } if ((this.getRollingAmplitude()) == 0) { this.setRollingDirection((-(this.getRollingDirection()))); this.setRollingAmplitude(10); this.setDamage(50.0F); this.setBeenAttacked(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4383/buggy-version/src.main.java.com.lime.terracart.EntityTerraCart.java", "BodyUseAPI": [], "Fixed commit": "c34ddf51a9e64ddfdcf75506c7ce6477d8517215", "Url": "https://api.github.com/repos/alfuken/terracart", "Date": "2017-05-10T15:18:41Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((top.value) != null) { holder.append(((top.value.toString()) + \" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2868/buggy-version/CustomLinkedList.java", "BodyUseAPI": ["java.lang.StringBuilder.append(((top.value.toString()) + \" \"))", "top.value.toString()"], "Fixed commit": "759be709db54e2286cb820c21c3353fa9711bad4", "Url": "https://api.github.com/repos/dsouzarc/crackingthecodinginterview", "Date": "2014-12-10T03:38:04Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (newWriter != null) { if (!(isCloseSent())) { newWriter.write(WsCommandMessage.CLOSE); newWriter.write(WsCommandMessage.RECONNECT); } newWriter.close(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3135/buggy-version/transport.wseb.src.main.java.org.kaazing.gateway.transport.wseb.WsebSession.java", "BodyUseAPI": ["org.kaazing.gateway.transport.http.HttpSession.write(WsCommandMessage.CLOSE)", "org.kaazing.gateway.transport.http.HttpSession.close(boolean)", "org.kaazing.gateway.transport.http.HttpSession.write(WsCommandMessage.RECONNECT)"], "Fixed commit": "32a61d4eb06278528c12e0408107e6aa619e7560", "Url": "https://api.github.com/repos/Anisotrop/gateway", "Date": "2016-02-16T05:40:52Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.easydarwin.easypusher.EasyApplication.isRTMP()) { url = org.easydarwin.easypusher.EasyApplication.getEasyApplication().getUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6718/buggy-version/app.src.main.java.org.easydarwin.easypusher.StreamActivity.java", "BodyUseAPI": [], "Fixed commit": "57d0a94ebae4f255a87ea280cf3233dcf95ea7fd", "Url": "https://api.github.com/repos/EasyDarwin/EasyPusher-Android", "Date": "2017-06-19T14:53:12Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lhs.hashCode()) == (rhs.hashCode())) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8350/buggy-version/moqa.src.com.ualberta.team17.datamanager.IncrementalResult.java", "BodyUseAPI": [], "Fixed commit": "003bd925adab74bae80955a703efb2f62565a9d8", "Url": "https://api.github.com/repos/j-rewerts/Team17Project", "Date": "2014-10-27T21:04:19Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.timestamp) >= (Transaction.POWFIX_RELEASE)) { if ((this.creator.getConfirmedBalance(fork).compareTo(java.math.BigDecimal.ZERO)) == (-1)) { return NO_BALANCE; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8417/buggy-version/Qora.src.qora.transaction.CreateOrderTransaction.java", "BodyUseAPI": [], "Fixed commit": "45046fb1f88dc7c412813d7a1c21fda9c3cc8c77", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2016-02-09T20:55:47Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { value = new de.clubspot.mediator.processing.caching.CompleteCacheValue(rs.getBytes(\"value\"), key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7652/buggy-version/src.main.java.de.clubspot.mediator.processing.caching.SimplePostgreCache.java", "BodyUseAPI": ["java.sql.ResultSet.getBytes(java.lang.String)"], "Fixed commit": "0300e4a07f8ab8f64ec681ca039782ea03881418", "Url": "https://api.github.com/repos/l-ray/mediator-ws", "Date": "2015-10-13T19:46:02Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ctrip.framework.apollo.biz.service.ItemService.findOne(entity.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (beforeUpdateItem != null) { beforeUpdateItem = com.ctrip.framework.apollo.common.utils.BeanUtils.transfrom(com.ctrip.framework.apollo.biz.entity.Item.class, beforeUpdateItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/9184/buggy-version/apollo-biz.src.main.java.com.ctrip.framework.apollo.biz.service.ItemSetService.java", "BodyUseAPI": ["com.ctrip.framework.apollo.common.utils.BeanUtils.transfrom(java.lang.Class,com.ctrip.framework.apollo.biz.entity.Item)"], "Fixed commit": "66ca68f35feb4b9154206cbfd86b9e0377da561e", "Url": "https://api.github.com/repos/lepdou/apollo", "Date": "2016-07-08T07:41:00Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalHours <= maxHours) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3936/buggy-version/src.ca.etsmtl.log430.lab3.AssignDriverToDelivery.java", "BodyUseAPI": [], "Fixed commit": "59de53152bf5aa3c439f458177cea40f256dec54", "Url": "https://api.github.com/repos/authchir/log430-lab3-implicit-invocation", "Date": "2013-07-10T04:35:10Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"JNR\".equals(driver.getType())) { maxHours = 12; }else if (\"SNR\".equals(driver.getType())) { maxHours = 8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3936/buggy-version/src.ca.etsmtl.log430.lab3.AssignDriverToDelivery.java", "BodyUseAPI": ["java.lang.String.equals(driver.getType())", "ca.etsmtl.log430.lab3.Driver.getType()"], "Fixed commit": "59de53152bf5aa3c439f458177cea40f256dec54", "Url": "https://api.github.com/repos/authchir/log430-lab3-implicit-invocation", "Date": "2013-07-10T04:35:10Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getBillingAddress()) != null) { billingAddress = request.getBillingAddress(); }else { billingAddress = new business.models.ContactData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5031/buggy-version/src.main.java.business.services.RequestFormService.java", "BodyUseAPI": ["business.representation.RequestRepresentation.getBillingAddress()"], "Fixed commit": "492ad480215aaaafe9c6fa0ec5fc03b76142d29c", "Url": "https://api.github.com/repos/thehyve/dntp-portal", "Date": "2015-07-14T22:00:58Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ci != null) { res.put(resUris.get(0), ci.getContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2455/buggy-version/si-modules.DM_Web_Server.src.main.java.net.herit.business.api.service.OneM2MApiService.java", "BodyUseAPI": ["net.herit.iot.onem2m.resource.ContentInstance.getContent()", "java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,ci.getContent())"], "Fixed commit": "063e5c69b630f4e88fd453fdfd1ca5774d3b3235", "Url": "https://api.github.com/repos/iotoasis/SI", "Date": "2017-11-22T05:11:16Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.cache.Cache<java.lang.String, java.lang.Object>.getIfPresent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sourceObj instanceof java.util.Map) { @java.lang.SuppressWarnings(\"unchecked\") java.util.Map<java.lang.String, java.lang.Double> castObj = ((java.util.Map<java.lang.String, java.lang.Double>) (sourceObj)); sourceCache = castObj; }else { sourceCache = com.google.common.cache.CacheBuilder.newBuilder().maximumSize(cacheMaxSize).expireAfterWrite(cacheTtlSec, java.util.concurrent.TimeUnit.SECONDS).<java.lang.String, java.lang.Double>build().asMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1264/buggy-version/heron.metricsmgr.src.java.com.twitter.heron.metricsmgr.sink.WebSink.java", "BodyUseAPI": [], "Fixed commit": "75b99d87e1cec270b30738d219f525f5b351ec5f", "Url": "https://api.github.com/repos/ananthgs/heron", "Date": "2017-02-19T00:15:05Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (obj.has(\"Resource\")) { statement.setResource(obj.getString(\"Resource\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6320/buggy-version/src.com.comcast.cmb.common.model.CMBPolicy.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "com.comcast.cmb.common.model.CMBStatement.setResource(obj.getString(\"Resource\"))"], "Fixed commit": "ca6df627081e94b8f843e178b6ab29abd5d9a394", "Url": "https://api.github.com/repos/Comcast/cmb", "Date": "2014-03-04T00:10:28Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (json.has(\"Id\")) { id = json.getString(\"Id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6320/buggy-version/src.com.comcast.cmb.common.model.CMBPolicy.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "ca6df627081e94b8f843e178b6ab29abd5d9a394", "Url": "https://api.github.com/repos/Comcast/cmb", "Date": "2014-03-04T00:10:28Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tmall.servlet.ForeServlet.getReviewedList(int)", "tmall.servlet.ForeServlet.listByOrder(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((oi_reviewed_list.size()) >= (oi_list.size())) { order.setStatus(OrderDAO.finish); orderDAO.update(order); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5262/buggy-version/src.tmall.servlet.ForeServlet.java", "BodyUseAPI": [], "Fixed commit": "e39773fcac02cdf9299b81c53588b206c6eb5668", "Url": "https://api.github.com/repos/water160/tmall", "Date": "2017-11-29T16:21:08Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.raml.v2.internal.impl.commons.type.JsonSchemaExternalType.getTypeDeclarationNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (typeDeclarationNode instanceof org.raml.v2.internal.impl.commons.nodes.ExternalSchemaTypeExpressionNode) { org.raml.v2.internal.impl.commons.nodes.ExternalSchemaTypeExpressionNode schema = ((org.raml.v2.internal.impl.commons.nodes.ExternalSchemaTypeExpressionNode) (typeDeclarationNode)); return schema.getStartPosition().getIncludedResourceUri(); }else { java.util.List<org.raml.v2.internal.impl.commons.nodes.ExternalSchemaTypeExpressionNode> schemas = typeDeclarationNode.findDescendantsWith(org.raml.v2.internal.impl.commons.nodes.ExternalSchemaTypeExpressionNode.class); if ((schemas.size()) > 0) { return schemas.get(0).getStartPosition().getIncludedResourceUri(); }else { java.util.List<org.raml.v2.internal.impl.v10.nodes.NamedTypeExpressionNode> refNode = typeDeclarationNode.findDescendantsWith(org.raml.v2.internal.impl.v10.nodes.NamedTypeExpressionNode.class); if ((refNode.size()) > 0) { typeDeclarationNode = refNode.get(0).resolveReference(); if (typeDeclarationNode != null) { schemas = typeDeclarationNode.findDescendantsWith(org.raml.v2.internal.impl.commons.nodes.ExternalSchemaTypeExpressionNode.class); if ((schemas.size()) > 0) { return schemas.get(0).getStartPosition().getIncludedResourceUri(); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6482/buggy-version/raml-parser-2.src.main.java.org.raml.v2.internal.utils.SchemaGenerator.java", "BodyUseAPI": ["org.raml.v2.internal.impl.commons.nodes.TypeExpressionNode.findDescendantsWith(java.lang.Class)", "org.raml.v2.internal.impl.commons.nodes.TypeExpressionNode.findDescendantsWith(java.lang.Class)"], "Fixed commit": "695ad558a71ed128ab68d82da7b4c1081ecc9937", "Url": "https://api.github.com/repos/OlegDokuka/raml-java-parser", "Date": "2016-11-28T16:47:48Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.bitdecay.jump.leveleditor.ui.component.ComponentBuilder>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (builder == null) { return com.bitdecay.jump.leveleditor.ui.component.ComponentBuilderFactory.components.get(com.bitdecay.jump.leveleditor.ui.component.ComponentBuilderFactory.GENERIC_BUILDER); }else { return builder; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2354/buggy-version/jump-leveleditor.src.main.java.com.bitdecay.jump.leveleditor.ui.component.ComponentBuilderFactory.java", "BodyUseAPI": [], "Fixed commit": "a796619cb7778b4b98ea900644761b384f09a60f", "Url": "https://api.github.com/repos/bitDecayGames/Jump", "Date": "2015-10-29T00:50:36Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validate()) { org.eclipse.jface.dialogs.MessageDialog.openInformation(com.aptana.ui.util.UIUtils.getActiveShell(), Messages.JiraPreferencePageProvider_Success_Title, Messages.JiraPreferencePageProvider_Success_Message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6240/buggy-version/plugins.com.aptana.jira.ui.src.com.aptana.jira.ui.preferences.JiraPreferencePageProvider.java", "BodyUseAPI": [], "Fixed commit": "f6047aa8806bce7f8bdde0246c7ca54352febf7f", "Url": "https://api.github.com/repos/aptana/studio3", "Date": "2012-04-27T19:17:19Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.yannici.bedwars.Game.Game.isSpectator(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isSpectator) { ce.setMessage(message.substring(1, message.length())); }else { ce.setMessage(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2073/buggy-version/src.io.github.yannici.bedwars.Listener.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "1b0dfdb3e1a3bcc990c6cc9298587f359ee88704", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-04-18T10:42:30Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Class, java.lang.Object>.get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tests == null) { paramNames[i] = \"notSupportedPleaseReport\"; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2699/buggy-version/Versions.1.2.org.abimon.mods.minecraft.tmodifiers.TModifiers.java", "BodyUseAPI": [], "Fixed commit": "cf95d34ce9b6213da1159443ca34c0aa3644ce99", "Url": "https://api.github.com/repos/UnderMybrella/TiM", "Date": "2015-04-18T03:38:44Z"},
{"Line": "=>915", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fieldName.matches(\"^[a-z]{1}[A-Z]{1}.*\")) { return getterMethodPrefix + fieldName; }else { return getterMethodPrefix + (org.litepal.util.BaseUtility.capitalize(fieldName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8810/buggy-version/library.src.org.litepal.crud.DataHandler.java", "BodyUseAPI": ["org.litepal.util.BaseUtility.capitalize(java.lang.String)"], "Fixed commit": "36f34389acd72b825efa70379c9c7041990f41a2", "Url": "https://api.github.com/repos/LitePalFramework/LitePal", "Date": "2014-07-05T10:46:59Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Integer, javax.lang.model.element.AnnotationMirror>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.checkerframework.javacutil.AnnotationUtils.areSameIgnoringValues(dataflowAnno, DATAFLOW)) { java.util.Set<javax.lang.model.element.AnnotationMirror> datas = dataflowResults.get(id); if (datas == null) { datas = org.checkerframework.javacutil.AnnotationUtils.createAnnotationSet(); dataflowResults.put(id, datas); } datas.add(dataflowAnno); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7535/buggy-version/src.dataflow.solvers.backend.DataflowConstraintSolver.java", "BodyUseAPI": ["java.util.Set<javax.lang.model.element.AnnotationMirror>.add(javax.lang.model.element.AnnotationMirror)"], "Fixed commit": "e662e4e63ce58c4e834a46f47288fb6fe6911646", "Url": "https://api.github.com/repos/Jianchu/generic-type-inference-solver", "Date": "2016-07-18T15:52:14Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.getPosition().equals(new innova.inNovagent.util.Point(0, 0))) { g.setColor(innova.inNovagent.ui.MapPainter.HOME_COLOR); }else if (node.isTrap()) { g.setColor(innova.inNovagent.ui.MapPainter.TRAP_COLOR); }else if (node.isStone()) { g.setColor(innova.inNovagent.ui.MapPainter.STONE_COLOR); }else if (node.isVisited()) { g.setColor(innova.inNovagent.ui.MapPainter.VISITED_COLOR); }else { g.setColor(innova.inNovagent.ui.MapPainter.UNVISITED_COLOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6361/buggy-version/inNovagent.src.main.java.innova.inNovagent.ui.MapPainter.java", "BodyUseAPI": ["innova.inNovagent.core.Node.isVisited()", "innova.inNovagent.core.Node.isTrap()", "innova.inNovagent.core.Node.isStone()"], "Fixed commit": "5e891867cfad60e3127958d867f3d7cd7a4b4aa2", "Url": "https://api.github.com/repos/Mupfy/inNovagent", "Date": "2017-05-25T16:14:16Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i < 0) || (l < 0)) { return m; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3839/buggy-version/algorithm.src.main.java.course.project.MaxSkipChain.java", "BodyUseAPI": [], "Fixed commit": "afacdc3a508f4a786b10049b69198978768aa908", "Url": "https://api.github.com/repos/arsarkar/CS5040", "Date": "2015-11-30T15:31:35Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.file.FileConfiguration.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (str != null) { str = str.replace(\"%Player%\", player.getName()); return str; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2697/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Config.ConfigGUI.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,player.getName())"], "Fixed commit": "304c7dc6134f02bfacc673151bd674ae7e8d8ec0", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-16T22:48:11Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.file.FileConfiguration.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (str != null) { str = str.replace(\"%Player%\", player.getName()); return str; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2697/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Config.ConfigGUI.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,player.getName())"], "Fixed commit": "304c7dc6134f02bfacc673151bd674ae7e8d8ec0", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-16T22:48:11Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.file.FileConfiguration.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (str != null) { str = str.replace(\"%Player%\", player.getName()); return str; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2697/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Config.ConfigGUI.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,player.getName())"], "Fixed commit": "304c7dc6134f02bfacc673151bd674ae7e8d8ec0", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-16T22:48:11Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.file.FileConfiguration.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (str != null) { str = str.replace(\"%Player%\", player.getName()); return str; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2697/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Config.ConfigGUI.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,player.getName())"], "Fixed commit": "304c7dc6134f02bfacc673151bd674ae7e8d8ec0", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-16T22:48:11Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<illarion.common.types.Rectangle>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (testRect == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4623/buggy-version/illaclient.src.illarion.client.world.GameMiniMap.java", "BodyUseAPI": [], "Fixed commit": "6298c774ac6193b237498d9513b368265b08f8e8", "Url": "https://api.github.com/repos/mkaring/Illarion-Java", "Date": "2012-12-11T22:06:36Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inQuotes) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7950/buggy-version/nodel-framework-java.src.main.java.org.nodel.core.JSONStreamReader.java", "BodyUseAPI": [], "Fixed commit": "93348468ad08945970a670d9232c3c04da581ba8", "Url": "https://api.github.com/repos/museumsvictoria/nodel", "Date": "2017-01-27T05:06:31Z"},
{"Line": "=>2852", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.ex.chips.RecipientEditTextView.tokenizeAddress(temp.getEntry().getDestination())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(address))) { final com.android.ex.chips.RecipientEntry entry = createValidatedEntry(entries.get(address.toLowerCase())); if (entry != null) { mHandler.post(new java.lang.Runnable() { @java.lang.Override public void run() { replaceChip(temp, entry); } }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7657/buggy-version/src.com.android.ex.chips.RecipientEditTextView.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.util.Map<java.lang.String, com.android.ex.chips.RecipientEntry>.get(java.lang.String)", "com.android.ex.chips.RecipientEditTextView.IndividualReplacementTask.1.createValidatedEntry(entries.get(address.toLowerCase()))"], "Fixed commit": "bd9390d82fdb32d05b2780e5a1ae45307c9003ce", "Url": "https://api.github.com/repos/ThirdProject/android_frameworks_opt_chips", "Date": "2015-02-02T21:20:35Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (width > (getOffsetWidth())) setWidth((width + 20)); else if ((initialWidth) != (-1)) setWidth(initialWidth);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4803/buggy-version/jbpm-console-ng-human-tasks-forms.jbpm-console-ng-human-tasks-forms-client.src.main.java.org.jbpm.console.ng.ht.forms.client.display.views.PopupFormDisplayerView.java", "BodyUseAPI": ["org.jbpm.console.ng.ht.forms.client.display.views.PopupFormDisplayerView.2.setWidth(int)"], "Fixed commit": "507c1100c5a1a7db54655e99a8f68993e8fd5838", "Url": "https://api.github.com/repos/droolsjbpm/jbpm-console-ng", "Date": "2014-12-22T12:49:12Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(hs.isEmpty())) { hs = tauargus.utils.StrUtils.unQuote(hs); if (!(tauargus.utils.TauArgusUtils.ExistFile(hs))) { throw new tauargus.model.ArgusException(((\"Cplex License file (\" + hs) + \") does not exist\")); } argus.utils.SystemUtils.putRegString(\"optimal\", \"cplexlicensefile\", hs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7832/buggy-version/src.tauargus.model.batch.java", "BodyUseAPI": ["tauargus.utils.StrUtils.unQuote(java.lang.String)"], "Fixed commit": "970f05019d43b0fbc5e9494e6318e40937e4a152", "Url": "https://api.github.com/repos/sdcTools/tauargus", "Date": "2017-05-13T11:42:52Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mApiManager.getErrorResponseConverter().convert(response.errorBody()).getErrors()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (responseErrors != null) { errors.addAll(responseErrors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1647/buggy-version/app.src.main.java.pl.temomuko.autostoprace.data.remote.ErrorHandler.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)"], "Fixed commit": "8ec4e32caf3f5b33373be9ad8268cbee379e9e50", "Url": "https://api.github.com/repos/TeMoMuKo/AutoStopRace-Android", "Date": "2016-04-25T22:30:22Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(EnemiesIncluded.GameState.keyRight)) && (!(EnemiesIncluded.GameState.keyLeft))) EnemiesIncluded.GameState.mario.draw(EnemiesIncluded.GameState.Mario.x, EnemiesIncluded.GameState.Mario.y, Color.red); else if (EnemiesIncluded.GameState.keyLeft) EnemiesIncluded.GameState.MarioWalkLeft.draw(EnemiesIncluded.GameState.Mario.x, EnemiesIncluded.GameState.Mario.y, Color.red); else if (EnemiesIncluded.GameState.keyRight) EnemiesIncluded.GameState.MarioWalkRight.draw(EnemiesIncluded.GameState.Mario.x, EnemiesIncluded.GameState.Mario.y, Color.red);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1991/buggy-version/src.EnemiesIncluded.GameState.java", "BodyUseAPI": [], "Fixed commit": "4c28c9ed3160b233b65e2ddbe8d93c30fe12751c", "Url": "https://api.github.com/repos/GroupProjectMiniProject/Super-mario-project", "Date": "2015-05-08T13:48:56Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (percentSeeker < (mediaPlayer.getCurrentPosition())) { mProgressFrame.setVisibility(com.afollestad.easyvideoplayer.VISIBLE); }else { mProgressFrame.setVisibility(com.afollestad.easyvideoplayer.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4791/buggy-version/library.src.main.java.com.afollestad.easyvideoplayer.EasyVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "bfa1d1df2a4e8bc540bd4d18d327baee34c0a6d9", "Url": "https://api.github.com/repos/ravenfeld/easy-video-player", "Date": "2016-09-02T11:43:57Z"},
{"Line": "=>1185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.fidias.chance4j.Chance.month()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (month == (org.joda.time.DateTimeConstants.FEBRUARY)) { maximumValue = 28; }else { org.joda.time.MonthDay monthDay = new org.joda.time.MonthDay(month, 1); maximumValue = monthDay.dayOfMonth().getMaximumValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8653/buggy-version/src.main.java.br.com.fidias.chance4j.Chance.java", "BodyUseAPI": [], "Fixed commit": "9cb5ddf8494685f382462df74739d9ff826fe968", "Url": "https://api.github.com/repos/open-fidias/chance4j", "Date": "2016-08-13T17:35:04Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((normalizedTargetPath.length()) > (common.length())) { relative.append(normalizedTargetPath.substring(common.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8427/buggy-version/src.com.rfo.basic.Basic.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.substring(int)", "java.lang.StringBuilder.length()"], "Fixed commit": "359b6ea2a7288149301747a5f41ade231f1a311c", "Url": "https://api.github.com/repos/RFO-BASIC/Basic", "Date": "2017-03-12T18:16:40Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (names.isEmpty()) { java.lang.String indexName = (attribute.name()) + \"_index\"; names.add(indexName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4614/buggy-version/requery.src.main.java.io.requery.sql.SchemaModifier.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "fd5fb089bae5176c18316f5a1ab4922287b3b6d6", "Url": "https://api.github.com/repos/requery/requery", "Date": "2016-03-28T04:14:41Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bowlink.rr.service.userManager.getUserById(admin.getsystemUserId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userDetails.getRoleId()) == 2) { programAdministrators.add(userDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8221/buggy-version/src.main.java.com.bowlink.rr.controller.programController.java", "BodyUseAPI": ["java.util.List<com.bowlink.rr.model.User>.add(com.bowlink.rr.model.User)"], "Fixed commit": "e902732b84a95cc9bd8bfef6354a23944357fdde", "Url": "https://api.github.com/repos/bowlinktech/rapidregistry", "Date": "2015-07-27T19:05:03Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["regalowl.hyperconomy.command.Manageshop.getItemInHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((heldItem.getAmount()) > 1) { data.addResponse(regalowl.hyperconomy.command.L.get(\"CANT_ENCHANT_STACK\")); return data; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7687/buggy-version/src.main.java.regalowl.hyperconomy.command.Manageshop.java", "BodyUseAPI": [], "Fixed commit": "7267cdbbe981069c5ece1d656ed361801fdfe689", "Url": "https://api.github.com/repos/RegalOwl/HyperConomy", "Date": "2015-10-09T04:10:05Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cloudResourceStatus.isFailed())) { com.sequenceiq.cloudbreak.domain.Resource resource = new com.sequenceiq.cloudbreak.domain.Resource(cloudResourceStatus.getCloudResource().getType(), cloudResourceStatus.getCloudResource().getName(), stack); retSet.add(resource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7140/buggy-version/core.src.main.java.com.sequenceiq.cloudbreak.service.stack.connector.adapter.ServiceProviderConnectorAdapter.java", "BodyUseAPI": ["cloudResourceStatus.getCloudResource().getType()", "com.sequenceiq.cloudbreak.cloud.model.CloudResourceStatus.getCloudResource()", "com.sequenceiq.cloudbreak.cloud.model.CloudResourceStatus.getCloudResource()", "cloudResourceStatus.getCloudResource().getName()"], "Fixed commit": "4caeb81aea24b9f7b3b41bbf3368357acebf770e", "Url": "https://api.github.com/repos/sequenceiq/cloudbreak", "Date": "2015-09-02T15:53:32Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sequenceiq.cloudbreak.service.stack.connector.adapter.ServiceProviderConnectorAdapter.transformResults(java.util.List<com.sequenceiq.cloudbreak.cloud.model.CloudResourceStatus>,com.sequenceiq.cloudbreak.domain.Stack)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resourceSet.isEmpty()) { throw new com.sequenceiq.cloudbreak.service.stack.connector.OperationException((\"Failed to upscale the cluster since all create request failed: \" + (results.get(0).getStatusReason()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7140/buggy-version/core.src.main.java.com.sequenceiq.cloudbreak.service.stack.connector.adapter.ServiceProviderConnectorAdapter.java", "BodyUseAPI": [], "Fixed commit": "4caeb81aea24b9f7b3b41bbf3368357acebf770e", "Url": "https://api.github.com/repos/sequenceiq/cloudbreak", "Date": "2015-09-02T15:53:32Z"},
{"Line": "=>796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == ((solution1param2) - 1)) { java.lang.System.err.println((\"this should not happen ideally,\" + (\"but possibly due to double type computation,\" + \" it will get here occasionally (rarely)\"))); index = (solution1param2) - 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7482/buggy-version/java.Eclipse-workspace.MR-2Phase-FPGrowth.src.ca.pfv.spmf.algorithms.frequentpatterns.fpgrowth.AlgoFPGrowth2.java", "BodyUseAPI": [], "Fixed commit": "c0af0522ebc5707924a95d685cb9736376792d73", "Url": "https://api.github.com/repos/hdc1112/misc-program", "Date": "2014-07-18T22:11:15Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity == null) { java.util.logging.Logger.getLogger(com.idega.data.IDOQuery.class.getName()).warning(\"Provided IDOEntity is null!\"); return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4450/buggy-version/src.java.com.idega.data.IDOQuery.java", "BodyUseAPI": [], "Fixed commit": "0762254e774f55e01292b7bde6d0cfe6bf2d7b05", "Url": "https://api.github.com/repos/idega/com.idega.core", "Date": "2014-06-02T12:32:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spinnerWrapper) == null) { addHeader(); }else { spinnerWrapper.updateAttachList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6038/buggy-version/app.src.main.java.cn.edu.jxnu.awesome_campus.ui.education.CourseScoreFragment.java", "BodyUseAPI": [], "Fixed commit": "8e9a8f2188ab171a7a2f72be9fbfd070304e2d59", "Url": "https://api.github.com/repos/MummyDing/Awesome-Campus", "Date": "2016-02-16T07:23:42Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((oldName.length()) > 16) oldName = oldName.substring(0, 16);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2884/buggy-version/Proxy.src.au.com.addstar.bc.BungeeChat.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "febdf0ae702c62bcdcd73f65df85d54091183f7b", "Url": "https://api.github.com/repos/Schmoller/BungeeChat", "Date": "2014-04-19T05:06:50Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newName.length()) > 16) newName = newName.substring(0, 16);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2884/buggy-version/Proxy.src.au.com.addstar.bc.BungeeChat.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "febdf0ae702c62bcdcd73f65df85d54091183f7b", "Url": "https://api.github.com/repos/Schmoller/BungeeChat", "Date": "2014-04-19T05:06:50Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gameMap.containsKey(gameId)) gameMap.get(gameId).getComWaitInfo(socket);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3968/buggy-version/RePongServer.src.at.frikiteysch.repong.game.GameManager.java", "BodyUseAPI": ["gameMap.get(gameId).getComWaitInfo(java.net.Socket)", "java.util.Map<java.lang.Integer, at.frikiteysch.repong.game.Game>.get(int)"], "Fixed commit": "13136a20594afe7b840397a7b9b33b5f3ad000b4", "Url": "https://api.github.com/repos/Friesi/ITP5-RePong", "Date": "2013-12-07T18:48:30Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(dto.getLastedMsgDate()))) { date_tv.setText(com.dazone.crewchat.utils.TimeUtils.displayTimeWithoutOffset(com.dazone.crewchat.utils.CrewChatApplication.getInstance().getApplicationContext(), dto.getLastedMsgDate(), 0, TimeUtils.KEY_FROM_SERVER)); }else { date_tv.setText(com.dazone.crewchat.utils.TimeUtils.displayTimeWithoutOffset(com.dazone.crewchat.utils.CrewChatApplication.getInstance().getApplicationContext(), dto.getRegDate(), 0, TimeUtils.KEY_FROM_SERVER)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5224/buggy-version/app.src.main.java.com.dazone.crewchat.ViewHolders.ChattingSelfViewHolder.java", "BodyUseAPI": ["com.dazone.crewchat.dto.ChattingDto.getLastedMsgDate()", "android.widget.TextView.setText(com.dazone.crewchat.utils.TimeUtils.displayTimeWithoutOffset(com.dazone.crewchat.utils.CrewChatApplication.getInstance().getApplicationContext(), dto.getLastedMsgDate(), 0, TimeUtils.KEY_FROM_SERVER))", "com.dazone.crewchat.utils.TimeUtils.displayTimeWithoutOffset(com.dazone.crewchat.utils.CrewChatApplication.getInstance().getApplicationContext(),dto.getLastedMsgDate(),int,TimeUtils.KEY_FROM_SERVER)", "android.widget.TextView.setText(com.dazone.crewchat.utils.TimeUtils.displayTimeWithoutOffset(com.dazone.crewchat.utils.CrewChatApplication.getInstance().getApplicationContext(), dto.getRegDate(), 0, TimeUtils.KEY_FROM_SERVER))", "com.dazone.crewchat.utils.TimeUtils.displayTimeWithoutOffset(com.dazone.crewchat.utils.CrewChatApplication.getInstance().getApplicationContext(),dto.getRegDate(),int,TimeUtils.KEY_FROM_SERVER)", "com.dazone.crewchat.dto.ChattingDto.getRegDate()"], "Fixed commit": "e8230e0822ed4903369cd5a40b64479453f5f20a", "Url": "https://api.github.com/repos/NgocTrinh123/crewchat", "Date": "2016-11-30T08:31:35Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xml == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6872/buggy-version/BGGPersonal.src.ca.winterfamily.bggpersonal.BGGUser.java", "BodyUseAPI": [], "Fixed commit": "5fbfa4cd0cd815e9bd1d23401146170a314cb1cb", "Url": "https://api.github.com/repos/stewartwinter/bggpersonal", "Date": "2014-05-18T02:06:26Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((edu.grinnell.events.Activities.EventsListActivity) (getActivity())).getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (actionBar != null) actionBar.setDisplayHomeAsUpEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3177/buggy-version/src.edu.grinnell.events.Fragments.EventsDetailFragment.java", "BodyUseAPI": ["android.app.ActionBar.setDisplayHomeAsUpEnabled(boolean)"], "Fixed commit": "a411950ad34114cccd22f9791de20da99b4986f0", "Url": "https://api.github.com/repos/GrinnellAppDev/Grinnell-Events-Android", "Date": "2015-11-15T09:06:43Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.joliciel.jochre.search.web.JochreSearchServlet.LOG.isDebugEnabled()) { com.joliciel.jochre.search.web.JochreSearchServlet.LOG.debug(com.joliciel.jochre.search.web.JochreSearchServlet.getURI(req)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1731/buggy-version/jochre_search_webapp.src.main.java.com.joliciel.jochre.search.web.JochreSearchServlet.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "6b9c85c46bd85a00c07a655031068f1ce0df48ee", "Url": "https://api.github.com/repos/urieli/jochre", "Date": "2017-02-08T15:49:54Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isReplace()) deleteResource(flowProcess.getConfigCopy());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8066/buggy-version/cascading-core.src.main.java.cascading.tap.Tap.java", "BodyUseAPI": [], "Fixed commit": "944df4b760409f63996824a3585a38b148f4d079", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2012-10-09T14:21:56Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.DitaSemia.Base.AdvancedKeyref.KeyRef.fromNode(org.DitaSemia.Oxygen.AuthorNodeWrapper)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(keyRef.isOutputclassFixed())) { documentController.setAttribute(KeyRef.ATTR_OUTPUTCLASS, new ro.sync.ecss.extensions.api.node.AttrValue(editKeyRefDialog.getOutputclass()), keyRefElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4320/buggy-version/java.oxygen-extension-bundle.src.org.DitaSemia.Oxygen.AuthorOperations.EditKeyRef.java", "BodyUseAPI": [], "Fixed commit": "299955966bd17fd5b8e4a8b2d6e539092ab05bb4", "Url": "https://api.github.com/repos/dita-semia/dita-semia-resolver", "Date": "2017-01-31T09:30:55Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mEditorFragment) != null) && (mPost.hasEmptyContentFields())) { org.wordpress.android.util.AppLog.d(T.EDITOR, (\"\" + (mPost))); if (mIsNewPost) { WordPress.wpDB.deletePost(mPost); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6392/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.posts.EditPostActivity.java", "BodyUseAPI": ["WordPress.wpDB.deletePost(org.wordpress.android.models.Post)"], "Fixed commit": "fdfcf832db91a0a042cb7a669ffc58b04ceca870", "Url": "https://api.github.com/repos/nawabhussain/WordPress-Android", "Date": "2016-11-14T16:35:38Z"},
{"Line": "=>1510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (decimal > 18) { double scale = java.lang.Math.pow(10, (decimal * 1.0)); return (java.lang.Math.round((num * scale))) / scale; }else { double div = 1.0; for (int i = 0; i < decimal; i++) { num *= 10.0; div *= 10.0; } return (java.lang.Math.round(num)) / div; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6275/buggy-version/db-engine.src.main.java.com.splicemachine.db.catalog.SystemProcedures.java", "BodyUseAPI": ["java.lang.Math.pow(int,double)"], "Fixed commit": "6a38b1f7a8cbd686e664809e4f435b48ea1bfb84", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2017-07-27T14:12:51Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.vectorgaming.vchat.ChatManager.getDefaultFocusChannel()) != null) { net.vectorgaming.vchat.ChatManager.focusChannel(p, net.vectorgaming.vchat.ChatManager.getDefaultFocusChannel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2789/buggy-version/src.net.vectorgaming.vchat.listeners.PlayerJoinListener.java", "BodyUseAPI": [], "Fixed commit": "3e88f68319cfd70ffa266468c56dff3df910a855", "Url": "https://api.github.com/repos/exload/VChat", "Date": "2013-09-21T07:17:31Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rowNumber == (rowsCount - 1)) && ((pathResistance[(rowNumber - 1)][(columnNumber - 1)]) < (pathResistance[pathRow][columnNumber]))) { pathRow = rowNumber--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3204/buggy-version/LeanDog_CodeChallenge.src.main.java.LeastResistance.java", "BodyUseAPI": [], "Fixed commit": "4660f227b2fa1364329f7979f9481aa7172e17cb", "Url": "https://api.github.com/repos/RWeinfurtner/codeChallenge", "Date": "2017-02-14T00:15:35Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rowNumber == 0) && ((pathResistance[(rowNumber + 1)][columnNumber]) < (pathResistance[pathRow][columnNumber]))) { pathRow = rowNumber++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3204/buggy-version/LeanDog_CodeChallenge.src.main.java.LeastResistance.java", "BodyUseAPI": [], "Fixed commit": "4660f227b2fa1364329f7979f9481aa7172e17cb", "Url": "https://api.github.com/repos/RWeinfurtner/codeChallenge", "Date": "2017-02-14T00:15:35Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.FileUtils.readFileToString(java.io.File,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.sonar.plugins.erlang.sensor.ErlangLibrarySensor.emptyDepPattern.matcher(rebarConfigContent).find()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3097/buggy-version/src.main.java.org.sonar.plugins.erlang.sensor.ErlangLibrarySensor.java", "BodyUseAPI": [], "Fixed commit": "699b926083268c5c1042cadeef85fefa94c01b78", "Url": "https://api.github.com/repos/kalidasya/sonar-erlang-plugin", "Date": "2012-10-04T05:49:54Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tagfeeds.toFile().exists()) { java.nio.file.Files.walkFileTree(tagfeeds, new java.nio.file.SimpleFileVisitor<java.nio.file.Path>() { @java.lang.Override public java.nio.file.FileVisitResult visitFile(java.nio.file.Path file, java.nio.file.attribute.BasicFileAttributes attrs) throws java.io.IOException { java.nio.file.Files.delete(file); return java.nio.file.FileVisitResult.CONTINUE; } @java.lang.Override public java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path dir, java.io.IOException exc) throws java.io.IOException { java.nio.file.Files.delete(dir); return java.nio.file.FileVisitResult.CONTINUE; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5432/buggy-version/src.main.java.org.rapidpm.generator.Generator.java", "BodyUseAPI": ["java.nio.file.Files.walkFileTree(java.nio.file.Path,java.nio.file.SimpleFileVisitor<java.nio.file.Path>)"], "Fixed commit": "7d5a7233912d5256ce82422ea330ec7c219da491", "Url": "https://api.github.com/repos/RapidPM/rapidpm.github.io", "Date": "2014-05-25T20:31:43Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasMeasureDimension) { url.addFilters(); }else { url.addColumns(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/728/buggy-version/src.main.java.fi.thl.summary.model.hydra.HydraTablePresentation.java", "BodyUseAPI": [], "Fixed commit": "590b389c157bd3d4e9c45ae5a20e188a8fcbc8a6", "Url": "https://api.github.com/repos/THLfi/tiku", "Date": "2017-11-18T11:48:54Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jivesoftware.webchat.ChatSession.getGroupChat()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (chat != null) { final java.util.Iterator<java.lang.String> iter = chat.getOccupants(); while (iter.hasNext()) { java.lang.String from = ((java.lang.String) (iter.next())); java.lang.String tFrom = org.jivesoftware.smack.util.StringUtils.parseResource(from); java.lang.String nickname = chat.getNickname(); if ((tFrom != null) && (!(tFrom.equals(nickname)))) { org.jivesoftware.smackx.MessageEventManager messageEventManager = chatSession.getMessageEventManager(); messageEventManager.sendComposingNotification(from, \"l0k1\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3941/buggy-version/src.java.org.jivesoftware.webchat.ChatUtils.java", "BodyUseAPI": ["org.jivesoftware.smackx.muc.MultiUserChat.getOccupants()", "org.jivesoftware.smackx.muc.MultiUserChat.getNickname()"], "Fixed commit": "94f45caff08764699e255537c29e4d3c242c392e", "Url": "https://api.github.com/repos/HeroPD/Fastpath-webchat", "Date": "2016-09-09T02:54:14Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter.getItems().length) == 0) { android.widget.Toast.makeText(this, R.string.no_items_to_remove, Toast.LENGTH_LONG).show(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2539/buggy-version/app.src.main.java.com.example.raajesharunachalam.taskmanager.ItemsActivity.java", "BodyUseAPI": [], "Fixed commit": "1a974e94e28e283dc618936efb55833de3b75345", "Url": "https://api.github.com/repos/Raajesh12/Shopping_Collaborator_App", "Date": "2017-08-22T23:32:02Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.args().getChildCount()) != 0) { newTexts.put(ctx, (((((((blank) + \"ldp\\n\") + s2) + \"\\n\") + (blank)) + \"call \") + s1)); }else { newTexts.put(ctx, (((((blank) + \"ldp\\n\") + (blank)) + \"call \") + s1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6159/buggy-version/week04.src.UCodeGeneratorListener.java", "BodyUseAPI": ["org.antlr.v4.runtime.tree.ParseTreeProperty<java.lang.String>.put(MiniCParser.ExprContext,java.lang.String)", "org.antlr.v4.runtime.tree.ParseTreeProperty<java.lang.String>.put(MiniCParser.ExprContext,java.lang.String)"], "Fixed commit": "cc9d5c254d491c1ac358f04fb8a8bea920f7f13f", "Url": "https://api.github.com/repos/racell/2016_fall_compiler", "Date": "2016-12-07T08:20:17Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.Object>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (obj != null) { if (obj instanceof org.eclipse.core.runtime.IAdaptable) { org.eclipse.core.runtime.IAdaptable adapt = ((org.eclipse.core.runtime.IAdaptable) (obj)); obj = ((org.eclipse.core.resources.IResource) (adapt.getAdapter(org.eclipse.core.resources.IResource.class))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2877/buggy-version/plugins.net.ossindex.eclipse.common.builder.src.net.ossindex.eclipse.common.builder.service.ManualBuildState.java", "BodyUseAPI": [], "Fixed commit": "df6e2a16394c24f5aedb6078f22b48ce40169a00", "Url": "https://api.github.com/repos/OSSIndex/eclipse-common-build", "Date": "2015-12-07T02:35:35Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zulip.android.networking.HTTPRequest.execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseData.isSuccessful()) { registeredOrGotEventsThisRun = true; app.setEventQueueId(response.getString(\"queue_id\")); app.setLastEventId(response.getInt(\"last_event_id\")); processRegister(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2974/buggy-version/app.src.main.java.com.zulip.android.networking.AsyncGetEvents.java", "BodyUseAPI": [], "Fixed commit": "b8ce7e060893ec49f039fc38439044f5d98526c0", "Url": "https://api.github.com/repos/zulip/zulip-android", "Date": "2016-08-23T20:42:11Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((extractType) == (cz.cuni.mff.xrg.intlib.extractor.file.FileExtractType.FileExtractType.UPLOAD_FILE)) { textFieldPath.setReadOnly(false); textFieldPath.setValue(conf.Path); textFieldPath.setReadOnly(true); }else { textFieldPath.setValue(conf.Path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4451/buggy-version/module.File_extractor.src.main.java.cz.cuni.mff.xrg.intlib.extractor.file.FileExtractorDialog.java", "BodyUseAPI": [], "Fixed commit": "769d42abc1c069c4154be82de443959c29efb0a3", "Url": "https://api.github.com/repos/mff-uk/intlib", "Date": "2013-07-14T16:39:49Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((count) >= (values.size())) { count = (values.size()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7964/buggy-version/pandemic-lib.src.pandemic.game.board.parts.InfecetionRate.java", "BodyUseAPI": ["java.util.List<pandemic.game.board.parts.InfecetionRate.Value>.size()"], "Fixed commit": "75e24a30719b468e5345d0702a6e58c120ee2e84", "Url": "https://api.github.com/repos/judovana/pandemic", "Date": "2016-12-29T20:30:39Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (split_req[1].equals(\"topLeaders\")) { topLeaders.topLeaders(connection, resp); }else if ((split_req.length) < 3) { resp.setStatus(404); }else if (split_req[1].equals(\"monsters\")) { getMonsterBox.getMonsterBox(connection, resp, split_req[2]); }else { resp.setStatus(404); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7054/buggy-version/src.main.java.Main.java", "BodyUseAPI": ["Main.getMonsterBox(java.sql.Connection,javax.servlet.http.HttpServletResponse,java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "807e4acbed5dd87be14987540efef6caa65a6f65", "Url": "https://api.github.com/repos/Gear61/PAD-Friend-Finder-Backend", "Date": "2015-09-30T21:55:18Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!result) { android.util.Log.i(Utils.TAG, \"Could not find scrollable view or scroll failed.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6395/buggy-version/android.neo-service.app.src.main.java.com.inceptai.neoservice.flatten.UiManager.java", "BodyUseAPI": [], "Fixed commit": "15524192e56bb197db79c59e5ac85d5e7504ee55", "Url": "https://api.github.com/repos/InceptAi/neo", "Date": "2017-07-29T23:54:50Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((org.osate.aadl2.NamedElement) (obj)).getName()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6384/buggy-version/org.osate.xtext.aadl2.errormodel.src.org.osate.xtext.aadl2.errormodel.naming.ErrorModelQualifiedNameProvider.java", "BodyUseAPI": [], "Fixed commit": "3aab137ab5547b8d139ed48ee765d2cfc1c61d95", "Url": "https://api.github.com/repos/osate/ErrorModelV2", "Date": "2013-10-17T02:42:42Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (simpleFillShape == null) simpleFillShape = RenderMultipoints.clsUtilityGE.createSimpleFillShape(tg, shapeInfo, polylines);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2801/buggy-version/core.JavaRendererServer.src.main.java.RenderMultipoints.clsUtilityGE.java", "BodyUseAPI": [], "Fixed commit": "0cefc1696dbc8c076071434692dbced2e74f4871", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2014-04-21T21:24:33Z"},
{"Line": "=>1142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["JavaTacticalRenderer.TGLight.get_LineType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lineType == (JavaLineArray.TacticalLines.AIRFIELD)) if (j == 1) shape.setFillColor(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2801/buggy-version/core.JavaLineArray.src.main.java.JavaTacticalRenderer.clsUtility.java", "BodyUseAPI": [], "Fixed commit": "0cefc1696dbc8c076071434692dbced2e74f4871", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2014-04-21T21:24:33Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (JoshuaConfiguration.outputFormat.contains(\"%t\")) { resetState(); outputString.replace(\"%t\", derivationState.getHypothesis(this, false, features, models)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5818/buggy-version/src.joshua.decoder.hypergraph.KBestExtractor.java", "BodyUseAPI": [], "Fixed commit": "0612d3728f5f82537142e04f0b34e1d193202931", "Url": "https://api.github.com/repos/lukeorland/joshua", "Date": "2012-11-05T03:28:17Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDatabase().insertWithOnConflict(GrievanceTagsTable.TABLE_GRIEVANCE_TAGS,<nulltype>,android.content.ContentValues,SQLiteDatabase.CONFLICT_IGNORE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tagRowId != (-1)) { tag.setID(tagRowId); android.content.ContentValues tagTypeValues = new android.content.ContentValues(); tagTypeValues.put(GrievanceTypesTagsTable.COLUMN_GRIEVANCE_TYPE_ID, typeRowId); tagTypeValues.put(GrievanceTypesTagsTable.COLUMN_GRIEVANCE_TAG_ID, tagRowId); getDatabase().insertWithOnConflict(GrievanceTypesTagsTable.TABLE_GRIEVANCE_TYPES_TAGS, null, tagTypeValues, SQLiteDatabase.CONFLICT_IGNORE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8457/buggy-version/App.src.main.java.com.lnotes.grrr.data.dao.GrievanceTypeDao.java", "BodyUseAPI": ["android.content.ContentValues.put(GrievanceTypesTagsTable.COLUMN_GRIEVANCE_TAG_ID,long)", "com.lnotes.grrr.data.model.GrievanceTag.setID(long)"], "Fixed commit": "48c16e74294c80760a07982977457c3c45245084", "Url": "https://api.github.com/repos/lewisNotestine/BlackBile", "Date": "2014-02-16T02:10:54Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.terasology.game.CoreRegistry.get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((config.getSystem().getDebugRenderingStage()) == (SystemConfig.DebugRenderingStages.DEBUG_STAGE_BAKED_OCCLUSION.ordinal())) { org.lwjgl.opengl.GL13.glActiveTexture(((org.lwjgl.opengl.GL13.GL_TEXTURE0) + texId)); org.terasology.rendering.renderingProcesses.DefaultRenderingProcess.getInstance().bindFboTexture(\"sceneOpaque\"); program.setInt(\"texDebug\", (texId++)); }else if ((config.getSystem().getDebugRenderingStage()) == (SystemConfig.DebugRenderingStages.DEBUG_STAGE_RECONSTRUCTED_POSITION.ordinal())) { org.terasology.rendering.cameras.Camera activeCamera = org.terasology.game.CoreRegistry.get(org.terasology.rendering.world.WorldRenderer.class).getActiveCamera(); if (activeCamera != null) { program.setMatrix4(\"invProjMatrix\", activeCamera.getInverseProjectionMatrix()); } org.lwjgl.opengl.GL13.glActiveTexture(((org.lwjgl.opengl.GL13.GL_TEXTURE0) + texId)); org.terasology.rendering.renderingProcesses.DefaultRenderingProcess.getInstance().bindFboDepthTexture(\"sceneOpaque\"); program.setInt(\"texDebug\", (texId++)); }else if ((config.getSystem().getDebugRenderingStage()) == (SystemConfig.DebugRenderingStages.DEBUG_STAGE_BLOOM.ordinal())) { org.lwjgl.opengl.GL13.glActiveTexture(((org.lwjgl.opengl.GL13.GL_TEXTURE0) + texId)); org.terasology.rendering.renderingProcesses.DefaultRenderingProcess.getInstance().bindFboTexture(\"sceneBloom1\"); program.setInt(\"texDebug\", (texId++)); }else if ((config.getSystem().getDebugRenderingStage()) == (SystemConfig.DebugRenderingStages.DEBUG_STAGE_HIGH_PASS.ordinal())) { org.lwjgl.opengl.GL13.glActiveTexture(((org.lwjgl.opengl.GL13.GL_TEXTURE0) + texId)); org.terasology.rendering.renderingProcesses.DefaultRenderingProcess.getInstance().bindFboTexture(\"sceneHighPass\"); program.setInt(\"texDebug\", (texId++)); }else if ((config.getSystem().getDebugRenderingStage()) == (SystemConfig.DebugRenderingStages.DEBUG_STAGE_SKY_BAND.ordinal())) { org.lwjgl.opengl.GL13.glActiveTexture(((org.lwjgl.opengl.GL13.GL_TEXTURE0) + texId)); org.terasology.rendering.renderingProcesses.DefaultRenderingProcess.getInstance().bindFboTexture(\"sceneSkyBand1\"); program.setInt(\"texDebug\", (texId++)); }else if ((config.getSystem().getDebugRenderingStage()) == (SystemConfig.DebugRenderingStages.DEBUG_STAGE_LIGHT_SHAFTS.ordinal())) { org.lwjgl.opengl.GL13.glActiveTexture(((org.lwjgl.opengl.GL13.GL_TEXTURE0) + texId)); org.terasology.rendering.renderingProcesses.DefaultRenderingProcess.getInstance().bindFboTexture(\"lightShafts\"); program.setInt(\"texDebug\", (texId++)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/9178/buggy-version/src.main.java.org.terasology.rendering.shader.ShaderParametersDebug.java", "BodyUseAPI": ["org.terasology.config.Config.getSystem()", "org.terasology.config.Config.getSystem()", "config.getSystem().getDebugRenderingStage()", "org.terasology.config.Config.getSystem()", "org.terasology.config.Config.getSystem()", "config.getSystem().getDebugRenderingStage()", "config.getSystem().getDebugRenderingStage()", "config.getSystem().getDebugRenderingStage()", "org.terasology.config.Config.getSystem()", "config.getSystem().getDebugRenderingStage()"], "Fixed commit": "05530b8db7bfd1f0f7e43a2b7e98dd9384e71d81", "Url": "https://api.github.com/repos/MovingBlocks/Terasology", "Date": "2013-07-07T14:38:41Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.compareTo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (compareIdentifier != 0) return compareIdentifier;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3573/buggy-version/orcid-persistence.src.main.java.org.orcid.persistence.jpa.entities.WorkExternalIdentifierEntity.java", "BodyUseAPI": [], "Fixed commit": "270800d520c8e5f1a888b0a405d3ba24ecac537b", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2013-10-17T18:43:13Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((identifier) == null) { if ((other.identifier) != null) return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3573/buggy-version/orcid-persistence.src.main.java.org.orcid.persistence.jpa.entities.WorkExternalIdentifierEntity.java", "BodyUseAPI": [], "Fixed commit": "270800d520c8e5f1a888b0a405d3ba24ecac537b", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2013-10-17T18:43:13Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fieldType().indexOptions()) != (org.apache.lucene.index.IndexOptions.NONE)) || (fieldType().stored())) { context.doc().add(new org.apache.lucene.document.Field(fieldType().name(), (value ? \"T\" : \"F\"), fieldType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7073/buggy-version/core.src.main.java.org.elasticsearch.index.mapper.BooleanFieldMapper.java", "BodyUseAPI": [], "Fixed commit": "a65bf4d30588341447c860658ef74abf05c265a6", "Url": "https://api.github.com/repos/strapdata/elassandra", "Date": "2017-11-12T21:09:40Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((state.getTurn()) == 8) { if (player == 1) { state.removeP2BuiltDistrict(); return true; }else { state.removeP1BuiltDistrict(); return true; } }else if ((state.getTurn()) == 4) { if (player == 1) { return true; }else if (player == 2) { return true; }else if (player == 3) { return true; }else { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/222/buggy-version/app.src.main.java.edu.up.citadels.citadels.CitadelsLocalGame.java", "BodyUseAPI": ["edu.up.citadels.citadels.CitadelsGameState.removeP1BuiltDistrict()", "edu.up.citadels.citadels.CitadelsGameState.getTurn()", "edu.up.citadels.citadels.CitadelsGameState.removeP2BuiltDistrict()"], "Fixed commit": "5222678b782bedfcb6d88d111f8e347c837ca098", "Url": "https://api.github.com/repos/davidsku18/Citadels", "Date": "2017-03-24T01:51:34Z"},
{"Line": "=>984", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (is == null) { listener.getLogger().println(\"ErrorStream is null, is=\\\"\\\"\"); is = org.apache.commons.io.IOUtils.toInputStream(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6340/buggy-version/src.main.java.org.jenkinsci.plugins.ParameterizedRemoteTrigger.RemoteBuildConfiguration.java", "BodyUseAPI": [], "Fixed commit": "c3f39b79e0240a4b0b96cd14bd50982abb6577fc", "Url": "https://api.github.com/repos/jiri-meluzin/parameterized-remote-trigger-plugin", "Date": "2017-12-15T13:13:04Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dir.isFile()) { dir.delete(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/412/buggy-version/core.sorcer-platform.src.main.java.sorcer.util.GenericUtil.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "5a192f034e33ca6e31390e3d7af1a69a8b8ac7e3", "Url": "https://api.github.com/repos/mwsobol/SORCER", "Date": "2015-07-24T20:39:13Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ucchyocean.chatbot.URLResponcer.getURLTitle(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (title != null) { responce = responce.replace(\"%title\", title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2480/buggy-version/src.main.java.com.github.ucchyocean.chatbot.URLResponcer.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "b2ed755cbc4964925d0496e28c5805cdfae712d8", "Url": "https://api.github.com/repos/ucchyocean/BukkitChatBot", "Date": "2014-09-01T18:21:10Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.knime.core.data.DataRow.getCell(((de.mpicbg.tds.knime.knutils.InputTableAttribute) (column)).getColumnIndex())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valueCell.isMissing()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3741/buggy-version/src.de.mpicbg.tds.knime.hcstools.preprocessing.OutlierRemoval.java", "BodyUseAPI": [], "Fixed commit": "a43d85dfed111b174f7b918dd9e4c2dfe077ce08", "Url": "https://api.github.com/repos/knime-mpicbg/HCS-Tools", "Date": "2012-05-31T09:28:15Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.knime.core.data.DataRow.getCell(((de.mpicbg.tds.knime.knutils.InputTableAttribute) (column)).getColumnIndex())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valueCell.isMissing()) { c++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3741/buggy-version/src.de.mpicbg.tds.knime.hcstools.preprocessing.OutlierRemoval.java", "BodyUseAPI": [], "Fixed commit": "a43d85dfed111b174f7b918dd9e4c2dfe077ce08", "Url": "https://api.github.com/repos/knime-mpicbg/HCS-Tools", "Date": "2012-05-31T09:28:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vg.civcraft.mc.namelayer.command.commands.MergeGroups.getGroup(java.lang.String)", "vg.civcraft.mc.namelayer.command.commands.MergeGroups.getGroup(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (g == toMerge) { p.sendMessage(((org.bukkit.ChatColor.RED) + \"You cannot merge a group into itself\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6982/buggy-version/src.vg.civcraft.mc.namelayer.command.commands.MergeGroups.java", "BodyUseAPI": [], "Fixed commit": "6c62c57dda26a6125b3f82b872577a2fc641092b", "Url": "https://api.github.com/repos/jjj5311/NameLayer", "Date": "2015-03-10T02:23:38Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messageListener) instanceof cgl.iotcloud.core.stream.StreamingListener) { ((cgl.iotcloud.core.stream.StreamingListener) (messageListener)).setMessageHandler(handler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2514/buggy-version/modules.core.src.main.java.cgl.iotcloud.core.client.Client.java", "BodyUseAPI": [], "Fixed commit": "4fedd6f10b296f68d08c451a75c7227779c88fe6", "Url": "https://api.github.com/repos/iotcloud/IoTCloud", "Date": "2012-03-15T14:28:00Z"},
{"Line": "=>3142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((aCuinvoize.getInvoiceDate()) == null ? \"\" : aCuinvoize.getInvoiceDate().toString()).indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((transaction != null) && (transaction.equalsIgnoreCase(\"close\"))) || (dateval != 0)) { if ((aCuinvoize.getInvoiceDate()) != (aCuinvoice.getInvoiceDate())) { itsLogger.info((((\"Transaction Rollback. .. ...\" + (aCuinvoize.getInvoiceAmount())) + \"#@#\") + (aCuinvoice.getInvoiceAmount()))); com.turborep.turbotracker.company.dao.Coledgersource aColedgersource = itsGltransactionService.getColedgersourceDetail(\"CI\"); com.turborep.turbotracker.company.dao.Cofiscalperiod cfp = itsGltransactionService.getCofiscalPeriodDetail(); com.turborep.turbotracker.banking.dao.GlRollback glRollback = new com.turborep.turbotracker.banking.dao.GlRollback(); glRollback.setVeBillID(aCuinvoice.getCuInvoiceId()); glRollback.setCoLedgerSourceID(aColedgersource.getCoLedgerSourceId()); glRollback.setPeriodID(cfp.getCoFiscalPeriodId()); glRollback.setYearID(cfp.getCoFiscalYearId()); glRollback.setTransactionDate(aCuinvoize.getInvoiceDate()); itsGltransactionService.rollBackGlTransaction(glRollback); itsGltransactionService.receiveCustomerInvoiceBill(aCuinvoice, coFiscalYearId, coFiscalPeriodId, aUserBean.getFullName()); if (delData != null) { theCuinvoice.setUserName(aUserBean.getFullName()); theCuinvoice.setReason(reason); if ((aCuinvoize.getInvoiceAmount().compareTo(theCuinvoice.getInvoiceAmount())) != 0) itsJobService.saveCustomerInvoiceLog(aCuinvoize, theCuinvoice, \"CI-Line Item(s) Deleted\", 1, coFiscalPeriodId, coFiscalYearId); else itsJobService.saveCustomerInvoiceLog(aCuinvoize, theCuinvoice, \"CI-Line Item(s) Deleted\", 0, coFiscalPeriodId, coFiscalYearId); }else { theCuinvoice.setUserName(aUserBean.getFullName()); theCuinvoice.setReason(reason); if ((((aCuinvoize.getSubtotal().compareTo(theCuinvoice.getSubtotal())) != 0) || ((aCuinvoize.getFreight().compareTo(theCuinvoice.getFreight())) != 0)) || ((aCuinvoize.getTaxAmount().compareTo(theCuinvoice.getTaxAmount())) != 0)) itsJobService.saveCustomerInvoiceLog(aCuinvoize, theCuinvoice, \"CI-Edited\", 1, coFiscalPeriodId, coFiscalYearId); else itsJobService.saveCustomerInvoiceLog(aCuinvoize, theCuinvoice, \"CI-Edited\", 0, coFiscalPeriodId, coFiscalYearId); } }else if (((aCuinvoize.getInvoiceAmount().compareTo(aCuinvoice.getInvoiceAmount())) != 0) || (dateval != 0)) { itsLogger.info((((\"Transaction Rollback. .. ...\" + (aCuinvoize.getInvoiceAmount())) + \"#@#\") + (aCuinvoice.getInvoiceAmount()))); com.turborep.turbotracker.company.dao.Coledgersource aColedgersource = itsGltransactionService.getColedgersourceDetail(\"CI\"); com.turborep.turbotracker.banking.dao.GlRollback glRollback = new com.turborep.turbotracker.banking.dao.GlRollback(); glRollback.setVeBillID(aCuinvoice.getCuInvoiceId()); glRollback.setCoLedgerSourceID(aColedgersource.getCoLedgerSourceId()); glRollback.setPeriodID(coFiscalPeriodId); glRollback.setYearID(coFiscalYearId); glRollback.setTransactionDate(aCuinvoice.getInvoiceDate()); itsGltransactionService.rollBackGlTransaction(glRollback); itsGltransactionService.receiveCustomerInvoiceBill(aCuinvoice, coFiscalYearId, coFiscalPeriodId, aUserBean.getFullName()); if (delData != null) { theCuinvoice.setUserName(aUserBean.getFullName()); theCuinvoice.setReason(reason); if ((aCuinvoize.getInvoiceAmount().compareTo(theCuinvoice.getInvoiceAmount())) != 0) itsJobService.saveCustomerInvoiceLog(aCuinvoize, theCuinvoice, \"CI-Line Item(s) Deleted\", 1, coFiscalPeriodId, coFiscalYearId); else itsJobService.saveCustomerInvoiceLog(aCuinvoize, theCuinvoice, \"CI-Line Item(s) Deleted\", 0, coFiscalPeriodId, coFiscalYearId); }else { theCuinvoice.setUserName(aUserBean.getFullName()); theCuinvoice.setReason(reason); if ((((aCuinvoize.getSubtotal().compareTo(theCuinvoice.getSubtotal())) != 0) || ((aCuinvoize.getFreight().compareTo(theCuinvoice.getFreight())) != 0)) || ((aCuinvoize.getTaxAmount().compareTo(theCuinvoice.getTaxAmount())) != 0)) itsJobService.saveCustomerInvoiceLog(aCuinvoize, theCuinvoice, \"CI-Edited\", 1, coFiscalPeriodId, coFiscalYearId); else itsJobService.saveCustomerInvoiceLog(aCuinvoize, theCuinvoice, \"CI-Edited\", 0, coFiscalPeriodId, coFiscalYearId); } }else { if (delData != null) { theCuinvoice = itsJobService.getCustomerInvoiceDetails(aCuinvoice.getCuInvoiceId()); theCuinvoice.setUserName(aUserBean.getFullName()); theCuinvoice.setReason(reason); itsJobService.saveCustomerInvoiceLog(aCuinvoize, theCuinvoice, \"CI-Line Item(s) Deleted\", 0, coFiscalPeriodId, coFiscalYearId); }else { theCuinvoice.setUserName(aUserBean.getFullName()); theCuinvoice.setReason(reason); itsJobService.saveCustomerInvoiceLog(aCuinvoize, theCuinvoice, \"CI-Edited\", 0, coFiscalPeriodId, coFiscalYearId); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4227/buggy-version/turbotracker.src.main.java.com.turborep.turbotracker.job.controller.JobReleaseFormController.java", "BodyUseAPI": [], "Fixed commit": "8688f40e7e85487e0557e2a556bcba4baf0bb6eb", "Url": "https://api.github.com/repos/SenthilRaju/AandETurboPro", "Date": "2016-12-15T11:20:18Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.StringUtils.trimToNull(operation.getConfiguration(org.opencastproject.execute.operation.handler.ExecuteManyWorkflowOperationHandler.SOURCE_FLAVOR_PROPERTY))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (sourceFlavor != null) matchingFlavor = org.opencastproject.mediapackage.MediaPackageElementFlavor.parseFlavor(sourceFlavor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1149/buggy-version/matterhorn-execute-operations.src.main.java.org.opencastproject.execute.operation.handler.ExecuteManyWorkflowOperationHandler.java", "BodyUseAPI": ["org.opencastproject.mediapackage.MediaPackageElementFlavor.parseFlavor(java.lang.String)"], "Fixed commit": "f2494b22a394806b32a9ba7f42696f6e7932e35c", "Url": "https://api.github.com/repos/teltek/matterhorn-modules", "Date": "2012-12-17T17:15:17Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.archive.modules.deciderules.recrawl.IdenticalDigestDecideRule.hasIdenticalDigest(curi)) { dupByHashBytes += curi.getContentSize(); (dupByHashUrls)++; }else if (curi.getAnnotations().contains(\"warcRevisit:uriAgnosticDigest\")) { dupByHashBytes += curi.getContentSize(); (dupByHashUrls)++; }else { novelBytes += curi.getContentSize(); (novelUrls)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3457/buggy-version/modules.src.main.java.org.archive.modules.fetcher.FetchStats.java", "BodyUseAPI": ["org.archive.modules.CrawlURI.getContentSize()", "curi.getAnnotations().contains(java.lang.String)", "org.archive.modules.CrawlURI.getContentSize()", "org.archive.modules.CrawlURI.getAnnotations()", "org.archive.modules.CrawlURI.getContentSize()"], "Fixed commit": "d5693563f8cb3d8d90077610cbbf5a24b2f84175", "Url": "https://api.github.com/repos/internetarchive/heritrix3", "Date": "2013-04-30T01:11:24Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.springframework.util.CollectionUtils.isEmpty(remitoDetalle)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/325/buggy-version/GTRetail-web.src.main.java.ar.com.gtsoftware.controller.ventas.ShopCartBean.java", "BodyUseAPI": [], "Fixed commit": "a76df188496417b6f6f05a94c8a847978c1d04dd", "Url": "https://api.github.com/repos/GTSoftware/GTRetail", "Date": "2017-10-09T01:26:42Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/16/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "8640bdff6144349cc1607c81b45d1f656650250f", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(name.isEmpty())) { com.codeup.controller.User user = ((com.codeup.controller.User) (org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getPrincipal())); com.codeup.controller.GroceryList glist = groceryListsRepository.save(new com.codeup.controller.GroceryList(name)); userGListRepository.save(new com.codeup.controller.UserGList(glist, user)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3694/buggy-version/src.main.java.com.codeup.controller.GroceryListsController.java", "BodyUseAPI": ["com.codeup.controller.GroceryListsRepository.save(com.codeup.controller.GroceryList)"], "Fixed commit": "169dd34d9bf575e00040a81ee1700fc0e63d5c77", "Url": "https://api.github.com/repos/Capstone-Notably/Get-It", "Date": "2017-07-10T02:37:52Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((courseClassesTO) != null) && ((courseClassesTO.getCourseClasses().size()) > 0)) { updateCourseClassUI(courseClassesTO.getCourseClasses().get(0)); }else { updateCourseClassUI(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1669/buggy-version/kornell-gwt.src.main.java.kornell.gui.client.presentation.admin.home.AdminHomePresenter.java", "BodyUseAPI": ["kornell.core.to.CourseClassesTO.getCourseClasses()", "courseClassesTO.getCourseClasses().get(int)", "kornell.gui.client.presentation.admin.home.AdminHomePresenter.2.updateCourseClassUI(courseClassesTO.getCourseClasses().get(0))"], "Fixed commit": "16da1f4a1bd5953c987acab3850d492d54144471", "Url": "https://api.github.com/repos/Craftware/Kornell", "Date": "2014-08-13T00:16:35Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (containedClass.isInstance(value)) { idProperty.set(value, id[0]); if ((getIdVertexFor(value)) == null) { try { persister.createIdVertex(database, value.getClass(), getIdVertexId(value, idProperty, requiresIdGeneration)); return true; } catch (java.lang.Exception e) { return false; } }else { return false; } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8247/buggy-version/gaedo-blueprints.src.main.java.com.dooapp.gaedo.blueprints.BluePrintsBackedFinderService.java", "BodyUseAPI": ["com.dooapp.gaedo.properties.Property.set(DataType,java.lang.Object)", "DataType.getClass()", "com.dooapp.gaedo.blueprints.BluePrintsBackedFinderService<DataType, InformerType>.getIdVertexFor(DataType)", "com.dooapp.gaedo.blueprints.BluePrintsBackedFinderService<DataType, InformerType>.getIdVertexId(DataType,com.dooapp.gaedo.properties.Property,boolean)", "com.dooapp.gaedo.blueprints.BluePrintsPersister.createIdVertex(com.tinkerpop.blueprints.pgm.IndexableGraph,java.lang.Class<? extends java.lang.Object>,java.lang.String)"], "Fixed commit": "8bd6551ffa36c5a3ffc283c31f630186563c067e", "Url": "https://api.github.com/repos/Riduidel/gaedo", "Date": "2012-06-22T08:29:42Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.index.OIndex<?>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((indexValue != null) && (!(indexValue instanceof java.lang.Iterable<?>))) indexValue = java.util.Arrays.asList(indexValue);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4832/buggy-version/blueprints-orient-graph.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.Object)"], "Fixed commit": "0d5ebb99c2afaa090dbc9a99063c1232cc4c3bca", "Url": "https://api.github.com/repos/conflictpredictor/blueprints", "Date": "2012-12-24T21:52:43Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.index.OIndex<?>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((indexValue != null) && (!(indexValue instanceof java.lang.Iterable<?>))) indexValue = java.util.Arrays.asList(indexValue);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4832/buggy-version/blueprints-orient-graph.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.Object)"], "Fixed commit": "0d5ebb99c2afaa090dbc9a99063c1232cc4c3bca", "Url": "https://api.github.com/repos/conflictpredictor/blueprints", "Date": "2012-12-24T21:52:43Z"},
{"Line": "=>671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.attendingUsers.contains(user))) this.attendingUsers.add(user);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2866/buggy-version/calendar.app.models.Event.java", "BodyUseAPI": ["java.util.List<models.User>.add(models.User)"], "Fixed commit": "479a6cf63121889e42d94521bbee8b9ba2680c4d", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2011-team1", "Date": "2011-11-15T20:19:07Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof org.drugis.addis.entities.TreatmentActivity) { return new org.drugis.addis.presentation.TreatmentActivityPresentation(((org.drugis.addis.entities.TreatmentActivity) (obj)), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1481/buggy-version/src.main.java.org.drugis.addis.presentation.PresentationModelFactory.java", "BodyUseAPI": [], "Fixed commit": "b6f6efaebbb9e61876b63d56d927a923ffaa858e", "Url": "https://api.github.com/repos/gertvv/addis", "Date": "2011-04-11T12:40:32Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cl.makinolas.atk.actors.Hero.getInstance().hasBody())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6096/buggy-version/core.src.cl.makinolas.atk.actors.enemies.FollowerEnemy.java", "BodyUseAPI": [], "Fixed commit": "0c0af181493a729f3e895e45f3e49c6f8a88f234", "Url": "https://api.github.com/repos/juakotorres/Makinolas", "Date": "2016-10-04T04:04:37Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cl.makinolas.atk.actors.enemies.Hero.getInstance().hasBody())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6096/buggy-version/core.src.cl.makinolas.atk.actors.enemies.Enemy.java", "BodyUseAPI": [], "Fixed commit": "0c0af181493a729f3e895e45f3e49c6f8a88f234", "Url": "https://api.github.com/repos/juakotorres/Makinolas", "Date": "2016-10-04T04:04:37Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seconds < 10) { fakeZero = \"0\"; }else { fakeZero = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1299/buggy-version/app.src.main.java.winterday.winterssptracker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e35082f7f03b74009e3a752b16bb02f4661bc187", "Url": "https://api.github.com/repos/darkdanito/Wintery_SSP_Tracker", "Date": "2016-08-12T12:07:45Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seconds < 10) { fakeZero = \"0\"; }else { fakeZero = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1299/buggy-version/app.src.main.java.winterday.winterssptracker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e35082f7f03b74009e3a752b16bb02f4661bc187", "Url": "https://api.github.com/repos/darkdanito/Wintery_SSP_Tracker", "Date": "2016-08-12T12:07:45Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seconds < 10) { fakeZero = \"0\"; }else { fakeZero = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1299/buggy-version/app.src.main.java.winterday.winterssptracker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e35082f7f03b74009e3a752b16bb02f4661bc187", "Url": "https://api.github.com/repos/darkdanito/Wintery_SSP_Tracker", "Date": "2016-08-12T12:07:45Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((handler.getType()) == (buildcraft.api.transport.IStripesHandler.StripesHandlerType.ITEM_USE_LAST)) { lastHandlers.add(handler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7033/buggy-version/common.buildcraft.transport.pipes.PipeItemsStripes.java", "BodyUseAPI": ["java.util.HashSet<buildcraft.api.transport.IStripesHandler>.add(buildcraft.api.transport.IStripesHandler)"], "Fixed commit": "ff009e099e81d51cfb3b746a11731a2f2dea274c", "Url": "https://api.github.com/repos/hea3ven/BuildCraft", "Date": "2015-02-13T02:32:57Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (number != \"\") { numbersList.add((\"-\" + number)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/834/buggy-version/app.src.main.java.com.dhankher.searchengine.calculator.Calculator.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "5b131b73827bfe5c5cf8578d878d935911ad7ab4", "Url": "https://api.github.com/repos/pkdhankher/Math-Calculations", "Date": "2017-03-30T06:04:24Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!schedule_Enabled) { com.example.alexthomas.myapplication.MainActivity.lastTimerisNull = true; store_timer_null(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7013/buggy-version/java.com.example.alexthomas.myapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "829d90fae7180ebf5a77896641ab034c8d87490d", "Url": "https://api.github.com/repos/kevindhu/getwoke", "Date": "2017-01-15T08:13:39Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.pos) > (size)) { throw new java.util.NoSuchElementException(\"No more elements\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6218/buggy-version/chapter_004.src.main.java.ru.job4j.list.ArrayContainer.java", "BodyUseAPI": [], "Fixed commit": "d4512eddc51babe6ce86657b55b9e1830d59b736", "Url": "https://api.github.com/repos/pkukharenka/pkukharenka", "Date": "2017-12-22T15:39:16Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.Camera.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parameters.getMaxNumFocusAreas()) >= (focusAreas.size())) { parameters.setFocusAreas(focusAreas); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2711/buggy-version/sample-datacapture.app.src.main.java.com.abbyy.mobile.sample.MainActivity.java", "BodyUseAPI": ["Camera.Parameters.setFocusAreas(java.util.List<Camera.Area>)"], "Fixed commit": "a808ede514ed015d03c6bb6795dc435fee1bacec", "Url": "https://api.github.com/repos/abbyysdk/RTR-SDK.Android", "Date": "2017-09-21T10:51:42Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.Camera.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parameters.getMaxNumMeteringAreas()) >= (focusAreas.size())) { parameters.setMeteringAreas(focusAreas); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2711/buggy-version/sample-datacapture.app.src.main.java.com.abbyy.mobile.sample.MainActivity.java", "BodyUseAPI": ["Camera.Parameters.setMeteringAreas(java.util.List<Camera.Area>)"], "Fixed commit": "a808ede514ed015d03c6bb6795dc435fee1bacec", "Url": "https://api.github.com/repos/abbyysdk/RTR-SDK.Android", "Date": "2017-09-21T10:51:42Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.Camera.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parameters.getMaxNumFocusAreas()) >= (focusAreas.size())) { parameters.setFocusAreas(focusAreas); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2711/buggy-version/sample-textcapture.app.src.main.java.com.abbyy.mobile.sample.MainActivity.java", "BodyUseAPI": ["Camera.Parameters.setFocusAreas(java.util.List<Camera.Area>)"], "Fixed commit": "a808ede514ed015d03c6bb6795dc435fee1bacec", "Url": "https://api.github.com/repos/abbyysdk/RTR-SDK.Android", "Date": "2017-09-21T10:51:42Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.Camera.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parameters.getMaxNumMeteringAreas()) >= (focusAreas.size())) { parameters.setMeteringAreas(focusAreas); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2711/buggy-version/sample-textcapture.app.src.main.java.com.abbyy.mobile.sample.MainActivity.java", "BodyUseAPI": ["Camera.Parameters.setMeteringAreas(java.util.List<Camera.Area>)"], "Fixed commit": "a808ede514ed015d03c6bb6795dc435fee1bacec", "Url": "https://api.github.com/repos/abbyysdk/RTR-SDK.Android", "Date": "2017-09-21T10:51:42Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((publicanCfg.indexOf(\"dtdver:\")) == (-1)) && ((buildData.getDocBookVersion()) == (org.jboss.pressgang.ccms.utils.structures.DocBookVersion.DOCBOOK_50))) { publicanCfg.append(\"dtdver: \\\"5.0\\\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3615/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.builder.PublicanDocBookBuilder.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "7246485f0254fdcb75ed6c994a117dcec1a06641", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSBuilder", "Date": "2014-02-10T07:17:03Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { requestPermissions(new java.lang.String[]{ android.Manifest.permission.WRITE_EXTERNAL_STORAGE }, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6385/buggy-version/app.src.main.java.bembibre.alarmfix.ReminderListActivity.java", "BodyUseAPI": [], "Fixed commit": "25e51a36b776ba5672a8ce5de2b50b6f54ef4f8d", "Url": "https://api.github.com/repos/maykelbembibre/androidcalendarfix", "Date": "2017-12-14T10:37:04Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(world.isAirBlock(pos.offset(side)))) { return net.minecraft.util.EnumActionResult.SUCCESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1468/buggy-version/src.main.java.romelo333.notenoughwands.Items.IlluminationWand.java", "BodyUseAPI": [], "Fixed commit": "1b55f354a2a372ed8b4d1579208b646dfec570b2", "Url": "https://api.github.com/repos/romelo333/notenoughwands1.8.8", "Date": "2016-05-28T03:36:07Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<orderrepository.OrderBucket>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (subList == null) { return answer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7269/buggy-version/src.orderrepository.OrderRepository.java", "BodyUseAPI": [], "Fixed commit": "594e2b8f0174b996d54cf4ae935394d6dd17123b", "Url": "https://api.github.com/repos/sagtradings/SagTrading_java", "Date": "2013-06-22T14:54:50Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(newText.isEmpty())) { searchSuggestions(newText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/115/buggy-version/app.src.main.java.org.schabi.newpipe.VideoItemListActivity.java", "BodyUseAPI": ["org.schabi.newpipe.VideoItemListActivity.SearchVideoQueryListener.searchSuggestions(java.lang.String)"], "Fixed commit": "e4f753ae82abf06e38457f37fce229b26bd8f6f2", "Url": "https://api.github.com/repos/kamadi/NewPipe", "Date": "2016-02-23T22:36:02Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((tsn == null) && ((id.getInterface()) != null)) { tsn = sg.getServiceNodeForInterface(id.getInterface()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/753/buggy-version/modules.activity-analysis.service-dependency.src.main.java.org.overlord.rtgov.service.dependency.ServiceDependencyBuilder.java", "BodyUseAPI": ["org.overlord.rtgov.service.dependency.ServiceGraph.getServiceNodeForInterface(id.getInterface())", "org.overlord.rtgov.analytics.service.InvocationDefinition.getInterface()"], "Fixed commit": "90459055007945d643fe3c8545e604dae8bd9d99", "Url": "https://api.github.com/repos/ivanthelad/rtgov", "Date": "2014-08-13T13:55:06Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wakeLock) != null) wakeLock.acquire();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8434/buggy-version/src.com.yy2039.callguardian.CallGuardianActivity.java", "BodyUseAPI": [], "Fixed commit": "70d3cfbc869f1b6e96e3de9e4be19ff165078949", "Url": "https://api.github.com/repos/PATHouC/CallG", "Date": "2016-06-08T14:14:54Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wakeLock) != null) wakeLock.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8434/buggy-version/src.com.yy2039.callguardian.CallGuardianActivity.java", "BodyUseAPI": [], "Fixed commit": "70d3cfbc869f1b6e96e3de9e4be19ff165078949", "Url": "https://api.github.com/repos/PATHouC/CallG", "Date": "2016-06-08T14:14:54Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.laudandjolynn.csvtools.CsvFile.getFieldLineIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fieldLineIndex == (-1)) { throw new com.laudandjolynn.csvtools.CsvException(\"can't find field declaration in csv file.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1562/buggy-version/src.main.java.com.laudandjolynn.csvtools.SqliteWriter.java", "BodyUseAPI": [], "Fixed commit": "b9e1f6a22352a9a13ada5e12ca4c88c519b6ad41", "Url": "https://api.github.com/repos/52Jolynn/CsvTools", "Date": "2014-04-10T10:14:22Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeNum == 0) { timeNum = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6797/buggy-version/AnnotationToolMicroscopy.ch.ethz.scu.obit.microscopy.readers.composite.YouScopeReader.java", "BodyUseAPI": [], "Fixed commit": "59607e546bc693eb20024d2c45909152159bc987", "Url": "https://api.github.com/repos/aarpon/obit_annotation_tool", "Date": "2017-11-29T16:11:33Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (m.find()) { if ((m.group(1)) != null) { tileX = java.lang.Integer.parseInt(m.group(1).substring(0, 2)); tileY = java.lang.Integer.parseInt(m.group(1).substring(2, 4)); planeNum = java.lang.Integer.parseInt(m.group(1).substring(4, m.group(1).length())); } if ((m.group(2)) != null) { timeNum = java.lang.Integer.parseInt(m.group(2)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6797/buggy-version/AnnotationToolMicroscopy.ch.ethz.scu.obit.microscopy.readers.composite.YouScopeReader.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)", "java.lang.String.length()", "java.lang.Integer.parseInt(java.lang.String)", "java.util.regex.Matcher.group(int)", "java.lang.String.substring(int,int)", "java.util.regex.Matcher.group(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)", "java.util.regex.Matcher.group(int)", "java.lang.String.substring(int,int)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "59607e546bc693eb20024d2c45909152159bc987", "Url": "https://api.github.com/repos/aarpon/obit_annotation_tool", "Date": "2017-11-29T16:11:33Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main.AnimeIndex.openReleaseDialog) == true) { if (AnimeIndex.exitDateMap.containsKey(name)) { if (main.AnimeIndex.getDate(AnimeIndex.exitDateMap.get(name)).equals(today)) { if ((animeDate.before(today)) || (animeDate.equals(today))) { ReleaseNotifierDialog.ovaReleased.addElement(name); AnimeIndex.exitDateMap.put(name, oggi); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8280/buggy-version/src.util.task.ReleasedAnimeTask.java", "BodyUseAPI": [], "Fixed commit": "6c587c5aba140b1ef58adc76c5a583021a993c59", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-11-08T11:00:45Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isTransformed()) { card.getSecondCardFace().adjustTargets(ability, game); }else { card.adjustTargets(ability, game); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3692/buggy-version/Mage.src.main.java.mage.game.permanent.PermanentCard.java", "BodyUseAPI": [], "Fixed commit": "270ffcb88a74a741ff56218f929602d45ae97923", "Url": "https://api.github.com/repos/drmDev/mage", "Date": "2016-08-02T14:52:25Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isTransformed()) { card.getSecondCardFace().adjustCosts(ability, game); }else { card.adjustCosts(ability, game); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3692/buggy-version/Mage.src.main.java.mage.game.permanent.PermanentCard.java", "BodyUseAPI": [], "Fixed commit": "270ffcb88a74a741ff56218f929602d45ae97923", "Url": "https://api.github.com/repos/drmDev/mage", "Date": "2016-08-02T14:52:25Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.pressgang.ccms.contentspec.TextNode.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parent == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7430/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.TextNode.java", "BodyUseAPI": [], "Fixed commit": "de2417e69c9f7c59459e3f3fca9f7abe88968e9f", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2012-12-06T06:53:33Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.pressgang.ccms.contentspec.TextNode.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parent instanceof org.jboss.pressgang.ccms.contentspec.Level) { final java.lang.Integer nodePos = ((org.jboss.pressgang.ccms.contentspec.Level) (parent)).getChildNodes().indexOf(this); if (nodePos > 0) { final org.jboss.pressgang.ccms.contentspec.Node node = ((org.jboss.pressgang.ccms.contentspec.Level) (parent)).getChildNodes().get((nodePos - 1)); previousNode = node.getStep(); if (node instanceof org.jboss.pressgang.ccms.contentspec.Level) { previousNode = (previousNode == null ? 0 : previousNode) + (((org.jboss.pressgang.ccms.contentspec.Level) (node)).getTotalNumberOfChildren()); } }else { previousNode = getParent().getStep(); } previousNode = (previousNode == null) ? 0 : previousNode; return previousNode + 1; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7430/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.TextNode.java", "BodyUseAPI": [], "Fixed commit": "de2417e69c9f7c59459e3f3fca9f7abe88968e9f", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2012-12-06T06:53:33Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (split == null) split = game.Utils.stripFirst(tokens).split(\"\\\\s+with\\\\s+\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2131/buggy-version/src.game.GameEngine.java", "BodyUseAPI": [], "Fixed commit": "f7c649db2502b1c93dc409b079949f7aedfbd0d8", "Url": "https://api.github.com/repos/Schmavery/next-questgen", "Date": "2015-04-07T20:41:10Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.data.Form<models.StoresProducts>.bindFromRequest()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (form.hasErrors()) { return badRequest(addProductStock.render(models.User.findByEmail(request().username()), form)); }else { models.StoresProducts stock = form.get(); stock.save(); return controllers.Dashboard.index(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1222/buggy-version/app.controllers.Dashboard.java", "BodyUseAPI": ["play.data.Form<models.StoresProducts>.get()", "controllers.Dashboard.badRequest(addProductStock.render(models.User.findByEmail(request().username()), form))", "controllers.Dashboard.render(models.User.findByEmail(request().username()),play.data.Form<models.StoresProducts>)"], "Fixed commit": "13ef51ea14cdf666b227c02531b98c642b1ea0e4", "Url": "https://api.github.com/repos/drixi5/project-champagne", "Date": "2015-05-20T07:20:34Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) adapter.notifyDataSetChanged();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4435/buggy-version/app.src.main.java.com.kanoon.egov.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e7a755470a7a4145f1157493098f83ba5f7d70a5", "Url": "https://api.github.com/repos/kanoonth/e-gov-android", "Date": "2015-03-12T09:37:00Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((rec == null) || (!(rec instanceof com.orientechnologies.orient.core.record.impl.ODocument))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2047/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientVertexIterator.java", "BodyUseAPI": [], "Fixed commit": "8dddf50c2b5b07038cbc8bc515f46dd2d075cec6", "Url": "https://api.github.com/repos/lucab74/orientdb", "Date": "2014-01-22T09:48:20Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.data.VM11HideShow.get(org.nschmidt.ldparteditor.data.Vertex)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (m == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5634/buggy-version/src.org.nschmidt.ldparteditor.data.VM11HideShow.java", "BodyUseAPI": [], "Fixed commit": "3a1ef64a4aa47ac8a0577a992b65c4f862b95f7d", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-06-26T13:13:56Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.util.MultiValueMap<java.lang.String, eionet.webq.service.CDREnvelopeService.XmlFile>.getFirst(onlyOneAvailableForm.getXmlSchema())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((null != (onlyOneAvailableFile.getFullName())) && (!(onlyOneAvailableFile.getFullName().isEmpty()))) { int index = onlyOneAvailableFile.getFullName().lastIndexOf('/'); fileName = onlyOneAvailableFile.getFullName().substring((index + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6741/buggy-version/src.main.java.eionet.webq.web.controller.cdr.IntegrationWithCDRController.java", "BodyUseAPI": ["eionet.webq.service.CDREnvelopeService.XmlFile.getFullName()", "eionet.webq.service.CDREnvelopeService.XmlFile.getFullName()", "onlyOneAvailableFile.getFullName().substring(int)", "onlyOneAvailableFile.getFullName().lastIndexOf(char)"], "Fixed commit": "795d2a18eda8771df3276b24b08447ca9b712d3f", "Url": "https://api.github.com/repos/eea/eionet.webq", "Date": "2015-07-20T16:27:38Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getOutputConfig()) != null) { org.deidentifier.arx.DataHandleInput inHandle = ((org.deidentifier.arx.DataHandleInput) (model.getInputConfig().getInput().getHandle())); org.deidentifier.arx.criteria.DPresence criterion = model.getOutputConfig().getCriterion(org.deidentifier.arx.criteria.DPresence.class); if (criterion != null) { inHandle.setSubset(criterion.getBitSet(), criterion.getArray()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5207/buggy-version/src.gui.org.deidentifier.arx.gui.worker.WorkerLoad.java", "BodyUseAPI": ["model.getOutputConfig().getCriterion(java.lang.Class)", "model.getInputConfig().getInput()", "org.deidentifier.arx.gui.model.Model.getInputConfig()", "org.deidentifier.arx.gui.model.Model.getOutputConfig()", "model.getInputConfig().getInput().getHandle()"], "Fixed commit": "5e95c09d9671b8104a74ad58716f4e9f8c38aaff", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2013-10-07T11:36:22Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_BINARY_SUPPORTED) { result = addVariant(result, org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3641/buggy-version/modules.org.restlet.src.org.restlet.engine.converter.DefaultConverter.java", "BodyUseAPI": [], "Fixed commit": "3838f79467f8246bcc6e273f067a066be6d0eedd", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2013-08-22T09:52:12Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_BINARY_SUPPORTED) { updatePreferences(preferences, MediaType.APPLICATION_JAVA_OBJECT, 1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3641/buggy-version/modules.org.restlet.src.org.restlet.engine.converter.DefaultConverter.java", "BodyUseAPI": [], "Fixed commit": "3838f79467f8246bcc6e273f067a066be6d0eedd", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2013-08-22T09:52:12Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.scanner.match(TokenType.GT)) { la = new de.skuzzle.polly.parsing.Token(TokenType.URIGHT_SHIFT, this.scanner.spanFrom(la)); }else { la = new de.skuzzle.polly.parsing.Token(TokenType.RIGHT_SHIFT, this.scanner.spanFrom(la)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8537/buggy-version/parser.src.de.skuzzle.polly.parsing.InputParser.java", "BodyUseAPI": ["de.skuzzle.polly.parsing.InputScanner.spanFrom(de.skuzzle.polly.parsing.Token)", "de.skuzzle.polly.parsing.InputScanner.spanFrom(de.skuzzle.polly.parsing.Token)"], "Fixed commit": "4811e37336c66ac3c061cfe3f356cf0bdade8a14", "Url": "https://api.github.com/repos/skuzzle/polly", "Date": "2013-03-01T11:48:37Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_kunden.size()) > platz) { return _kunden.get(platz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4351/buggy-version/src.de.uni_hamburg.informatik.swt.se2.mediathek.werkzeuge.vormerken.VormerkKarte.java", "BodyUseAPI": ["java.util.List<de.uni_hamburg.informatik.swt.se2.mediathek.materialien.Kunde>.get(int)"], "Fixed commit": "d105c691db1ab0066471adb5fa1ca8b7b88cedfc", "Url": "https://api.github.com/repos/polemonium/SE2Project", "Date": "2017-05-17T09:55:43Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page == (ContactManager.Manager.Page.HOME)) { switch (ContactManager.Manager.readScreen().toLowerCase()) { case \"list contacts\" : ContactManager.Manager.setUi(ContactManager.Manager.Page.LISTC); break; case \"add contact\" : ContactManager.Manager.setUi(ContactManager.Manager.Page.ADDC_1); break; case \"edit contact\" : ContactManager.Manager.setUi(ContactManager.Manager.Page.EDITC_1); break; case \"remove contact\" : case \"delete contact\" : ContactManager.Manager.setUi(ContactManager.Manager.Page.DELC); break; case \"find contact\" : ContactManager.Manager.setUi(ContactManager.Manager.Page.FINDC); break; case \"list meetings\" : ContactManager.Manager.setUi(ContactManager.Manager.Page.LISTM); break; case \"add meeting\" : ContactManager.Manager.setUi(ContactManager.Manager.Page.ADDM_1); break; case \"edit meeting\" : ContactManager.Manager.setUi(ContactManager.Manager.Page.EDITM_1); break; case \"remove meeting\" : case \"delete meeting\" : ContactManager.Manager.setUi(ContactManager.Manager.Page.DELM); break; case \"find meeting\" : ContactManager.Manager.setUi(ContactManager.Manager.Page.FINDM); break; case \"view meeting\" : ContactManager.Manager.setUi(ContactManager.Manager.Page.VIEWM); break; case \"add to meeting\" : case \"add attendee\" : ContactManager.Manager.setUi(ContactManager.Manager.Page.ADDTOM_1); break; case \"remove from meeting\" : case \"remove attendee\" : ContactManager.Manager.setUi(ContactManager.Manager.Page.DELFROMM_1); break; case \"help\" : ContactManager.Manager.print(\"Here are all the commands:\\n\\n\"); ContactManager.Manager.print(\"list contacts\\nadd contact\\nedit contact\\nremove contact\\nfind contact\\n\\n\"); ContactManager.Manager.print(\"list meetings\\nadd meeting\\nedit meeting\\nremove meeting\\nfind meeting\\nview meeting\\nadd to meeting\\nremove from meeting\\n\\n\"); ContactManager.Manager.print(\"quit\\nhelp\\n\\n\"); ContactManager.Manager.setUi(ContactManager.Manager.Page.HOME); break; case \"quit\" : ContactManager.Manager.flush(); return; default : ContactManager.Manager.print(\"unknown command - type \\'help\\' for a list of commands\\n\"); ContactManager.Manager.setUi(ContactManager.Manager.Page.HOME); break; } }else { ContactManager.Manager.print(\"* ERROR: application get input from a page that does not exist!\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1394/buggy-version/Manager.java", "BodyUseAPI": [], "Fixed commit": "8c78e646f81f129205a2c36a5b1a7b8eaebcb7d6", "Url": "https://api.github.com/repos/AngusF57805/ContactManager", "Date": "2016-01-29T20:44:40Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ContactManager.Manager.searchMeetings(nextId)) == null) { return nextId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1394/buggy-version/Manager.java", "BodyUseAPI": [], "Fixed commit": "8c78e646f81f129205a2c36a5b1a7b8eaebcb7d6", "Url": "https://api.github.com/repos/AngusF57805/ContactManager", "Date": "2016-01-29T20:44:40Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ContactManager.Manager.searchContacts(nextId)) == null) { return nextId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1394/buggy-version/Manager.java", "BodyUseAPI": [], "Fixed commit": "8c78e646f81f129205a2c36a5b1a7b8eaebcb7d6", "Url": "https://api.github.com/repos/AngusF57805/ContactManager", "Date": "2016-01-29T20:44:40Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ContactManager.Manager.searchMeetings(ContactManager.Manager.tempId)) == null) { ContactManager.Manager.print(((\"* ERROR: No contact with ID '\" + (ContactManager.Manager.tempId)) + \"\\' contact exists\\n\")); ContactManager.Manager.setUi(ContactManager.Manager.Page.HOME); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1394/buggy-version/Manager.java", "BodyUseAPI": [], "Fixed commit": "8c78e646f81f129205a2c36a5b1a7b8eaebcb7d6", "Url": "https://api.github.com/repos/AngusF57805/ContactManager", "Date": "2016-01-29T20:44:40Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextId >= 999) { ContactManager.Manager.print(\"* ERROR: You can't have more than 999 contacts!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1394/buggy-version/Manager.java", "BodyUseAPI": [], "Fixed commit": "8c78e646f81f129205a2c36a5b1a7b8eaebcb7d6", "Url": "https://api.github.com/repos/AngusF57805/ContactManager", "Date": "2016-01-29T20:44:40Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nextIn.isAfter(out)) || (nextIn.isEqual(out))) { if (((nextIn.isAfter(previousIn)) || (nextIn.isEqual(previousIn))) && ((nextIn.isBefore(previousOut)) || (nextIn.isEqual(previousOut)))) { java.util.Collections.sort(processedContacts, new dk.nsi.haiba.lprimporter.rules.AdministrationInDateComparator()); previousContact = processedContacts.get(((processedContacts.size()) - 1)); }else { previousContact = contact; } }else { previousContact = contact; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5488/buggy-version/src.main.java.dk.nsi.haiba.lprimporter.rules.OverlappingContactsRule.java", "BodyUseAPI": ["org.joda.time.DateTime.isAfter(org.joda.time.DateTime)", "org.joda.time.DateTime.isEqual(org.joda.time.DateTime)", "org.joda.time.DateTime.isBefore(org.joda.time.DateTime)", "org.joda.time.DateTime.isEqual(org.joda.time.DateTime)"], "Fixed commit": "5d57c132603642a080595e4491b2230fab4d9593", "Url": "https://api.github.com/repos/trifork/HAIBA-LPRimporter", "Date": "2013-05-03T12:59:04Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(s.matches(Keywords.REGEX_CATEGORIES))) { out += s + (Keywords.SPACE_STRING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4916/buggy-version/src.parser.Formatter.java", "BodyUseAPI": [], "Fixed commit": "22b02923258dab70d6428e287270fde405649e73", "Url": "https://api.github.com/repos/cs2103jan2016-f14-1j/main", "Date": "2016-03-31T14:23:57Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (replacer.isChildsReplaceable(expression)) { expression = replacer.createReplaceParseContext(); }else { expression.walkChildAndReplace(replacer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8706/buggy-version/cql.src.main.java.com.huawei.streaming.cql.semanticanalyzer.parser.context.ExpressionWithLaparenContext.java", "BodyUseAPI": ["com.huawei.streaming.cql.semanticanalyzer.parser.context.BaseExpressionParseContext.walkChildAndReplace(com.huawei.streaming.cql.semanticanalyzer.parsecontextreplacer.ParseContextReplacer)", "com.huawei.streaming.cql.semanticanalyzer.parsecontextreplacer.ParseContextReplacer.createReplaceParseContext()"], "Fixed commit": "463f91364193ea29553c20e43177449029c79594", "Url": "https://api.github.com/repos/DTStack/StreamCQL", "Date": "2017-07-11T03:39:56Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (content.isNew()) { org.sakaiproject.nakamura.api.lite.content.Content existingContent = get(path); if (existingContent != null) { java.util.Map<java.lang.String, java.lang.Object> properties = content.getProperties(); for (java.util.Map.Entry<java.lang.String, java.lang.Object> e : properties.entrySet()) { existingContent.setProperty(e.getKey(), e.getValue()); } content = existingContent; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6185/buggy-version/src.main.java.org.sakaiproject.nakamura.lite.content.ContentManagerImpl.java", "BodyUseAPI": ["org.sakaiproject.nakamura.lite.content.InternalContent.getProperties()"], "Fixed commit": "0251c973412882c90d770071b2b3a405bc1d99dd", "Url": "https://api.github.com/repos/ctweney/sparsemapcontent", "Date": "2011-04-12T05:13:36Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sk.stuba.fiit.perconik.eclipse.egit.core.projects.EGitAccess.getRepository(org.eclipse.core.resources.IProject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (repository != null) { projects.put(project, repository); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2848/buggy-version/sk.stuba.fiit.perconik.eclipse.src.sk.stuba.fiit.perconik.eclipse.egit.core.projects.GitProjects.java", "BodyUseAPI": ["java.util.Map<org.eclipse.core.resources.IProject, org.eclipse.jgit.lib.Repository>.put(org.eclipse.core.resources.IProject,org.eclipse.jgit.lib.Repository)"], "Fixed commit": "c49170908a5f2cb5ed335793db4f2defe036de17", "Url": "https://api.github.com/repos/perconik/perconik", "Date": "2014-12-18T12:33:47Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (customAuth != null) fuzzer.setCustomAuthInfo(customAuth);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6616/buggy-version/swen-331-fuzzer.src.Program.java", "BodyUseAPI": ["Fuzzer.setCustomAuthInfo(java.lang.String)"], "Fixed commit": "1719b25cfd2f77977d17473833aaae09ff84ddde", "Url": "https://api.github.com/repos/msd7734/swen-331-fuzzer", "Date": "2014-09-23T06:31:12Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (method != (PageDiscoveryMethod.Guessed)) { java.util.List<HtmlAnchor> anchors = pg.getAnchors(); for (java.lang.String a : resolveAnchors(pg, anchors)) { if (Fuzzer.onSameSite(a, url)) crawl(a, PageDiscoveryMethod.Crawled); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6616/buggy-version/swen-331-fuzzer.src.Fuzzer.java", "BodyUseAPI": [], "Fixed commit": "1719b25cfd2f77977d17473833aaae09ff84ddde", "Url": "https://api.github.com/repos/msd7734/swen-331-fuzzer", "Date": "2014-09-23T06:31:12Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["WebClient.getPage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (Fuzzer.onSameSite(a, rootPg.getUrl().toString())) { try { crawl(a, PageDiscoveryMethod.Crawled); } catch (java.lang.IllegalArgumentException iae) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6616/buggy-version/swen-331-fuzzer.src.Fuzzer.java", "BodyUseAPI": ["Fuzzer.crawl(java.lang.String,PageDiscoveryMethod.Crawled)"], "Fixed commit": "1719b25cfd2f77977d17473833aaae09ff84ddde", "Url": "https://api.github.com/repos/msd7734/swen-331-fuzzer", "Date": "2014-09-23T06:31:12Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (method != (PageDiscoveryMethod.Guessed)) { for (java.lang.String guess : this.guessList) { crawl((parentPath + guess), PageDiscoveryMethod.Guessed); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6616/buggy-version/swen-331-fuzzer.src.Fuzzer.java", "BodyUseAPI": [], "Fixed commit": "1719b25cfd2f77977d17473833aaae09ff84ddde", "Url": "https://api.github.com/repos/msd7734/swen-331-fuzzer", "Date": "2014-09-23T06:31:12Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Fuzzer.onSameSite(a, url)) crawl(a, PageDiscoveryMethod.Crawled);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6616/buggy-version/swen-331-fuzzer.src.Fuzzer.java", "BodyUseAPI": ["Fuzzer.crawl(java.lang.String,PageDiscoveryMethod.Crawled)"], "Fixed commit": "1719b25cfd2f77977d17473833aaae09ff84ddde", "Url": "https://api.github.com/repos/msd7734/swen-331-fuzzer", "Date": "2014-09-23T06:31:12Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6182/buggy-version/app.src.main.java.com.homesky.homesky.fragments.node.NodeFragment.java", "BodyUseAPI": [], "Fixed commit": "b48bd754c038ccdde531a111cad4c4955d2a6c74", "Url": "https://api.github.com/repos/HomeSkyLtd/app", "Date": "2016-12-07T19:33:50Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.jtrfp.trcl.core.Renderer.NEW_MODE)) collisionManager.getCurrentlyActiveCollisionList().add(((org.jtrfp.trcl.obj.WorldObject) (pr)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1263/buggy-version/src.main.java.org.jtrfp.trcl.core.Renderer.java", "BodyUseAPI": [], "Fixed commit": "41f981088110464f2637c739f366eefd8279c6a0", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-06-11T08:33:40Z"},
{"Line": "=>895", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jme3utilities.MySpatial.findAnimatedGeometry(com.jme3.scene.Spatial)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ts == null) { ts = controlled; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7709/buggy-version/src.main.java.maud.view.SceneView.java", "BodyUseAPI": [], "Fixed commit": "4146690e1d1cc011e7749fe72a89204fd1a71407", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-12-17T00:52:13Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.filterFields_OTM) != null) { clone.filterFields_OTM = new org.jboss.pressgang.ccms.rest.v1.collections.RESTFilterFieldCollectionV1(); filterFields_OTM.cloneInto(clone.filterFields_OTM, deepCopy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4491/buggy-version/src.main.java.org.jboss.pressgang.ccms.rest.v1.entities.RESTFilterV1.java", "BodyUseAPI": [], "Fixed commit": "22e9f3237ca21b858640491cf6e6eba56323b091", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSRESTv1Common", "Date": "2013-02-14T04:53:53Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((zkManager) == null) { zkManager = resourceManager.createAndStartZKManager(conf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/609/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore.java", "BodyUseAPI": [], "Fixed commit": "a9c70b0e84dab0c41e480a0dc0cb1a22efdc64ee", "Url": "https://api.github.com/repos/apache/hadoop", "Date": "2017-11-08T16:00:53Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.isOwner) { co.raawr.cah.CAH.cah.sendMessage(\"#cah\", \"The owner may not leave the game in the joining period.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4692/buggy-version/src.co.raawr.cah.CAH.java", "BodyUseAPI": [], "Fixed commit": "42e13d8c8e31756f403489293c05b1a858226dd2", "Url": "https://api.github.com/repos/Rurigok/cah", "Date": "2013-05-02T00:27:36Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.salesforce.dva.argus.service.tsdb.Annotation.getTimestamp()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((timestamp > (query.getStartTimestamp())) && (timestamp <= (query.getEndTimestamp()))) { com.salesforce.dva.argus.service.tsdb.Annotation updated = new com.salesforce.dva.argus.service.tsdb.Annotation(source, id, type, scope, metric, timestamp); updated.setFields(existing.getFields()); updated.setTags(query.getTags()); annotations.add(updated); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8038/buggy-version/ArgusCore.src.main.java.com.salesforce.dva.argus.service.tsdb.DefaultTSDBService.java", "BodyUseAPI": ["com.salesforce.dva.argus.service.tsdb.AnnotationQuery.getTags()", "com.salesforce.dva.argus.service.tsdb.Annotation.setTags(query.getTags())"], "Fixed commit": "9384ed1c99268ebdea73d1231b8ae5b80d43e875", "Url": "https://api.github.com/repos/bsura/Argus", "Date": "2017-09-09T00:05:56Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((info.getPlayer().getWorld()) != (info.getBlock().getWorld())) { return false; }else if ((java.lang.Math.abs(info.getPlayer().getLocation().distance(info.getBlock().getLocation()))) > range) { return false; }else if (((info.getSourceType()) == (com.projectkorra.ProjectKorra.Utilities.BlockSource.BlockSourceType.WATER)) && (!(com.projectkorra.ProjectKorra.waterbending.WaterMethods.isWaterbendable(info.getBlock(), info.getPlayer())))) { return false; }else if (((info.getSourceType()) == (com.projectkorra.ProjectKorra.Utilities.BlockSource.BlockSourceType.ICE)) && (!(com.projectkorra.ProjectKorra.waterbending.WaterMethods.isIcebendable(info.getBlock())))) { return false; }else if (((info.getSourceType()) == (com.projectkorra.ProjectKorra.Utilities.BlockSource.BlockSourceType.PLANT)) && ((!(com.projectkorra.ProjectKorra.waterbending.WaterMethods.isPlant(info.getBlock()))) || (!(com.projectkorra.ProjectKorra.waterbending.WaterMethods.isWaterbendable(info.getBlock(), info.getPlayer()))))) { return false; }else if (((info.getSourceType()) == (com.projectkorra.ProjectKorra.Utilities.BlockSource.BlockSourceType.EARTH)) && (!(com.projectkorra.ProjectKorra.earthbending.EarthMethods.isEarthbendable(info.getPlayer(), info.getBlock())))) { return false; }else if (((info.getSourceType()) == (com.projectkorra.ProjectKorra.Utilities.BlockSource.BlockSourceType.METAL)) && ((!(com.projectkorra.ProjectKorra.earthbending.EarthMethods.isMetal(info.getBlock()))) || (!(com.projectkorra.ProjectKorra.earthbending.EarthMethods.isEarthbendable(info.getPlayer(), info.getBlock()))))) { return false; }else if (((info.getSourceType()) == (com.projectkorra.ProjectKorra.Utilities.BlockSource.BlockSourceType.LAVA)) && ((!(com.projectkorra.ProjectKorra.earthbending.EarthMethods.isLava(info.getBlock()))) || (!(com.projectkorra.ProjectKorra.earthbending.EarthMethods.isLavabendable(info.getBlock(), info.getPlayer()))))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5597/buggy-version/src.com.projectkorra.ProjectKorra.Utilities.BlockSource.java", "BodyUseAPI": ["com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getBlock()", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getBlock()", "com.projectkorra.ProjectKorra.waterbending.WaterMethods.isPlant(info.getBlock())", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getSourceType()", "info.getPlayer().getLocation()", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getPlayer()", "com.projectkorra.ProjectKorra.earthbending.EarthMethods.isLavabendable(info.getBlock(),info.getPlayer())", "info.getPlayer().getLocation().distance(info.getBlock().getLocation())", "com.projectkorra.ProjectKorra.waterbending.WaterMethods.isIcebendable(info.getBlock())", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getBlock()", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getPlayer()", "java.lang.Math.abs(info.getPlayer().getLocation().distance(info.getBlock().getLocation()))", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getBlock()", "com.projectkorra.ProjectKorra.earthbending.EarthMethods.isLava(info.getBlock())", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getPlayer()", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getSourceType()", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getBlock()", "info.getBlock().getLocation()", "com.projectkorra.ProjectKorra.earthbending.EarthMethods.isEarthbendable(info.getPlayer(),info.getBlock())", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getPlayer()", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getBlock()", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getBlock()", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getBlock()", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getSourceType()", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getSourceType()", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getPlayer()", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getBlock()", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getBlock()", "com.projectkorra.ProjectKorra.earthbending.EarthMethods.isMetal(info.getBlock())", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getPlayer()", "com.projectkorra.ProjectKorra.waterbending.WaterMethods.isWaterbendable(info.getBlock(),info.getPlayer())", "com.projectkorra.ProjectKorra.waterbending.WaterMethods.isWaterbendable(info.getBlock(),info.getPlayer())", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getSourceType()", "com.projectkorra.ProjectKorra.Utilities.BlockSourceInformation.getSourceType()", "com.projectkorra.ProjectKorra.earthbending.EarthMethods.isEarthbendable(info.getPlayer(),info.getBlock())"], "Fixed commit": "c0b358b24861fe045e1b50f1914b5aab6d7b4701", "Url": "https://api.github.com/repos/ProjectKorra/ProjectKorra", "Date": "2015-06-02T06:18:13Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(o.contains(\"would like to be friends\"))) friends.add(o);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7021/buggy-version/app.src.main.java.com.example.nikhil.myapplication.FriendsActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "aa3a2e0c298dac50453f579386cce83e4c9e46c4", "Url": "https://api.github.com/repos/nikhilJain17/midPoint-for-Android", "Date": "2015-09-30T22:38:18Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getNodeGroups()) == null) { return valid; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4223/buggy-version/common.src.main.java.com.vmware.bdd.apitypes.ClusterCreate.java", "BodyUseAPI": [], "Fixed commit": "b1f18cc750cee2015f1896941957fafe82dc2a0b", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2012-07-13T11:15:19Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.apitypes.ClusterCreate.getNodeGroups()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (groupCreates == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4223/buggy-version/server.serengeti.src.main.java.com.vmware.bdd.manager.ClusterConfigManager.java", "BodyUseAPI": [], "Fixed commit": "b1f18cc750cee2015f1896941957fafe82dc2a0b", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2012-07-13T11:15:19Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((MainController.transitSystem.trainPositions.get(trainNum)) != null) { currentGradient = MainController.transitSystem.trainPositions.get(trainNum).getCurrBlock().getGrade(); speedLimit = (MainController.transitSystem.trainPositions.get(trainNum).getCurrBlock().getSpeedLimit()) * 0.277778; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/527/buggy-version/NorthShoreExtensionFINAL.src.trainmodule.EngineModel.java", "BodyUseAPI": ["MainController.transitSystem.trainPositions.get(trainNum).getCurrBlock()", "MainController.transitSystem.trainPositions.get(trainNum).getCurrBlock()", "MainController.transitSystem.trainPositions.get(int)", "MainController.transitSystem.trainPositions.get(int)", "MainController.transitSystem.trainPositions.get(trainNum).getCurrBlock().getGrade()", "MainController.transitSystem.trainPositions.get(trainNum).getCurrBlock().getSpeedLimit()"], "Fixed commit": "56c3b3ff4d98859079bdda1d98d0d3c253fe979a", "Url": "https://api.github.com/repos/meylingtaing/COE1186", "Date": "2013-12-12T18:46:48Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((MainController.transitSystem.trainPositions.get(trainNum)) != null) { MainController.transitSystem.trainPositions.get(trainNum).moveTrain(((currentVelocity) * (deltaT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/527/buggy-version/NorthShoreExtensionFINAL.src.trainmodule.EngineModel.java", "BodyUseAPI": ["MainController.transitSystem.trainPositions.get(trainNum).moveTrain(double)", "MainController.transitSystem.trainPositions.get(int)"], "Fixed commit": "56c3b3ff4d98859079bdda1d98d0d3c253fe979a", "Url": "https://api.github.com/repos/meylingtaing/COE1186", "Date": "2013-12-12T18:46:48Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((MainController.transitSystem.trainPositions.get(trainNum)) != null) { MainController.transitSystem.trainPositions.get(trainNum).moveTrain(((currentVelocity) * (deltaT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/527/buggy-version/NorthShoreExtensionFINAL.src.trainmodule.EngineModel.java", "BodyUseAPI": ["MainController.transitSystem.trainPositions.get(trainNum).moveTrain(double)", "MainController.transitSystem.trainPositions.get(int)"], "Fixed commit": "56c3b3ff4d98859079bdda1d98d0d3c253fe979a", "Url": "https://api.github.com/repos/meylingtaing/COE1186", "Date": "2013-12-12T18:46:48Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((MainController.transitSystem.trainPositions.get(trainNum)) != null) { MainController.transitSystem.trainPositions.get(trainNum).moveTrain(((currentVelocity) * (deltaT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/527/buggy-version/NorthShoreExtensionFINAL.src.trainmodule.EngineModel.java", "BodyUseAPI": ["MainController.transitSystem.trainPositions.get(trainNum).moveTrain(double)", "MainController.transitSystem.trainPositions.get(int)"], "Fixed commit": "56c3b3ff4d98859079bdda1d98d0d3c253fe979a", "Url": "https://api.github.com/repos/meylingtaing/COE1186", "Date": "2013-12-12T18:46:48Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((MainController.transitSystem.trainPositions.get(trainNum)) != null) { currentGradient = MainController.transitSystem.trainPositions.get(trainNum).getCurrBlock().getGrade(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/527/buggy-version/NorthShoreExtensionFINAL.src.trainmodule.EngineModel.java", "BodyUseAPI": ["MainController.transitSystem.trainPositions.get(trainNum).getCurrBlock()", "MainController.transitSystem.trainPositions.get(int)", "MainController.transitSystem.trainPositions.get(trainNum).getCurrBlock().getGrade()"], "Fixed commit": "56c3b3ff4d98859079bdda1d98d0d3c253fe979a", "Url": "https://api.github.com/repos/meylingtaing/COE1186", "Date": "2013-12-12T18:46:48Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((MainController.transitSystem.trainPositions.get(trainNum)) != null) { currentGradient = MainController.transitSystem.trainPositions.get(trainNum).getCurrBlock().getGrade(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/527/buggy-version/NorthShoreExtensionFINAL.src.trainmodule.EngineModel.java", "BodyUseAPI": ["MainController.transitSystem.trainPositions.get(int)", "MainController.transitSystem.trainPositions.get(trainNum).getCurrBlock()", "MainController.transitSystem.trainPositions.get(trainNum).getCurrBlock().getGrade()"], "Fixed commit": "56c3b3ff4d98859079bdda1d98d0d3c253fe979a", "Url": "https://api.github.com/repos/meylingtaing/COE1186", "Date": "2013-12-12T18:46:48Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.mostlyoriginal.api.SystemProfilerGUI.getPoint(float)", "net.mostlyoriginal.api.SystemProfiler.getCurrentSampleIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((current != skip) && (currentPoint > 0)) renderer.line((x + ((i - 1) * sampleLen)), (y + ((prevPoint * height) / 6)), (x + (i * sampleLen)), (y + ((currentPoint * height) / 6)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2418/buggy-version/contrib-plugin-profile.src.main.java.net.mostlyoriginal.api.SystemProfilerGUI.java", "BodyUseAPI": ["com.badlogic.gdx.graphics.glutils.ShapeRenderer.line(float,float,float,float)"], "Fixed commit": "8a609041b651ff61562d6b1f350df5f604164b03", "Url": "https://api.github.com/repos/DaanVanYperen/artemis-odb-contrib", "Date": "2015-08-27T19:18:17Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activityNames.length()) > 0) { activityNames = activityNames.substring(0, ((activityNames.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6123/buggy-version/src.com.netease.emmagee.performance.PerformanceMonitor.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "9d06671c66875daedc49a80b2dcb4793fc18f409", "Url": "https://api.github.com/repos/bingoHuang/performanceMonitor", "Date": "2014-07-04T02:52:58Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((multipart.getFile(param)) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6972/buggy-version/src.uws.service.request.MultipartParser.java", "BodyUseAPI": [], "Fixed commit": "021054e428566fa0a81c0ebada457b8e50511151", "Url": "https://api.github.com/repos/gmantele/taplib", "Date": "2015-01-23T14:54:23Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.endeavourhealth.sftpreader.DataLayer.getEmisOrganisationMap(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (existingMapping != null) { startDate = existingMapping.getStartDate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/658/buggy-version/src.sftpreader.src.main.java.org.endeavourhealth.sftpreader.implementations.emis.EmisSftpBatchSplitter.java", "BodyUseAPI": ["org.endeavourhealth.sftpreader.implementations.emis.EmisOrganisationMap.getStartDate()"], "Fixed commit": "e58cee8f19a9d39e0c9e367a67824e3a2c08d576", "Url": "https://api.github.com/repos/endeavourhealth/SFTPReader", "Date": "2017-11-01T15:20:33Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (controller.getAIController().getDeckController().getCardContainer().isEmpty()) { java.lang.String stringBuilder = \"AI has no more cards in Deck\" + (\"\\nYOU WON THE GAME :)\\n\" + \"CONGRATULATIONS!!!\"); controller.getView().setCommand(stringBuilder); controller.endGame(); }else { controller.gameAITurn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6746/buggy-version/src.controllers.game.KeyListeners.PokemonAttack.java", "BodyUseAPI": ["controllers.game.GameController.gameAITurn()", "controllers.game.GameController.getView()", "controllers.game.GameController.endGame()", "controller.getView().setCommand(java.lang.String)"], "Fixed commit": "178bb682ec76ec333be3efe878c8b78819e6fc26", "Url": "https://api.github.com/repos/kpsimoulis/pokemon", "Date": "2017-06-21T23:51:52Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player1Controller.getDeckController().getCardContainer().isEmpty()) { view.setCommand(\"YOU DO NOT HAVE A BASIC POKEMON TO PLAY\\nYOU LOST THE GAME. :(\"); endGame(); }else { sb.append(\"Press Enter to continue.\"); view.setCommand(sb.toString()); view.addBoardListerner(new java.awt.event.KeyListener() { @java.lang.Override public void keyTyped(java.awt.event.KeyEvent e) { } @java.lang.Override public void keyPressed(java.awt.event.KeyEvent e) { switch (e.getKeyCode()) { case java.awt.event.KeyEvent.VK_ENTER : { playerDealDeck(player1Controller); decideNextAction(); } } } @java.lang.Override public void keyReleased(java.awt.event.KeyEvent e) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6746/buggy-version/src.controllers.game.GameController.java", "BodyUseAPI": ["views.game.GameView.addBoardListerner(java.awt.event.KeyListener)", "controllers.game.GameController.5.playerDealDeck(controllers.player.HumanPlayerController)"], "Fixed commit": "178bb682ec76ec333be3efe878c8b78819e6fc26", "Url": "https://api.github.com/repos/kpsimoulis/pokemon", "Date": "2017-06-21T23:51:52Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.split(\"/\")[0].equals(\"https:\")) && (msg.split(\"/\")[2].equals(\"s3.amazonaws.com\"))) { msgFromMe.setText((((msg.split(\"/\")[5]) + \" has been attached\") + (new java.lang.String(java.lang.Character.toChars(128206))))); msgFromMe.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { new com.oop.projectgroup10.studychatroom.ChatRooms.PlaceholderFragment.getFileFromAmazonTask().execute(msg); } }); }else { msgFromMe.setText(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6335/buggy-version/app.src.main.java.com.oop.projectgroup10.studychatroom.ChatRooms.java", "BodyUseAPI": ["android.widget.TextView.setOnClickListener(android.view.View.OnClickListener)", "android.widget.TextView.setText(java.lang.String)", "com.oop.projectgroup10.studychatroom.ChatRooms.PlaceholderFragment.getFileFromAmazonTask.execute(java.lang.String)", "java.lang.String.split(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "b99325e986385eb26eabb64a72a77d1e28b776be", "Url": "https://api.github.com/repos/19anti91/StudyChatRoom", "Date": "2017-03-29T12:33:37Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message.contains(\"https\")) { message = java.net.URLDecoder.decode(message); android.util.Log.e(\"Received\", message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6335/buggy-version/app.src.main.java.com.oop.projectgroup10.studychatroom.ChatRooms.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String)"], "Fixed commit": "b99325e986385eb26eabb64a72a77d1e28b776be", "Url": "https://api.github.com/repos/19anti91/StudyChatRoom", "Date": "2017-03-29T12:33:37Z"},
{"Line": "=>1486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(com.vector.onetodo.AddTaskFragment.assignedSelectedID))) assignedId.add(com.vector.onetodo.AddTaskFragment.assignedSelectedID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3078/buggy-version/oneToDo.src.main.java.com.vector.onetodo.AddTaskFragment.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "b431b975182be44e85c164522a5c1f4d5475b7d6", "Url": "https://api.github.com/repos/vector-solutions/OneToDoAndroidStudio", "Date": "2015-05-12T13:51:15Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["intent.getExtras().getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((App.daoSession.getToDoDao().load(todoId).getIs_allday()) != null) isAllDay = App.daoSession.getToDoDao().load(todoId).getIs_allday();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3078/buggy-version/oneToDo.src.main.java.com.vector.onetodo.NotificationHandler.java", "BodyUseAPI": ["App.daoSession.getToDoDao().load(long)", "App.daoSession.getToDoDao().load(todoId).getIs_allday()"], "Fixed commit": "b431b975182be44e85c164522a5c1f4d5475b7d6", "Url": "https://api.github.com/repos/vector-solutions/OneToDoAndroidStudio", "Date": "2015-05-12T13:51:15Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thing instanceof uk.co.tabish.game.pixelman.platform.OneWayPlatform) { enemy.y += yVector; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8902/buggy-version/core.src.uk.co.tabish.game.pixelman.enemy.GroundEnemyCollisionComponent.java", "BodyUseAPI": [], "Fixed commit": "6a8e50d5448332caed57057479d6feb8195bcd16", "Url": "https://api.github.com/repos/tabzraz/PixelMan", "Date": "2015-01-20T19:17:42Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) instanceof java.nio.ByteBuffer) { return ((A) (((java.nio.ByteBuffer) (value)).duplicate())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4787/buggy-version/core.src.main.java.me.prettyprint.hector.api.beans.AbstractComposite.java", "BodyUseAPI": [], "Fixed commit": "358b15d2a23df37c5aed77f3d7692dbe401cf5eb", "Url": "https://api.github.com/repos/rantav/hector", "Date": "2011-04-05T04:10:29Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tweet.getId()) == (homeTweet.getId())) { continue outerloop; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7979/buggy-version/src.main.java.com.codingbash.MemeResponder.java", "BodyUseAPI": [], "Fixed commit": "c4c944086d6968b0e07001fc2738f7d5ea44a637", "Url": "https://api.github.com/repos/CodingBash/twitter-bot", "Date": "2016-12-28T02:42:42Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.social.twitter.api.Tweet.getInReplyToStatusId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == replyStatusId) { com.codingbash.MemeResponder.LOGGER.info(\"Saw own tweet\"); continue; }else if ((tweet.getId()) == (homeTweet.getInReplyToStatusId())) { com.codingbash.MemeResponder.LOGGER.info((\"Duplicate response detected: \" + (tweet.getIdStr()))); continue outerloop; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7979/buggy-version/src.main.java.com.codingbash.MemeResponder.java", "BodyUseAPI": [], "Fixed commit": "c4c944086d6968b0e07001fc2738f7d5ea44a637", "Url": "https://api.github.com/repos/CodingBash/twitter-bot", "Date": "2016-12-28T02:42:42Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataSnapshot.child(idsList.get(position)).child(\"imageURL\").getValue()) != null) { java.lang.String url = dataSnapshot.child(idsList.get(position)).child(\"imageURL\").getValue().toString(); com.bumptech.glide.Glide.with(context).load(url).into(holder.ivProfileImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7691/buggy-version/app.src.main.java.com.olegsagenadatrytwo.partyapp.view.friends_activity.adapters.AdapterPeopleInfo.java", "BodyUseAPI": ["dataSnapshot.child(idsList.get(position)).child(\"imageURL\").getValue()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "dataSnapshot.child(idsList.get(position)).child(\"imageURL\").getValue().toString()", "java.util.List<java.lang.String>.get(int)", "dataSnapshot.child(idsList.get(position)).child(java.lang.String)"], "Fixed commit": "7d07e3b9a919f5e0e657c0ad329df9155035b93b", "Url": "https://api.github.com/repos/omcnamar/PartyApp", "Date": "2017-11-03T06:46:40Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (operand.semiring().zero().equals(weight)) return java.util.Collections.emptyList(); else return java.util.Arrays.asList(new net.jhoogland.jautomata.semirings.PathWeight<K>(null, weight, null));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7481/buggy-version/jautomata.src.main.java.net.jhoogland.jautomata.operations.KTropicalSemiringConversion.java", "BodyUseAPI": ["java.util.Arrays.asList(net.jhoogland.jautomata.semirings.PathWeight<K>)"], "Fixed commit": "c12527edb1f295594f0717b5b6a44cc59583ece0", "Url": "https://api.github.com/repos/jasperhoogland/jautomata", "Date": "2015-02-10T15:10:31Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inGroup) isManager = data.getBoolean(\"ismanager\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/631/buggy-version/Android.app.src.main.java.Entities.Notification.java", "BodyUseAPI": [], "Fixed commit": "74257e237349ee83e27f2085b4d31375a4d4678d", "Url": "https://api.github.com/repos/LyokoVN/TDC-Social", "Date": "2017-04-11T17:21:08Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((env) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8924/buggy-version/src.edu.rutgers.MOST.optimization.solvers.GurobiSolver.java", "BodyUseAPI": [], "Fixed commit": "f969eed4051098d3b40f288a6b46157d4fca0314", "Url": "https://api.github.com/repos/CodeGuro/MOST", "Date": "2014-06-01T17:43:21Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((env) == null) env = new gurobi.GRBEnv();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8924/buggy-version/src.edu.rutgers.MOST.optimization.solvers.GurobiSolver.java", "BodyUseAPI": [], "Fixed commit": "f969eed4051098d3b40f288a6b46157d4fca0314", "Url": "https://api.github.com/repos/CodeGuro/MOST", "Date": "2014-06-01T17:43:21Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (like) { me.wcy.music.utils.ToastUtils.show(R.string.like); }else { me.wcy.music.utils.ToastUtils.show(R.string.unlike); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6087/buggy-version/app.src.main.java.me.wcy.music.fragment.PlayFragment.java", "BodyUseAPI": [], "Fixed commit": "3eb2399f922f5fcd029a707a8edaa662f8b92c3b", "Url": "https://api.github.com/repos/BlackJocker1995/Enchant", "Date": "2017-06-01T03:16:38Z"},
{"Line": "=>10357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.ql.parse.ASTNode.getChild(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (qSpec.getWindowSpecs().containsKey(nameNode.getText())) { throw new org.apache.hadoop.hive.ql.parse.SemanticException(org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.generateErrorMessage(nameNode, ((\"Duplicate definition of window \" + (nameNode.getText())) + \" is not allowed\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8372/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.java", "BodyUseAPI": ["org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.generateErrorMessage(org.apache.hadoop.hive.ql.parse.ASTNode,((\"Duplicate definition of window \" + (nameNode.getText())) + \" is not allowed\"))", "org.apache.hadoop.hive.ql.parse.ASTNode.getText()"], "Fixed commit": "f1cb0ff04441469249c4a236cc738d9b80b61957", "Url": "https://api.github.com/repos/hbutani/hive", "Date": "2013-01-12T17:17:22Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<edu.virginia.cs.core.model.HierarchyNode>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(nodes.containsKey(node))) { nodes.put(node.getName(), (index++)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/386/buggy-version/src.main.java.edu.virginia.cs.core.algorithm.HierarchyReader.java", "BodyUseAPI": ["edu.virginia.cs.core.model.HierarchyNode.getName()", "java.util.Map<java.lang.String, java.lang.Integer>.put(node.getName(),int)"], "Fixed commit": "02f1404b40a38ee00cf28723497415457a70921d", "Url": "https://api.github.com/repos/MinghuaJiang/hierarchial-search-recommendation", "Date": "2017-05-06T10:04:43Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataI != (cachedBloomFilters)) { dataI.flushIfNotClosed(); dataI.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4968/buggy-version/src.main.java.be.bagofwords.db.DataInterfaceFactory.java", "BodyUseAPI": ["be.bagofwords.db.DataInterface.flushIfNotClosed()", "be.bagofwords.db.DataInterface.close()"], "Fixed commit": "e4f7f5061b739c23738be36af6f1e3d2917a45a7", "Url": "https://api.github.com/repos/koendeschacht/count-db", "Date": "2014-10-01T14:55:46Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cachedBloomFilters) != null) { cachedBloomFilters.flushIfNotClosed(); cachedBloomFilters.close(); cachedBloomFilters = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4968/buggy-version/src.main.java.be.bagofwords.db.DataInterfaceFactory.java", "BodyUseAPI": [], "Fixed commit": "e4f7f5061b739c23738be36af6f1e3d2917a45a7", "Url": "https://api.github.com/repos/koendeschacht/count-db", "Date": "2014-10-01T14:55:46Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (base == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/533/buggy-version/src.UI.Table.java", "BodyUseAPI": [], "Fixed commit": "13fb04bcad9d1d8872de501b70e265b128bc6a20", "Url": "https://api.github.com/repos/Edifice/MyTunes", "Date": "2012-12-11T13:30:57Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(name.endsWith(\"type\"))) { try { org.gbif.api.model.checklistbank.ParsedName pn = org.gbif.common.parsers.TypifiedNameParser.NAME_PARSER.parse(name); return org.gbif.common.parsers.core.ParseResult.success(ParseResult.CONFIDENCE.PROBABLE, pn.canonicalNameComplete()); } catch (org.gbif.nameparser.UnparsableException e) { log.debug(\"Cannot parse typified name: [{}] from input [{}]\", name, input); name = org.gbif.common.parsers.TypifiedNameParser.CLEAN_WHITESPACE.matcher(name).replaceAll(\" \").trim(); if (org.gbif.common.parsers.TypifiedNameParser.REASONABLE_NAME_SIZE_RANGE.contains(name.length())) { return org.gbif.common.parsers.core.ParseResult.success(ParseResult.CONFIDENCE.POSSIBLE, name); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5241/buggy-version/src.main.java.org.gbif.common.parsers.TypifiedNameParser.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)", "java.util.regex.Matcher.replaceAll(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String,java.lang.String,java.lang.String)", "org.gbif.nameparser.NameParser.parse(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "e36553879a5cd9f28535f6aeb4e6ad10cc3f2c3d", "Url": "https://api.github.com/repos/gbif/parsers", "Date": "2015-03-17T14:11:39Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.linkedin.zookeeper.client.IZKClient.getStringData(ZkPath.CONFIGS_MAVEN_REPO.getPath())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((mavenRepo != null) && (!(mavenRepo.endsWith(\"/\")))) { mavenRepo += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5435/buggy-version/fabric-core.src.main.scala.org.fusesource.fabric.service.FabricServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ca647bc993b468a6772e32dd54120cfb2e3f89bc", "Url": "https://api.github.com/repos/fusesource/fabric", "Date": "2011-11-08T11:43:06Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.egov.infra.web.controller.InboxController.LOG.isInfoEnabled()) org.egov.infra.web.controller.InboxController.LOG.info((((((org.egov.infra.web.controller.InboxController.DATE_FORMATTER.print(new org.joda.time.DateTime(b.getCreatedDate()))) + \" \") + (b.getId())) + \"-\") + (b.getLink())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8266/buggy-version/egov.egov-egiweb.src.main.java.org.egov.infra.web.controller.InboxController.java", "BodyUseAPI": ["org.apache.log4j.Logger.info((((((org.egov.infra.web.controller.InboxController.DATE_FORMATTER.print(new org.joda.time.DateTime(b.getCreatedDate()))) + \"  \") + (b.getId())) + \"-\") + (b.getLink())))"], "Fixed commit": "75a6e87144fab35d776c81092c086b40e4a52339", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-06-02T12:07:42Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.egov.infra.web.controller.InboxController.LOG.isInfoEnabled()) org.egov.infra.web.controller.InboxController.LOG.info(\"before reverse\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8266/buggy-version/egov.egov-egiweb.src.main.java.org.egov.infra.web.controller.InboxController.java", "BodyUseAPI": ["org.apache.log4j.Logger.info(java.lang.String)"], "Fixed commit": "75a6e87144fab35d776c81092c086b40e4a52339", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-06-02T12:07:42Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.egov.infra.web.controller.InboxController.LOG.isInfoEnabled()) org.egov.infra.web.controller.InboxController.LOG.info((((((org.egov.infra.web.controller.InboxController.DATE_FORMATTER.print(new org.joda.time.DateTime(b.getCreatedDate()))) + \" \") + (b.getId())) + \"-\") + (b.getLink())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8266/buggy-version/egov.egov-egiweb.src.main.java.org.egov.infra.web.controller.InboxController.java", "BodyUseAPI": ["org.apache.log4j.Logger.info((((((org.egov.infra.web.controller.InboxController.DATE_FORMATTER.print(new org.joda.time.DateTime(b.getCreatedDate()))) + \"  \") + (b.getId())) + \"-\") + (b.getLink())))"], "Fixed commit": "75a6e87144fab35d776c81092c086b40e4a52339", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-06-02T12:07:42Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (distance_average <= 0) { distance_final.setTextColor(Color.RED); distance_final.setText(((java.lang.String.format(\"%.02f\", distance_average)) + \" cm. You should click the \\\"Redo\\\" button and redo this one.\")); }else { distance_final.setTextColor(Color.GREEN); distance_final.setText(((java.lang.String.format(\"%.02f\", distance_average)) + \" cm. Nice job! You can click the \\\"Next\\\" button and go to the next image.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3287/buggy-version/src.main.java.ioio.examples.hello.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.lang.String.format(java.lang.String,double)", "java.lang.String.format(java.lang.String,double)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "18ec9b873b8325ae38156dffc7731297c5b0eda9", "Url": "https://api.github.com/repos/viren-velacheri/Android-Eye-Test", "Date": "2016-08-21T15:39:10Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sagex.miniclient.android.MiniclientApplication.get().getClient().properties().getBoolean(PrefStore.Keys.exit_to_home_screen, true)) { if (ctx instanceof android.app.Activity) { ((android.app.Activity) (ctx)).finish(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2661/buggy-version/android-shared.src.main.java.sagex.miniclient.android.util.ServerInfoUtil.java", "BodyUseAPI": [], "Fixed commit": "4675c870303d0c3c3573237c6ce9956b4bb05cc7", "Url": "https://api.github.com/repos/OpenSageTV/sagetv-miniclient", "Date": "2016-03-12T13:06:02Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.getActiveCache().get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (tagBean != null) { resultMap.put(tagId, tagBean.getTagImpl()); }else { resultMap.put(tagId, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2659/buggy-version/c2mon-client.c2mon-client-core.src.main.java.cern.c2mon.client.core.cache.ClientDataTagCacheImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, cern.c2mon.client.common.tag.Tag>.put(java.lang.Long,tagBean.getTagImpl())", "cern.c2mon.client.core.tag.TagController.getTagImpl()"], "Fixed commit": "29b68f5a99b51dd6777bfda3f723fb7699589342", "Url": "https://api.github.com/repos/c2mon/c2mon", "Date": "2016-10-25T13:43:36Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(issuePurpose)) materialIssue.setIssuePurpose(org.egov.inv.model.MaterialIssue.IssuePurposeEnum.valueOf(issuePurpose));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4012/buggy-version/inventory.inventory-services.src.main.java.org.egov.inv.persistence.entity.MaterialIssueEntity.java", "BodyUseAPI": ["org.egov.inv.model.MaterialIssue.setIssuePurpose(org.egov.inv.model.MaterialIssue.IssuePurposeEnum.valueOf(issuePurpose))", "org.egov.inv.model.MaterialIssue.IssuePurposeEnum.valueOf(java.lang.String)"], "Fixed commit": "1fe0a8d34ffc8b9362d9058452aaafb7774cf576", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-11-28T06:12:41Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.traccar.http.JsonConverter.objectFromJson(req.getReader(),org.traccar.model.User)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (user.getAdmin()) { org.traccar.Context.getPermissionsManager().checkAdmin(getUserId(req)); }else { org.traccar.Context.getPermissionsManager().checkUser(getUserId(req), user.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4660/buggy-version/src.org.traccar.http.UserServlet.java", "BodyUseAPI": ["org.traccar.model.User.getId()", "org.traccar.Context.getPermissionsManager().checkUser(getUserId(req),user.getId())"], "Fixed commit": "136be53a084b84a0a764d0d326146fca241733f4", "Url": "https://api.github.com/repos/jon-stumpf/traccar", "Date": "2015-06-26T22:50:40Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 16) { getViewTreeObserver().removeOnGlobalLayoutListener(this); }else { getViewTreeObserver().removeGlobalOnLayoutListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1048/buggy-version/src.net.neevek.android.widget.PullToRefreshHeaderView.java", "BodyUseAPI": [], "Fixed commit": "005e2f2e7b6da4fffbb2bebef0875f26be82ddbf", "Url": "https://api.github.com/repos/neevek/Easy-PullToRefresh-Android", "Date": "2013-12-04T02:23:00Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dctrl) != null) { if (dctrl.isMysql()) { try { dctrl.executeBatch(list); } catch (java.lang.Exception e) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2467/buggy-version/concurrent.DbWriter.java", "BodyUseAPI": [], "Fixed commit": "1e17ba859de1cb72500172165e5b06b48fb3dd52", "Url": "https://api.github.com/repos/PaddyK/StudyWorks", "Date": "2014-08-28T20:42:20Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pendingList.size()) > 0) { pendingList.remove(position); recyclerView.getAdapter().notifyItemRemoved(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6043/buggy-version/app.src.main.java.com.collage.friendsearch.FriendSearchFragment.java", "BodyUseAPI": ["java.util.List<com.collage.util.models.User>.remove(int)"], "Fixed commit": "221bb14fccb751eb4833dda0985d5f0020e290fd", "Url": "https://api.github.com/repos/matdziu/collage", "Date": "2017-02-04T14:22:33Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHandler) != null) { mHandler.removeCallbacksAndMessages(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7322/buggy-version/app.src.main.java.dev.xesam.android.map.movedemo.BusSource.java", "BodyUseAPI": [], "Fixed commit": "74459f638544c05f1f26bce3bb7b79f4ac65e6d2", "Url": "https://api.github.com/repos/xesam/MoveMarker", "Date": "2016-12-23T08:35:46Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (uploadState != null) { this.uploadState = uploadState.toString(); }else { this.uploadState = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5436/buggy-version/app.src.main.java.com.kilogramm.mattermost.model.entity.filetoattacth.FileInfo.java", "BodyUseAPI": ["com.kilogramm.mattermost.model.entity.UploadState.toString()"], "Fixed commit": "f159371c58f390e206e4db2609d50f36373d644e", "Url": "https://api.github.com/repos/Kilograpp/Mattermost-Android-Native", "Date": "2017-01-19T10:22:44Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getGust()) != null) { gust.setText(((result.getGust().toString()) + \" mps\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7113/buggy-version/examples.src.main.java.ingvar.examples.weather.view.WeatherActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(((result.getGust().toString()) + \" mps\"))", "ingvar.examples.weather.pojo.Weather.getGust()", "result.getGust().toString()"], "Fixed commit": "5c014341464b77cfbbfacf47a878a2d87ffa3183", "Url": "https://api.github.com/repos/orwir/processor", "Date": "2015-04-09T15:16:26Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonObject.getAsJsonObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((jWind.get(\"gust\")) != null) { weather.setGust(jWind.get(\"gust\").getAsInt()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7113/buggy-version/examples.src.main.java.ingvar.examples.weather.network.WeatherDeserializer.java", "BodyUseAPI": ["ingvar.examples.weather.pojo.Weather.setGust(jWind.get(\"gust\").getAsInt())", "com.google.gson.JsonObject.get(java.lang.String)", "jWind.get(\"gust\").getAsInt()"], "Fixed commit": "5c014341464b77cfbbfacf47a878a2d87ffa3183", "Url": "https://api.github.com/repos/orwir/processor", "Date": "2015-04-09T15:16:26Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a.compareTo(p)) >= 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8373/buggy-version/ECC.java", "BodyUseAPI": [], "Fixed commit": "42acb291ef0205de7615573808690cc99522a7a0", "Url": "https://api.github.com/repos/mvisat/ECCEG", "Date": "2016-11-03T18:11:02Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookieList == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6348/buggy-version/wdtk-wikibaseapi.src.main.java.org.wikidata.wdtk.wikibaseapi.ApiConnection.java", "BodyUseAPI": [], "Fixed commit": "0c87b00effae7a43fab5aaa8bc5405d107ec1aa8", "Url": "https://api.github.com/repos/Wikidata/Wikidata-Toolkit", "Date": "2015-10-16T22:12:12Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.confluent.kafkarest.ProduceTask.getSchemaHolder()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((schemaHolder.getKeySchema()) != null) { keySchema = new org.apache.avro.Schema.Parser().parse(schemaHolder.getKeySchema()); if (schemaIdCache.containsKey(keySchema)) { keySchemaId = schemaIdCache.get(keySchema); }else { keySchemaId = keySerializer.register((topic + \"-key\"), keySchema); schemaIdCache.put(keySchema, keySchemaId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8313/buggy-version/src.main.java.io.confluent.kafkarest.AvroRestProducer.java", "BodyUseAPI": ["org.apache.avro.Schema.Parser.parse(schemaHolder.getKeySchema())", "io.confluent.kafkarest.entities.SchemaHolder.getKeySchema()"], "Fixed commit": "29ecf0043866b945dfb1099a9341067c3e251e03", "Url": "https://api.github.com/repos/igorkaroza/kafka-rest", "Date": "2016-07-13T23:18:42Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.confluent.kafkarest.ProduceTask.getSchemaHolder()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((schemaHolder.getValueSchema()) != null) { valueSchema = new org.apache.avro.Schema.Parser().parse(schemaHolder.getValueSchema()); if (schemaIdCache.containsKey(valueSchema)) { valueSchemaId = schemaIdCache.get(valueSchema); }else { valueSchemaId = valueSerializer.register((topic + \"-value\"), valueSchema); schemaIdCache.put(valueSchema, valueSchemaId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8313/buggy-version/src.main.java.io.confluent.kafkarest.AvroRestProducer.java", "BodyUseAPI": ["org.apache.avro.Schema.Parser.parse(schemaHolder.getValueSchema())", "io.confluent.kafkarest.entities.SchemaHolder.getValueSchema()"], "Fixed commit": "29ecf0043866b945dfb1099a9341067c3e251e03", "Url": "https://api.github.com/repos/igorkaroza/kafka-rest", "Date": "2016-07-13T23:18:42Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > 21) { return java.lang.Runtime.is64Bit() ? new com.taobao.android.dexposed.art.method.ArtMethodV22_64Bit(method) : new com.taobao.android.dexposed.art.method.ArtMethodV22(method); }else if ((Build.VERSION.SDK_INT) == 21) { return java.lang.Runtime.is64Bit() ? new com.taobao.android.dexposed.art.method.ArtMethodV21_64Bit(method) : new com.taobao.android.dexposed.art.method.ArtMethodV21(method); }else { return new com.taobao.android.dexposed.art.method.ArtMethodV19(method); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/852/buggy-version/dexposed.dexposed.src.main.java.com.taobao.android.dexposed.art.method.ArtMethod.java", "BodyUseAPI": [], "Fixed commit": "a5fde3f3cc056344782032ca93767ef3470d1471", "Url": "https://api.github.com/repos/alibaba/dexposed", "Date": "2017-03-29T11:49:10Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (webBrowser != null) { java.awt.Component webComponent = new chrriis.dj.nativeswing.NativeComponentWrapper(webBrowser).createEmbeddableComponent(); mapPane.add(webComponent, javax.swing.JLayeredPane.DEFAULT_LAYER); webComponent.setBounds((((-1) * ((MAP_WIDTH) / 2)) + ((RADAR_SIZE) / 2)), (((-1) * ((MAP_HEIGHT) / 2)) + ((RADAR_SIZE) / 2)), MAP_WIDTH, MAP_HEIGHT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5563/buggy-version/src.org.dyndns.fzoli.rccar.controller.view.map.MapDialog.java", "BodyUseAPI": [], "Fixed commit": "25847fc63f327100c3bc723d25151318d1f66450", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2013-01-10T22:36:39Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((webBrowser) == null) { lbErr.setText(\"<html><p style=\\\"text-align:center\\\">A t\\u00e9rk\\u00e9p nincs t\\u00e1mogatva.</p></html>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5563/buggy-version/src.org.dyndns.fzoli.rccar.controller.view.map.MapDialog.java", "BodyUseAPI": [], "Fixed commit": "25847fc63f327100c3bc723d25151318d1f66450", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2013-01-10T22:36:39Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mDeploymentList) != null) && (object instanceof com.tortel.deploytrack.DeploymentFragment)) { com.tortel.deploytrack.DeploymentFragment fragment = ((com.tortel.deploytrack.DeploymentFragment) (object)); com.tortel.deploytrack.Deployment deployment = fragment.getDeployment(); int position = mDeploymentList.indexOf(deployment); return position < 0 ? POSITION_NONE : position; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6650/buggy-version/app.src.main.java.com.tortel.deploytrack.DeploymentFragmentAdapter.java", "BodyUseAPI": [], "Fixed commit": "ed2a18c5113dfc8b22070ce49b7a797aa98a97d4", "Url": "https://api.github.com/repos/Tortel/DeployTrack", "Date": "2017-08-18T00:19:28Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressPercent) < 1.0) { progressPercent = bytes / total; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1440/buggy-version/src.com.fedztech.revelandroid.DropboxListener_OpenFileProgress.java", "BodyUseAPI": [], "Fixed commit": "101fecb741a0ef2eb5f7bc8c04acffa6bf5fab00", "Url": "https://api.github.com/repos/fedztech/Revelandroid", "Date": "2013-12-10T20:55:38Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noBranchesYet()) { return (executionCount) > 0 ? 1 : 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1120/buggy-version/coverage.src.mockit.coverage.lines.LineCoverageData.java", "BodyUseAPI": [], "Fixed commit": "f8db576044f1489062169402c664675738c0f6e7", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2014-08-24T02:15:44Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.text.StyledDocument.getText(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(character.equals(\"\\n\"))) && (!(character.equals(\"\\t\")))) { (charCount)++; if (!(character.equals(\" \"))) { (charCountNoSpaces)++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6263/buggy-version/src.com.wordprocessor.core.WordProcessor.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "f6f7aa84e867397d6e26569960a308a629439bd2", "Url": "https://api.github.com/repos/ISQUISHALL/WordProcessor", "Date": "2014-09-17T03:59:13Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentManager.findFragmentById(R.id.fragment_container)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (tingleFragment == null) { tingleFragment = new com.mobapp.android.tingle.TingleFragment(); fm.beginTransaction().add(R.id.fragment_container, tingleFragment, \"tingle_fragment\").commit(); }else if (tingleFragment.getTag().equals(\"tingle_fragment\")) { fm.beginTransaction().replace(R.id.fragment_container, tingleFragment, \"tingle_fragment\").commit(); }else { tingleFragment = new com.mobapp.android.tingle.TingleFragment(); fm.beginTransaction().replace(R.id.fragment_container, tingleFragment, \"tingle_fragment\").commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5695/buggy-version/Tingle.app.src.main.java.com.mobapp.android.tingle.TingleActivity.java", "BodyUseAPI": ["android.support.v4.app.Fragment.getTag()", "fm.beginTransaction().replace(R.id.fragment_container,android.support.v4.app.Fragment,java.lang.String)", "tingleFragment.getTag().equals(java.lang.String)", "fm.beginTransaction().replace(R.id.fragment_container, tingleFragment, \"tingle_fragment\").commit()"], "Fixed commit": "1e3c19458b5fb0c666bc548b0870bdb9a2fcb962", "Url": "https://api.github.com/repos/mindisx/AndroidAppDev-Masters", "Date": "2016-02-24T17:42:59Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (spriteToExecute != null) { spriteToExecute.startWhenScripts(\"Tapped\"); draw(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3342/buggy-version/catroid.src.at.tugraz.ist.catroid.livewallpaper.LiveWallpaper.java", "BodyUseAPI": ["at.tugraz.ist.catroid.content.Sprite.startWhenScripts(java.lang.String)"], "Fixed commit": "89b578b45891af62a1db42ddfffb05bf9144f7f9", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-09-15T13:23:36Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elmakers.mine.bukkit.api.wand.Wand.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (((requiredPath) != null) && (!(path.hasPath(requiredPath)))) { com.elmakers.mine.bukkit.api.wand.WandUpgradePath requiresPath = controller.getPath(requiredPath); if (requiresPath != null) { context.showMessage(context.getMessage(\"no_required_path\", \"You must be at least $path!\").replace(\"$path\", requiresPath.getName())); }else { context.getLogger().warning((\"Invalid path specified in AddSpell action: \" + (requiredPath))); } return com.elmakers.mine.bukkit.api.spell.SpellResult.FAIL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3914/buggy-version/src.main.java.com.elmakers.mine.bukkit.action.builtin.AddSpellAction.java", "BodyUseAPI": ["context.getLogger().warning(java.lang.String)", "com.elmakers.mine.bukkit.api.magic.MageController.getPath(java.lang.String)"], "Fixed commit": "0f1371e8fc8b72c4ecec1e2e9e7eea36b3657c83", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2016-01-25T16:43:17Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jukebot.utils.Permissions.canConnect(e.getMember().getVoiceState().getChannel())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (canConnect == (Permissions.CONNECT_STATUS.NO_CONNECT_SPEAK)) { e.getChannel().sendMessage(new net.dv8tion.jda.core.EmbedBuilder().setColor(Bot.EmbedColour).setTitle(\"Invalid Channel Permissions\").setDescription(\"The target voicechannel doesn\\'t allow me to Connect/Speak\\n\\nPlease reconfigure channel permissions or move to another channel.\").build()).queue(); return; }else if (canConnect == (Permissions.CONNECT_STATUS.USER_LIMIT)) { e.getChannel().sendMessage(new net.dv8tion.jda.core.EmbedBuilder().setColor(Bot.EmbedColour).setTitle(\"VoiceChannel Full\").setDescription(\"Your VoiceChannel is full. Raise the user limit or grant me the 'Move Members' permission.\").build()).queue(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7789/buggy-version/src.main.java.jukebot.commands.Select.java", "BodyUseAPI": [], "Fixed commit": "25c6379425a9c7d70bc7639fb768c835e35a51d8", "Url": "https://api.github.com/repos/Devoxin/JukeBot", "Date": "2017-09-28T17:18:50Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(values.containsKey(param.getName()))) throw new org.ocpsoft.rewrite.exception.ParameterizationException(((((\"No value supplied for parameter [\" + (param.getName())) + \"] when building pattern [\") + (getPattern())) + \"].\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3913/buggy-version/api.src.main.java.org.ocpsoft.rewrite.param.RegexParameterizedPatternBuilder.java", "BodyUseAPI": ["org.ocpsoft.rewrite.param.RegexParameterizedPatternBuilder.RegexGroup.getName()"], "Fixed commit": "f70acd08e8931b113bddd9274f823be412b82073", "Url": "https://api.github.com/repos/ocpsoft/rewrite", "Date": "2014-01-21T01:10:59Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Collection<rescuecore2.standard.entities.StandardEntity>.toArray(rescuecore2.worldmodel.Entity[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index < 0) || (index > ((roadArray.length) - 1))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1892/buggy-version/src.RSLBench.PlatoonAbstractAgent.java", "BodyUseAPI": [], "Fixed commit": "6ee7145457a92c6519840a42e531a7f31a107eec", "Url": "https://api.github.com/repos/RMASBench/RSLB2", "Date": "2013-10-02T07:51:33Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filePath.contains(\"/\")) { sourceFilename = filePath.substring(((filePath.lastIndexOf(\"/\")) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8901/buggy-version/JavaSourceCodesComparaotr.src.main.java.pl.polsl.javasourcecodescomparator.model.ArchiveOperator.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "6a22462a454fd6e08da3bd0e1b876300e27160af", "Url": "https://api.github.com/repos/xXhariboXx/JavaSourceCodesComparaotr", "Date": "2017-12-12T20:43:24Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (projectName.contains(\"/\")) { projectName = projectName.substring(0, projectName.indexOf(\"/\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8901/buggy-version/JavaSourceCodesComparaotr.src.main.java.pl.polsl.javasourcecodescomparator.model.ArchiveOperator.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "6a22462a454fd6e08da3bd0e1b876300e27160af", "Url": "https://api.github.com/repos/xXhariboXx/JavaSourceCodesComparaotr", "Date": "2017-12-12T20:43:24Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((directoryPath.length()) > 0) { projectName = directoryPath.substring(0, ((directoryPath.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8901/buggy-version/JavaSourceCodesComparaotr.src.main.java.pl.polsl.javasourcecodescomparator.model.ArchiveOperator.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "6a22462a454fd6e08da3bd0e1b876300e27160af", "Url": "https://api.github.com/repos/xXhariboXx/JavaSourceCodesComparaotr", "Date": "2017-12-12T20:43:24Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.omaps.data.SpyData.getData().getListVideo()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.omaps.media.SpyListGallery.getSpyDataListVideo(camera).equals(\"ERROR_ADDR\")) { android.widget.Toast.makeText(this, \"Server Salah. Coba Cek Konfigurasi kembali!!!\", Toast.LENGTH_SHORT).show(); }else { try { org.json.JSONArray spyData = new org.json.JSONArray(org.omaps.media.SpyListGallery.getSpyDataListVideo(camera)); for (int j = 0; j < (spyData.length()); j++) { java.lang.String getData = spyData.getJSONObject(j).getString(\"@attributes\"); org.json.JSONObject data = new org.json.JSONObject(getData); java.util.HashMap<java.lang.String, java.lang.String> map = new java.util.HashMap<java.lang.String, java.lang.String>(); map.put(\"Filename\", data.getString(\"Filename\")); map.put(\"SizeBytes\", data.getString(\"SizeBytes\")); map.put(\"DurationSeconds\", ((\"Durasi \" + (data.getString(\"DurationSeconds\"))) + \" Detik\")); android.util.Log.i(SpyConfig.SPY_LOGGING, (\"File Name = \" + (data.getString(\"Filename\")))); android.util.Log.i(SpyConfig.SPY_LOGGING, (\"File Size = \" + (data.getString(\"SizeBytes\")))); android.util.Log.i(SpyConfig.SPY_LOGGING, (\"File Time = \" + (data.getString(\"DurationSeconds\")))); mylist.add(map); } android.widget.ListAdapter adapter = new android.widget.SimpleAdapter(this, mylist, R.layout.listgallery, new java.lang.String[]{ \"Filename\", \"DurationSeconds\" }, new int[]{ R.id.filename, R.id.duration }); setListAdapter(adapter); final android.widget.ListView lv = getListView(); lv.setTextFilterEnabled(true); lv.setOnItemClickListener(new android.widget.AdapterView.OnItemClickListener() { public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { @java.lang.SuppressWarnings(\"unchecked\") java.util.HashMap<java.lang.String, java.lang.String> spyData = ((java.util.HashMap<java.lang.String, java.lang.String>) (lv.getItemAtPosition(position))); android.widget.Toast.makeText(org.omaps.view.ListGallery.this, (\"Lihat Rekamanan \" + (spyData.get(\"Filename\"))), Toast.LENGTH_SHORT).show(); org.omaps.data.SpyData.getData().setFileNameVideo(spyData.get(\"Filename\")); android.content.Intent i = new android.content.Intent(getApplicationContext(), org.omaps.view.VideoPlay.class); startActivity(i); } }); } catch (org.json.JSONException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2234/buggy-version/src.org.omaps.view.ListGallery.java", "BodyUseAPI": ["org.omaps.media.SpyListGallery.getSpyDataListVideo(java.lang.String)"], "Fixed commit": "314774e4f6be270ef671c244416570808ad83e62", "Url": "https://api.github.com/repos/agusprasetyo811/camspy", "Date": "2012-12-12T19:08:13Z"},
{"Line": "=>1802", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exception instanceof com.orientechnologies.orient.client.remote.OSecurityException) clearToken();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6076/buggy-version/client.src.main.java.com.orientechnologies.orient.client.remote.OStorageRemote.java", "BodyUseAPI": [], "Fixed commit": "fc62ac3522eed6ab7a846760731d1856be7af2f4", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-10-20T21:14:16Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getReviews()) == null) return 0; else { for (itp341.wang.cherrie.parkhere.model.Review r : getReviews()) { sum += r.getRating(); } return sum / ((float) (getReviews().size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4098/buggy-version/ParkHere.app.src.main.java.itp341.wang.cherrie.parkhere.model.Listing.java", "BodyUseAPI": [], "Fixed commit": "783b42c8ce8208b49fc3efe3316eb6389ca0a080", "Url": "https://api.github.com/repos/cherriewang/cs310-parkhere", "Date": "2016-11-04T07:08:05Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.b3log.symphony.repository.NotificationRepository.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == record) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6093/buggy-version/src.main.java.org.b3log.symphony.service.NotificationMgmtService.java", "BodyUseAPI": [], "Fixed commit": "4ee568ec2d692d5b73f58821f900474c8d16ce09", "Url": "https://api.github.com/repos/b3log/symphony", "Date": "2017-05-18T12:53:58Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<? extends java.util.concurrent.Callable<T>>.next()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/55/buggy-version/src.main.java.org.threadly.concurrent.PriorityScheduledExecutorServiceWrapper.java", "BodyUseAPI": [], "Fixed commit": "6a5d1b389be5f6c6e6a46ebb025a864445449dbc", "Url": "https://api.github.com/repos/jentfoo/threadly", "Date": "2013-05-24T04:05:03Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((receiptProperty) == null) || (receiptProperty.isEmpty())) { return \"label.receipt.none\"; }else { return receiptProperty; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5279/buggy-version/src.mobi.nordpos.device.action.HomeActionBean.java", "BodyUseAPI": [], "Fixed commit": "08bbea9f991b72e6600b2c403d57d213569e3852", "Url": "https://api.github.com/repos/nordpos-mobi/nordpos-mobi-servlet", "Date": "2014-02-19T10:42:03Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((displayProperty) == null) || (displayProperty.isEmpty())) { return \"label.display.none\"; }else { return displayProperty; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5279/buggy-version/src.mobi.nordpos.device.action.HomeActionBean.java", "BodyUseAPI": [], "Fixed commit": "08bbea9f991b72e6600b2c403d57d213569e3852", "Url": "https://api.github.com/repos/nordpos-mobi/nordpos-mobi-servlet", "Date": "2014-02-19T10:42:03Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((FileField.getText()) != null) { java.io.File tempDirectory = new java.io.File(FileField.getText()); originalDirectory = tempDirectory; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4799/buggy-version/src.androidresizer.AResizerFrame.java", "BodyUseAPI": [], "Fixed commit": "e44c53f4865924345ab9ac76dc5a25faef0ec52c", "Url": "https://api.github.com/repos/BlitzKraig/AndroidResizer", "Date": "2014-10-20T17:03:48Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((mString != null) && ((mString.getStringMap()) != null)) { for (java.lang.String element : mString.getStringMap().values()) { if (org.apache.commons.lang.StringUtils.containsIgnoreCase(element, text)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/246/buggy-version/vme-web.src.main.java.org.vme.service.AbstractService.java", "BodyUseAPI": ["mString.getStringMap().values()", "org.fao.fi.vme.domain.model.MultiLingualString.getStringMap()"], "Fixed commit": "bc3a911f01b1daefe452f9bdb430bb7f37ed48dc", "Url": "https://api.github.com/repos/openfigis/vme", "Date": "2014-09-25T09:38:02Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasStartRestr) { sb.append(\"} & \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5569/buggy-version/src.de.uni_koblenz.jgralab.greql.serialising.GreqlSerializer.java", "BodyUseAPI": [], "Fixed commit": "f6bc1c8d74fecb906efdfd148def76557dc0d911", "Url": "https://api.github.com/repos/jgralab/jgralab", "Date": "2013-01-07T09:18:30Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cards[i].getValue()) != (cards[j].getValue())) { res.add(new no.ntnu.ai.player.PokerHand(cards[i], cards[j])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4932/buggy-version/src.no.ntnu.ai.deck.CardUtils.java", "BodyUseAPI": ["java.util.ArrayList<no.ntnu.ai.player.PokerHand>.add(no.ntnu.ai.player.PokerHand)"], "Fixed commit": "39c87e781bad6e788d64308b8573be9a9995be27", "Url": "https://api.github.com/repos/nordmoen/IT3105-poker", "Date": "2012-08-23T08:25:05Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flow) != null) for (edu.caltech.networksimulator.datacapture.DataCaptureTool dc : getDataCollectors()) dc.setMax(this, \"Flow Index\", flow.getTotalPackets());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3813/buggy-version/src.main.java.edu.caltech.networksimulator.Host.java", "BodyUseAPI": [], "Fixed commit": "333b981cb2dc13dbea82067481ffe8ec0eb33bbd", "Url": "https://api.github.com/repos/TheNumenorean/NetworkSimulator", "Date": "2016-11-27T03:01:35Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (colVal != null) { if ((colVal.length()) > 0) { try { oldValueJSON.put(colName, new org.json.JSONArray(colVal)); } catch (org.json.JSONException e) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7842/buggy-version/src.edu.umass.cs.contextservice.database.guidattributes.GUIDAttributeStorage.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,org.json.JSONArray)", "java.lang.String.length()"], "Fixed commit": "a091590bf6a87531b2b0f975bf3a4336f007ec15", "Url": "https://api.github.com/repos/ayadavumass/CNS", "Date": "2016-06-25T06:10:08Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scheduler.hasPeriodicAction(spawner, org.terasology.spawning.SpawnerSystem.PERIODIC_SPAWNING)) { scheduler.cancelPeriodicAction(spawner, org.terasology.spawning.SpawnerSystem.PERIODIC_SPAWNING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3926/buggy-version/src.main.java.org.terasology.spawning.SpawnerSystem.java", "BodyUseAPI": ["org.terasology.logic.delay.DelayManager.cancelPeriodicAction(org.terasology.entitySystem.entity.EntityRef,java.lang.String)"], "Fixed commit": "11fafe2b851bc9a4c357353d09c1f9ff2b2fb7e1", "Url": "https://api.github.com/repos/Terasology/Spawning", "Date": "2015-07-08T18:38:00Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentRow != null) { currentRow.more = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7261/buggy-version/src.fit.decorator.util.Table.java", "BodyUseAPI": [], "Fixed commit": "1bd2b57b05a032b5487311ea90b3725423b57207", "Url": "https://api.github.com/repos/amolenaar/fitnesse", "Date": "2016-02-13T23:55:34Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonElement.getAsJsonObject().get(\"image\").isJsonObject()) { serverBase = apply(((org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternal) (context.deserialize(jsonElement, org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternal.class)))); }else { serverBase = apply(((org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternalWithoutImage) (context.deserialize(jsonElement, org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternalWithoutImage.class)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8140/buggy-version/apis.openstack-nova.src.main.java.org.jclouds.openstack.nova.v2_0.config.NovaParserModule.java", "BodyUseAPI": ["org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.apply(((org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternal) (context.deserialize(jsonElement, org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternal.class))))", "org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.apply(((org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternalWithoutImage) (context.deserialize(jsonElement, org.jclouds.openstack.nova.v2_0.config.NovaParserModule.ServerAdapter.ServerInternalWithoutImage.class))))", "com.google.gson.JsonDeserializationContext.deserialize(com.google.gson.JsonElement,java.lang.Class)", "com.google.gson.JsonDeserializationContext.deserialize(com.google.gson.JsonElement,java.lang.Class)"], "Fixed commit": "b95898fc0a3d574143f89bfd0f2d0d422fc87de2", "Url": "https://api.github.com/repos/cdancy/jclouds", "Date": "2014-06-19T20:19:18Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (morlok8k.MinecraftLandGenerator.Main.testing) { java.lang.System.out.println(tempCoords); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3802/buggy-version/src.morlok8k.MinecraftLandGenerator.Main.java", "BodyUseAPI": [], "Fixed commit": "b01712ee60ab9c8b46e3a6d95a30b7154c08c363", "Url": "https://api.github.com/repos/Morlok8k/MinecraftLandGenerator", "Date": "2012-08-14T03:00:49Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(com.rocker1337.dab.events.SuperEvent.hasThoriumFlight)) & (!(com.rocker1337.dab.events.SuperEvent.isSpectatorMode))) { com.rocker1337.dab.events.SuperEvent.player.capabilities.setFlySpeed(0.2F); com.rocker1337.dab.events.SuperEvent.player.capabilities.setPlayerWalkSpeed(0.1F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1942/buggy-version/src.main.java.com.rocker1337.dab.events.SuperEvent.java", "BodyUseAPI": [], "Fixed commit": "287d9220307fff969fcdd49581310f10399f40bd", "Url": "https://api.github.com/repos/D-Inc/DAB-Development-And-Breean", "Date": "2016-09-11T00:30:32Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (nameset != null) { nameset.remove(name); if (nameset.isEmpty()) { getDpidToFlowModNameIndex().remove(dpid); }else { getDpidToFlowModNameIndex().put(dpid, nameset); } getFlowModNameToDpidIndex().remove(name); etri.sdn.controller.module.staticentrymanager.StaticFlowEntryStorage.logger.debug(\"dpid to flowname: {}\", getDpidToFlowModNameIndex().toString()); etri.sdn.controller.module.staticentrymanager.StaticFlowEntryStorage.logger.debug(\"flowname to dpid: {}\", getFlowModNameToDpidIndex().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5510/buggy-version/Torpedo.src.etri.sdn.controller.module.staticentrymanager.StaticFlowEntryStorage.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.isEmpty()", "java.util.Set<java.lang.String>.remove(java.lang.String)", "java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.put(java.lang.String,java.util.Set<java.lang.String>)"], "Fixed commit": "579530e00874041f8b231cf310b5b735c6244737", "Url": "https://api.github.com/repos/bjlee72/IRIS", "Date": "2014-10-23T06:48:49Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.String) { jval = com.entwinemedia.fn.data.json.Jsons.v(((java.lang.String) (value))); }else if (value instanceof java.lang.Number) { jval = com.entwinemedia.fn.data.json.Jsons.v(((java.lang.Number) (value))); }else if (value instanceof java.lang.Boolean) { jval = com.entwinemedia.fn.data.json.Jsons.v(((java.lang.Boolean) (value))); }else { jval = com.entwinemedia.fn.data.json.Jsons.v(value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7136/buggy-version/src.main.java.com.entwinemedia.fn.data.json.Jsons.java", "BodyUseAPI": ["java.lang.Object.toString()", "com.entwinemedia.fn.data.json.Jsons.v(java.lang.String)"], "Fixed commit": "e9450dd9372c973f36a20408e84ade6f665c7aea", "Url": "https://api.github.com/repos/entwinemedia/functional", "Date": "2016-04-06T12:22:45Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["biz.sendyou.senduandroid.thread.TemplateDownloadThread.getThumb_keys()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((thumbUrls.get(i).contains(\".jpg\")) || (thumbUrls.get(i).contains(\"png\"))) { biz.sendyou.senduandroid.datatype.CardTemplate cardTemplate = new biz.sendyou.senduandroid.datatype.CardTemplate(); cardTemplate.setUrl(thumbUrls.get(i)); templates.add(cardTemplate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/52/buggy-version/SendUAndroid.app.src.main.java.biz.sendyou.senduandroid.Activity.NavigationDrawerActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "biz.sendyou.senduandroid.datatype.CardTemplate.setUrl(java.lang.String)"], "Fixed commit": "b97be1fde04c83f991eb243c9ea62cf3f8c0ec17", "Url": "https://api.github.com/repos/HandDev/SendUAndroid", "Date": "2016-11-03T09:25:39Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((endTime) == null) || (startTimeEqualsEndTime())) { this.startTime = startTime; this.setHasStartTime(true); this.setEndTime(startTime); this.setHasEndTime(true); }else if (((endTime) != null) && (main.storage.Task.endIsEarlierThanStart(this.getStartDate(), startTime, this.getEndDate(), this.getEndTime()))) { throw new java.lang.IllegalArgumentException(main.storage.Task.MESSAGE_END_EARLIER_THAN_START); }else { this.startTime = startTime; this.setHasStartTime(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7903/buggy-version/src.main.storage.Task.java", "BodyUseAPI": [], "Fixed commit": "a26ba076504a6b1ba9c2b981c96291f90cb201b3", "Url": "https://api.github.com/repos/cs2103aug2014-T13-2J/main", "Date": "2014-10-30T02:47:03Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((endDate) == null) || (startDateEqualsEndDate())) { this.startDate = startDate; this.setHasStartDate(true); this.setEndDate(startDate); this.setHasEndDate(true); }else if (((endDate) != null) && (main.storage.Task.endIsEarlierThanStart(startDate, this.getStartTime(), this.getEndDate(), this.getEndTime()))) { throw new java.lang.IllegalArgumentException(main.storage.Task.MESSAGE_END_EARLIER_THAN_START); }else { this.startDate = startDate; this.setHasStartDate(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7903/buggy-version/src.main.storage.Task.java", "BodyUseAPI": [], "Fixed commit": "a26ba076504a6b1ba9c2b981c96291f90cb201b3", "Url": "https://api.github.com/repos/cs2103aug2014-T13-2J/main", "Date": "2014-10-30T02:47:03Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contents.size()) == 0) result = new java.lang.StringBuilder(\"NO RESULTS\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5948/buggy-version/db_main.src.dbms.engine.Table.java", "BodyUseAPI": [], "Fixed commit": "a8e1db2ac04b6c98ae225ec64f22c5c404ce237f", "Url": "https://api.github.com/repos/rajabzz/GySQL", "Date": "2015-11-13T20:20:21Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Dama.GameLogic.Casellaorigin.getPedina().getColore().equals(Pedina.Colori.NULL)) { }else if ((pCasellaSelect.getPedina().equals(Dama.GameLogic.Casellaswap1.getPedina())) && (((Dama.GameLogic.Casellaorigin.getRiga()) + (Dama.GameLogic.RilevaPedinaEat)) == (Dama.GameLogic.Casellaswap1.getRiga()))) { Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaswap1.getColonna()][Dama.GameLogic.Casellaswap1.getRiga()].setPedina(Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaorigin.getColonna()][Dama.GameLogic.Casellaorigin.getRiga()].getPedina()); Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaorigin.getColonna()][Dama.GameLogic.Casellaorigin.getRiga()].setPedina(new Dama.Pedina(Pedina.Colori.NULL)); Dama.GameLogic.Casellaorigin = new Dama.Casella(Scacchiera.Colori.NERO); Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellatarget.getColonna()][Dama.GameLogic.Casellatarget.getRiga()].setPedina(new Dama.Pedina(Pedina.Colori.NULL)); Dama.GameLogic.Casellatarget = new Dama.Casella(Scacchiera.Colori.NERO); Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaswap2.getColonna()][Dama.GameLogic.Casellaswap2.getRiga()].setContentAreaFilled(false); Dama.GameLogic.CanBeDama(Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaswap1.getColonna()][Dama.GameLogic.Casellaswap1.getRiga()]); Dama.GameLogic.CambiaTurno(); }else if ((pCasellaSelect.getPedina().equals(Dama.GameLogic.Casellaswap2.getPedina())) && (((Dama.GameLogic.Casellaorigin.getRiga()) + (Dama.GameLogic.RilevaPedinaEat)) == (Dama.GameLogic.Casellaswap2.getRiga()))) { Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaswap2.getColonna()][Dama.GameLogic.Casellaswap2.getRiga()].setPedina(Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaorigin.getColonna()][Dama.GameLogic.Casellaorigin.getRiga()].getPedina()); Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaorigin.getColonna()][Dama.GameLogic.Casellaorigin.getRiga()].setPedina(new Dama.Pedina(Pedina.Colori.NULL)); Dama.GameLogic.Casellaorigin = new Dama.Casella(Scacchiera.Colori.NERO); Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellatarget.getColonna()][Dama.GameLogic.Casellatarget.getRiga()].setPedina(new Dama.Pedina(Pedina.Colori.NULL)); Dama.GameLogic.Casellatarget = new Dama.Casella(Scacchiera.Colori.NERO); Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaswap1.getColonna()][Dama.GameLogic.Casellaswap1.getRiga()].setContentAreaFilled(false); Dama.GameLogic.CanBeDama(Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaswap2.getColonna()][Dama.GameLogic.Casellaswap2.getRiga()]); Dama.GameLogic.CambiaTurno(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4178/buggy-version/Dama.src.Dama.GameLogic.java", "BodyUseAPI": ["Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaswap1.getColonna()][Dama.GameLogic.Casellaswap1.getRiga()].setPedina(Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaorigin.getColonna()][Dama.GameLogic.Casellaorigin.getRiga()].getPedina())", "Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaorigin.getColonna()][Dama.GameLogic.Casellaorigin.getRiga()].setPedina(Dama.Pedina)", "Dama.Casella.getRiga()", "Dama.Casella.getRiga()", "Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaorigin.getColonna()][Dama.GameLogic.Casellaorigin.getRiga()].getPedina()", "Dama.Casella.getRiga()", "Dama.Casella.getColonna()", "Dama.Casella.getColonna()"], "Fixed commit": "92c3107949ffc37a49ead61b439547770b2412a6", "Url": "https://api.github.com/repos/Frah93/Dama", "Date": "2013-09-14T23:19:34Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Dama.GameLogic.Casellaorigin.getPedina().getColore().equals(Pedina.Colori.NULL)) { }else if ((pCasellaSelect.getPedina().equals(Dama.GameLogic.Casellaswap1.getPedina())) && (((Dama.GameLogic.Casellaorigin.getRiga()) + (Dama.GameLogic.RilevaPedinaMove)) == (Dama.GameLogic.Casellaswap1.getRiga()))) { Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaswap1.getColonna()][Dama.GameLogic.Casellaswap1.getRiga()].setPedina(Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaorigin.getColonna()][Dama.GameLogic.Casellaorigin.getRiga()].getPedina()); Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaorigin.getColonna()][Dama.GameLogic.Casellaorigin.getRiga()].setPedina(new Dama.Pedina(Pedina.Colori.NULL)); Dama.GameLogic.Casellaorigin = new Dama.Casella(Scacchiera.Colori.NERO); Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaswap2.getColonna()][Dama.GameLogic.Casellaswap2.getRiga()].setContentAreaFilled(false); Dama.GameLogic.CanBeDama(Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaswap1.getColonna()][Dama.GameLogic.Casellaswap1.getRiga()]); Dama.GameLogic.CambiaTurno(); }else if ((pCasellaSelect.getPedina().equals(Dama.GameLogic.Casellaswap2.getPedina())) && (((Dama.GameLogic.Casellaorigin.getRiga()) + (Dama.GameLogic.RilevaPedinaMove)) == (Dama.GameLogic.Casellaswap2.getRiga()))) { Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaswap2.getColonna()][Dama.GameLogic.Casellaswap2.getRiga()].setPedina(Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaorigin.getColonna()][Dama.GameLogic.Casellaorigin.getRiga()].getPedina()); Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaorigin.getColonna()][Dama.GameLogic.Casellaorigin.getRiga()].setPedina(new Dama.Pedina(Pedina.Colori.NULL)); Dama.GameLogic.Casellaorigin = new Dama.Casella(Scacchiera.Colori.NERO); Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaswap1.getColonna()][Dama.GameLogic.Casellaswap1.getRiga()].setContentAreaFilled(false); Dama.GameLogic.CanBeDama(Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaswap2.getColonna()][Dama.GameLogic.Casellaswap2.getRiga()]); Dama.GameLogic.CambiaTurno(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4178/buggy-version/Dama.src.Dama.GameLogic.java", "BodyUseAPI": ["Dama.Casella.getRiga()", "Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaswap1.getColonna()][Dama.GameLogic.Casellaswap1.getRiga()].setPedina(Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaorigin.getColonna()][Dama.GameLogic.Casellaorigin.getRiga()].getPedina())", "Dama.Casella.getColonna()", "Dama.Casella.getColonna()", "Dama.Casella.getRiga()", "Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaorigin.getColonna()][Dama.GameLogic.Casellaorigin.getRiga()].getPedina()", "Dama.GameLogic.Board.scacchiera[Dama.GameLogic.Casellaorigin.getColonna()][Dama.GameLogic.Casellaorigin.getRiga()].setPedina(Dama.Pedina)", "Dama.Casella.getRiga()"], "Fixed commit": "92c3107949ffc37a49ead61b439547770b2412a6", "Url": "https://api.github.com/repos/Frah93/Dama", "Date": "2013-09-14T23:19:34Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInital) { isInital = false; testBackend(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1910/buggy-version/app.src.main.java.com.dartmouth.cs.greenworks.Activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "86004055fbcbfde774eb4d3168713fdf4631a0db", "Url": "https://api.github.com/repos/chris61015/GreenWorks", "Date": "2017-03-08T22:31:53Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ems.dao.UserDao.getUserByEmail(request.getUserPrincipal().getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((systemUser.getRole().equals(\"admin\")) || (systemUser.getRole().equals(\"event_mng\"))) { com.ems.controller.priv.EventController.log.debug(\"systemUser is an admin or event_mng\"); forward += \"/WEB-INF/jsp/private/eventList.jsp\"; }else { forward = com.ems.controller.priv.EventController.UNAUTHORIZED_PAGE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1860/buggy-version/src.com.ems.controller.priv.EventController.java", "BodyUseAPI": [], "Fixed commit": "2c2427a91c1e72ad5dbec2d1c1f4cdb4632f73f2", "Url": "https://api.github.com/repos/luca91/EMS", "Date": "2013-06-03T07:41:09Z"},
{"Line": "=>956", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index == (-1)) return ((com.vaadin.data.Container.Indexed) (items)).getIdByIndex(0); else if (index > ((getContainerDataSource().size()) - 1)) return ((com.vaadin.data.Container.Indexed) (items)).getIdByIndex(((getContainerDataSource().size()) - 1)); else return ((com.vaadin.data.Container.Indexed) (items)).getIdByIndex(index);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/926/buggy-version/org.tepi.filtertable.src.main.java.com.vaadin.ui.CustomTable.java", "BodyUseAPI": ["com.vaadin.ui.CustomTable.getIdByIndex(int)"], "Fixed commit": "80fb3be61b82a6ed790e681ede229b94844d47cb", "Url": "https://api.github.com/repos/thingtrack/third-party", "Date": "2013-03-30T20:28:05Z"},
{"Line": "=>5276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWindow()) != null) getWindow().setFocusedComponent(toFocus);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/926/buggy-version/org.tepi.filtertable.src.main.java.com.vaadin.ui.CustomTable.java", "BodyUseAPI": [], "Fixed commit": "80fb3be61b82a6ed790e681ede229b94844d47cb", "Url": "https://api.github.com/repos/thingtrack/third-party", "Date": "2013-03-30T20:28:05Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remoteClient.equals(client)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8733/buggy-version/src.Philosopher.java", "BodyUseAPI": [], "Fixed commit": "a4169e085e9fb1c53e5ae1be5cd80b726c5337d1", "Url": "https://api.github.com/repos/bpichon/MySpread", "Date": "2015-06-10T01:46:52Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (installationNumber != 0) { visitedInstallations.add(toInstallation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5566/buggy-version/MSVPP.src.hgsadc.Voyage.java", "BodyUseAPI": [], "Fixed commit": "897e86965fc07ef74eae7e5c60dfad80c59c5227", "Url": "https://api.github.com/repos/henloen/masters-thesis", "Date": "2016-04-01T12:54:14Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startTime.isAfter(endTime)) { java.lang.System.out.println(\"hi\"); endDate = endDate.plusDays(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7279/buggy-version/src.parser.DateTimeParser.java", "BodyUseAPI": [], "Fixed commit": "3f4dda2ea9e620fd0085b48a9b9d1ba1abdbc3cb", "Url": "https://api.github.com/repos/cs2103jan2016-t11-3j/main", "Date": "2016-04-09T12:04:10Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastScale.size()) >= 2) { at.searles.fractview.ui.Matrix l1 = lastScale.removeLast(); at.searles.fractview.ui.Matrix l0 = lastScale.removeLast(); l0.preConcat(l1); lastScale.addLast(l0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7048/buggy-version/src.at.searles.fractview.ui.ScaleableImageView.java", "BodyUseAPI": ["java.util.LinkedList<at.searles.fractview.ui.Matrix>.addLast(at.searles.fractview.ui.Matrix)", "java.util.LinkedList<at.searles.fractview.ui.Matrix>.removeLast()", "java.util.LinkedList<at.searles.fractview.ui.Matrix>.removeLast()"], "Fixed commit": "4bea2a65ab6cc32ee3e0694c8d6a30b5fb34c43b", "Url": "https://api.github.com/repos/searles/FractviewRenderscript", "Date": "2015-12-03T08:59:51Z"},
{"Line": "=>1821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path.length()) == 1) { path = path + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2955/buggy-version/src.org.ibex.nestedvm.UnixRuntime.java", "BodyUseAPI": [], "Fixed commit": "7ab461bbee4bdf887965bebb3b74b0e310bdcd5d", "Url": "https://api.github.com/repos/tewarfel/nestedvm", "Date": "2014-12-01T00:43:26Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3955/buggy-version/teo.teo.isgci.gui.JGraphXCanvas.java", "BodyUseAPI": [], "Fixed commit": "047d145b9decef8941b97bae7fb17fb3aac0620c", "Url": "https://api.github.com/repos/firewarrior/GraphIT", "Date": "2013-07-01T15:50:40Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((firstTitle) != null) && ((firstTitle) != (title))) { dialog.setTaskTitle(firstTitle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/578/buggy-version/work-swing-impl.impl.src.main.java.org.cytoscape.work.internal.task.SwingTaskMonitor.java", "BodyUseAPI": [], "Fixed commit": "2d4b3a94f0ac55c6f7b115de8cccf35c5d343b14", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2014-05-27T20:12:45Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.silverpeas.workflow.api.instance.ProcessInstance.getField(item.getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (field instanceof com.silverpeas.form.fieldType.UserField) { if ((com.silverpeas.util.StringUtil.isDefined(role)) && (currentRole.equals(role))) { users.add(field.getStringValue()); }else if (com.silverpeas.util.StringUtil.isNotDefined(role)) { users.add(field.getStringValue()); } }else if (field instanceof com.silverpeas.form.fieldType.MultipleUserField) { com.silverpeas.form.fieldType.MultipleUserField multipleUserField = ((com.silverpeas.form.fieldType.MultipleUserField) (field)); if ((com.silverpeas.util.StringUtil.isDefined(role)) && (currentRole.equals(role))) { users.addAll(java.util.Arrays.asList(multipleUserField.getUserIds())); }else if (com.silverpeas.util.StringUtil.isNotDefined(role)) { users.addAll(java.util.Arrays.asList(multipleUserField.getUserIds())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5223/buggy-version/process-manager.process-manager-war.src.main.java.com.silverpeas.processManager.ProcessManagerSessionController.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(field.getStringValue())", "java.util.List<java.lang.String>.add(field.getStringValue())", "com.silverpeas.form.Field.getStringValue()", "com.silverpeas.form.Field.getStringValue()"], "Fixed commit": "43e0178672dfb3525eecb1b666871cbad4be835e", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2017-01-25T10:34:23Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (receiptGetRequest.getFromDate())) && (null != (receiptGetRequest.getToDate()))) { receiptReqValidator.validateSearchReceiptRequest(receiptGetRequest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4360/buggy-version/collections.collection-services.src.main.java.org.egov.collection.web.controller.ReceiptController.java", "BodyUseAPI": ["org.egov.collection.util.ReceiptReqValidator.validateSearchReceiptRequest(org.egov.collection.web.contract.ReceiptSearchGetRequest)"], "Fixed commit": "ed276730b70471718433aa8a3aae747e0e341487", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-08-16T12:51:34Z"},
{"Line": "=>695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(params.mediaRenderer.isTranscodeToMPEGPS())) { videoBitrateOptions.add(\"40M\"); }else if (params.mediaRenderer.isTranscodeToMPEGPS()) { videoBitrateOptions.add(\"9800k\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5018/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": ["params.mediaRenderer.isTranscodeToMPEGPS()"], "Fixed commit": "a11c0e138c63710f34243aec2d3a1196f918c7fb", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-12-01T18:58:26Z"},
{"Line": "=>691", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.pms.configuration.RendererConfiguration.getCustomFFmpegOptions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(customFFmpegOptions.contains(\"-maxrate\"))) && (bufSize > 0)) { videoBitrateOptions.add(\"-maxrate\"); if (((defaultMaxBitrates[0]) > 0) && (!(params.mediaRenderer.isTranscodeToMPEGPS()))) { videoBitrateOptions.add(((java.lang.String.valueOf(defaultMaxBitrates[0])) + \"k\")); }else if (!(params.mediaRenderer.isTranscodeToMPEGPS())) { videoBitrateOptions.add(\"40M\"); }else if (params.mediaRenderer.isTranscodeToMPEGPS()) { videoBitrateOptions.add(\"9800k\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5018/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": [], "Fixed commit": "a11c0e138c63710f34243aec2d3a1196f918c7fb", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-12-01T18:58:26Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intent.getExtras()) != null) { CMD = intent.getStringExtra(\"CMD\"); if ((CMD) == null) { CMD = \"UPDATE_AND_POLL\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/568/buggy-version/client.KeepInTouch.src.app.master.kit.PollService.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Fixed commit": "589b93b73adf809849543eebb2872af4cf92f832", "Url": "https://api.github.com/repos/keepintouch/Keep-In-Touch", "Date": "2012-04-26T13:13:31Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(text))) { mGraduallyTextView.setText(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4071/buggy-version/catloadinglibrary.src.main.java.com.roger.catloadinglibrary.CatLoadingView.java", "BodyUseAPI": ["com.roger.catloadinglibrary.GraduallyTextView.setText(java.lang.String)"], "Fixed commit": "550062d69b14120e103e9663be736ba7816ea795", "Url": "https://api.github.com/repos/Rogero0o/CatLoadingView", "Date": "2016-10-17T03:29:57Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlock(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (b != null) if (!(net.minecraftforge.event.ForgeEventFactory.onPlayerInteract(p, (b.isAir(w, x, y, z) ? PlayerInteractEvent.Action.RIGHT_CLICK_AIR : PlayerInteractEvent.Action.RIGHT_CLICK_BLOCK), x, y, z, side, w).isCanceled())) b.onBlockActivated(w, x, y, z, p, side, hitX, hitY, hitZ);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5807/buggy-version/src.main.java.appeng.items.tools.ToolNetworkTool.java", "BodyUseAPI": ["net.minecraft.block.Block.isAir(net.minecraft.world.World,int,int,int)", "net.minecraftforge.event.ForgeEventFactory.onPlayerInteract(p, (b.isAir(w, x, y, z) ? PlayerInteractEvent.Action.RIGHT_CLICK_AIR : PlayerInteractEvent.Action.RIGHT_CLICK_BLOCK), x, y, z, side, w).isCanceled()", "net.minecraftforge.event.ForgeEventFactory.onPlayerInteract(net.minecraft.entity.player.EntityPlayer,(b.isAir(w, x, y, z) ? PlayerInteractEvent.Action.RIGHT_CLICK_AIR : PlayerInteractEvent.Action.RIGHT_CLICK_BLOCK),int,int,int,int,net.minecraft.world.World)", "net.minecraft.block.Block.onBlockActivated(net.minecraft.world.World,int,int,int,net.minecraft.entity.player.EntityPlayer,int,float,float,float)"], "Fixed commit": "77889845bf10896c0f55b85b184a1e29a681a82e", "Url": "https://api.github.com/repos/xsun2001/Applied-Energistics-2-Unofficial", "Date": "2017-12-29T12:30:01Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.extension.siddhi.execution.streamingml.clustering.kmeans.util.KMeansClusterer.logger.isDebugEnabled()) { org.wso2.extension.siddhi.execution.streamingml.clustering.kmeans.util.KMeansClusterer.logger.debug((\"Pending future tasks done: \" + (f.isDone()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1808/buggy-version/component.src.main.java.org.wso2.extension.siddhi.execution.streamingml.clustering.kmeans.util.KMeansClusterer.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "9623ffe64d90398b815ef4bde791c85d025fdcb7", "Url": "https://api.github.com/repos/wso2-extensions/siddhi-execution-streamingml", "Date": "2017-12-19T16:29:07Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cancel(true))) { if ((listener) != null) { listener.onCancelled(this); } listener = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7439/buggy-version/src.com.kkbox.toolkit.image.KKImageRequest.java", "BodyUseAPI": [], "Fixed commit": "d33a910ea1d92ad417c8e047be419da2c81a208f", "Url": "https://api.github.com/repos/KKBOX/android_kktoolkit", "Date": "2014-10-31T09:03:49Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sheet.getRow(rowIndex)) == null) { sheet.createRow(rowIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/888/buggy-version/src.main.java.uk.co.certait.htmlexporter.writer.excel.ExcelTableRowWriter.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Sheet.createRow(int)"], "Fixed commit": "0b9e989adb47ef00921df60a996bd6087aa81050", "Url": "https://api.github.com/repos/alanhay/html-exporter", "Date": "2013-10-13T11:31:08Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mojarraMajorVersion > 2) { namespacedViewStateSupported = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1012/buggy-version/bridge-impl.src.main.java.com.liferay.faces.bridge.renderkit.bridge.internal.ResponseWriterBridgeCompat_2_0_Impl.java", "BodyUseAPI": [], "Fixed commit": "2d68d85b703ed22dbf26926f39c4900231f5adc5", "Url": "https://api.github.com/repos/vsingleton/liferay-faces-bridge-impl", "Date": "2016-07-11T23:23:54Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mojarraMinorVersion > 2) { namespacedViewStateSupported = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1012/buggy-version/bridge-impl.src.main.java.com.liferay.faces.bridge.renderkit.bridge.internal.ResponseWriterBridgeCompat_2_0_Impl.java", "BodyUseAPI": [], "Fixed commit": "2d68d85b703ed22dbf26926f39c4900231f5adc5", "Url": "https://api.github.com/repos/vsingleton/liferay-faces-bridge-impl", "Date": "2016-07-11T23:23:54Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mealsEaten) == (meals)) pendingResponse.processAsyncResponse(false); else { (mealsEaten)++; pendingResponse.processAsyncResponse(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6761/buggy-version/docs.tutorials.core.DiningTable.java", "BodyUseAPI": [], "Fixed commit": "c818035fc1ce5cacac3c5592c13bc64d842e01c6", "Url": "https://api.github.com/repos/laforge49/JActor2", "Date": "2013-10-14T02:20:46Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((calendar.getSummary()) != null) { em.appendField(com.cloudcraftgaming.discal.utils.MessageManager.getMessage(\"Embed.Calendar.Pre.Summary\", settings), calendar.getSummary(), true); }else { em.appendField(com.cloudcraftgaming.discal.utils.MessageManager.getMessage(\"Embed.Calendar.Pre.Summary\", settings), \"***UNSET***\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6579/buggy-version/src.main.java.com.cloudcraftgaming.discal.internal.calendar.calendar.CalendarMessageFormatter.java", "BodyUseAPI": ["com.cloudcraftgaming.discal.internal.calendar.calendar.PreCalendar.getSummary()", "sx.blah.discord.util.EmbedBuilder.appendField(com.cloudcraftgaming.discal.utils.MessageManager.getMessage(\"Embed.Calendar.Pre.Summary\", settings),calendar.getSummary(),boolean)"], "Fixed commit": "d5c6e89ccae2004a563ee2f89dcc9cdde84c6f60", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2017-06-22T22:35:19Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["liquid.task.AllocationContainerTask.find(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allocatedContainerQuantity != (order.getContainerQty())) { throw new liquid.task.NotCompletedException(\"container.allocation.is.not.completed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6000/buggy-version/web-console.src.main.java.liquid.task.AllocationContainerTask.java", "BodyUseAPI": [], "Fixed commit": "a73260253e1f5830c7414e092e7ae98b86bd230f", "Url": "https://api.github.com/repos/redbrick9/liquid", "Date": "2014-07-22T00:36:00Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (height <= 1) mHeaderView.setVisibility(View.GONE); else mHeaderView.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6627/buggy-version/src.com.woozzu.android.widget.RefreshableListView.java", "BodyUseAPI": [], "Fixed commit": "72a472d8d40e7d56adb5e56f1ea7bd05a94d77ab", "Url": "https://api.github.com/repos/woozzu/RefreshableListView", "Date": "2011-12-19T06:57:59Z"},
{"Line": "=>2688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.ryanhamshire.GriefPrevention.DataStore.getClaimAt(org.bukkit.Location,boolean,playerData.lastClaim)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (claim != null) { java.lang.System.out.println((\"Claim owned by:\" + (claim.getOwnerName()))); java.lang.System.out.println(((\"Is Subclaim:\" + (claim.parent)) == null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/598/buggy-version/src.me.ryanhamshire.GriefPrevention.GriefPrevention.java", "BodyUseAPI": ["java.io.PrintStream.println(((\"Is Subclaim:\" + (claim.parent)) == null))", "me.ryanhamshire.GriefPrevention.Claim.getOwnerName()", "java.io.PrintStream.println((\"Claim owned by:\" + (claim.getOwnerName())))"], "Fixed commit": "806a97368361965ac27935a0ee75903bfb09c638", "Url": "https://api.github.com/repos/Tux2/GriefPrevention", "Date": "2013-05-07T13:07:02Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.grafiken.length) > versionID) { this.button.setIcon(this.grafiken[versionID]); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3947/buggy-version/GUI.Game.Grafikverwaltung.Grafikspeicher.java", "BodyUseAPI": ["javax.swing.JLabel.setIcon(javax.swing.ImageIcon)"], "Fixed commit": "6174eb04b864298ba0c4f090b212dc489a6a7e8a", "Url": "https://api.github.com/repos/Dani636/Projektarbeit", "Date": "2013-05-22T01:50:54Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.joenee.web.rest.ea.ClientUserService.isLegal(com.joenee.web.rest.ea.User,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (legal == 1) { com.joenee.web.rest.ea.EaNotice eaNotice = eaNoticeService.selectOne(null); if (eaNotice != null) { retValue = ((((CloudConstants.return_200) + (CloudConstants.split)) + (eaNotice.getTitle())) + (CloudConstants.split)) + \"http://www.yuehuaplus.com/eanotice/index\"; } }else if (legal == 2) { retValue = CloudConstants.return_402; }else if (legal == 3) { retValue = CloudConstants.return_403; }else if (legal == 4) { retValue = CloudConstants.return_401; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5498/buggy-version/src.main.java.com.joenee.web.rest.ea.ClientUserService.java", "BodyUseAPI": [], "Fixed commit": "fe81abbde4b12de2a4ba47a5488fd08282ff9dee", "Url": "https://api.github.com/repos/narutoswind/wechat-web", "Date": "2017-10-14T02:28:07Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (anagrams.containsKey(sortedKey)) return anagrams.get(sortedKey).contains(word); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5091/buggy-version/app.src.main.java.com.cs399.tbgs.anagramz.WordList.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.List<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "ba1800a4516472d9d3b0aa6df3d52698dd71676c", "Url": "https://api.github.com/repos/bjg96/cs399-project-2-anagram-game", "Date": "2016-10-09T22:03:14Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.util.ExchangeHelper.getContentType(org.apache.camel.Exchange)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (contentTypeString != null) { if ((contentTypeString.indexOf(\"charset\")) > 0) { contentType = org.apache.http.entity.ContentType.parse(contentTypeString); }else { contentType = org.apache.http.entity.ContentType.create(contentTypeString); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6037/buggy-version/components.camel-http4.src.main.java.org.apache.camel.component.http4.HttpProducer.java", "BodyUseAPI": ["org.apache.http.entity.ContentType.create(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "org.apache.http.entity.ContentType.parse(java.lang.String)"], "Fixed commit": "ced67f412ef983cd47093c63043a3691a80ba423", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-10-09T08:11:17Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((focus.getBody()) != null) { org.jbox2d.common.Vec2 distance = body.getLocalPoint(focus.getBody().getPosition()); return distance; }else { return new org.jbox2d.common.Vec2(999.0F, 0.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2366/buggy-version/core.src.main.java.sut.game01.core.character.Character.java", "BodyUseAPI": ["focus.getBody().getPosition()", "sut.game01.core.character.Character.getLocalPoint(focus.getBody().getPosition())", "sut.game01.core.character.Character.getBody()"], "Fixed commit": "bc96199cb4c7344b641b968776256a33cfbcc22c", "Url": "https://api.github.com/repos/peesadgame/LittleWitch", "Date": "2014-03-16T10:36:04Z"},
{"Line": "=>8979", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.DatabaseMetaData.getDriverName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((driverName.contains(\"MS SQL\")) || (driverName.contains(\"Microsoft\"))) { st.executeUpdate(\"SET IDENTITY_INSERT AM_API_THROTTLE_POLICY ON\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7874/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.java", "BodyUseAPI": [], "Fixed commit": "dbb8de419d692e1fc148a26b2529d113439055f0", "Url": "https://api.github.com/repos/irham0019/carbon-apimgt", "Date": "2017-04-20T11:17:02Z"},
{"Line": "=>8996", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.DatabaseMetaData.getDriverName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((driverName.contains(\"MS SQL\")) || (driverName.contains(\"Microsoft\"))) { st.executeUpdate(\"SET IDENTITY_INSERT AM_API_THROTTLE_POLICY OFF\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7874/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.java", "BodyUseAPI": [], "Fixed commit": "dbb8de419d692e1fc148a26b2529d113439055f0", "Url": "https://api.github.com/repos/irham0019/carbon-apimgt", "Date": "2017-04-20T11:17:02Z"},
{"Line": "=>1385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((slicesList.size()) > 0) { log.info((\"slice view after reading: \" + (tedb.getSlices().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5075/buggy-version/src.main.java.es.tid.tedb.FileTEDBUpdater.java", "BodyUseAPI": [], "Fixed commit": "30e52bad4a40309cdfcb29aa2a9f947a2dac73ee", "Url": "https://api.github.com/repos/asgamb/netphony-topology", "Date": "2017-05-12T10:24:48Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.collections.BidiMap.get(org.eclipse.core.resources.IMarker)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (node != null) { node.setMarker(updatedMarker); nodeMap.remove(original); nodeMap.put(updatedMarker, node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1029/buggy-version/plugins.org.jboss.tools.windup.ui.src.org.jboss.tools.windup.ui.internal.explorer.IssueExplorerContentService.java", "BodyUseAPI": ["org.jboss.tools.windup.ui.internal.explorer.MarkerNode.setMarker(org.eclipse.core.resources.IMarker)", "org.apache.commons.collections.BidiMap.put(org.eclipse.core.resources.IMarker,org.jboss.tools.windup.ui.internal.explorer.MarkerNode)"], "Fixed commit": "96f4013d69ca07516b079f69e967065184b3ede4", "Url": "https://api.github.com/repos/windup/windup-eclipse-plugin", "Date": "2016-10-25T01:08:36Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(reservation.isOneWayTrip())) { com.miw.model.Time scheduleReturn = timeManager.getTimeById(schedulesSelected.getIdReturnSchedule()); reservation.setReturnTime(scheduleReturn); reservation.setPrice(((scheduleDeparture.getPrice()) + (scheduleReturn.getPrice()))); }else { reservation.setPrice(scheduleDeparture.getPrice()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8516/buggy-version/src.main.java.impl.miw.presentation.schedule.ScheduleController.java", "BodyUseAPI": ["com.miw.model.Reservation.setPrice(((scheduleDeparture.getPrice()) + (scheduleReturn.getPrice())))", "com.miw.model.Reservation.setReturnTime(com.miw.model.Time)", "com.miw.model.Reservation.setPrice(scheduleDeparture.getPrice())"], "Fixed commit": "0155a7407183d729a26fa6388abb796e64fc3a23", "Url": "https://api.github.com/repos/mvidalgarcia/swebus-springmvc", "Date": "2015-01-04T00:56:05Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geilove.service.RegisterLoginService.userLogin(userLoginVo.getUserEmail())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(userLoginVo.getUserPassword().equals(user.getUserpassword()))) { userProfileRsp.setData(null); userProfileRsp.setMsg(\"\u60a8\u8f93\u5165\u7684\u5bc6\u7801\u4e0d\u5bf9\"); userProfileRsp.setRetcode(2002); }else if (userLoginVo.getUserPassword().equals(user.getUserpassword())) { userProfileRsp.setData(user); userProfileRsp.setMsg(\"\u8bf7\u6c42\u6210\u529f\"); userProfileRsp.setRetcode(2000); }else { userProfileRsp.setData(null); userProfileRsp.setMsg(\"\u670d\u52a1\u5668\u9519\u8bef\"); userProfileRsp.setRetcode(2003); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/411/buggy-version/src.main.java.org.geilove.controller.RegisterLoginController.java", "BodyUseAPI": ["org.geilove.vo.UserLoginVo.getUserPassword()", "org.geilove.response.UserProfileRsp.setData(org.geilove.pojo.User)", "userLoginVo.getUserPassword().equals(user.getUserpassword())", "org.geilove.pojo.User.getUserpassword()"], "Fixed commit": "e5113a1b24044265485a266ca173224d818142d5", "Url": "https://api.github.com/repos/geilove/giveLoveOfBack", "Date": "2016-06-09T13:05:49Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((error != null) && (error.equals(\"no_keys\"))) { android.widget.Toast.makeText(context, \"Unable to decrypt, please remove all Bank accounts and add again.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2702/buggy-version/app.src.main.java.aloksharma.ufl.edu.stash.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "da203f220b44d5ed4623ce41bfd1bec6366d80f9", "Url": "https://api.github.com/repos/Alok-Sharma/Stash", "Date": "2015-11-16T04:17:17Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aloksharma.ufl.edu.stash.PlaidHelper.getBankBalance(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (balance != null) { outgoingIntent.putExtra(\"balance\", balance); }else { outgoingIntent.putExtra(\"error\", \"no_keys\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2702/buggy-version/app.src.main.java.aloksharma.ufl.edu.stash.ServerAccess.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.Double)"], "Fixed commit": "da203f220b44d5ed4623ce41bfd1bec6366d80f9", "Url": "https://api.github.com/repos/Alok-Sharma/Stash", "Date": "2015-11-16T04:17:17Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (lst != null) { for (java.lang.Object f : lst) { ((com.backend.facer.Face) (f)).setFi(com.backend.dao.UniqPhotosStore.getInstance().getOneFileByHashStr(((com.backend.facer.Face) (f)).getEtag())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4583/buggy-version/photoweb.src.com.service.RestRootWebService.java", "BodyUseAPI": [], "Fixed commit": "7fdb6448eb30e64e34c621566e9066cc105db5f2", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-04-02T13:56:17Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (entityitem != null) RenderManager.instance.renderEntityWithPosYaw(entityitem, 0.0, 0.0, 0.0, 0.0F, 0.0F);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4021/buggy-version/common.darkknight.jewelrycraft.renders.TileEntityMolderRender.java", "BodyUseAPI": ["RenderManager.instance.renderEntityWithPosYaw(net.minecraft.entity.item.EntityItem,double,double,double,float,float)"], "Fixed commit": "1b240121e2865f78d3884549cc9465db7c62d5e7", "Url": "https://api.github.com/repos/sor1n/Modjam-Mod", "Date": "2013-12-25T23:51:30Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (entityitem != null) RenderManager.instance.renderEntityWithPosYaw(entityitem, 0.0, 0.0, 0.0, 0.0F, 0.0F);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4021/buggy-version/common.darkknight.jewelrycraft.renders.TileEntityMolderRender.java", "BodyUseAPI": ["RenderManager.instance.renderEntityWithPosYaw(net.minecraft.entity.item.EntityItem,double,double,double,float,float)"], "Fixed commit": "1b240121e2865f78d3884549cc9465db7c62d5e7", "Url": "https://api.github.com/repos/sor1n/Modjam-Mod", "Date": "2013-12-25T23:51:30Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.pde.core.project.IBundleProjectDescription.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((manipulatedMetadata != null) && ((manipulatedMetadata.length()) > 0)) { bundle.setHeader(\"iPOJO-Components\", liglab.imag.fr.metadata.ui.editor.MetadataEditor.fixedWidthLine(manipulatedMetadata)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5850/buggy-version/IDE.code.ipojo-editor.metadata.ipojo.editor.src.liglab.imag.fr.metadata.ui.editor.MetadataEditor.java", "BodyUseAPI": ["liglab.imag.fr.metadata.ui.editor.MetadataEditor.fixedWidthLine(java.lang.String)", "org.eclipse.pde.core.project.IBundleProjectDescription.setHeader(java.lang.String,java.lang.String)"], "Fixed commit": "f2b936f2fc2c92b210854d74ed82b8ef289e0f47", "Url": "https://api.github.com/repos/AdeleResearchGroup/iCasa-IDE", "Date": "2014-09-23T10:25:43Z"},
{"Line": "=>919", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((findContextInbound()) == next) { next.invokeInboundBufferUpdated(); }else { fireInboundBufferUpdated0(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2273/buggy-version/transport.src.main.java.io.netty.channel.DefaultChannelHandlerContext.java", "BodyUseAPI": ["io.netty.channel.DefaultChannelHandlerContext.invokeInboundBufferUpdated()"], "Fixed commit": "273948055a5ae38a01f1f24f64026aaa1a8bf0a5", "Url": "https://api.github.com/repos/migue/netty", "Date": "2013-02-22T01:16:05Z"},
{"Line": "=>978", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((findContextInbound()) == next) { next.invokeChannelReadSuspended(); }else { fireChannelReadSuspended(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2273/buggy-version/transport.src.main.java.io.netty.channel.DefaultChannelHandlerContext.java", "BodyUseAPI": ["io.netty.channel.DefaultChannelHandlerContext.invokeChannelReadSuspended()"], "Fixed commit": "273948055a5ae38a01f1f24f64026aaa1a8bf0a5", "Url": "https://api.github.com/repos/migue/netty", "Date": "2013-02-22T01:16:05Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity().getIntent().getExtras()) != null) { groups = getActivity().getIntent().getExtras().getString(\"groups\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8689/buggy-version/app.src.main.java.com.zerter.teamconnect.AddPlan.AddPlanViewSet.java", "BodyUseAPI": [], "Fixed commit": "408062e0a34a111edf9a6bc0cdbeaaa98168b595", "Url": "https://api.github.com/repos/krystian111413/viva_la_salsa_messenger_app", "Date": "2017-10-26T20:14:36Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (xo.hasAttribute(\"id\")) { logger.setID(xo.getStringAttribute(\"id\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4534/buggy-version/src.dr.inferencexml.loggers.LoggerParser.java", "BodyUseAPI": ["beast.core.Logger.setID(xo.getStringAttribute(\"id\"))", "dr.inferencexml.loggers.XMLObject.getStringAttribute(java.lang.String)"], "Fixed commit": "078b92bfe46cbcc6a3fd4d4501ea93d145437843", "Url": "https://api.github.com/repos/CompEvol/beast1to2", "Date": "2016-08-07T22:43:46Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentPlayer.containsCardType(currentPlayer.handCards, CardType.Action))) currentPlayer.setActualPhase(Phase.Buy);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3786/buggy-version/IT-Projekt_Dominion.src.Server_GameLogic.Game.java", "BodyUseAPI": ["Server_GameLogic.Player.setActualPhase(Phase.Buy)"], "Fixed commit": "336179324505354618228dc4514eb34e527ca264", "Url": "https://api.github.com/repos/Eagleman1997/IT-Projekt_Dominion", "Date": "2017-12-08T08:05:04Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cleanup) cleanupData();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8604/buggy-version/src.main.java.net.dmulloy2.teamsparkle.io.PlayerDataCache.java", "BodyUseAPI": [], "Fixed commit": "01ea3cdf5a29408c843d9bf0eed18e09ff2282a4", "Url": "https://api.github.com/repos/dmulloy2/TeamSparkle", "Date": "2013-10-24T00:53:21Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (orderService.notifyPayment(orderId)) { notifyService.send(orderId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1015/buggy-version/orders-war.src.main.java.au.gov.qld.pub.orders.service.ScheduleService.java", "BodyUseAPI": ["au.gov.qld.pub.orders.service.NotifyService.send(java.lang.String)"], "Fixed commit": "286902c65cb349229b57b2a58d5515e11e3ae4fc", "Url": "https://api.github.com/repos/qld-gov-au/orders", "Date": "2015-12-14T06:01:15Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["config.getSystem().isDebugEnabled()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (debugEnabled) { characterMovement.isGhosting = !(characterMovement.isGhosting); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7012/buggy-version/src.main.java.org.terasology.componentSystem.controllers.LocalPlayerSystem.java", "BodyUseAPI": [], "Fixed commit": "3f6c28d6975a847de7f82ea77e0c6ae9c3f65172", "Url": "https://api.github.com/repos/MovingBlocks/Terasology", "Date": "2013-04-17T10:58:36Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((mEngineRenderer) != null) && ((mEngineRenderer.mEngine) != null)) && ((this.mEngineRenderer.mEngine.getEngineOptions()) != null)) && ((this.mEngineRenderer.mEngine.getEngineOptions().getResolutionPolicy()) != null)) { this.mEngineRenderer.mEngine.getEngineOptions().getResolutionPolicy().onMeasure(this, pWidthMeasureSpec, pHeightMeasureSpec); }else { org.andengine.engine.options.resolutionpolicy.FillResolutionPolicy frp = new org.andengine.engine.options.resolutionpolicy.FillResolutionPolicy(); frp.onMeasure(this, pWidthMeasureSpec, pHeightMeasureSpec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/11/buggy-version/src.main.java.org.andengine.opengl.view.RenderSurfaceView.java", "BodyUseAPI": ["this.mEngineRenderer.mEngine.getEngineOptions()", "this.mEngineRenderer.mEngine.getEngineOptions().getResolutionPolicy()", "this.mEngineRenderer.mEngine.getEngineOptions().getResolutionPolicy().onMeasure(org.andengine.opengl.view.RenderSurfaceView,int,int)"], "Fixed commit": "19ce40eeb9fa059d95e5ca703dd3d74a558dab84", "Url": "https://api.github.com/repos/nazgee/AndEngine", "Date": "2015-01-19T07:31:33Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cybergarage.upnp.ssdp.SSDPPacket.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((location != null) && ((location.length()) != 0)) { host = location.substring(0, location.lastIndexOf(\"/\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5039/buggy-version/mobile.src.main.java.com.aspirecn.upnp.mobile.MainActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "5934c202a992393a5be25f7d4c63a3f475e1965e", "Url": "https://api.github.com/repos/yinghuihong/CyberLink4Android", "Date": "2016-04-20T09:45:28Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cybergarage.upnp.ssdp.SSDPPacket.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((location != null) && ((location.length()) != 0)) { host = location.substring(0, location.lastIndexOf(\"/\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5039/buggy-version/mobile.src.main.java.com.aspirecn.upnp.mobile.MainActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "5934c202a992393a5be25f7d4c63a3f475e1965e", "Url": "https://api.github.com/repos/yinghuihong/CyberLink4Android", "Date": "2016-04-20T09:45:28Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (method != null) { try { method.invoke(null); models.TipoEvaluacion tipoEvaluacion = models.TipoEvaluacion.all().first(); tipoEvaluacion.estado = \"iniciada\"; tipoEvaluacion.save(); controllers.ActivarBaremacionController.log.info((\"Acci\u00f3n Editar de p\u00e1gina: \" + (\"gen/ActivarBaremacion/ActivarBaremacion.html\" + \" , intentada con \u00e9xito, Baremaci\u00f3n Iniciada\"))); } catch (java.lang.Exception e) { } }else { invokedClass = baremacion.BaremacionFAP.class; if (invokedClass != null) { method = null; try { method = invokedClass.getDeclaredMethod(\"iniciarBaremacion\"); } catch (java.lang.SecurityException e) { } catch (java.lang.NoSuchMethodException e) { } if (method != null) { try { method.invoke(null); models.TipoEvaluacion tipoEvaluacion = models.TipoEvaluacion.all().first(); tipoEvaluacion.estado = \"iniciada\"; tipoEvaluacion.save(); controllers.ActivarBaremacionController.log.info((\"Acci\u00f3n Editar de p\u00e1gina: \" + (\"gen/ActivarBaremacion/ActivarBaremacion.html\" + \" , intentada con \u00e9xito, Baremaci\u00f3n Iniciada\"))); } catch (java.lang.Exception e) { } }else { play.Logger.error(\"No existe el M\u00e9todo apropiado para iniciar la Baremacion. El m\u00e9todo debe llamarse 'iniciarBaremacion()'\"); messages.Messages.error(\"No existe el M\u00e9todo apropiado para iniciar la Baremacion. El m\u00e9todo debe llamarse 'iniciarBaremacion()'\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4341/buggy-version/fap.app.controllers.ActivarBaremacionController.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(<nulltype>)"], "Fixed commit": "76d5a725d8f178bb27ef309712f41c2414d65155", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-10-11T06:50:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((to) != (java.lang.Integer.MIN_VALUE)) to -= cbo;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6342/buggy-version/araqne-logstorage.src.main.java.org.araqne.logstorage.engine.BackOffLock.java", "BodyUseAPI": [], "Fixed commit": "ef284857034eb4a2cd39b26072d6ad821cad2211", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-03-04T08:30:16Z"},
{"Line": "=>1413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isDebugEnabled()) { logger.debug(\"#buffer flush bug# minId: {}, readerMaxId: {}\", minId, readerMaxId); logger.debug(\"#buffer flush bug# maxId: {}, onlineMinId: {}\", maxId, flushedMaxId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6342/buggy-version/araqne-logstorage.src.main.java.org.araqne.logstorage.engine.LogStorageEngine.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,long,long)", "org.slf4j.Logger.debug(java.lang.String,long,long)"], "Fixed commit": "ef284857034eb4a2cd39b26072d6ad821cad2211", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-03-04T08:30:16Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ichi2.libanki.sync.BasicHttpSyncer.req(java.lang.String,java.io.FileInputStream,int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resp == null) { data.success = false; data.data = new java.lang.Object[]{ \"error when uploading\" }; return data; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5070/buggy-version/src.com.ichi2.async.Connection.java", "BodyUseAPI": [], "Fixed commit": "505373c0be0b024e39055716da54e3ee66a07bb0", "Url": "https://api.github.com/repos/iniju/Anki-Android", "Date": "2012-07-14T10:42:51Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (output != null) { output.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/198/buggy-version/src.Main.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "958603d46eb1beeb928ff4a906d386bbc0e106a7", "Url": "https://api.github.com/repos/dcgaines/JavaRFID", "Date": "2017-01-07T00:37:48Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (colorBarLayer) { view.setColorBarParamGroup(colorBarParamGroup); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8506/buggy-version/beam-visat-rcp.src.main.java.org.esa.beam.visat.actions.ExportLegendImageAction.java", "BodyUseAPI": [], "Fixed commit": "d0035df4fea4df149a150298de49775aa93a77a4", "Url": "https://api.github.com/repos/seadas/beam", "Date": "2014-08-08T16:46:50Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (genres != null) { android.util.Log.i(Constants.APP_NAME, genres); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1365/buggy-version/app.src.main.java.com.franktan.popularmovies.ui.fragments.MovieGridAdapter.java", "BodyUseAPI": ["android.util.Log.i(Constants.APP_NAME,java.lang.String)"], "Fixed commit": "8a64ae436798a83ca82e53a5d24db01935b2248c", "Url": "https://api.github.com/repos/frank-tan/Popular-Movies", "Date": "2015-09-24T15:19:20Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (prefix.equals(\"\")) { objectListing = aliyunOssService.listChildren(currentBucket.getBucket(), prefix); }else { objectListing = aliyunOssService.list(currentBucket.getBucket(), prefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/60/buggy-version/src.main.java.org.mvnsearch.ali.oss.spring.shell.commands.OssOperationCommands.java", "BodyUseAPI": ["org.mvnsearch.ali.oss.spring.services.AliyunOssService.listChildren(currentBucket.getBucket(),java.lang.String)", "org.mvnsearch.ali.oss.spring.services.AliyunOssService.list(currentBucket.getBucket(),java.lang.String)"], "Fixed commit": "be8a9a9129769baa6d78cf4351668277592fb527", "Url": "https://api.github.com/repos/linux-china/ali-oss-java-cli", "Date": "2012-08-26T06:06:57Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getPackage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (packageDeclaration != null) { javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters adapters = packageDeclaration.getAnnotation(javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters.class); if (adapters != null) { for (javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter candidate : adapters.value()) { if ((candidate != null) && (candidate.type().equals(m.getGenericReturnType()))) { adapter = candidate; break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2164/buggy-version/rt.databinding.jaxb.src.main.java.org.apache.cxf.jaxb.Utils.java", "BodyUseAPI": ["java.lang.Package.getAnnotation(java.lang.Class)"], "Fixed commit": "7ca19f15777c0e8664af40e61453e7f652d0661a", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-09-25T12:09:34Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hquery.getSql().toUpperCase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (hql.replaceAll(\"\\r\\n\", \"\").trim().startsWith(\"FROM\")) { int firstFrom = hql.indexOf(\"FROM\"); hql = hquery.getSql().substring((firstFrom + 4), hql.length()); sql.append(\"SELECT COUNT(*) FROM \").append(hql); }else if (hql.replaceAll(\"\\r\\n\", \"\").trim().startsWith(\"SELECT\")) { int firstSelect = hql.indexOf(\"SELECT\"); int firstFrom = hql.indexOf(\"FROM\"); java.lang.String countClause = hquery.getSql().substring((firstSelect + 6), firstFrom); java.lang.String fromField = hquery.getSql().substring((firstFrom + 4), hql.length()); sql.append(\"SELECT COUNT(\").append(countClause.trim()).append(\") FROM \").append(fromField); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2571/buggy-version/hibatis.src.main.java.org.hibatis.db.HbFactoryImpl.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.trim()", "hquery.getSql().substring(int,int)", "hquery.getSql().substring(int,int)"], "Fixed commit": "3186788c0b2582eff48e8ab22eb93cce70bc3cd3", "Url": "https://api.github.com/repos/anleapat/hibatis", "Date": "2017-03-27T09:08:03Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.username) != null) { java.lang.String username = (this.username.substring(0, 1).toUpperCase()) + (this.username.substring(1)); headerViewHolder.txtUsername.setText(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5894/buggy-version/app.src.main.java.com.clothapp.profile.adapters.ProfileInfoAdapter.java", "BodyUseAPI": [], "Fixed commit": "4eb5342377a815957e1ee47ec4b870ccec823eef", "Url": "https://api.github.com/repos/ClothAppProject/ClothAppAndroid", "Date": "2016-06-03T17:20:35Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.event.ActionEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(source instanceof com.shyslav.sample.Button)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3773/buggy-version/src.com.shyslav.sample.Controller.java", "BodyUseAPI": [], "Fixed commit": "1909dbf6aafd2c357be5a1058067a61fcae693a9", "Url": "https://api.github.com/repos/shyslav/JavaFX_AdressBook", "Date": "2016-02-28T10:00:40Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mil.nga.giat.mage.sdk.datastore.observation.Observation.getImportant()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (oldImportant != null) { important.setId(oldImportant.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/625/buggy-version/sdk.src.main.java.mil.nga.giat.mage.sdk.datastore.observation.ObservationHelper.java", "BodyUseAPI": ["mil.nga.giat.mage.sdk.datastore.observation.ObservationImportant.setId(oldImportant.getId())", "mil.nga.giat.mage.sdk.datastore.observation.ObservationImportant.getId()"], "Fixed commit": "f7b7c676cec6e11abf91b82222ebd87e06efb5d5", "Url": "https://api.github.com/repos/ngageoint/mage-android-sdk", "Date": "2017-07-13T15:42:04Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leaderOfMyGroup) != null) { if ((leaderOfMyGroup.equals(Application.GUI.userName)) || ((myGroupName) != null)) { javax.swing.JOptionPane.showMessageDialog(frame, \"Can't create new group when already in a group, disconnect first.\"); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4122/buggy-version/src.Application.GUI.java", "BodyUseAPI": [], "Fixed commit": "a8686baecbd479a75886d323f92661dbea5577e5", "Url": "https://api.github.com/repos/tuanlebk01/DSProject", "Date": "2015-10-28T10:27:23Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (group != null) { java.lang.System.out.println(group); if (group.endsWith(\"<---\")) { java.lang.String tmp = group.substring(0, ((group.length()) - 5)); if (myGroupName.equals(tmp)) { javax.swing.JOptionPane.showMessageDialog(frame, \"Can't join your own group.\"); return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4122/buggy-version/src.Application.GUI.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.substring(int,int)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "a8686baecbd479a75886d323f92661dbea5577e5", "Url": "https://api.github.com/repos/tuanlebk01/DSProject", "Date": "2015-10-28T10:27:23Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myGroupName) != null) { java.util.ArrayList<Communication.TextMessage> queue = client.getMessagesInQueue(); for (int i = 0; i < (queue.size()); i++) { Application.GUI.chatArea.append(((\"Message in queue: \" + (queue.get(i).getSeqNr())) + \"\\n\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4122/buggy-version/src.Application.GUI.java", "BodyUseAPI": [], "Fixed commit": "a8686baecbd479a75886d323f92661dbea5577e5", "Url": "https://api.github.com/repos/tuanlebk01/DSProject", "Date": "2015-10-28T10:27:23Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((source.getSelectedValue().toString()) != null) { group = source.getSelectedValue().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4122/buggy-version/src.Application.GUI.java", "BodyUseAPI": ["javax.swing.JList.getSelectedValue()", "java.lang.Object.toString()"], "Fixed commit": "a8686baecbd479a75886d323f92661dbea5577e5", "Url": "https://api.github.com/repos/tuanlebk01/DSProject", "Date": "2015-10-28T10:27:23Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connectButton.getText().equals(\"Connect\")) { javax.swing.JOptionPane.showMessageDialog(frame, \"You need to connect first.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4122/buggy-version/src.Application.GUI.java", "BodyUseAPI": [], "Fixed commit": "a8686baecbd479a75886d323f92661dbea5577e5", "Url": "https://api.github.com/repos/tuanlebk01/DSProject", "Date": "2015-10-28T10:27:23Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connectButton.getText().equals(\"Disconnect\")) { if (cbLog.isSelected()) { client.setOrdered(true); }else { client.setOrdered(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4122/buggy-version/src.Application.GUI.java", "BodyUseAPI": [], "Fixed commit": "a8686baecbd479a75886d323f92661dbea5577e5", "Url": "https://api.github.com/repos/tuanlebk01/DSProject", "Date": "2015-10-28T10:27:23Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((writeBuffer) == null) { writeBuffer = io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel.EMPTY_BYTE_BUFFER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5366/buggy-version/core.src.main.java.io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel.java", "BodyUseAPI": [], "Fixed commit": "cea721e474e649b18b90f45ddf0bcea81b9256aa", "Url": "https://api.github.com/repos/stuartwdouglas/undertow", "Date": "2015-09-02T02:59:25Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.configuration.XMLConfiguration.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (filterDir != null) { job.getConfiguration().set(PairFilter.FILTER_DIR, filterDir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2680/buggy-version/src.main.java.org.knoesis.semmed.concept.Driver.java", "BodyUseAPI": ["job.getConfiguration().set(PairFilter.FILTER_DIR,java.lang.String)"], "Fixed commit": "14de3e10f9f0ba1c049069b8075fd42ac95bb9d2", "Url": "https://api.github.com/repos/shreyanshbhatt/semmed-concept-pair-generator", "Date": "2014-02-25T20:26:22Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wildfly.extension.undertow.filters.ModClusterService.getModCluster()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (modCluster == null) { return java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/504/buggy-version/undertow.src.main.java.org.wildfly.extension.undertow.filters.ModClusterResource.java", "BodyUseAPI": [], "Fixed commit": "fe52f6691fc5d7bf518ad62abed766ba58166229", "Url": "https://api.github.com/repos/stuartwdouglas/wildfly", "Date": "2015-08-11T01:48:11Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.isClosed()) { org.eclipse.moquette.spi.impl.ProtocolProcessor.LOG.warn(\"channel was closed. client <{}>\", msg.getClientID()); session.close(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6234/buggy-version/broker.src.main.java.org.eclipse.moquette.spi.impl.ProtocolProcessor.java", "BodyUseAPI": ["org.eclipse.moquette.server.ServerChannel.close(boolean)"], "Fixed commit": "8d34d9c020edcf69a393d4d87001f65381ce1581", "Url": "https://api.github.com/repos/runafter/moquette", "Date": "2015-09-21T12:24:34Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.equalsIgnoreCase(\"!addautoreply\")) && (isMod(sender))) { autoReply(message); }else if (message.equalsIgnoreCase(\"!raffle \")) { message = message.substring(message.indexOf(\" \")); raffle(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5533/buggy-version/src.me.jewsofhazzard.pcmrbot.IRCBot.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "me.jewsofhazzard.pcmrbot.IRCBot.autoReply(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "17d4ed75a3cfaf2b05689c885e5629d9a83d2c5f", "Url": "https://api.github.com/repos/HazardDev/PCMRBot", "Date": "2015-02-20T04:38:44Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["field.getOrderableField().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"Assignee\".equals(fieldName)) { logger.debug(msg); }else { logger.error(msg); settingService.addHubError(msg, \"addHubFieldConfigurationToJira\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8934/buggy-version/src.main.java.com.blackducksoftware.integration.jira.task.setup.HubFieldConfigurationSetup.java", "BodyUseAPI": [], "Fixed commit": "bd0f174cbeb4064a1789fb6974ff79d11dab19c6", "Url": "https://api.github.com/repos/blackducksoftware/hub-jira", "Date": "2017-06-01T20:48:53Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.icodeit.bookmarks.model.UserRepository.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (user != null) { return user.getFavoriteFeeds(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/9250/buggy-version/src.main.java.org.icodeit.bookmarks.service.UserService.java", "BodyUseAPI": ["org.icodeit.bookmarks.model.User.getFavoriteFeeds()"], "Fixed commit": "0304f0ca042fcd3363e09ef7439a361c69a86be6", "Url": "https://api.github.com/repos/abruzzi/bookmarks-server", "Date": "2016-01-09T09:21:37Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["renderRequest.getPortletSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (panelNb == null) { panelNb = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5512/buggy-version/gatling-liferay-portlet.src.main.java.com.excilys.liferay.gatling.controller.ViewController.java", "BodyUseAPI": [], "Fixed commit": "3933971e17ef25c8e431d1fe65b82557b0b346db", "Url": "https://api.github.com/repos/gatling/gatling-liferay", "Date": "2016-09-14T12:45:29Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pos == 0) || (!(del.isLoop()))) mutations.put(vertex, del);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/908/buggy-version/titan-core.src.main.java.com.thinkaurelius.titan.graphdb.database.StandardTitanGraph.java", "BodyUseAPI": ["com.google.common.collect.ListMultimap<com.thinkaurelius.titan.graphdb.internal.InternalVertex, com.thinkaurelius.titan.graphdb.internal.InternalRelation>.put(com.thinkaurelius.titan.graphdb.internal.InternalVertex,com.thinkaurelius.titan.graphdb.internal.InternalRelation)"], "Fixed commit": "3fedaf2cdff20618a3b06951f72e0da59204c6de", "Url": "https://api.github.com/repos/thinkaurelius/titan", "Date": "2013-09-28T04:10:30Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i > 0) && (relation.isLoop())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/908/buggy-version/titan-core.src.main.java.com.thinkaurelius.titan.graphdb.transaction.StandardTitanTx.java", "BodyUseAPI": [], "Fixed commit": "3fedaf2cdff20618a3b06951f72e0da59204c6de", "Url": "https://api.github.com/repos/thinkaurelius/titan", "Date": "2013-09-28T04:10:30Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i > 0) && (r.isLoop())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/908/buggy-version/titan-core.src.main.java.com.thinkaurelius.titan.graphdb.transaction.StandardTitanTx.java", "BodyUseAPI": [], "Fixed commit": "3fedaf2cdff20618a3b06951f72e0da59204c6de", "Url": "https://api.github.com/repos/thinkaurelius/titan", "Date": "2013-09-28T04:10:30Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m_viewModel.getCurrentTab().equals(StringUtility.TAB_GUIDANCE)) { m_viewModel.notifyGuidanceChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/428/buggy-version/src.com.athena.asm.HomeActivity.java", "BodyUseAPI": ["com.athena.asm.viewmodel.HomeViewModel.notifyGuidanceChanged()"], "Fixed commit": "97c4072e3acfca0237f9a12d80e29b2c61dffe20", "Url": "https://api.github.com/repos/yfli/aSM-clone", "Date": "2012-11-16T09:18:32Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textToSpeech) != null) { textToSpeech.stop(); textToSpeech.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2060/buggy-version/EDUkid.src.bu.edu.cs673.edukid.learn.WordFragment.java", "BodyUseAPI": [], "Fixed commit": "4506a0be86bd1c6c94b7c46d4e445abe3f941849", "Url": "https://api.github.com/repos/sandyimu/EDUkid", "Date": "2013-12-06T01:43:56Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response.isCommitted()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2190/buggy-version/obase-webc.src.main.java.com.github.obase.webc.support.BaseServletMethodProcessor.java", "BodyUseAPI": [], "Fixed commit": "910d3b58c867b8cb0ed041370a8a261b07193553", "Url": "https://api.github.com/repos/obase/java", "Date": "2017-12-14T09:12:06Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((objectChangedListener) != null) objectChangedListener.onChange(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5138/buggy-version/app.src.main.java.com.kareem.mynursery.model.RealTimeObject.java", "BodyUseAPI": [], "Fixed commit": "0032a7d1f607011ccea9a78a316fca37027b806e", "Url": "https://api.github.com/repos/kareem2048/MyNursery", "Date": "2017-09-23T21:06:07Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getInt(cursor.getColumnIndex(DownloadManager.COLUMN_STATUS))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (columnStatus == (android.app.DownloadManager.STATUS_SUCCESSFUL)) { android.content.Intent successLoaded = new android.content.Intent(org.stepic.droid.base.MainApplication.getAppContext(), org.stepic.droid.receivers.DownloadCompleteReceiver.class); successLoaded.putExtra(DownloadManager.EXTRA_DOWNLOAD_ID, ((long) (downloadId))); org.stepic.droid.base.MainApplication.getAppContext().sendBroadcast(successLoaded); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1684/buggy-version/app.src.main.java.org.stepic.droid.view.fragments.DownloadsFragment.java", "BodyUseAPI": [], "Fixed commit": "9c76e32c17db276bbd7b7e521d4111cbff794dd6", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2016-05-11T14:48:03Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (info.getClassName().equals(\"android.widget.Button\")) { boolean click = info.performAction(AccessibilityNodeInfo.ACTION_CLICK); if (click) { new java.lang.Thread(new java.lang.Runnable() { @java.lang.Override public void run() { try { java.lang.Thread.sleep(500); com.fei.refine.KillProcessService.this.performGlobalAction(AccessibilityService.GLOBAL_ACTION_BACK); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } } }).start(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/89/buggy-version/app.src.main.java.com.fei.refine.KillProcessService.java", "BodyUseAPI": ["android.view.accessibility.AccessibilityNodeInfo.performAction(AccessibilityNodeInfo.ACTION_CLICK)"], "Fixed commit": "c1413e071d7aff7f973e3f951209c43872efd40a", "Url": "https://api.github.com/repos/FreedomFei/Refine", "Date": "2017-04-27T09:32:12Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.swandev.swangame.EventCallback>.get(event.getEvent())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (callback != null) { callback.onEvent(event.getAck(), event.getArguments()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4841/buggy-version/swangame.src.com.swandev.swangame.EventEmitter.java", "BodyUseAPI": ["com.swandev.swangame.EventCallback.onEvent(event.getAck(),event.getArguments())"], "Fixed commit": "fd553fbd455a0cf9b482a28e1d5be1d2a0e9c0f6", "Url": "https://api.github.com/repos/newmanne/swanboxlibgdx", "Date": "2014-02-20T00:16:55Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(currentGame.has(\"players\"))) { holder.joinOrPlay.setVisibility(View.INVISIBLE); return convertView; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1692/buggy-version/src.com.reclick.reclick.GamesAdapter.java", "BodyUseAPI": [], "Fixed commit": "685785f0ca943817359057c219b84495f778192c", "Url": "https://api.github.com/repos/yanivgal/reClick", "Date": "2014-07-03T07:44:43Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (filePath == null) { android.widget.Toast.makeText(this, \"Please select an image with the Photos application.\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6426/buggy-version/app.src.main.java.com.example.baard.EditHabitEventActivity.java", "BodyUseAPI": [], "Fixed commit": "ab6fabe0772e23dc4d1b37d11eee62a53ff1ab20", "Url": "https://api.github.com/repos/CMPUT301F17T02/BAARD", "Date": "2017-12-01T08:01:45Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["deploymentConfiguration.getProviders().getAws()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (awsProvider.isEnabled()) { profile.appendContents((\"default.bake.account: \" + (awsProvider.getPrimaryAccount()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4022/buggy-version/halyard-deploy.src.main.java.com.netflix.spinnaker.halyard.deploy.spinnaker.v1.profile.OrcaProfileFactory.java", "BodyUseAPI": ["com.netflix.spinnaker.halyard.deploy.spinnaker.v1.profile.Profile.appendContents((\"default.bake.account: \" + (awsProvider.getPrimaryAccount())))", "com.netflix.spinnaker.halyard.config.model.v1.providers.aws.AwsProvider.getPrimaryAccount()"], "Fixed commit": "d9c2c25eb902a4f1a469a93566a276c3c4aa28d1", "Url": "https://api.github.com/repos/emjburns/halyard", "Date": "2017-06-05T21:40:13Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chapter.getPageCount()) == 0) indexItem.addProperty(\"chapterNo\", chapterNo); else indexItem.addProperty(\"chapterNo\", (chapterNo++));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4066/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java", "BodyUseAPI": [], "Fixed commit": "79743df5ceb28f04be91aae12611ba3fed89f865", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-07-25T09:48:12Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marker_id) != null) { for (java.util.Map.Entry<com.google.android.gms.maps.model.Marker, java.lang.String> entry : marker_id.entrySet()) { try { marker_id.remove(entry.getKey()); marker_title.remove(entry.getKey()); marker_content.remove(entry.getKey()); entry.getKey().remove(); } catch (java.lang.Exception e) { continue; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4793/buggy-version/app.src.main.java.tw.daychen.app.maprunner.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "830718d49a8dfc7311488489eeb53b3a396e3d1b", "Url": "https://api.github.com/repos/yenchenLiu/MapRunner", "Date": "2017-06-20T02:06:01Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((word.size()) == 1) { return new java.lang.StringBuffer().append(word.get(0)).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3864/buggy-version/src.main.java.com.wgdesign.sentencemodification.SentenceManipulationHelper.java", "BodyUseAPI": ["java.util.List<java.lang.Character>.get(int)", "java.lang.StringBuffer.append(java.lang.Character)", "java.lang.StringBuffer.toString()"], "Fixed commit": "f63c956e4a80441a25fb98b5b53fb458c82c2956", "Url": "https://api.github.com/repos/care4truth/sentencemodification", "Date": "2017-12-02T00:05:59Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offeredRides.Data.size()) < (com.yatrashare.utils.Constants.PAGE_SIZE)) { mIsLastPage = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4105/buggy-version/app.src.main.java.com.yatrashare.fragments.OfferedRidesFragment.java", "BodyUseAPI": [], "Fixed commit": "82ef42dedf0fc439a6cfc9e94ebadf81dd53d1d9", "Url": "https://api.github.com/repos/phani0459/YatraShare", "Date": "2016-05-16T16:30:25Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(other.weaponIsBlunt())) { one.loseHealth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3848/buggy-version/app.src.main.java.cavemenarena.undevined.com.cavemenarena.classes.Cave.java", "BodyUseAPI": [], "Fixed commit": "3301b2668e2acac34882f98086db773ac798c99b", "Url": "https://api.github.com/repos/redevined/CavemenArena-Android-by-undevined", "Date": "2015-03-18T21:59:31Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((detalle.getPrecioFlete()) != null) && (this.tipoFlete.getValor())) { this.totalCotizacion += ((double) (detalle.getPrecioFlete())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2648/buggy-version/src.main.java.com.okiimport.app.mvvm.controladores.CotizacionesProveedorNacionalViewModel.java", "BodyUseAPI": ["com.okiimport.app.model.DetalleCotizacion.getPrecioFlete()"], "Fixed commit": "765fbb73195758868e10f79d423bf6e6dc062b0a", "Url": "https://api.github.com/repos/ubicapartes/ubicapartes-front", "Date": "2017-03-08T02:52:47Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (signature.endsWith(\"=\")) { signature = signature.substring(0, ((signature.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8214/buggy-version/src.main.java.com.wordnik.swagger.runtime.common.GroupDocsUrlSigningSecurityHandler.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "cd6f5c7c01867808b0331fdded7aed522699c4fc", "Url": "https://api.github.com/repos/zhaidarbek/swagger-codegen", "Date": "2012-06-12T06:36:41Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) { indicatorShape.setBackground(unselectedSlideIndicator); }else { indicatorShape.setBackgroundDrawable(unselectedSlideIndicator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/762/buggy-version/bannerslider.src.main.java.ss.com.bannerslider.views.SlideIndicatorsGroup.java", "BodyUseAPI": [], "Fixed commit": "047349047d72e5237075a0d6a907a72b3fe08f2e", "Url": "https://api.github.com/repos/carvaldo/Banner-Slider", "Date": "2017-02-14T07:56:54Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent.getCount()) == 1) { nextButton.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2228/buggy-version/app.src.main.java.controller.com.palshyn.xander.mediaplayer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9f328d073c8119f6b27c3c170b016cf06f49fe68", "Url": "https://api.github.com/repos/Palshyn/MediaPlayer", "Date": "2015-05-31T16:54:59Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.eveningoutpost.dexdrip.Services.XDripViewer.isxDripViewerMode(context)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2429/buggy-version/app.src.main.java.com.eveningoutpost.dexdrip.UtilityModels.CollectionServiceStarter.java", "BodyUseAPI": [], "Fixed commit": "445210ae65b7c5fd3f246c5248cbf8d7cd404caf", "Url": "https://api.github.com/repos/StephenBlackWasAlreadyTaken/xDrip-Experimental", "Date": "2016-03-29T14:50:05Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUserIsRegistered(credentials.username)) { throw new java.lang.Exception(\"User is already registered. Choose another name.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4725/buggy-version/Server.src.Server.ServicesImplementation.AuthenticationImpl.java", "BodyUseAPI": [], "Fixed commit": "ec8c3a058a853598278cc362bb7b8f3414cd87b5", "Url": "https://api.github.com/repos/MateuszWojewodka/MessengerProject", "Date": "2017-12-30T17:28:16Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.LOLLIPOP)) { fab.bringToFront(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3678/buggy-version/app.src.main.java.com.piggeh.palmettoscholars.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "da921bad16d3117a733a4864e2cf55b63a893ab5", "Url": "https://api.github.com/repos/piggehperson/PSASite", "Date": "2016-09-15T14:47:07Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetng.modules.requirementmanager.list.models.FilterType.toType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((type == (edu.wpi.cs.wpisuitetng.modules.requirementmanager.list.models.FilterType.toType(\"Name\"))) || (type == (edu.wpi.cs.wpisuitetng.modules.requirementmanager.list.models.FilterType.toType(\"Description\")))) filter.setValue(this.getFilterValue().getText()); else filter.setValue(this.getFilterNumValue().getText());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5169/buggy-version/RequirementManager.src.edu.wpi.cs.wpisuitetng.modules.requirementmanager.list.views.FilterBuilderPanel.java", "BodyUseAPI": [], "Fixed commit": "b5be5d118a3426dc5d673123970516fe8a9687b2", "Url": "https://api.github.com/repos/gsisko/wpi-suite-tng", "Date": "2013-03-31T00:30:42Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3223/buggy-version/Assignment2-Comp410.src.BST_A2.BST.java", "BodyUseAPI": [], "Fixed commit": "4a75e0e7712de123a0d2aab7dd1aac905530d615", "Url": "https://api.github.com/repos/cpoly13/Comp-410", "Date": "2017-02-20T04:40:55Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.compareTo(data)) > 0) { if ((right) == null) { return false; } return right.removeNode(s); }else { if ((left) == null) { return false; } return left.removeNode(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3223/buggy-version/Assignment2-Comp410.src.BST_A2.BST_Node.java", "BodyUseAPI": ["BST_A2.BST_Node.removeNode(java.lang.String)", "BST_A2.BST_Node.removeNode(java.lang.String)"], "Fixed commit": "4a75e0e7712de123a0d2aab7dd1aac905530d615", "Url": "https://api.github.com/repos/cpoly13/Comp-410", "Date": "2017-02-20T04:40:55Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (client == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/327/buggy-version/uia.comm.src.main.java.uia.comm.VirtualSocketClient.java", "BodyUseAPI": [], "Fixed commit": "2b58a88b5f27574229be885f7904953ad72f4502", "Url": "https://api.github.com/repos/gazer2kanlin/uia.comm4j", "Date": "2015-09-17T11:52:02Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.activeClient) != null) { this.activeClient.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/327/buggy-version/uia.comm.src.main.java.uia.comm.VirtualSocketClient.java", "BodyUseAPI": [], "Fixed commit": "2b58a88b5f27574229be885f7904953ad72f4502", "Url": "https://api.github.com/repos/gazer2kanlin/uia.comm4j", "Date": "2015-09-17T11:52:02Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.queues.size()) < 2) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/327/buggy-version/uia.comm.src.main.java.uia.comm.VirtualSocketClient.java", "BodyUseAPI": [], "Fixed commit": "2b58a88b5f27574229be885f7904953ad72f4502", "Url": "https://api.github.com/repos/gazer2kanlin/uia.comm4j", "Date": "2015-09-17T11:52:02Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eg.edu.guc.dbms.utils.Properties.getIndexedColumns(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((hMapColNameValue.get(indexedColumns.get(i))) != null) { adoptor.delete(results.get(j).get(indexedColumns.get(i)), pointers.get(j)); adoptor.insert(indexedColumns.get(i), hMapColNameValue.get(indexedColumns.get(i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2888/buggy-version/src.eg.edu.guc.dbms.commands.UpdateCommand.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "eg.edu.guc.dbms.utils.btrees.BTreeAdopter.insert(java.lang.String,java.lang.String)", "eg.edu.guc.dbms.utils.btrees.BTreeAdopter.delete(java.lang.String,java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "838c14dc85a4443642752264c0be59a0b2513ccf", "Url": "https://api.github.com/repos/medo/RDBMS-T2", "Date": "2014-06-07T18:05:21Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (indexOfUnderScore == (-1)) { urlLocale = locale; }else { urlLocale = locale.substring(0, indexOfUnderScore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2963/buggy-version/src.main.java.com.recruiters.web.controller.Dashboard.java", "BodyUseAPI": ["java.lang.String.substring(int,java.lang.Integer)"], "Fixed commit": "64ea9b56163f877105fe672a2df57212d405e8f7", "Url": "https://api.github.com/repos/7bits/jade-fff", "Date": "2014-01-27T06:46:33Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(urlLocale.equals(\"ru\"))) && (!(urlLocale.equals(\"en\")))) { urlLocale = \"ru\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2963/buggy-version/src.main.java.com.recruiters.web.controller.Dashboard.java", "BodyUseAPI": [], "Fixed commit": "64ea9b56163f877105fe672a2df57212d405e8f7", "Url": "https://api.github.com/repos/7bits/jade-fff", "Date": "2014-01-27T06:46:33Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getItem().getType()) == (org.bukkit.Material.COOKED_BEEF)) { event.getPlayer().setHealth(java.lang.Math.min(((event.getPlayer().getHealth()) + 8.0), event.getPlayer().getMaxHealth())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8980/buggy-version/DPZones.src.io.github.teamsweq.dpzones.classes.Archer.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().setHealth(int)", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().getMaxHealth()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().getHealth()", "java.lang.Math.min(((event.getPlayer().getHealth()) + 8.0),event.getPlayer().getMaxHealth())"], "Fixed commit": "032aa03e3cec92f82938b6cda390693bfd1c5d04", "Url": "https://api.github.com/repos/TeamSweq/DPZones", "Date": "2014-11-26T22:58:44Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getItem().getType()) == (org.bukkit.Material.COOKED_BEEF)) { event.getPlayer().setHealth(java.lang.Math.min(((event.getPlayer().getHealth()) + 8.0), event.getPlayer().getMaxHealth())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8980/buggy-version/DPZones.src.io.github.teamsweq.dpzones.classes.Soldier.java", "BodyUseAPI": ["event.getPlayer().getHealth()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().getMaxHealth()", "event.getPlayer().setHealth(int)", "java.lang.Math.min(((event.getPlayer().getHealth()) + 8.0),event.getPlayer().getMaxHealth())"], "Fixed commit": "032aa03e3cec92f82938b6cda390693bfd1c5d04", "Url": "https://api.github.com/repos/TeamSweq/DPZones", "Date": "2014-11-26T22:58:44Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getItem().getType()) == (org.bukkit.Material.COOKED_BEEF)) { event.getPlayer().setHealth(java.lang.Math.min(((event.getPlayer().getHealth()) + 8.0), event.getPlayer().getMaxHealth())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8980/buggy-version/DPZones.src.io.github.teamsweq.dpzones.classes.Medic.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().setHealth(int)", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().getHealth()", "event.getPlayer().getMaxHealth()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "java.lang.Math.min(((event.getPlayer().getHealth()) + 8.0),event.getPlayer().getMaxHealth())"], "Fixed commit": "032aa03e3cec92f82938b6cda390693bfd1c5d04", "Url": "https://api.github.com/repos/TeamSweq/DPZones", "Date": "2014-11-26T22:58:44Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getItem().getType()) == (org.bukkit.Material.COOKED_BEEF)) { event.getPlayer().setHealth(java.lang.Math.min(((event.getPlayer().getHealth()) + 8.0), event.getPlayer().getMaxHealth())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8980/buggy-version/DPZones.src.io.github.teamsweq.dpzones.classes.Heavy.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().setHealth(int)", "java.lang.Math.min(((event.getPlayer().getHealth()) + 8.0),event.getPlayer().getMaxHealth())", "event.getPlayer().getMaxHealth()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().getHealth()"], "Fixed commit": "032aa03e3cec92f82938b6cda390693bfd1c5d04", "Url": "https://api.github.com/repos/TeamSweq/DPZones", "Date": "2014-11-26T22:58:44Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sksamuel.jqm4gwt.form.JQMForm.getFirstErrorOffset()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (y == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/974/buggy-version/library.src.main.java.com.sksamuel.jqm4gwt.form.JQMForm.java", "BodyUseAPI": [], "Fixed commit": "84939a130195783cb649f7d742871eb2ee7dac7b", "Url": "https://api.github.com/repos/jqm4gwt/jqm4gwt", "Date": "2016-08-25T04:57:52Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y < 0) y = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/974/buggy-version/library.src.main.java.com.sksamuel.jqm4gwt.form.JQMForm.java", "BodyUseAPI": [], "Fixed commit": "84939a130195783cb649f7d742871eb2ee7dac7b", "Url": "https://api.github.com/repos/jqm4gwt/jqm4gwt", "Date": "2016-08-25T04:57:52Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.exists()) f.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/838/buggy-version/src.screenieup.Updater.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "27dfed68fb9e24cd72480f4e1e29441d67fc0b08", "Url": "https://api.github.com/repos/danmun/ScreenieUp", "Date": "2015-07-15T01:58:43Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getConfiguration().get(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ser.equals(\"bytearr\")) { serializer = new com.louddoor.hbase_streaming.ByteSerializer(proc.getOutputStream()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1239/buggy-version/src.main.java.com.louddoor.hbase_streaming.StreamingJob.java", "BodyUseAPI": [], "Fixed commit": "22a3f8868aa2efd0a847d7b0f8c7b946a1f83592", "Url": "https://api.github.com/repos/srnice/hbase-streaming", "Date": "2013-09-26T09:20:16Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getConfiguration().get(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ser.equals(\"bytearr\")) { serializer = new com.louddoor.hbase_streaming.ByteSerializer(proc.getOutputStream()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1239/buggy-version/src.main.java.com.louddoor.hbase_streaming.StreamingJob.java", "BodyUseAPI": [], "Fixed commit": "22a3f8868aa2efd0a847d7b0f8c7b946a1f83592", "Url": "https://api.github.com/repos/srnice/hbase-streaming", "Date": "2013-09-26T09:20:16Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.autoClean) { this.cleanTask(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2217/buggy-version/Mario.src.main.java.com.mario.schedule.distributed.impl.HzDistributedRunnable.java", "BodyUseAPI": [], "Fixed commit": "069574182cfe7a0cdf3c09aedaa50d3abed5e0ca", "Url": "https://api.github.com/repos/bachden/mario3", "Date": "2017-08-24T12:08:20Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.rest.constraint.Result.getResults()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((results.size()) > 1) && (!(src.isCollectionResource()))) { throw new java.lang.IllegalStateException((((src.getClass().getSimpleName()) + \" is not a collection resource, but result set has size \") + (results.size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5050/buggy-version/structr.structr-core.src.main.java.org.structr.rest.adapter.ResultGSONAdapter.java", "BodyUseAPI": ["src.getClass().getSimpleName()", "org.structr.rest.constraint.Result.getClass()", "java.util.List<? extends org.structr.core.GraphObject>.size()"], "Fixed commit": "d06d5748989c5ebceb31ae03e63d78ee2b2214fc", "Url": "https://api.github.com/repos/structr/structr", "Date": "2011-11-10T13:26:35Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((container.sequenceId) == (-2)) { refs = null; prevSeqId = -2; }else if (((prevSeqId) < 0) || ((prevSeqId) != (container.sequenceId))) { net.sf.samtools.SAMSequenceRecord sequence = cramHeader.samFileHeader.getSequence(container.sequenceId); refs = referenceSource.getReferenceBases(sequence, true); prevSeqId = container.sequenceId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3757/buggy-version/src.main.java.net.sf.samtools.SAMIterator.java", "BodyUseAPI": ["cramHeader.samFileHeader.getSequence(container.sequenceId)"], "Fixed commit": "b9f347f33a691ccd0c2e6ddfe8e56d76432ae562", "Url": "https://api.github.com/repos/enasequence/cramtools", "Date": "2014-02-25T15:08:25Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.util.Objects.equals(spinner5.getSelectedItem().toString(), \"---\"))) { if (lab6.isChecked()) { ora6 = (spinner5.getSelectedItem().toString()) + \" lab.\"; }else { ora6 = spinner5.getSelectedItem().toString(); } mydatabase.execSQL(((\"INSERT INTO Orario(Giorno,Ora,Materia) VALUES('Gioved\u00ec',6,'\" + ora6) + \"');\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4836/buggy-version/app.src.main.java.nicolaiacovelli.squola.Conf_giovedi.java", "BodyUseAPI": ["spinner5.getSelectedItem().toString()", "spinner5.getSelectedItem().toString()", "android.widget.Spinner.getSelectedItem()", "android.widget.Spinner.getSelectedItem()"], "Fixed commit": "45c52aa46ec3d52cea5b1d7d12060f3353fb7e8b", "Url": "https://api.github.com/repos/nico-iaco/Squola", "Date": "2017-04-11T14:28:48Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasButtons())) { generalCategory.removePreference(findPreference(com.android.settings.hyperion.LockscreenInterface.PREF_LOCKSCREEN_BUTTONS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8859/buggy-version/src.com.android.settings.hyperion.LockscreenInterface.java", "BodyUseAPI": [], "Fixed commit": "1f51b77976cc8bb7577b72d80b34e175428738fc", "Url": "https://api.github.com/repos/HyperionROM/packages_apps_Settings", "Date": "2014-02-08T02:35:42Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.niolex.config.client.ConfigClient.findGroupName(org.apache.niolex.config.bean.ConfigItem)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (groupName != null) { org.apache.niolex.config.client.ConfigClient.updateConfigItem(groupName, item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8326/buggy-version/network-config.config-client.src.main.java.org.apache.niolex.config.client.ConfigClient.java", "BodyUseAPI": ["org.apache.niolex.config.client.ConfigClient.updateConfigItem(java.lang.String,org.apache.niolex.config.bean.ConfigItem)"], "Fixed commit": "f1251d09b91687cd7fb990120c6c0955bddfbc30", "Url": "https://api.github.com/repos/pftx/niolex-network-nio", "Date": "2012-07-16T09:48:11Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(RecomputeResiduals)) { if (index != (-1)) changedValues.add(index); else LxFKnown = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/9125/buggy-version/src.dr.inference.model.LatentFactorModel.java", "BodyUseAPI": [], "Fixed commit": "7732cedde7e7ddd071f596c1fd7c293e4af89169", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2015-07-15T22:12:26Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.getMessage().startsWith(((main.SjBot.pref) + (plugins.Command_Date.cmdName)))) || (msg.getMessage().startsWith((((main.SjBot.pref) + \" \") + (plugins.Command_Date.cmdName))))) { plugins.Command_Date.isFrozen = main.SjBot.getFrozen(); if ((plugins.Command_Date.isFrozen) == false) { bot.sendMessage(msg.getChannel(), (\"The current time is: \" + (new java.util.Date()))); java.lang.System.out.println((\"Ran command \" + (plugins.Command_Date.cmdName))); }else { java.lang.System.out.println(\"Bot is frozen\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6268/buggy-version/bot.src.plugins.Command_Date.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "org.pircbotx.hooks.events.MessageEvent.getChannel()", "plugins.PircBotX.sendMessage(msg.getChannel(),java.lang.String)"], "Fixed commit": "562538c939264e8b9136de7fde97e52902c3b5ef", "Url": "https://api.github.com/repos/Sjele/SjeleBot", "Date": "2013-02-22T19:35:46Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.gamedevbaden.crucified.utils.GameOptions.ENABLE_PHYSICS_DEBUG) { if ((stateManager.getState(com.jme3.bullet.debug.BulletDebugAppState.class)) == null) { stateManager.attach(new com.jme3.bullet.debug.BulletDebugAppState(bulletAppState.getPhysicsSpace())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1899/buggy-version/src.de.gamedevbaden.crucified.appstates.PhysicAppState.java", "BodyUseAPI": [], "Fixed commit": "36b17000204ff856374e11864332a474d9a58c9a", "Url": "https://api.github.com/repos/DomenicDev/Crucified", "Date": "2017-09-27T07:15:59Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.block.BlockBreakEvent.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (block != null) { if (se.crafted.chrisb.ecoCreature.commons.DependencyUtils.hasPermission(player, (\"reward.\" + (block.getType().name())))) { return hasRewardSource(block.getType()); }else { se.crafted.chrisb.ecoCreature.commons.ECLogger.getInstance().debug(this.getClass(), (((\"No reward for \" + (player.getName())) + \" due to lack of permission for \") + (block.getType().name()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6629/buggy-version/src.main.java.se.crafted.chrisb.ecoCreature.settings.MaterialRewardSettings.java", "BodyUseAPI": ["se.crafted.chrisb.ecoCreature.commons.DependencyUtils.hasPermission(org.bukkit.entity.Player,(\"reward.\" + (block.getType().name())))", "se.crafted.chrisb.ecoCreature.commons.ECLogger.getInstance().debug(java.lang.Class<? extends se.crafted.chrisb.ecoCreature.settings.MaterialRewardSettings>,(((\"No reward for \" + (player.getName())) + \" due to lack of permission for \") + (block.getType().name())))", "org.bukkit.block.Block.getType()", "block.getType().name()", "se.crafted.chrisb.ecoCreature.settings.MaterialRewardSettings.hasRewardSource(block.getType())", "org.bukkit.block.Block.getType()", "block.getType().name()", "org.bukkit.block.Block.getType()"], "Fixed commit": "89c43d9e7885e02f202d7804dcadad8deb62620f", "Url": "https://api.github.com/repos/mung3r/ecoCreature", "Date": "2012-10-26T01:06:03Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(impassableRoadIds.contains(r.id))) { impassableRoadIds.add(r.id); impassableRoads.add(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4976/buggy-version/OsmAnd-java.src.net.osmand.router.RoutingConfiguration.java", "BodyUseAPI": ["gnu.trove.set.hash.TLongHashSet.add(r.id)", "java.util.List<net.osmand.binary.RouteDataObject>.add(net.osmand.binary.RouteDataObject)"], "Fixed commit": "7d0916bce6eb3f4b0e73fc090626b54acfc1cb32", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-11-19T12:58:16Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((book.getDateDonation()) != null) { dateDonationCalendar.setTimeInMillis(book.getDateDonation().getTime()); bookDateDonation = ((((java.lang.String.valueOf(dateDonationCalendar.get(java.util.Calendar.DAY_OF_MONTH))) + \"/\") + (java.lang.String.valueOf(dateDonationCalendar.get(java.util.Calendar.MONTH)))) + \"/\") + (java.lang.String.valueOf(dateDonationCalendar.get(java.util.Calendar.YEAR))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4196/buggy-version/app.src.main.java.br.edu.ifce.swappers.swappers.fragments.tabs.books.NearBooksFragment.java", "BodyUseAPI": ["br.edu.ifce.swappers.swappers.model.Book.getDateDonation()", "book.getDateDonation().getTime()", "java.util.Calendar.setTimeInMillis(book.getDateDonation().getTime())"], "Fixed commit": "a03c62611921cff7eb150278558529503bfbe443", "Url": "https://api.github.com/repos/francisceioseph/Swappers", "Date": "2016-03-26T15:43:36Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((book.getDateDonation()) != null) { dateDonationCalendar.setTimeInMillis(book.getDateDonation().getTime()); bookDateDonation = ((((java.lang.String.valueOf(dateDonationCalendar.get(java.util.Calendar.DAY_OF_MONTH))) + \"/\") + (java.lang.String.valueOf(dateDonationCalendar.get(java.util.Calendar.MONTH)))) + \"/\") + (java.lang.String.valueOf(dateDonationCalendar.get(java.util.Calendar.YEAR))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4196/buggy-version/app.src.main.java.br.edu.ifce.swappers.swappers.fragments.tabs.books.RecommendationsFragment.java", "BodyUseAPI": ["java.util.Calendar.setTimeInMillis(book.getDateDonation().getTime())", "book.getDateDonation().getTime()", "br.edu.ifce.swappers.swappers.model.Book.getDateDonation()"], "Fixed commit": "a03c62611921cff7eb150278558529503bfbe443", "Url": "https://api.github.com/repos/francisceioseph/Swappers", "Date": "2016-03-26T15:43:36Z"},
{"Line": "=>739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_linkNumber) < (getLinkNumberLimit())) n.addLink(destNeuron, n.outlinks[i].weight);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7538/buggy-version/src_ANN.ann.SpatialAnn.java", "BodyUseAPI": [], "Fixed commit": "a6d9aefc0e9be78a9f123698a1eedf6f615c22d0", "Url": "https://api.github.com/repos/amitbenb/GA-Spatial_ANN-Project", "Date": "2016-01-28T15:19:15Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.upplication.s3fs.util.S3Utils.toS3FileAttributes(com.upplication.s3fs.util.S3ObjectSummary,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(attrs.isDirectory())) { com.amazonaws.services.s3.AmazonS3 client = s3Path.getFileSystem().getClient(); com.upplication.s3fs.util.AccessControlList acl = client.getObjectAcl(bucketName, key); com.upplication.s3fs.util.Owner owner = acl.getOwner(); userPrincipal = new com.upplication.s3fs.attribute.S3UserPrincipal((((owner.getId()) + \":\") + (owner.getDisplayName()))); permissions = toPosixFilePermissions(acl.getGrantsAsList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6279/buggy-version/src.main.java.com.upplication.s3fs.util.S3Utils.java", "BodyUseAPI": [], "Fixed commit": "cf738bdd923ea583f4b01fd6b7f094b0b81aca94", "Url": "https://api.github.com/repos/sbeimin/Amazon-S3-FileSystem-NIO2", "Date": "2017-02-18T16:17:24Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((xpathmap.length) != 2) { throw new java.lang.IllegalArgumentException(((\"Invalid XPath mapping specified : '\" + xpath) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3414/buggy-version/transform-plugins.src.main.java.co.cask.hydrator.plugin.XMLParser.java", "BodyUseAPI": [], "Fixed commit": "646c6ae37ffcaaff2492b682dc6371eb98bb61d3", "Url": "https://api.github.com/repos/shashankmoghe/hydrator-plugins", "Date": "2017-02-23T05:16:12Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((xpathmap[1]) == null) || (xpathmap[1].trim().isEmpty())) { throw new java.lang.IllegalArgumentException(((\"XPath mapping is missing xpath : '\" + xpath) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3414/buggy-version/transform-plugins.src.main.java.co.cask.hydrator.plugin.XMLParser.java", "BodyUseAPI": [], "Fixed commit": "646c6ae37ffcaaff2492b682dc6371eb98bb61d3", "Url": "https://api.github.com/repos/shashankmoghe/hydrator-plugins", "Date": "2017-02-23T05:16:12Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (data.getClass().equals(java.time.ZonedDateTime.class)) return ('\\'' + (data.toString().substring(0, data.toString().indexOf('T')))) + '\\'';", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2075/buggy-version/src.vt.smt.DB.ORM.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.String.indexOf(char)", "java.lang.Object.toString()", "java.lang.String.substring(int,int)"], "Fixed commit": "094145c3e5a7ff9a99760ab3a8373e28108ea37d", "Url": "https://api.github.com/repos/semitro/labGoodObjectServer", "Date": "2017-06-22T10:39:30Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["snap.forms.internal.DateField.getFieldValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (fieldValue == null) value = \"\"; else if (fieldValue instanceof java.lang.String) value = ((java.lang.String) (fieldValue)); else if (fieldValue instanceof java.util.Date) value = mDateFormatter.format(fieldValue); else if (fieldValue instanceof java.util.Calendar) value = mDateFormatter.format(((java.util.Calendar) (fieldValue)).getTime()); else if (fieldValue instanceof java.time.LocalDate) value = ((java.time.LocalDate) (fieldValue)).format(java.time.format.DateTimeFormatter.ofPattern(mAnnotation.format())); else if (fieldValue instanceof java.time.LocalDateTime) value = ((java.time.LocalDateTime) (fieldValue)).format(java.time.format.DateTimeFormatter.ofPattern(mAnnotation.format())); else if (fieldValue instanceof java.time.ZonedDateTime) value = ((java.time.ZonedDateTime) (fieldValue)).format(java.time.format.DateTimeFormatter.ofPattern(mAnnotation.format())); else throw new snap.SnapException(\"Only field types of String, java.util.Date, LocalDate, LocalDateTime, ZonedDateTime or Calendar are supported\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2712/buggy-version/src.main.java.snap.forms.internal.DateField.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.lang.Object)"], "Fixed commit": "e44c907cbde6676cb8218364812dd5e6d67c85d7", "Url": "https://api.github.com/repos/jaapgeurts/snap", "Date": "2016-08-19T18:11:33Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inputLineLength - offset) <= wrapLength) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8317/buggy-version/src.main.java.org.apache.commons.lang3.text.WordUtils.java", "BodyUseAPI": [], "Fixed commit": "d70b80881a67c9c0ddba5a4a0218ba8ded9e8716", "Url": "https://api.github.com/repos/Andrey-Khobnya/commons-lang", "Date": "2014-04-08T11:06:49Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (end < 10) { java.util.Set<T> remainingSourceEntities = new java.util.HashSet<T>(sourceEntities); org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.Result result = new org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.Result(); results.add(result); executorService.submit(new org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.ScoringTask<T>(context, _duplicateScoringStrategy, targetEntities, remainingSourceEntities, 0, targetEntities.size(), _minElementsInCommonScoreForAutoDetect, result)); }else { for (int i = 0; i < cpus; i++) { java.util.Collection<T> t_targetEntities = ((java.util.Collection<T>) (target.getAllEntitiesForType(_entityType))); java.util.Collection<T> t_sourceEntities = ((java.util.Collection<T>) (source.getAllEntitiesForType(_entityType))); java.util.Set<T> t_remainingSourceEntities = new java.util.HashSet<T>(t_sourceEntities); org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.Result result = new org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.Result(); results.add(result); executorService.submit(new org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.ScoringTask<T>(context, _duplicateScoringStrategy, t_targetEntities, t_remainingSourceEntities, start, end, _minElementsInCommonScoreForAutoDetect, result)); start = end + 1; end = end + increment; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4523/buggy-version/onebusaway-gtfs-merge.src.main.java.org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.submit(org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.ScoringTask<T>)"], "Fixed commit": "77e9946b18710949bdd4beed6953dca4b2d78dfb", "Url": "https://api.github.com/repos/OneBusAway/onebusaway-gtfs-modules", "Date": "2015-06-05T14:12:54Z"},
{"Line": "=>689", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eclipse.jface.util.Util.isLinux()) { treeColumnI.addControlListener(new org.eclipse.swt.events.ControlAdapter() { @java.lang.Override public void controlResized(org.eclipse.swt.events.ControlEvent e) { if ((treeColumnI.getWidth()) < 10) { treeColumnI.setWidth(10); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7752/buggy-version/rms.org.eclipse.ptp.rm.lml.ui.src.org.eclipse.ptp.rm.lml.ui.views.TableView.java", "BodyUseAPI": [], "Fixed commit": "7a349babc4281c580f933cdbd9144b69d02129e6", "Url": "https://api.github.com/repos/rolandschulz/PTP", "Date": "2012-05-21T14:50:35Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scrum.client.collaboration.Emoticon.getOwner()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (owner == null) return getEmotionLabel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8370/buggy-version/src.main.java.scrum.client.collaboration.Emoticon.java", "BodyUseAPI": [], "Fixed commit": "daf3aec8acd1673d609965c628654310e80dcc78", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2011-10-16T22:07:52Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.rug.ds.reliable.RMulticast.findMessageInHoldbackQueue(p.getHostID(),int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (stored != null) { holdbackQueue.remove(stored); receiveMessage(stored); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2313/buggy-version/workspace.FindingPeers.src.nl.rug.ds.reliable.RMulticast.java", "BodyUseAPI": ["java.util.List<nl.rug.ds.reliable.Message>.remove(nl.rug.ds.reliable.Message)", "nl.rug.ds.reliable.RMulticast.receiveMessage(nl.rug.ds.reliable.Message)"], "Fixed commit": "8bfd28a5c7b480e6aad477c1d79a190f3b5c6b2e", "Url": "https://api.github.com/repos/spirosikmd/inmdsy-08", "Date": "2012-10-09T19:51:47Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getIntent().hasExtra(\"password\")) { java.lang.String password = getIntent().getExtras().getString(\"password\"); int toast_dur = android.widget.Toast.LENGTH_LONG; android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), password, toast_dur); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5536/buggy-version/app.src.main.java.com.example.eduardo.gshell.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b68c9df7de539390100399497b7f25675bc72fea", "Url": "https://api.github.com/repos/MartinSchlegel/gshell", "Date": "2017-04-11T17:03:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_call1.equals(call)) { if ((_response) != null) { javax.servlet.sip.SipServletRequest ack = _response.createAck(); ack.setContent(_call2.getLocalSDP(), \"application/sdp\"); ack.send(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5383/buggy-version/moho-impl.src.main.java.com.voxeo.moho.sip.DirectAI2AOJoinDelegate.java", "BodyUseAPI": [], "Fixed commit": "27a37fb3c2c43ef54db746ec844b36c3734ce0f2", "Url": "https://api.github.com/repos/voxeolabs/moho", "Date": "2012-12-24T08:46:10Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((expense.getOneExpense()) == null) || (expense.getOneExpense())) { expense.setTotalBeforeTax((((expense.getTaxPercent()) != null) && ((expense.getTaxPercent()) > 0) ? org.iabako.server.tools.ServerTools.round(((expense.getPaymentValue()) / (1 + ((expense.getTaxPercent()) / 100)))) : null)); expense.setTotalAfterTax((((expense.getTaxPercent()) != null) && ((expense.getTaxPercent()) > 0) ? expense.getPaymentValue() : null)); expense.setTotalNoTax((((expense.getTaxPercent()) != null) && ((expense.getTaxPercent()) > 0) ? null : expense.getPaymentValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/920/buggy-version/src.main.java.org.iabako.server.serviceimpl.business.ExpenseServiceImpl.java", "BodyUseAPI": ["org.iabako.server.serviceimpl.business.Expense.getTaxPercent()", "org.iabako.server.serviceimpl.business.Expense.getPaymentValue()", "org.iabako.server.serviceimpl.business.Expense.setTotalAfterTax((((expense.getTaxPercent()) != null) && ((expense.getTaxPercent()) > 0) ? expense.getPaymentValue() : null))", "org.iabako.server.serviceimpl.business.Expense.getPaymentValue()", "org.iabako.server.tools.ServerTools.round(((expense.getPaymentValue()) / (1 + ((expense.getTaxPercent()) / 100))))", "org.iabako.server.serviceimpl.business.Expense.setTotalBeforeTax((((expense.getTaxPercent()) != null) && ((expense.getTaxPercent()) > 0) ? org.iabako.server.tools.ServerTools.round(((expense.getPaymentValue()) / (1 + ((expense.getTaxPercent()) / 100)))) : null))", "org.iabako.server.serviceimpl.business.Expense.getPaymentValue()", "org.iabako.server.serviceimpl.business.Expense.getTaxPercent()", "org.iabako.server.serviceimpl.business.Expense.getTaxPercent()", "org.iabako.server.serviceimpl.business.Expense.getTaxPercent()", "org.iabako.server.serviceimpl.business.Expense.getTaxPercent()", "org.iabako.server.serviceimpl.business.Expense.getTaxPercent()", "org.iabako.server.serviceimpl.business.Expense.setTotalNoTax((((expense.getTaxPercent()) != null) && ((expense.getTaxPercent()) > 0) ? null : expense.getPaymentValue()))", "org.iabako.server.serviceimpl.business.Expense.getTaxPercent()"], "Fixed commit": "7ec3072b131ca1792c0db3128b051c4d5fcb303f", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2016-09-05T14:00:32Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(SqliteContract.UserDetails.TABLE_NAME,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((c.getCount()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2837/buggy-version/app.src.main.java.be.howest.nmct.hellocal.BookingsFragment.java", "BodyUseAPI": [], "Fixed commit": "bd6ca8c50e2f465c626cedc2801e51ac01ee2052", "Url": "https://api.github.com/repos/FBeuselinck/HelLOCAL", "Date": "2017-01-26T20:10:55Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(SqliteContract.BookingRequests.TABLE_NAME,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((c.getCount()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2837/buggy-version/app.src.main.java.be.howest.nmct.hellocal.BookingsFragment.java", "BodyUseAPI": [], "Fixed commit": "bd6ca8c50e2f465c626cedc2801e51ac01ee2052", "Url": "https://api.github.com/repos/FBeuselinck/HelLOCAL", "Date": "2017-01-26T20:10:55Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (candidatePackageName.endsWith(\".\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/457/buggy-version/gnr.app.src.main.java.it.necst.grabnrun.PackageNameHelper.java", "BodyUseAPI": [], "Fixed commit": "76429867bf5306d2f9bb4ed40dd46b1d82d298dc", "Url": "https://api.github.com/repos/lukeFalsina/Grab-n-Run", "Date": "2015-12-01T17:28:12Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStarted()) { if ((werewolfSize()) == 0) { return true; }else if ((civilianSize()) == 0) { return true; }else if (((civilianSize()) == 1) && ((werewolfSize()) == 1)) { return true; } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8553/buggy-version/Werewolf.src.Model.Game.java", "BodyUseAPI": [], "Fixed commit": "e170e68211126c177c1ab9f8bb65f088f6a1fef4", "Url": "https://api.github.com/repos/azwaradli/werewolf-game", "Date": "2016-05-08T04:37:09Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.getThread()) != null) { chat = getThreadChat(message.getThread()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2562/buggy-version/smack-im.src.main.java.org.jivesoftware.smack.chat.ChatManager.java", "BodyUseAPI": ["org.jivesoftware.smack.packet.Message.getThread()", "org.jivesoftware.smack.chat.ChatManager.2.getThreadChat(message.getThread())"], "Fixed commit": "894e310a3633b4c7426ce415034541c68995cd87", "Url": "https://api.github.com/repos/zhuzhang/Smack", "Date": "2015-03-12T11:50:36Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((device.getAltitude()) != null) { altitude = new org.openhab.core.library.types.DecimalType(java.lang.Math.round(unitSystem.convertAltitude(device.getAltitude()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4981/buggy-version/bundles.binding.org.openhab.binding.netatmo.src.main.java.org.openhab.binding.netatmo.internal.NetatmoBinding.java", "BodyUseAPI": ["org.openhab.binding.netatmo.internal.messages.DeviceListResponse.Device.getAltitude()", "org.openhab.binding.netatmo.internal.NetatmoUnitSystem.convertAltitude(device.getAltitude())", "java.lang.Math.round(unitSystem.convertAltitude(device.getAltitude()))"], "Fixed commit": "c4bb93d74a5902963dcfe09f0cd4c62ac98c39ec", "Url": "https://api.github.com/repos/robnielsen/openhab1", "Date": "2015-10-04T22:27:14Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(other instanceof de.prob2.ui.verifications.ltl.LTLFormulaItem)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5352/buggy-version/src.main.java.de.prob2.ui.verifications.ltl.LTLFormulaItem.java", "BodyUseAPI": [], "Fixed commit": "d68698b109bd3658759362e99b348e11dfb8d2eb", "Url": "https://api.github.com/repos/bendisposto/prob2-ui", "Date": "2017-04-24T08:08:26Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.memoranda.TaskListImpl.getTaskElement(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (parentNode != null) parentNode.removeSubTask(task);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1632/buggy-version/src.net.sf.memoranda.TaskListImpl.java", "BodyUseAPI": ["net.sf.memoranda.Task.removeSubTask(net.sf.memoranda.Task)"], "Fixed commit": "2cf971ce10c5b6933237f0c68f2d1f8038480847", "Url": "https://api.github.com/repos/cst316/spring16project-Team-Boston", "Date": "2016-02-27T00:55:46Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1632/buggy-version/src.net.sf.memoranda.TaskListImpl.java", "BodyUseAPI": [], "Fixed commit": "2cf971ce10c5b6933237f0c68f2d1f8038480847", "Url": "https://api.github.com/repos/cst316/spring16project-Team-Boston", "Date": "2016-02-27T00:55:46Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((method.getAnnotations(org.codehaus.groovy.ast.ClassHelper.make(Traits.TraitBridge.class)).size()) > 0) { java.util.List<org.codehaus.groovy.ast.AnnotationNode> annotations = method.getAnnotations(org.grails.compiler.web.ControllerActionTransformer.ACTION_ANNOTATION_NODE.getClassNode()); if (((annotations.size()) > 0) && ((method.getParameters().length) > 0)) { method.getAnnotations().removeAll(annotations); --minLineNumber; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2929/buggy-version/grails-plugin-controllers.src.main.groovy.org.grails.compiler.web.ControllerActionTransformer.java", "BodyUseAPI": ["method.getAnnotations().removeAll(java.util.List<org.codehaus.groovy.ast.AnnotationNode>)", "org.codehaus.groovy.ast.MethodNode.getParameters()", "org.codehaus.groovy.ast.MethodNode.getAnnotations(org.grails.compiler.web.ControllerActionTransformer.ACTION_ANNOTATION_NODE.getClassNode())", "org.codehaus.groovy.ast.MethodNode.getAnnotations()"], "Fixed commit": "f82cd6175d9f5df54a5a37dad38f96862b8b6524", "Url": "https://api.github.com/repos/grails/grails-core", "Date": "2016-08-30T19:59:40Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) getWindow().setStatusBarColor(android.support.v4.content.ContextCompat.getColor(getApplicationContext(), R.color.colorPrimaryDark));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8461/buggy-version/app.src.main.java.com.basmach.marshal.ui.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "2e3a0270460841ef446328b7c5356d04aeb2594a", "Url": "https://api.github.com/repos/marshalappdevs/Marshal-Android-App", "Date": "2016-02-04T17:01:10Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.src.IInventory.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((SimpleServiceLocator.forestryProxy.isPrincess(item)) && (apiarySlot1 != null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2446/buggy-version/common.logisticspipes.modules.ModuleApiaristRefiller.java", "BodyUseAPI": [], "Fixed commit": "f2ff57dfc450366f2ab54ffde1ab5ba4bc7c9530", "Url": "https://api.github.com/repos/RS485/LogisticsPipes", "Date": "2012-11-25T05:52:50Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.src.IInventory.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (SimpleServiceLocator.forestryProxy.isQueen(apiarySlot1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2446/buggy-version/common.logisticspipes.modules.ModuleApiaristRefiller.java", "BodyUseAPI": [], "Fixed commit": "f2ff57dfc450366f2ab54ffde1ab5ba4bc7c9530", "Url": "https://api.github.com/repos/RS485/LogisticsPipes", "Date": "2012-11-25T05:52:50Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) { for (de.zsgn.industrialscience.util.AbsoluteCoordinate coord : structure) { net.minecraft.tileentity.TileEntity tileEntity = worldObj.getTileEntity(coord.xCoord, coord.yCoord, coord.zCoord); if (tileEntity instanceof de.zsgn.industrialscience.factory.tileentity.TileEntityMultiBlock) { ((de.zsgn.industrialscience.factory.tileentity.TileEntityMultiBlock) (tileEntity)).setActivepart(false); } } structure = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/155/buggy-version/src.main.java.de.zsgn.industrialscience.factory.tileentity.ITileEntityMultiBlockController.java", "BodyUseAPI": [], "Fixed commit": "7010d19c378af43cc6e183d7a8fe4e55cb5110e1", "Url": "https://api.github.com/repos/IndustrialScienceTeam/Industrialscience", "Date": "2014-07-05T14:44:44Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!wasFound) { this.idleTimeBetweenCharsList.add(time); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5626/buggy-version/src.creator.java", "BodyUseAPI": [], "Fixed commit": "442a6aebdcac6ffc3a7276ae47cad3070d393f43", "Url": "https://api.github.com/repos/DavidBarishev/Keyboard-of-FUN", "Date": "2015-10-27T19:57:24Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.contains(\"//hitomi.la/galleries/\")) { if ((Build.VERSION.SDK_INT) >= 19) { view.evaluateJavascript(js, new android.webkit.ValueCallback<java.lang.String>() { @java.lang.Override public void onReceiveValue(java.lang.String s) { } }); }else { view.loadUrl(js); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7175/buggy-version/app.src.main.java.me.devsaki.hentoid.activities.HitomiActivity.java", "BodyUseAPI": [], "Fixed commit": "c94952cb6393a41e216c54e94755d36619ad049f", "Url": "https://api.github.com/repos/csaki/Hentoid", "Date": "2016-03-29T01:58:32Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p1 == null) || (p2 == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6702/buggy-version/Project_1.src.SearchComponents.ProcessQuery.java", "BodyUseAPI": [], "Fixed commit": "a9713efb5075118304f084b8a4ff70e1935d8448", "Url": "https://api.github.com/repos/jle33/SimpleSearchEngine", "Date": "2014-11-18T19:40:22Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.appengine.gcloudapp.AbstractGcloudMojo.getAppEngineWebXml(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"2\".equals(appengineWeb.getEnv())) { arguments.add(\"-R\"); arguments.add(\"-r\"); arguments.add(\"java\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7427/buggy-version/src.main.java.com.google.appengine.gcloudapp.AbstractGcloudMojo.java", "BodyUseAPI": [], "Fixed commit": "1cb4ff5baa726babd750d38e43be87c50152e5c1", "Url": "https://api.github.com/repos/GoogleCloudPlatform/gcloud-maven-plugin", "Date": "2015-10-30T21:00:36Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (successPredicate.test(initialPlayerSnapshot)) { return initialPlayerSnapshot; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8598/buggy-version/src.main.java.com.skiwi.ogameplanner.Planner.java", "BodyUseAPI": [], "Fixed commit": "316108204ca997d145687f994d7e5c12e2ac5470", "Url": "https://api.github.com/repos/skiwi2/OGamePlanner", "Date": "2016-01-30T19:35:17Z"},
{"Line": "=>1003", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((field.getType()) instanceof moc.type.TARRAY) || ((field.getType()) instanceof moc.type.TSTRUCT)) { code.setAddress(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5940/buggy-version/moc.cg.MCRAPS.java", "BodyUseAPI": [], "Fixed commit": "da861635e3ff1f4f4c19c77cd32529867e8c40d7", "Url": "https://api.github.com/repos/arthaud/moc", "Date": "2015-02-26T11:30:53Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!atLeastOneFeatMatch) throw new java.lang.RuntimeException((((\"No feature created. Make sure the alphabets match: \" + (alphabet.indexer)) + \" vs \") + (options.featuresFile)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/361/buggy-version/src.main.java.muset.pef.FeatureExtractor.java", "BodyUseAPI": [], "Fixed commit": "2377d0ef942f53b460ff2ba1a900fc1bdebb775f", "Url": "https://api.github.com/repos/alexandrebouchard/muset", "Date": "2015-04-06T18:58:39Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(alphabet.containsLetter(phonemeStr))) continue loop;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/361/buggy-version/src.main.java.muset.pef.FeatureExtractor.java", "BodyUseAPI": [], "Fixed commit": "2377d0ef942f53b460ff2ba1a900fc1bdebb775f", "Url": "https://api.github.com/repos/alexandrebouchard/muset", "Date": "2015-04-06T18:58:39Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userBytes > 4000) { maxProgress = (fileToParse.length()) / userBytes; }else { maxProgress = (fileToParse.length()) / 4000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4818/buggy-version/src.main.bussiness.Splitter.java", "BodyUseAPI": [], "Fixed commit": "8191e720fb3d786719f3c8cd2048178547adc2d5", "Url": "https://api.github.com/repos/vijai3d/XMLGeneratorSplitter", "Date": "2017-08-14T19:15:30Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((in.readableBytes()) < 8) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1317/buggy-version/src.main.java.com.spotify.netty.handler.codec.zmtp.ZMTPUtils.java", "BodyUseAPI": [], "Fixed commit": "34077fdd99dba5e8d685e12333d138c6ecdd9f7d", "Url": "https://api.github.com/repos/mkorkalo/netty-zmtp", "Date": "2014-11-27T10:20:14Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_table.getCellEditor()) != null) { _table.getCellEditor().stopCellEditing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8362/buggy-version/src.gncimport.ui.swing.EditPropertiesDialog.java", "BodyUseAPI": ["javax.swing.JTable.getCellEditor()", "javax.swing.table.TableCellEditor.stopCellEditing()"], "Fixed commit": "c35d5227157fb0f268e89b327714683044484532", "Url": "https://api.github.com/repos/fcuenca/GncImport", "Date": "2016-01-10T00:34:28Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exc.getMessage().equals(\"Connection reset by peer\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4624/buggy-version/src.com.monolc.felljs.Program.java", "BodyUseAPI": [], "Fixed commit": "a4e89dc998624629a72cae76ad1854b2ec59990a", "Url": "https://api.github.com/repos/nulltitleexception/FellJS-Server", "Date": "2015-06-17T03:18:48Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (port == (-1)) port = 8020;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2216/buggy-version/src.main.java.hdfs.jsr203.HadoopFileSystem.java", "BodyUseAPI": [], "Fixed commit": "a29015807001cb2073de423fd0caa67137269d03", "Url": "https://api.github.com/repos/damiencarol/jsr203-hadoop", "Date": "2016-01-19T12:26:32Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((peek) == '\\r') { if (input.hasNext()) { peek = input.next().charAt(0); if ((peek) == '\\n') (line)++; } if (input.hasNext()) peek = input.next().charAt(0); }else break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3248/buggy-version/main.guibuilder.Lexer.java", "BodyUseAPI": [], "Fixed commit": "a31dd6ac92eb258dd59191d964ab72e9fe37aba5", "Url": "https://api.github.com/repos/JMLjml/GUIParser", "Date": "2013-11-12T22:42:05Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length == 0) { out.add(decompressed); decompressed = ctx.alloc().heapBuffer(maxOutputLength); outArray = decompressed.array(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/881/buggy-version/codec.src.main.java.io.netty.handler.codec.compression.JdkZlibDecoder.java", "BodyUseAPI": [], "Fixed commit": "00f99dbff6d3cc959bff65d072f2d48f18b883e3", "Url": "https://api.github.com/repos/netty/netty", "Date": "2013-10-07T05:31:21Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getContentResolver().query(android.net.Uri,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((cursor != null) && (cursor.moveToNext())) { fileName = cursor.getString(cursor.getColumnIndexOrThrow(MediaStore.MediaColumns.DISPLAY_NAME)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4265/buggy-version/app.src.main.java.com.github.moko256.twicalico.AddedImagesAdapter.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndexOrThrow(MediaStore.MediaColumns.DISPLAY_NAME)", "android.database.Cursor.getString(cursor.getColumnIndexOrThrow(MediaStore.MediaColumns.DISPLAY_NAME))"], "Fixed commit": "22b9bc115632b09e79f51ccd0bdedc974ec6bb88", "Url": "https://api.github.com/repos/moko256/twitlatte", "Date": "2017-12-01T17:51:57Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (view.reoccur.isReoccuring()) view.reoccur.setVisibility(View.VISIBLE); else view.reoccur.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7519/buggy-version/src.de.fahrgemeinschaft.RideDetailsFragment.java", "BodyUseAPI": ["de.fahrgemeinschaft.util.ReoccuringWeekDaysView.setVisibility(View.VISIBLE)", "de.fahrgemeinschaft.util.ReoccuringWeekDaysView.setVisibility(View.GONE)"], "Fixed commit": "2aea68c45d649d023c9b7caf8fc03eb80d5ae7f8", "Url": "https://api.github.com/repos/fahrgemeinschaft/android-app", "Date": "2013-08-06T00:13:52Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.tx.OTransaction.getClusterName(op.getRecord())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (clusterName != null) rid.clusterId = ODatabaseRecordThreadLocal.INSTANCE.get().getClusterIdByName(clusterName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7297/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.ODistributedTransactionManager.java", "BodyUseAPI": ["ODatabaseRecordThreadLocal.INSTANCE.get().getClusterIdByName(java.lang.String)"], "Fixed commit": "a8ee728a4ae7d8b60dfdd3109342475805e50560", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-07-28T23:08:51Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (asMoreResults) { datasetList.remove(((datasetList.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1624/buggy-version/registry-ws.src.main.java.org.gbif.registry.oaipmh.OaipmhItemRepository.java", "BodyUseAPI": [], "Fixed commit": "418282c65c12c7f5ba921926c63b7cbb1e615b20", "Url": "https://api.github.com/repos/gbif/registry", "Date": "2015-10-01T14:26:49Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index > (dims.length)) || ((dims[index]) != null)) { throw new com.metamx.common.ISE(\"Dimension[%s] occurred more than once in InputRow\", dimension); }else { dims[index] = getDimVals(dimValues.get(dimension), dimensionValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4507/buggy-version/processing.src.main.java.io.druid.segment.incremental.IncrementalIndex.java", "BodyUseAPI": [], "Fixed commit": "b6cc2428e17ad5e49bcf780e32f122166c10fd44", "Url": "https://api.github.com/repos/b-slim/druid", "Date": "2015-11-22T09:53:33Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((objectiveFunction) != null) return objectiveFunction;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2882/buggy-version/jsprit-core.src.main.java.jsprit.core.algorithm.box.Jsprit.java", "BodyUseAPI": [], "Fixed commit": "917d5d3d2c75eea6405f6e0807484d943df1d2da", "Url": "https://api.github.com/repos/pierredavidbelanger/jsprit", "Date": "2015-04-21T22:43:13Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((CrystalWing.uses) > 0) { setMaxDamage(((CrystalWing.uses) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/9126/buggy-version/src.bspkrs.crystalwing.ItemCrystalWing.java", "BodyUseAPI": [], "Fixed commit": "c886522810c607ba57082a158f348b975c272040", "Url": "https://api.github.com/repos/bspkrs/CrystalWing", "Date": "2013-07-15T04:31:05Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (hasher != null) { hashes = hasher.getResults(); first = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/9217/buggy-version/src.freenet.client.async.InsertCompressor.java", "BodyUseAPI": ["freenet.crypt.MultiHashInputStream.getResults()"], "Fixed commit": "fb1b4d1ac59791ea3f8bf86b9e93224ca4f37a35", "Url": "https://api.github.com/repos/zidel/fred-staging", "Date": "2011-06-24T14:25:30Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.net.URI, org.apache.karaf.features.Repository>.get(java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (toremove != null) { for (org.apache.karaf.features.Feature feature : toremove.getFeatures()) { if (featureService.isInstalled(feature)) { featureService.uninstallFeature(feature.getName(), feature.getVersion()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4596/buggy-version/server.com.dexels.navajo.karaf.command.src.com.dexels.navajo.karaf.command.FeatureSynchronizer.java", "BodyUseAPI": ["org.apache.karaf.features.Repository.getFeatures()"], "Fixed commit": "0bd0514841b47336e1c4746b0d98e282287959e5", "Url": "https://api.github.com/repos/Dexels/navajo", "Date": "2014-10-24T08:02:06Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cmd.getApplicantId().matches(\"[-a-zA-Z0-9|\\\\.]*\"))) { throw new java.lang.IllegalArgumentException(\"\u7533\u8acb\u8005Id \u53ea\u80fd\u70ba\u82f1\u6587\u6216\u6578\u5b57\u7d44\u5408\uff0c\u4e0d\u53ef\u6709\u7279\u6b8a\u7b26\u865f(\u7a7a\u767d)\u6216\u4e2d\u6587\u3002\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3377/buggy-version/src.main.java.com.hoyoung.fortis.services.UserDeviceServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ebb7a9f3dffbd34400c83a6eff44f9f0d21848a4", "Url": "https://api.github.com/repos/sclin0323/fortis-ws", "Date": "2016-10-15T16:21:36Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cmd.getApplicantId().matches(\"[-a-zA-Z0-9|\\\\.]*\"))) { throw new java.lang.IllegalArgumentException(\"\u7533\u8acb\u8005Id \u53ea\u80fd\u70ba\u82f1\u6587\u6216\u6578\u5b57\u7d44\u5408\uff0c\u4e0d\u53ef\u6709\u7279\u6b8a\u7b26\u865f(\u7a7a\u767d)\u6216\u4e2d\u6587\u3002\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3377/buggy-version/src.main.java.com.hoyoung.fortis.services.UserDeviceServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ebb7a9f3dffbd34400c83a6eff44f9f0d21848a4", "Url": "https://api.github.com/repos/sclin0323/fortis-ws", "Date": "2016-10-15T16:21:36Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serverUrl) == null) { return null; }else if (serverUrl.contains(\"TopicIndex\")) { return (serverUrl.endsWith(\"/\") ? serverUrl : (serverUrl) + \"/\") + \"seam/resource/rest/\"; }else { return serverUrl.endsWith(\"/\") ? serverUrl : (serverUrl) + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2978/buggy-version/src.main.java.com.redhat.contentspec.client.commands.base.BaseCommandImpl.java", "BodyUseAPI": [], "Fixed commit": "8039a5380059b0e6ba9cde9e5b035f21def11e6b", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2013-05-30T04:09:31Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getConfigLocation()) != null) { command.setConfigLocation(getConfigLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2978/buggy-version/src.main.java.com.redhat.contentspec.client.Client.java", "BodyUseAPI": [], "Fixed commit": "8039a5380059b0e6ba9cde9e5b035f21def11e6b", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2013-05-30T04:09:31Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUsername()) != null) { command.setUsername(getUsername()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2978/buggy-version/src.main.java.com.redhat.contentspec.client.Client.java", "BodyUseAPI": [], "Fixed commit": "8039a5380059b0e6ba9cde9e5b035f21def11e6b", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2013-05-30T04:09:31Z"},
{"Line": "=>898", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serverUrl) == null) { return null; }else if (serverUrl.contains(\"TopicIndex\")) { return (serverUrl.endsWith(\"/\") ? serverUrl : (serverUrl) + \"/\") + \"seam/resource/rest/\"; }else { return serverUrl.endsWith(\"/\") ? serverUrl : (serverUrl) + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2978/buggy-version/src.main.java.com.redhat.contentspec.client.Client.java", "BodyUseAPI": [], "Fixed commit": "8039a5380059b0e6ba9cde9e5b035f21def11e6b", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2013-05-30T04:09:31Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getServerUrl()) != null) { command.setServerUrl(getServerUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2978/buggy-version/src.main.java.com.redhat.contentspec.client.Client.java", "BodyUseAPI": [], "Fixed commit": "8039a5380059b0e6ba9cde9e5b035f21def11e6b", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2013-05-30T04:09:31Z"},
{"Line": "=>903", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (intent.getAction().equals(GotoReceiver.ACTION_GOTO)) { setIntent(intent); processData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1987/buggy-version/src.cstdr.ningningcat.WebActivity.java", "BodyUseAPI": ["cstdr.ningningcat.WebActivity.setIntent(android.content.Intent)"], "Fixed commit": "92cb215a01015f62182f77a2a4d01992d9e29df3", "Url": "https://api.github.com/repos/cstdr/cstdr.ningningcat", "Date": "2013-04-08T16:22:40Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { value = normalisedKeys.get(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3928/buggy-version/src.main.java.com.threewks.thundr.bind.http.request.RequestDataBinder.java", "BodyUseAPI": [], "Fixed commit": "6421817d16988d5c5f5763ba37aa59252eb56edc", "Url": "https://api.github.com/repos/3wks/thundr", "Date": "2016-11-23T07:28:18Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((departmentViewModel.getSelectedUserEmails()) != null) && (!(departmentViewModel.getSelectedUserEmails().isEmpty()))) { userEmails = java.util.Arrays.asList(departmentViewModel.getSelectedUserEmails().split(\",\")); }else { userEmails = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1985/buggy-version/src.main.java.ca.ulaval.glo4003.appemployee.services.DepartmentService.java", "BodyUseAPI": ["ca.ulaval.glo4003.appemployee.web.viewmodels.DepartmentViewModel.getSelectedUserEmails()", "java.util.Arrays.asList(departmentViewModel.getSelectedUserEmails().split(\",\"))", "departmentViewModel.getSelectedUserEmails().split(java.lang.String)"], "Fixed commit": "a4d5e06bb059353215e3ae64e7fa9beaa0038349", "Url": "https://api.github.com/repos/teanutella/AppEmployee", "Date": "2014-12-04T23:52:56Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userEmails != null) { for (java.lang.String email : userEmails) { department.addEmployee(email); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1985/buggy-version/src.main.java.ca.ulaval.glo4003.appemployee.domain.department.DepartmentProcessor.java", "BodyUseAPI": [], "Fixed commit": "a4d5e06bb059353215e3ae64e7fa9beaa0038349", "Url": "https://api.github.com/repos/teanutella/AppEmployee", "Date": "2014-12-04T23:52:56Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["user.getConferences()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (oldInfor.contains(conference)) { return -1; }else { oldInfor += \"/\" + conference; java.lang.String[] parameter = new java.lang.String[]{ oldInfor, user }; user.updateUser(column, parameter); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1163/buggy-version/src.user.java", "BodyUseAPI": [], "Fixed commit": "8bc6456d99b233abbaf7769c5a0bdd4edce4fd67", "Url": "https://api.github.com/repos/topConference/topConference", "Date": "2017-11-08T11:24:25Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((CallBlocker) != null) { unregisterReceiver(CallBlocker); CallBlocker = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5705/buggy-version/src.com.bun.notificationshistory.Notification_Service.java", "BodyUseAPI": [], "Fixed commit": "455bdb3fabf8a048326c2b9c34f4101bc9117790", "Url": "https://api.github.com/repos/vikrammiddha/NotificationsHistory", "Date": "2013-08-02T15:31:13Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (zoomLevel > (tilesView.getZoomLevel())) { zoomLevel = tilesView.getZoomLevel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/284/buggy-version/tilesview.src.main.java.com.joanzapata.tilesview.adapter.FixedSizeAdapter.java", "BodyUseAPI": ["com.joanzapata.tilesview.TilesView.getZoomLevel()"], "Fixed commit": "bc1881f72b59b23b85e1036a4824255cd1d7d423", "Url": "https://api.github.com/repos/JoanZapata/tilesview", "Date": "2015-10-09T07:44:36Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.getCapabilities().mayFly())) { speed = ((float) (0.05)); }else { if (player.getMode().equals(GameMode.CREATIVE)) { speed = player.getCapabilities().getFlySpeed(); }else { speed = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2452/buggy-version/src.main.java.net.larry1123.fly.commands.CFly.java", "BodyUseAPI": ["player.getCapabilities().getFlySpeed()", "player.getMode().equals(GameMode.CREATIVE)", "net.canarymod.api.entity.living.humanoid.Player.getMode()", "net.canarymod.api.entity.living.humanoid.Player.getCapabilities()"], "Fixed commit": "7fb018d6c7dc069256608e6a45292d871305a0bb", "Url": "https://api.github.com/repos/Larry1123/Fly", "Date": "2013-11-11T14:59:14Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.m410.fabricate.builder.BuildContext.configAt(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(optCfg.isPresent())) { throw new java.lang.RuntimeException(\"could not find configuration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2386/buggy-version/src.main.java.org.m410.garden.logback.LogbackXmlTask.java", "BodyUseAPI": [], "Fixed commit": "74fd6dff900543fb4af1b29811226613e1c0c379", "Url": "https://api.github.com/repos/m410/garden-logback", "Date": "2016-10-04T02:03:45Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ma.getDashboard().isVisible()) { ma.getDashboard().hideDashboard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7316/buggy-version/OsmAnd.src.net.osmand.plus.base.FailSafeFuntions.java", "BodyUseAPI": ["ma.getDashboard().hideDashboard()", "net.osmand.plus.activities.MapActivity.getDashboard()"], "Fixed commit": "4d9021f92e88422bc3df254607061d24111ea5e1", "Url": "https://api.github.com/repos/Zahnstocher/Osmand", "Date": "2015-04-24T22:07:28Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.handle) instanceof org.deidentifier.arx.DataHandleSubset) { sourceHandle = context.model.getInputConfig().getInput().getHandle().getView(); }else { sourceHandle = context.model.getInputConfig().getInput().getHandle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3911/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.utility.ViewStatisticsRegressionOutput.java", "BodyUseAPI": ["context.model.getInputConfig().getInput().getHandle().getView()", "context.model.getInputConfig().getInput().getHandle()", "context.model.getInputConfig()", "context.model.getInputConfig().getInput()", "context.model.getInputConfig()", "context.model.getInputConfig().getInput().getHandle()", "context.model.getInputConfig().getInput()"], "Fixed commit": "df57d154be8438a10c0a3a53cd3b026adaadd98a", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-12-09T13:43:11Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((pstart) & (dataMask)) + (plen)) == (capacity)) flush();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6400/buggy-version/src.jocket.impl.JocketWriter.java", "BodyUseAPI": [], "Fixed commit": "3ed3d936ba032221b15d95c66d86abcfde04f777", "Url": "https://api.github.com/repos/pcdv/jocket", "Date": "2013-08-22T04:04:39Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (false) { java.lang.System.out.println(\"pouet\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1256/buggy-version/server.sonar-server.src.main.java.org.sonar.server.es.OneToManyResilientIndexingListener.java", "BodyUseAPI": [], "Fixed commit": "90d717f6c68816fe28a9ff9aa715e41ba8a9e77f", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2017-09-13T10:33:10Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Collection.class.isAssignableFrom(aTargetType)) { tempCollectionType = java.util.ArrayList.class; }else { tempTargetType = aTargetType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1526/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": [], "Fixed commit": "de1e4d87845c7fa6d92247a4f0cd9cb67960f5b5", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-05-09T17:37:46Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.paralleluniverse.actors.FakeActor<Message>.filterMessage(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (msg == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1618/buggy-version/quasar-actors.src.main.java.co.paralleluniverse.actors.FakeActor.java", "BodyUseAPI": [], "Fixed commit": "e3825893d8519491313c9c531fa2d3b51f0e5950", "Url": "https://api.github.com/repos/puniverse/quasar", "Date": "2014-01-21T21:36:19Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((driverToDeviceStreamDataCopyFuture) != null) { driverToDeviceStreamDataCopyFuture.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1274/buggy-version/core.src.main.java.de.uniluebeck.itm.wsn.drivers.core.SerialPortDevice.java", "BodyUseAPI": [], "Fixed commit": "5d97ac7911f72c7304ce0d67993b09db4135cefe", "Url": "https://api.github.com/repos/itm/wsn-device-drivers", "Date": "2012-05-02T14:58:17Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (column.equalsIgnoreCase(\"ECONOMY\")) { values.put(column, economyName); }else { values.put(column, data.getString(column)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5668/buggy-version/src.main.java.regalowl.hyperconomy.HyperEconomy.java", "BodyUseAPI": ["regalowl.simpledatalib.sql.QueryResult.getString(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,data.getString(column))"], "Fixed commit": "f92212011861d250fca6bdce5d47905a8046cde4", "Url": "https://api.github.com/repos/RegalOwl/HyperConomy", "Date": "2016-03-21T03:26:09Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((geoTask) != null) { geoTask.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2458/buggy-version/src.org.qii.weiciyuan.ui.browser.BrowserWeiboMsgFragment.java", "BodyUseAPI": [], "Fixed commit": "b184a089e11c81add6039ace472a950c662e5401", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-02T11:02:07Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPollutionCheckBox.isChecked()) { data.put(\"activity_type\", \"Pollution\"); }else { data.put(\"activity_type\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5584/buggy-version/JobViewer.src.com.lanesgroup.jobviewer.NewWorkActivity.java", "BodyUseAPI": [], "Fixed commit": "63b4bcde9eebc59557ea4d16e0833899bed04f86", "Url": "https://api.github.com/repos/raghunaikbadde/FieldViewer", "Date": "2016-06-10T04:52:52Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj != null) && (obj instanceof javax.swing.JComponent)) { ((javax.swing.JComponent) (obj)).putClientProperty(attr.getName(), attr.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6245/buggy-version/src.main.java.org.swixml.technoproxy.swing.Parser.java", "BodyUseAPI": [], "Fixed commit": "67ae17a6323b41b0d5a49578df45861421bf4af9", "Url": "https://api.github.com/repos/libetl/twixml", "Date": "2013-09-19T15:40:39Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.equals(\"\")) { line = \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/9230/buggy-version/src.org.plugins.simplefreeze.listeners.PlayerJoinListener.java", "BodyUseAPI": [], "Fixed commit": "da26e3d2f218f1972664866aabe3da41b3005bcc", "Url": "https://api.github.com/repos/7rory768/SimpleFreeze", "Date": "2017-04-20T01:52:19Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg.equals(\"\")) { msg = \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/9230/buggy-version/src.org.plugins.simplefreeze.listeners.PlayerJoinListener.java", "BodyUseAPI": [], "Fixed commit": "da26e3d2f218f1972664866aabe3da41b3005bcc", "Url": "https://api.github.com/repos/7rory768/SimpleFreeze", "Date": "2017-04-20T01:52:19Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fullscreen && (glfwForceMainThread)) { glfwWindowHint(fr.delthas.javaui.GLFW_FLOATING, fr.delthas.javaui.GLFW_TRUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8718/buggy-version/src.main.java.fr.delthas.javaui.Window.java", "BodyUseAPI": [], "Fixed commit": "751b7e7228884ebf8018d20a4b59bd55d9eb7bef", "Url": "https://api.github.com/repos/delthas/JavaUI", "Date": "2017-12-19T01:37:53Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultCode != (RESULT_CANCELED)) && (requestCode == (com.philschatz.checklist.ToDoListActivity.REQUEST_ID_TODO_ITEM))) { com.philschatz.checklist.ToDoItem item = ((com.philschatz.checklist.ToDoItem) (data.getSerializableExtra(com.philschatz.checklist.ToDoListActivity.TODOITEM))); java.lang.String id = data.getStringExtra(com.philschatz.checklist.ToDoListActivity.TODOITEM_ID); java.lang.String listId = com.philschatz.checklist.MainActivity.getReference(mListPath).getKey(); com.philschatz.checklist.MainActivity.getReference((((\"/items/\" + listId) + \"/\") + id)).setValue(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8451/buggy-version/app.src.main.java.com.philschatz.checklist.ToDoListActivity.java", "BodyUseAPI": [], "Fixed commit": "21d6553e1568a21f84dbbbd135a1bc1d37d05716", "Url": "https://api.github.com/repos/philschatz/checklist", "Date": "2016-11-10T19:34:13Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.title) != null) { stringReturn += \", title: \" + (this.title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5592/buggy-version/src.java.main.br.ufpe.cin.groundhog.Issue.java", "BodyUseAPI": [], "Fixed commit": "0517d18d0383decfe62f921945f4f31d0a63199c", "Url": "https://api.github.com/repos/spgroup/groundhog", "Date": "2013-10-20T12:18:24Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.ufpe.cin.groundhog.Issue.getURL()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (url != null) { stringReturn += \", URL = \" + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5592/buggy-version/src.java.main.br.ufpe.cin.groundhog.Issue.java", "BodyUseAPI": [], "Fixed commit": "0517d18d0383decfe62f921945f4f31d0a63199c", "Url": "https://api.github.com/repos/spgroup/groundhog", "Date": "2013-10-20T12:18:24Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(param.getDescription())) { java.lang.String temp = privateFieldDesc.get(param.getName()); if (temp == null) { if (typeToProcess.typeName().equals(\"boolean\")) { temp = privateFieldDesc.get(param.getName()); if (temp == null) { param.setDescription(privateFieldDesc.get((\"is\" + (net.winroad.wrdoclet.utils.Util.capitalize(param.getName()))))); } } }else { param.setDescription(temp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5490/buggy-version/src.main.java.net.winroad.wrdoclet.builder.AbstractDocBuilder.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get((\"is\" + (net.winroad.wrdoclet.utils.Util.capitalize(param.getName()))))", "net.winroad.wrdoclet.data.APIParameter.setDescription(java.lang.String)", "net.winroad.wrdoclet.utils.Util.capitalize(param.getName())", "net.winroad.wrdoclet.data.APIParameter.getName()", "net.winroad.wrdoclet.data.APIParameter.setDescription(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(param.getName())", "net.winroad.wrdoclet.data.APIParameter.getName()", "net.winroad.wrdoclet.data.APIParameter.getName()", "java.util.HashMap<java.lang.String, java.lang.String>.get(param.getName())"], "Fixed commit": "ea4a160c56ad2ed664355742df482d3d7276b4b0", "Url": "https://api.github.com/repos/WinRoad-NET/wrdocletbase", "Date": "2017-06-14T13:23:39Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((privateFieldValidator.get(param.getName())) != null) { param.setDescription(((param.getDescription()) == null ? privateFieldValidator.get(param.getName()) : ((param.getDescription()) + \" \") + (privateFieldValidator.get(param.getName())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5490/buggy-version/src.main.java.net.winroad.wrdoclet.builder.AbstractDocBuilder.java", "BodyUseAPI": ["net.winroad.wrdoclet.data.APIParameter.getDescription()", "net.winroad.wrdoclet.data.APIParameter.setDescription(((param.getDescription()) == null ? privateFieldValidator.get(param.getName()) : ((param.getDescription()) + \" \") + (privateFieldValidator.get(param.getName()))))", "java.util.HashMap<java.lang.String, java.lang.String>.get(param.getName())", "net.winroad.wrdoclet.data.APIParameter.getDescription()", "net.winroad.wrdoclet.data.APIParameter.getName()", "java.util.HashMap<java.lang.String, java.lang.String>.get(param.getName())", "net.winroad.wrdoclet.data.APIParameter.getName()"], "Fixed commit": "ea4a160c56ad2ed664355742df482d3d7276b4b0", "Url": "https://api.github.com/repos/WinRoad-NET/wrdocletbase", "Date": "2017-06-14T13:23:39Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((edu.berkeley.xtrace.XTraceContext.isValid()) && (curHeader.hasXTraceContext())) { org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader newHeader = new org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader(curHeader.getPacketLen(), curHeader.getOffsetInBlock(), curHeader.getSeqno(), curHeader.isLastPacketInBlock(), curHeader.getDataLen(), curHeader.getSyncBlock()); int priorPosition = curPacketBuf.position(); int priorLimit = curPacketBuf.limit(); curPacketBuf.position(0); curPacketBuf.limit(newHeader.getSerializedSize()); newHeader.putInBuffer(curPacketBuf); curPacketBuf.position(priorPosition); curPacketBuf.limit(priorLimit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4580/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.protocol.datatransfer.PacketReceiver.java", "BodyUseAPI": ["org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader.getPacketLen()", "org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader.getSeqno()", "org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader.getOffsetInBlock()", "org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader.getSyncBlock()", "org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader.isLastPacketInBlock()", "org.apache.hadoop.hdfs.protocol.datatransfer.PacketHeader.getDataLen()"], "Fixed commit": "810dc4aa2f86b39db39b58ab2eba3ad06b93ca8b", "Url": "https://api.github.com/repos/brownsys/brownsys-hadoop", "Date": "2013-10-29T22:54:17Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!isDaytime) || (this.worldObj.isRaining())) || (this.worldObj.isThundering())) { this.targetAngle = 77.5F + 180.0F; }else if ((celestialAngle > 27.5F) && (celestialAngle < 152.5F)) { float difference = ((this.targetAngle) - celestialAngle) + 12.5F; this.targetAngle -= difference / 20.0F; }else if ((celestialAngle <= 27.5F) || (celestialAngle > 270.0F)) { this.targetAngle = 15.0F; }else if (celestialAngle >= 152.5F) { this.targetAngle = 140.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3804/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.tile.TileEntitySolar.java", "BodyUseAPI": [], "Fixed commit": "e5245c1a4d3ea3de338544c2201bd4c042d9ec30", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2017-04-22T22:35:21Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((this.worldObj.provider) instanceof micdoodle8.mods.galacticraft.core.dimension.WorldProviderSpaceStation)) celestialAngle += 12.5F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3804/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.tile.TileEntitySolar.java", "BodyUseAPI": [], "Fixed commit": "e5245c1a4d3ea3de338544c2201bd4c042d9ec30", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2017-04-22T22:35:21Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit.RetrofitError.getBodyAs(java.lang.Class)", "com.hp.autonomy.iod.client.error.IodError.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((message != null) && ((iodError.getErrorCode()) == null)) { final java.util.Map<java.lang.String, java.lang.Object> detail = ((java.util.Map<java.lang.String, java.lang.Object>) (iodError.getDetail())); final com.hp.autonomy.iod.client.error.IodErrorCode errorCode = com.hp.autonomy.iod.client.error.IodErrorCode.fromCode(((java.lang.Integer) (detail.get(\"error\")))); iodError = new com.hp.autonomy.iod.client.error.IodError.Builder().setErrorCode(errorCode).setReason(message).build(); }else if ((actions != null) && (!(actions.isEmpty()))) { iodError = actions.get(0).getErrors().get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6372/buggy-version/src.main.java.com.hp.autonomy.iod.client.error.IodErrorHandler.java", "BodyUseAPI": ["new com.hp.autonomy.iod.client.error.IodError.Builder().setErrorCode(errorCode).setReason(java.lang.String)", "new com.hp.autonomy.iod.client.error.IodError.Builder().setErrorCode(errorCode).setReason(message).build()", "com.hp.autonomy.iod.client.error.IodError.getDetail()"], "Fixed commit": "630cce86d09126e652e90059ef95520057b0b19a", "Url": "https://api.github.com/repos/microfocus-idol/java-iod-client", "Date": "2015-03-24T15:21:14Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (camelExchange.getPattern().isOutCapable()) { if (camelExchange.hasOut()) { response = camelExchange.getOut(); org.apache.camel.component.cxf.jaxrs.DefaultCxfRsBinding.LOG.trace(\"Get the response from the out message\"); }else { response = camelExchange.getIn(); org.apache.camel.component.cxf.jaxrs.DefaultCxfRsBinding.LOG.trace(\"Get the response from the in message as a fallback\"); } }else { response = camelExchange.getIn(); org.apache.camel.component.cxf.jaxrs.DefaultCxfRsBinding.LOG.trace(\"Get the response from the in message\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8421/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.jaxrs.DefaultCxfRsBinding.java", "BodyUseAPI": ["org.apache.camel.Exchange.getOut()", "org.apache.camel.Exchange.getIn()", "org.apache.camel.Exchange.getIn()", "org.apache.camel.Exchange.hasOut()"], "Fixed commit": "fffd1393bda6bbc01b43514f6fde2279829a9b0d", "Url": "https://api.github.com/repos/apache/camel", "Date": "2013-12-12T11:04:06Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((b == ((byte) (254 + 128))) || (b == ((byte) (255 + 128)))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8406/buggy-version/core.src.de.dakror.vloxlands.game.entity.structure.Structure.java", "BodyUseAPI": [], "Fixed commit": "38cb7c3f324f4cd962af24977ab23be254a87496", "Url": "https://api.github.com/repos/Dakror/Vloxlands", "Date": "2014-09-03T19:02:53Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((b == ((byte) (254 + 128))) || (b == ((byte) (255 + 128)))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8406/buggy-version/core.src.de.dakror.vloxlands.game.entity.structure.Structure.java", "BodyUseAPI": [], "Fixed commit": "38cb7c3f324f4cd962af24977ab23be254a87496", "Url": "https://api.github.com/repos/Dakror/Vloxlands", "Date": "2014-09-03T19:02:53Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (drawables != null) { setDrawables(drawables); }else { setDrawables(new int[]{ R.drawable.pl_red, R.drawable.pl_yellow, R.drawable.pl_blue }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8079/buggy-version/library.src.main.java.me.yifeiyuan.library.PeriscopeLayout.java", "BodyUseAPI": ["me.yifeiyuan.library.PeriscopeLayout.setDrawables(android.graphics.drawable.Drawable[])"], "Fixed commit": "c7cc3447bb0c1db5db408ccf05decb5245ffffba", "Url": "https://api.github.com/repos/linchaolong/PeriscopeLayout", "Date": "2017-03-23T07:32:50Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response == null) { response = new org.jbpm.formModeler.service.bb.mvc.controller.responses.ShowScreenResponse(showPage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7426/buggy-version/jbpm-form-modeler-core.jbpm-form-modeler-service.jbpm-form-modeler-request-dispatcher.src.main.java.org.jbpm.formModeler.service.bb.mvc.components.ControllerStatus.java", "BodyUseAPI": [], "Fixed commit": "7564a2787c5f3aefc73a39807d21fed5b95d727f", "Url": "https://api.github.com/repos/droolsjbpm/jbpm-form-modeler", "Date": "2013-05-02T11:47:34Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.walkmod.javalang.ast.body.VariableDeclarator.getInit()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (expr != null) { expr.accept(v, ctx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8868/buggy-version/src.main.java.org.walkmod.deadcodecleaner.visitors.UnusedDefinitionsRemover.java", "BodyUseAPI": ["org.walkmod.javalang.ast.expr.Expression.accept(org.walkmod.javalang.visitors.VoidVisitorAdapter<java.util.Set<org.walkmod.javalang.ast.Node>>,java.util.Set<org.walkmod.javalang.ast.Node>)"], "Fixed commit": "5dc89ea57de7f11665d5309a0b9c3e80aa07e4a8", "Url": "https://api.github.com/repos/walkmod/walkmod-dead-code-cleaner-plugin", "Date": "2015-07-12T13:27:40Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction == 'h') { if ((x + height) <= 9) { canbeplaced = true; java.lang.System.out.println(\"Ok horizontale\"); }else { java.lang.System.out.println(\"erreur horizontale\"); } }else { if ((y + height) <= 9) { canbeplaced = true; java.lang.System.out.println(\"Ok vertical\"); }else { java.lang.System.out.println(\"erreur verticale\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7833/buggy-version/src.main.java.battleShip.Boat.java", "BodyUseAPI": [], "Fixed commit": "5ded56a506cf2e78d1bc57863336cec0e5830c4e", "Url": "https://api.github.com/repos/Maftl/bataillenavale", "Date": "2014-11-04T15:11:33Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getSuperclass()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (superClass == (java.lang.Object.class)) { throw new java.lang.IllegalStateException(((\"Courier not found for \" + (targetClass.getName())) + \". Missing annotations?\")); }else { messenger = me.denley.courier.Courier.findDeliveryBoy(superClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6501/buggy-version/library.src.main.java.me.denley.courier.Courier.java", "BodyUseAPI": ["me.denley.courier.Courier.findDeliveryBoy(java.lang.Class)"], "Fixed commit": "38c3bbe5e57e63e46372a6a38f28546f7cac99e2", "Url": "https://api.github.com/repos/denley/courier", "Date": "2015-03-11T10:13:27Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.mhlz.MIPSInterpreter.Operations.RType.SubUOperation.getReg(de.mhlz.MIPSInterpreter.Operations.RType.SubUOperation)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t2 < 0) { t2 = -t2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/902/buggy-version/src.de.mhlz.MIPSInterpreter.Operations.RType.SubUOperation.java", "BodyUseAPI": [], "Fixed commit": "0d2cf3791bf84ddf3d626c06fd3dd5daf7ce7524", "Url": "https://api.github.com/repos/TheGreatFohl/MIPSAss", "Date": "2014-02-13T17:17:17Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.mhlz.MIPSInterpreter.Operations.RType.SubUOperation.getReg(de.mhlz.MIPSInterpreter.Operations.RType.SubUOperation)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t1 < 0) { t1 = -t1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/902/buggy-version/src.de.mhlz.MIPSInterpreter.Operations.RType.SubUOperation.java", "BodyUseAPI": [], "Fixed commit": "0d2cf3791bf84ddf3d626c06fd3dd5daf7ce7524", "Url": "https://api.github.com/repos/TheGreatFohl/MIPSAss", "Date": "2014-02-13T17:17:17Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (role.equals(\"partner\")) { model.Partener p = new model.Partener(); p.setUserName(u.getUserName()); u.setPartener(p); }else if (role.equals(\"faculty\")) { model.Faculty f = new model.Faculty(); f.setUserName(u.getUserName()); u.setFaculty(f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1001/buggy-version/OOP.src.com.login.SignUpAction.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "41ecf2008a9f8eda75ed06dbbceab21ffcc6c962", "Url": "https://api.github.com/repos/alicextt/OOPProject", "Date": "2014-12-10T03:49:36Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.lucene.document.Document.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (status != null) book.setStatus(com.obourgain.mylib.vobj.Book.BookStatus.valueOf(status));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6744/buggy-version/src.main.java.com.obourgain.mylib.util.search.LuceneSearch.java", "BodyUseAPI": ["com.obourgain.mylib.vobj.Book.setStatus(com.obourgain.mylib.vobj.Book.BookStatus.valueOf(status))", "com.obourgain.mylib.vobj.Book.BookStatus.valueOf(java.lang.String)"], "Fixed commit": "3a5454c528e6a446d17f3211fb02c597cddf824a", "Url": "https://api.github.com/repos/OlivierBourgain/mylib", "Date": "2017-08-21T07:20:22Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.donkirkby.vograbulary.ultraghost.Match.getWinner()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((winner.getName()) != \"You\") { resultText += \"s\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/9158/buggy-version/vograbulary.src.com.github.donkirkby.vograbulary.ultraghost.View.java", "BodyUseAPI": [], "Fixed commit": "406b25154077cea33e04de8e726f6d253937d7cb", "Url": "https://api.github.com/repos/donkirkby/vograbulary", "Date": "2014-04-21T16:09:10Z"},
{"Line": "=>2469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reason.equalsIgnoreCase(\"POISON\")) { if (damage >= (target.getHealth())) { damage = 0; target.setHealth(java.lang.Math.min(target.getHealth(), 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/235/buggy-version/src.sig.plugin.TwosideKeeper.CustomDamage.java", "BodyUseAPI": [], "Fixed commit": "f1cc45e9e501f832a12fda2ab46496a4d3028ac0", "Url": "https://api.github.com/repos/sigonasr2/TwosideKeeper", "Date": "2016-12-14T00:16:43Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stopWordsFile.exists()) { java.io.InputStream stream = org.apache.commons.io.FileUtils.openInputStream(new java.io.File(fileName)); java.util.List<java.lang.String> stopWords = org.apache.commons.io.IOUtils.readLines(stream); for (java.lang.String stopWord : stopWords) { charArraySet.add(stopWord); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1514/buggy-version/wikibrain-lucene.src.main.java.org.wikibrain.lucene.tokenizers.LanguageTokenizer.java", "BodyUseAPI": [], "Fixed commit": "85205538d7c02f710c2f6b8c30330f01d87decbf", "Url": "https://api.github.com/repos/leusonmario/wikibrain", "Date": "2014-05-22T16:31:32Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.uci.ics.crawler4j.frontier.DocIDServer.getNewUnseenDocID(page.redirectedToUrl)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (docid >= 0) { webURL.setDocid(docid); frontier.schedule(webURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3816/buggy-version/src.main.java.edu.uci.ics.crawler4j.crawler.WebCrawler.java", "BodyUseAPI": ["edu.uci.ics.crawler4j.url.WebURL.setDocid(int)"], "Fixed commit": "5ad2b76dc810b6528fb8024830953a942525c983", "Url": "https://api.github.com/repos/EgbertW/crawler4j", "Date": "2015-07-14T12:55:54Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tabManager.getTabGroupCount()) == 0) { loadHome(true); }else if (!(android.text.TextUtils.isEmpty(tabManager.getCurrentTabGroup().getCurrentTab().getSearchWord()))) { loadHome(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4141/buggy-version/app.src.main.java.peter.util.searcher.activity.MainActivity.java", "BodyUseAPI": ["android.text.TextUtils.isEmpty(tabManager.getCurrentTabGroup().getCurrentTab().getSearchWord())", "tabManager.getCurrentTabGroup().getCurrentTab().getSearchWord()", "peter.util.searcher.TabManager.getCurrentTabGroup()", "tabManager.getCurrentTabGroup().getCurrentTab()"], "Fixed commit": "111e098fbdffc49779e7aeb0be922477bd784082", "Url": "https://api.github.com/repos/javalive09/Searcher", "Date": "2017-09-24T14:36:07Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Exam01.IDCard.arr.length) != 18) { throw Exam01.IDCard.Exception; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8997/buggy-version/IDCard.java", "BodyUseAPI": [], "Fixed commit": "08aa22701c0cca4f39cf0fb194eae000c1451e9d", "Url": "https://api.github.com/repos/liulei020/assignment", "Date": "2015-07-18T00:45:43Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) { file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2296/buggy-version/src.com.ubhave.sensormanager.sensors.pull.MicrophoneSensor.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "d0068edab4b04587a7f122ed1b1b0567daeee411", "Url": "https://api.github.com/repos/nlathia/SensorManager", "Date": "2013-02-14T16:37:56Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof java.util.Date) { return ((java.util.Date) (obj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2373/buggy-version/lakeside-core.src.main.java.com.lakeside.core.utils.time.DateFormat.java", "BodyUseAPI": [], "Fixed commit": "4e0ca29e2408e12409e56a3fc85b33c66030bdc0", "Url": "https://api.github.com/repos/houdejun214/lakeside-java", "Date": "2013-12-23T10:01:52Z"},
{"Line": "=>779", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (probabilityCgivenA != 0) sum += (-probabilityCgivenA) * (java.lang.Math.log(probabilityCgivenA));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2734/buggy-version/id3.src.id3.id3.java", "BodyUseAPI": ["java.lang.Math.log(double)"], "Fixed commit": "fbae202c6e68d79eb76589b915fa04fd9be7600c", "Url": "https://api.github.com/repos/alexwareb9/proyecto-id3", "Date": "2017-02-20T01:38:59Z"},
{"Line": "=>880", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((probCandAOver != 0) && (probAOver != 0)) entropyOver += ((-probCandAOver) / probAOver) * (java.lang.Math.log((probCandAOver / probAOver)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2734/buggy-version/id3.src.id3.id3.java", "BodyUseAPI": ["java.lang.Math.log(double)"], "Fixed commit": "fbae202c6e68d79eb76589b915fa04fd9be7600c", "Url": "https://api.github.com/repos/alexwareb9/proyecto-id3", "Date": "2017-02-20T01:38:59Z"},
{"Line": "=>878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((probCandAUnder != 0) && (probAUnder != 0)) entropyUnder += ((-probCandAUnder) / probAUnder) * (java.lang.Math.log((probCandAUnder / probAUnder)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2734/buggy-version/id3.src.id3.id3.java", "BodyUseAPI": ["java.lang.Math.log(double)"], "Fixed commit": "fbae202c6e68d79eb76589b915fa04fd9be7600c", "Url": "https://api.github.com/repos/alexwareb9/proyecto-id3", "Date": "2017-02-20T01:38:59Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((--(limitPullTimes)) == 0) listView.setPullEnabled(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3460/buggy-version/demo.src.main.java.com.jiaminglu.pulltoloadmorelistview.demo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "362443884ecc420bfab4a1c43b6356020000a970", "Url": "https://api.github.com/repos/jiaminglu/PullToLoadMoreListView", "Date": "2015-04-15T11:25:46Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["za.org.grassroot.services.LogBookService.getAllLogBookEntriesForGroup(java.lang.Long,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entries.isEmpty()) { if (doneEntries) { menu = new za.org.grassroot.webapp.controller.ussd.menus.USSDMenu(getMessage(za.org.grassroot.webapp.controller.ussd.USSDLogBookController.thisSection, za.org.grassroot.webapp.controller.ussd.USSDLogBookController.listEntriesMenu, ((promptKey) + \".actioncomplete_noentry\"), user)); }else { menu = new za.org.grassroot.webapp.controller.ussd.menus.USSDMenu(getMessage(za.org.grassroot.webapp.controller.ussd.USSDLogBookController.thisSection, za.org.grassroot.webapp.controller.ussd.USSDLogBookController.listEntriesMenu, ((promptKey) + \".actionincomplete_noentry\"), user)); } menu.addMenuOption(((logMenus) + (za.org.grassroot.webapp.controller.ussd.USSDLogBookController.entryTypeMenu)), getMessage(\"options.back\", user)); menu.addMenuOption(\"exit\", getMessage(\"exit.options\", user)); }else { menu = new za.org.grassroot.webapp.controller.ussd.menus.USSDMenu(getMessage(za.org.grassroot.webapp.controller.ussd.USSDLogBookController.thisSection, za.org.grassroot.webapp.controller.ussd.USSDLogBookController.listEntriesMenu, promptKey, user)); for (za.org.grassroot.core.domain.LogBook entry : entries) { java.lang.String description = ((entry.getMessage().substring(0, 10)) + \"..., due:\") + (dateFormat.format(entry.getActionByDate().toLocalDateTime())); menu.addMenuOption((urlBase + (entry.getId())), description); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/748/buggy-version/grassroot-webapp.src.main.java.za.org.grassroot.webapp.controller.ussd.USSDLogBookController.java", "BodyUseAPI": [], "Fixed commit": "f7c40e83536c8d9805686c3ddfcef012a9d802c2", "Url": "https://api.github.com/repos/PaballoDitshego/grassroot-platform", "Date": "2016-01-13T09:33:24Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (consideredStations.contains(l.getStation())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/777/buggy-version/src.de.misterY.pathfinding.PathFinder.java", "BodyUseAPI": [], "Fixed commit": "136c4de673747f7b35a300b57b205871406bfac0", "Url": "https://api.github.com/repos/Jonicho/MisterY", "Date": "2017-12-29T16:18:13Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message.equals(\"\")) { sender.sendMessage(\"Usage is /midastouch join Welcome back!\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6937/buggy-version/src.main.java.com.laycraftdesign.midastouch.MidasTouch.java", "BodyUseAPI": [], "Fixed commit": "29620436f9b11a1f086cfc77fecec89b82e052ad", "Url": "https://api.github.com/repos/LayCraft/MidasTouch", "Date": "2017-10-12T16:53:11Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message.equals(\"\")) { sender.sendMessage(\"Usage is /midastouch firstjoin Welcome noob!\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6937/buggy-version/src.main.java.com.laycraftdesign.midastouch.MidasTouch.java", "BodyUseAPI": [], "Fixed commit": "29620436f9b11a1f086cfc77fecec89b82e052ad", "Url": "https://api.github.com/repos/LayCraft/MidasTouch", "Date": "2017-10-12T16:53:11Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((placesList.size()) > 0) { this.listViewAdapter.getFilter().filter(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2601/buggy-version/app.src.main.java.com.jeffreysham.hchat.NearbyPlacesActivity.java", "BodyUseAPI": [], "Fixed commit": "464dae7ed3d7e9d0a3c0974d9395154456783e88", "Url": "https://api.github.com/repos/jeffreysham/HChat", "Date": "2016-01-04T20:46:10Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((peopleList.size()) > 0) { this.listViewAdapter.getFilter().filter(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2601/buggy-version/app.src.main.java.com.jeffreysham.hchat.NearbyFriendsActivity.java", "BodyUseAPI": [], "Fixed commit": "464dae7ed3d7e9d0a3c0974d9395154456783e88", "Url": "https://api.github.com/repos/jeffreysham/HChat", "Date": "2016-01-04T20:46:10Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((exfeetable.getAmount()) != (java.math.BigDecimal.ZERO)) { exfeetables.add(exfeetable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7372/buggy-version/src.main.java.com.vn.ael.persistence.manager.TruckingserviceManagerImpl.java", "BodyUseAPI": ["java.util.List<com.vn.ael.persistence.entity.Exfeetable>.add(com.vn.ael.persistence.entity.Exfeetable)"], "Fixed commit": "dcb2c62f5319e1ca12051bb434f5dba001e830d1", "Url": "https://api.github.com/repos/linhrepo/ael", "Date": "2016-03-08T06:18:00Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mode) == 1) guitarFailed = true; else throw new edu.umd.cs.guitar.exception.ComponentNotFound(sWidgetID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/964/buggy-version/src.edu.umd.cs.guitar.replayer.Replayer.java", "BodyUseAPI": [], "Fixed commit": "1dc120094c4306efe6c2639bfcfea61d3330d162", "Url": "https://api.github.com/repos/velliosus/GUIReplayer-Core", "Date": "2011-04-14T01:28:25Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(utente.getCodice_Fiscale().equals(UtenteLoggato.getCodice_Fiscale()))) Box.addItem((((utente.getCognome()) + \" - \") + (utente.getNome())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1364/buggy-version/src.Controller.Compiti.Archivista.java", "BodyUseAPI": ["javax.swing.JComboBox.addItem((((utente.getCognome()) + \"    -    \") + (utente.getNome())))", "Model.Persona.getCognome()", "Model.Persona.getNome()"], "Fixed commit": "5069008462a68d55bb232d054365a215f48afb66", "Url": "https://api.github.com/repos/GiuseppeCannata/ProtezioneCivileGestionale", "Date": "2017-04-01T13:02:13Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { de.jeisfeld.randomimage.util.DialogUtil.displayInfo(this, null, R.string.key_info_display_image, R.string.dialog_info_display_image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/931/buggy-version/RandomImageIdea.randomImageLib.src.main.java.de.jeisfeld.randomimage.DisplayRandomImageActivity.java", "BodyUseAPI": [], "Fixed commit": "05d4cb2d7889eb2aa0b83d683b6c44aa54edceb0", "Url": "https://api.github.com/repos/jeisfeld/RandomImage", "Date": "2015-12-30T21:17:12Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.jeisfeld.randomimage.widgets.ImageWidget.getListName(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (listName == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/931/buggy-version/RandomImageIdea.randomImageLib.src.main.java.de.jeisfeld.randomimage.widgets.ImageWidget.java", "BodyUseAPI": [], "Fixed commit": "05d4cb2d7889eb2aa0b83d683b6c44aa54edceb0", "Url": "https://api.github.com/repos/jeisfeld/RandomImage", "Date": "2015-12-30T21:17:12Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (updateDocument) { new org.xwiki.blobstore.attachments.legacy.internal.transactions.DeleteAttachmentMetaDataTransactionRunnable(xwikiAttachment, xwikiContext).runIn(this); }else { new org.xwiki.blobstore.attachments.legacy.internal.transactions.DeleteAttachmentDataTransactionRunnable(xwikiAttachment.getReference(), blobStoreProvider).runIn(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/495/buggy-version/components.xwiki-platform-cloud.xwiki-platform-cloud-blobstore.xwiki-platform-cloud-blobstore-attachments.src.main.java.org.xwiki.blobstore.attachments.legacy.internal.transactions.DeleteAttachmentTransactionRunnable.java", "BodyUseAPI": [], "Fixed commit": "92f8ed0ef274a3c15fdad286c8d4e2585ae2def4", "Url": "https://api.github.com/repos/hms-dbmi/phenotips", "Date": "2015-06-02T17:54:14Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((org.osgi.framework.Bundle.ACTIVE) & (framework.getState())) != 0) { final org.osgi.framework.startlevel.FrameworkStartLevel fsl = framework.adapt(org.osgi.framework.startlevel.FrameworkStartLevel.class); if (fsl != null) { fsl.setStartLevel(n); } }else { error((\"Startlevel command not available before framework started.\\n\" + \"Use property 'org.osgi.framework.startlevel.beginning' instead\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2703/buggy-version/osgi.framework.src.org.knopflerfish.framework.Main.java", "BodyUseAPI": ["org.osgi.framework.launch.Framework.adapt(java.lang.Class)"], "Fixed commit": "47e67d6f68c50bb6503d41fb7be2797d378517b9", "Url": "https://api.github.com/repos/knopflerfish/knopflerfish.org", "Date": "2016-06-30T11:18:29Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(f.delete())) { com.haskins.cloudtrailviewer.feature.GeoDataFeature.LOGGER.log(java.util.logging.Level.WARNING, \"Failed to delete existing Geo HTML file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1928/buggy-version/src.main.java.com.haskins.cloudtrailviewer.feature.GeoDataFeature.java", "BodyUseAPI": [], "Fixed commit": "c3a9d4e78b71b6adbde6f9b147204d898615adc8", "Url": "https://api.github.com/repos/githublemming/CloudTrailViewer", "Date": "2016-01-24T10:48:00Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cost < amtgivin) { change = amtgivin - cost; project.changemaker.calculator(change); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6329/buggy-version/src.project.changemaker.java", "BodyUseAPI": [], "Fixed commit": "21463cea0f8d5ec51a606d8f198734525e5769a0", "Url": "https://api.github.com/repos/JakePaul787/MakeChangeProject", "Date": "2017-06-04T23:06:52Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLayoutParams().height) == (WRAP_CONTENT)) { super.setMeasuredDimension(getMeasuredWidth(), (((mContent.getMeasuredHeight()) + (lp.topMargin)) + (lp.bottomMargin))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4097/buggy-version/ptr-lib.src.main.java.in.srain.cube.views.ptr.PtrFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "8cba51741737c6a60ee47152141d3690595b2827", "Url": "https://api.github.com/repos/captainbupt/android-Ultra-Pull-To-Refresh-With-Load-More", "Date": "2016-08-24T04:28:55Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.getOriginalFilename().equals(\"\")) { return new org.springframework.web.servlet.ModelAndView((\"redirect:\" + \"account\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1993/buggy-version/src.main.java.com.schweizerischebundesbahnen.restcontroller.LoadImageController.java", "BodyUseAPI": [], "Fixed commit": "f59aef47cac6a3e04782aa51ccdfd23728252414", "Url": "https://api.github.com/repos/AlexanderPrendota/Schweizerische-Bundesbahnen", "Date": "2017-05-22T07:38:48Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hc.isAlive())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4760/buggy-version/core.src.com.mygdx.game.entities.Enemy.java", "BodyUseAPI": [], "Fixed commit": "e05eb175b07bf6ad3de40044cca3521e024c4a2b", "Url": "https://api.github.com/repos/Darkfafi/PvB", "Date": "2017-05-10T20:56:43Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3506/buggy-version/src.common.ro.narc.liquiduu.SlotUUM.java", "BodyUseAPI": [], "Fixed commit": "5d45b216a112a81aab745e1365c0cde790c1ec7e", "Url": "https://api.github.com/repos/narc0tiq/LiquidUU", "Date": "2012-11-16T14:27:59Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (path != null) { dialogTree.expandPath(path); dialogTree.addSelectionPath(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3059/buggy-version/infinity.resource.dlg.Viewer.java", "BodyUseAPI": ["javax.swing.JTree.expandPath(javax.swing.tree.TreePath)", "javax.swing.JTree.addSelectionPath(javax.swing.tree.TreePath)"], "Fixed commit": "32e786279fdcfb1e82864deb45283e9fcca99706", "Url": "https://api.github.com/repos/Jurgen00/NearInfinity", "Date": "2012-05-19T14:36:55Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getBlob(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (blob == null) { byteArray = null; }else { byteArray = blob.getBytes(1, ((int) (blob.length()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2966/buggy-version/src.java.models.user.java", "BodyUseAPI": ["java.sql.Blob.getBytes(int,long)", "java.sql.Blob.length()"], "Fixed commit": "bbad5fc2dd7b33aa42f89445d054e94c3f2a1a48", "Url": "https://api.github.com/repos/AgileUODGroup2/sprint1", "Date": "2017-03-19T23:29:26Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.user.getProfileImage(boolean,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (byteArray == null) { response.sendRedirect(((request.getContextPath()) + \"/pic1.png\")); }else { response.setContentType(\"image\"); java.io.OutputStream os = response.getOutputStream(); os.write(byteArray); os.flush(); os.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2966/buggy-version/src.java.servlets.DisplayImage.java", "BodyUseAPI": ["java.io.OutputStream.write(byte[])"], "Fixed commit": "bbad5fc2dd7b33aa42f89445d054e94c3f2a1a48", "Url": "https://api.github.com/repos/AgileUODGroup2/sprint1", "Date": "2017-03-19T23:29:26Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Login.MyAuthenticator.tries) == 0) { (Login.MyAuthenticator.tries)++; return new java.net.PasswordAuthentication(Login.username, Login.password.toCharArray()); }else { throw new java.lang.IndexOutOfBoundsException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/618/buggy-version/src.main.java.Login.java", "BodyUseAPI": [], "Fixed commit": "6ce5336b05d75178326269b234c95b446c00b804", "Url": "https://api.github.com/repos/PEACSC590/server", "Date": "2016-10-21T03:50:21Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (xsdOrDtdLocation == null) { xsdOrDtdLocation = this.getClass().getResource((((xmlSchemaHomeDir) + (org.betaconceptframework.astroboa.util.CmsConstants.FORWARD_SLASH)) + xsdOrDtdFilename)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4659/buggy-version/astroboa-model.src.main.java.org.betaconceptframework.astroboa.configuration.W3CRelatedSchemaEntityResolver.java", "BodyUseAPI": [], "Fixed commit": "76d723dbafc1c03ef1d98e2b98f1e1a2e89b155c", "Url": "https://api.github.com/repos/BetaCONCEPT/astroboa", "Date": "2011-12-17T22:36:31Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<net.ld.library.screenmanager.Screen>.get(((mScreensToUpdate.size()) - 1))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(lScreen.isPopup())) { lCoveredByOtherScreen = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8629/buggy-version/src.net.ld.library.screenmanager.ScreenManager.java", "BodyUseAPI": [], "Fixed commit": "36cb9801372419230abcf320628de8aef7efb6fe", "Url": "https://api.github.com/repos/LintfordPickle/LintfordLib", "Date": "2016-12-09T20:21:10Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isGroupFiles())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1969/buggy-version/components.formats-bsd.src.loci.formats.in.MicromanagerReader.java", "BodyUseAPI": [], "Fixed commit": "52ff95dc39c6b966f03dfbefab92a67c7e7b7d11", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-03-25T03:47:42Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.FormatReader.isThisType(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valid && (!(isGroupFiles()))) { try { return isSingleFile(metaFile); } catch (java.lang.Exception e) { loci.formats.in.LOGGER.debug(\"\", e); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1969/buggy-version/components.formats-bsd.src.loci.formats.in.OMETiffReader.java", "BodyUseAPI": [], "Fixed commit": "52ff95dc39c6b966f03dfbefab92a67c7e7b7d11", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-03-25T03:47:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n.getText().trim().equals(\"\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5636/buggy-version/src.main.java.ca.nines.ise.validator.SectionCoverageValidator.java", "BodyUseAPI": [], "Fixed commit": "ce759ee47d2f91ea6d17cb345001e22483122beb", "Url": "https://api.github.com/repos/emmental/isetools", "Date": "2016-03-09T22:23:44Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((accountNumberFormat != null) && ((accountNumberFormat.getZeroPadding()) != null)) { maxLength = accountNumberFormat.getZeroPadding(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8967/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.client.domain.AccountNumberGenerator.java", "BodyUseAPI": ["org.mifosplatform.infrastructure.accountnumberformat.domain.AccountNumberFormat.getZeroPadding()"], "Fixed commit": "21b45e2d8f2bae7de3762388db1d55815fa2f85b", "Url": "https://api.github.com/repos/Musoni/mifosx", "Date": "2015-09-29T13:47:50Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.atlasapi.remotesite.bbc.nitro.NitroScheduleDayUpdater.getSid(channelDay.getChannel())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (serviceId == null) { return new com.metabroadcast.common.scheduling.UpdateProgress(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1059/buggy-version/src.main.java.org.atlasapi.remotesite.bbc.nitro.NitroScheduleDayUpdater.java", "BodyUseAPI": [], "Fixed commit": "21d73b7b3f3f77265a7af889d2cfc3a5a572ff06", "Url": "https://api.github.com/repos/atlasapi/atlas", "Date": "2016-06-14T14:01:26Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getShooterCreator()) != null) && (ball.intersects(getShooterCreator().getShooter()))) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6828/buggy-version/src.be.howest.groep5.breakout.model.game.Ball.java", "BodyUseAPI": [], "Fixed commit": "2f104db9d98841b2dcf402dcf055592e0bff9c37", "Url": "https://api.github.com/repos/KennyDeblaere/Breakout", "Date": "2014-12-19T00:19:54Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetEl instanceof kroki.profil.property.VisibleProperty) { kroki.profil.property.VisibleProperty prop = ((kroki.profil.property.VisibleProperty) (targetEl)); if ((prop.umlClass()) != null) prop.setUmlClass(visibleClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1512/buggy-version/KrokiMockupTool.src.kroki.app.command.PasteCommand.java", "BodyUseAPI": [], "Fixed commit": "12e77f24f1d3cbb8b41675231aff54189b32fc2e", "Url": "https://api.github.com/repos/KROKIteam/KROKI-mockup-tool", "Date": "2014-11-21T14:02:12Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (el instanceof kroki.profil.property.VisibleProperty) { kroki.profil.property.VisibleProperty prop = ((kroki.profil.property.VisibleProperty) (el)); prop.setUmlClass(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1512/buggy-version/KrokiMockupTool.src.kroki.app.command.PasteCommand.java", "BodyUseAPI": [], "Fixed commit": "12e77f24f1d3cbb8b41675231aff54189b32fc2e", "Url": "https://api.github.com/repos/KROKIteam/KROKI-mockup-tool", "Date": "2014-11-21T14:02:12Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (in.hasRemaining()) { additionals.add(org.captainunlikely.zeroconf.Record.readAnswer(in)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4868/buggy-version/src.org.captainunlikely.zeroconf.Packet.java", "BodyUseAPI": ["java.util.List<org.captainunlikely.zeroconf.Record>.add(org.captainunlikely.zeroconf.Record.readAnswer(in))", "org.captainunlikely.zeroconf.Record.readAnswer(java.nio.ByteBuffer)"], "Fixed commit": "2547bb2df243c1bc71ccaac1177dac048805ff6f", "Url": "https://api.github.com/repos/wws22/cu-zeroconf", "Date": "2017-12-22T18:00:14Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (in.hasRemaining()) { answers.add(org.captainunlikely.zeroconf.Record.readAnswer(in)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4868/buggy-version/src.org.captainunlikely.zeroconf.Packet.java", "BodyUseAPI": ["java.util.List<org.captainunlikely.zeroconf.Record>.add(org.captainunlikely.zeroconf.Record.readAnswer(in))", "org.captainunlikely.zeroconf.Record.readAnswer(java.nio.ByteBuffer)"], "Fixed commit": "2547bb2df243c1bc71ccaac1177dac048805ff6f", "Url": "https://api.github.com/repos/wws22/cu-zeroconf", "Date": "2017-12-22T18:00:14Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (in.hasRemaining()) { authorities.add(org.captainunlikely.zeroconf.Record.readAnswer(in)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4868/buggy-version/src.org.captainunlikely.zeroconf.Packet.java", "BodyUseAPI": ["org.captainunlikely.zeroconf.Record.readAnswer(java.nio.ByteBuffer)", "java.util.List<org.captainunlikely.zeroconf.Record>.add(org.captainunlikely.zeroconf.Record.readAnswer(in))"], "Fixed commit": "2547bb2df243c1bc71ccaac1177dac048805ff6f", "Url": "https://api.github.com/repos/wws22/cu-zeroconf", "Date": "2017-12-22T18:00:14Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.horeca.MySqliteHelper.getWritableDatabase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (null == (com.horeca.Commande.createCommande(db, plat, new java.util.GregorianCalendar(commande_date.getYear(), commande_date.getMonth(), commande_date.getDayOfMonth(), commande_time.getCurrentHour(), commande_time.getCurrentMinute()).getTime(), nombre))) { android.widget.Toast.makeText(this, R.string.used_command_date, Toast.LENGTH_SHORT).show(); }else { refreshStock(db); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8484/buggy-version/src.com.horeca.PlatActivity.java", "BodyUseAPI": ["com.horeca.PlatActivity.refreshStock(android.database.sqlite.SQLiteDatabase)"], "Fixed commit": "b55a04572bdf094b771321a0399e13ce24ce3cfe", "Url": "https://api.github.com/repos/blegat/Horeca", "Date": "2013-05-15T08:09:06Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.insert(HorecaContract.Commande.TABLE_NAME,<nulltype>,android.content.ContentValues)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (-1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8484/buggy-version/src.com.horeca.Commande.java", "BodyUseAPI": [], "Fixed commit": "b55a04572bdf094b771321a0399e13ce24ce3cfe", "Url": "https://api.github.com/repos/blegat/Horeca", "Date": "2013-05-15T08:09:06Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.wanghaomiao.xpath.core.XpathEvaluator.getXpathNodeTree(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == ((xpathNodes.size()) - 1)) { for (org.jsoup.nodes.Element e : contextTmp) { res.add(cn.wanghaomiao.xpath.model.JXNode.e(e)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7118/buggy-version/src.main.java.cn.wanghaomiao.xpath.core.XpathEvaluator.java", "BodyUseAPI": [], "Fixed commit": "30bc42695f88055cd3a69b276d2c876b298c1273", "Url": "https://api.github.com/repos/zhegePATHohuozi/JsoupXpath", "Date": "2016-06-14T15:42:48Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intX < 0) intX = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2006/buggy-version/src.worms.model.World.java", "BodyUseAPI": [], "Fixed commit": "49ab2b31f8994e13dc3183cb7aac69b13d6c0e38", "Url": "https://api.github.com/repos/WormsRepository/ProjectThree", "Date": "2014-05-11T08:30:45Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intY < 0) intY = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2006/buggy-version/src.worms.model.World.java", "BodyUseAPI": [], "Fixed commit": "49ab2b31f8994e13dc3183cb7aac69b13d6c0e38", "Url": "https://api.github.com/repos/WormsRepository/ProjectThree", "Date": "2014-05-11T08:30:45Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cc.alcina.framework.common.client.util.CommonUtils.isNullOrEmpty(displayName)) { return cc.alcina.framework.common.client.util.CommonUtils.simpleClassName(getClass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3173/buggy-version/framework.common.src.cc.alcina.framework.common.client.search.SearchCriterion.java", "BodyUseAPI": [], "Fixed commit": "b4b7b1a2fe4ebe9ef7e36f95b8aeec0b664c3308", "Url": "https://api.github.com/repos/nevella/alcina", "Date": "2015-11-11T03:49:04Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<com.liferay.portlet.social.model.SocialActivityInterpreter>>.get(activityInterpreter.getSelector())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (activityInterpreters == null) { activityInterpreters = new java.util.ArrayList<com.liferay.portlet.social.model.SocialActivityInterpreter>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/720/buggy-version/portal-impl.src.com.liferay.portlet.social.service.impl.SocialActivityInterpreterLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "de0ff6c0296cd30d9d204f3668b9824e5ed88839", "Url": "https://api.github.com/repos/natecavanaugh/liferay-portal", "Date": "2013-03-07T20:11:28Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { sb.append(\"null\").append(\"\\n\"); return sb.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1823/buggy-version/sztools.java.com.google.code.vimsztool.debug.eval.ExpEval.java", "BodyUseAPI": [], "Fixed commit": "9c483be4e73fe50f8a837d4ad32a161edd9485d6", "Url": "https://api.github.com/repos/shrekwang/vim-sztool", "Date": "2013-04-27T07:45:10Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gelakinetic.mtgfam.helpers.CardHelpers.makeMtgCard(getContext(),java.lang.String,<nulltype>,boolean,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (card == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4471/buggy-version/mobile.src.main.java.com.gelakinetic.mtgfam.fragments.TradeFragment.java", "BodyUseAPI": [], "Fixed commit": "015226bed4521d1229c9cb7686ef615174a72b9e", "Url": "https://api.github.com/repos/AEFeinstein/mtg-familiar", "Date": "2017-11-02T01:02:31Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gelakinetic.mtgfam.helpers.CardHelpers.makeMtgCard(getContext(),java.lang.String,<nulltype>,mCheckboxFoil.isChecked(),int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (card == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4471/buggy-version/mobile.src.main.java.com.gelakinetic.mtgfam.fragments.DecklistFragment.java", "BodyUseAPI": [], "Fixed commit": "015226bed4521d1229c9cb7686ef615174a72b9e", "Url": "https://api.github.com/repos/AEFeinstein/mtg-familiar", "Date": "2017-11-02T01:02:31Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 0) { }else { NUM_ELEMENTS += NUM_ELEMENTS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8755/buggy-version/src.Sort.java", "BodyUseAPI": [], "Fixed commit": "b6c46ee25a57e0b647806460a7687f76a9496c9f", "Url": "https://api.github.com/repos/emilyttran/Sorting-Algo-Lab", "Date": "2017-11-29T01:14:08Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tblDesc.isView())) { x.getLOG().debug(\"adding dependent CopyWork/MoveWork for table\"); t.addDependentTask(org.apache.hadoop.hive.ql.parse.ImportSemanticAnalyzer.loadTable(fromURI, table, true, new org.apache.hadoop.fs.Path(tblDesc.getLocation()), replicationSpec, x)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4843/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.parse.ImportSemanticAnalyzer.java", "BodyUseAPI": ["org.apache.hadoop.hive.ql.exec.Task.addDependentTask(org.apache.hadoop.hive.ql.exec.Task<?>)", "org.apache.hadoop.hive.ql.plan.ImportTableDesc.getLocation()", "org.apache.hadoop.hive.ql.parse.ImportSemanticAnalyzer.loadTable(java.net.URI,org.apache.hadoop.hive.ql.metadata.Table,boolean,org.apache.hadoop.fs.Path,org.apache.hadoop.hive.ql.parse.ReplicationSpec,EximUtil.SemanticAnalyzerWrapperContext)"], "Fixed commit": "5750a715bb889fc02d0c0493ef73ebf9c5d2c862", "Url": "https://api.github.com/repos/sankarh/hive", "Date": "2017-03-06T11:49:17Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.LOLLIPOP)) { mSwitch = ((android.support.v7.widget.SwitchCompat) (findViewById(R.id.switch1))); }else { mSwitch = ((android.widget.Switch) (findViewById(R.id.switch2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/219/buggy-version/app.src.main.java.com.kdb.ledcontrol.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1dd1383d15a317508267e4cbfddb4d4d1bd42833", "Url": "https://api.github.com/repos/KDB223/LEDControl", "Date": "2015-02-08T21:12:31Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.dbdeploy.AntTarget.createUndoOutputPrintStream(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (undoOutputPrintStream != null) { undoOutputPrintStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/511/buggy-version/dbdeploy.src.java.net.sf.dbdeploy.AntTarget.java", "BodyUseAPI": ["java.io.PrintStream.close()"], "Fixed commit": "541342ffb14cc5db69d72bbc84a670522401ecda", "Url": "https://api.github.com/repos/sudr/dbdeploy", "Date": "2007-01-09T15:28:45Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.youtube.player.YouTubeInitializationResult.getErrorDialog(io.github.sidvenu.saltanalysis.DisplayRadicalActivity,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (errorDialog != null) errorDialog.show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8130/buggy-version/app.src.main.java.io.github.sidvenu.saltanalysis.DisplayRadicalActivity.java", "BodyUseAPI": ["android.app.Dialog.show()"], "Fixed commit": "da5592a2a7a19e3a798c8ba339cdceaef534544d", "Url": "https://api.github.com/repos/sidvenu/SaltAnalysis", "Date": "2017-10-23T12:32:16Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jb.dva.SoundLibrary.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ref.regular) == null) { if ((ref.rising) != null) u = ref.rising; else u = ref.falling; }else { u = ref.regular; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6291/buggy-version/jb.dva.Script.java", "BodyUseAPI": [], "Fixed commit": "ee70bb18f8a2ee6b3b39a6d4a1d121e7ce18ea5e", "Url": "https://api.github.com/repos/jaboles/DVA5", "Date": "2017-08-20T21:51:04Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isProgressShow()) && ((mProgressLoading) != null)) { dismissProgressLoading(); mProgressLoading = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6325/buggy-version/laputapp.src.main.java.com.laputapp.ui.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "50fb72e63e20644d4dc5e4dacc06ec9bc701ef6c", "Url": "https://api.github.com/repos/yangyugang/laputapp", "Date": "2015-02-06T08:13:53Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gg.school) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6122/buggy-version/app.src.main.java.de.gebatzens.sia.GGBroadcast.java", "BodyUseAPI": [], "Fixed commit": "cd8805a8d668199211e4579375607140b0e342ba", "Url": "https://api.github.com/repos/Cedgetec/SchulinfoApp-android", "Date": "2016-08-21T13:34:57Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(name.equals(\"init\"))) && (!(name.equals(\"dispose\")))) this.storage = removeNSROOTConfig(storage); else this.storage = storage;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7822/buggy-version/dev.cosbench-config.src.com.intel.cosbench.config.Stage.java", "BodyUseAPI": [], "Fixed commit": "8025ea70752bfeaebcc79ecd062d42cf5b519bb4", "Url": "https://api.github.com/repos/intel-cloud/cosbench", "Date": "2013-09-17T20:09:26Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (after != null) { after.before = before; entry = after; }else { if ((head) == entry) { head = entry.before; } entry = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1147/buggy-version/src.main.java.ch.mimo.netty.handler.codec.icap.IcapHeaders.java", "BodyUseAPI": [], "Fixed commit": "466f7ee30100b520c80a00408a7dc3ef5e34f693", "Url": "https://api.github.com/repos/fabiogermann/netty-icap", "Date": "2012-12-19T04:09:38Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (taxiID.equals(\"\")) { tripVehicle = this.getNearestReadyVehicle(vehicles); distanceToClient = userPos.distanceTo(tripVehicle.getPosition()); distanceToDest = userPos.getPosition().distanceTo(destPos); totalDistance = distanceToClient + distanceToDest; timeToClient = tripVehicle.getTripTime(distanceToClient); timeToDest = tripVehicle.getTripTime(distanceToDest); totalTime = timeToClient + timeToDest; tripPrice = tripVehicle.getTripPrice(totalDistance); }else { tripVehicle = this.getSpecificVehicle(vehicles, taxiID); distanceToClient = userPos.distanceTo(tripVehicle.getPosition()); distanceToDest = userPos.getPosition().distanceTo(destPos); totalDistance = distanceToClient + distanceToDest; timeToClient = tripVehicle.getTripTime(distanceToClient); timeToDest = tripVehicle.getTripTime(distanceToDest); totalTime = timeToClient + timeToDest; tripPrice = tripVehicle.getTripPrice(totalDistance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7944/buggy-version/Client.java", "BodyUseAPI": ["Client.getSpecificVehicle(java.util.ArrayList<Vehicle>,java.lang.String)"], "Fixed commit": "9c74c59b4e62245958ca54299747bb4b192bd47b", "Url": "https://api.github.com/repos/marcospgp/umer-poo-1617", "Date": "2017-04-26T18:22:23Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sid != null) object.addProperty(\"parent_call_sid\", sid.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/985/buggy-version/restcomm.core.src.main.java.org.mobicents.servlet.sip.restcomm.http.converter.CallDetailRecordConverter.java", "BodyUseAPI": ["org.mobicents.servlet.sip.restcomm.Sid.toString()", "com.google.gson.JsonObject.addProperty(java.lang.String,sid.toString())"], "Fixed commit": "953959bb90add97724e81df8a968b0eddb4621d6", "Url": "https://api.github.com/repos/Mobicents/RestComm", "Date": "2012-09-19T12:14:07Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (startTime != null) object.addProperty(\"start_time\", startTime.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/985/buggy-version/restcomm.core.src.main.java.org.mobicents.servlet.sip.restcomm.http.converter.CallDetailRecordConverter.java", "BodyUseAPI": ["org.joda.time.DateTime.toString()", "com.google.gson.JsonObject.addProperty(java.lang.String,startTime.toString())"], "Fixed commit": "953959bb90add97724e81df8a968b0eddb4621d6", "Url": "https://api.github.com/repos/Mobicents/RestComm", "Date": "2012-09-19T12:14:07Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (endTime != null) object.addProperty(\"end_time\", endTime.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/985/buggy-version/restcomm.core.src.main.java.org.mobicents.servlet.sip.restcomm.http.converter.CallDetailRecordConverter.java", "BodyUseAPI": ["org.joda.time.DateTime.toString()", "com.google.gson.JsonObject.addProperty(java.lang.String,endTime.toString())"], "Fixed commit": "953959bb90add97724e81df8a968b0eddb4621d6", "Url": "https://api.github.com/repos/Mobicents/RestComm", "Date": "2012-09-19T12:14:07Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sid != null) object.addProperty(\"phone_number_sid\", sid.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/985/buggy-version/restcomm.core.src.main.java.org.mobicents.servlet.sip.restcomm.http.converter.CallDetailRecordConverter.java", "BodyUseAPI": ["org.mobicents.servlet.sip.restcomm.Sid.toString()", "com.google.gson.JsonObject.addProperty(java.lang.String,sid.toString())"], "Fixed commit": "953959bb90add97724e81df8a968b0eddb4621d6", "Url": "https://api.github.com/repos/Mobicents/RestComm", "Date": "2012-09-19T12:14:07Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ucdenver.ccp.common.download.DownloadUtil.unpackFile(java.io.File,boolean,java.io.File,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (unpackedFile != null) { edu.ucdenver.ccp.common.download.DownloadUtil.writeReadySemaphoreFile(unpackedFile, url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3104/buggy-version/src.main.java.edu.ucdenver.ccp.common.download.DownloadUtil.java", "BodyUseAPI": ["edu.ucdenver.ccp.common.download.DownloadUtil.writeReadySemaphoreFile(java.io.File,java.net.URL)"], "Fixed commit": "663a6d1889c6dddd8a2eff4e4a48500579736bb3", "Url": "https://api.github.com/repos/callahantiff/common", "Date": "2017-06-21T15:32:34Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sourceBitmap != null) { canvas.drawBitmap(sourceBitmap, new android.graphics.Rect(0, 0, sourceBitmap.getWidth(), sourceBitmap.getHeight()), new android.graphics.Rect(0, 0, targetWidth, targetHeight), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/25/buggy-version/app.src.main.java.com.kavi.droid.exchange.services.imageLoader.ImageLoadingManager.java", "BodyUseAPI": ["android.graphics.Bitmap.getWidth()", "android.graphics.Canvas.drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,<nulltype>)", "android.graphics.Bitmap.getHeight()"], "Fixed commit": "eb74ff7d1532b952def1c86070a66fbbaa10c472", "Url": "https://api.github.com/repos/kavi707/Exchange-T", "Date": "2017-12-03T14:26:37Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message instanceof cn.ieclipse.smartqq.Message) { target = getClient().getFriend(message.getUserId()); }else if (message instanceof cn.ieclipse.smartqq.GroupMessage) { target = getClient().getGroup(((cn.ieclipse.smartqq.GroupMessage) (message)).getGroupId()); }else if (message instanceof cn.ieclipse.smartqq.DiscussMessage) { target = getClient().getDiscuss(((cn.ieclipse.smartqq.DiscussMessage) (message)).getDiscussId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/59/buggy-version/src.cn.ieclipse.smartqq.SmartQQWindow.java", "BodyUseAPI": ["cn.ieclipse.smartqq.DefaultMessage.getUserId()", "com.scienjus.smartqq.client.SmartClient.getFriend(message.getUserId())"], "Fixed commit": "f42f6f45ed976bf19fd427702b657ab9a16522a4", "Url": "https://api.github.com/repos/Jamling/SmartQQ4IntelliJ", "Date": "2017-07-06T09:16:14Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.lapismc.lapislogin.LapisLogin.getLoginPlayer(e.getPlayer().getUniqueId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((loginPlayer.registrationRequired) || (loginPlayer.isRegistered())) && (!(loginPlayer.isLoggedIn()))) { e.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1300/buggy-version/src.main.java.net.lapismc.lapislogin.LapisLoginListeners.java", "BodyUseAPI": [], "Fixed commit": "e26d789c6f966f710d3e88a6b2d3b48aa5b865f9", "Url": "https://api.github.com/repos/LapisPlugins/LapisLogin", "Date": "2017-11-10T05:57:17Z"},
{"Line": "=>674", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.broadleafcommerce.core.offer.service.discount.domain.PromotableOrderItem>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nextItem.getDelegate().getBundleOrderItem()) == null) { if (mySplits.contains(nextItem)) { mySplits.remove(nextItem); }else { itemsToRemove.add(nextItem); delegatesToRemove.add(nextItem.getDelegate()); } }else { itemsToRemove.add(nextItem); delegatesToRemove.add(nextItem.getDelegate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5256/buggy-version/core.broadleaf-framework.src.main.java.org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorImpl.java", "BodyUseAPI": ["java.util.List<org.broadleafcommerce.core.order.domain.DiscreteOrderItem>.add(nextItem.getDelegate())", "java.util.List<org.broadleafcommerce.core.offer.service.discount.domain.PromotableOrderItem>.add(org.broadleafcommerce.core.offer.service.discount.domain.PromotableOrderItem)", "org.broadleafcommerce.core.offer.service.discount.domain.PromotableOrderItem.getDelegate()", "java.util.List<org.broadleafcommerce.core.order.domain.DiscreteOrderItem>.add(nextItem.getDelegate())", "java.util.List<org.broadleafcommerce.core.offer.service.discount.domain.PromotableOrderItem>.contains(org.broadleafcommerce.core.offer.service.discount.domain.PromotableOrderItem)", "org.broadleafcommerce.core.offer.service.discount.domain.PromotableOrderItem.getDelegate()", "java.util.List<org.broadleafcommerce.core.offer.service.discount.domain.PromotableOrderItem>.add(org.broadleafcommerce.core.offer.service.discount.domain.PromotableOrderItem)", "java.util.List<org.broadleafcommerce.core.offer.service.discount.domain.PromotableOrderItem>.remove(org.broadleafcommerce.core.offer.service.discount.domain.PromotableOrderItem)"], "Fixed commit": "eb12f171f851a16ad06daed66005e1c58f4f4997", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2012-06-06T16:32:53Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.inner().addressSpace()) == null) { this.inner().withAddressSpace(new com.microsoft.azure.management.network.AddressSpace()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5814/buggy-version/azure-mgmt-network.src.main.java.com.microsoft.azure.management.network.implementation.NetworkImpl.java", "BodyUseAPI": [], "Fixed commit": "cc8349bf57f46ae1eef015c4313a584e5a5d8045", "Url": "https://api.github.com/repos/jianghaolu/azure-sdk-for-java", "Date": "2016-09-29T21:22:56Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.inner().addressSpace().addressPrefixes()) == null) { this.inner().addressSpace().withAddressPrefixes(new java.util.ArrayList<java.lang.String>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5814/buggy-version/azure-mgmt-network.src.main.java.com.microsoft.azure.management.network.implementation.NetworkImpl.java", "BodyUseAPI": [], "Fixed commit": "cc8349bf57f46ae1eef015c4313a584e5a5d8045", "Url": "https://api.github.com/repos/jianghaolu/azure-sdk-for-java", "Date": "2016-09-29T21:22:56Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!readAllItems) { deletedCondition = (\" AND \" + (fr.vpm.audiorss.rss.RSSItem.DELETED_KEY)) + \"=0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3693/buggy-version/app.src.main.java.fr.vpm.audiorss.db.DbRSSChannel.java", "BodyUseAPI": [], "Fixed commit": "20dce1650cd92ae3d5c91e717e10147809812e26", "Url": "https://api.github.com/repos/vpmalley/radiofeedz", "Date": "2014-11-15T03:23:24Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((profile) != null) { if ((profileBitmap) == null) { byte[] image = profilePhoto.getImageData(); profileBitmap = android.graphics.BitmapFactory.decodeByteArray(image, 0, image.length); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8111/buggy-version/Habiture.app.src.main.java.com.habiture.HabitureModule.java", "BodyUseAPI": [], "Fixed commit": "01b40de48deb503c2b5dcab39dfaa350a70031cd", "Url": "https://api.github.com/repos/tp26610/ntut-slm-Habiture", "Date": "2015-05-25T02:24:04Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lesson1.getCourse().getSemester()) != (lesson2.getCourse().getSemester())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5986/buggy-version/src.schedule.builder.algorithm.ConflictCounter.java", "BodyUseAPI": [], "Fixed commit": "5bb1783e1c14a1cb7cc400837db4a72548698a98", "Url": "https://api.github.com/repos/gdadon/SchedulerBuilder", "Date": "2017-05-05T16:36:38Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.thindroid.annotations.AnnotationResolver.getResolver(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((scheduleResolver.getManagedElements().length) > 0) { java.lang.reflect.Method[] managedMethods = scheduleResolver.getManagedElements(); java.util.List<java.lang.reflect.Method> managedClassesList = new java.util.ArrayList<>(java.util.Arrays.asList(managedMethods)); try { managedClassesList.add(br.com.thindroid.commons.log.nativelogs.LogColetorReceiver.class.getMethod(\"register\")); } catch (java.lang.NoSuchMethodException e) { throw new java.lang.RuntimeException(e); } for (java.lang.reflect.Method method : managedClassesList) { checkMethodTask(method); } removeAlarmsRunning(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3807/buggy-version/commons.src.main.java.br.com.thindroid.commons.scheduler.Scheduler.java", "BodyUseAPI": ["br.com.thindroid.annotations.AnnotationResolver.getManagedElements()"], "Fixed commit": "c991e9734cfc83808ddcc47a88f9bd5b1cd1ac8d", "Url": "https://api.github.com/repos/carlosearaujo/ThinDroid", "Date": "2016-07-23T22:59:38Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.creativemd.opf.little.LittleOpFrame.getTileEntity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(frame.isTextureLoaded())) frame.loadTexutre();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/846/buggy-version/src.main.java.com.creativemd.opf.little.LittleOpFrame.java", "BodyUseAPI": ["com.creativemd.opf.block.TileEntityPicFrame.loadTexutre()"], "Fixed commit": "3bacefa59dc07822fee4dac2386560be0b0c006e", "Url": "https://api.github.com/repos/CreativeMD/OnlinePictureFrame", "Date": "2017-02-20T10:11:09Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(set.next())) return lastRestart;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5649/buggy-version/src.com.untamedears.PrisonPearl.database.PrisonPearlMysqlStorage.java", "BodyUseAPI": [], "Fixed commit": "daa461e6ea9a083df98d1c408e0a6a80061b251d", "Url": "https://api.github.com/repos/Civcraft/PrisonPearl", "Date": "2015-09-14T16:45:10Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msgContext.getProperty(org.wso2.carbon.core.multitenancy.transports.TenantTransportSender.REQUEST_HOST_HEADER)) != null) { superTenantOutMessageContext.setProperty(org.wso2.carbon.core.multitenancy.transports.TenantTransportSender.REQUEST_HOST_HEADER, msgContext.getProperty(org.wso2.carbon.core.multitenancy.transports.TenantTransportSender.REQUEST_HOST_HEADER)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7781/buggy-version/core.org.wso2.carbon.core.src.main.java.org.wso2.carbon.core.multitenancy.transports.TenantTransportSender.java", "BodyUseAPI": ["org.wso2.carbon.core.multitenancy.transports.MessageContext.getProperty(java.lang.String)", "org.wso2.carbon.core.multitenancy.transports.MessageContext.setProperty(java.lang.String,msgContext.getProperty(org.wso2.carbon.core.multitenancy.transports.TenantTransportSender.REQUEST_HOST_HEADER))"], "Fixed commit": "e2f1a9b28a88ea6b33ed441d87a10eb259568e36", "Url": "https://api.github.com/repos/wso2/carbon-kernel", "Date": "2015-06-09T09:32:59Z"},
{"Line": "=>1227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getSettingsManager().getFieldSettings(net.sacredlabyrinth.Phaed.PreciousStones.listeners.Block)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (fs.hasMetaName()) { if (!(fs.matchesMetaName(player.getItemInHand()))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6272/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.listeners.PSBlockListener.java", "BodyUseAPI": ["net.sacredlabyrinth.Phaed.PreciousStones.field.FieldSettings.matchesMetaName(player.getItemInHand())"], "Fixed commit": "7e61034436c34520ab9e6460f41680cc02740b05", "Url": "https://api.github.com/repos/OhBlihv/PreciousStones", "Date": "2015-10-24T10:03:09Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newEntity.getAuthors()) != null) for (com.github.bfour.fpliteraturecollector.domain.Author auth : newEntity.getAuthors()) { if (!(authServ.exists(auth))) authServ.create(auth); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/255/buggy-version/src.main.java.com.github.bfour.fpliteraturecollector.service.DefaultLiteratureService.java", "BodyUseAPI": ["com.github.bfour.fpliteraturecollector.domain.Literature.getAuthors()"], "Fixed commit": "8fbafb235a0c0470f6f666a23f5f2e1c54b08d26", "Url": "https://api.github.com/repos/bfour/LiteratureCollector", "Date": "2015-03-19T03:41:28Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entity.getAuthors()) != null) for (com.github.bfour.fpliteraturecollector.domain.Author auth : entity.getAuthors()) { if (!(authServ.exists(auth))) authServ.create(auth); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/255/buggy-version/src.main.java.com.github.bfour.fpliteraturecollector.service.DefaultLiteratureService.java", "BodyUseAPI": ["com.github.bfour.fpliteraturecollector.domain.Literature.getAuthors()"], "Fixed commit": "8fbafb235a0c0470f6f666a23f5f2e1c54b08d26", "Url": "https://api.github.com/repos/bfour/LiteratureCollector", "Date": "2015-03-19T03:41:28Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapFactory.decodeFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (origBitmap != null) { float density = context.getResources().getDisplayMetrics().density; android.graphics.Bitmap bitmap = android.graphics.Bitmap.createScaledBitmap(origBitmap, (((int) (density)) * 83), (((int) (density)) * 83), false); views.setImageViewBitmap(R.id.show_btn, bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3385/buggy-version/src.com.axelby.podax.ui.SmallWidgetProvider.java", "BodyUseAPI": ["android.graphics.Bitmap.createScaledBitmap(android.graphics.Bitmap,int,int,boolean)"], "Fixed commit": "18c80327bb40fb95115527a2c3867ebe4f7c80ed", "Url": "https://api.github.com/repos/DavidEGx/Podax", "Date": "2012-10-26T15:19:38Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapFactory.decodeFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (origBitmap != null) { float density = context.getResources().getDisplayMetrics().density; android.graphics.Bitmap bitmap = android.graphics.Bitmap.createScaledBitmap(origBitmap, (((int) (density)) * 92), (((int) (density)) * 92), false); views.setImageViewBitmap(R.id.show_btn, bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3385/buggy-version/src.com.axelby.podax.ui.LargeWidgetProvider.java", "BodyUseAPI": ["android.graphics.Bitmap.createScaledBitmap(android.graphics.Bitmap,int,int,boolean)"], "Fixed commit": "18c80327bb40fb95115527a2c3867ebe4f7c80ed", "Url": "https://api.github.com/repos/DavidEGx/Podax", "Date": "2012-10-26T15:19:38Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resultCandidates.containsKey(LexemeType.BOOLEAN)) { result = resultCandidates.get(LexemeType.BOOLEAN); }else { result = resultCandidates.get(resultCandidates.keySet().iterator().next()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/94/buggy-version/src.la.LexicalAnalyzer.java", "BodyUseAPI": ["java.util.HashMap<la.LexemeType, la.Lexeme>.get(LexemeType.BOOLEAN)", "resultCandidates.keySet().iterator()", "java.util.HashMap<la.LexemeType, la.Lexeme>.get(resultCandidates.keySet().iterator().next())", "java.util.HashMap<la.LexemeType, la.Lexeme>.keySet()", "resultCandidates.keySet().iterator().next()"], "Fixed commit": "3b6b5654fb148277e0c9883f101a0c1a61e8b67e", "Url": "https://api.github.com/repos/tarys/MiniJavaCompiler", "Date": "2012-05-16T17:39:24Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) obj = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4508/buggy-version/src.com.gynt.lwproto.LWProto.java", "BodyUseAPI": [], "Fixed commit": "780385d7a539157790738fccaf0d6cb7fd5c030f", "Url": "https://api.github.com/repos/gynt/lwproto", "Date": "2017-02-07T14:52:53Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toAdd.isEventTask()) { int clashedTaskIndex = model.isBlockedOutTime(toAdd); if (clashedTaskIndex != (-1)) { throw new seedu.taskmanager.commons.exceptions.IllegalValueException(((\"Clash with task: Index \" + (java.lang.Integer.toString(clashedTaskIndex))) + \"\\n\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5298/buggy-version/src.main.java.seedu.taskmanager.logic.commands.AddCommand.java", "BodyUseAPI": ["seedu.taskmanager.logic.commands.AddCommand.isBlockedOutTime(seedu.taskmanager.model.task.Task)"], "Fixed commit": "103d5b37d364a49617375693f68b5ca1296355d9", "Url": "https://api.github.com/repos/KohJunWei/ProcrastiNoMore", "Date": "2017-04-05T18:18:35Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newPastLen < 0) { throw new java.lang.IllegalStateException(\"Maximum Java array size (2GB) exceeded by `ByteArrayBuilder`\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8638/buggy-version/src.main.java.com.fasterxml.jackson.core.util.ByteArrayBuilder.java", "BodyUseAPI": [], "Fixed commit": "d3d830f04a27afe789437c304b0f5104f5645183", "Url": "https://api.github.com/repos/FasterXML/jackson-core", "Date": "2017-02-13T23:59:53Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.catrobat.catroid.sensing.CollisionInformation.simplifyPolygon(java.util.ArrayList<android.graphics.PointF>,int,((points.size()) - 1),float)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((org.catrobat.catroid.sensing.CollisionInformation.pointToPointDistance(simplified.get(0), simplified.get(((simplified.size()) - 1)))) < epsilon) { simplified.remove(((simplified.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7649/buggy-version/catroid.src.main.java.org.catrobat.catroid.sensing.CollisionInformation.java", "BodyUseAPI": ["java.util.ArrayList<android.graphics.PointF>.size()", "java.util.ArrayList<android.graphics.PointF>.remove(((simplified.size()) - 1))"], "Fixed commit": "d538831a0293578f31ef8ec55bec0be63ff51d56", "Url": "https://api.github.com/repos/michael-fischl/Catroid", "Date": "2016-08-19T14:19:52Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isClosed.compareAndSet(false, true)) { base.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/9163/buggy-version/src.main.java.org.zeromq.ZMQ.java", "BodyUseAPI": [], "Fixed commit": "89c11b4667ff1c67eb3b5ebea073dc40fd30c89d", "Url": "https://api.github.com/repos/brimzi/jeromq", "Date": "2015-03-31T13:36:05Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getServletPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pagePath.equals(\"/\")) { httpResponse.sendRedirect(Path.COMMAND__SCHEDULE_MANAGER); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4575/buggy-version/FitnessUA.src.ua.nure.ostpc.malibu.shedule.filter.SecurityFilter.java", "BodyUseAPI": [], "Fixed commit": "e5201dfa65a5157c877c4c01540b763a023d6f5f", "Url": "https://api.github.com/repos/engsyst/ftua", "Date": "2015-06-03T18:33:34Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mom47.chess.controller.FunController.getNewPosition(chessPiece.getPosition(),int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((chess.getChessBoard().getPiece(newPosition)) == null) { direction = random.nextInt(8); }else { chess.getChessBoard().move(chessPiece.getPosition(), newPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4858/buggy-version/src.main.java.org.mom47.chess.controller.FunController.java", "BodyUseAPI": ["chess.getChessBoard().move(chessPiece.getPosition(),org.mom47.chess.model.Point)", "org.mom47.chess.model.Chess.getChessBoard()"], "Fixed commit": "d778f102630ecf83215916d5d697ff9c05888273", "Url": "https://api.github.com/repos/Docroma47/chess", "Date": "2017-08-25T03:04:07Z"},
{"Line": "=>714", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["1.getImage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (imageNode != null) { setGraphic(imageNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4951/buggy-version/entirej-fx.src.org.entirej.applicationframework.fx.renderers.blocks.EJFXTreeRecordBlockRenderer.java", "BodyUseAPI": ["1.setGraphic(javafx.scene.Node)"], "Fixed commit": "7195a546db95cca906e6dcccd0d30f8710412beb", "Url": "https://api.github.com/repos/entirej/javafx", "Date": "2014-12-30T12:58:25Z"},
{"Line": "=>770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (imageid == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4951/buggy-version/entirej-fx.src.org.entirej.applicationframework.fx.renderers.blocks.EJFXTreeRecordBlockRenderer.java", "BodyUseAPI": [], "Fixed commit": "7195a546db95cca906e6dcccd0d30f8710412beb", "Url": "https://api.github.com/repos/entirej/javafx", "Date": "2014-12-30T12:58:25Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hbase.client.ResultScanner.next()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == result) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6356/buggy-version/src.main.java.client.PartitionScanner.java", "BodyUseAPI": [], "Fixed commit": "f1043dee85e0f9cca85161b07326d82119395d6f", "Url": "https://api.github.com/repos/zhuifengsmile/HbaseCorprocessor", "Date": "2017-05-28T11:15:54Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHandler()) != null) { getHandler().removeCallbacks(mReverseFadingRunnable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1319/buggy-version/BlinkTextView.src.com.coco.blinktextview.BlinkTextView.java", "BodyUseAPI": [], "Fixed commit": "7506176e0d3131e31bfc3829e97c15ebb766347f", "Url": "https://api.github.com/repos/zzhouj/Android-BlinkTextView", "Date": "2014-01-17T06:30:57Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((data.previousSecGameState) == (data.GameControlData.STATE2_PENALTYSHOOT)) && (((data.gameState) == (data.GameControlData.STATE_SET)) || ((data.gameState) == (data.GameControlData.STATE_PLAYING)))) { (data.team[((data.kickOffTeam) == (data.team[0].teamColor) ? 0 : 1)].penaltyShot)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7182/buggy-version/src.controller.action.ui.RefereeTimeout.java", "BodyUseAPI": [], "Fixed commit": "3e96c2b2ebe91b3b9f731624787c62eb0ba8724e", "Url": "https://api.github.com/repos/fumanoids/GameController", "Date": "2014-03-06T07:50:07Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rawValue instanceof java.lang.String) { return new com.nogumalabs.optjson.OptJSONString(((java.lang.String) (rawValue))); }else if (rawValue.equals(null)) { return new com.nogumalabs.optjson.OptJSONNull(); }else { throw new com.nogumalabs.optjson.OptJSONException(\"Given Object is not acceptable type.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6430/buggy-version/src.main.com.nogumalabs.optjson.OptJSON.java", "BodyUseAPI": ["java.lang.Object.equals(<nulltype>)"], "Fixed commit": "292f88efd976488fe7ef08bf275e90267c9aacfa", "Url": "https://api.github.com/repos/satoshikumano/OptJSON", "Date": "2016-03-21T10:41:14Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rawValue instanceof java.lang.Long) { return new com.nogumalabs.optjson.OptJSONLong(((java.lang.Long) (rawValue))); }else if (rawValue instanceof java.lang.Integer) { return new com.nogumalabs.optjson.OptJSONLong(((java.lang.Integer) (rawValue)).longValue()); }else if (rawValue instanceof java.lang.Boolean) { return new com.nogumalabs.optjson.OptJSONBoolean(((java.lang.Boolean) (rawValue))); }else if (rawValue instanceof java.lang.String) { return new com.nogumalabs.optjson.OptJSONString(((java.lang.String) (rawValue))); }else if (rawValue.equals(null)) { return new com.nogumalabs.optjson.OptJSONNull(); }else { throw new com.nogumalabs.optjson.OptJSONException(\"Given Object is not acceptable type.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6430/buggy-version/src.main.com.nogumalabs.optjson.OptJSON.java", "BodyUseAPI": ["java.lang.Object.equals(<nulltype>)"], "Fixed commit": "292f88efd976488fe7ef08bf275e90267c9aacfa", "Url": "https://api.github.com/repos/satoshikumano/OptJSON", "Date": "2016-03-21T10:41:14Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expr.getExpressionTag()) != (edu.uci.ics.hyracks.algebricks.core.algebra.base.LogicalExpressionTag.FUNCTION_CALL)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7778/buggy-version/asterix-algebra.src.main.java.edu.uci.ics.asterix.optimizer.rules.am.AbstractIntroduceAccessMethodRule.java", "BodyUseAPI": [], "Fixed commit": "f7040dec81e392290f9625c0a84fec589274a06a", "Url": "https://api.github.com/repos/sjaco002/incubator-asterixdb", "Date": "2015-07-09T23:04:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_add) != null) { _add.setEnabled(((getLength()) < (_max))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8230/buggy-version/core.src.main.java.com.threerings.editor.swing.editors.PanelArrayListEditor.java", "BodyUseAPI": [], "Fixed commit": "899dc335a56ac2c6a0f1dc7556e446bba01947fb", "Url": "https://api.github.com/repos/threerings/clyde", "Date": "2014-01-25T00:29:38Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getDebugEnabled()) { for (com.Ben12345rocks.VotingPlugin.Objects.User user : users) { com.Ben12345rocks.VotingPlugin.TopVoter.TopVoter.plugin.getLogger().info((((\"Debug: \" + (user.getPlayerName())) + \", \") + (user.getTotalVotesSite(voteSite)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/597/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.TopVoter.TopVoter.java", "BodyUseAPI": [], "Fixed commit": "b2541cf9884a13e9b870329c3bf1549df89acdc9", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-03-31T01:41:00Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getDebugEnabled()) { for (com.Ben12345rocks.VotingPlugin.Objects.User user : users) { com.Ben12345rocks.VotingPlugin.TopVoter.TopVoter.plugin.getLogger().info((((\"Debug: \" + (user.getPlayerName())) + \", \") + (user.getTotalVotes()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/597/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.TopVoter.TopVoter.java", "BodyUseAPI": [], "Fixed commit": "b2541cf9884a13e9b870329c3bf1549df89acdc9", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-03-31T01:41:00Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasValidResizeField) { requestCreator.resize(imageRequestParameters.getResizeWidthTo(), imageRequestParameters.getResizeHeightTo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/996/buggy-version/layer-atlas.src.main.java.com.layer.ui.util.imagecache.PicassoImageCacheWrapper.java", "BodyUseAPI": [], "Fixed commit": "8b32492e139ef9f0d4f6008e9aaaaa207dd3b852", "Url": "https://api.github.com/repos/layerhq/Atlas-Android", "Date": "2017-08-31T21:27:30Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasValidResizeField) { requestCreator.resize(imageRequestParameters.getResizeWidthTo(), imageRequestParameters.getResizeHeightTo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/996/buggy-version/layer-atlas.src.main.java.com.layer.ui.util.imagecache.PicassoImageCacheWrapper.java", "BodyUseAPI": [], "Fixed commit": "8b32492e139ef9f0d4f6008e9aaaaa207dd3b852", "Url": "https://api.github.com/repos/layerhq/Atlas-Android", "Date": "2017-08-31T21:27:30Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errorMessage) != null) { new nl.guno.ccollab.intellij.ui.Notification(project, errorMessage, com.intellij.openapi.ui.MessageType.WARNING).showBalloon(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3598/buggy-version/src.main.java.nl.guno.ccollab.intellij.AddToReviewTask.java", "BodyUseAPI": [], "Fixed commit": "16446c3cf5e3b9fe55d35bc59c3b3bfff6bff59c", "Url": "https://api.github.com/repos/GunoH/intellicollab", "Date": "2015-10-14T16:31:27Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((com.tinkerpop.blueprints.impls.orient.OrientBaseGraph) (graph)).isUseClassForEdgeLabel())) manageLabels(text);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5333/buggy-version/blueprints-orient-graph.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientGraphQuery.java", "BodyUseAPI": [], "Fixed commit": "6dd98972096429cd982c89ca39754ab1409b3ffd", "Url": "https://api.github.com/repos/nuvolabase/blueprints", "Date": "2013-04-22T20:10:22Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((com.tinkerpop.blueprints.impls.orient.OrientBaseGraph) (graph)).isUseClassForVertexLabel())) manageLabels(text);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5333/buggy-version/blueprints-orient-graph.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientGraphQuery.java", "BodyUseAPI": [], "Fixed commit": "6dd98972096429cd982c89ca39754ab1409b3ffd", "Url": "https://api.github.com/repos/nuvolabase/blueprints", "Date": "2013-04-22T20:10:22Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (location.equals(\"Berlin - K17\")) { location = \"Pettenkoferstra\ufffde 17a, 10247 Berlin\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2577/buggy-version/src.com.alvarosantisteban.pathos.loader.GothDatumEventLoader.java", "BodyUseAPI": [], "Fixed commit": "dcf05edcbf2d41e339a119c99e566dfcc188fe94", "Url": "https://api.github.com/repos/alvarosantisteban/berlineventcurator", "Date": "2013-10-01T17:27:15Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasStoredPasscode(com.salesforce.androidsdk.app.SalesforceSDKManager.getInstance().getAppContext())) { showLockActivity(com.salesforce.androidsdk.app.SalesforceSDKManager.getInstance().getAppContext(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4690/buggy-version/native.SalesforceSDK.src.com.salesforce.androidsdk.security.PasscodeManager.java", "BodyUseAPI": [], "Fixed commit": "381010990c6231e41649d33ffbf64afc0f90ec03", "Url": "https://api.github.com/repos/forcedotcom/SalesforceMobileSDK-Android", "Date": "2014-05-19T20:08:25Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msi.gama.runtime.GAMA.getRegularGui()) == null) { msi.gama.runtime.GAMA.setRegularGui(new msi.gama.gui.swt.SwtGui()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2624/buggy-version/msi.gama.application.src.msi.gama.application.Startup.java", "BodyUseAPI": [], "Fixed commit": "4fb991dab20eeb68c0581cd5ee0703dcd88d78d0", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2016-01-20T04:55:10Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isInCreativeTab(tab)) { landmaster.landcraft.item.ItemStack empty = new landmaster.landcraft.item.ItemStack(this); subItems.add(empty); landmaster.landcraft.item.ItemStack full = empty.copy(); this.setEnergyStored(full, landmaster.landcraft.item.ItemLandmastersWings.MAX_ENERGY); subItems.add(full); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/619/buggy-version/src.main.java.landmaster.landcraft.item.ItemLandmastersWings.java", "BodyUseAPI": [], "Fixed commit": "e45329b108ff8f955cd7c8dbbd5ae4e141509712", "Url": "https://api.github.com/repos/Landmaster/LandCraft", "Date": "2017-06-17T20:50:54Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controlService) == null) controlService = husacct.ServiceProvider.getInstance().getControlService();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2798/buggy-version/src.husacct.control.task.CodeViewController.java", "BodyUseAPI": [], "Fixed commit": "a6eb4a097137b0d04e106cb2bd1d5d2c01a3e3cc", "Url": "https://api.github.com/repos/timohu/HUSACCT", "Date": "2013-05-14T12:21:32Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.uw.zookeeper.protocol.IntHeader.length()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((output.writableBytes()) >= headerLength) { output.writerIndex((beginIndex + headerLength)); }else { output.writeInt(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1774/buggy-version/src.main.java.edu.uw.zookeeper.protocol.Frame.java", "BodyUseAPI": ["io.netty.buffer.ByteBuf.writerIndex(int)", "io.netty.buffer.ByteBuf.writeInt(int)"], "Fixed commit": "3d5ddb3e7a736662189ac427f12c088fcb956a91", "Url": "https://api.github.com/repos/lisaglendenning/zookeeper-lite", "Date": "2013-06-17T17:46:47Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tags.isEmpty()) throw new org.basex.build.xml.BuildException(OPEN, det(), tag);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1846/buggy-version/src.main.java.org.basex.build.xml.XMLParser.java", "BodyUseAPI": [], "Fixed commit": "5f490d19019abdc4458d2e70f22b6ea1ffb6488e", "Url": "https://api.github.com/repos/JosuaKrause/basex", "Date": "2012-09-27T12:39:14Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.asu.spring.quadriga.dao.workbench.IRetrieveProjectDAO.getDTO(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (projectDto instanceof edu.asu.spring.quadriga.dto.PassThroughProjectDTO) { mapper = projectMappers.get(edu.asu.spring.quadriga.dto.PassThroughProjectDTO.class); }else { mapper = projectMappers.get(edu.asu.spring.quadriga.dto.ProjectDTO.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8270/buggy-version/Quadriga.src.main.java.edu.asu.spring.quadriga.service.workbench.impl.RetrieveProjectManager.java", "BodyUseAPI": [], "Fixed commit": "137863059ac269efe3e4d78513d6ae041464c9d5", "Url": "https://api.github.com/repos/diging/quadriga", "Date": "2017-10-10T23:51:31Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.redside.rngquest.entities.Player.getInventory().items.size()) > 0) { data.add((\"items: \" + items)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3295/buggy-version/app.src.main.java.com.redside.rngquest.managers.GameManager.java", "BodyUseAPI": [], "Fixed commit": "dbc4e877206cbdacfed8b91b95c146f5602bb24c", "Url": "https://api.github.com/repos/redside100/RNGQuest", "Date": "2017-05-31T00:41:29Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orm.SugarRecord.findPrimaryKeyNotationField(java.lang.Class<? extends java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (idField != null) { deleted = (com.orm.SugarRecord.getSugarDataBase().delete(com.orm.util.NamingHelper.toSQLName(type), ((com.orm.util.NamingHelper.toSQLName(idField)) + \"=?\"), new java.lang.String[]{ id.toString() })) == 1; }else { deleted = (com.orm.SugarRecord.getSugarDataBase().delete(com.orm.util.NamingHelper.toSQLName(type), \"Id=?\", new java.lang.String[]{ id.toString() })) == 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5262/buggy-version/library.src.main.java.com.orm.SugarRecord.java", "BodyUseAPI": ["com.orm.util.NamingHelper.toSQLName(java.lang.reflect.Field)", "android.database.sqlite.SQLiteDatabase.delete(com.orm.util.NamingHelper.toSQLName(type),((com.orm.util.NamingHelper.toSQLName(idField)) + \"=?\"),java.lang.String[])"], "Fixed commit": "8a5a9b1296ac187d34c6a89654ab5654dfa9baaf", "Url": "https://api.github.com/repos/diogosq/sugar", "Date": "2016-01-08T20:37:01Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.subutai.core.environment.impl.entity.EnvironmentImpl.getPeers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (peers.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/9017/buggy-version/management.server.core.environment-manager.environment-manager-impl.src.main.java.io.subutai.core.environment.impl.workflow.destruction.steps.CleanupEnvironmentStep.java", "BodyUseAPI": [], "Fixed commit": "02bf8da626ee33b842a8e3b5d403d94f946e51af", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2016-03-23T09:29:23Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.subutai.core.environment.impl.entity.EnvironmentImpl.getPeers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (peers.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/9017/buggy-version/management.server.core.environment-manager.environment-manager-impl.src.main.java.io.subutai.core.environment.impl.workflow.destruction.steps.RemoveKeysStep.java", "BodyUseAPI": [], "Fixed commit": "02bf8da626ee33b842a8e3b5d403d94f946e51af", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2016-03-23T09:29:23Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.oneliang.util.common.StringUtil.isNotBlank(packageName)) { ((org.w3c.dom.Element) (manifestNodeList.item(0))).setAttribute(\"package\", packageName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3582/buggy-version/src.main.java.com.oneliang.tools.builder.base.BuilderUtil.java", "BodyUseAPI": ["org.w3c.dom.Node.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "632a6edc32f3423a55b0626ee739a95b1b94dd15", "Url": "https://api.github.com/repos/oneliang/builder", "Date": "2017-03-27T11:49:37Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.polito.mad17.madmax.activities.GroupsViewAdapter.myself.getBalanceWithGroups().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mygroupdebt == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/320/buggy-version/app.src.main.java.com.polito.mad17.madmax.activities.GroupsViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "47091bc8adc0e8df702ccd2b268bcb7cc44a1427", "Url": "https://api.github.com/repos/deviz92/MadMax", "Date": "2017-04-28T11:37:25Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((declaration.getOriginalDeclaration()) != null) && (declaration.hasUncheckedNullType())) unbox = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/714/buggy-version/compiler-java.src.com.redhat.ceylon.compiler.java.codegen.BoxingDeclarationVisitor.java", "BodyUseAPI": [], "Fixed commit": "aea2111bbc694f71e765ec6f52f54161eeeffb43", "Url": "https://api.github.com/repos/someth2say/ceylon", "Date": "2017-03-29T09:54:05Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startNode.equals(targetNode)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6129/buggy-version/src.main.java.com.collibra.interview.backend.server.model.PathFinder.java", "BodyUseAPI": [], "Fixed commit": "73d1276509737114d3322148aadb527f92c309ed", "Url": "https://api.github.com/repos/graeyen/collibra", "Date": "2017-10-07T20:12:08Z"},
{"Line": "=>843", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (exclusionsFile.exists()) scope.setExclusions(com.ibm.wala.util.config.FileOfClasses.createFileOfClasses(exclusionsFile));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3541/buggy-version/src.edu.colorado.thresher.Main.java", "BodyUseAPI": ["com.ibm.wala.ipa.callgraph.AnalysisScope.setExclusions(com.ibm.wala.util.config.FileOfClasses.createFileOfClasses(exclusionsFile))", "com.ibm.wala.util.config.FileOfClasses.createFileOfClasses(java.io.File)"], "Fixed commit": "30d2bcad7b523a67441c717e3cc7bc1a7ddf2f64", "Url": "https://api.github.com/repos/cuplv/thresher", "Date": "2013-04-07T21:59:52Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.mervesimsek.vehicleapp.dal.VehicleDAL.getInstance().GetVehicleList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((dataList != null) && ((dataList.size()) > 0)) { this.LoadDataSourceRecyclerView(dataList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1493/buggy-version/app.src.main.java.com.example.mervesimsek.vehicleapp.Controller.VehicleListController.java", "BodyUseAPI": ["com.example.mervesimsek.vehicleapp.controller.VehicleListController.LoadDataSourceRecyclerView(java.util.List<com.example.mervesimsek.vehicleapp.model.VehicleModel>)"], "Fixed commit": "194316a05622b0ed70d1b958621fd972d5573159", "Url": "https://api.github.com/repos/mervesims/CarpoolApp", "Date": "2017-05-30T15:28:24Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.getType()) == (java.lang.Double.class)) { double d = ((double) (brewery.get(next))); f.set(result, d); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/126/buggy-version/app.src.main.java.group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.java", "BodyUseAPI": ["java.lang.reflect.Field.set(group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery,double)"], "Fixed commit": "8990af279351b558eb78f2bf11bb4ab203e6bfae", "Url": "https://api.github.com/repos/grwyler/beerButler", "Date": "2017-05-06T02:18:08Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentCard.getImage()) == null) { image.setImageResource(android.R.color.transparent); }else { image.setImageBitmap(currentCard.getImage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7421/buggy-version/FlashCards.app.src.main.java.se.tda367.flashcards.controllers.PlayDeckActivity.java", "BodyUseAPI": ["se.tda367.flashcards.models.Card.getImage()", "android.widget.ImageView.setImageBitmap(currentCard.getImage())"], "Fixed commit": "ce493a6b27f063c5238e22513d00d23afca6b8f1", "Url": "https://api.github.com/repos/Ekman1991/FlashCards", "Date": "2016-05-10T17:50:15Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (xpathResults != null) { if (logger.isDebugEnabled()) { logger.debug(((((((\"retrieved: \" + (((lux.Evaluator) (evaluator)).getDocReader().getCacheMisses())) + \" docs, \") + (xpathResults.size())) + \" results, \") + ((java.lang.System.currentTimeMillis()) - tstart)) + \"ms\")); } }else { logger.warn((((((\"xquery evaluation error: \" + (((lux.Evaluator) (evaluator)).getDocReader().getCacheMisses())) + \" docs, \") + \"0 results, \") + ((java.lang.System.currentTimeMillis()) - tstart)) + \"ms\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2053/buggy-version/src.main.java.lux.solr.XQueryComponent.java", "BodyUseAPI": ["org.slf4j.Logger.debug(((((((\"retrieved: \" + (((lux.Evaluator) (evaluator)).getDocReader().getCacheMisses())) + \" docs, \") + (xpathResults.size())) + \" results, \") + ((java.lang.System.currentTimeMillis()) - tstart)) + \"ms\"))", "org.apache.solr.common.util.NamedList<java.lang.Object>.size()"], "Fixed commit": "0b21ba8884e722ba076418d00ed2602ed1d2b2ab", "Url": "https://api.github.com/repos/msokolov/lux", "Date": "2013-08-27T03:42:18Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valueMap == null) { throw new java.lang.IllegalArgumentException(\"valueMap is expected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/103/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionCountIfValue.java", "BodyUseAPI": [], "Fixed commit": "2a3c2cafa346ad8755d8e2363db7f4f6f3fc3cd6", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-22T18:15:51Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (throttleCounter == 15) { throttlePeers(); throttleCounter = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1764/buggy-version/ConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "1fa90308913c0e95d3b7b1ebf07ade43443d14be", "Url": "https://api.github.com/repos/vonquilon/Bittorrent_Client", "Date": "2013-08-14T20:40:06Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str1.endsWith(\"/\")) { str1 = str1.substring(0, ((str1.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8443/buggy-version/Crawl_IndexPage.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "5661189973a95fac3135aa751dcfa1e151b61126", "Url": "https://api.github.com/repos/rakeshmane/FOCUS", "Date": "2017-03-21T14:08:12Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 2) || ((i % 2) == 0)) { isPrime = false; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5220/buggy-version/src.com.example.datastructuresandalgorithms.PrimeNumber.java", "BodyUseAPI": [], "Fixed commit": "32fe337dd035ce52aedfdeb2cb6e15d91a2290cf", "Url": "https://api.github.com/repos/IChrisKing/DataStructuresAndAlgorithms", "Date": "2016-12-14T05:33:32Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(m_adeManager.isInitialized())) { m_adeManager.initialize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6581/buggy-version/src.org.opencms.main.OpenCmsCore.java", "BodyUseAPI": ["org.opencms.ade.configuration.CmsADEManager.initialize()"], "Fixed commit": "a86c2626f7351a62723efca40b39abe07005ca54", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2017-06-27T08:48:28Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.device.mgt.common.configuration.mgt.TenantConfiguration.getConfiguration()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((configuration != null) && (!(configuration.isEmpty()))) { for (org.wso2.carbon.device.mgt.common.configuration.mgt.ConfigurationEntry cEntry : configuration) { if (cEntry.getName().equalsIgnoreCase(org.wso2.carbon.policy.mgt.core.util.PolicyManagerUtil.MONITORING_FREQUENCY)) { monitoringFrequency = ((int) (cEntry.getValue())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2629/buggy-version/components.policy-mgt.org.wso2.carbon.policy.mgt.core.src.main.java.org.wso2.carbon.policy.mgt.core.util.PolicyManagerUtil.java", "BodyUseAPI": [], "Fixed commit": "d15eb10636ece6e60dd8bc80cf7507013ca3bb69", "Url": "https://api.github.com/repos/wso2/carbon-device-mgt", "Date": "2015-10-17T11:38:12Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recipient) != null) { if ((com.github.tnerevival.utils.AccountUtils.getFunds(com.github.tnerevival.account.IDFinder.getID(recipient), world, cost.getCurrency().getName()).add(cost.getAmount()).compareTo(cost.getCurrency().getMaxBalance())) > 0) { return TransactionResult.FAILED; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1447/buggy-version/src.com.github.tnerevival.core.transaction.Transaction.java", "BodyUseAPI": [], "Fixed commit": "eb44f9cc163902b53a118c68c970e6760e80681f", "Url": "https://api.github.com/repos/TheNewEconomy/TNE-Bukkit", "Date": "2017-06-08T14:31:25Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((cardModelList.get(position).getJapaneseName()) != null) && (!(cardModelList.get(position).getJapaneseName().equals(\"\")))) { com.thoughtworks.lhli.lovelive_rock.adapter.MediumCardListAdapter.setTextView(viewHolder.mediumCardIdolName, cardModelList.get(position).getJapaneseName()); }else if ((cardModelList.get(position).getIdolModel()) != null) { com.thoughtworks.lhli.lovelive_rock.adapter.MediumCardListAdapter.setTextView(viewHolder.mediumCardIdolName, cardModelList.get(position).getIdolModel().getJapaneseName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5418/buggy-version/app.src.main.java.com.thoughtworks.lhli.lovelive_rock.adapter.MediumCardListAdapter.java", "BodyUseAPI": ["java.util.List<com.thoughtworks.lhli.lovelive_rock.model.CardModel>.get(int)", "cardModelList.get(position).getJapaneseName()", "cardModelList.get(position).getIdolModel().getJapaneseName()", "cardModelList.get(position).getIdolModel()", "java.util.List<com.thoughtworks.lhli.lovelive_rock.model.CardModel>.get(int)", "cardModelList.get(position).getIdolModel()", "java.util.List<com.thoughtworks.lhli.lovelive_rock.model.CardModel>.get(int)", "com.thoughtworks.lhli.lovelive_rock.adapter.MediumCardListAdapter.setTextView(android.widget.TextView,cardModelList.get(position).getIdolModel().getJapaneseName())", "com.thoughtworks.lhli.lovelive_rock.adapter.MediumCardListAdapter.setTextView(android.widget.TextView,cardModelList.get(position).getJapaneseName())"], "Fixed commit": "919f880d52f9dd084b88d12cc7ffd378cf034c68", "Url": "https://api.github.com/repos/Kevin170113664/lovelive_rock", "Date": "2016-05-28T13:56:58Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.quran.labs.androidquran.util.QuranScreenInfo.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (instance == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/145/buggy-version/src.com.quran.labs.androidquran.util.QuranFileUtils.java", "BodyUseAPI": [], "Fixed commit": "acac790eabe11bec0ecd03af497965ce1c7c8b69", "Url": "https://api.github.com/repos/mahmoudhossam/quran_android", "Date": "2012-03-16T09:57:10Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { getActivity().startPostponedEnterTransition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4472/buggy-version/XYZReader.src.main.java.com.example.xyzreader.ui.ArticleDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "c4ceb77241b9a0f3a83f8484caa21c2e763f8d54", "Url": "https://api.github.com/repos/edcorners/XYZReader", "Date": "2016-06-26T21:12:18Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getItemDrop().getItemStack().getItemMeta().hasLore()) { if ((((e.getItemDrop().getItemStack().getItemMeta().getLore().get(0).equals(\"Fury\")) || (e.getItemDrop().getItemStack().getItemMeta().getLore().get(0).equals(\"Sheild\"))) || (e.getItemDrop().getItemStack().getItemMeta().getLore().get(0).equals(\"Sprint\"))) || (e.getItemDrop().getItemStack().getItemMeta().getLore().get(0).equals(\"Regen\"))) { e.setCancelled(true); p.sendMessage(((org.bukkit.ChatColor.DARK_RED) + \"You can't drop this item!\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/890/buggy-version/src.me.NyxCraft.Listeners.ItemDropListener.java", "BodyUseAPI": ["e.getItemDrop().getItemStack().getItemMeta()", "e.getItemDrop().getItemStack().getItemMeta().getLore()", "e.getItemDrop().getItemStack().getItemMeta().getLore()", "e.getItemDrop().getItemStack().getItemMeta().getLore().get(int)", "org.bukkit.event.player.PlayerDropItemEvent.getItemDrop()", "e.getItemDrop().getItemStack().getItemMeta().getLore().get(int)", "org.bukkit.event.player.PlayerDropItemEvent.getItemDrop()", "e.getItemDrop().getItemStack().getItemMeta().getLore()", "e.getItemDrop().getItemStack().getItemMeta().getLore().get(0).equals(java.lang.String)", "e.getItemDrop().getItemStack()", "org.bukkit.event.player.PlayerDropItemEvent.getItemDrop()", "e.getItemDrop().getItemStack().getItemMeta().getLore().get(0).equals(java.lang.String)", "e.getItemDrop().getItemStack()", "e.getItemDrop().getItemStack()", "e.getItemDrop().getItemStack().getItemMeta()", "e.getItemDrop().getItemStack().getItemMeta()", "e.getItemDrop().getItemStack().getItemMeta()", "org.bukkit.event.player.PlayerDropItemEvent.getItemDrop()", "e.getItemDrop().getItemStack().getItemMeta().getLore()", "e.getItemDrop().getItemStack().getItemMeta().getLore().get(0).equals(java.lang.String)", "org.bukkit.event.player.PlayerDropItemEvent.setCancelled(boolean)", "e.getItemDrop().getItemStack()", "e.getItemDrop().getItemStack().getItemMeta().getLore().get(int)", "e.getItemDrop().getItemStack().getItemMeta().getLore().get(int)", "e.getItemDrop().getItemStack().getItemMeta().getLore().get(0).equals(java.lang.String)"], "Fixed commit": "bda928be7e5a4ad042ee07221fbb01e214f96e34", "Url": "https://api.github.com/repos/ckm499/MythsOfCreation", "Date": "2015-08-18T19:45:16Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(gletter.equals(\"\"))) { letter = gletter.charAt(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3790/buggy-version/ThatTeam.src.hangman.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "92186206bf370bae785a371e9a82664c66848920", "Url": "https://api.github.com/repos/trishHUYNH/ThatTeam", "Date": "2015-11-18T02:17:34Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dateProducedET.isShown()) { isOk = parseInputDate(dateProducedET.getText().toString(), dateProduced); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4157/buggy-version/app.src.main.java.com.rv150.bestbefore.Activities.Add.java", "BodyUseAPI": ["android.widget.EditText.getText()", "com.rv150.bestbefore.Activities.Add.parseInputDate(dateProducedET.getText().toString(),java.util.Calendar)", "dateProducedET.getText().toString()"], "Fixed commit": "cd6ab1c0627291241565c3ed34160b7a2606ba98", "Url": "https://api.github.com/repos/madsunrise/BestBefore", "Date": "2017-02-05T16:16:04Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (skipAuto && (ce.isAuto())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6554/buggy-version/src.main.java.co.miranext.docdb.sql.SQLBuilder.java", "BodyUseAPI": [], "Fixed commit": "9e2ce3f1cdf657d10c1a8d1025944ddbe904ce5d", "Url": "https://api.github.com/repos/wmira/docdb-jdbc", "Date": "2014-12-31T11:03:31Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isRevealed(x, y)) == false) { GameRules.flagArray[x][y] = true; GameRules.getColorArray()[x][y] = java.awt.Color.RED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7189/buggy-version/src.GameRules.java", "BodyUseAPI": [], "Fixed commit": "115067515c2b7e71da1b7126bcbbe3959d8760ac", "Url": "https://api.github.com/repos/JDCuevas/JJ-s-Minesweeper", "Date": "2016-10-14T16:35:22Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (basepathfile.exists()) { fileChooser.setInitialDirectory(basepathfile); }else { dashboardgui.MessageBox.show(\"Warning\", \"IO warning\", \"Base path doesn't exist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3016/buggy-version/src.dashboardgui.ArgFile.java", "BodyUseAPI": ["javafx.stage.FileChooser.setInitialDirectory(java.io.File)"], "Fixed commit": "8793b6235d96ff94c3f8a73785ce066e87da8ee3", "Url": "https://api.github.com/repos/MaxTurcHot/LSDashboard", "Date": "2016-10-22T15:52:41Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (basepathfile.exists()) { directoryChooser.setInitialDirectory(basepathfile); }else { dashboardgui.MessageBox.show(\"Warning\", \"IO warning\", \"Base path doesn't exist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3016/buggy-version/src.dashboardgui.ArgPath.java", "BodyUseAPI": ["javafx.stage.DirectoryChooser.setInitialDirectory(java.io.File)"], "Fixed commit": "8793b6235d96ff94c3f8a73785ce066e87da8ee3", "Url": "https://api.github.com/repos/MaxTurcHot/LSDashboard", "Date": "2016-10-22T15:52:41Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((element != null) && (document != null)) { try { module.open(null); root = new org.erlide.ui.internal.compare.ErlStructureCreator.RootErlNode(document, element); recursiveMakeErlNodes(module, root, document); } catch (final org.erlide.core.model.root.ErlModelException e) { org.erlide.jinterface.ErlLogger.warn(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8147/buggy-version/org.erlide.ui.src.org.erlide.ui.internal.compare.ErlStructureCreator.java", "BodyUseAPI": ["org.erlide.ui.internal.compare.ErlStructureCreator.recursiveMakeErlNodes(org.erlide.core.model.erlang.IErlModule,org.erlide.ui.internal.compare.ErlNode,org.eclipse.jface.text.IDocument)"], "Fixed commit": "c0622df2921dbb929328cd0cacad477ea13fb8f0", "Url": "https://api.github.com/repos/vladdu/erlide_eclipse", "Date": "2011-12-23T20:02:51Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userTran.getStatus()) != (javax.transaction.Status.STATUS_NO_TRANSACTION)) { userTran.rollback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7956/buggy-version/com.ibm.jbatch.container.src.main.java.com.ibm.jbatch.container.transaction.impl.JTAUserTransactionAdapter.java", "BodyUseAPI": ["javax.transaction.UserTransaction.rollback()"], "Fixed commit": "2223578dcc9e95325711ac27e6e50cc5331142f0", "Url": "https://api.github.com/repos/WASdev/standards.jsr352.jbatch", "Date": "2015-09-03T15:54:49Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 19) { java.lang.Object mClientAdapter = new com.robotium.solo.Reflect(currentWebView).field(\"mContentsClientAdapter\").out(java.lang.Object.class); currentWebChromeClient = new com.robotium.solo.Reflect(mClientAdapter).field(\"mWebChromeClient\").out(android.webkit.WebChromeClient.class); }else { java.lang.Object mCallbackProxy = new com.robotium.solo.Reflect(currentWebView).field(\"mCallbackProxy\").out(java.lang.Object.class); currentWebChromeClient = new com.robotium.solo.Reflect(mCallbackProxy).field(\"mWebChromeClient\").out(android.webkit.WebChromeClient.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4370/buggy-version/robotium-solo.src.main.java.com.robotium.solo.WebUtils.java", "BodyUseAPI": [], "Fixed commit": "5a21cecd849d3a06379f1c324077d289081ea72d", "Url": "https://api.github.com/repos/SinnerSchraderMobileMirrors/robotium", "Date": "2014-03-07T21:32:40Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (text == null) { text = diagnostic.getString(\"message\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/252/buggy-version/core.ts.core.src.ts.internal.client.protocol.SemanticDiagnosticsSyncRequest.java", "BodyUseAPI": [], "Fixed commit": "8015e8b5311d27ea54c84f9c36d009796e2ac6dc", "Url": "https://api.github.com/repos/angelozerr/typescript.java", "Date": "2016-10-19T10:12:43Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tqlInterval == null) { tqlInterval = new com.xz.data.syntax.TqlInterval(\"20171212\", 'Y', 30); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7901/buggy-version/reader.src.main.java.com.xz.data.prepare.XzDataController.java", "BodyUseAPI": [], "Fixed commit": "bca9c4091098e3e10a40ea57636657f9fa324968", "Url": "https://api.github.com/repos/tianpeng-li/fdc", "Date": "2017-08-05T02:02:30Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(karma.warenabled)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1137/buggy-version/src.main.java.com.tommytony.karma.KarmaParty.java", "BodyUseAPI": [], "Fixed commit": "4a18d008765178e5cb9e6b869b64cccb4c96d3b7", "Url": "https://api.github.com/repos/cmastudios/karma", "Date": "2012-04-27T01:36:33Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(karma.warenabled)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1137/buggy-version/src.main.java.com.tommytony.karma.KarmaParty.java", "BodyUseAPI": [], "Fixed commit": "4a18d008765178e5cb9e6b869b64cccb4c96d3b7", "Url": "https://api.github.com/repos/cmastudios/karma", "Date": "2012-04-27T01:36:33Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 0) { java.lang.System.out.println((((\"(char) Buffer[\" + m) + \"] is: \") + ((char) (buffer[m])))); java.lang.System.out.println((((\"(byte) Buffer[\" + m) + \"] is: \") + (buffer[m]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1971/buggy-version/compression.src.a_huffman.TaqQuoteCompressor.java", "BodyUseAPI": [], "Fixed commit": "9ef2eb0f8ad956bf97ca9c9f77a81a60052d087a", "Url": "https://api.github.com/repos/Vinushika/topics_algorithms_ncf_2015", "Date": "2015-02-11T09:48:50Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 0) { java.lang.System.out.println((((\"(char) Buffer[\" + n) + \"] is: \") + ((char) (buffer[n])))); java.lang.System.out.println((((\"(byte) Buffer[\" + n) + \"] is: \") + (buffer[n]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1971/buggy-version/compression.src.a_huffman.TaqQuoteCompressor.java", "BodyUseAPI": [], "Fixed commit": "9ef2eb0f8ad956bf97ca9c9f77a81a60052d087a", "Url": "https://api.github.com/repos/Vinushika/topics_algorithms_ncf_2015", "Date": "2015-02-11T09:48:50Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(noobienoobie123.ChaosDruid.ChaosDruid.amountOfItemLooted.containsKey(Id))) { noobienoobie123.ChaosDruid.ChaosDruid.amountOfItemLooted.put(Id, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3139/buggy-version/ChaosDruid.ChaosDruid.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Integer>.put(int,int)"], "Fixed commit": "dbe206138098a94dacc1ef054d63e480a97349b1", "Url": "https://api.github.com/repos/noobienoobie123/RsbotScripts", "Date": "2017-08-11T15:27:05Z"},
{"Line": "=>1381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getUniqueId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((com.wasteofplastic.askyblock.util.VaultHelper.checkPerm(player, ((com.wasteofplastic.askyblock.Settings.PERMPREFIX) + \"team.chat\"))) && (plugin.getPlayers().inTeam(playerUUID))) { player.sendMessage(((((((plugin.myLocale(player.getUniqueId()).helpColor) + \"/\") + label) + \" teamchat: \") + (org.bukkit.ChatColor.WHITE)) + (plugin.myLocale(player.getUniqueId()).teamChatHelp))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1171/buggy-version/src.com.wasteofplastic.askyblock.commands.IslandCmd.java", "BodyUseAPI": ["com.wasteofplastic.askyblock.ASkyBlock.myLocale(player.getUniqueId())", "org.bukkit.entity.Player.getUniqueId()", "com.wasteofplastic.askyblock.ASkyBlock.myLocale(player.getUniqueId())", "org.bukkit.entity.Player.getUniqueId()", "org.bukkit.entity.Player.sendMessage(((((((plugin.myLocale(player.getUniqueId()).helpColor) + \"/\") + label) + \" teamchat: \") + (org.bukkit.ChatColor.WHITE)) + (plugin.myLocale(player.getUniqueId()).teamChatHelp)))"], "Fixed commit": "2074a173765b41ac517f6609194e1c5651112889", "Url": "https://api.github.com/repos/Pokechu22/askyblock", "Date": "2015-05-24T04:06:34Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connDef instanceof org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) { setAttribute(model, org.jboss.as.connector.subsystems.resourceadapters.Constants.CONNECTABLE, ((org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) (connDef)).isConnectable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/221/buggy-version/connector.src.main.java.org.jboss.as.connector.subsystems.resourceadapters.IronJacamarResourceCreator.java", "BodyUseAPI": [], "Fixed commit": "c4ff4c2c446439ffeeda6cc96e1656f9aa591b2c", "Url": "https://api.github.com/repos/kabir/wildfly", "Date": "2014-03-20T13:52:55Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.nesterovUpdate) { return updateWeightNesterov(gradients, lastGradient, index, dropoutRate); }else { return updateWeightNormal(gradients, lastGradient, index, dropoutRate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/9042/buggy-version/src.main.java.org.encog.neural.networks.training.propagation.back.Backpropagation.java", "BodyUseAPI": [], "Fixed commit": "f57fa8a7aa3f5d4af5ef34036c9487db0cdda42a", "Url": "https://api.github.com/repos/encog/encog-java-core", "Date": "2016-03-31T03:39:24Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cut.isSetOrientation()) property.add(uk.ac.ncl.intbio.core.datatree.Datatree.NamedProperty(Sbol2Terms.Cut.orientation, org.sbolstandard.core2.OrientationType.convertToURI(cut.getOrientation())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2321/buggy-version/core2.src.main.java.org.sbolstandard.core2.SBOLWriter.java", "BodyUseAPI": ["java.util.List<uk.ac.ncl.intbio.core.datatree.Datatree.NamedProperty<javax.xml.namespace.QName>>.add(uk.ac.ncl.intbio.core.datatree.Datatree.NamedProperty(Sbol2Terms.Cut.orientation, org.sbolstandard.core2.OrientationType.convertToURI(cut.getOrientation())))", "org.sbolstandard.core2.Cut.getOrientation()", "org.sbolstandard.core2.OrientationType.convertToURI(cut.getOrientation())", "uk.ac.ncl.intbio.core.datatree.Datatree.NamedProperty(Sbol2Terms.Cut.orientation,org.sbolstandard.core2.OrientationType.convertToURI(cut.getOrientation()))"], "Fixed commit": "76cdfb799d0aa9dae90bf3e9d5dd17a510247031", "Url": "https://api.github.com/repos/SynBioDex/libSBOLj", "Date": "2015-05-21T17:08:11Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (genericLocation.isSetOrientation()) property.add(uk.ac.ncl.intbio.core.datatree.Datatree.NamedProperty(Sbol2Terms.GenericLocation.orientation, org.sbolstandard.core2.OrientationType.convertToURI(genericLocation.getOrientation())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2321/buggy-version/core2.src.main.java.org.sbolstandard.core2.SBOLWriter.java", "BodyUseAPI": ["java.util.List<uk.ac.ncl.intbio.core.datatree.Datatree.NamedProperty<javax.xml.namespace.QName>>.add(uk.ac.ncl.intbio.core.datatree.Datatree.NamedProperty(Sbol2Terms.GenericLocation.orientation, org.sbolstandard.core2.OrientationType.convertToURI(genericLocation.getOrientation())))", "org.sbolstandard.core2.GenericLocation.getOrientation()", "uk.ac.ncl.intbio.core.datatree.Datatree.NamedProperty(Sbol2Terms.GenericLocation.orientation,org.sbolstandard.core2.OrientationType.convertToURI(genericLocation.getOrientation()))", "org.sbolstandard.core2.OrientationType.convertToURI(genericLocation.getOrientation())"], "Fixed commit": "76cdfb799d0aa9dae90bf3e9d5dd17a510247031", "Url": "https://api.github.com/repos/SynBioDex/libSBOLj", "Date": "2015-05-21T17:08:11Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (manager.heartsBroken) { com.example.james.cardsuite.Card.Suit leastSuit = manager.leastPlayedSuit(true); return this.playLowestSuit(leastSuit); }else { com.example.james.cardsuite.Card.Suit leastSuit = manager.leastPlayedSuit(false); return this.playLowestSuit(leastSuit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3397/buggy-version/app.src.main.java.com.example.james.cardsuite.HeartsAI.java", "BodyUseAPI": ["com.example.james.cardsuite.HeartsManager.leastPlayedSuit(boolean)", "com.example.james.cardsuite.HeartsManager.leastPlayedSuit(boolean)"], "Fixed commit": "a75b3813b02b5e9349de32fd191555aaf3ccb626", "Url": "https://api.github.com/repos/SVT125/GermanBridge", "Date": "2015-08-23T04:43:18Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAttachView) != null) { android.support.v4.app.Fragment activeFragment = mContext.getSupportFragmentManager().findFragmentById(mAttachView.getId()); if (activeFragment != null) { mContext.getSupportFragmentManager().beginTransaction().remove(activeFragment).commit(); } mAttachView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8238/buggy-version/swap.src.main.java.com.xlythe.swap.SwapEditText.java", "BodyUseAPI": [], "Fixed commit": "c4b1317b5b566aa726664462b85d18ddbf32e88f", "Url": "https://api.github.com/repos/bourdakos1/Swap", "Date": "2016-08-19T22:18:45Z"},
{"Line": "=>787", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filteredExpressions) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4855/buggy-version/codehint-plugin.src.codehint.dialogs.InitialSynthesisDialog.java", "BodyUseAPI": [], "Fixed commit": "405b76ef15a8e5aba306c108ace8c0936bba6fbb", "Url": "https://api.github.com/repos/jgalenson/codehint", "Date": "2013-05-06T18:47:33Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.Future<fr.inria.lille.repair.nopol.NopolResult>.get(nopolContext.getMaxTimeInMinutes(),java.util.concurrent.TimeUnit)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { result = nopol.getNopolResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4813/buggy-version/repairnator.repairnator-pipeline.src.main.java.fr.inria.spirals.repairnator.process.step.NopolRepair.java", "BodyUseAPI": [], "Fixed commit": "71bec924cc9995740a112ca3cf9470a78448a889", "Url": "https://api.github.com/repos/fermadeiral/repairnator", "Date": "2017-03-22T16:55:40Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, net.croxis.plugins.research.Tech>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tech == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8430/buggy-version/src.main.java.net.croxis.plugins.research.TechManager.java", "BodyUseAPI": [], "Fixed commit": "d6273fe19ff62242a159dff2626d53d0daa1b34f", "Url": "https://api.github.com/repos/croxis/Research", "Date": "2011-12-17T04:01:46Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((individuals.size()) == 0) return new double[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3346/buggy-version/Marionette.src.main.java.com.marionette.evolver.supermariobros.optimizationfunctions.NEATNetworkModularityFunction.java", "BodyUseAPI": [], "Fixed commit": "5659ed516c0ce837df474f97031f449fe68f1667", "Url": "https://api.github.com/repos/magneticflux-/Marionette", "Date": "2016-12-20T02:30:28Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (buffer != null) { buffer.force(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6651/buggy-version/src.main.java.vanilla.java.chronicle.impl.IndexedChronicle.java", "BodyUseAPI": ["java.nio.MappedByteBuffer.force()"], "Fixed commit": "bf49f75666463294507da97627a8436d3b2edef1", "Url": "https://api.github.com/repos/peter-lawrey/Java-Chronicle", "Date": "2012-04-26T08:23:55Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apromore.portal.dialogController.MainController.getSearchHistory()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (j < (previousSearches.size())) { new org.zkoss.zul.Comboitem(previousSearches.get(j).getSearch()).setParent(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3510/buggy-version/Apromore-Portal.src.main.java.org.apromore.portal.dialogController.SimpleSearchController.java", "BodyUseAPI": ["java.util.List<org.apromore.model.SearchHistoriesType>.get(int)", "org.zkoss.zul.Comboitem.setParent(org.apromore.portal.dialogController.SimpleSearchController)", "previousSearches.get(j).getSearch()"], "Fixed commit": "ad538af6e4e13cbcb1c3490aa6ac130aa37c548a", "Url": "https://api.github.com/repos/apromore/ApromoreCode", "Date": "2014-02-04T07:01:31Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (configured) { java.lang.String userMode = new org.openl.rules.webstudio.web.servlet.ConfigurationManager(true, ((java.lang.System.getProperty(\"webstudio.home\")) + \"/system-settings/system.properties\"), ((java.lang.System.getProperty(\"webapp.root\")) + \"/WEB-INF/conf/system.properties\")).getStringProperty(\"user.mode\"); java.lang.System.setProperty(\"user.mode\", userMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6484/buggy-version/STUDIO.org.openl.rules.webstudio.src.org.openl.rules.webstudio.web.servlet.StartupListener.java", "BodyUseAPI": [], "Fixed commit": "5656cf935476c88a45477e4d218af2a0f67eca26", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2017-07-17T19:56:49Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numFlipped > 0) { addCellCount(iago.Board.BoardState.asBoardState(player), 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5640/buggy-version/org.nelfin.othello.src.iago.Board.java", "BodyUseAPI": [], "Fixed commit": "34f2929c9ede11b2bdbeedc4c84adb71e19c1705", "Url": "https://api.github.com/repos/nelfin/othello", "Date": "2012-04-20T07:21:30Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mule.devkit.generation.adapter.InjectAdapterGenerator.getClassForRole(context.getNameUtils().generateModuleObjectRoleKey(typeElement))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (previous == null) { previous = ((org.mule.devkit.model.code.TypeReference) (ref(typeElement.asType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6375/buggy-version/core.annotations-processor.src.main.java.org.mule.devkit.generation.adapter.InjectAdapterGenerator.java", "BodyUseAPI": [], "Fixed commit": "0760fe377fdb129ab4a4a05021d1edb8edbeeaaf", "Url": "https://api.github.com/repos/genjosanzo/mule-devkit", "Date": "2012-02-07T22:53:30Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (par2World.isRemote) researchesDone = getPlayerResearch(par1ItemStack); else { par3EntityPlayer.addChatMessage(\"ttmisc.shareTome.sync\"); break sync; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7271/buggy-version/src.main.java.vazkii.tinkerer.common.item.ItemShareBook.java", "BodyUseAPI": [], "Fixed commit": "e73cd1773bef00e33f3d78704f58fc7dfee503ac", "Url": "https://api.github.com/repos/Thaumic-Tinkerer/ThaumicTinkerer", "Date": "2014-03-18T14:40:43Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (frame.getOpCode().isControlFrame()) { if ((frame.getPayloadLength()) > 125) { throw new org.eclipse.jetty.websocket.api.ProtocolException(\"Invalid control frame payload length\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4323/buggy-version/jetty-websocket.websocket-core.src.main.java.org.eclipse.jetty.websocket.generator.FrameGenerator.java", "BodyUseAPI": ["org.eclipse.jetty.websocket.protocol.WebSocketFrame.getPayloadLength()"], "Fixed commit": "c7cff443be320ffb71bedef2e98ad7c91939b155", "Url": "https://api.github.com/repos/eclipse/jetty.project", "Date": "2012-07-06T20:55:09Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((difficultyRetargetStrategy) == null) { difficultyRetargetStrategy = new com.google.bitcoin.core.BlockHeightDifficultyRetargetStrategySelector(200, new com.google.bitcoin.core.TweakedBitcoinDifficultyRetargetStrategy(params, blockStore), new com.google.bitcoin.core.KimotoGravityWellDiffTargetStrategy(params, blockStore)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/222/buggy-version/maxcoin.src.main.java.com.google.bitcoin.core.MaxcoinDefinition.java", "BodyUseAPI": [], "Fixed commit": "a6ba76f657ee988d24a6c242ed81e59b022f94fd", "Url": "https://api.github.com/repos/krakerjaak/maxcoinj", "Date": "2014-07-01T17:44:53Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (consulo.unity3d.projectImport.Unity3dProjectUtil.isVersionHigherOrEqual(unitySdk, \"5.2.0\")) { layer.addOrderEntry(new consulo.dotnet.roots.orderEntry.DotNetLibraryOrderEntryImpl(layer, \"UnityEngine.Advertisements\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6340/buggy-version/src.consulo.unity3d.projectImport.Unity3dProjectUtil.java", "BodyUseAPI": [], "Fixed commit": "5336e2b73f21f7e438d9eab682cee8c78f165ef3", "Url": "https://api.github.com/repos/consulo/consulo-unity3d", "Date": "2016-08-01T10:22:57Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (consulo.unity3d.projectImport.Unity3dProjectUtil.isVersionHigherOrEqual(unitySdk, \"5.3.0\")) { layer.addOrderEntry(new consulo.dotnet.roots.orderEntry.DotNetLibraryOrderEntryImpl(layer, \"UnityEngine.Purchasing\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6340/buggy-version/src.consulo.unity3d.projectImport.Unity3dProjectUtil.java", "BodyUseAPI": [], "Fixed commit": "5336e2b73f21f7e438d9eab682cee8c78f165ef3", "Url": "https://api.github.com/repos/consulo/consulo-unity3d", "Date": "2016-08-01T10:22:57Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(problemDetailDao.hasProblemContent(problemCode))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/412/buggy-version/src.main.java.pl.adjule.web.rest.problem.ProblemsEndpoint.java", "BodyUseAPI": [], "Fixed commit": "c2c46af9e7df6aa1d37f05fa57b67b03b5825d05", "Url": "https://api.github.com/repos/kTT/adjule", "Date": "2015-12-02T20:05:24Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cl == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2687/buggy-version/org.osate.xtext.aadl2.errormodel.src.org.osate.xtext.aadl2.errormodel.util.EM2Util.java", "BodyUseAPI": [], "Fixed commit": "78d8457cc8a80ff77d861d84dbdadc2b82be8927", "Url": "https://api.github.com/repos/osate/ErrorModelV2", "Date": "2013-01-31T06:20:27Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requested) == (java.lang.Long.MAX_VALUE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/849/buggy-version/rxjava-core.src.main.java.rx.internal.operators.OperatorTakeLast.java", "BodyUseAPI": [], "Fixed commit": "3eb9df822a0927d1dc2e6a74d7d40e0ede6bb9f5", "Url": "https://api.github.com/repos/zsxwing/RxJava", "Date": "2014-07-26T16:26:30Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((taskObj.getForms()) != null) && ((taskObj.getForms().size()) > 0)) { tasks.add(tAf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1149/buggy-version/OCD.src.org.bdigital.ocd.cases.CaseTaskDetailsAction.java", "BodyUseAPI": [], "Fixed commit": "5447724aee3a586027ea22fdc012b00e046b7d7e", "Url": "https://api.github.com/repos/jordifhios/ocd_java", "Date": "2014-03-17T11:36:17Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getManager().getSelectedTextEditor()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (newEditor != null) _currentEditor = newEditor;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2014/buggy-version/src.idea.plugin.psiviewer.controller.project.EditorListener.java", "BodyUseAPI": [], "Fixed commit": "d01ace3cd3cb385a8f90e0a61c2a8537ee2c46b7", "Url": "https://api.github.com/repos/cmf/psiviewer", "Date": "2013-10-27T04:03:25Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (me.mrCookieSlime.Slimefun.research.PlayerResearch.plugin.getConfig().getBoolean((\"researches.\" + research))) { if ((rcfg.contains((((p.getName()) + \".\") + research))) && (rcfg.getBoolean((((p.getName()) + \".\") + research)))) { b = true; } }else { b = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1853/buggy-version/src.me.mrCookieSlime.Slimefun.research.PlayerResearch.java", "BodyUseAPI": ["org.bukkit.configuration.file.FileConfiguration.getBoolean((((p.getName()) + \".\") + research))", "org.bukkit.configuration.file.FileConfiguration.contains((((p.getName()) + \".\") + research))"], "Fixed commit": "fe3957b928bb66b8238237cfb4635acd494e1f2c", "Url": "https://api.github.com/repos/mrCookieSlime/Slimefun", "Date": "2014-02-26T17:40:12Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kwstudios.play.toolbox.MotdListGetter.getMotdList().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (motd != \"\") { event.setMotd(((org.kwstudios.play.toolbox.ConstantHolder.MOTD_PREFIX) + motd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/13/buggy-version/src.org.kwstudios.play.loader.EventListener.java", "BodyUseAPI": ["org.bukkit.event.server.ServerListPingEvent.setMotd(((org.kwstudios.play.toolbox.ConstantHolder.MOTD_PREFIX) + motd))"], "Fixed commit": "cfb73113681382359feefa6e033f0eb50d50df6d", "Url": "https://api.github.com/repos/KWStudios/KWBungeeLobby", "Date": "2015-08-17T23:16:01Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position) >= (metrics.size())) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6873/buggy-version/core.java.com.google.census.MetricMap.java", "BodyUseAPI": [], "Fixed commit": "4e29059422cd8a2ff616854f0b04ca2da7d830cd", "Url": "https://api.github.com/repos/census-instrumentation/opencensus-java", "Date": "2016-09-30T22:47:33Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.raizlabs.android.dbflow.structure.ModelAdapter<TModel>.exists(TModel,com.raizlabs.android.dbflow.structure.database.DatabaseWrapper)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (exists) { exists = update(model, wrapper); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/483/buggy-version/dbflow.src.main.java.com.raizlabs.android.dbflow.sql.saveable.ModelSaver.java", "BodyUseAPI": [], "Fixed commit": "5cde04ff79f110b438d786054434c83e757625c7", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2017-12-19T20:11:20Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exists) { com.raizlabs.android.dbflow.runtime.NotifyDistributor.get().notifyModelChanged(model, getModelAdapter(), BaseModel.Action.SAVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/483/buggy-version/dbflow.src.main.java.com.raizlabs.android.dbflow.sql.saveable.ModelSaver.java", "BodyUseAPI": [], "Fixed commit": "5cde04ff79f110b438d786054434c83e757625c7", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2017-12-19T20:11:20Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!exists) { exists = (insert(model, wrapper)) > (com.raizlabs.android.dbflow.sql.saveable.ModelSaver.INSERT_FAILED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/483/buggy-version/dbflow.src.main.java.com.raizlabs.android.dbflow.sql.saveable.ModelSaver.java", "BodyUseAPI": [], "Fixed commit": "5cde04ff79f110b438d786054434c83e757625c7", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2017-12-19T20:11:20Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (classType == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2538/buggy-version/net.sourceforge.metrics.src.net.sourceforge.metrics.calculators.InheritanceRatio.java", "BodyUseAPI": [], "Fixed commit": "fa420f06bff54d269acbea6478b959fa00aecec1", "Url": "https://api.github.com/repos/SumitBisht/Metrics", "Date": "2014-11-24T16:37:00Z"},
{"Line": "=>2263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getDeviceMetrics().getDeviceName().equals(\"\u0428\u0422\u0420\u0418\u0425-\u041c-01\u0424\")) { return true; }else { return getModel().getSwapGraphicsLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2024/buggy-version/Source.Core.src.com.shtrih.fiscalprinter.SMFiscalPrinterImpl.java", "BodyUseAPI": [], "Fixed commit": "d15dd893e2c0e0e028d04b3b0e38426e8b9ef64f", "Url": "https://api.github.com/repos/shtrih-m/javapos_shtrih", "Date": "2017-06-27T15:51:16Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState == null) { android.content.Intent intent = getIntent(); accountBean = ((org.qii.weiciyuan.bean.AccountBean) (intent.getSerializableExtra(\"account\"))); }else { accountBean = ((org.qii.weiciyuan.bean.AccountBean) (savedInstanceState.getSerializable(\"account\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2794/buggy-version/src.org.qii.weiciyuan.ui.main.MainTimeLineActivity.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "17f6b6bc2c679f0fb5b0c2ff278f17d579407517", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-02T02:45:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentReaders.isEmpty())) { uncheckpointedHosts.put(checkpointId, new java.util.ArrayList<>(currentReaders)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5600/buggy-version/client.src.main.java.io.pravega.client.stream.impl.CheckpointState.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.put(java.lang.String,java.util.ArrayList<>)"], "Fixed commit": "0fdb788cc64c61465a2a4acd341342e957e39343", "Url": "https://api.github.com/repos/bhargav-gulavani/pravega", "Date": "2017-05-03T18:57:56Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uri == null) || (uri.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8159/buggy-version/src.main.java.com.htwk.app.repository.InformationRepository.java", "BodyUseAPI": [], "Fixed commit": "95d8e8b1ccc16ec2857872f58fe999d48136b0ff", "Url": "https://api.github.com/repos/HTWK-App/Server-Application", "Date": "2014-06-11T15:33:17Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRefreshStatus) == (RefreshStatus.REFRESHING)) { changeRefreshViewPositionWithAnimation(0, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6901/buggy-version/htrefreshrecyclerview.src.main.java.com.netease.hearttouch.htrefreshrecyclerview.viewimpl.HTBaseRecyclerViewImpl.java", "BodyUseAPI": [], "Fixed commit": "77be2f4b49c57a0fd69b658610df82e76999ab5d", "Url": "https://api.github.com/repos/NEYouFan/ht-refreshrecyclerview", "Date": "2016-10-19T07:12:19Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastChallenge) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6904/buggy-version/10.application.src.at.ac.tuwien.itsfliti.securedobject.SecuredObject.java", "BodyUseAPI": [], "Fixed commit": "ca8d21a0b69df4080bda3a6fd559737bc6d4cc93", "Url": "https://api.github.com/repos/fruetschi/lab1d", "Date": "2013-06-05T18:46:28Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.jetpad.vclang.typechecking.FunctionDefinition.getResultType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (userType instanceof com.jetbrains.jetpad.vclang.term.expr.type.PiTypeOmega) { final com.jetbrains.jetpad.vclang.term.expr.sort.SortMax sorts = new com.jetbrains.jetpad.vclang.term.expr.sort.SortMax(); elimTree.accept(new com.jetbrains.jetpad.vclang.term.pattern.elimtree.visitor.ElimTreeNodeVisitor<java.lang.Void, java.lang.Void>() { @java.lang.Override public java.lang.Void visitBranch(com.jetbrains.jetpad.vclang.typechecking.BranchElimTreeNode branchNode, java.lang.Void params) { for (com.jetbrains.jetpad.vclang.typechecking.ConstructorClause clause : branchNode.getConstructorClauses()) { clause.getChild().accept(this, null); } if ((branchNode.getOtherwiseClause()) != null) { branchNode.getOtherwiseClause().getChild().accept(this, null); } return null; } @java.lang.Override public java.lang.Void visitLeaf(com.jetbrains.jetpad.vclang.typechecking.LeafElimTreeNode leafNode, java.lang.Void params) { sorts.add(leafNode.getExpression().getType().getPiCodomain().toSorts()); return null; } @java.lang.Override public java.lang.Void visitEmpty(com.jetbrains.jetpad.vclang.typechecking.EmptyElimTreeNode emptyNode, java.lang.Void params) { return null; } }, null); actualType = new com.jetbrains.jetpad.vclang.term.expr.type.PiUniverseType(userType.getPiParameters(), sorts); }else { actualType = userType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3673/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.typechecking.DefinitionCheckType.java", "BodyUseAPI": ["com.jetbrains.jetpad.vclang.term.expr.type.TypeMax.getPiParameters()"], "Fixed commit": "3853ee909b85bc739d7a4d7dda9956cd9ab0c042", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2016-12-02T20:52:23Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.map.size()) > 10000) { this.cleanup(context); this.map.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4127/buggy-version/src.main.java.com.thinkaurelius.faunus.mapreduce.operators.EdgeLabelDistribution.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Long>.clear()"], "Fixed commit": "93012529397c49f2fd9f117b28ff05a821ed343f", "Url": "https://api.github.com/repos/thinkaurelius/titan", "Date": "2012-07-28T17:09:14Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<net.minecraft.util.math.BlockPos>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mc.thePlayer.isInWater()) && ((currentPos.getY()) <= (nextPos.getY()))) mc.gameSettings.keyBindJump.pressed = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1959/buggy-version/src.tk.wurst_client.mods.GoToCmdMod.java", "BodyUseAPI": [], "Fixed commit": "32f3bcfcafefe18d92d8dab460b0fa60cf332df2", "Url": "https://api.github.com/repos/CisBetter/Wurst-MC-1.10", "Date": "2016-11-10T15:55:03Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.workingagenda.democracydroid.Adapters.EpisodeAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (e.getTitle().startsWith(\"Democracy\")) { txt.setText(e.getTitle().substring(14)); }else { txt.setText(e.getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2291/buggy-version/app.src.main.java.com.workingagenda.democracydroid.Adapters.EpisodeAdapter.java", "BodyUseAPI": ["com.workingagenda.democracydroid.Objects.Episode.getTitle()", "android.widget.TextView.setText(e.getTitle().substring(14))", "android.widget.TextView.setText(e.getTitle())", "e.getTitle().substring(int)", "com.workingagenda.democracydroid.Objects.Episode.getTitle()"], "Fixed commit": "bd24a0a9467bc29ebda3171cf2c850b43e7c06c6", "Url": "https://api.github.com/repos/fenimore/DemocracyDroid", "Date": "2016-07-31T19:03:02Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (async == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1712/buggy-version/core.src.main.java.org.fourthline.cling.transport.impl.AsyncServletStreamServerImpl.java", "BodyUseAPI": [], "Fixed commit": "8bdc3669e28c953e0125ce9978ed436139634b7c", "Url": "https://api.github.com/repos/rzwuhan/cling", "Date": "2017-05-08T04:25:44Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (curatorFrameworkOp.checkExists(com.vip.saturn.job.console.utils.JobNodePath.getJobNodePath(jobConfig.getJobName()))) { throw new com.vip.saturn.job.console.exception.SaturnJobConsoleHttpException(HttpStatus.BAD_REQUEST.value(), ((\"Invalid request. Job: {\" + (jobConfig.getJobName())) + \"} already existed\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7612/buggy-version/saturn-console.src.main.java.com.vip.saturn.job.console.service.impl.RestApiServiceImpl.java", "BodyUseAPI": ["com.vip.saturn.job.console.service.impl.JobConfig.getJobName()"], "Fixed commit": "791ac4a1154ba8938decb1be8dd8e0fe68d0ae7f", "Url": "https://api.github.com/repos/vipshop/Saturn", "Date": "2017-05-31T06:19:59Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!isChecked) && (isSpeedAlarmPlaying)) { isSpeedAlarmPlaying = false; view.playSound(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2859/buggy-version/app.src.main.java.net.kwatts.powtools.view.AlertsPresenter.java", "BodyUseAPI": [], "Fixed commit": "8cf3227989eb271bdb86c71447ade40108d7f392", "Url": "https://api.github.com/repos/ponewheel/android-ponewheel", "Date": "2017-12-14T03:47:06Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!isChecked) && (isChargeAlarmPlaying)) { isChargeAlarmPlaying = false; view.playSound(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2859/buggy-version/app.src.main.java.net.kwatts.powtools.view.AlertsPresenter.java", "BodyUseAPI": [], "Fixed commit": "8cf3227989eb271bdb86c71447ade40108d7f392", "Url": "https://api.github.com/repos/ponewheel/android-ponewheel", "Date": "2017-12-14T03:47:06Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((div1 + 1) >= (net.osmand.util.MapUtils.coefficientsY.length)) { h1 = (net.osmand.util.MapUtils.coefficientsY[div1]) + ((mod1 / ((double) (div))) * ((net.osmand.util.MapUtils.coefficientsY[div1]) - (net.osmand.util.MapUtils.coefficientsY[(div1 - 1)]))); }else { h1 = (net.osmand.util.MapUtils.coefficientsY[div1]) + ((mod1 / ((double) (div))) * ((net.osmand.util.MapUtils.coefficientsY[(div1 + 1)]) - (net.osmand.util.MapUtils.coefficientsY[div1]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8319/buggy-version/OsmAnd-java.src.net.osmand.util.MapUtils.java", "BodyUseAPI": [], "Fixed commit": "03a620a1e86ce5fbd16b2bda0551d87cd7e513ce", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2017-12-01T12:20:45Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((div2 + 1) >= (net.osmand.util.MapUtils.coefficientsY.length)) { h2 = (net.osmand.util.MapUtils.coefficientsY[div2]) + ((mod2 / ((double) (div))) * ((net.osmand.util.MapUtils.coefficientsY[div2]) - (net.osmand.util.MapUtils.coefficientsY[(div2 - 1)]))); }else { h2 = (net.osmand.util.MapUtils.coefficientsY[div2]) + ((mod2 / ((double) (div))) * ((net.osmand.util.MapUtils.coefficientsY[(div2 + 1)]) - (net.osmand.util.MapUtils.coefficientsY[div2]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8319/buggy-version/OsmAnd-java.src.net.osmand.util.MapUtils.java", "BodyUseAPI": [], "Fixed commit": "03a620a1e86ce5fbd16b2bda0551d87cd7e513ce", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2017-12-01T12:20:45Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.parameter) != null) { memberName = exprGen.naming.makeUnquotedIdent(exprGen.naming.selector(this.parameter, Naming.NA_ANNOTATION_MEMBER)); }else { memberName = exprGen.makeErroneous(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/856/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.AnnotationInvocationVisitor.java", "BodyUseAPI": [], "Fixed commit": "c09f274bd08154432b11c032556a522c03dfcaf8", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2013-06-25T09:50:34Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pageNoSchema.hasNextPage()) { return new com.google.cloud.bigquery.TableResult(schema, totalRows, pageNoSchema.getNextPage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7758/buggy-version/google-cloud-bigquery.src.main.java.com.google.cloud.bigquery.TableResult.java", "BodyUseAPI": ["com.google.api.gax.paging.Page<com.google.cloud.bigquery.FieldValueList>.getNextPage()"], "Fixed commit": "ad69088ccd663a400d685c991f393341c5b3d8d7", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-java", "Date": "2017-12-17T02:06:24Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((relationMap.size()) == 0) || (relationMap.containsKey(generator))) powers.put(generator, power);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4519/buggy-version/src.DualSteenrod.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Integer>.put(int,int)"], "Fixed commit": "3f9d73a96c891c064824175f1f2b6b456029d06f", "Url": "https://api.github.com/repos/swixi/steenrod", "Date": "2016-11-27T06:16:22Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity) != null) { defs.put(\"entity\", entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6960/buggy-version/src.main.java.com.denizenscript.denizen2sponge.events.server.CommandSentScriptEvent.java", "BodyUseAPI": [], "Fixed commit": "1154110733bd7cf08e76d4c084b64232c58308ba", "Url": "https://api.github.com/repos/DenizenScript/Denizen2Sponge", "Date": "2017-10-05T01:24:15Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location) != null) { defs.put(\"location\", location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6960/buggy-version/src.main.java.com.denizenscript.denizen2sponge.events.server.CommandSentScriptEvent.java", "BodyUseAPI": [], "Fixed commit": "1154110733bd7cf08e76d4c084b64232c58308ba", "Url": "https://api.github.com/repos/DenizenScript/Denizen2Sponge", "Date": "2017-10-05T01:24:15Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { defs.put(\"player\", player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6960/buggy-version/src.main.java.com.denizenscript.denizen2sponge.events.server.CommandSentScriptEvent.java", "BodyUseAPI": [], "Fixed commit": "1154110733bd7cf08e76d4c084b64232c58308ba", "Url": "https://api.github.com/repos/DenizenScript/Denizen2Sponge", "Date": "2017-10-05T01:24:15Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Entity.getShooter()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (shooter == null) { lastHit.put(name, \"Unknown Bowman\"); }else { if (shooter instanceof org.bukkit.entity.HumanEntity) { lastHit.put(name, ((org.bukkit.entity.HumanEntity) (shooter)).getName()); }else { java.lang.String customName = shooter.getCustomName(); lastHit.put(name, (customName == null ? shooter.getType().getName() : customName)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5426/buggy-version/src.main.java.net.daboross.bukkitdev.skywars.listeners.DeathListener.java", "BodyUseAPI": ["org.bukkit.entity.LivingEntity.getType()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,(customName == null ? shooter.getType().getName() : customName))", "shooter.getType().getName()", "org.bukkit.entity.LivingEntity.getCustomName()"], "Fixed commit": "fb3ed844ae522e6fada0a9c9f7cd21485d7e01d4", "Url": "https://api.github.com/repos/daboross/SkyWars", "Date": "2013-08-19T20:15:49Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.reflect.Modifier.isStatic(f.getModifiers())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5873/buggy-version/core.src.main.java.org.sql2o.reflection.PojoMetadata.java", "BodyUseAPI": [], "Fixed commit": "ba8d1c0f3fa73a289909eb3e2bc4627c62ad1eed", "Url": "https://api.github.com/repos/aaberg/sql2o", "Date": "2017-08-22T13:41:48Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["txtIn.getText().toString()", "txtCm.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((textInches.trim().equals(\"\")) && (textCm.trim().equals(\"\"))) { android.widget.Toast msg = android.widget.Toast.makeText(context, getString(R.string.tools_convert_error), Toast.LENGTH_LONG); msg.show(); }else { if (inches2cm) { double in = java.lang.Double.parseDouble(textInches); double cm = in2cm(in); txtCm.setText((\"\" + cm)); }else { double cm = java.lang.Double.parseDouble(textCm); double in = cm2in(cm); txtIn.setText((\"\" + in)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1100/buggy-version/src.com.lzm.Cajas.ToolsFragment.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "4e10ab07429a88e598cb50001ca8dae2f1d72397", "Url": "https://api.github.com/repos/luzma87/Floramo", "Date": "2014-12-03T05:08:27Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(value)) { setErrorMessage(R.string.no_text_error); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/585/buggy-version/app.src.main.java.com.development.jaba.moneypit.AddOrEditFillupActivity.java", "BodyUseAPI": [], "Fixed commit": "4124b63e9832698fa32547b9d326251c75ab5d68", "Url": "https://api.github.com/repos/jcbaar/MoneyPit", "Date": "2014-12-31T17:03:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contacts.length) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/951/buggy-version/javaim.client.view.gui.contacts.ContactsList.java", "BodyUseAPI": [], "Fixed commit": "c016f07cb1d17eb8f5e287eb27d64686dc39b9f3", "Url": "https://api.github.com/repos/onlycheez/JavaIM", "Date": "2014-01-13T01:01:17Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) < (tokens.size())) { catches.add(parseCatch(parentIndent)); indent = getIndent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3328/buggy-version/modules.wyc.src.wyc.stages.WhileyParser.java", "BodyUseAPI": [], "Fixed commit": "932429afe60730dd09241bc5a5f586e1c77957a8", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-12-06T21:00:49Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) < (tokens.size())) { stmts.add(parseStatement(parentIndent)); indent = getIndent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3328/buggy-version/modules.wyc.src.wyc.stages.WhileyParser.java", "BodyUseAPI": [], "Fixed commit": "932429afe60730dd09241bc5a5f586e1c77957a8", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-12-06T21:00:49Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) < (tokens.size())) { cases.add(parseCase(parentIndent)); indent = getIndent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3328/buggy-version/modules.wyc.src.wyc.stages.WhileyParser.java", "BodyUseAPI": [], "Fixed commit": "932429afe60730dd09241bc5a5f586e1c77957a8", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-12-06T21:00:49Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ut.dph.model.configurationTransport.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currTransportId == 0) { configurationTransportManager.setupOnlineForm(transportId, com.ut.dph.controller.adminConfigController.configId, configurationDetails.getMessageTypeId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4622/buggy-version/src.main.java.com.ut.dph.controller.adminConfigController.java", "BodyUseAPI": [], "Fixed commit": "73edc84ac4a35df6241f3e6019f759c0d49e5e2b", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2014-03-18T19:10:55Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.PATHoleilu.hutool.util.ArrayUtil.isEmpty(in)) { return in; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/442/buggy-version/hutool-core.src.main.java.com.PATHoleilu.hutool.codec.Base64Decoder.java", "BodyUseAPI": [], "Fixed commit": "732f213997b4362bca789fb1e1e53f6bc9dc26a5", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2017-12-27T17:24:35Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.PATHoleilu.hutool.util.ArrayUtil.isEmpty(in)) { return in; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/442/buggy-version/hutool-core.src.main.java.com.PATHoleilu.hutool.codec.Base64Decoder.java", "BodyUseAPI": [], "Fixed commit": "732f213997b4362bca789fb1e1e53f6bc9dc26a5", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2017-12-27T17:24:35Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nowHour > hour) { if (nowHour == (hour + 1)) { long calTime = cal.getTimeInMillis(); long messageCalTime = messageCal.getTimeInMillis(); long time = (calTime - messageCalTime) / (1000 * 60); return (\"\" + time) + (org.qii.weiciyuan.support.utils.GlobalContext.getInstance().getString(R.string.min)); } return (\"\" + (nowHour - hour)) + (org.qii.weiciyuan.support.utils.GlobalContext.getInstance().getString(R.string.hour)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2841/buggy-version/src.org.qii.weiciyuan.bean.CommentBean.java", "BodyUseAPI": [], "Fixed commit": "69507c9cf1954f377bce85b32b5ea20895be1d65", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-27T09:14:03Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nowHour > hour) { if (nowHour == (hour + 1)) { long calTime = cal.getTimeInMillis(); long messageCalTime = messageCal.getTimeInMillis(); long time = (calTime - messageCalTime) / (1000 * 60); return (\"\" + time) + (org.qii.weiciyuan.support.utils.GlobalContext.getInstance().getString(R.string.min)); } return (\"\" + (nowHour - hour)) + (org.qii.weiciyuan.support.utils.GlobalContext.getInstance().getString(R.string.hour)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2841/buggy-version/src.org.qii.weiciyuan.bean.MessageBean.java", "BodyUseAPI": [], "Fixed commit": "69507c9cf1954f377bce85b32b5ea20895be1d65", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-27T09:14:03Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.javersion.path.PropertyPath.keyOrIndex(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((context.getProperty(targetPath)) != null) { return context.prepareObject(targetPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/943/buggy-version/javersion-object.src.main.java.org.javersion.object.types.ReferenceType.java", "BodyUseAPI": ["org.javersion.object.ReadContext.prepareObject(org.javersion.path.PropertyPath)"], "Fixed commit": "e21088a39d679c71fbf568bfda6c91d22fe19131", "Url": "https://api.github.com/repos/ssaarela/javersion", "Date": "2015-11-27T11:58:16Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mStepList.isEmpty()) { comments.setVisible(false); }else { comments.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3041/buggy-version/app.src.main.java.org.stepic.droid.view.fragments.StepsFragment.java", "BodyUseAPI": [], "Fixed commit": "55b0f0a07a94e6e6dfe3191e1d249aaf3fbae798", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2016-05-24T18:16:38Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.view.ViewPager.getCurrentItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((position < 0) || (position >= (mStepList.size()))) { return super.onOptionsItemSelected(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3041/buggy-version/app.src.main.java.org.stepic.droid.view.fragments.StepsFragment.java", "BodyUseAPI": [], "Fixed commit": "55b0f0a07a94e6e6dfe3191e1d249aaf3fbae798", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2016-05-24T18:16:38Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(line.matches(\"\\\\s+.*\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5064/buggy-version/nl.usetechnology.cmake.src.nl.usetechnology.cmake.CMakeLauncher.java", "BodyUseAPI": [], "Fixed commit": "494b747d5b25431ca0a2a0fd7df85ca8bb07cc54", "Url": "https://api.github.com/repos/USESystemEngineeringBV/cmake-eclipse-helper", "Date": "2016-10-12T07:21:56Z"},
{"Line": "=>638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numElemToAllocate <= 0) || ((numBytes) <= 0)) throw new org.apache.sysml.runtime.DMLRuntimeException((((\"Cannot allocate dense matrix object with \" + numElemToAllocate) + \" elements and size \") + (numBytes)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8133/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.JCudaObject.java", "BodyUseAPI": [], "Fixed commit": "50a59a8e09971f5635650bfc0dfacd27f0e10d39", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2016-11-03T03:06:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m.getHostString()) != null) { for (org.gridkit.vicluster.ViNode node : edu.isi.wings.catalog.resource.classes.GridkitCloud.cloud.listNodes(m.getHostString())) node.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6600/buggy-version/planner.src.main.java.edu.isi.wings.catalog.resource.classes.GridkitCloud.java", "BodyUseAPI": ["edu.isi.wings.catalog.resource.classes.Machine.getHostString()", "org.gridkit.nanocloud.Cloud.listNodes(m.getHostString())"], "Fixed commit": "2ec2d2b7c1fc4fdda1c05898911d5837a2960e6f", "Url": "https://api.github.com/repos/IKCAP/wings", "Date": "2014-09-11T11:43:25Z"},
{"Line": "=>1060", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dates == null) || ((dates.size()) == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/63/buggy-version/web.src.main.java.org.mskcc.cbio.oncokb.controller.DriveAnnotationParser.java", "BodyUseAPI": [], "Fixed commit": "3fd48860420632ae9f693accbc4af1cb4da05156", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-08-31T03:36:39Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((edge.getTargetId()) == (key.get())) { }else if (edge.isOutgoing()) { if (foundOut) sbOut.append(','); sbOut.append(edge.getTargetId()); foundOut = true; }else { if (foundIn) sbIn.append(','); sbIn.append(edge.getTargetId()); foundIn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1616/buggy-version/platforms.mapreducev2.src.main.java.nl.tudelft.graphalytics.mapreducev2.conversion.DirectedVertexReducer.java", "BodyUseAPI": ["nl.tudelft.graphalytics.mapreducev2.conversion.EdgeData.isOutgoing()", "java.lang.StringBuffer.append(edge.getTargetId())", "nl.tudelft.graphalytics.mapreducev2.conversion.EdgeData.getTargetId()", "nl.tudelft.graphalytics.mapreducev2.conversion.EdgeData.getTargetId()", "java.lang.StringBuffer.append(edge.getTargetId())"], "Fixed commit": "84363b9754ee78bfef347672f5b81fea79f0dcf5", "Url": "https://api.github.com/repos/ldbc/ldbc_graphalytics", "Date": "2015-03-31T18:34:10Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.surefire) == null) { edu.illinois.nondex.common.Logger.getGlobal().log(java.util.logging.Level.SEVERE, \"Make sure surefire is in your pom.xml\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2906/buggy-version/nondex-maven-plugin.src.main.java.edu.illinois.nondex.plugin.AbstractNondexMojo.java", "BodyUseAPI": [], "Fixed commit": "60baaf141c1cd12c7643f3156f7a02f38138e89a", "Url": "https://api.github.com/repos/TestingResearchIllinois/NonDex", "Date": "2016-06-13T22:57:37Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resource == null) || (!(resource.isFluidEqual(tank.getFluid())))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8154/buggy-version/src.main.java.techreborn.tiles.TileDieselGenerator.java", "BodyUseAPI": [], "Fixed commit": "11fd75561926b81acea466e0965468c700e894c0", "Url": "https://api.github.com/repos/TechReborn/TechReborn", "Date": "2015-09-10T18:39:00Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6391/buggy-version/launay-iorgulescu-ex3.src.ch.epfl.iagents.Heuristics.java", "BodyUseAPI": [], "Fixed commit": "353cbda16e03bad663bcafd073e21eb6c514fea4", "Url": "https://api.github.com/repos/calin-iorgulescu/IA_ex3", "Date": "2017-10-19T23:53:02Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6391/buggy-version/launay-iorgulescu-ex3.src.ch.epfl.iagents.State.java", "BodyUseAPI": [], "Fixed commit": "353cbda16e03bad663bcafd073e21eb6c514fea4", "Url": "https://api.github.com/repos/calin-iorgulescu/IA_ex3", "Date": "2017-10-19T23:53:02Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.FrancoisDescamps.CatPlayer.MainActivity.rowItemsWaitList) != null) { org.FrancoisDescamps.CatPlayer.MainActivity.rowItemsWaitList.clear(); }else { org.FrancoisDescamps.CatPlayer.MainActivity.rowItemsWaitList = new java.util.ArrayList<org.FrancoisDescamps.CatPlayer.Rows.RowItemsMain>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8071/buggy-version/app.src.main.java.org.FrancoisDescamps.CatPlayer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "abe6f50c5cae74a2875a89468dfa21095d25ba57", "Url": "https://api.github.com/repos/FrancoisDescamps/CatPlayer", "Date": "2016-12-08T20:44:22Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nameList.isEmpty()) { logUser((\"No maps created for your version!? \" + (fileListURL))); return; }else if (hasError()) { getError().printStackTrace(); logUser((\"Are you connected to the internet? Problem while fetching remote area list: \" + (getErrorMessage()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8038/buggy-version/android.app.src.main.java.com.graphhopper.android.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a37269813f6ea9e370f87518aaf56026f3040839", "Url": "https://api.github.com/repos/graphhopper/graphhopper", "Date": "2015-02-25T16:58:39Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.type().isArray()) { createFromParcel.body().invoke(in, \"readList\").arg(instance.ref(f)).arg(com.sun.codemodel.JExpr.direct(((f.type().erasure().name()) + \".class.getClassLoader()\"))); }else { createFromParcel.body().assign(instance.ref(f), com.sun.codemodel.JExpr.cast(f.type(), in.invoke(\"readValue\").arg(com.sun.codemodel.JExpr.direct(((f.type().erasure().name()) + \".class.getClassLoader()\"))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6631/buggy-version/jsonschema2pojo-core.src.main.java.org.jsonschema2pojo.util.ParcelableHelper.java", "BodyUseAPI": ["com.sun.codemodel.JFieldVar.type()", "f.type().erasure().name()", "in.invoke(\"readValue\").arg(com.sun.codemodel.JExpr.direct(((f.type().erasure().name()) + \".class.getClassLoader()\")))", "f.type().erasure().name()", "f.type().erasure()", "f.type().erasure()", "com.sun.codemodel.JFieldVar.type()", "createFromParcel.body().invoke(in, \"readList\").arg(instance.ref(f)).arg(com.sun.codemodel.JExpr.direct(((f.type().erasure().name()) + \".class.getClassLoader()\")))", "com.sun.codemodel.JVar.ref(com.sun.codemodel.JFieldVar)", "createFromParcel.body().invoke(in, \"readList\").arg(instance.ref(f))", "createFromParcel.body().assign(instance.ref(f),com.sun.codemodel.JExpr.cast(f.type(), in.invoke(\"readValue\").arg(com.sun.codemodel.JExpr.direct(((f.type().erasure().name()) + \".class.getClassLoader()\")))))", "com.sun.codemodel.JFieldVar.type()", "com.sun.codemodel.JExpr.cast(f.type(),in.invoke(\"readValue\").arg(com.sun.codemodel.JExpr.direct(((f.type().erasure().name()) + \".class.getClassLoader()\"))))", "com.sun.codemodel.JExpr.direct(((f.type().erasure().name()) + \".class.getClassLoader()\"))", "com.sun.codemodel.JVar.ref(com.sun.codemodel.JFieldVar)", "com.sun.codemodel.JExpr.direct(((f.type().erasure().name()) + \".class.getClassLoader()\"))"], "Fixed commit": "a9846c428f19c024f252bcb60db9bf3283a52943", "Url": "https://api.github.com/repos/andforce/jsonschema2pojo", "Date": "2015-05-15T18:21:33Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.type().isArray()) { method.body().invoke(dest, \"writeList\").arg(f); }else { method.body().invoke(dest, \"writeValue\").arg(f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6631/buggy-version/jsonschema2pojo-core.src.main.java.org.jsonschema2pojo.util.ParcelableHelper.java", "BodyUseAPI": ["method.body().invoke(dest, \"writeValue\").arg(com.sun.codemodel.JFieldVar)", "method.body().invoke(dest, \"writeList\").arg(com.sun.codemodel.JFieldVar)"], "Fixed commit": "a9846c428f19c024f252bcb60db9bf3283a52943", "Url": "https://api.github.com/repos/andforce/jsonschema2pojo", "Date": "2015-05-15T18:21:33Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request().body().asJson()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((data.get(\"csv_files\")) != null) { for (com.fasterxml.jackson.databind.JsonNode json : data.get(\"csv_files\")) { listDeletedCSV.add(json.get(\"_id\").asText()); } for (com.mongodb.gridfs.GridFSDBFile file : listCSV) { listOriginCSV.add(file.getId().toString()); } for (java.lang.String s : listOriginCSV) { if (!(listDeletedCSV.contains(s))) { fileService.deleteById(s); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8673/buggy-version/services.rest.app.controllers.ScriptController.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Fixed commit": "fab185a6919d248f955a3983bbdaf74ce92298b0", "Url": "https://api.github.com/repos/cloud-ats/cloud-ats", "Date": "2016-02-29T11:52:33Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ch) == '\\\\') { hasSpecial = true; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5431/buggy-version/src.main.java.com.alibaba.druid.sql.parser.Lexer.java", "BodyUseAPI": [], "Fixed commit": "8b4ed9b23b67183184cc7591ab4e09d36a0ed67a", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2014-12-11T08:15:34Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasSpecial) { stringVal = subString(((mark) + 1), bufPos); }else { stringVal = new java.lang.String(buf, 0, bufPos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5431/buggy-version/src.main.java.com.alibaba.druid.sql.parser.Lexer.java", "BodyUseAPI": [], "Fixed commit": "8b4ed9b23b67183184cc7591ab4e09d36a0ed67a", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2014-12-11T08:15:34Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.atomic.AtomicReference<com.datastax.driver.core.Connection>.get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (c.isDefunct()) { com.datastax.driver.core.ControlConnection.logger.debug(\"Control connection is down, could not refresh node info\"); return true; }else { com.datastax.driver.core.ControlConnection.logger.error(\"No row found for host {} in {}'s peers system table. {} will be ignored.\", host.getAddress(), c.address, host.getAddress()); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7739/buggy-version/driver-core.src.main.java.com.datastax.driver.core.ControlConnection.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,host.getAddress(),c.address,host.getAddress())"], "Fixed commit": "3ab98e548cb0dcaa50eb0e3ddb44a40a42adcdcb", "Url": "https://api.github.com/repos/datastax/java-driver", "Date": "2014-08-29T11:07:00Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataToDisplay) != null) { dataToDisplay.removeAll(dataToDisplay); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7882/buggy-version/src.UI.java", "BodyUseAPI": [], "Fixed commit": "4c9fb659d0fc952fdd50824b1570da167114e80d", "Url": "https://api.github.com/repos/cs2103aug2014-w14-1j/main", "Date": "2014-10-28T07:13:07Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.type) == (com.myappstack.gball.actors.Food.FoodType.BLUE)) { t = new com.badlogic.gdx.graphics.Texture(Gdx.files.internal(\"gun.png\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7475/buggy-version/com.myappstack.gball.actors.Food.java", "BodyUseAPI": [], "Fixed commit": "aba390e89be1c1c2694ad2a3611e250150c75775", "Url": "https://api.github.com/repos/MathewDominic/MoonFrog-Hack", "Date": "2015-10-17T19:49:12Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.type) == (com.myappstack.gball.actors.Food.FoodType.RED)) { t = new com.badlogic.gdx.graphics.Texture(Gdx.files.internal(\"fire.png\")); }else if ((this.type) == (com.myappstack.gball.actors.Food.FoodType.ELECTRIC)) { t = new com.badlogic.gdx.graphics.Texture(Gdx.files.internal(\"electric.png\")); }else if ((this.type) == (com.myappstack.gball.actors.Food.FoodType.SPIKE)) { t = new com.badlogic.gdx.graphics.Texture(Gdx.files.internal(\"spike.png\")); }else if ((this.type) == (com.myappstack.gball.actors.Food.FoodType.BLUE)) { t = new com.badlogic.gdx.graphics.Texture(Gdx.files.internal(\"gun.png\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7475/buggy-version/com.myappstack.gball.actors.Food.java", "BodyUseAPI": [], "Fixed commit": "aba390e89be1c1c2694ad2a3611e250150c75775", "Url": "https://api.github.com/repos/MathewDominic/MoonFrog-Hack", "Date": "2015-10-17T19:49:12Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (value == null) { return null; }else { return value.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8219/buggy-version/cache.src.main.java.com.dubboclub.cache.config.CacheConfig.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "9e5635f6971cea2689e7f1dc2282b447b322858f", "Url": "https://api.github.com/repos/dubboclub/dubbo-plus", "Date": "2015-05-27T16:59:19Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dubboclub.cache.remote.RemoteClient.getValue(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8219/buggy-version/cache.src.main.java.com.dubboclub.cache.RemoteCache.java", "BodyUseAPI": [], "Fixed commit": "9e5635f6971cea2689e7f1dc2282b447b322858f", "Url": "https://api.github.com/repos/dubboclub/dubbo-plus", "Date": "2015-05-27T16:59:19Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parameter.getShowRowLimitation()) != (-1)) { int limitation = java.lang.Math.min(parameter.getShowRowLimitation(), finalResult.size()); finalResult.subList(limitation, finalResult.size()).clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/122/buggy-version/src.main.java.com.github.taffy128s.tlcdbms.DBManager.java", "BodyUseAPI": ["com.github.taffy128s.tlcdbms.sqlparsers.SQLParseResult.getShowRowLimitation()", "java.lang.Math.min(parameter.getShowRowLimitation(),finalResult.size())"], "Fixed commit": "7cb90139f3f37606cc8b888bdaff750ef50d3ca8", "Url": "https://api.github.com/repos/taffy128s/TLC_DBMS", "Date": "2017-04-21T13:48:35Z"},
{"Line": "=>892", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (groupTargets != null) { for (java.lang.String target : groupTargets) { groupSet.add(target); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/122/buggy-version/src.main.java.com.github.taffy128s.tlcdbms.DBManager.java", "BodyUseAPI": [], "Fixed commit": "7cb90139f3f37606cc8b888bdaff750ef50d3ca8", "Url": "https://api.github.com/repos/taffy128s/TLC_DBMS", "Date": "2017-04-21T13:48:35Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collect_results) { (this.successful_trans)++; (this.total_trans)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1316/buggy-version/transaction_client.src.TransactionClient.java", "BodyUseAPI": [], "Fixed commit": "99b4ce18171a67b4d489545ca12a6eb4991e89fa", "Url": "https://api.github.com/repos/teodormacicas/ERS-testing-tool", "Date": "2013-11-12T09:46:52Z"},
{"Line": "=>740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.getTitle()) != null) { if (!(fileWrapper.getFilename().equals(file.getTitle()))) { final java.lang.String errorMsg = java.lang.String.format(ProcessorConstants.ERROR_FILE_TITLE_NO_MATCH_MSG, fileList.getLineNumber(), file.getTitle(), fileWrapper.getFilename()); if (processingOptions.isStrictTitles()) { log.error(errorMsg); valid = false; }else { log.warn(errorMsg); file.setTitle(fileWrapper.getFilename()); } } }else { file.setTitle(fileWrapper.getFilename()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5221/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.processor.ContentSpecValidator.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.contentspec.File.getTitle()", "org.jboss.pressgang.ccms.contentspec.File.setTitle(fileWrapper.getFilename())", "org.jboss.pressgang.ccms.contentspec.File.setTitle(fileWrapper.getFilename())", "fileWrapper.getFilename().equals(file.getTitle())", "org.jboss.pressgang.ccms.contentspec.File.getTitle()", "java.lang.String.format(ProcessorConstants.ERROR_FILE_TITLE_NO_MATCH_MSG,fileList.getLineNumber(),file.getTitle(),fileWrapper.getFilename())"], "Fixed commit": "f25e385f727b751368c2c30a8c2c642e84908a5f", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpecProcessor", "Date": "2014-04-02T23:25:34Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (checkIfAnswer(type)) { string = lineOfContent; }else if (checkIfInfo(type)) { if (lineOfContent.contains(\"row\")) { string = getStringWRows(lineOfContent); }else { string = lineOfContent; } }else if (checkIfHint(type)) { if (lineOfContent.contains(\"row\")) { string = getStringWRows(lineOfContent); }else { string = lineOfContent; } }else if (checkIfAlternatives(type)) { string = lineOfContent; }else if (checkIfHeading(type)) { string = lineOfContent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6821/buggy-version/myApp.app.src.main.java.tda367.myapplication.service.FileReader.java", "BodyUseAPI": ["tda367.myapplication.service.FileReader.checkIfHint(java.lang.String)", "tda367.myapplication.service.FileReader.checkIfAlternatives(java.lang.String)", "tda367.myapplication.service.FileReader.checkIfHeading(java.lang.String)", "tda367.myapplication.service.FileReader.checkIfInfo(java.lang.String)"], "Fixed commit": "bd48392607a1a14c5d1ae9bbdb349b3207d41f5c", "Url": "https://api.github.com/repos/hannacarlssoon/TreFika", "Date": "2017-05-18T08:38:47Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (scrExecutionFileId != null) { updateMap.put(\"JC_SCR_FILE_ID\", scrExecutionFileId); registerHistoryDao.create(updateMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2202/buggy-version/tw.com.citi.catalog.web.src.tw.com.citi.catalog.web.pages.JCS1100.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Long)"], "Fixed commit": "6536786c6f487a899e2788d4aa58adb57e815ef4", "Url": "https://api.github.com/repos/IISI/catalog", "Date": "2011-08-11T08:59:56Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.common.Utils.tokenize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (loginCmd.rest.isEmpty()) { org.common.Utils.sendMessage(new java.io.PrintWriter(sock.getOutputStream()), Utils.FAIL_LOGIN_USERNAME_INVALID); }else if (org.server.Contacts.getInstance().hasContact(loginCmd.rest)) { java.lang.System.out.println((\"Contact name taken: \" + (loginCmd.rest))); org.common.Utils.sendMessage(new java.io.PrintWriter(sock.getOutputStream()), Utils.FAIL_LOGIN_USERNAME_TAKEN); }else { clientname = loginCmd.rest; java.lang.System.out.println((\"New contact name: \" + (clientname))); org.server.Contacts.getInstance().addContact(clientname, new java.io.PrintWriter(sock.getOutputStream())); try { org.common.Utils.sendMessage(org.server.Contacts.getInstance().getContact(clientname), Utils.SUCCESS_STS); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Failed to send confirmation message to new client\"); e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6139/buggy-version/server.src.main.java.org.server.SupServer.java", "BodyUseAPI": ["java.io.PrintStream.println((\"Contact name taken: \" + (loginCmd.rest)))", "org.server.Contacts.getInstance().hasContact(loginCmd.rest)"], "Fixed commit": "e8a0d5e15462f29ba6feaf166ddd203b5399549d", "Url": "https://api.github.com/repos/or-drop-tables-team/sup", "Date": "2015-11-29T22:34:38Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsonObject.getJSONObject(\"comments\").getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((comments.length()) >= 1) { org.json.JSONObject lastCommentObject = comments.getJSONObject(((comments.length()) - 1)); lastComment = lastCommentObject.getString(\"text\"); lastCommenter = lastCommentObject.getJSONObject(\"from\").getString(\"username\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8902/buggy-version/app.src.main.java.com.example.jiaweishi.photoviewer.Photo.java", "BodyUseAPI": ["org.json.JSONArray.getJSONObject(((comments.length()) - 1))", "org.json.JSONArray.length()"], "Fixed commit": "0b6eb460e8b0e849a828f3a249e60614200d8a8b", "Url": "https://api.github.com/repos/larryshijiawei/PhotoViewer", "Date": "2016-02-07T22:36:20Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["transaction.WorkflowControllerImpl.rm(HostName.RMCustomers)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((customerRM.query(xid, custName)) == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4261/buggy-version/src.transaction.WorkflowControllerImpl.java", "BodyUseAPI": [], "Fixed commit": "82c32ce3f383909640432f1c08a9d23372c8f6d1", "Url": "https://api.github.com/repos/dawnwords/DDB", "Date": "2015-12-26T13:45:53Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((g.getPlayer(c.toString())) == null) { throw new java.lang.IllegalArgumentException(\"Player not in game\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1825/buggy-version/222ass1.src.cluedo.cards.AfterTurnCard.java", "BodyUseAPI": [], "Fixed commit": "86a8b6dcfd30e3bea7013e25a20d6b76f83d8865", "Url": "https://api.github.com/repos/AndLen/222ass1", "Date": "2013-08-10T10:15:03Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mData) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/9239/buggy-version/Android.mopub-android-sdk.src.com.mopub.mobileads.AdView.java", "BodyUseAPI": [], "Fixed commit": "e674e5310911f104ccc2bb8c3068ce9d369feb78", "Url": "https://api.github.com/repos/mopub/mopub-client", "Date": "2011-09-23T18:19:03Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((in.available()) == 0) { long start = java.lang.System.currentTimeMillis(); while ((in.available()) == 0) { java.lang.Thread.yield(); if (((java.lang.System.currentTimeMillis()) - start) > 100) { throw new java.io.IOException(\"Timeout while reading from InputStream\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7912/buggy-version/src.com.rapplogic.xbee.util.InputStreamWrapper.java", "BodyUseAPI": ["java.io.InputStream.available()"], "Fixed commit": "982761d9f417de01236e1d13372faaac2ea841ad", "Url": "https://api.github.com/repos/johnwayner/xbee-api", "Date": "2014-02-01T16:28:24Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.api.PatientService.getPatientByUuid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((event.getUpdatedDate()) != null) && (openMrsPatient.getDateChanged().after(event.getUpdatedDate()))) { org.openmrs.module.shrclient.handlers.PatientPush.log.debug(\"The patient has been updated after this event again\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8449/buggy-version/shrclient-omod.src.main.java.org.openmrs.module.shrclient.handlers.PatientPush.java", "BodyUseAPI": [], "Fixed commit": "db4964f3009dc9039a5e5b3a96cd9a6e09a40e0a", "Url": "https://api.github.com/repos/SharedHealth/openmrs-module-bdshrclient", "Date": "2015-04-06T10:22:00Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.syr.bytecast.amd64.impl.parser.InstructionByteListInputStream.peek()", "edu.syr.bytecast.amd64.impl.dictionary.AMD64Dictionary.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dictionary.isEscapeToSecondaryOpCode(b)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/459/buggy-version/bytecast-amd64.src.edu.syr.bytecast.amd64.impl.lexer.AMD64InstructionLexer.java", "BodyUseAPI": [], "Fixed commit": "e864adcf16f511aecf333d0a2a1e8bb855a23c58", "Url": "https://api.github.com/repos/dopl/bytecast-amd64", "Date": "2013-03-24T18:01:17Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grafoTipos.getTipo()) == (Grafo.Tipos.PESO)) { valorPeso.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4629/buggy-version/src.cl.cromer.estructuras.GrafoController.java", "BodyUseAPI": [], "Fixed commit": "eca164a19009dac507f4c3ccb1eb11a3a0015557", "Url": "https://api.github.com/repos/cromerc/Estructuras_de_Datos", "Date": "2016-07-22T18:17:54Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grafoTipos.getTipo()) == (Grafo.Tipos.PESO)) { valorPeso.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4629/buggy-version/src.cl.cromer.estructuras.GrafoController.java", "BodyUseAPI": [], "Fixed commit": "eca164a19009dac507f4c3ccb1eb11a3a0015557", "Url": "https://api.github.com/repos/cromerc/Estructuras_de_Datos", "Date": "2016-07-22T18:17:54Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (a.isActive()) a.spawn();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8803/buggy-version/src.Board.Board.java", "BodyUseAPI": ["actors.Actor.spawn()"], "Fixed commit": "36f23ac9d67d12386fa9fc19f2385dd1afad5c2d", "Url": "https://api.github.com/repos/AndrewHanes/Genetic-Algorithm-Pacman", "Date": "2015-02-21T21:31:11Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mCondition) == null) || (mCondition.isEmpty())) { mConditionChanged = false; }else { mConditionChanged = !(condition.equals(this.mCondition)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/610/buggy-version/src.com.JoshShoemaker.trailstatus.Trail.java", "BodyUseAPI": [], "Fixed commit": "ff43000dab35173bcbf474fe757025de070ca5aa", "Url": "https://api.github.com/repos/shoejosh/GHORBATrailStatus", "Date": "2013-06-04T23:47:55Z"},
{"Line": "=>765", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (field.contains(\".\")) { return field; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6408/buggy-version/src.de.caluga.morphium.ObjectMapperImpl.java", "BodyUseAPI": [], "Fixed commit": "3b08af71143b86290cab6e2b994ca60fbab52d0b", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2012-08-03T12:46:01Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sex == null) { return relationship.reverseForUnknown; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1848/buggy-version/src.main.java.org.gedcom4j.relationship.RelationshipCalculator.java", "BodyUseAPI": [], "Fixed commit": "3fdb91ec1a18feb4648ed905a95a4ef09a297e4d", "Url": "https://api.github.com/repos/frizbog/gedcom4j", "Date": "2016-07-31T01:30:56Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((personBeingExamined.getSex()) == null) { r.setName(org.gedcom4j.relationship.CHILD); }else if (\"M\".equals(personBeingExamined.getSex().getValue())) { r.setReverseName(org.gedcom4j.relationship.SON); }else if (\"F\".equals(personBeingExamined.getSex().getValue())) { r.setReverseName(org.gedcom4j.relationship.DAUGHTER); }else { r.setReverseName(org.gedcom4j.relationship.CHILD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1848/buggy-version/src.main.java.org.gedcom4j.relationship.RelationshipCalculator.java", "BodyUseAPI": ["java.lang.String.equals(personBeingExamined.getSex().getValue())", "org.gedcom4j.relationship.Individual.getSex()", "personBeingExamined.getSex().getValue()", "org.gedcom4j.relationship.Individual.getSex()", "personBeingExamined.getSex().getValue()", "java.lang.String.equals(personBeingExamined.getSex().getValue())"], "Fixed commit": "3fdb91ec1a18feb4648ed905a95a4ef09a297e4d", "Url": "https://api.github.com/repos/frizbog/gedcom4j", "Date": "2016-07-31T01:30:56Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((personBeingExamined.getSex()) == null) { r.setReverseName(org.gedcom4j.relationship.CHILD); }else if (\"M\".equals(personBeingExamined.getSex().getValue())) { r.setReverseName(org.gedcom4j.relationship.SON); }else if (\"F\".equals(personBeingExamined.getSex().getValue())) { r.setReverseName(org.gedcom4j.relationship.DAUGHTER); }else { r.setReverseName(org.gedcom4j.relationship.CHILD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1848/buggy-version/src.main.java.org.gedcom4j.relationship.RelationshipCalculator.java", "BodyUseAPI": ["org.gedcom4j.relationship.Individual.getSex()", "java.lang.String.equals(personBeingExamined.getSex().getValue())", "personBeingExamined.getSex().getValue()", "org.gedcom4j.relationship.Individual.getSex()", "java.lang.String.equals(personBeingExamined.getSex().getValue())", "personBeingExamined.getSex().getValue()"], "Fixed commit": "3fdb91ec1a18feb4648ed905a95a4ef09a297e4d", "Url": "https://api.github.com/repos/frizbog/gedcom4j", "Date": "2016-07-31T01:30:56Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((child.getSex()) == null) { r.setName(org.gedcom4j.relationship.CHILD); }else if (\"M\".equals(child.getSex().getValue())) { r.setName(org.gedcom4j.relationship.SON); }else if (\"F\".equals(child.getSex().getValue())) { r.setName(org.gedcom4j.relationship.DAUGHTER); }else { r.setName(org.gedcom4j.relationship.CHILD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1848/buggy-version/src.main.java.org.gedcom4j.relationship.RelationshipCalculator.java", "BodyUseAPI": ["java.lang.String.equals(child.getSex().getValue())", "org.gedcom4j.relationship.Individual.getSex()", "child.getSex().getValue()", "java.lang.String.equals(child.getSex().getValue())", "org.gedcom4j.relationship.Individual.getSex()", "child.getSex().getValue()"], "Fixed commit": "3fdb91ec1a18feb4648ed905a95a4ef09a297e4d", "Url": "https://api.github.com/repos/frizbog/gedcom4j", "Date": "2016-07-31T01:30:56Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { int count = com.tscience.usaidprojects.USAidMainActivity.mapUSAidWrapperFragment.getChildFragmentManager().getBackStackEntryCount(); android.util.Log.d(com.tscience.usaidprojects.USAidMainActivity.LOG_TAG, (\"----------------------------------- map backstack count: \" + count)); if (count > 1) { for (int i = 1; i < count; i++) { com.tscience.usaidprojects.USAidMainActivity.mapUSAidWrapperFragment.getChildFragmentManager().popBackStackImmediate(); } } count = com.tscience.usaidprojects.USAidMainActivity.countryUSAidWrapperFragment.getChildFragmentManager().getBackStackEntryCount(); android.util.Log.d(com.tscience.usaidprojects.USAidMainActivity.LOG_TAG, (\"----------------------------------- list backstack count: \" + count)); if (count > 1) { for (int i = 1; i < count; i++) { com.tscience.usaidprojects.USAidMainActivity.countryUSAidWrapperFragment.getChildFragmentManager().popBackStackImmediate(); } } }else if (position == 1) { ((com.tscience.usaidprojects.USAidMapFragment) (com.tscience.usaidprojects.USAidMainActivity.mapUSAidWrapperFragment.getChildFragmentManager().findFragmentByTag(USAidConstants.USAID_FRAGMENT_NAME_MAP))).onResume(); }else if (position == 2) { ((com.tscience.usaidprojects.USAidCountryListFragment) (com.tscience.usaidprojects.USAidMainActivity.countryUSAidWrapperFragment.getChildFragmentManager().findFragmentByTag(USAidConstants.USAID_FRAGMENT_NAME_COUNTRY))).onResume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8262/buggy-version/USAidProjects.src.com.tscience.usaidprojects.USAidMainActivity.java", "BodyUseAPI": [], "Fixed commit": "774a656e9b12662a2a6b4519bcdd72b378f9e22a", "Url": "https://api.github.com/repos/tst-spotell/USAid_Projects", "Date": "2014-01-02T16:48:37Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.independit.scheduler.server.parser.SDMSSubmittedEntity.getState(de.independit.scheduler.server.parser.SystemEnvironment)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((state == (SDMSSubmittedEntity.STARTING)) || (state == (SDMSSubmittedEntity.STARTED))) || (state == (SDMSSubmittedEntity.RUNNING))) { if (sme.getIsCancelled(sysEnv).booleanValue()) throw new de.independit.scheduler.server.parser.CommonErrorException(new de.independit.scheduler.server.parser.SDMSMessage(sysEnv, \"03703020852\", \"Child submit rejected because job is cancelling\")); final de.independit.scheduler.server.parser.SDMSSubmittedEntity smec = sme.submitChild(sysEnv, params, suspended, resumeTs, se.getId(sysEnv), childTag, null, submitTag); return smec.getId(sysEnv); }else throw new de.independit.scheduler.server.parser.CommonErrorException(new de.independit.scheduler.server.parser.SDMSMessage(sysEnv, \"03703020852\", \"Child submit only allowed while job is active\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6053/buggy-version/src.server.parser.SubmitJob.java", "BodyUseAPI": [], "Fixed commit": "8627a88e94b5729443b98929bf5623b2be94480b", "Url": "https://api.github.com/repos/schedulix/schedulix", "Date": "2017-04-24T12:06:30Z"},
{"Line": "=>973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resourceKeys[i]) == (MainGame.MainGame.PACK_ANIMALS_KEY)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/984/buggy-version/AztecGame.src.MainGame.MainGame.java", "BodyUseAPI": [], "Fixed commit": "5390bedc5c584af54ba97458972c1a5725902ec3", "Url": "https://api.github.com/repos/Zwahoo/King-Solomon", "Date": "2015-04-18T19:09:08Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.pas) == (-1)) { this.pas = ((int) (java.lang.Math.min(data.length, data[0].length))) / 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7670/buggy-version/src.main.java.eu.ensg.tsi.agat.domain.generator.GeneratorSimplexNoise.java", "BodyUseAPI": [], "Fixed commit": "2b3ab202fc7e56d85def784ae53042c070b62149", "Url": "https://api.github.com/repos/arnaudgregoire/AGAT", "Date": "2017-12-22T19:27:41Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((CCClient.sent) <= ((CCClient.lastAck) + cwnd)) && ((CCClient.send_timer[((CCClient.sent) - 1)]) == 0)) { writer.write(CCClient.sent); CCClient.send_timer[((CCClient.sent) - 1)] = java.lang.System.currentTimeMillis(); java.lang.System.out.println((\"sending data: \" + (CCClient.sent))); (CCClient.sent)++; }else if (((java.lang.System.currentTimeMillis()) - (CCClient.send_timer[CCClient.lastAck])) > (CCClient.timeOut)) { CCClient.sent = (CCClient.lastAck) + 1; writer.write(CCClient.sent); CCClient.send_timer[((CCClient.sent) - 1)] = java.lang.System.currentTimeMillis(); java.lang.System.out.println((\"resending data: \" + (CCClient.sent))); }else { java.lang.Thread.sleep(10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6949/buggy-version/TCP.Lab4_Skeleton.CCClient.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "ca901e966a7cef62c3b34f992843c760e4a82c05", "Url": "https://api.github.com/repos/CEYeYuan/computer-networks", "Date": "2015-11-05T04:38:05Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new com.google.gson.JsonParser().parse(response).getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (objResponse.get(\"response\").getAsJsonObject().has(\"checkins\")) drinks = objResponse.get(\"response\").getAsJsonObject().get(\"checkins\").getAsJsonObject().get(\"items\").getAsJsonArray(); else drinks = objResponse.get(\"response\").getAsJsonObject().get(\"items\").getAsJsonArray();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/640/buggy-version/src.main.java.com.brotherlogic.booser.storage.web.WebLayer.java", "BodyUseAPI": ["objResponse.get(\"response\").getAsJsonObject()", "com.google.gson.JsonObject.get(java.lang.String)", "objResponse.get(\"response\").getAsJsonObject().get(\"checkins\").getAsJsonObject()", "objResponse.get(\"response\").getAsJsonObject()", "objResponse.get(\"response\").getAsJsonObject().get(java.lang.String)", "com.google.gson.JsonObject.get(java.lang.String)", "objResponse.get(\"response\").getAsJsonObject().get(java.lang.String)", "objResponse.get(\"response\").getAsJsonObject().get(\"items\").getAsJsonArray()", "objResponse.get(\"response\").getAsJsonObject().get(\"checkins\").getAsJsonObject().get(\"items\").getAsJsonArray()", "objResponse.get(\"response\").getAsJsonObject().get(\"checkins\").getAsJsonObject().get(java.lang.String)"], "Fixed commit": "97df10fe0b1e984e114c504c64fd3c77d31c2338", "Url": "https://api.github.com/repos/BrotherLogic/booser", "Date": "2013-10-13T18:11:57Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n < 0) { if ((java.util.Calendar.SUNDAY) == dow) offset = 2; else offset = -(6 - dow); }else { if ((java.util.Calendar.SATURDAY) == dow) offset = -2; else offset = dow - 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7640/buggy-version/railo-java.railo-core.src.railo.runtime.functions.dateTime.DateAdd.java", "BodyUseAPI": [], "Fixed commit": "9d2db2f6d44014dea76367f3b42115661d848ae6", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-05-25T15:35:08Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dow == (java.util.Calendar.SATURDAY)) || (dow == (java.util.Calendar.SUNDAY))) { if (n > 0) n--; else if (n < 0) n++; }else n += offset;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7640/buggy-version/railo-java.railo-core.src.railo.runtime.functions.dateTime.DateAdd.java", "BodyUseAPI": [], "Fixed commit": "9d2db2f6d44014dea76367f3b42115661d848ae6", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-05-25T15:35:08Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getDauer().isEmpty()) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/9111/buggy-version/stechuhr.src.main.java.de.mwvb.stechuhr.entity.Stunden.java", "BodyUseAPI": [], "Fixed commit": "5fc6fa3b045e9fad006bf11112f2be5f3d5d11d8", "Url": "https://api.github.com/repos/SoltauFintel/stechuhr", "Date": "2016-03-08T19:37:54Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((action.getExp()) instanceof org.thingml.compilers.thing.common.PropertyReference) { org.thingml.compilers.thing.common.PropertyReference pr = ((org.thingml.compilers.thing.common.PropertyReference) (action.getExp())); isArray = (pr.getProperty().isIsArray()) || ((pr.getProperty().getCardinality()) != null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7743/buggy-version/compilers.framework.src.main.java.org.thingml.compilers.thing.common.CommonThingActionCompiler.java", "BodyUseAPI": ["org.thingml.compilers.thing.common.ReturnAction.getExp()"], "Fixed commit": "0a20086a0a4119d5a70cf91c24816df191393848", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2016-12-09T08:44:22Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["journalDB.Query.execute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((isActiveResults.size()) > 1) { java.lang.Boolean isActive = (isActiveResults.get(1).get(0).compareTo(\"1\")) == 0; if (isActive) { currentUser = new journalDB.Reviewer(id); java.lang.System.out.println((((\"Login successful. Status: Reviewer. Name: \" + (results.get(1).get(2))) + \" \") + (results.get(1).get(1)))); }else { java.lang.System.out.println(\"Reviewer is no longer active\"); } }else { java.lang.System.out.println(\"SQL Error, cannot find user in reviewer table. Foreign key error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3659/buggy-version/src.journalDB.BlandVerb.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.util.ArrayList<java.lang.String>>.get(int)", "java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "e704bdf8e90eb07e87cf9e28355720644e00a1d4", "Url": "https://api.github.com/repos/jeffreysgao/journalDB", "Date": "2017-05-12T22:45:52Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["paint.getShapes().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((shape instanceof controller.Oval) || (shape instanceof java.awt.Rectangle)) { selectedShape = shape; shape.setColor(java.awt.Color.LIGHT_GRAY); paint.repaint(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1590/buggy-version/src.controller.Listeners.java", "BodyUseAPI": ["java.awt.Shape.setColor(java.awt.Color)"], "Fixed commit": "d9009eec11f24949abc9c0e9e53f17219ed36073", "Url": "https://api.github.com/repos/Peonsson/Paint", "Date": "2016-04-04T18:20:52Z"},
{"Line": "=>845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.subutai.core.localpeer.impl.entity.ResourceHostEntity.getLocalPeer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (localPeer != null) { try { localPeer.getManagementHost(); mhAlreadyRegistered = true; } catch (io.subutai.common.peer.HostNotFoundException ex) { } if ((!mhAlreadyRegistered) && (Common.MANAGEMENT_HOSTNAME.equals(info.getHostname()))) { containerHost = new io.subutai.core.localpeer.impl.entity.ContainerHostEntity(peerId, info.getId(), info.getHostname(), info.getArch(), info.getHostInterfaces(), info.getContainerName(), io.subutai.common.settings.Common.MANAGEMENT_HOSTNAME, info.getArch().name(), io.subutai.common.settings.Common.MANAGEMENT_HOSTNAME, null, null, io.subutai.common.peer.ContainerSize.SMALL); addContainerHost(containerHost); }else { io.subutai.core.localpeer.impl.entity.ResourceHostEntity.LOG.warn(java.lang.String.format(\"Found not registered container host: %s %s\", info.getId(), info.getHostname())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1571/buggy-version/management.server.core.local-peer.local-peer-impl.src.main.java.io.subutai.core.localpeer.impl.entity.ResourceHostEntity.java", "BodyUseAPI": ["io.subutai.common.peer.LocalPeer.getManagementHost()"], "Fixed commit": "50af084ff8dd36d9d8703b1eb6e0330cf741ca65", "Url": "https://api.github.com/repos/larenso/base", "Date": "2016-08-01T13:35:39Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.wiki.resolver.PageResolver.resolve(java.lang.String,org.exoplatform.portal.webui.util.Util.getUIPortal().getSelectedUserNode())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(page.getURL())) { page.setURL(org.exoplatform.wiki.commons.Utils.getURLFromParams(new org.exoplatform.wiki.service.WikiPageParams(page.getWiki().getType(), page.getWiki().getOwner(), page.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2721/buggy-version/wiki-webapp.src.main.java.org.exoplatform.wiki.webui.UIWikiPortlet.java", "BodyUseAPI": ["page.getWiki().getType()", "org.exoplatform.wiki.mow.api.Page.getWiki()", "org.exoplatform.wiki.mow.api.Page.getName()", "org.exoplatform.wiki.commons.Utils.getURLFromParams(org.exoplatform.wiki.service.WikiPageParams)", "page.getWiki().getOwner()", "org.exoplatform.wiki.mow.api.Page.getWiki()", "org.exoplatform.wiki.mow.api.Page.setURL(org.exoplatform.wiki.commons.Utils.getURLFromParams(new org.exoplatform.wiki.service.WikiPageParams(page.getWiki().getType(), page.getWiki().getOwner(), page.getName())))"], "Fixed commit": "565ff224635da18edf7d48799e35792ffea3bf0b", "Url": "https://api.github.com/repos/exodev/wiki", "Date": "2013-03-12T07:46:23Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.wiki.mow.core.api.wiki.PageImpl.getURL()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (url != null) { url = url.substring(url.indexOf(((\"/\" + portalContainerName) + \"/\"))); permalink.append(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2721/buggy-version/wiki-service.src.main.java.org.exoplatform.wiki.service.impl.WikiSearchServiceConnector.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "565ff224635da18edf7d48799e35792ffea3bf0b", "Url": "https://api.github.com/repos/exodev/wiki", "Date": "2013-03-12T07:46:23Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((limit) <= 0) { limit = count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3189/buggy-version/src.de.caluga.morphium.query.MorphiumIteratorImpl.java", "BodyUseAPI": [], "Fixed commit": "6282e27bee98799a42475b5b19fc94dd41a44b71", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2013-03-12T14:03:28Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((count) - (cursor)) < (windowSize)) { theQuery.limit(((int) ((count) - (cursor)))); }else if (((limit) - (cursor)) < (windowSize)) { theQuery.limit(((int) ((limit) - (cursor)))); }else { theQuery.limit(windowSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3189/buggy-version/src.de.caluga.morphium.query.MorphiumIteratorImpl.java", "BodyUseAPI": ["de.caluga.morphium.query.Query<T>.limit(long)", "de.caluga.morphium.query.Query<T>.limit(long)"], "Fixed commit": "6282e27bee98799a42475b5b19fc94dd41a44b71", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2013-03-12T14:03:28Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputs) == null) return map;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/852/buggy-version/src.main.java.com.syncapse.jenkinsci.plugins.awscloudformationwrapper.CloudFormation.java", "BodyUseAPI": [], "Fixed commit": "3e4f605a1247f0823dbb839419afda07ebe4558d", "Url": "https://api.github.com/repos/sabjerstedt/jenkins-cloudformation-plugin", "Date": "2014-07-18T22:13:19Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.Double.isNaN(result_y))) { if ((java.lang.Math.abs((result_y - y))) <= (java.lang.Math.abs(((tmp_result.valueY) - y)))) { int axis_y = axis.getPixelCoordinate(result_y); if ((java.lang.Math.abs((axis_y - (event.y)))) < symbolSize) { result = tmp_result; result.valueY = result_y; result.serie = serie; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1781/buggy-version/org.swtchart.org.swtchart.ext.src.org.swtchart.ext.InteractiveChart.java", "BodyUseAPI": ["org.swtchart.IAxis.getPixelCoordinate(double)", "java.lang.Math.abs(double)"], "Fixed commit": "0f0035845e30b31e892c9375dee90861e60c6a34", "Url": "https://api.github.com/repos/HPCToolkit/hpcviewer-externals", "Date": "2015-10-09T17:43:24Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (responseBody != null) listener.serveResponse(responseBody.getResponseString(), responseBody.getRequestCode());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5001/buggy-version/Yousee.src.in.yousee.yousee.NetworkConnectionHandler.java", "BodyUseAPI": ["in.yousee.yousee.model.ResponseBody.getRequestCode()", "in.yousee.yousee.Middleware.serveResponse(responseBody.getResponseString(),responseBody.getRequestCode())", "in.yousee.yousee.model.ResponseBody.getResponseString()"], "Fixed commit": "aaf318cdb3d524144303f08373965dd57ce603ec", "Url": "https://api.github.com/repos/mittu-spidey/YouSeeAndroidApp", "Date": "2013-10-04T17:03:39Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toastString) != null) { android.widget.Toast.makeText(context, toastString, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5001/buggy-version/Yousee.src.in.yousee.yousee.NetworkConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "aaf318cdb3d524144303f08373965dd57ce603ec", "Url": "https://api.github.com/repos/mittu-spidey/YouSeeAndroidApp", "Date": "2013-10-04T17:03:39Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPage) != null) { dropOutdated(); currentPage = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1258/buggy-version/src.main.java.com.axibase.statistics.CachedFileDoubleIndex.java", "BodyUseAPI": [], "Fixed commit": "40d66a5bf6fff26cb16d6edcd32e422d9202ca8a", "Url": "https://api.github.com/repos/axibase/statistics", "Date": "2017-02-10T13:16:10Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main.Driver.active.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1630/buggy-version/main.Driver.java", "BodyUseAPI": [], "Fixed commit": "f19b2e1a4e1f7f44d7036d52287069048ff50459", "Url": "https://api.github.com/repos/tylergiallanza/Game2D", "Date": "2014-01-17T01:26:35Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paths) != null) p.openObject(org.omidbiz.core.axon.internal.PathProcessor.getIndentation(paths));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5219/buggy-version/axon-core.src.main.java.org.omidbiz.core.axon.internal.MapElement.java", "BodyUseAPI": [], "Fixed commit": "eed8cc5ade936d3eb77b8c0b0b9be0b099108acc", "Url": "https://api.github.com/repos/omidp/axon", "Date": "2017-12-04T16:33:12Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mPlayingFileNode.isSamePathAndFrom(node))) { stopRecordTimer(); if ((mPlayingFileNode.getDeviceType()) == (node.getDeviceType())) { mAllMediaList.savePlayState(node, 0); }else if ((getPlayState()) == (com.haoke.define.MediaDef.PlayState.PLAY)) { mAllMediaList.savePlayState(mPlayingFileNode, getPosition()); } }else { java.util.ArrayList<com.haoke.bean.FileNode> lists = mAllMediaList.getMediaList(node.getDeviceType(), node.getFileType()); if ((lists.size()) == 1) { mAllMediaList.savePlayState(node, 0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/9044/buggy-version/src.com.amd.media.AmdMediaManager.java", "BodyUseAPI": ["com.haoke.bean.FileNode.getDeviceType()", "com.haoke.data.AllMediaList.savePlayState(com.haoke.bean.FileNode,int)", "com.haoke.data.AllMediaList.savePlayState(com.haoke.bean.FileNode,int)", "com.haoke.bean.FileNode.getDeviceType()", "com.haoke.data.AllMediaList.getMediaList(node.getDeviceType(),node.getFileType())", "com.haoke.bean.FileNode.getFileType()", "com.haoke.data.AllMediaList.savePlayState(com.haoke.bean.FileNode,int)", "com.haoke.bean.FileNode.getDeviceType()"], "Fixed commit": "b1749b2d466cda17ce16a23a5a14c5a7356dd35a", "Url": "https://api.github.com/repos/Yearlay/AmdMediaService", "Date": "2017-10-24T08:03:52Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((entry.getKey()) != null) && (entry.getKey().startsWith(\"hint.\"))) { queryObject.setHint(entry.getKey().substring(5), entry.getValue()); }else { queryObject.setParameter(entry.getKey(), entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2917/buggy-version/opentides3-core.src.main.java.org.opentides.dao.impl.BaseEntityDaoJpaImpl.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "javax.persistence.Query.setParameter(java.lang.String,java.lang.Object)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.lang.String.substring(int)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "javax.persistence.Query.setHint(java.lang.String,java.lang.Object)"], "Fixed commit": "21a1efae6b181a8d4270d8ec58db978fcdfa38c0", "Url": "https://api.github.com/repos/Ideyatech/opentides3", "Date": "2017-05-08T10:06:17Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.inputmethod.InputConnection.getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (txt == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8542/buggy-version/src.de.onyxbits.remotekeyboard.CtrlInputAction.java", "BodyUseAPI": [], "Fixed commit": "a9681fe8c2617d562c84c3eb13024a039e845cd2", "Url": "https://api.github.com/repos/onyxbits/remotekeyboard", "Date": "2013-07-12T15:48:45Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((oldArray[i]) != null) && (oldArray[i].isInUse())) insert(hashCode(oldArray[i].getElement()), oldArray[i].getElement());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/378/buggy-version/src.hashTable.HashSet.java", "BodyUseAPI": ["hashTable.HashSet<T>.hashCode(oldArray[i].getElement())", "oldArray[i].getElement()", "oldArray[i].getElement()", "hashTable.HashSet<T>.insert(int,oldArray[i].getElement())"], "Fixed commit": "b237301e65fcd4213a8d00903d09195bcf51001b", "Url": "https://api.github.com/repos/SamCosta1/HashSet", "Date": "2017-03-09T21:38:24Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Integer>.contains(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (contains) { --i; continue; }else { randomList.add(random); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4688/buggy-version/src.main.java.com.d2s2.Main.java", "BodyUseAPI": [], "Fixed commit": "095f09baad0fc9fe7d28ff70573ade4ab95825de", "Url": "https://api.github.com/repos/D2S2Solutions/DistributedFileTransfer", "Date": "2017-11-06T16:03:10Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fi.isDel())) { com.backend.sync.s3.SyncTool.submitSyncTask(fi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6547/buggy-version/photoweb.src.com.backend.dao.BaseSqliteStore.java", "BodyUseAPI": ["com.backend.sync.s3.SyncTool.submitSyncTask(com.backend.FileInfo)"], "Fixed commit": "fc5c23317d3a0d4b67c4633293e9060fab25686c", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-02-01T17:24:34Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activity instanceof skin.support.widget.SkinCompatSupportable) { ((skin.support.widget.SkinCompatSupportable) (activity)).applySkin(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6063/buggy-version/skin-base.src.main.java.skin.support.app.SkinActivityLifecycle.java", "BodyUseAPI": [], "Fixed commit": "08b40dc1c50128e77ea0e1ac46820a915b07e57a", "Url": "https://api.github.com/repos/sohuapp/Android-skin-support", "Date": "2017-12-04T08:45:41Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e.silent)) { s += e.reportForTex(); if (i != ((this.size()) - 1)) { s += \"\\\\\\\\\\\\cdot \"; } i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/574/buggy-version/nouth.les.MultiEx.java", "BodyUseAPI": ["nouth.les.Ex.reportForTex()"], "Fixed commit": "610c2ef1d98b8f4670caee7399552f841802e6b6", "Url": "https://api.github.com/repos/Nouthghule/les", "Date": "2016-06-20T07:17:41Z"},
{"Line": "=>711", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.content.Item.getBundles(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ores.length) > 0) { OREBundle = ores[0]; }else { OREBundle = item.createBundle(\"ORE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5675/buggy-version/dspace-api.src.main.java.org.dspace.harvest.OAIHarvester.java", "BodyUseAPI": [], "Fixed commit": "109ea2a5694e1f7c3dc0387972a96e935a4d3a15", "Url": "https://api.github.com/repos/nye-duo/DSpace", "Date": "2012-10-07T22:02:59Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.conventnunnery.plugins.mythicdrops.managers.TierManager.findColor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((initColor == (getUnidentifiedItemTier().getDisplayColor())) && (endColor == (getUnidentifiedItemTier().getIdentificationColor()))) { return getUnidentifiedItemTier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3841/buggy-version/src.main.java.com.conventnunnery.plugins.mythicdrops.managers.TierManager.java", "BodyUseAPI": [], "Fixed commit": "d86b2c33e86ff1c8788a2d61eb7217747ef44862", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2013-05-24T15:03:56Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.conventnunnery.plugins.mythicdrops.managers.TierManager.findColor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((initColor == (getSocketGemTier().getDisplayColor())) && (endColor == (getSocketGemTier().getIdentificationColor()))) { return getSocketGemTier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3841/buggy-version/src.main.java.com.conventnunnery.plugins.mythicdrops.managers.TierManager.java", "BodyUseAPI": [], "Fixed commit": "d86b2c33e86ff1c8788a2d61eb7217747ef44862", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2013-05-24T15:03:56Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.conventnunnery.plugins.mythicdrops.managers.TierManager.findColor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((initColor == (getIdentityTomeTier().getDisplayColor())) && (endColor == (getIdentityTomeTier().getIdentificationColor()))) { return getIdentityTomeTier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3841/buggy-version/src.main.java.com.conventnunnery.plugins.mythicdrops.managers.TierManager.java", "BodyUseAPI": [], "Fixed commit": "d86b2c33e86ff1c8788a2d61eb7217747ef44862", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2013-05-24T15:03:56Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getOriginalRequest().getSession().getAttribute(MainSessionController.MAIN_SESSION_CONTROLLER_ATT)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (sessionController != null) { com.silverpeas.portlets.portal.portletwindow.PortletWindowInvoker.messages.setLanguage(sessionController.getFavoriteLanguage()); }else { com.silverpeas.portlets.portal.portletwindow.PortletWindowInvoker.messages.setLanguage(com.silverpeas.ui.DisplayI18NHelper.getDefaultLanguage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/42/buggy-version/web-core.src.main.java.com.silverpeas.portlets.portal.portletwindow.PortletWindowInvoker.java", "BodyUseAPI": ["com.stratelia.silverpeas.peasCore.MainSessionController.getFavoriteLanguage()", "com.stratelia.webactiv.util.ResourceLocator.setLanguage(sessionController.getFavoriteLanguage())"], "Fixed commit": "96ec62148da532a759b4bfb7da9726ee7656adc4", "Url": "https://api.github.com/repos/SilverYoCha/Silverpeas-Core", "Date": "2017-02-17T16:10:59Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(notEmpty.validCred(username, password))) { response.sendRedirect(\"/Instagrim/register.jsp\"); }else { uk.ac.dundee.computing.aec.instagrim.models.User us = new uk.ac.dundee.computing.aec.instagrim.models.User(); us.setCluster(cluster); us.RegisterUser(username, password); response.sendRedirect(\"/Instagrim\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2618/buggy-version/src.main.java.uk.ac.dundee.computing.aec.instagrim.servlets.Register.java", "BodyUseAPI": ["uk.ac.dundee.computing.aec.instagrim.models.User.RegisterUser(java.lang.String,java.lang.String)"], "Fixed commit": "b2f5629acc5ad86ec15db6a47b3795d7196ccf1c", "Url": "https://api.github.com/repos/campbellre/instagrim", "Date": "2015-10-15T21:24:33Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileName.contains(\".vm\")) { fileName = fileName.split(\".vm\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2278/buggy-version/CodeWriter.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "a9aefa8692a04d448fc97009ec3a2c44ab96bca9", "Url": "https://api.github.com/repos/VipinindKumar/vmtranslator", "Date": "2017-08-29T11:11:44Z"},
{"Line": "=>1055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.getExpression()) instanceof ast.LvalueCall) enterMetaSpace();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5994/buggy-version/src.ast.visitors.ExecutionASTVisitor.java", "BodyUseAPI": [], "Fixed commit": "c78acbb41f889e40d69e6f8abbfcadc5c9e8e185", "Url": "https://api.github.com/repos/kostasDrk/metafox", "Date": "2016-09-05T11:07:16Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.stack.size()) == 0) { return -1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4079/buggy-version/main.java.com.webkonsept.minecraft.lagmeter.LagMeterStack.java", "BodyUseAPI": [], "Fixed commit": "bf60914af969b15de207018810425c150cdd322d", "Url": "https://api.github.com/repos/TheLunarFrog/LagMeter", "Date": "2013-09-20T21:52:12Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (threeAlleles) { p.setAbsoluteFitness(Genotype.AC, afAC); p.setAbsoluteFitness(Genotype.BC, afBC); p.setAbsoluteFitness(Genotype.CC, afCC); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1351/buggy-version/src.gui.SelectionPane.java", "BodyUseAPI": [], "Fixed commit": "5c2621747f871f4f498cec6669dfc15ebb7bca9d", "Url": "https://api.github.com/repos/teamevolve/EVOLVE", "Date": "2017-09-26T14:18:59Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((event.getInventory().getHolder()) instanceof org.bukkit.block.Chest)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2772/buggy-version/src.com.archmageinc.RealStore.StoreListener.java", "BodyUseAPI": [], "Fixed commit": "00e27efe7c79c9a9aac904f345e434de6b956f9c", "Url": "https://api.github.com/repos/ArchmageInc/RealStore", "Date": "2012-03-19T00:33:05Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(node.isLayerNode())) { au.gov.ga.earthsci.layer.tree.ILayerTreeNode folder = currentLayerModel.getRootNode().getNodeForCatalogURI(node.getURI()); if (folder != null) { return folder; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8823/buggy-version/plugins.au.gov.ga.earthsci.catalog.ui.src.au.gov.ga.earthsci.catalog.ui.CatalogBrowserController.java", "BodyUseAPI": ["au.gov.ga.earthsci.catalog.ICatalogTreeNode.getURI()", "currentLayerModel.getRootNode().getNodeForCatalogURI(node.getURI())"], "Fixed commit": "ac9f6c1abf8bda9baebdfa1c079144fc081f9605", "Url": "https://api.github.com/repos/GeoscienceAustralia/earthsci", "Date": "2013-11-19T21:01:37Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (notificationId >= (old_notificationId)) { old_notificationId = notificationId; return originalResponse.newBuilder().body(new org.catrobat.catroid.web.ProgressResponseBody(originalResponse.body(), receiver, notificationId)).build(); }else { return originalResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7842/buggy-version/catroid.src.org.catrobat.catroid.web.ServerCalls.java", "BodyUseAPI": ["originalResponse.newBuilder().body(new org.catrobat.catroid.web.ProgressResponseBody(originalResponse.body(), receiver, notificationId)).build()", "originalResponse.newBuilder().body(org.catrobat.catroid.web.ProgressResponseBody)"], "Fixed commit": "bd7d3a4d94bd33219e1085a1754d3782734909cf", "Url": "https://api.github.com/repos/Manu91/Catroid", "Date": "2015-06-22T09:46:15Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (instance == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7261/buggy-version/src.main.java.com.piketec.jenkins.plugins.tpt.Configuration.JenkinsConfiguration.java", "BodyUseAPI": [], "Fixed commit": "593960ee0d590fa366b7527b1c215346dab80c49", "Url": "https://api.github.com/repos/jenkinsci/piketec-tpt-plugin", "Date": "2016-12-12T15:26:25Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(js.get(\"type\").isJsonNull())) typeObject = js.get(\"type\").getAsJsonObject();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/354/buggy-version/src.com.miningmark48.pearcelbot.commands.CommandMixerUser.java", "BodyUseAPI": ["js.get(\"type\").getAsJsonObject()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "20a9fb83eb6699c593edcdfd4830efb4b9620e47", "Url": "https://api.github.com/repos/MiningMark48/Tidal-Bot", "Date": "2017-10-04T03:08:14Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameCompleted()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6810/buggy-version/src.main.java.model.GameEvents.OnTurnEndEvent.java", "BodyUseAPI": [], "Fixed commit": "57a6601e4024193fa93963a6ee0e5170b8a7dca3", "Url": "https://api.github.com/repos/vamaraju/shuffle-the-rules", "Date": "2017-05-06T17:33:47Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameCompleted()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6810/buggy-version/src.main.java.model.GameEvents.OnTurnStartEvent.java", "BodyUseAPI": [], "Fixed commit": "57a6601e4024193fa93963a6ee0e5170b8a7dca3", "Url": "https://api.github.com/repos/vamaraju/shuffle-the-rules", "Date": "2017-05-06T17:33:47Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameCompleted()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6810/buggy-version/src.main.java.model.GameEvents.OnRoundStartEvent.java", "BodyUseAPI": [], "Fixed commit": "57a6601e4024193fa93963a6ee0e5170b8a7dca3", "Url": "https://api.github.com/repos/vamaraju/shuffle-the-rules", "Date": "2017-05-06T17:33:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exitDateTime) == 0.0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/340/buggy-version/bcccp.tickets.adhoc.AdhocTicket.java", "BodyUseAPI": [], "Fixed commit": "f50125a2ca03f9e1642ca78e7adffeaab7a6d867", "Url": "https://api.github.com/repos/BijayaBasnet/Group5ProfessionalPrac", "Date": "2017-09-27T07:38:11Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((query.getTumorType()) != null) { indicatorQuery.setTumorTypeSummary(org.mskcc.cbio.oncokb.util.SummaryUtils.tumorTypeSummary(gene, query.getAlteration(), new java.util.ArrayList(relevantAlterations), query.getTumorType(), new java.util.HashSet(oncoTreeTypes))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3920/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.IndicatorUtils.java", "BodyUseAPI": ["org.mskcc.cbio.oncokb.util.Query.getAlteration()", "org.mskcc.cbio.oncokb.util.SummaryUtils.tumorTypeSummary(org.mskcc.cbio.oncokb.util.Gene,query.getAlteration(),java.util.ArrayList,query.getTumorType(),java.util.HashSet)", "org.mskcc.cbio.oncokb.util.Query.getTumorType()", "org.mskcc.cbio.oncokb.util.IndicatorQueryResp.setTumorTypeSummary(org.mskcc.cbio.oncokb.util.SummaryUtils.tumorTypeSummary(gene, query.getAlteration(), new java.util.ArrayList(relevantAlterations), query.getTumorType(), new java.util.HashSet(oncoTreeTypes)))"], "Fixed commit": "acad82190e9c79ff083173483fe142cae2a4b3be", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-02-23T22:30:26Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.taskBase.hasTaskItem(\"skipBuild\")) { skipBuild = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2819/buggy-version/robot-festival.src.main.java.com.piza.festival.DeployTaskItem.java", "BodyUseAPI": [], "Fixed commit": "70f9faac81b42da9e51767d2b77982b0a24275a2", "Url": "https://api.github.com/repos/piza/robotbase", "Date": "2016-12-03T12:05:06Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.taskBase.hasTaskItem(\"skipPull\")) { skipPull = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2819/buggy-version/robot-festival.src.main.java.com.piza.festival.DeployTaskItem.java", "BodyUseAPI": [], "Fixed commit": "70f9faac81b42da9e51767d2b77982b0a24275a2", "Url": "https://api.github.com/repos/piza/robotbase", "Date": "2016-12-03T12:05:06Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) previousButton.setEnabled(false); else previousButton.setEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7903/buggy-version/app.src.main.java.com.breadwallet.presenter.activities.IntroPhraseCheckActivity.java", "BodyUseAPI": [], "Fixed commit": "7be4bfccab89914b2c8f889ca9d3bc5531fd9e0b", "Url": "https://api.github.com/repos/breadwallet/breadwallet-android", "Date": "2017-04-18T18:38:35Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.defaultUri) != null) { this.secondaryHint.setVisibility(View.VISIBLE); this.avatar.setOnLongClickListener(this.backToDefaultListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3669/buggy-version/src.eu.siacs.conversations.ui.PublishProfilePictureActivity.java", "BodyUseAPI": [], "Fixed commit": "721b308f28c6efbe8eda917725f2a85d8f70525f", "Url": "https://api.github.com/repos/siacs/Conversations", "Date": "2014-08-12T19:03:45Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(support)) { this.hintOrWarning.setTextColor(getWarningTextColor()); this.hintOrWarning.setText(R.string.error_publish_avatar_no_server_support); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3669/buggy-version/src.eu.siacs.conversations.ui.PublishProfilePictureActivity.java", "BodyUseAPI": [], "Fixed commit": "721b308f28c6efbe8eda917725f2a85d8f70525f", "Url": "https://api.github.com/repos/siacs/Conversations", "Date": "2014-08-12T19:03:45Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dataartisans.flink.dataflow.translation.wrappers.streaming.FlinkGroupAlsoByWindowWrapper.ProcessContext.getRuntimeContext().getAccumulator(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (acc != null) { org.apache.flink.api.common.accumulators.AccumulatorHelper.compareAccumulatorTypes(name, com.dataartisans.flink.dataflow.translation.wrappers.SerializableFnAggregatorWrapper.class, acc.getClass()); return ((com.google.cloud.dataflow.sdk.transforms.Aggregator<com.dataartisans.flink.dataflow.translation.wrappers.streaming.AggInputT, com.dataartisans.flink.dataflow.translation.wrappers.streaming.AggOutputT>) (acc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3344/buggy-version/src.main.java.com.dataartisans.flink.dataflow.translation.wrappers.streaming.FlinkGroupAlsoByWindowWrapper.java", "BodyUseAPI": ["org.apache.flink.api.common.accumulators.AccumulatorHelper.compareAccumulatorTypes(java.lang.String,java.lang.Class,acc.getClass())", "org.apache.flink.api.common.accumulators.Accumulator.getClass()"], "Fixed commit": "7acfb586a398c486aff6e701abf2d803bfbe246e", "Url": "https://api.github.com/repos/kl0u/flink-dataflow", "Date": "2015-12-04T14:00:50Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hof.university.app.data.DataManager.readObject(android.content.Context,Define.changesFilename)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (changes == null) { changes = new de.hof.university.app.model.schedule.Changes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4062/buggy-version/app.src.main.java.de.hof.university.app.data.DataManager.java", "BodyUseAPI": [], "Fixed commit": "841e7e239aa9b292396afab010a2eea72311ffe4", "Url": "https://api.github.com/repos/HochschuleHofStundenplanapp/AndroidStundenplanHof", "Date": "2016-12-16T08:45:21Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.deemsys.project.Map.GeoLocation.getLocation(patientsForm.getAddress())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(latLong.equals(\"NONE\"))) { java.lang.String[] latitudeLongitude = latLong.split(\",\"); latitude = java.lang.Double.parseDouble(latitudeLongitude[0]); longitude = java.lang.Double.parseDouble(latitudeLongitude[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1444/buggy-version/src.main.java.com.deemsys.project.patients.PatientsService.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "1ffc0178ffd462c77ccb517e032bdbb23c0b788b", "Url": "https://api.github.com/repos/storagerepo/WPR_V1.0_INJURY", "Date": "2015-12-12T08:54:05Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hu.unideb.fitbase.service.api.service.GymService.findByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (findedGym != null) { result = java.util.Arrays.asList(hu.unideb.fitbase.commons.pojo.validator.Violation.builder().field(hu.unideb.fitbase.service.api.rules.gym.name.FIELD).validationMessage(hu.unideb.fitbase.service.api.rules.gym.name.UNIQUE_RULE).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2265/buggy-version/fitbase-parent.fitbase-service-impl.src.main.java.hu.unideb.fitbase.service.api.rules.gym.name.GymNameShouldBeUniqueRule.java", "BodyUseAPI": [], "Fixed commit": "c2d0c8801b64cb880b8384f9b81e3bf5f879be03", "Url": "https://api.github.com/repos/RFT-LEV-KondiBazis-WEB/KondiBazis-Backend", "Date": "2017-11-18T19:42:51Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.parallel.octotron.rules.Interval.Compute(ru.parallel.octotron.core.model.ModelEntity)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result.equals(Value.invalid)) return ru.parallel.octotron.core.attributes.Value.invalid;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8932/buggy-version/src.main.java.ru.parallel.octotron.rules.CheckedInterval.java", "BodyUseAPI": [], "Fixed commit": "3893d0980c40772269b91ef8a58bf78bdb89160c", "Url": "https://api.github.com/repos/srcc-msu/octotron_core", "Date": "2014-12-16T12:57:20Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hour == 0) { hour = 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8204/buggy-version/app.src.main.java.io.github.funkynoodles.classlookup.fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "d82e87304a19fc3a338332859915a42168be702c", "Url": "https://api.github.com/repos/FunkyNoodles/ClassLookUp", "Date": "2017-07-25T01:03:30Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedConfig) != null) currentPath = getInitialPath(selectedConfig.getDestPath());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/104/buggy-version/lider-console-backup.src.tr.org.liderahenk.backup.dialogs.RestoreTaskDialog.java", "BodyUseAPI": [], "Fixed commit": "67a941cd1d8dd892e836d20e979ab895c3577659", "Url": "https://api.github.com/repos/Pardus-LiderAhenk/lider-ahenk-backup-plugin", "Date": "2017-09-08T05:50:44Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.getName().equals(\"checksum\"))) try { c = c ^ (f.get(this).hashCode()); } catch (java.lang.IllegalAccessException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7490/buggy-version/src.elfville.server.model.Model.java", "BodyUseAPI": ["java.lang.Object.hashCode()", "java.lang.reflect.Field.get(elfville.server.model.Model)"], "Fixed commit": "e80c08edab87187910094a1011341a7c23d32afe", "Url": "https://api.github.com/repos/rofflebuster/ElfVille", "Date": "2012-04-20T04:35:43Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["elfville.server.SecurityUtils.decrypt(javax.crypto.SealedObject,javax.crypto.Cipher)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (m instanceof elfville.server.Model) { elfville.server.Model x = ((elfville.server.Model) (m)); if (x.isDirty()) java.lang.System.err.println((x + \" is corrupted.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7490/buggy-version/src.elfville.server.Database.java", "BodyUseAPI": [], "Fixed commit": "e80c08edab87187910094a1011341a7c23d32afe", "Url": "https://api.github.com/repos/rofflebuster/ElfVille", "Date": "2012-04-20T04:35:43Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((futureWays) != null) { try { ways = futureWays.get(); if (ways != null) _owner._responseQueue.add(new shared.WayResponse(ways)); } catch (java.lang.InterruptedException | java.util.concurrent.ExecutionException e) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4753/buggy-version/src.server.CopyOfWayGetter.java", "BodyUseAPI": [], "Fixed commit": "41c6057a4c27fbc6b838ca6dd5c5b5e1ca8fc8f4", "Url": "https://api.github.com/repos/skortchmark9/riMap", "Date": "2014-04-08T20:49:07Z"},
{"Line": "=>1006", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (originalName != null) { functionType = (java.lang.Character.toUpperCase(originalName.charAt(0))) + (originalName.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2170/buggy-version/src.main.java.org.bytedeco.javacpp.tools.Parser.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.Character.toUpperCase(char)", "java.lang.String.charAt(int)"], "Fixed commit": "eabafa4fcab5b06fbd60d85f5c66f7befee45239", "Url": "https://api.github.com/repos/bytedeco/javacpp", "Date": "2016-02-15T13:56:32Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rawArgs.length) != 2) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5287/buggy-version/src.seedu.addressbook.AddressBook.java", "BodyUseAPI": [], "Fixed commit": "2902949a54bab3754dbceec8224b55c2ea9b4271", "Url": "https://api.github.com/repos/joppeel/addressbook-level1", "Date": "2017-08-30T14:23:43Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mongoClient) != null) { mongoClient.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2596/buggy-version/Lab2.src.Controller.Connector.java", "BodyUseAPI": [], "Fixed commit": "ae538e77dae773bba9ffb560e097082c883cbc7b", "Url": "https://api.github.com/repos/Beelzenord/musicmovies", "Date": "2016-12-13T21:11:05Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uri.endsWith(\"live\")) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3298/buggy-version/lightfish.src.main.java.org.lightfish.presentation.publication.TunguskaGate.java", "BodyUseAPI": [], "Fixed commit": "81eedf00efd697ead92e80c0c53bd6ceced2632f", "Url": "https://api.github.com/repos/AdamBien/lightfish", "Date": "2013-08-10T13:11:00Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((car) == null) throw new java.lang.Exception(\"CARID does not exist\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2398/buggy-version/src.commands.vehicleManagement.RemoveVehicle.java", "BodyUseAPI": [], "Fixed commit": "e9cc7b91bad6e7c5f5274d3a0a346a325363f931", "Url": "https://api.github.com/repos/iamWing/SOFT252_Assignment", "Date": "2017-01-15T22:10:56Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task.isPause) task.status = DownLoadTaskStatus.PAUSE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7934/buggy-version/library.src.main.java.cn.christian.msdl.DownLoadTaskRunnable.java", "BodyUseAPI": [], "Fixed commit": "cc52041843ce4b6200f41110b22edb44b71cfa86", "Url": "https://api.github.com/repos/freestyletime/MSDL", "Date": "2015-05-05T06:24:40Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task.isPause) task.status = DownLoadTaskStatus.CANCEL;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7934/buggy-version/library.src.main.java.cn.christian.msdl.DownLoadManagerService.java", "BodyUseAPI": [], "Fixed commit": "cc52041843ce4b6200f41110b22edb44b71cfa86", "Url": "https://api.github.com/repos/freestyletime/MSDL", "Date": "2015-05-05T06:24:40Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) { s = new com.tutorials.hp.listviewimagessdcard.Spacecraft(); s.setName(file.getName()); s.setUri(android.net.Uri.fromFile(file)); spacecrafts.add(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/684/buggy-version/app.src.main.java.com.tutorials.hp.listviewimagessdcard.ImageActivity.java", "BodyUseAPI": ["android.net.Uri.fromFile(java.io.File)", "com.tutorials.hp.listviewimagessdcard.Spacecraft.setUri(android.net.Uri.fromFile(file))", "java.io.File.getName()", "com.tutorials.hp.listviewimagessdcard.Spacecraft.setName(java.lang.String)"], "Fixed commit": "5a58050fb3a6413d8d4f181f8c111772fa3d3f4c", "Url": "https://api.github.com/repos/ddzx0606/gamehelper", "Date": "2017-09-01T02:52:24Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((d.getHp()) > 0) { phase = net.fe.fightStage.Aether.LUNA; stage.attack(dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8252/buggy-version/src.net.fe.fightStage.Aether.java", "BodyUseAPI": [], "Fixed commit": "dc4a2dfcc679f6c85045842a9fe56bcff45946f7", "Url": "https://api.github.com/repos/chudooder/FEMultiplayer", "Date": "2013-11-28T22:42:08Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.debuffDamage) < spellDamage) || ((this.debuffDuration) < speelDamageDuration)) { this.debuffDamage = spellDamage; this.debuffDuration = speelDamageDuration; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/463/buggy-version/src.com.basementstudios.tag.mob.Mob.java", "BodyUseAPI": [], "Fixed commit": "108e67b7cf0e2009f6b034347f154b99abd58d05", "Url": "https://api.github.com/repos/jaspreetdhanjan/Team-Project", "Date": "2017-03-17T00:48:57Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(MapEditor.abfrageHulk1)) { moep = javax.swing.JOptionPane.showConfirmDialog(null, \"Es wurde noch kein 1. Spieler gesetzt.\\nTrotzdem testen?\", \"Konsistenzabfrage?\", javax.swing.JOptionPane.YES_NO_OPTION); switch (moep) { case 0 : setVisible(false); MapLoader.level_speichern(MapEditor.map, (\"Level-\" + (MapEditor.eingabe))); Menue.setMappingVisible(false); Menue.setGameVisible(true); Menue.spiel_neustarten(); case 1 : break; } }else if (!(MapEditor.abfrageAusgang)) { moep = javax.swing.JOptionPane.showConfirmDialog(null, \"Es wurde noch kein Ausgang gesetzt.\\nTrotzdem testen?\", \"Konsistenzabfrage?\", javax.swing.JOptionPane.YES_NO_OPTION); switch (moep) { case 0 : MapLoader.level_speichern(MapEditor.map, (\"Level-\" + (MapEditor.eingabe))); Menue.setMappingVisible(false); Menue.setGameVisible(true); Menue.spiel_neustarten(); break; case 1 : break; } }else { MapLoader.level_speichern(MapEditor.map, (\"Level-\" + (MapEditor.eingabe))); Menue.setMappingVisible(false); Menue.setGameVisible(true); Menue.spiel_neustarten(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4071/buggy-version/src.MapEditor.java", "BodyUseAPI": [], "Fixed commit": "b5b2e74d6294fff85c83722271503fc8e954093b", "Url": "https://api.github.com/repos/propra12-orga/gruppe23", "Date": "2012-07-05T23:28:53Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((expr.length()) == 0) { expressions.add(\"/\"); }else { expressions.add(expr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8321/buggy-version/modules.resources.src.main.java.org.apache.tamaya.resource.internal.Locator.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "c9d39ba69b92b467944f7c988fd2b984a681d8c2", "Url": "https://api.github.com/repos/apache/incubator-tamaya", "Date": "2015-10-28T00:45:16Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!matches) { java.util.Map<java.lang.String, java.lang.String> lt = am.getAdditionalInfo(); for (java.util.Map.Entry<java.lang.String, java.lang.String> e : lt.entrySet()) { matches = matcher.matches(e.getValue()); if (matches) { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3433/buggy-version/OsmAnd-java.src.net.osmand.binary.BinaryMapPoiReaderAdapter.java", "BodyUseAPI": [], "Fixed commit": "71d2137a06addf8d5dc31a45b47e06fc8016c38d", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-07-20T17:56:05Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transactionManager) == null) { transactionManager = ee.homies.gaffer.ServiceRegistryHolder.getServiceRegistry().getTransactionManager(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6041/buggy-version/src.main.java.ee.homies.gaffer.UserTransactionImpl.java", "BodyUseAPI": [], "Fixed commit": "e4f4f1451cd93ea879f45e750886dd8304d8c645", "Url": "https://api.github.com/repos/onukristo/gaffer", "Date": "2013-09-20T06:57:03Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ustudy.exam.mapper.MarkTaskMapper.getAllMarkTasksByQuesId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mt == null) { return mt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1964/buggy-version/exam.src.main.java.com.ustudy.exam.service.impl.MarkTaskServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "cd6c2bca57598a0abf690e72c3d3f7bce2281bb5", "Url": "https://api.github.com/repos/yu2003w/ustudy", "Date": "2017-11-29T05:23:38Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ustudy.exam.service.impl.MarkTaskServiceImpl.getMarkTaskByEGSQuestion(com.ustudy.exam.model.ExamGradeSub,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (mt != null) { taskL.add(mt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1964/buggy-version/exam.src.main.java.com.ustudy.exam.service.impl.MarkTaskServiceImpl.java", "BodyUseAPI": ["java.util.List<com.ustudy.exam.model.MarkTask>.add(com.ustudy.exam.model.MarkTask)"], "Fixed commit": "cd6c2bca57598a0abf690e72c3d3f7bce2281bb5", "Url": "https://api.github.com/repos/yu2003w/ustudy", "Date": "2017-11-29T05:23:38Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (giveCards) { for (cox5529.catan.player.CatanTile tile : space.getTiles()) { if ((tile.getResource()) != (cox5529.catan.Card.None)) { hand.addCard(tile.getResource()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4734/buggy-version/Server.src.cox5529.catan.player.Player.java", "BodyUseAPI": [], "Fixed commit": "3688bd2d4dd6accd1f7de33acf4fa0055074b8ee", "Url": "https://api.github.com/repos/cox5529/catan-multiplayer", "Date": "2017-12-08T17:54:17Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.knime.core.data.DataRow.getCell(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dcell0.getType()) == (org.knime.core.data.def.DoubleCell.TYPE)) { java.lang.Double ConvDataDouble = ((org.knime.core.data.DoubleValue) (dcell0)).getDoubleValue(); ConvDataInt0 = ((int) (ConvDataDouble.doubleValue())); }else { ConvDataInt0 = ((org.knime.core.data.IntValue) (dcell0)).getIntValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1293/buggy-version/de.mpicbg.knime.hcs.base.src.de.mpicbg.knime.hcs.base.nodes.layout.createwellposition.CreateWellPositionNodeModel.java", "BodyUseAPI": [], "Fixed commit": "a57bd79c6c0d004d4e0b6e57c5ffb3e809058850", "Url": "https://api.github.com/repos/knime-mpicbg/HCS-Tools", "Date": "2015-11-20T11:34:03Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CharMatcher.DIGIT.negate().indexIn(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index <= 0) { return \"\"; }else { return string.substring(0, index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2504/buggy-version/src.boston.Bus.Map.data.RouteTitleComparator.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "4dc68cd39448bd2570a5d5eafa7583c122823498", "Url": "https://api.github.com/repos/bostonbusmap/bostonbusmap", "Date": "2012-11-04T21:18:49Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(folder.exists())) { folder.mkdir(); android.util.Log.v(ch.ethz.gis.helper.BikeNetDatabaseHelper.TAG, \"database folder missing, created folder\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4000/buggy-version/VeloTemplate.app.src.main.java.ch.ethz.gis.helper.BikeNetDatabaseHelper.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "93c2cf2491ac0aa5084432dc9e2795295dd2e211", "Url": "https://api.github.com/repos/kentsay/Zurich-Velo-Challenge", "Date": "2015-10-29T23:11:33Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (precision <= 0) return java.lang.StrictMath.round(number);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/948/buggy-version/railo-java.railo-core.src.railo.runtime.functions.math.Round.java", "BodyUseAPI": [], "Fixed commit": "b2c1c615279d0abc49381d7990d3dd5d3b1b48af", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-10-31T10:48:17Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (difference < 0) { sortInt = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6442/buggy-version/app.src.main.java.com.gmail.brian.broll.taxidash.app.Company.java", "BodyUseAPI": [], "Fixed commit": "43f0d344ccd79090e449a482c4d4c4bf1b8006ef", "Url": "https://api.github.com/repos/TaxiDash/Android", "Date": "2014-07-02T12:59:45Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((companies) == null) || ((companies.size()) == 0)) { companies = updatedCompanies; createCompanyCards(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6442/buggy-version/app.src.main.java.com.gmail.brian.broll.taxidash.app.LocalCompanyList.java", "BodyUseAPI": [], "Fixed commit": "43f0d344ccd79090e449a482c4d4c4bf1b8006ef", "Url": "https://api.github.com/repos/TaxiDash/Android", "Date": "2014-07-02T12:59:45Z"},
{"Line": "=>2570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ep == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8237/buggy-version/org.osate.xtext.aadl2.errormodel.src.org.osate.xtext.aadl2.errormodel.util.EMV2Util.java", "BodyUseAPI": [], "Fixed commit": "49aa1c92395f2c77d044ea16112dcd898130708d", "Url": "https://api.github.com/repos/osate/ErrorModelV2", "Date": "2013-06-20T18:26:30Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8237/buggy-version/org.osate.aadl2.errormodel.analysis.src.org.osate.aadl2.errormodel.analysis.PropagateErrorSources.java", "BodyUseAPI": [], "Fixed commit": "49aa1c92395f2c77d044ea16112dcd898130708d", "Url": "https://api.github.com/repos/osate/ErrorModelV2", "Date": "2013-06-20T18:26:30Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scene_type) == (com.gdgl.activity.SceneDevicesActivity.EDIT)) { if (sceneName.equals(titleEditText.getText().toString())) { if (mSceneDevicesList.equals(mSceneDevicesListBackup)) { finish(); }else { if ((mSceneDevicesList.size()) < 1) { android.widget.Toast.makeText(this, \"\u8bf7\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u8bbe\u5907\", Toast.LENGTH_SHORT).show(); break; } java.lang.String sceneParams = createSceneParams(); com.gdgl.manager.SceneLinkageManager.getInstance().EditScene(sceneName, sceneParams, sceneIndex, sceneId); finish(); } }else { sceneName = android.net.Uri.encode(titleEditText.getText().toString()); java.lang.String sceneParams = createSceneParams(); com.gdgl.manager.SceneLinkageManager.getInstance().EditScene(sceneName, sceneParams, sceneIndex, sceneId); finish(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/598/buggy-version/SmartHome.src.com.gdgl.activity.SceneDevicesActivity.java", "BodyUseAPI": [], "Fixed commit": "e80a3d04a60103b18d33b7dfa4d4f698428bbb8d", "Url": "https://api.github.com/repos/cuiyiming007/SmartHome", "Date": "2015-06-25T06:53:09Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((faCatch.getSpecifiedFLUXLocations()) != null) { faCatchFact.setFaCatchFluxLocationId(eu.europa.ec.fisheries.uvms.rules.service.mapper.fact.ActivityFactMapper.mapFLUXLocationList(faCatch.getSpecifiedFLUXLocations())); xPathUtil.appendWithoutWrapping(partialXPath).append(eu.europa.ec.fisheries.uvms.rules.service.mapper.fact.SPECIFIED_FLUX_LOCATION, eu.europa.ec.fisheries.uvms.rules.service.mapper.fact.ID).storeInRepo(faCatchFact, \"faCatchFluxLocationId\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8580/buggy-version/service.src.main.java.eu.europa.ec.fisheries.uvms.rules.service.mapper.fact.ActivityFactMapper.java", "BodyUseAPI": ["eu.europa.ec.fisheries.uvms.rules.service.mapper.fact.ActivityFactMapper.mapFLUXLocationList(faCatch.getSpecifiedFLUXLocations())", "eu.europa.ec.fisheries.uvms.rules.service.mapper.fact.FACatch.getSpecifiedFLUXLocations()", "eu.europa.ec.fisheries.uvms.rules.service.mapper.fact.FaCatchFact.setFaCatchFluxLocationId(java.util.List<eu.europa.ec.fisheries.uvms.rules.service.mapper.fact.IdType>)"], "Fixed commit": "1201c029f54465d74fe7f9bd6f9efa136bd0e635", "Url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP", "Date": "2017-09-08T14:19:32Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (items == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4043/buggy-version/BetterBatteryStats.src.com.asksven.betterbatterystats.data.KbDbHelper.java", "BodyUseAPI": [], "Fixed commit": "c2f706a0ce65dd4215659f36a169da896d4b3b37", "Url": "https://api.github.com/repos/asksven/BetterBatteryStats", "Date": "2012-07-30T19:27:06Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmp == lowerBound) { tmp++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1469/buggy-version/RandomGame.src.main.java.com.epam.Model.java", "BodyUseAPI": [], "Fixed commit": "27b1ed8f47fcb8f8746c8e60a5f7bbe336da07a6", "Url": "https://api.github.com/repos/MishkaKolpakov/java-tasks", "Date": "2017-07-23T10:38:45Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.workingDir.exists())) { this.workingDir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2366/buggy-version/src.kml.Kernel.java", "BodyUseAPI": [], "Fixed commit": "ca859e23feff28ad60984f6b1de891a8a2295151", "Url": "https://api.github.com/repos/DarkLBP/Krothium-Launcher", "Date": "2016-09-08T17:54:55Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(log.getParentFile().exists())) { log.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2366/buggy-version/src.kml.Console.java", "BodyUseAPI": [], "Fixed commit": "ca859e23feff28ad60984f6b1de891a8a2295151", "Url": "https://api.github.com/repos/DarkLBP/Krothium-Launcher", "Date": "2016-09-08T17:54:55Z"},
{"Line": "=>1118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((responseInfo.error) == (android.hardware.radio.V1_0.RadioError.NONE)) { sendMessageResponse(rr.mResult, ret); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3935/buggy-version/src.java.com.android.internal.telephony.RadioResponse.java", "BodyUseAPI": [], "Fixed commit": "8caf74e5c33ed28dcae4ec8dd78bd7e2c83294e5", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2017-02-14T03:47:15Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(savedInstanceState.getCharSequence(\"uriPath\").equals(\"\"))) { setViewsVisible(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3357/buggy-version/ShareViaHttp.app.src.main.java.com.MarcosDiez.shareviahttp.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b2d2a39e73aeb1ea05fbe4750d352d9189b93802", "Url": "https://api.github.com/repos/StefMa/shareviahttp", "Date": "2015-04-05T16:29:50Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.project.gutenberg.Home.prefs.getOpenBook()) == (-999)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2391/buggy-version/app.src.com.project.gutenberg.Home.java", "BodyUseAPI": [], "Fixed commit": "96fc8e9789debad0d5b03722c1c35ddd408dd80a", "Url": "https://api.github.com/repos/AliceCengal/Goot", "Date": "2014-02-24T00:02:33Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tableStudents.get(strUserName.charAt(0))) != null) { synchronized(tableStudents.get(strUserName.charAt(0))) { if ((listStudent.size()) > 0) { for (rmi.LibraryObjects.Student student : listStudent) { if (student.getUserName().equals(strUserName)) { objStudent = student; } } } } }else { if ((listStudent.size()) > 0) { for (rmi.LibraryObjects.Student student : listStudent) { if (student.getUserName().equals(strUserName)) { objStudent = student; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4585/buggy-version/PM1.src.rmi.Server.RMIServer.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.util.HashMap<java.lang.Character, java.util.ArrayList<rmi.LibraryObjects.Student>>.get(char)", "student.getUserName().equals(java.lang.String)", "student.getUserName().equals(java.lang.String)"], "Fixed commit": "d01f2e329a37c9d495ae14a42ad3645fe4888f75", "Url": "https://api.github.com/repos/yogeshrawat/Team8_DRMS", "Date": "2015-06-14T04:11:09Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tableStudents.get(strUsername.charAt(0))) != null) { synchronized(tableStudents.get(strUsername.charAt(0))) { java.util.ArrayList<rmi.LibraryObjects.Student> objNewStudent = tableStudents.get(strUsername.charAt(0)); if (objNewStudent == null) { objNewStudent = new java.util.ArrayList<rmi.LibraryObjects.Student>(); tableStudents.put(strUsername.charAt(0), objNewStudent); } objNewStudent.add(objStudent); logger.info((\"New User added to the library with username as : \" + (objStudent.getUserName()))); } }else { java.util.ArrayList<rmi.LibraryObjects.Student> objNewStudent = tableStudents.get(strUsername.charAt(0)); if (objNewStudent == null) { objNewStudent = new java.util.ArrayList<rmi.LibraryObjects.Student>(); tableStudents.put(strUsername.charAt(0), objNewStudent); } objNewStudent.add(objStudent); logger.info((\"New User added to the library with username as : \" + (objStudent.getUserName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4585/buggy-version/PM1.src.rmi.Server.RMIServer.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Character, java.util.ArrayList<rmi.LibraryObjects.Student>>.get(char)", "java.lang.String.charAt(int)", "java.util.HashMap<java.lang.Character, java.util.ArrayList<rmi.LibraryObjects.Student>>.put(char,java.util.ArrayList<rmi.LibraryObjects.Student>)", "java.lang.String.charAt(int)", "java.util.HashMap<java.lang.Character, java.util.ArrayList<rmi.LibraryObjects.Student>>.put(char,java.util.ArrayList<rmi.LibraryObjects.Student>)", "java.util.HashMap<java.lang.Character, java.util.ArrayList<rmi.LibraryObjects.Student>>.get(char)", "java.lang.String.charAt(int)", "java.util.HashMap<java.lang.Character, java.util.ArrayList<rmi.LibraryObjects.Student>>.get(char)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)"], "Fixed commit": "d01f2e329a37c9d495ae14a42ad3645fe4888f75", "Url": "https://api.github.com/repos/yogeshrawat/Team8_DRMS", "Date": "2015-06-14T04:11:09Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pair == null) { return null; }else { return getLastPlayed(pair.getFirst(), pair.getSecond()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8854/buggy-version/app.src.main.java.github.daneren2005.dsub.util.SongDBHandler.java", "BodyUseAPI": ["github.daneren2005.dsub.util.SongDBHandler.getLastPlayed(pair.getFirst(),pair.getSecond())", "github.daneren2005.dsub.util.Pair<java.lang.Integer, java.lang.String>.getFirst()", "github.daneren2005.dsub.util.Pair<java.lang.Integer, java.lang.String>.getSecond()"], "Fixed commit": "13968b5f4424eb3218bee2eef698b91cc99d2976", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2016-03-22T00:47:32Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collection == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5270/buggy-version/app.src.main.java.com.example.velibisk.rssreader.Util.java", "BodyUseAPI": [], "Fixed commit": "7b0d0fa178e96921a0401bbe613515394874a309", "Url": "https://api.github.com/repos/attacco/VelibIsk", "Date": "2015-12-23T16:42:30Z"},
{"Line": "=>2262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val.matches(\"[0-9]{2}/[0-9]{2}/[0-9]{4}\")) { format = \"MM/dd/yyyy\"; }else { format = \"yyyy-MM-dd\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4021/buggy-version/src.java.org.openedit.data.BaseSearcher.java", "BodyUseAPI": [], "Fixed commit": "42775681951b97c27a4e8207f8c092f481af2c95", "Url": "https://api.github.com/repos/entermedia-community/entermedia-core", "Date": "2015-06-12T18:27:44Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.github.javaparser.ast.expr.Expression>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((e2 instanceof com.github.javaparser.ast.expr.NameExpr) || (e2 instanceof com.github.javaparser.ast.expr.FieldAccessExpr)) { info.data.add(v2); }else { info.data.add(e2.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7892/buggy-version/src.icc.visitors.BaseVisitor.java", "BodyUseAPI": ["info.data.add(e2.toString())", "com.github.javaparser.ast.expr.Expression.toString()"], "Fixed commit": "e9065428c20f3b9479cbaac4e2bfbf67277b7cab", "Url": "https://api.github.com/repos/damorim/pbicc", "Date": "2016-04-01T18:22:39Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.github.javaparser.ast.expr.Expression>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((e1 instanceof com.github.javaparser.ast.expr.NameExpr) || (e1 instanceof com.github.javaparser.ast.expr.FieldAccessExpr)) { java.lang.String i1 = getVarValue(e1); if (!(i1.startsWith(\"could not\"))) { info.action.add(i1); }else { info.action.add(e1.toString()); } }else { info.action.add(e1.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7892/buggy-version/src.icc.visitors.BaseVisitor.java", "BodyUseAPI": ["com.github.javaparser.ast.expr.Expression.toString()", "info.action.add(e1.toString())", "com.github.javaparser.ast.expr.Expression.toString()", "icc.visitors.BaseVisitor.getVarValue(com.github.javaparser.ast.expr.Expression)", "info.action.add(e1.toString())"], "Fixed commit": "e9065428c20f3b9479cbaac4e2bfbf67277b7cab", "Url": "https://api.github.com/repos/damorim/pbicc", "Date": "2016-04-01T18:22:39Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resolver.isMagicalSkill(attackSkill)) && ((defender.getHP()) < actualDamage)) { actualDamage = ((defender.getHP()) + 1) / 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7270/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.skill.KnightGuardian.java", "BodyUseAPI": ["cfvbaibai.cardfantasy.engine.CardInfo.getHP()"], "Fixed commit": "f34fad47d7ff1965d8135cbc8a5b02ee1bd19028", "Url": "https://api.github.com/repos/yezhihuib/CardFantasy", "Date": "2015-11-08T04:09:42Z"},
{"Line": "=>945", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (saveError != null) { exaltedcombat.ExaltedDialogHelper.displayError(this, exaltedcombat.TickCombatFrame.ERROR_WHILE_SAVING_CAPTION.toString(), saveError); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3735/buggy-version/ExaltedCombat.src.main.java.exaltedcombat.TickCombatFrame.java", "BodyUseAPI": ["exaltedcombat.ExaltedDialogHelper.displayError(exaltedcombat.TickCombatFrame,exaltedcombat.TickCombatFrame.ERROR_WHILE_SAVING_CAPTION.toString(),java.lang.Throwable)"], "Fixed commit": "b031c6d077a07b13100f877b62ebf2a9b486019a", "Url": "https://api.github.com/repos/kelemen/ExaltedCombat", "Date": "2012-04-29T23:13:48Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { getActivity().supportInvalidateOptionsMenu(); logToTranscript(getActivity().getString(R.string.session_ended)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6748/buggy-version/MediaRouter.RemotePlayback.src.com.commonsware.android.remoteplayback.PlaybackFragment.java", "BodyUseAPI": [], "Fixed commit": "f2266c1bf5196209b99e907ec82e33e95e68808d", "Url": "https://api.github.com/repos/commonsguy/cw-omnibus", "Date": "2014-04-28T11:39:37Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.gamefactoryx.cheers.model.kongosdrink.KongosDrinkMainModel.getInstance().isWhoIsWho()) { if ((com.gamefactoryx.cheers.tool.kongosdrink.Configuration.getInstance().getGameType()) != (Configuration.GameTypeEnum.DOGFIGHT)) { mainButtonsSprite[0].setPosition((60 + (120 * ((mainButtonsSprite.length) - 2))), (-80)); mainButtonsSprite[0].draw(batch); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4080/buggy-version/core.src.com.gamefactoryx.cheers.view.kongosdrink.KongosDrinkMainScreen.java", "BodyUseAPI": [], "Fixed commit": "f1da2d054da8cdb9597aa65c0fa976bbbf9b1e7b", "Url": "https://api.github.com/repos/d-bernat/CheersGdxGame", "Date": "2017-11-17T10:04:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (reader != null) { try { reader.close(); } catch (java.lang.Exception e) { maas.Start.log.catching(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2763/buggy-version/src.main.java.maas.Start.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "1f0beb1e51b67f64092a65f24df78b32fc6b2d8e", "Url": "https://api.github.com/repos/HBRS-MAAS/project-just_a_bakery", "Date": "2017-12-06T08:46:31Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { android.content.Intent myIntent = new android.content.Intent(this, com.example.trevorbernard.parkhere.Client.LoginActivity.class); startActivity(myIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5889/buggy-version/app.src.main.java.com.example.trevorbernard.parkhere.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c6f7a1b439f07a229ec306112ac2431e220588db", "Url": "https://api.github.com/repos/ParkHere310/ParkHere", "Date": "2016-11-01T05:13:19Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((callback.getError()) != null) { throw callback.getError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5191/buggy-version/src.android.com.microsoftopentechnologies.intellij.helpers.azure.rest.AzureRestAPIHelper.java", "BodyUseAPI": ["com.microsoftopentechnologies.intellij.helpers.azure.rest.AzureRestAPIHelper.AzureRestCallback<T>.getError()"], "Fixed commit": "d6c9a1d6fcda69a80ad37a2a23473940cb7569c7", "Url": "https://api.github.com/repos/leotilli/msopentech-tools-for-intellij", "Date": "2015-03-25T16:25:49Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentOverrideRank == null) { keysWeightMap.put(overrideKey, overrideMap.get(override)); }else if (currentOverrideRank > (overrideMap.get(override))) { continue; }else { keysWeightMap.put(overrideKey, overrideMap.get(override)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1884/buggy-version/src.main.java.org.kelvin.load_config.AppConfig.java", "BodyUseAPI": [], "Fixed commit": "e02268c9a2cf31f7e53828e596b4570a7f81d26e", "Url": "https://api.github.com/repos/shashikiranrp/load_ini", "Date": "2015-06-24T07:33:27Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.shadowmage.ancientwarfare.core.util.BlockTools.getBlockClickedOn(net.minecraft.entity.player.EntityPlayer,player.worldObj,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bpHit == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8689/buggy-version/src.main.java.net.shadowmage.ancientwarfare.structure.item.ItemStructureBuilder.java", "BodyUseAPI": [], "Fixed commit": "c9b7c4c868c23d2cef23a40a6ea7a87a9c8743e2", "Url": "https://api.github.com/repos/shadowmage45/AncientWarfare2", "Date": "2014-12-22T19:00:37Z"},
{"Line": "=>975", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.binarySearch(long[],c.at8(i))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (num < 0) java.lang.System.out.println(\"asdf\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7006/buggy-version/h2o-core.src.main.java.water.fvec.Vec.java", "BodyUseAPI": [], "Fixed commit": "99fe517a00f54dea9ca4e64054c06a6e8cd1ea8c", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-04-04T00:18:20Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v == (buttonAddUser)) { startActivity(new android.content.Intent(this, isep.moodup.RegistrationUser.class)); }else if (v == (buttonLogin)) { startActivity(new android.content.Intent(this, isep.moodup.LoginActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7398/buggy-version/app.src.main.java.isep.moodup.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "12ef94231388ca8eb0803ecbe5b9c0b895e5d045", "Url": "https://api.github.com/repos/kounvonglasy/moodup", "Date": "2016-12-13T13:52:33Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reflections) == null) { reflections = new org.reflections.Reflections(new org.reflections.util.ConfigurationBuilder().setUrls(org.reflections.util.ClasspathHelper.forPackage(_scanPath)).addScanners(new org.reflections.scanners.FieldAnnotationsScanner())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/369/buggy-version/src.main.java.com.hujian.switcher.annotation.RunThenSwitchResolver.java", "BodyUseAPI": [], "Fixed commit": "02669b65afb19d2dd37e6867867a194eec49b44a", "Url": "https://api.github.com/repos/pandening/JSwitcher", "Date": "2017-08-22T01:51:56Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commandHistoryIndex) == (commandHistory.size())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8557/buggy-version/src.gui.TaskDisplayController.java", "BodyUseAPI": [], "Fixed commit": "504e9e0127bbf92abfb6ea37cd17e2739d71412b", "Url": "https://api.github.com/repos/cs2103jan2015-f13-1j/main", "Date": "2015-04-12T07:51:18Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.output.DeferredFileOutputStream.getFile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (f != null) f.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8275/buggy-version/maven-plugin.src.main.java.hudson.maven.SplittableBuildListener.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "6f32a227f1a63dd321074753fe2bd33a8d94e8ec", "Url": "https://api.github.com/repos/ohtake/jenkins", "Date": "2012-04-03T04:38:15Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c < 16) sb.append(\"%0\").append(java.lang.Integer.toHexString(c).toUpperCase()); else if ((c < 48) || (c > 127)) sb.append('%').append(java.lang.Integer.toHexString(c).toUpperCase()); else sb.append(c);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5972/buggy-version/src.main.java.ultimate.karoapi4j.utils.URLLoaderUtil.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)", "java.lang.String.toUpperCase()", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.String.toUpperCase()", "java.lang.Integer.toHexString(char)", "java.lang.Integer.toHexString(char)", "java.lang.StringBuffer.append(char)"], "Fixed commit": "f2cab008c200e11c7d705df2d8180b603175180e", "Url": "https://api.github.com/repos/ultimate/KaroAPI4J", "Date": "2013-04-24T18:27:12Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousVersionFilePath) != null) { s3Client.deleteObject(bucket, previousVersionFilePath); }else { com.twitter.heron.uploader.s3.S3Uploader.LOG.log(java.util.logging.Level.INFO, \"Skipping cleanup of backup file. Previous version does not exist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/51/buggy-version/heron.uploaders.src.java.com.twitter.heron.uploader.s3.S3Uploader.java", "BodyUseAPI": [], "Fixed commit": "262b5f44539cfeec96d8c8cbc7cb6864bd06f10f", "Url": "https://api.github.com/repos/jrcrawfo/heron", "Date": "2016-12-30T20:01:29Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Computer.currentComputer().getNode()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (node == null) { listener.fatalError(hudson.tasks._ant.Messages.Ant_NodeOffline()); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/733/buggy-version/src.main.java.hudson.tasks.Ant.java", "BodyUseAPI": [], "Fixed commit": "61ec68fc856553091961d051bf4df88833a4773f", "Url": "https://api.github.com/repos/armfergom/ant-plugin", "Date": "2016-05-04T10:18:11Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == value) { throw new com.webfirmframework.wffweb.InvalidValueException(\"The same instance cannot be passed as value\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4426/buggy-version/wffweb.src.main.java.com.webfirmframework.wffweb.wffbm.data.WffBMObject.java", "BodyUseAPI": [], "Fixed commit": "e50a8702a211a05d32a184330d990569b19f411e", "Url": "https://api.github.com/repos/webfirmframework/wff", "Date": "2016-10-10T10:18:59Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.equals(JTPConstants.Layout.TAB_HEIGHT)) { int intValue = java.lang.Integer.parseInt(value); store.setValue(key, java.lang.Math.max(intValue, OSHelper.INSTANCE.getMinimumTabHeight())); }else { store.setValue(key, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1088/buggy-version/net.jeeeyul.eclipse.themes.src.net.jeeeyul.eclipse.themes.preference.actions.LoadPresetAction.java", "BodyUseAPI": ["org.eclipse.jface.preference.PreferenceStore.setValue(java.lang.String,int)", "org.eclipse.jface.preference.PreferenceStore.setValue(java.lang.String,java.lang.String)"], "Fixed commit": "e0d62c45109072e71ab698655bc351f8ceaea76e", "Url": "https://api.github.com/repos/jeeeyul/eclipse-themes", "Date": "2014-03-10T06:33:02Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.nordicsemi.android.nrftoolbox.uart.domain.Command.getCommand()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (text == null) text = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1309/buggy-version/app.src.main.java.no.nordicsemi.android.nrftoolbox.uart.UARTControlFragment.java", "BodyUseAPI": [], "Fixed commit": "8981a23d778dbbba095d3438c92d7aa7d11c2522", "Url": "https://api.github.com/repos/NordicSemiconductor/Android-nRF-Toolbox", "Date": "2016-10-20T14:58:32Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aItem == (org.lisoft.lsml.model.database.ItemDB.CASE)) { if ((getComponent(Location.RightTorso).getItemsEquipped().contains(ItemDB.CASE)) && (getComponent(Location.LeftTorso).getItemsEquipped().contains(ItemDB.CASE))) { return org.lisoft.lsml.model.loadout.EquipResult.make(EquipResultType.ComponentAlreadyHasCase); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8257/buggy-version/src.main.java.org.lisoft.lsml.model.loadout.Loadout.java", "BodyUseAPI": [], "Fixed commit": "f20c67848fafaeb33d0b4a4378ec3a6beef171a0", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2017-11-01T17:39:38Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Parser.getCharClass(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (charClass != (-1)) { state = automata.nextState(charClass); }else { state = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8934/buggy-version/lab1.src.Parser.java", "BodyUseAPI": ["Automata.nextState(int)"], "Fixed commit": "18a78a879eabc5cd84ba751b73d1d953bda1cbfc", "Url": "https://api.github.com/repos/Troshchuk/OS2-LABs", "Date": "2014-04-09T09:32:43Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stringSet.contains(key)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2766/buggy-version/atlas-gradle-plugin.atlas-plugin.src.main.java.com.taobao.android.builder.tools.bundleinfo.BundleItem.java", "BodyUseAPI": [], "Fixed commit": "693d2d076278aaa63130b6019c8e66a658d42775", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-07-28T01:59:33Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof sf.net.experimaestro.scheduler.Resource) return new sf.net.experimaestro.utils.JSResource(((sf.net.experimaestro.scheduler.Resource) (value)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8925/buggy-version/server.src.main.java.sf.net.experimaestro.utils.JSUtils.java", "BodyUseAPI": [], "Fixed commit": "a727eb8151f87447d2f9e350e46b7669e7f0c65e", "Url": "https://api.github.com/repos/bpiwowar/experimaestro", "Date": "2014-10-15T09:46:11Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getPropertyName().equals(World.PC_SIMULATION_STARTED)) { com.projects.systems.simulation.SimulationStatus status = ((com.projects.systems.simulation.SimulationStatus) (event.getNewValue())); remove(supplyChartPanel); supplyChartPanel = new org.jfree.chart.ChartPanel(createSupplyChart(status.powerPlants)); add(supplyChartPanel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3782/buggy-version/src.com.projects.gui.panel.SupplyAndDemandPanel.java", "BodyUseAPI": ["java.beans.PropertyChangeEvent.getNewValue()"], "Fixed commit": "16fea210084cc68a87c70f72aba816ad23013692", "Url": "https://api.github.com/repos/funIntentions/flow", "Date": "2015-07-17T23:36:39Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((strings[i]) != null) { builder.append(strings[i]); if (i != ((strings.length) - 1)) builder.append(separator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7000/buggy-version/Library.src.main.java.com.bingzer.android.dbv.Util.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "df1e2dc22944c1bbc0cf790b0a00b0d8535ea45d", "Url": "https://api.github.com/repos/bingzer/DbQuery", "Date": "2013-08-28T17:41:39Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (joy.getRawButton(5)) { DRIVEL1.set(0.5); DRIVER1.set(0.5); DRIVEL1.set((-0.5)); DRIVER2.set((-0.5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8163/buggy-version/src.org.usfirst.frc.team5338.robot.subsystems.DriveTrain.java", "BodyUseAPI": [], "Fixed commit": "4a9bf48dadcaee232285a9388f2292a51793b927", "Url": "https://api.github.com/repos/RoboLoCo-5338/Command-Based-Robot", "Date": "2017-01-21T23:19:11Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Long, io.druid.indexing.common.TaskLock>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (taskLock.equals(taskLockToUpgrade)) { alreadyUpgraded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2545/buggy-version/indexing-service.src.main.java.io.druid.indexing.overlord.MetadataTaskStorage.java", "BodyUseAPI": [], "Fixed commit": "d40b8db68bed9e3f8d01c23281990ee301ba02c5", "Url": "https://api.github.com/repos/pjain1/druid", "Date": "2015-09-10T18:59:47Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.figures.elementAt(0).equals(0)) { this.figures.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7039/buggy-version/app.src.main.java.com.alanbertadev.bigfinancekeyboard.BigFinanceKeyboard.java", "BodyUseAPI": ["java.util.Stack<java.lang.Integer>.remove(int)"], "Fixed commit": "097dfb7973d7954b2e90105c281f455d6afc93e5", "Url": "https://api.github.com/repos/alanbertadev/androidbigfinancekeyboard", "Date": "2016-09-21T02:40:02Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["diarsid.beam.core.modules.executor.CommandsIntelligentCache.getPatternCommandForExecution(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cachedCommand.isEmpty()) { return; }else { this.tryToExecuteCachedCommand(cachedCommand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2381/buggy-version/src.main.java.diarsid.beam.core.modules.executor.ExecutorModuleWorker.java", "BodyUseAPI": ["diarsid.beam.core.modules.executor.ExecutorModuleWorker.tryToExecuteCachedCommand(java.lang.String)"], "Fixed commit": "52f420a7408674a31774d8b5d94430e90e6017f1", "Url": "https://api.github.com/repos/Diarsid/Beam", "Date": "2016-06-01T11:01:18Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["diarsid.beam.core.modules.executor.CommandsIntelligentCache.askUserWhichActionToPerform(java.util.ArrayList<>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (chosenOriginalCommand.isEmpty()) { return \"\"; }else { java.lang.String improvedCommand = commandsCache.get(chosenOriginalCommand); return this.refineCommandFromUnnecessaryParts(improvedCommand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2381/buggy-version/src.main.java.diarsid.beam.core.modules.executor.CommandsIntelligentCache.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "52f420a7408674a31774d8b5d94430e90e6017f1", "Url": "https://api.github.com/repos/Diarsid/Beam", "Date": "2016-06-01T11:01:18Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(off.containsKey(owner))) { bot.say(((\"Please do not say curse words in chat \" + owner) + \"!\")); off.put(owner, 1); }else if ((off.get(owner)) == 1) { bot.say(((\"/mute \" + owner) + \" 5m\")); bot.say(((\"Please do not say curse words in chat \" + owner) + \"!\")); bot.say(\"You have been muted for 5 minutes\"); off.put(owner, 2); }else if ((off.get(owner)) == 2) { bot.say(((\"/mute \" + owner) + \" 30m\")); bot.say(((\"Please do not say curse words in chat \" + owner) + \"!\")); bot.say(\"You have been muted for 30 minutes\"); off.remove(owner); off.put(owner, 3); }else if ((off.get(owner)) == 3) { bot.say(((\"/kick \" + owner) + \" Please do not say curse words in chat! -KnightBot\")); off.remove(owner); off.put(owner, 4); }else if ((off.get(owner)) == 4) { bot.say(((\"/tempban \" + owner) + \" 1d\")); off.remove(owner); off.put(owner, 5); }else if ((off.get(owner)) == 5) { bot.say(((\"/ban \" + owner) + \" You have ben permantly banned for curseing -KnightBot\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4490/buggy-version/src.main.java.org.darkstorm.darkbot.mcwrapper.backend.ChatBackend.java", "BodyUseAPI": ["org.darkstorm.darkbot.mcwrapper.MinecraftBotWrapper.say(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "org.darkstorm.darkbot.mcwrapper.MinecraftBotWrapper.say(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)", "org.darkstorm.darkbot.mcwrapper.MinecraftBotWrapper.say(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.remove(java.lang.String)", "org.darkstorm.darkbot.mcwrapper.MinecraftBotWrapper.say(java.lang.String)", "org.darkstorm.darkbot.mcwrapper.MinecraftBotWrapper.say(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.remove(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.HashMap<java.lang.String, java.lang.Integer>.remove(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)", "org.darkstorm.darkbot.mcwrapper.MinecraftBotWrapper.say(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)", "org.darkstorm.darkbot.mcwrapper.MinecraftBotWrapper.say(java.lang.String)", "org.darkstorm.darkbot.mcwrapper.MinecraftBotWrapper.say(java.lang.String)"], "Fixed commit": "e4d4f0141d2c9d766c1c46ecdb46a63e93919d39", "Url": "https://api.github.com/repos/stopbox/DarkBot", "Date": "2014-08-29T02:48:10Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (removeFlag == false) { final org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.pcep.pcecc.rev160225.Arguments4 args = input.getArguments().getAugmentation(org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.pcep.pcecc.rev160225.Arguments4.class); labelType = args.getPceLabelUpdateType(); }else { final org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.pcep.pcecc.rev160225.Arguments5 args = input.getArguments().getAugmentation(org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.pcep.pcecc.rev160225.Arguments5.class); labelType = args.getPceLabelUpdateType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3780/buggy-version/bgpcep.pcep.topology-provider.src.main.java.org.opendaylight.bgpcep.pcep.topology.provider.Stateful07TopologySessionListener.java", "BodyUseAPI": [], "Fixed commit": "1f8c9ee363dba048d5deee088de80e34326827e9", "Url": "https://api.github.com/repos/SojanKoshy/bgpcep-pcecc", "Date": "2016-03-23T03:22:08Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (removeFlag == false) { final org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.pcep.pcecc.rev160225.Arguments4 args = input.getArguments().getAugmentation(org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.pcep.pcecc.rev160225.Arguments4.class); labelType = args.getPceLabelUpdateType(); }else { final org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.pcep.pcecc.rev160225.Arguments5 args = input.getArguments().getAugmentation(org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.pcep.pcecc.rev160225.Arguments5.class); labelType = args.getPceLabelUpdateType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3780/buggy-version/bgpcep.pcep.topology-provider.src.main.java.org.opendaylight.bgpcep.pcep.topology.provider.Stateful07TopologySessionListener.java", "BodyUseAPI": [], "Fixed commit": "1f8c9ee363dba048d5deee088de80e34326827e9", "Url": "https://api.github.com/repos/SojanKoshy/bgpcep-pcecc", "Date": "2016-03-23T03:22:08Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pkg3dforrealthistime.Surface.getProjList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (intersects(point, new pkg3dforrealthistime.Point3D(pointList.getLast().coords), new pkg3dforrealthistime.Point3D(pointList.getFirst().coords))) { count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7662/buggy-version/src.pkg3dforrealthistime.Surface.java", "BodyUseAPI": [], "Fixed commit": "37a47a501ebc426c911b0fd08babe15e6d247896", "Url": "https://api.github.com/repos/dmitrykobets/3D-World", "Date": "2016-12-22T03:10:43Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild.getAction(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (action != null) { java.util.List<hudson.model.ParameterValue> parameters = new java.util.ArrayList<hudson.model.ParameterValue>(action.getParameters()); parameters.add(value); return new hudson.model.ParametersAction(parameters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5574/buggy-version/src.main.java.se.diabol.jenkins.pipeline.PipelineVersionContributor.java", "BodyUseAPI": ["hudson.model.ParametersAction.getParameters()"], "Fixed commit": "9f2892772b81c40ed230aa659a5ded93730a5299", "Url": "https://api.github.com/repos/Diabol/delivery-pipeline-plugin", "Date": "2016-07-04T16:09:21Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.nebula.widgets.nattable.edit.command.EditUtils.getLastSelectedCell(org.eclipse.nebula.widgets.nattable.selection.SelectionLayer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (lastSelectedCell != null) { final java.util.List<java.lang.String> lastSelectedCellLabelsArray = lastSelectedCell.getConfigLabels().getLabels(); return configRegistry.getConfigAttribute(EditConfigAttributes.CELL_EDITOR, DisplayMode.EDIT, lastSelectedCellLabelsArray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4990/buggy-version/org.eclipse.nebula.widgets.nattable.core.src.org.eclipse.nebula.widgets.nattable.edit.command.EditUtils.java", "BodyUseAPI": ["lastSelectedCell.getConfigLabels().getLabels()", "org.eclipse.nebula.widgets.nattable.layer.cell.ILayerCell.getConfigLabels()"], "Fixed commit": "53de43390c39a66ca2b3f7a5d07ce9f5066c3f3b", "Url": "https://api.github.com/repos/webcane/nebula.widgets.nattable", "Date": "2013-01-29T15:40:18Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.nebula.widgets.nattable.edit.command.EditUtils.getLastSelectedCell(org.eclipse.nebula.widgets.nattable.selection.SelectionLayer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (lastSelectedCell != null) { org.eclipse.nebula.widgets.nattable.coordinate.PositionCoordinate[] selectedCells = selectionLayer.getSelectedCellPositions(); java.lang.Object originalCanonicalValue = lastSelectedCell.getDataValue(); for (org.eclipse.nebula.widgets.nattable.coordinate.PositionCoordinate selectedCell : selectedCells) { java.lang.Object cellValue = selectionLayer.getCellByPosition(selectedCell.columnPosition, selectedCell.rowPosition).getDataValue(); if (((cellValue != null) && (!(cellValue.equals(originalCanonicalValue)))) || ((cellValue == null) && (originalCanonicalValue != null))) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4990/buggy-version/org.eclipse.nebula.widgets.nattable.core.src.org.eclipse.nebula.widgets.nattable.edit.command.EditUtils.java", "BodyUseAPI": ["org.eclipse.nebula.widgets.nattable.layer.cell.ILayerCell.getDataValue()"], "Fixed commit": "53de43390c39a66ca2b3f7a5d07ce9f5066c3f3b", "Url": "https://api.github.com/repos/webcane/nebula.widgets.nattable", "Date": "2013-01-29T15:40:18Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getSourceProvider().isGoogleApiClientConnected()) { com.yayandroid.locationmanager.helper.LogUtils.logI(\"Requesting location update...\"); getSourceProvider().requestLocationUpdate(); }else { com.yayandroid.locationmanager.helper.LogUtils.logI(\"Tried to requestLocationUpdate, but GoogleApiClient wasn't connected. Trying to connect...\"); waitingForConnectionToRequestLocationUpdate(true); getSourceProvider().connectGoogleApiClient(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2855/buggy-version/library.src.main.java.com.yayandroid.locationmanager.providers.locationprovider.GooglePlayServicesLocationProvider.java", "BodyUseAPI": [], "Fixed commit": "7aa9d85a5318c35c655df0e691b52f014dd6f189", "Url": "https://api.github.com/repos/yayaa/LocationManager", "Date": "2017-08-18T09:11:09Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ex instanceof java.lang.Exception) { org.mindroid.impl.errorhandling.ErrorHandlerManager.getInstance().handleError(((java.lang.Exception) (ex)), org.mindroid.impl.communication.MessageServer.class, ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2648/buggy-version/impl.androidApp.api.src.main.java.org.mindroid.impl.communication.MessageServer.java", "BodyUseAPI": ["org.mindroid.impl.errorhandling.ErrorHandlerManager.getInstance().handleError(java.lang.Throwable,java.lang.Class,java.lang.String)", "java.lang.Throwable.getMessage()"], "Fixed commit": "113bac0713d240743684bfd2771c74ba0799c32a", "Url": "https://api.github.com/repos/Echtzeitsysteme/mindroid", "Date": "2017-11-09T18:54:59Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((limit) > (-1)) && (fetched >= (limit))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4180/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLResultsetAbstract.java", "BodyUseAPI": [], "Fixed commit": "9b99693c16ac1721b9fbcff3a258e56732aaef26", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-12-30T21:12:52Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((((x > (width)) || (y > (height))) || (y < 0)) || (x < 0))) return tiles[(x + ((width) * y))]; else { java.lang.System.err.println(((((\"Unknown tile at coords : \" + x) + \"/\") + y) + \" , returned default type.\")); return new com.norwand.game.management.gamedata.environement.tiles.Tile(com.norwand.game.management.gamedata.environement.tiles.Tile.TYPE_NORMAL, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3862/buggy-version/core.src.com.norwand.game.management.gamedata.environement.Floor.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "ba27d9982f0629812b6a3adc8b2673aca5bb6d5c", "Url": "https://api.github.com/repos/Darkxell/Les-Chroniques-de-Norwand", "Date": "2016-03-07T20:50:16Z"},
{"Line": "=>1194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getWrappedEvent()) instanceof org.bukkit.event.block.BlockBreakEvent) { org.bukkit.event.block.BlockBreakEvent wrappedEvent = ((org.bukkit.event.block.BlockBreakEvent) (event.getWrappedEvent())); if ((getChunkBundle().isOptionEnabled(ChunkBundleToggleable.OPEN_STORAGE_AREAS)) && ((wrappedEvent.getBlock().getType()) != (org.bukkit.Material.CHEST))) event.addBuildOverride(BuildOverride.OPEN_STORAGE_AREA_ALLOW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1056/buggy-version/src.org.saga.buildings.Building.java", "BodyUseAPI": ["org.saga.listeners.events.SagaBuildEvent.addBuildOverride(BuildOverride.OPEN_STORAGE_AREA_ALLOW)", "org.saga.listeners.events.SagaBuildEvent.getWrappedEvent()"], "Fixed commit": "dee0f35360c3c0151787f473d951324fa822e972", "Url": "https://api.github.com/repos/andfRa/Saga", "Date": "2012-08-03T13:04:38Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGroovy) visitMethodDef(t, visit); else if (visit == (OPENING_VISIT)) { visitVariableDef(t, visit); java.lang.String defaultText = getDefaultValue(t); if (defaultText != null) { currentFieldDoc.setConstantValueExpression(defaultText); java.lang.String orig = currentFieldDoc.getRawCommentText(); currentFieldDoc.setRawCommentText(((orig + \"\\n* @default \") + defaultText)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4739/buggy-version/src.main.org.codehaus.groovy.tools.groovydoc.SimpleGroovyClassDocAssembler.java", "BodyUseAPI": [], "Fixed commit": "da7794471e53ee8f333338b3ebd3f3e76aa8909b", "Url": "https://api.github.com/repos/codehaus/groovy-git", "Date": "2012-05-18T11:57:09Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((savedShapes.size()) > 0) savedShapes.removeLast();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2667/buggy-version/src.com.mason.states.CollisionEditor.java", "BodyUseAPI": ["java.util.LinkedList<org.newdawn.slick.geom.Shape>.removeLast()"], "Fixed commit": "eff0f54b9c1522d0b87272963a79d3ad4fb109bc", "Url": "https://api.github.com/repos/Anthony-Cuomo/Adventures-of-Mason", "Date": "2017-08-19T01:46:47Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (values == null) { return new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8737/buggy-version/serde.src.main.java.org.splicer.serde.encoder.MapToRoaringBitmapEncoder.java", "BodyUseAPI": [], "Fixed commit": "28b1faf82cbc35c349e150ec54699b3ac830a888", "Url": "https://api.github.com/repos/dropoftruth/splicer", "Date": "2016-02-20T04:17:57Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(betAmount)) > (game.getPlayerMoney())) { try { java.lang.Thread.sleep(GameRunner.SLEEPTIME); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } betAmount = \"\" + (game.getPlayerMoney()); java.lang.System.out.println(\"You bet more money than you have lowering bet to your total wallet amount.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3517/buggy-version/src.GameRunner.java", "BodyUseAPI": ["Game.getPlayerMoney()"], "Fixed commit": "135ebd55cc2c5dce583ec27bc8803c977c234568", "Url": "https://api.github.com/repos/jacobapiazza/CletusBlackJack", "Date": "2017-03-29T20:37:54Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (events != null) { try { for (com.xingcloud.events.XEvent childEvent : events) { patterns.add(new org.apache.drill.common.expression.ValueExpressions.QuotedString(((date + (childEvent.nameRowkeyStyle())) + \"\\\\xFF\"), org.apache.drill.common.expression.ExpressionPosition.UNKNOWN)); } } catch (com.xingcloud.events.XEventException e) { throw new org.apache.drill.exec.exception.OptimizerException(e.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6002/buggy-version/sandbox.prototype.exec.java-exec.src.main.java.org.apache.drill.exec.opt.BasicOptimizer.java", "BodyUseAPI": [], "Fixed commit": "37729c1c2e89361b0933e4d3ff1809e78b055696", "Url": "https://api.github.com/repos/XingCloud/incubator-drill", "Date": "2013-09-30T06:57:36Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (areaToLoad != null) toggleArea(areaToLoad);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6207/buggy-version/src.MapRenderModel.java", "BodyUseAPI": ["MapRenderModel.toggleArea(java.lang.String)"], "Fixed commit": "0c96292183b03226e9844d80f4c94f03cb7f2314", "Url": "https://api.github.com/repos/punell/Projekt-Dat055", "Date": "2015-02-20T08:30:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(LoggedInUser.encoded.equals(\"\"))) { android.widget.ImageView image = ((android.widget.ImageView) (findViewById(R.id.userImage))); image.setImageBitmap(LoggedInUser.image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7678/buggy-version/app.src.main.java.softeng.eventplanning.SettingsPage.java", "BodyUseAPI": [], "Fixed commit": "ae27d1b822ce0372af4950d745a416fa6054da45", "Url": "https://api.github.com/repos/jpcerone/eventPlanning", "Date": "2016-11-19T19:58:22Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(LoggedInUser.encoded.equals(\"\"))) { android.widget.ImageView image = ((android.widget.ImageView) (findViewById(R.id.dyuserImage))); image.setImageBitmap(LoggedInUser.image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7678/buggy-version/app.src.main.java.softeng.eventplanning.userPage.java", "BodyUseAPI": [], "Fixed commit": "ae27d1b822ce0372af4950d745a416fa6054da45", "Url": "https://api.github.com/repos/jpcerone/eventPlanning", "Date": "2016-11-19T19:58:22Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Float>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (conditionUnitNumTo < 9999) extraFeeStr += ((((((((((\"\\t\" + conditionUnitNumFrom) + \" \") + keyUnit) + \"(s)\\t-\\t\") + conditionUnitNumTo) + \" \") + keyUnit) + \"(s)\") + \"\\t$\") + (extraExtraFees.get((\"\" + i)))) + \"\\n\"; else extraFeeStr += ((((((\"\\t>=\" + conditionUnitNumFrom) + \" \") + keyUnit) + \"(s)\") + \"\\t\\t\\t\\t$\") + (extraExtraFees.get((\"\" + i)))) + \"\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8164/buggy-version/src.main.java.CS3343.AirlineTicketOrdering.Baggage.BaggageRulePrinter.java", "BodyUseAPI": [], "Fixed commit": "c5bed9a9636a45b337aa40a2fa2de5d1db5154a4", "Url": "https://api.github.com/repos/kitho/CS3343", "Date": "2014-11-15T07:08:07Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Float>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (conditionUnitNumTo < 9999) extraPetFeeStr += ((((((((((\"\\t\" + conditionUnitNumFrom) + \" \") + keyUnit) + \"(s)\\t-\\t\") + conditionUnitNumTo) + \" \") + keyUnit) + \"(s)\") + \"\\t$\") + (extraPetFees.get((\"\" + i)))) + \"\\n\"; else extraPetFeeStr += ((((((\"\\t>=\" + conditionUnitNumFrom) + \" \") + keyUnit) + \"(s)\") + \"\\t\\t\\t\\t$\") + (extraPetFees.get((\"\" + i)))) + \"\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8164/buggy-version/src.main.java.CS3343.AirlineTicketOrdering.Baggage.BaggageRulePrinter.java", "BodyUseAPI": [], "Fixed commit": "c5bed9a9636a45b337aa40a2fa2de5d1db5154a4", "Url": "https://api.github.com/repos/kitho/CS3343", "Date": "2014-11-15T07:08:07Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Float>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (conditionUnitNumTo < 9999) { if ((conditionUnitNumFrom > avgUnitNumForPassenger) || (conditionUnitNumTo < avgUnitNumForPassenger)) isPass = false; }else { if (conditionUnitNumFrom > avgUnitNumForPassenger) isPass = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8164/buggy-version/src.main.java.CS3343.AirlineTicketOrdering.Baggage.BaggageFeeCalculator.java", "BodyUseAPI": [], "Fixed commit": "c5bed9a9636a45b337aa40a2fa2de5d1db5154a4", "Url": "https://api.github.com/repos/kitho/CS3343", "Date": "2014-11-15T07:08:07Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Float>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (conditionUnitNumTo < 9999) { if ((conditionUnitNumFrom > avgUnitNum) || (conditionUnitNumTo < avgUnitNum)) isPass = false; }else { if (conditionUnitNumFrom > avgUnitNum) isPass = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8164/buggy-version/src.main.java.CS3343.AirlineTicketOrdering.Baggage.BaggageFeeCalculator.java", "BodyUseAPI": [], "Fixed commit": "c5bed9a9636a45b337aa40a2fa2de5d1db5154a4", "Url": "https://api.github.com/repos/kitho/CS3343", "Date": "2014-11-15T07:08:07Z"},
{"Line": "=>3823", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Exception.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (errorMessage == null) { errorMessage = e.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5061/buggy-version/restful.src.main.java.org.cloudifysource.rest.controllers.ServiceController.java", "BodyUseAPI": [], "Fixed commit": "f0840ef28aa7d14874974211cd1c0fa86585387b", "Url": "https://api.github.com/repos/CloudifySource/cloudify", "Date": "2012-11-27T15:44:33Z"},
{"Line": "=>4003", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.IOException.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (errorMessage == null) { errorMessage = e.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5061/buggy-version/restful.src.main.java.org.cloudifysource.rest.controllers.ServiceController.java", "BodyUseAPI": [], "Fixed commit": "f0840ef28aa7d14874974211cd1c0fa86585387b", "Url": "https://api.github.com/repos/CloudifySource/cloudify", "Date": "2012-11-27T15:44:33Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((s.getStartTime().charAt(10)) == 'T') formatter = new java.text.SimpleDateFormat(\"yyyy-MM-dd'T'hh:mm:ss\"); else formatter = new java.text.SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4603/buggy-version/Android.src.edu.sjsu.cinequest.CinequestActivity.java", "BodyUseAPI": [], "Fixed commit": "0ab20b8f479a660b0db5f6d0584346346db31200", "Url": "https://api.github.com/repos/Sravan2j/Cinequest-Android", "Date": "2013-11-13T21:18:25Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((allTags.size()) == 0) allTags.add(\"all\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6354/buggy-version/src.main.java.fetcher.controller.MainController.java", "BodyUseAPI": ["javafx.collections.ObservableList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "4acd22046334713587130748cd6e0dd635cb0dab", "Url": "https://api.github.com/repos/arocketman/URL-pad", "Date": "2014-11-01T10:29:55Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<ZMQ.Socket, org.zeromq.ZDispatcher.SocketDispatcher>.remove(ZMQ.Socket)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (removedDispatcher == null) { throw new java.lang.IllegalArgumentException(\"This socket doesn't have a message handler\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6500/buggy-version/src.org.zeromq.ZDispatcher.java", "BodyUseAPI": [], "Fixed commit": "e72f6dd7d8ae91f25a604ad365f8b07a258c2b53", "Url": "https://api.github.com/repos/zeromq/jzmq", "Date": "2011-12-16T18:49:37Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ids == null) || ((ids.size()) <= 0)) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/628/buggy-version/shop.catalog.src.main.java.org.mayocat.shop.catalog.store.jdbi.DBICollectionStore.java", "BodyUseAPI": [], "Fixed commit": "7e849751976eb32017ffb27becffab720d4bb90b", "Url": "https://api.github.com/repos/mayocat/mayocat-shop", "Date": "2014-04-26T15:39:04Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ids == null) || ((ids.size()) <= 0)) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/628/buggy-version/shop.catalog.src.main.java.org.mayocat.shop.catalog.store.jdbi.DBICollectionStore.java", "BodyUseAPI": [], "Fixed commit": "7e849751976eb32017ffb27becffab720d4bb90b", "Url": "https://api.github.com/repos/mayocat/mayocat-shop", "Date": "2014-04-26T15:39:04Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v == (link_button)) startActivity(new android.content.Intent(this, linked.main.BusinessListActivity.class));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7747/buggy-version/main.app.src.main.java.linked.main.UserMenu.java", "BodyUseAPI": [], "Fixed commit": "9d40912b630bff57d8ae7cccba6386702887fc47", "Url": "https://api.github.com/repos/gener1k/Linked", "Date": "2017-03-31T05:11:54Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (buildResult != null) { result = result.replaceAll(\"\\\\$BUILD_RESULT\", buildResult.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/403/buggy-version/src.main.java.jenkins.plugins.mqttnotification.MqttNotifier.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,buildResult.toString())", "hudson.model.Result.toString()"], "Fixed commit": "f15aec9f1f390e5f25e24207a5bd037a13e7e14e", "Url": "https://api.github.com/repos/mhuin/mqtt-notification-plugin", "Date": "2017-02-12T21:04:49Z"},
{"Line": "=>2392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bitmapImage != null) { if (orientation != 0) { android.graphics.Matrix matrix = new android.graphics.Matrix(); matrix.setRotate(((float) (orientation)), ((bitmapImage.getWidth()) / 2), ((bitmapImage.getHeight()) / 2)); bitmapImage = android.graphics.Bitmap.createBitmap(bitmapImage, 0, 0, bitmapImage.getWidth(), bitmapImage.getHeight(), matrix, true); } if (bitmapImage != null) imageView.setImageBitmap(org.inaturalist.android.ImageUtils.getRoundedCornerBitmap(org.inaturalist.android.ImageUtils.centerCropBitmap(bitmapImage))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2416/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.ObservationEditor.java", "BodyUseAPI": ["android.graphics.Bitmap.getWidth()", "android.graphics.Matrix.setRotate(int,((bitmapImage.getWidth()) / 2),((bitmapImage.getHeight()) / 2))", "android.graphics.Bitmap.getWidth()", "android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.createBitmap(android.graphics.Bitmap,int,int,bitmapImage.getWidth(),bitmapImage.getHeight(),android.graphics.Matrix,boolean)", "android.graphics.Bitmap.getHeight()"], "Fixed commit": "4407a7c7f6195a9767db4855210c501fa6baea5b", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2016-09-25T23:26:10Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (file != null) { java.awt.Image img = javax.imageio.ImageIO.read(file); img = img.getScaledInstance(overlayWidth, overlayWidth, java.awt.Image.SCALE_SMOOTH); compassOverlay.createGraphics().drawImage(img, 0, 0, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1283/buggy-version/src.me.drton.jmavsim.Visualizer3D.java", "BodyUseAPI": [], "Fixed commit": "2585584475c8a6f3dff76ddd5641cc9b9abbbbe8", "Url": "https://api.github.com/repos/PX4/jMAVSim", "Date": "2016-04-04T06:36:47Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entity.Path.getListOfNodes(java.util.LinkedList<database.objects.Edge>,this.waypoints.get((segmentIndex++)))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(nodes.getLast().getNodeType().equals(NodeType.HALL))) directionSegment.add((((entity.SystemSettings.getInstance().getResourceBundle().getString(\"my.end\")) + (nodes.getLast().getLongName())) + \".\")); else directionSegment.add(((entity.SystemSettings.getInstance().getResourceBundle().getString(\"my.endHall\")) + \".\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5706/buggy-version/KioskApplication.src.main.java.entity.Path.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.add((((entity.SystemSettings.getInstance().getResourceBundle().getString(\"my.end\")) + (nodes.getLast().getLongName())) + \".\"))", "java.util.LinkedList<database.objects.Node>.getLast()", "nodes.getLast().getLongName()"], "Fixed commit": "31d8884f03284bb3132e064152f43a5fbd939497", "Url": "https://api.github.com/repos/CS3733-Team-I/CS3733", "Date": "2017-12-06T16:04:39Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cursor2.moveToFirst()) { while (cursor2.moveToNext()) { com.tasking.TeamMember employee = ((com.tasking.TeamMember) (this.getTeamMember(cursor2.getString(0)))); assignees.add(employee); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8726/buggy-version/app.src.main.java.com.tasking.TaskDAO.java", "BodyUseAPI": ["com.tasking.TaskDAO.getTeamMember(cursor2.getString(0))", "android.database.Cursor.getString(int)", "android.database.Cursor.moveToNext()"], "Fixed commit": "e8849c5ee95ec094e410909c3552d04633a5a441", "Url": "https://api.github.com/repos/DassiShenkar/TasKing", "Date": "2016-03-01T05:36:46Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nik7.upgcraft.tileentities.UpgCtileentityFluidTank.getBlockState(com.nik7.upgcraft.tileentities.UpgCtileentityFluidTank)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (blockState != null) worldObj.notifyBlockUpdate(pos, blockState, blockState, 3);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3682/buggy-version/src.main.java.com.nik7.upgcraft.tileentities.UpgCtileentityFluidTank.java", "BodyUseAPI": ["com.nik7.upgcraft.tileentities.UpgCtileentityFluidTank.notifyBlockUpdate(com.nik7.upgcraft.tileentities.UpgCtileentityFluidTank,net.minecraft.block.state.IBlockState,net.minecraft.block.state.IBlockState,int)"], "Fixed commit": "26943c89cb80cf2c50a33b050c3e3ab2c9ff338f", "Url": "https://api.github.com/repos/nik7007/UpgradeCraft", "Date": "2016-04-26T22:24:31Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bits < 32) { result &= (1 << bits) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8753/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.Pcg64Random.java", "BodyUseAPI": [], "Fixed commit": "6e1824404e75390ea922b7aabaea7e16142b51e9", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-10-26T22:23:09Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location) == null) { return (name) + \" who is nowhere\"; }else { return ((name) + \" at \") + (location.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8643/buggy-version/src.card.Character.java", "BodyUseAPI": [], "Fixed commit": "ec833821faa101bfcc1d18a7030058fb0fd7bb04", "Url": "https://api.github.com/repos/scwe/cluedo", "Date": "2013-08-10T12:39:59Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(symbol)) { return jsonObject.putString(\"error\", \"symbol should never be empty or null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/335/buggy-version/src.main.java.org.stocker.services.StockDBClientImpl.java", "BodyUseAPI": [], "Fixed commit": "9bd325295c3089b83374075f687e710adaea00e6", "Url": "https://api.github.com/repos/raincoatforever/msmwServer", "Date": "2015-11-01T20:40:23Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compressed) == null) { throw new java.lang.RuntimeException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/461/buggy-version/core.src.main.java.io.undertow.conduits.InflatingStreamSourceConduit.java", "BodyUseAPI": [], "Fixed commit": "f33675bab48a6a433a37a1d7f0f88dd81650a15c", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2016-12-07T02:06:33Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (val.isObject()) { if (val.asObject().iterator().hasNext()) { return new com.github.wnameless.json.flattener.JsonFlattener(val.toString()).withFlattenMode(flattenMode).flattenAsMap(); }else { return newJsonifyLinkedHashMap(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/972/buggy-version/src.main.java.com.github.wnameless.json.flattener.JsonFlattener.java", "BodyUseAPI": ["com.github.wnameless.json.flattener.JsonFlattener.withFlattenMode(com.github.wnameless.json.flattener.FlattenMode)", "com.eclipsesource.json.JsonValue.asObject()", "com.github.wnameless.json.flattener.JsonFlattener.flattenAsMap()", "val.asObject().iterator().hasNext()", "val.asObject().iterator()", "com.eclipsesource.json.JsonValue.toString()"], "Fixed commit": "0aa3d63fa9b97e5c26d64f96755e2af511bceb76", "Url": "https://api.github.com/repos/wnameless/json-flattener", "Date": "2016-07-19T22:39:55Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8048/buggy-version/src.main.java.com.frcparts.Part.java", "BodyUseAPI": [], "Fixed commit": "ebddc06cab7f91716e7ddd4dd46e8ce64e134f76", "Url": "https://api.github.com/repos/jgermita/frc-parts", "Date": "2017-11-26T09:19:30Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((length) > (RandomizedQueue.DEFAULT_CAPACITY)) && ((length) < ((queue.length) * (RandomizedQueue.SCALE_DOWN_FACTOR)))) { resize(RandomizedQueue.SCALE_DOWN_FACTOR); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5377/buggy-version/queues.src.main.java.RandomizedQueue.java", "BodyUseAPI": [], "Fixed commit": "a66b57e99064da71aecf60877b9de5841840dea3", "Url": "https://api.github.com/repos/ffdYKJisu/analysis-of-algorithms-i", "Date": "2013-09-12T02:52:55Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size()) == 0) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5377/buggy-version/queues.src.main.java.RandomizedQueue.java", "BodyUseAPI": [], "Fixed commit": "a66b57e99064da71aecf60877b9de5841840dea3", "Url": "https://api.github.com/repos/ffdYKJisu/analysis-of-algorithms-i", "Date": "2013-09-12T02:52:55Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (randIndex == (headIndex)) { (headIndex)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5377/buggy-version/queues.src.main.java.RandomizedQueue.java", "BodyUseAPI": [], "Fixed commit": "a66b57e99064da71aecf60877b9de5841840dea3", "Url": "https://api.github.com/repos/ffdYKJisu/analysis-of-algorithms-i", "Date": "2013-09-12T02:52:55Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (randIndex == (tailIndex)) { (tailIndex)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5377/buggy-version/queues.src.main.java.RandomizedQueue.java", "BodyUseAPI": [], "Fixed commit": "a66b57e99064da71aecf60877b9de5841840dea3", "Url": "https://api.github.com/repos/ffdYKJisu/analysis-of-algorithms-i", "Date": "2013-09-12T02:52:55Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInsert) db.insert(\"gameState\", null, values); else db.update(\"gameState\", values, \"_id = 0\", null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7869/buggy-version/src.de.palmen_it.android.games.aconn4.DataBase.java", "BodyUseAPI": [], "Fixed commit": "324d28abfcbe0a96c9bfb7f1c7de6d0301fa11ef", "Url": "https://api.github.com/repos/Zirias/android_game_aconn4", "Date": "2012-01-04T08:50:20Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInsert) values.put(\"_id\", 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7869/buggy-version/src.de.palmen_it.android.games.aconn4.DataBase.java", "BodyUseAPI": [], "Fixed commit": "324d28abfcbe0a96c9bfb7f1c7de6d0301fa11ef", "Url": "https://api.github.com/repos/Zirias/android_game_aconn4", "Date": "2012-01-04T08:50:20Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (axisService != null) { isAdminService = ((axisService.getParameter(org.apache.synapse.transport.passthru.util.RelaySecuirtyMessageBuilderDispatchandler.ADMIN_SERVICE)) != null) ? java.lang.Boolean.TRUE.toString().equals(axisService.getParameter(org.apache.synapse.transport.passthru.util.RelaySecuirtyMessageBuilderDispatchandler.ADMIN_SERVICE).getValue()) : java.lang.Boolean.FALSE; if (!isAdminService) { org.apache.axis2.description.Parameter parameter = axisService.getParameter(org.apache.synapse.transport.passthru.util.RelaySecuirtyMessageBuilderDispatchandler.SERVICE_TYPE); if (parameter != null) { if (!(parameter.getValue().equals(org.apache.synapse.transport.passthru.util.RelaySecuirtyMessageBuilderDispatchandler.PROXY))) { build(messageContext); } }else { build(messageContext); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6999/buggy-version/modules.transports.core.nhttp.src.main.java.org.apache.synapse.transport.passthru.util.RelaySecuirtyMessageBuilderDispatchandler.java", "BodyUseAPI": ["org.apache.axis2.description.AxisService.getParameter(java.lang.String)", "org.apache.axis2.description.AxisService.getParameter(java.lang.String)", "java.lang.String.equals(axisService.getParameter(org.apache.synapse.transport.passthru.util.RelaySecuirtyMessageBuilderDispatchandler.ADMIN_SERVICE).getValue())", "axisService.getParameter(org.apache.synapse.transport.passthru.util.RelaySecuirtyMessageBuilderDispatchandler.ADMIN_SERVICE).getValue()", "org.apache.axis2.description.AxisService.getParameter(java.lang.String)"], "Fixed commit": "5ca8fb2c20efe1389e4d278588a48ae0b0b5c8d9", "Url": "https://api.github.com/repos/Subasinghe/wso2-synapse-1", "Date": "2017-03-10T06:25:23Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.aartikov.alligator.internal.ScreenClassUtils.getPreviousScreenClass(android.app.Activity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (previousScreenClass != null) { me.aartikov.alligator.internal.ScreenClassUtils.putPreviousScreenClass(intent, previousScreenClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3827/buggy-version/alligator.src.main.java.me.aartikov.alligator.commands.ReplaceCommand.java", "BodyUseAPI": ["me.aartikov.alligator.internal.ScreenClassUtils.putPreviousScreenClass(android.content.Intent,java.lang.Class<? extends me.aartikov.alligator.Screen>)"], "Fixed commit": "517c3664ccfd7970fc1b8c6af4343adca3cc8a61", "Url": "https://api.github.com/repos/aartikov/Alligator", "Date": "2017-05-09T11:27:50Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.aartikov.alligator.internal.ScreenClassUtils.getScreenClass(android.app.Activity,me.aartikov.alligator.NavigationFactory)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (previousScreenClass != null) { me.aartikov.alligator.internal.ScreenClassUtils.putPreviousScreenClass(intent, previousScreenClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3827/buggy-version/alligator.src.main.java.me.aartikov.alligator.commands.ForwardCommand.java", "BodyUseAPI": ["me.aartikov.alligator.internal.ScreenClassUtils.putPreviousScreenClass(android.content.Intent,java.lang.Class<? extends me.aartikov.alligator.Screen>)"], "Fixed commit": "517c3664ccfd7970fc1b8c6af4343adca3cc8a61", "Url": "https://api.github.com/repos/aartikov/Alligator", "Date": "2017-05-09T11:27:50Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mCursor.getCount()) == 0) prepareIndexer(mCursor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/196/buggy-version/src.com.anddev.adapters.AbstractSectionedCursorAdapter.java", "BodyUseAPI": ["com.anddev.adapters.AbstractSectionedCursorAdapter.prepareIndexer(com.anddev.adapters.AbstractSectionedCursorAdapter)"], "Fixed commit": "6f72aee848688d6a8d5a2adee0ccfc88f80ff396", "Url": "https://api.github.com/repos/mvarnagiris/AndDevUtils", "Date": "2013-03-10T18:01:13Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getViewName()) == null) { model.setViewName(framework.base.utils.PublicCacheUtil.getString(CommonPageParam.GLOBAL_PAGE_RESULT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8582/buggy-version/src.framework.base.controller.BaseController.java", "BodyUseAPI": ["org.springframework.web.servlet.ModelAndView.setViewName(framework.base.utils.PublicCacheUtil.getString(CommonPageParam.GLOBAL_PAGE_RESULT))"], "Fixed commit": "73723746be295a684b7a3a8b21943ba4a0975cc5", "Url": "https://api.github.com/repos/hjshiwbd/framework", "Date": "2014-07-14T14:21:03Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((loadBalancer.getPort()) != null) && ((loadBalancer.getPort()) != 80)) { LOG.error(\"Cannot change port on load balancers with HTTPS Redirect enabled.\"); throw new org.openstack.atlas.service.domain.services.impl.BadRequestException(\"Cannot change port on load balancers with HTTPS Redirect enabled.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5658/buggy-version/persistence.src.main.java.org.openstack.atlas.service.domain.services.impl.LoadBalancerServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "52703fa2517dae8aa881780cd1baf10b649c3888", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2013-10-21T16:56:47Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.predicate()) != null) { resource = ai.grakn.graql.Graql.var().value(visitPredicate(ctx.predicate())); }else if ((ctx.VARIABLE()) != null) { resource = ai.grakn.graql.Graql.var(getVariable(ctx.VARIABLE())); }else { resource = ai.grakn.graql.Graql.var(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5479/buggy-version/grakn-graql.src.main.java.ai.grakn.graql.internal.parser.QueryVisitor.java", "BodyUseAPI": ["GraqlParser.PropHasContext.VARIABLE()", "ai.grakn.graql.internal.parser.QueryVisitor.visitPredicate(ctx.predicate())", "ai.grakn.graql.internal.parser.QueryVisitor.getVariable(ctx.VARIABLE())", "ai.grakn.graql.Graql.var(java.lang.String)", "GraqlParser.PropHasContext.predicate()", "ai.grakn.graql.Graql.var().value(ai.grakn.graql.ValuePredicate)", "GraqlParser.PropHasContext.VARIABLE()"], "Fixed commit": "5acd1c07b3107b51ec14b5a01f6854ad2b81e27d", "Url": "https://api.github.com/repos/graknlabs/grakn", "Date": "2017-01-26T19:37:53Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.setValues) != null) { java.util.Map<java.lang.String, java.lang.String> setValuesForThisColGroup = this.setValues.get(colGroup); if (setValuesForThisColGroup == null) { colKeyPiece.append(dataElement.getAttribute(i, colGroup)); }else { java.lang.String replacementValue = setValuesForThisColGroup.get(dataElement.getAttribute(i, colGroup)); colKeyPiece.append((replacementValue == null ? \"Other\" : replacementValue)); } }else { colKeyPiece.append(dataElement.getAttribute(i, colGroup)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3868/buggy-version/src.main.java.com.rc.dataview.DataElementDataView.java", "BodyUseAPI": [], "Fixed commit": "8234db7db826353ffb70dd4231b911f899c4a6e4", "Url": "https://api.github.com/repos/rcorbish/LiveAggregator", "Date": "2017-05-09T22:36:56Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (setValuesForThisRowGroup == null) { elementKey.append(dataElement.getAttribute(i, rowGroup)); }else { java.lang.String replacementValue = setValuesForThisRowGroup.get(dataElement.getAttribute(i, rowGroup)); elementKey.append((replacementValue == null ? \"Other\" : replacementValue)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3868/buggy-version/src.main.java.com.rc.dataview.DataElementDataView.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(dataElement.getAttribute(i, rowGroup))"], "Fixed commit": "8234db7db826353ffb70dd4231b911f899c4a6e4", "Url": "https://api.github.com/repos/rcorbish/LiveAggregator", "Date": "2017-05-09T22:36:56Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.cytoscape.ding.impl.APPS_MENU.equals(title)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1904/buggy-version/ding-impl.ding-presentation-impl.src.main.java.org.cytoscape.ding.impl.PopupMenuHelper.java", "BodyUseAPI": [], "Fixed commit": "8ec95dd08ab8c1f8042bde9416366b36f842f754", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2017-10-02T20:36:50Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.cytoscape.ding.impl.APPS_MENU.equals(title)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1904/buggy-version/ding-impl.ding-presentation-impl.src.main.java.org.cytoscape.ding.impl.PopupMenuHelper.java", "BodyUseAPI": [], "Fixed commit": "8ec95dd08ab8c1f8042bde9416366b36f842f754", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2017-10-02T20:36:50Z"},
{"Line": "=>831", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!keysAreEqual) { currentKeys = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8165/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.exec.GroupByOperator.java", "BodyUseAPI": [], "Fixed commit": "05afc926c4cb6ebcf6014008931167835f635798", "Url": "https://api.github.com/repos/yhuai/hive", "Date": "2012-09-18T03:07:09Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getInputs().size()) == 0) { rewriteGeneric(p); }else { throw org.apache.calcite.util.Util.newInternal((((\"no '\" + visitMethodName) + \"' method found for class \") + (p.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7571/buggy-version/core.src.main.java.org.apache.calcite.sql2rel.RelStructuredTypeFlattener.java", "BodyUseAPI": ["p.getClass().getName()", "org.apache.calcite.util.Util.newInternal((((\"no '\" + visitMethodName) + \"' method found for class \") + (p.getClass().getName())))", "org.apache.calcite.rel.RelNode.getClass()", "org.apache.calcite.sql2rel.RelStructuredTypeFlattener.RewriteRelVisitor.rewriteGeneric(org.apache.calcite.rel.RelNode)"], "Fixed commit": "2087091ccea0d68030edeb2f23506d72fdb10604", "Url": "https://api.github.com/repos/julienledem/calcite", "Date": "2015-11-13T20:13:21Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((NotificationUtil.savedIntent) != null) com.ominous.batterynotification.NotificationUtil.updateBatteryNotification(this.getActivity(), NotificationUtil.savedIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8756/buggy-version/app.src.main.java.com.ominous.batterynotification.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "95a6f10766ddcf937348ef7864b909137f1805df", "Url": "https://api.github.com/repos/TylerWilliamson/batterynotification", "Date": "2016-06-29T12:07:46Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["peopleTableView.getSelectionModel().getSelectedIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (selectionIndex >= 0) { list.remove(selectionIndex); peopleTableView.getSelectionModel().clearSelection(); }else { java.lang.System.out.println(\"Error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2562/buggy-version/src.Application.SmartDorm.UI.Manage.TenantManageController.java", "BodyUseAPI": ["javafx.collections.ObservableList<Application.SmartDorm.UI.Manage.PeopleExData>.remove(int)"], "Fixed commit": "b62c7598514f8db13a8e60da11ef1858bfa78b62", "Url": "https://api.github.com/repos/SE60-SmartDorm/SmartDorm", "Date": "2017-11-12T20:34:41Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PropertySpec.MetaInfo.excludedFields(act.util.ActContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (excluded.isEmpty()) { if (outputs.isEmpty()) { propertyFilter = null; }else { propertyFilter.addIncludes(outputs); if (act.util.FastJsonPropertyPreFilter.hasPattern(outputs)) { propertyFilter.setFullPaths(context.app().service(act.data.DataPropertyRepository.class).propertyListOf(result.getClass())); } } }else { propertyFilter.addExcludes(excluded); if (act.util.FastJsonPropertyPreFilter.hasPattern(excluded)) { propertyFilter.setFullPaths(context.app().service(act.data.DataPropertyRepository.class).propertyListOf(result.getClass())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/997/buggy-version/src.main.java.act.cli.view.CliView.java", "BodyUseAPI": ["act.util.FastJsonPropertyPreFilter.hasPattern(java.util.Set<java.lang.String>)", "act.util.FastJsonPropertyPreFilter.addExcludes(java.util.Set<java.lang.String>)"], "Fixed commit": "f545c4e8af62ed0e5573d99481cff61fc3d1e79b", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2016-01-11T03:33:37Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it.instantapps.bakingapp.utility.NetworkState.isOnline(mContext)) { v.setClickable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1649/buggy-version/app.src.main.java.it.instantapps.bakingapp.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a6455e21c69d8f4dc323b27679416825964c6e58", "Url": "https://api.github.com/repos/benepell/BakingApp", "Date": "2017-11-03T13:33:08Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getDataFolder().exists())) { this.getDataFolder().mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1141/buggy-version/src.Ne0nx3r0.SignShop.SignShop.java", "BodyUseAPI": [], "Fixed commit": "13d054c0eb7bb13e24941cecb3a542f39814d13b", "Url": "https://api.github.com/repos/Ne0nx3r0/SignShops", "Date": "2011-06-19T21:49:54Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bean == null) { org.resthub.common.util.PostInitializerRunner.LOGGER.warn(\"Bean name {} return null, so we don't try to get matching bean\", beanName); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8390/buggy-version/resthub-common.src.main.java.org.resthub.common.util.PostInitializerRunner.java", "BodyUseAPI": [], "Fixed commit": "e241a0b826589cf31db28435d2e819a54ea30a06", "Url": "https://api.github.com/repos/resthub/resthub-spring-stack", "Date": "2013-10-15T13:13:10Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (movement == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6833/buggy-version/src.main.java.zemfi.de.vertaktoid.Facsimile.java", "BodyUseAPI": [], "Fixed commit": "14345556087e8374512fab5993a9b25ee6c80b4d", "Url": "https://api.github.com/repos/cemfi/vertaktoid", "Date": "2017-03-06T22:49:07Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((path == null) || (path.isEmpty())) { this.path = \"/\"; }else { this.path = path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3937/buggy-version/src.main.java.org.commonwl.view.github.GithubDetails.java", "BodyUseAPI": [], "Fixed commit": "bc49f56ada121545c2d4682ed5a358defabedfcc", "Url": "https://api.github.com/repos/common-workflow-language/cwlviewer", "Date": "2017-03-13T14:59:22Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (candidate.isEmpty()) { continue; }else { if (map.containsKey(candidate)) { this.setCandidateListError(true); this.setCandidateListErrorMessage(\"Duplicate candidates names detected\"); valid &= false; status += \"Duplicate candidates names detected\"; break; }else { map.put(candidate, candidate); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5446/buggy-version/src.dto.ElectionDto.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.containsKey(java.lang.String)"], "Fixed commit": "b9d591eccd738acc6d2e74a89c295deaa8e569b7", "Url": "https://api.github.com/repos/sfrink/CERTUS-Common", "Date": "2014-04-24T03:27:58Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!autocommit) { source.setTxInterrupt(\"Distributed transaction is disabled!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3269/buggy-version/src.main.java.io.mycat.server.NonBlockingSession.java", "BodyUseAPI": [], "Fixed commit": "d4ffc2cdb3ba7b52658cd2158c9b6dc0061321ea", "Url": "https://api.github.com/repos/ongo360/Mycat-Server", "Date": "2017-03-21T17:57:13Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.tudelft.granula.util.json.JsonUtil.fromJson(nl.tudelft.granula.util.FileUtil.readFile(java.nio.file.Paths.get(driverLogPath)),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (execution.getPlatform().toLowerCase().contains(\"graphx\")) { granulaExecutor.setEnvEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3379/buggy-version/graphalytics-plugins-granula.src.main.java.nl.tudelft.graphalytics.granula.FailedJobArchiver.java", "BodyUseAPI": [], "Fixed commit": "cde34959591e3a1921873c623ef11316cc661cab", "Url": "https://api.github.com/repos/ldbc/ldbc_graphalytics", "Date": "2016-10-11T10:27:34Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (relationName.equals(\"Receipt\")) { view.SearchPanel.query = \"SELECT \"; for (int i = 0; i < (tempList.size()); i++) { java.lang.String temp = tempList.get(i); view.SearchPanel.query += (\"A.\" + temp) + \", \"; } view.SearchPanel.query += priceQuery; for (javax.swing.JTextField conditionField : view.SearchPanel.conditionFields) { if (!(conditionField.getText().equals(\"\"))) { view.SearchPanel.query += \" WHERE \"; break; } } view.SearchPanel.query += view.SearchPanel.conditionalClause; table.setQuery(view.SearchPanel.query); }else { table.setQuery(view.SearchPanel.query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6543/buggy-version/HomeDeliveryFood.src.view.SearchPanel.java", "BodyUseAPI": [], "Fixed commit": "f462b6c0d8fd47ba53a8967ba4bc6e7dc7472d94", "Url": "https://api.github.com/repos/Creat10n/PDM_Project", "Date": "2017-05-06T01:08:23Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mygdx.game.Player.getRow()", "com.mygdx.game.Player.getColumn()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (board.isEmptyArea(row, column)) { board.update(row, column, player.getCurrentItem()); player.randomItem(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5037/buggy-version/core.src.com.mygdx.game.GameScreen.java", "BodyUseAPI": ["com.mygdx.game.Board.update(int,int,player.getCurrentItem())"], "Fixed commit": "6aa152641d101066709d9901458cac3a419b5375", "Url": "https://api.github.com/repos/komcal/oop-triple-frog", "Date": "2016-10-31T12:19:16Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((classEntity.getId()) == 0) classEntity.setId(scope.nextClassIndex());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1836/buggy-version/src.php.runtime.ext.support.Extension.java", "BodyUseAPI": ["php.runtime.reflection.ClassEntity.setId(scope.nextClassIndex())"], "Fixed commit": "b5f98019218548697e8b1c2da9da19e484428f48", "Url": "https://api.github.com/repos/dim-s/jphp", "Date": "2014-02-05T19:24:21Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((classes.put(classEntity.getLowerName(), classEntity)) != null) throw new java.lang.RuntimeException((\"Class already registered - \" + (clazz.getName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1836/buggy-version/src.php.runtime.ext.support.Extension.java", "BodyUseAPI": [], "Fixed commit": "b5f98019218548697e8b1c2da9da19e484428f48", "Url": "https://api.github.com/repos/dim-s/jphp", "Date": "2014-02-05T19:24:21Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()", "java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (length1 != length2) output.append(\"\\n[ERROR]: Player inputs do not match in length!\"); else output.append(\"\\n[ERROR]: Simulation is not ready! Check inputs.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4683/buggy-version/Flippy.src.flippy.Frame.java", "BodyUseAPI": [], "Fixed commit": "a765f5c59415eaaad0a101520f2c1e201e3d553f", "Url": "https://api.github.com/repos/MauriceAjluni/Flippy", "Date": "2016-11-17T06:25:18Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pandemic.game.board.parts.tokens.Cities.getCityByCoord(j2a.Factory.Point.newPoint(x, y))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (clickedCity != null) { if ((card.getCity().equals(clickedCity)) || (card.getCity().equals(roles.getCurrentPlayer().getCity()))) { deck.returnCard(card); selected = null; roles.getCurrentPlayer().flyToTheCity(cities.getCityByCoord(j2a.Factory.Point.newPoint(x, y))); drawBoard(); } return; }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7607/buggy-version/pandemic-lib.src.pandemic.game.board.Board.java", "BodyUseAPI": ["card.getCity().equals(pandemic.game.board.parts.tokens.City)"], "Fixed commit": "2fd96818a2841f0e4f4ae97adf7fc5e9e3fc4950", "Url": "https://api.github.com/repos/judovana/pandemic", "Date": "2016-12-27T10:54:46Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paymentDetails.hasMemo()) return paymentDetails.getMemo(); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8385/buggy-version/core.src.main.java.com.google.bitcoin.protocols.payments.PaymentSession.java", "BodyUseAPI": ["Protos.PaymentDetails.getMemo()"], "Fixed commit": "5e7be65fed94f6584fc48474a1c645927d745223", "Url": "https://api.github.com/repos/schildbach/bitcoinj", "Date": "2014-02-13T19:21:36Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (image != null) { java.io.ByteArrayInputStream imageStream = new java.io.ByteArrayInputStream(image); decodedImage = android.graphics.BitmapFactory.decodeStream(imageStream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2582/buggy-version/app.src.main.java.com.example.admin.personallibrarycatalogue.Util.java", "BodyUseAPI": [], "Fixed commit": "1f15448fa13795ef70562fcc203999ce12a7ff1d", "Url": "https://api.github.com/repos/MikhailSkiyAtWork/Lab_55", "Date": "2015-07-13T09:48:23Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.graphics.drawable.BitmapDrawable) (coverView_.getDrawable())).getBitmap()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (source != null) { android.graphics.Bitmap image = android.graphics.Bitmap.createScaledBitmap(source, WIDTH, HEIGHT, true); cover = com.example.admin.personallibrarycatalogue.Util.getBytesFromBitmap(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2582/buggy-version/app.src.main.java.com.example.admin.personallibrarycatalogue.AddBookActivityFragment.java", "BodyUseAPI": ["android.graphics.Bitmap.createScaledBitmap(android.graphics.Bitmap,int,int,boolean)"], "Fixed commit": "1f15448fa13795ef70562fcc203999ce12a7ff1d", "Url": "https://api.github.com/repos/MikhailSkiyAtWork/Lab_55", "Date": "2015-07-13T09:48:23Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (started) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5815/buggy-version/modules.http.src.main.java.org.mule.module.http.internal.request.DefaultHttpRequesterConfig.java", "BodyUseAPI": [], "Fixed commit": "71f6fb55e420804f32dda96b588266ce42b0938e", "Url": "https://api.github.com/repos/mulesoft/mule", "Date": "2016-09-07T19:08:00Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (lexicalHandler != null) { lexicalHandler_ = lexicalHandler; }else if (contentHandler instanceof org.xml.sax.ext.LexicalHandler) { lexicalHandler = ((org.xml.sax.ext.LexicalHandler) (contentHandler)); }else { lexicalHandler = new org.xml.sax.ext.LexicalHandler() { @java.lang.Override public void startEntity(java.lang.String name) throws org.xml.sax.SAXException { } @java.lang.Override public void startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) throws org.xml.sax.SAXException { } @java.lang.Override public void startCDATA() throws org.xml.sax.SAXException { } @java.lang.Override public void endEntity(java.lang.String name) throws org.xml.sax.SAXException { } @java.lang.Override public void endDTD() throws org.xml.sax.SAXException { } @java.lang.Override public void endCDATA() throws org.xml.sax.SAXException { } @java.lang.Override public void comment(char[] ch, int start, int length) throws org.xml.sax.SAXException { } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3458/buggy-version/src.net.furfurylic.chionographis.All.java", "BodyUseAPI": [], "Fixed commit": "66e16930652181a6e96e09bec47233f35a28b5b5", "Url": "https://api.github.com/repos/furfurylic/chionographis", "Date": "2016-03-13T07:01:37Z"},
{"Line": "=>959", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(backLocation)) { return backLocation; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6709/buggy-version/rice-middleware.kns.src.main.java.org.kuali.rice.kns.util.WebUtils.java", "BodyUseAPI": [], "Fixed commit": "6c7e6eababd891fad2a735215b3690cd7868891b", "Url": "https://api.github.com/repos/jwbennet/rice", "Date": "2016-03-11T04:34:23Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (area == 0) { return java.math.BigDecimal.ZERO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4911/buggy-version/src.main.java.ar.com.mercadolibre.planets.service.MathUtils.java", "BodyUseAPI": [], "Fixed commit": "4b30c2d9973460410663af388bede44ff0d18eb0", "Url": "https://api.github.com/repos/malico/planets", "Date": "2016-04-06T20:59:01Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isLost) == false) { pressNewGame(); rotate = new android.view.animation.RotateAnimation(0, 360, android.view.animation.Animation.RELATIVE_TO_SELF, 0.5F, android.view.animation.Animation.RELATIVE_TO_SELF, 0.5F); rotate.setDuration(1000); newGame.startAnimation(rotate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8999/buggy-version/app.src.main.java.com.example.hadar.minesweeper.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "dffe62ab7a898ffba2d5125ce588e6b3df974a5d", "Url": "https://api.github.com/repos/HadarPur/Minesweeper", "Date": "2017-11-05T21:32:21Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(element.getNode().getText().isEmpty())) holder.registerProblem(element, message, ProblemHighlightType.GENERIC_ERROR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2502/buggy-version/src.com.perl5.lang.perl.idea.inspections.PerlInspection.java", "BodyUseAPI": ["com.intellij.codeInspection.ProblemsHolder.registerProblem(com.intellij.psi.PsiElement,java.lang.String,ProblemHighlightType.GENERIC_ERROR)"], "Fixed commit": "6c372085cf62333103f44eb21f4b7a20a732a809", "Url": "https://api.github.com/repos/Camelcade/Perl5-IDEA", "Date": "2015-12-16T17:15:22Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(element.getNode().getText().isEmpty())) holder.registerProblem(element, message, ProblemHighlightType.GENERIC_ERROR_OR_WARNING);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2502/buggy-version/src.com.perl5.lang.perl.idea.inspections.PerlInspection.java", "BodyUseAPI": ["com.intellij.codeInspection.ProblemsHolder.registerProblem(com.intellij.psi.PsiElement,java.lang.String,ProblemHighlightType.GENERIC_ERROR_OR_WARNING)"], "Fixed commit": "6c372085cf62333103f44eb21f4b7a20a732a809", "Url": "https://api.github.com/repos/Camelcade/Perl5-IDEA", "Date": "2015-12-16T17:15:22Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(element.getNode().getText().isEmpty())) holder.registerProblem(element, message, ProblemHighlightType.LIKE_DEPRECATED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2502/buggy-version/src.com.perl5.lang.perl.idea.inspections.PerlInspection.java", "BodyUseAPI": ["com.intellij.codeInspection.ProblemsHolder.registerProblem(com.intellij.psi.PsiElement,java.lang.String,ProblemHighlightType.LIKE_DEPRECATED)"], "Fixed commit": "6c372085cf62333103f44eb21f4b7a20a732a809", "Url": "https://api.github.com/repos/Camelcade/Perl5-IDEA", "Date": "2015-12-16T17:15:22Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) == (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)) == (android.content.pm.PackageManager.PERMISSION_GRANTED))) { locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 8000, 10, locationService); loc = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3015/buggy-version/app.src.main.java.fr.upem.journal.activity.WeatherActivity.java", "BodyUseAPI": [], "Fixed commit": "da75d57df57e388706d49784a5406b2bc0d21bf4", "Url": "https://api.github.com/repos/mdamis/journal", "Date": "2016-03-13T14:23:49Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.sambadocumentsprovider.provider.SambaDocumentsProvider.toUri(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (uri.getPathSegments().isEmpty()) { try (final com.google.android.sambadocumentsprovider.cache.CacheResult result = mCache.get(uri)) { if ((result.getState()) == (com.google.android.sambadocumentsprovider.cache.CacheResult.CACHE_MISS)) { com.google.android.sambadocumentsprovider.document.DocumentMetadata metadata = com.google.android.sambadocumentsprovider.document.DocumentMetadata.createShare(uri); mCache.put(metadata); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/559/buggy-version/app.src.main.java.com.google.android.sambadocumentsprovider.provider.SambaDocumentsProvider.java", "BodyUseAPI": ["com.google.android.sambadocumentsprovider.document.DocumentMetadata.createShare(android.net.Uri)", "com.google.android.sambadocumentsprovider.cache.DocumentCache.get(android.net.Uri)"], "Fixed commit": "03722058715f96b9841dc659110fe2b9b5a37f3e", "Url": "https://api.github.com/repos/rthakohov/samba-documents-provider", "Date": "2017-07-26T00:22:17Z"},
{"Line": "=>1523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldData) { com.ibm.team.build.internal.hjplugin.RTCScm.LOGGER.warning(\"The job's config.xml has data stored in an older format, to migrate to the newer format resave the job's configuration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8422/buggy-version/com.ibm.team.build.hjplugin.src.main.java.com.ibm.team.build.internal.hjplugin.RTCScm.java", "BodyUseAPI": [], "Fixed commit": "63ccd24a92b44c3c350463e25bd579236221ae9d", "Url": "https://api.github.com/repos/jenkinsci/teamconcert-plugin", "Date": "2015-12-14T09:31:52Z"},
{"Line": "=>1516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((buildTypeStr) == null) && ((buildWorkspace) != null)) { buildTypeStr = com.ibm.team.build.internal.hjplugin.RTCScm.BUILD_WORKSPACE_TYPE; oldData = true; }else if (((buildTypeStr) == null) && ((buildDefinition) != null)) { buildTypeStr = com.ibm.team.build.internal.hjplugin.RTCScm.BUILD_DEFINITION_TYPE; oldData = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8422/buggy-version/com.ibm.team.build.hjplugin.src.main.java.com.ibm.team.build.internal.hjplugin.RTCScm.java", "BodyUseAPI": [], "Fixed commit": "63ccd24a92b44c3c350463e25bd579236221ae9d", "Url": "https://api.github.com/repos/jenkinsci/teamconcert-plugin", "Date": "2015-12-14T09:31:52Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 1) { if (args[0].equalsIgnoreCase(\"reload\")) { if ((sender.hasPermission(\"commandnpc.admin\")) || (sender.isOp())) { me.messageofdeath.CommandNPC.CommandNPC.getConfigX().reloadConfig(); net.citizensnpcs.api.util.Messaging.send(sender, \"Reloaded CommandNPC\"); return true; }else { net.citizensnpcs.api.util.Messaging.sendError(sender, \"You do not have permission for this!\"); } }else { net.citizensnpcs.api.util.Messaging.sendError(sender, \"Wrong Args. Use /commandnpc reload\"); } }else { net.citizensnpcs.api.util.Messaging.sendError(sender, \"Wrong Args. Use /commandnpc reload\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4818/buggy-version/src.me.messageofdeath.CommandNPC.commands.ReloadCommand.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "23f14c31494d8d2dcfb1cff6e0acfbaaba5fc2c9", "Url": "https://api.github.com/repos/messageofdeath/CommandNPC", "Date": "2017-05-06T11:06:49Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { boolean following = user.isFollowing(); com.mcPATHoke.fanfouapp.util.LogUtil.v(com.mcPATHoke.fanfouapp.fragment.ProfileFragment.TAG, (\"checkMenuAction() following=\" + following)); if ((followMemu) != null) { followMemu.setVisible((!following)); } if ((unfollowMenu) != null) { unfollowMenu.setVisible(following); } }else { if ((followMemu) != null) { followMemu.setVisible(false); } if ((unfollowMenu) != null) { unfollowMenu.setVisible(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1399/buggy-version/app.src.com.mcPATHoke.fanfouapp.fragment.ProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "89df870108049b6f0528e011f717d11c8bef80a5", "Url": "https://api.github.com/repos/mcPATHoke/circle", "Date": "2013-06-01T00:51:29Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<tw.com.maxkit.miniweb.bean.crm.Contact>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size > 0) { apiOut.setAction(\"getbyid_accname\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8033/buggy-version/miniweb.src.main.java.tw.com.maxkit.miniweb.business.CrmBusiness.java", "BodyUseAPI": [], "Fixed commit": "a3c7808478643c6099b81abf72b257997ad74d15", "Url": "https://api.github.com/repos/maxkitapp/miniweb", "Date": "2017-02-22T05:48:10Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<tw.com.maxkit.miniweb.bean.crm.Contact>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size > 0) { apiOut.setAction(\"getbyid_name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8033/buggy-version/miniweb.src.main.java.tw.com.maxkit.miniweb.business.CrmBusiness.java", "BodyUseAPI": [], "Fixed commit": "a3c7808478643c6099b81abf72b257997ad74d15", "Url": "https://api.github.com/repos/maxkitapp/miniweb", "Date": "2017-02-22T05:48:10Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.isNull) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2897/buggy-version/src.main.java.com.sangupta.nutz.Parser.java", "BodyUseAPI": [], "Fixed commit": "14363aeadcbd0a4a151c90a6e5545aad8a69338e", "Url": "https://api.github.com/repos/sangupta/nutz", "Date": "2012-08-17T03:57:45Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.nineworlds.serenity.ui.video.player.MediaController.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c == null) { return super.onKeyDown(keyCode, event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1739/buggy-version/serenity-app.src.main.java.us.nineworlds.serenity.ui.video.player.MediaController.java", "BodyUseAPI": [], "Fixed commit": "f3f3950f4b2933e93f0c25daff11f74074682d0c", "Url": "https://api.github.com/repos/kingargyle/serenity-android", "Date": "2017-08-17T01:03:58Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((players.put(org.apollo.util.NameUtil.encodeBase37(player.getUsername().toLowerCase()), player)) != null) { org.apollo.game.model.World.logger.info(\"Error adding the player to the username map - someone with that name already exists.\"); return org.apollo.game.model.World.RegistrationStatus.ALREADY_ONLINE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7710/buggy-version/src.org.apollo.game.model.World.java", "BodyUseAPI": [], "Fixed commit": "33cbb007357eaf3c377d1c580acd49d63f60a22c", "Url": "https://api.github.com/repos/nikkiii/apollo", "Date": "2014-06-27T16:01:50Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.usergrid.java.client.UsergridClient.getEntity(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((response.getError()) != null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4503/buggy-version/blueprints-usergrid-graph.src.main.java.org.apache.usergrid.drivers.blueprints.UsergridGraph.java", "BodyUseAPI": [], "Fixed commit": "b191a4c21880ab0a2bd14697facd50e5ccb21cd7", "Url": "https://api.github.com/repos/ayesha12/blueprints", "Date": "2016-02-29T23:58:22Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.usergrid.drivers.blueprints.UsergridGraph.getVertex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (vertex != null) return vertex;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4503/buggy-version/blueprints-usergrid-graph.src.main.java.org.apache.usergrid.drivers.blueprints.UsergridGraph.java", "BodyUseAPI": [], "Fixed commit": "b191a4c21880ab0a2bd14697facd50e5ccb21cd7", "Url": "https://api.github.com/repos/ayesha12/blueprints", "Date": "2016-02-29T23:58:22Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNull(value)) { value = defaultValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5523/buggy-version/portal-impl.src.com.liferay.portal.util.LocalizationImpl.java", "BodyUseAPI": [], "Fixed commit": "0870838bc2fc0e2be33eb367ff98bb7081bb4838", "Url": "https://api.github.com/repos/antonio-junior/liferay-portal", "Date": "2014-03-17T12:35:15Z"},
{"Line": "=>1504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.deviceProfile) == null) { if (aWarnUserIfConfigIncorrect) { javax.swing.JOptionPane.showMessageDialog(this, (\"No device profile is selected/found!\\n\" + (\"Did you forget to press the \\'Detect\\' button while auto-detect is ticked?\\n\" + \"Is the device(port) properly configurated?\")), \"Invalid settings detected!\", javax.swing.JOptionPane.WARNING_MESSAGE); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/27/buggy-version/device.logicsniffer.src.main.java.org.sump.device.logicsniffer.LogicSnifferConfigDialog.java", "BodyUseAPI": [], "Fixed commit": "abd5b07b7c2b641c82d08f7359f7434cc320db0b", "Url": "https://api.github.com/repos/jawi/ols", "Date": "2012-08-13T09:44:28Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((icons.length) < 3) return icons[index];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4317/buggy-version/src.main.java.net.malisis.core.client.gui.icon.GuiIcon.java", "BodyUseAPI": [], "Fixed commit": "7b890759e5645a137164c1c8b9206e440efca665", "Url": "https://api.github.com/repos/Grinch/MalisisCore", "Date": "2014-10-31T16:06:19Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["value.toString().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tokens.length) < 3) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/277/buggy-version/Presidential-Candidates-MapReduce.src.main.java.edu.rosehulman.csse490.mapReduce.retweet.RetweetMapper.java", "BodyUseAPI": [], "Fixed commit": "82c5c0a271ceb54ac5b79e8c9827f66d66546788", "Url": "https://api.github.com/repos/jacob-ryan/CSSE490-HadoopPresidentialCandidates", "Date": "2015-11-11T19:26:06Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (session.isConnected()) { org.androidpn.server.xmpp.net.XmppIoHandler.log.debug(\"the session is still connect...do nothing.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3252/buggy-version/androidpn-server-bin-tomcat.src.org.androidpn.server.xmpp.net.XmppIoHandler.java", "BodyUseAPI": [], "Fixed commit": "842b4dc7c1a4f928ceceaf58f00363c34666a0e1", "Url": "https://api.github.com/repos/msdx/androidpn", "Date": "2014-04-11T09:24:12Z"},
{"Line": "=>843", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (caseNumberRS.next()) { if ((caseNumberRS.getInt(\"aljID\")) != 0) { to = parker.serb.sql.User.getNameByID(caseNumberRS.getInt(\"aljID\")); }else if ((caseNumberRS.getInt(\"investigatorID\")) != 0) { to = parker.serb.sql.User.getNameByID(caseNumberRS.getInt(\"investigatorID\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3349/buggy-version/src.main.java.parker.serb.sql.ULPCase.java", "BodyUseAPI": ["parker.serb.sql.User.getNameByID(int)", "parker.serb.sql.User.getNameByID(int)", "java.sql.ResultSet.getInt(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "946a635ce7d5d61dabd02b1415e0f57fb288d919", "Url": "https://api.github.com/repos/CurrentlyNotSet/SERB", "Date": "2016-03-22T02:59:18Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(styledText.isDisposed())) { styledText.addPaintListener(this); styledText.redraw(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3492/buggy-version/plugins.org.eclipse.n4js.smith.graph.src.org.eclipse.n4js.smith.graph.editoroverlay.EditorOverlay.java", "BodyUseAPI": ["org.eclipse.swt.custom.StyledText.addPaintListener(org.eclipse.n4js.smith.graph.editoroverlay.EditorOverlay)", "org.eclipse.swt.custom.StyledText.redraw()"], "Fixed commit": "77b091aa3cd9c7b4e35d5e596b9182377e78f0ed", "Url": "https://api.github.com/repos/eclipse/n4js", "Date": "2017-09-19T14:28:27Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.saxon.s9api.XdmNode.getAttributeValue(net.sf.saxon.s9api.QName)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (name.contains(\":\")) { pname = new net.sf.saxon.s9api.QName(name, pnode); }else { pname = new net.sf.saxon.s9api.QName(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3421/buggy-version/src.main.java.com.xmlcalabash.runtime.XAtomicStep.java", "BodyUseAPI": [], "Fixed commit": "acdf19b1429d062db830805c17c7f6acedc21a02", "Url": "https://api.github.com/repos/Conal-Tuohy/xmlcalabash1", "Date": "2015-08-29T11:54:55Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!strict) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7949/buggy-version/compiler-java.src.com.redhat.ceylon.tools.src.CeylonSrcTool.java", "BodyUseAPI": [], "Fixed commit": "de41d517caf513bf8b0be58431edf04544560ffc", "Url": "https://api.github.com/repos/NiematojakTomasz/ceylon", "Date": "2016-02-18T14:18:19Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ids.size()) > 0) { java.util.List<entity.SbillitOrder> orderList = sbillitOrderDao.findOrderInIds(ids); java.util.Map<java.lang.String, java.lang.Object> returnMap = new java.util.HashMap<java.lang.String, java.lang.Object>(); returnMap.put(\"orderThumbupList\", orderThumbupList); returnMap.put(\"orderList\", orderList); return returnMap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5838/buggy-version/app.services.impl.SbillitOrderServiceImpl.java", "BodyUseAPI": ["dao.SbillitOrderDao.findOrderInIds(java.util.List<java.lang.Long>)"], "Fixed commit": "af3cca752c0bc5eac5bf08b6729900e333f2f5ef", "Url": "https://api.github.com/repos/xiwan/Sbillit", "Date": "2014-04-27T09:20:16Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (file != null) { com.tns.Module.folderAsModuleCache.put(folderPath, file.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3361/buggy-version/src.src.com.tns.Module.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "304bd17b6230e733e4d9225a1711360a9ce8cd1e", "Url": "https://api.github.com/repos/NathanaelA/android-runtime", "Date": "2015-12-21T15:09:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNode) == null) finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/30/buggy-version/app.src.main.java.com.yaoyumeng.v2ex.ui.NodeActivity.java", "BodyUseAPI": [], "Fixed commit": "e1fdcab45f0d2b245ed0e339ae6e26d64ab8a4ff", "Url": "https://api.github.com/repos/greatyao/v2ex-android", "Date": "2015-09-20T04:57:18Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (LogoLocation.MENU.equals(getLogoLocation())) { sb.append(\" companyLogo.attr(\\'style\\', \\'margin-top: 10px\\');\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5567/buggy-version/src.main.java.org.sonar.plugins.branding.LogoFooter.java", "BodyUseAPI": [], "Fixed commit": "6933076b778774f2e2ad62f806673db749288d93", "Url": "https://api.github.com/repos/SonarCommunity/sonar-branding", "Date": "2014-06-20T10:24:41Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.molgenis.data.mysql.MysqlRepositoryCollection.add(org.molgenis.data.EntityMetaData)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (repo != null) { report.addNewEntity(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6951/buggy-version/molgenis-data-mysql.src.main.java.org.molgenis.data.importer.EmxImportService.java", "BodyUseAPI": [], "Fixed commit": "57e4c779b3f2e463131a226f75a6ea1afe639634", "Url": "https://api.github.com/repos/molgenis/molgenis", "Date": "2014-10-07T08:00:38Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.seratch.taskun.util.CalendarUtil.getMillisecond(java.util.Calendar)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (millisecond > 0) { currentTime.set(java.util.Calendar.MILLISECOND, 0); currentTime.add(java.util.Calendar.SECOND, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8166/buggy-version/taskun-scheduler.src.main.java.com.github.seratch.taskun.scheduler.crond.CrontabParser.java", "BodyUseAPI": [], "Fixed commit": "765c1e2db7a5e20fcd54c72919eaee4470fe9e92", "Url": "https://api.github.com/repos/seratch/taskun", "Date": "2011-09-07T03:35:28Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((this.getChessField().getRow()) == 0) || ((this.getChessField().getRow()) == 7))) { this.addPossiblePawnTurn(); this.addPossiblePawnDoubleTurn(); this.addPossiblePawnCaptures(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/977/buggy-version/Source.ch.zhaw.necarex.src.model.pieces.Pawn.java", "BodyUseAPI": [], "Fixed commit": "e24e43e3b657750a030b5186f47cc80ad59f08e2", "Url": "https://api.github.com/repos/sprengmeister/IT10-t_SWE1_chess", "Date": "2012-12-10T12:23:56Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((this.getChessField().getRow()) == 0) || ((this.getChessField().getRow()) == 7))) { this.addPossiblePawnCaptures(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/977/buggy-version/Source.ch.zhaw.necarex.src.model.pieces.Pawn.java", "BodyUseAPI": [], "Fixed commit": "e24e43e3b657750a030b5186f47cc80ad59f08e2", "Url": "https://api.github.com/repos/sprengmeister/IT10-t_SWE1_chess", "Date": "2012-12-10T12:23:56Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sshd) { modules.add(new com.google.gerrit.pgm.http.jetty.ProjectQoSFilter.Module()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3928/buggy-version/gerrit-pgm.src.main.java.com.google.gerrit.pgm.Daemon.java", "BodyUseAPI": [], "Fixed commit": "ef8b0f62034fbf460b4fc82a0954b48e58f5e4f7", "Url": "https://api.github.com/repos/typo3/gerrit", "Date": "2012-12-12T09:42:23Z"},
{"Line": "=>1441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firmwareVersion.startsWith(\"8\")) { resp = _client.get(_baseUrl.resolve(com.emc.storageos.isilon.restapi.IsilonApi.URI_ARRAY_GLOBAL_STATUS_ONEFS8)); }else { resp = _client.get(_baseUrl.resolve(com.emc.storageos.isilon.restapi.IsilonApi.URI_ARRAY_GLOBAL_STATUS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/840/buggy-version/exportLibraries.isilon.src.main.java.com.emc.storageos.isilon.restapi.IsilonApi.java", "BodyUseAPI": [], "Fixed commit": "581c835d9f9f483549f9e4090570940ff3c7e5f5", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-11-02T07:10:08Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasBack) { x++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8936/buggy-version/interviews.src.main.java.string.SubstringReversal.java", "BodyUseAPI": [], "Fixed commit": "ff5deaf7b7c1aae799220323aa2dd69f8f7d1292", "Url": "https://api.github.com/repos/arnaudleloup/interviews", "Date": "2014-07-28T18:23:49Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((boundStatement) == null) { boundStatement = new org.talend.components.cassandra.runtime.BoundStatement(preparedStatement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3087/buggy-version/components-cassandra.src.main.java.org.talend.components.cassandra.runtime.CassandraWriter.java", "BodyUseAPI": [], "Fixed commit": "5499adfbb9d0724156517c1acbe850c8b2e0f254", "Url": "https://api.github.com/repos/Talend/components", "Date": "2016-04-25T09:29:00Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (WorldMap.isAdmin) { Point pt = new Point(me.getPoint().x, me.getPoint().y); WorldMap.right.show(this, pt.x, pt.y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2979/buggy-version/src.DrawPanel.java", "BodyUseAPI": [], "Fixed commit": "819215b8776632e235d4c05d776ec63107a7a252", "Url": "https://api.github.com/repos/tommysays/untidaled", "Date": "2012-11-15T15:11:16Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(Const.ParamsNames.IS_COMMENT_GIVER_INSTRUCTOR.equals(giverRole))) && (frcAttributes.giverEmail.equals(student.email))) { frc.enableEditDelete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2905/buggy-version/src.main.java.teammates.ui.pagedata.FeedbackSubmissionEditPageData.java", "BodyUseAPI": [], "Fixed commit": "7ed87edb88c4c2caa1576dde546ece2ad2fb6b79", "Url": "https://api.github.com/repos/Mynk96/teammates", "Date": "2017-08-06T16:49:25Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.fileex.FileEx.fileEx) == null) { com.example.fileex.FileEx.fileEx = new com.example.fileex.FileEx(dir); com.example.fileex.FileEx.currentDir = dir; com.example.fileex.FileEx.previousDir = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5172/buggy-version/fileex.src.main.java.com.example.fileex.FileEx.java", "BodyUseAPI": [], "Fixed commit": "88925078ae20a4661a6b05b5674a4d426fb1dee5", "Url": "https://api.github.com/repos/1singhmanmeet/FileEx", "Date": "2017-12-10T16:53:06Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().getBackStackEntryCount()) > 0) { super.onBackPressed(); }else { moveTaskToBack(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3352/buggy-version/app.src.main.java.com.king.app.workhelper.activity.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "d1ea9c49968ddaf2a8c651f163d055e9def5df37", "Url": "https://api.github.com/repos/hubme/WorkHelperApp", "Date": "2017-08-18T08:47:45Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.list) != null) { adapter = new com.enderwolf.spotipower.adapter.CustomeSongList(this.getContext(), list); listView.setAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3091/buggy-version/app.src.main.java.com.enderwolf.spotipower.ui.component.PlaylistView.java", "BodyUseAPI": [], "Fixed commit": "6b5685c69db516752b06c5bc1bb4e02aebf6cdc2", "Url": "https://api.github.com/repos/Vayner/Spotipower", "Date": "2014-12-09T15:44:03Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((characters.length) == i) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7457/buggy-version/src.scanner.Scanner.java", "BodyUseAPI": [], "Fixed commit": "2b23e4433a4b33c79e5e338b8ef72347a743f513", "Url": "https://api.github.com/repos/khaledba5/Compiler", "Date": "2015-11-04T19:50:08Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((name == null) || (name.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4707/buggy-version/paul.src.main.java.au.edu.uq.cmm.paul.status.FacilityStatusManager.java", "BodyUseAPI": [], "Fixed commit": "3b0323d17bcf7424796b58f6eea89a14c5152283", "Url": "https://api.github.com/repos/crawley/CMM-data-grabber", "Date": "2013-05-15T00:01:18Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.geeksfactory.opacclient.BuildConfig.DEBUG) android.util.Log.i(de.geeksfactory.opacclient.reminder.ReminderBroadcastReceiver.LOG_TAG, \"not showing notification because disabled\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4605/buggy-version/opacclient.opacapp.src.main.java.de.geeksfactory.opacclient.reminder.ReminderBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "7168b18969ef54c9b8589f36fba95a568d58b3ad", "Url": "https://api.github.com/repos/johan12345/opacclient", "Date": "2015-12-07T13:31:51Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.geeksfactory.opacclient.BuildConfig.DEBUG) android.util.Log.i(de.geeksfactory.opacclient.reminder.ReminderBroadcastReceiver.LOG_TAG, \"showing notification\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4605/buggy-version/opacclient.opacapp.src.main.java.de.geeksfactory.opacclient.reminder.ReminderBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "7168b18969ef54c9b8589f36fba95a568d58b3ad", "Url": "https://api.github.com/repos/johan12345/opacclient", "Date": "2015-12-07T13:31:51Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alarm.notified) { if (de.geeksfactory.opacclient.BuildConfig.DEBUG) { android.util.Log.i(de.geeksfactory.opacclient.reminder.ReminderBroadcastReceiver.LOG_TAG, \"not showing notification because already notified\"); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4605/buggy-version/opacclient.opacapp.src.main.java.de.geeksfactory.opacclient.reminder.ReminderBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "7168b18969ef54c9b8589f36fba95a568d58b3ad", "Url": "https://api.github.com/repos/johan12345/opacclient", "Date": "2015-12-07T13:31:51Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sp.getBoolean(\"notification_service\", false))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4605/buggy-version/opacclient.opacapp.src.main.java.de.geeksfactory.opacclient.reminder.ReminderHelper.java", "BodyUseAPI": [], "Fixed commit": "7168b18969ef54c9b8589f36fba95a568d58b3ad", "Url": "https://api.github.com/repos/johan12345/opacclient", "Date": "2015-12-07T13:31:51Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.getMessage().startsWith(\"/save-all\")) { for (com.tauncraft.tauncraftservermanager.TaunPlayer tp : com.tauncraft.tauncraftservermanager.TaunPlayer.getList()) { tp.save(); tp.saveRang(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/136/buggy-version/src.com.tauncraft.tauncraftservermanager.listener.CommandListener.java", "BodyUseAPI": [], "Fixed commit": "bbcdb99e28dd42b5dc9b0ddb3bf64811e2972e70", "Url": "https://api.github.com/repos/Terradominik/TauncraftServerManager", "Date": "2013-04-06T20:07:58Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.event.entity.player.AchievementEvent.getEntityPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((event.getAchievement().parentAchievement) == null) || ((p.hasAchievement(event.getAchievement().parentAchievement)) == true)) { int mult = (event.getAchievement().getSpecial()) ? 100 : 1; int amt = mult * ((p.worldObj.rand.nextInt(30)) + 20); com.lothrazar.cyclicmagic.util.UtilExperience.setXp(p, (((int) (com.lothrazar.cyclicmagic.util.UtilExperience.getExpTotal(p))) + amt)); com.lothrazar.cyclicmagic.util.UtilSound.playSound(p, SoundEvents.ENTITY_EXPERIENCE_ORB_PICKUP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1294/buggy-version/src.main.java.com.lothrazar.cyclicmagic.module.AchievementExpModule.java", "BodyUseAPI": ["com.lothrazar.cyclicmagic.util.UtilExperience.getExpTotal(net.minecraft.entity.player.EntityPlayer)", "com.lothrazar.cyclicmagic.util.UtilSound.playSound(net.minecraft.entity.player.EntityPlayer,SoundEvents.ENTITY_EXPERIENCE_ORB_PICKUP)", "event.getAchievement().getSpecial()", "com.lothrazar.cyclicmagic.util.UtilExperience.setXp(net.minecraft.entity.player.EntityPlayer,int)", "net.minecraftforge.event.entity.player.AchievementEvent.getAchievement()", "p.worldObj.rand.nextInt(int)"], "Fixed commit": "853f975cadb92f33511091635ad3a55f56187487", "Url": "https://api.github.com/repos/PrinceOfAmber/Cyclic", "Date": "2016-08-02T04:24:36Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(location.getWorld().equals(getWorld()))) { if ((this) instanceof keepcalm.mods.bukkit.bukkitAPI.entity.BukkitPlayer) { net.minecraft.entity.player.EntityPlayerMP fp = ((net.minecraft.entity.player.EntityPlayerMP) (entity)); server.getHandle().getConfigurationManager().transferPlayerToDimension(fp, 1); }else { server.getHandle().getConfigurationManager().transferEntityToWorld(entity, 1, ((net.minecraft.world.WorldServer) (entity.worldObj)), ((keepcalm.mods.bukkit.bukkitAPI.BukkitWorld) (location.getWorld())).getHandle()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6371/buggy-version/src.keepcalm.mods.bukkit.bukkitAPI.entity.BukkitEntity.java", "BodyUseAPI": ["server.getHandle().getConfigurationManager().transferEntityToWorld(net.minecraft.entity.Entity,int,((net.minecraft.world.WorldServer) (entity.worldObj)),((keepcalm.mods.bukkit.bukkitAPI.BukkitWorld) (location.getWorld())).getHandle())", "org.bukkit.Location.getWorld()", "((keepcalm.mods.bukkit.bukkitAPI.BukkitWorld) (location.getWorld())).getHandle()"], "Fixed commit": "a3ad35895b9f67984c25db1c18f048fdc1cd342a", "Url": "https://api.github.com/repos/keepcalm/BukkitForge", "Date": "2013-01-24T00:20:45Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mCommit.getStats()) != null) { tvSummary.setText(getString(R.string.commit_summary, ((added + changed) + deleted), mCommit.getStats().getAdditions(), mCommit.getStats().getDeletions())); }else { tvSummary.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/9043/buggy-version/src.com.gh4a.fragment.CommitFragment.java", "BodyUseAPI": ["org.eclipse.egit.github.core.RepositoryCommit.getStats()", "com.gh4a.fragment.CommitFragment.getString(R.string.commit_summary,int,mCommit.getStats().getAdditions(),mCommit.getStats().getDeletions())", "mCommit.getStats().getAdditions()", "mCommit.getStats().getDeletions()", "android.widget.TextView.setText(getString(R.string.commit_summary, ((added + changed) + deleted), mCommit.getStats().getAdditions(), mCommit.getStats().getDeletions()))", "org.eclipse.egit.github.core.RepositoryCommit.getStats()"], "Fixed commit": "fd04c60eeff5b8f279f9453f30b7bbbd4879fb45", "Url": "https://api.github.com/repos/maniac103/gh4a", "Date": "2014-01-16T08:12:20Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spix.swing.FileChooser.getFile(swingGui.getRootWindow(),java.lang.String,java.lang.String,java.lang.String,java.io.File,boolean,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (f != null) { swingGui.getSpix().sendResponse(callback, f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1036/buggy-version/proto.src.main.java.spix.swing.SwingFileRequester.java", "BodyUseAPI": ["swingGui.getSpix().sendResponse(spix.swing.RequestCallback<java.io.File>,java.io.File)"], "Fixed commit": "bc3861f668d922b0a4b4723a08f160ae792d35b4", "Url": "https://api.github.com/repos/Simsilica/Spix", "Date": "2016-05-10T17:49:04Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tarun.learning.tweetnews.trends.repository.ArticleRepository.getS3ObjectKey(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(s3Client.doesObjectExist(bucketName, objectKey))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1450/buggy-version/services.trends.src.main.java.org.tarun.learning.tweetnews.trends.repository.ArticleRepository.java", "BodyUseAPI": [], "Fixed commit": "d456568d0473b9e291a79b1db43c9c8e7bcb7069", "Url": "https://api.github.com/repos/tarunjr/tweet-news", "Date": "2016-12-04T16:13:14Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (adpt)) { dstClass = adpt.getClassByInterface(clazz); if (null == dstClass) { dstClass = clazz; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7849/buggy-version/Projectv1.LiftingAlgorithm.src.serverLifter.archi.AbstractLifting.java", "BodyUseAPI": [], "Fixed commit": "48c821b4444f8d33e40a16ea568c4663176ee9d2", "Url": "https://api.github.com/repos/zerbino/cxfemn", "Date": "2014-01-28T16:33:28Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getVertexManager().isFlat(((org.nschmidt.ldparteditor.data.GData1) (g)))) { position = compositeText.getOffsetAtLine((lineNumber - 1)); java.lang.Object[] messageArguments = new java.lang.Object[]{ lineNumber, position }; java.text.MessageFormat formatter = new java.text.MessageFormat(\"\"); formatter.setLocale(MyLanguage.LOCALE); formatter.applyPattern(I18n.DATFILE_Line); org.nschmidt.ldparteditor.widgets.TreeItem trtmNewTreeitem = new org.nschmidt.ldparteditor.widgets.TreeItem(errors, org.eclipse.swt.SWT.NONE); trtmNewTreeitem.setImage(org.nschmidt.ldparteditor.resources.ResourceManager.getImage(\"icon16_error.png\")); trtmNewTreeitem.setVisible(false); trtmNewTreeitem.setText(new java.lang.String[]{ org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_InvalidInvertNextFlat, formatter.format(messageArguments), \"[E0D] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_SyntaxError) }); trtmNewTreeitem.setData(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2285/buggy-version/src.org.nschmidt.ldparteditor.data.DatFile.java", "BodyUseAPI": [], "Fixed commit": "ff1e35aea7e434d514f2a5752832cedd6e443e2b", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-06T05:40:29Z"},
{"Line": "=>822", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getVertexManager().isFlat(((org.nschmidt.ldparteditor.data.GData1) (g)))) { position = compositeText.getOffsetAtLine((lineNumber - 1)); java.lang.Object[] messageArguments = new java.lang.Object[]{ lineNumber, position }; java.text.MessageFormat formatter = new java.text.MessageFormat(\"\"); formatter.setLocale(MyLanguage.LOCALE); formatter.applyPattern(I18n.DATFILE_Line); org.nschmidt.ldparteditor.widgets.TreeItem trtmNewTreeitem = new org.nschmidt.ldparteditor.widgets.TreeItem(errors, org.eclipse.swt.SWT.NONE); trtmNewTreeitem.setImage(org.nschmidt.ldparteditor.resources.ResourceManager.getImage(\"icon16_error.png\")); trtmNewTreeitem.setVisible(false); trtmNewTreeitem.setText(new java.lang.String[]{ org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_InvalidInvertNextFlat, formatter.format(messageArguments), \"[E0D] \" + (org.nschmidt.ldparteditor.i18n.I18n.DATPARSER_SyntaxError) }); trtmNewTreeitem.setData(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2285/buggy-version/src.org.nschmidt.ldparteditor.data.DatFile.java", "BodyUseAPI": [], "Fixed commit": "ff1e35aea7e434d514f2a5752832cedd6e443e2b", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-06T05:40:29Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > 0) { offset -= 7; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7703/buggy-version/library.src.com.squareup.timessquare.CalendarPickerView.java", "BodyUseAPI": [], "Fixed commit": "c9f40254c9d43b8e8556acf190e44d75b5370828", "Url": "https://api.github.com/repos/meetup/android-times-square", "Date": "2013-07-16T03:41:35Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((types == null) || (types.isEmpty())) { return java.util.EnumSet.allOf(de.weltraumschaf.maconha.model.MediaType.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1631/buggy-version/src.main.java.de.weltraumschaf.maconha.frontend.search.controller.SearchController.java", "BodyUseAPI": [], "Fixed commit": "169e90f5284fb141a8818a9e7aa084da7bf5eabe", "Url": "https://api.github.com/repos/Weltraumschaf/maconha", "Date": "2017-05-05T12:01:55Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((snitch.getGroup()) == null) { player.sendMessage(((((org.bukkit.ChatColor.RED) + \"Snitch '\") + (snitch.getName())) + \"' does not have a group. Contact an administrator if this is wrong.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3610/buggy-version/src.com.untamedears.JukeAlert.listener.JukeAlertListener.java", "BodyUseAPI": ["com.untamedears.JukeAlert.model.Snitch.getName()", "org.bukkit.entity.Player.sendMessage(((((org.bukkit.ChatColor.RED) + \"Snitch '\") + (snitch.getName())) + \"' does not have a group. Contact an administrator if this is wrong.\"))"], "Fixed commit": "00d9787c841620b74e587871ed12b36b0ce6d89a", "Url": "https://api.github.com/repos/Random101/JukeAlert", "Date": "2013-06-07T02:50:03Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.untamedears.JukeAlert.model.Snitch.getGroup()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (faction == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3610/buggy-version/src.com.untamedears.JukeAlert.util.Utility.java", "BodyUseAPI": [], "Fixed commit": "00d9787c841620b74e587871ed12b36b0ce6d89a", "Url": "https://api.github.com/repos/Random101/JukeAlert", "Date": "2013-06-07T02:50:03Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_numOfTimesString) != null) { recur.setEndDate(getRecurEndDate(recur, _numOfTimesString)); endDate = recur.getEndDate(); if ((endDate != null) && ((recur.getStartDate().compareTo(endDate)) >= 0)) { warn = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6752/buggy-version/src.defaultPart.Logic.java", "BodyUseAPI": [], "Fixed commit": "8e6f90be59f3efb85a0b7d54408017b91ff1b1f5", "Url": "https://api.github.com/repos/cs2103jan2016-w14-4j/main", "Date": "2016-04-03T15:21:08Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subValue == 0) { return o2 - o1; }else { return subValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5577/buggy-version/src.TreeMapValueComparator.java", "BodyUseAPI": [], "Fixed commit": "4fa2244670b71bdcec6786cc3e8d48d499dfcdaf", "Url": "https://api.github.com/repos/MaksimRuts/collections22", "Date": "2015-04-21T20:11:26Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clearAllItem) != null) clearAllItem.setVisible(((voteArray != null) && ((voteArray.length) > 0)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1160/buggy-version/src.org.canthack.tris.oyver.VoteListActivity.java", "BodyUseAPI": [], "Fixed commit": "fafd0ac4652f7eabb9c9b43893669745da75ecec", "Url": "https://api.github.com/repos/tristan2468/OyVer", "Date": "2014-02-25T21:42:18Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (nextLBOutboundEndpoint != null) { if (nextLBOutboundEndpoint.isHealthy()) { org.wso2.carbon.gateway.httploadbalancer.mediator.LoadBalancerMediator.log.info((\"Previously chosen endpoint is unHealthy.. Now, Chosen endpoint is : \" + (nextLBOutboundEndpoint.getName()))); lbCallMediatorMap.get(nextLBOutboundEndpoint.getName()).receive(carbonMessage, new org.wso2.carbon.gateway.httploadbalancer.callback.LoadBalancerMediatorCallBack(carbonCallback, this, this.context, nextLBOutboundEndpoint)); return true; }else { if (areAllEndpointsUnhealthy()) { sendResponse(carbonCallback, false); return false; } } }else { sendResponse(carbonCallback, false); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/9112/buggy-version/carbon-gw-lb.components.org.wso2.carbon.gateway.httploadbalancer.src.main.java.org.wso2.carbon.gateway.httploadbalancer.mediator.LoadBalancerMediator.java", "BodyUseAPI": ["org.wso2.carbon.gateway.httploadbalancer.outbound.LBOutboundEndpoint.getName()", "org.wso2.carbon.gateway.httploadbalancer.outbound.LBOutboundEndpoint.isHealthy()", "org.slf4j.Logger.info((\"Previously chosen endpoint is unHealthy.. Now, Chosen endpoint is : \" + (nextLBOutboundEndpoint.getName())))", "java.util.Map<java.lang.String, org.wso2.carbon.gateway.httploadbalancer.invokers.LoadBalancerCallMediator>.get(nextLBOutboundEndpoint.getName())", "lbCallMediatorMap.get(nextLBOutboundEndpoint.getName()).receive(org.wso2.carbon.messaging.CarbonMessage,org.wso2.carbon.gateway.httploadbalancer.callback.LoadBalancerMediatorCallBack)", "org.wso2.carbon.gateway.httploadbalancer.outbound.LBOutboundEndpoint.getName()"], "Fixed commit": "0f69dbd14c0d64a29a7a64fd891a621e7594392c", "Url": "https://api.github.com/repos/Venkat2811/product-http-load-balancer", "Date": "2016-06-10T17:41:09Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.util.logging.LogManager.getLogManager().getLogger(com.perfectoMobile.device.logging.ThreadedFileHandler.PERFECTO_NAMESPACE)) != null) { java.util.logging.LogManager.getLogManager().getLogger(com.perfectoMobile.device.logging.ThreadedFileHandler.PERFECTO_NAMESPACE).setLevel(baseLevel); java.util.logging.LogManager.getLogManager().getLogger(com.perfectoMobile.device.logging.ThreadedFileHandler.PERFECTO_NAMESPACE).addHandler(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1474/buggy-version/libraries.deviceFramework.src.com.perfectoMobile.device.logging.ThreadedFileHandler.java", "BodyUseAPI": ["java.util.logging.Logger.addHandler(com.perfectoMobile.device.logging.ThreadedFileHandler)", "java.util.logging.LogManager.getLogger(java.lang.String)", "java.util.logging.Logger.setLevel(java.util.logging.Level)", "java.util.logging.LogManager.getLogger(java.lang.String)"], "Fixed commit": "f5d0308fae25dbab8588ad5cd516d6bb3bb4826e", "Url": "https://api.github.com/repos/allengeary/perfectoMobile", "Date": "2016-05-07T21:24:37Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.util.logging.LogManager.getLogManager().getLogger(com.perfectoMobile.device.logging.ThreadedFileHandler.MORELAND_NAMESPACE)) != null) { java.util.logging.LogManager.getLogManager().getLogger(com.perfectoMobile.device.logging.ThreadedFileHandler.MORELAND_NAMESPACE).setLevel(baseLevel); java.util.logging.LogManager.getLogManager().getLogger(com.perfectoMobile.device.logging.ThreadedFileHandler.MORELAND_NAMESPACE).addHandler(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1474/buggy-version/libraries.deviceFramework.src.com.perfectoMobile.device.logging.ThreadedFileHandler.java", "BodyUseAPI": ["java.util.logging.Logger.setLevel(java.util.logging.Level)", "java.util.logging.LogManager.getLogger(java.lang.String)", "java.util.logging.LogManager.getLogger(java.lang.String)", "java.util.logging.Logger.addHandler(com.perfectoMobile.device.logging.ThreadedFileHandler)"], "Fixed commit": "f5d0308fae25dbab8588ad5cd516d6bb3bb4826e", "Url": "https://api.github.com/repos/allengeary/perfectoMobile", "Date": "2016-05-07T21:24:37Z"},
{"Line": "=>891", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p instanceof org.getspout.spoutapi.player.SpoutPlayer) sendDelayedPacket(new org.getspout.spoutapi.packet.PacketSkinURL(p.getEntityId(), getSkin(((org.getspout.spoutapi.player.SpoutPlayer) (p))), getCape(((org.getspout.spoutapi.player.SpoutPlayer) (p)))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5434/buggy-version/src.org.getspout.spout.player.SpoutCraftPlayer.java", "BodyUseAPI": ["org.bukkit.entity.Player.getEntityId()", "org.getspout.spout.player.SpoutCraftPlayer.sendDelayedPacket(org.getspout.spoutapi.packet.PacketSkinURL)"], "Fixed commit": "e27d4a3a27f9570b3c60cd07947484955d200a1e", "Url": "https://api.github.com/repos/SpoutDev/Spout", "Date": "2011-11-26T01:44:32Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof com.liferay.portal.kernel.exception.NoSuchLayoutException) { throw new com.liferay.portal.kernel.exception.NoSuchLayoutException(e); }else { throw new com.liferay.portal.kernel.exception.SystemException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6321/buggy-version/modules.apps.social-private-messaging.social-private-messaging-service.src.main.java.com.liferay.social.privatemessaging.service.impl.UserThreadLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b5cca3f24fa002180f321a7d66f8aba6b49e52af", "Url": "https://api.github.com/repos/kevin-yen/liferay-portal", "Date": "2016-08-09T21:44:42Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.social.privatemessaging.service.impl.UserThreadLocalServiceImpl.fetchLayout(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (layout == null) { throw new com.liferay.portal.kernel.exception.NoSuchLayoutException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6321/buggy-version/modules.apps.social-private-messaging.social-private-messaging-service.src.main.java.com.liferay.social.privatemessaging.service.impl.UserThreadLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b5cca3f24fa002180f321a7d66f8aba6b49e52af", "Url": "https://api.github.com/repos/kevin-yen/liferay-portal", "Date": "2016-08-09T21:44:42Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key instanceof com.liferay.portal.kernel.exception.NoSuchLayoutException) { message = translate(portletRequest, \"requires-private-messaging-portlet\"); }else { message = translate(portletRequest, \"your-request-failed-to-complete\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6321/buggy-version/modules.apps.social-private-messaging.social-private-messaging-web.src.main.java.com.liferay.social.privatemessaging.web.internal.portlet.PrivateMessagingPortlet.java", "BodyUseAPI": [], "Fixed commit": "b5cca3f24fa002180f321a7d66f8aba6b49e52af", "Url": "https://api.github.com/repos/kevin-yen/liferay-portal", "Date": "2016-08-09T21:44:42Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((++(index)) >= (source.length())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8997/buggy-version/src.org.nwapw.abacus.lexing.pattern.Pattern.java", "BodyUseAPI": [], "Fixed commit": "043d02ead2c1ae6dc73339fd2674e33aa7ff54ba", "Url": "https://api.github.com/repos/DanilaFe/abacus", "Date": "2017-07-25T20:53:19Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (merchantDao.checkBlock(mTel)) { merchantDao.updateStatus(mTel, 2); }else { merchantDao.updateStatus(mTel, 4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8829/buggy-version/Admin.src.com.oocl.ita.starkPATHo.project2.admin.service.AdminServiceImpl.java", "BodyUseAPI": ["com.oocl.ita.starkPATHo.project2.admin.dao.access.MerchantDao.updateStatus(java.lang.String,int)", "com.oocl.ita.starkPATHo.project2.admin.dao.access.MerchantDao.updateStatus(java.lang.String,int)"], "Fixed commit": "de5f108456b42959dbdfc72eec0fc4650c64dd25", "Url": "https://api.github.com/repos/chenhaoPATHn/ita_project2", "Date": "2016-07-25T04:29:35Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["o1.getModificationTimestamp().compareTo(o2.getModificationTimestamp())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == 0) { return o1.getId().compareTo(o2.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4809/buggy-version/E-EYE-O_DAOHibernateImpl.src.com.jtbdevelopment.e_eye_o.hibernate.DAO.HibernateReadOnlyDAO.java", "BodyUseAPI": [], "Fixed commit": "88aabd152e9d5d4770a46a5b2c3040a44a60d43c", "Url": "https://api.github.com/repos/jtbdevelopment/e-eye-o", "Date": "2013-05-11T14:09:23Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (verification > 9) verification = verification % 10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8665/buggy-version/src.main.java.com.premiumminds.webapp.wicket.validators.PortugueseNIFValidator.java", "BodyUseAPI": [], "Fixed commit": "0ac3e7612245942a6b5b065dba671d499b5bc739", "Url": "https://api.github.com/repos/cdiniz/pm-wicket-utils", "Date": "2014-10-31T14:31:39Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["textView.getText().toString().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tokens[0].equals(\"Now playing\")) { title = tokens[2].substring(1); }else { title = tokens[1].substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6620/buggy-version/src.com.stanford.tutti.BrowseSongsFragment.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int)"], "Fixed commit": "8ddc65df3b787088aab2053ccfe7e12cbe70ce99", "Url": "https://api.github.com/repos/JayThomason/Tutti", "Date": "2014-05-13T11:47:10Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errorDisabled) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8472/buggy-version/src.cz.autoclient.robots.Robot.java", "BodyUseAPI": [], "Fixed commit": "dd9b131f2c09521652f04eb596ac41ea77b15516", "Url": "https://api.github.com/repos/Darker/auto-client", "Date": "2015-05-17T00:37:18Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xdi.oxauth.model.common.Prompt.fromString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prompts.contains(Prompt.CONSENT)) { consentRequired(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6290/buggy-version/Server.src.main.java.org.xdi.oxauth.authorize.ws.rs.AuthorizeAction.java", "BodyUseAPI": [], "Fixed commit": "4931f99c765213e31225970c23782fadbd4e35d5", "Url": "https://api.github.com/repos/GluuFederation/oxAuth", "Date": "2016-05-04T16:03:54Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kse.crypto.x509.X509ExtensionType.resolveOid(oid.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return org.kse.utilities.io.HexUtil.getHexClearDump(octets); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/209/buggy-version/kse.src.org.kse.crypto.x509.X509Ext.java", "BodyUseAPI": [], "Fixed commit": "98c39b7506e1e02715463bd96158ad2a91ec312b", "Url": "https://api.github.com/repos/kaikramer/keystore-explorer", "Date": "2017-11-17T15:33:30Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFSet) == null) { android.util.Log.v(de.skubware.opentraining.activity.start_training.DialogFragmentAddEntry.TAG, \"Argument for mFSet was null.\"); mState = de.skubware.opentraining.activity.start_training.DialogFragmentAddEntry.EntryAction.CREATING_ENTRY; }else { android.util.Log.v(de.skubware.opentraining.activity.start_training.DialogFragmentAddEntry.TAG, (\"Argument for mFSet was: \" + (mTrainingEntry.toDebugString()))); mState = de.skubware.opentraining.activity.start_training.DialogFragmentAddEntry.EntryAction.EDITING_ENTRY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1343/buggy-version/app.src.de.skubware.opentraining.activity.start_training.DialogFragmentAddEntry.java", "BodyUseAPI": [], "Fixed commit": "f78b34a7a4b3e2df6eb3bd5d1fa612dbb2fc0248", "Url": "https://api.github.com/repos/chaosbastler/opentraining", "Date": "2013-05-23T08:24:51Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(allKeszitmeny.isEmpty())) { keszitmenyID = allKeszitmeny.get(0).getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6319/buggy-version/HemApp-war.src.java.controller.KeszitmenyController.java", "BodyUseAPI": ["allKeszitmeny.get(0).getId()", "java.util.List<entity.Keszitmeny>.get(int)"], "Fixed commit": "a6c03f111ba2518c70acaa81bfec7fbbe1b84c7b", "Url": "https://api.github.com/repos/czuczi/HemApp", "Date": "2015-04-08T09:11:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(allKiszereles.isEmpty())) { kiszerelesID = allKiszereles.get(0).getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6319/buggy-version/HemApp-war.src.java.controller.KeszitmenyController.java", "BodyUseAPI": ["java.util.List<entity.Kiszereles>.get(int)", "allKiszereles.get(0).getId()"], "Fixed commit": "a6c03f111ba2518c70acaa81bfec7fbbe1b84c7b", "Url": "https://api.github.com/repos/czuczi/HemApp", "Date": "2015-04-08T09:11:29Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((injekciotortenetFacade.getActualByBeteg(loginController.getBeteg())) != null) && (!(injekciotortenetFacade.getActualByBeteg(loginController.getBeteg()).isEmpty()))) { keszKiszList = new java.util.LinkedList(injekciotortenetFacade.getActualByBeteg(loginController.getBeteg()).get(0).getKeszitmenyID().getKeszKiszCollection()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6319/buggy-version/HemApp-war.src.java.controller.KeszitmenyKeresController.java", "BodyUseAPI": ["controller.LoginController.getBeteg()", "injekciotortenetFacade.getActualByBeteg(loginController.getBeteg()).get(int)", "facade.InjekciotortenetFacade.getActualByBeteg(loginController.getBeteg())", "injekciotortenetFacade.getActualByBeteg(loginController.getBeteg()).get(0).getKeszitmenyID()", "injekciotortenetFacade.getActualByBeteg(loginController.getBeteg()).get(0).getKeszitmenyID().getKeszKiszCollection()"], "Fixed commit": "a6c03f111ba2518c70acaa81bfec7fbbe1b84c7b", "Url": "https://api.github.com/repos/czuczi/HemApp", "Date": "2015-04-08T09:11:29Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((keszKiszList) != null) && (!(keszKiszList.isEmpty()))) { selectedKeszKisz = keszKiszList.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6319/buggy-version/HemApp-war.src.java.controller.KeszitmenyKeresController.java", "BodyUseAPI": ["java.util.List<entity.KeszKisz>.get(int)"], "Fixed commit": "a6c03f111ba2518c70acaa81bfec7fbbe1b84c7b", "Url": "https://api.github.com/repos/czuczi/HemApp", "Date": "2015-04-08T09:11:29Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mod.getDeleteRequested().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bDelete == null) bDelete = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7095/buggy-version/app.femr.business.services.PhotoService.java", "BodyUseAPI": [], "Fixed commit": "f33cb12bcb7473d434dd260b962cd552ca28d72c", "Url": "https://api.github.com/repos/b6025/femr", "Date": "2014-04-15T00:31:27Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bDelete) { if ((mod.getPhotoId().get(i)) != null) this.deletePhotoById(mod.getPhotoId().get(i), _encounterPhotoPath); }else { java.lang.Boolean bisUpdate = mod.getHasUpdatedDesc().get(i); if (bisUpdate != null) { if (bisUpdate) { java.lang.Integer photoId = mod.getPhotoId().get(i); if (photoId != null) updateImageDescription(photoId, mod.getImageDescText().get(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7095/buggy-version/app.femr.business.services.PhotoService.java", "BodyUseAPI": [], "Fixed commit": "f33cb12bcb7473d434dd260b962cd552ca28d72c", "Url": "https://api.github.com/repos/b6025/femr", "Date": "2014-04-15T00:31:27Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((columnHasCards(columnTo)) == true) { error = \" You cannot move is column because it is empty or there are no empty columns\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1621/buggy-version/src.main.java.models.Game.java", "BodyUseAPI": [], "Fixed commit": "13634fa1edf03d541aaf5b1fb8608aca472b711d", "Url": "https://api.github.com/repos/cs361fall2017/team7", "Date": "2017-10-27T03:26:38Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileList != null) { for (java.io.File f : fileList) { if (f.isDirectory()) { org.openmrs.util.OpenmrsUtil.deleteDirectory(f); } boolean success = f.delete(); if (org.openmrs.util.OpenmrsUtil.log.isDebugEnabled()) { org.openmrs.util.OpenmrsUtil.log.debug((((\" deleting \" + (f.getName())) + \" : \") + (success ? \"ok\" : \"failed\"))); } if (!success) { f.deleteOnExit(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2195/buggy-version/api.src.main.java.org.openmrs.util.OpenmrsUtil.java", "BodyUseAPI": [], "Fixed commit": "30cf3f5fd5e2d2d4140be69fa95421c3af73daa9", "Url": "https://api.github.com/repos/Breta01/openmrs-core", "Date": "2015-12-11T23:12:13Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tags) != null) { tagsArray = java.util.Arrays.asList(tags); }else { tagsArray = new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4052/buggy-version/app.src.main.java.com.opinnapp.opinnapp.tabholder.newquestion.ConfirmQuestionActivity.java", "BodyUseAPI": [], "Fixed commit": "296d0dde17504ad9efcd32809bdd4e93d56e31b9", "Url": "https://api.github.com/repos/vzaffalon/Opinapp", "Date": "2017-06-09T03:41:00Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sellCarbonQuantity) > 0) { if (averagePrice >= (0.975 * (sellCarbonUnitPrice))) { double amountToSell = java.lang.Math.min(sellCarbonQuantity, quantity); this.tradeProtocol.respondToOffer(address, amountToSell, offer); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3309/buggy-version/kyoto.src.main.java.uk.ac.ic.kyoto.annex1reduce.AnnexOneReduce.java", "BodyUseAPI": [], "Fixed commit": "72cb13cae65f945b15fe5208c8ae698bfd244e9d", "Url": "https://api.github.com/repos/farhanrahman/kyoto", "Date": "2012-06-23T17:44:00Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buyCarbonQuantity) > 0) { if (averagePrice <= (1.025 * (buyCarbonUnitPrice))) { double amountToBuy = java.lang.Math.min(buyCarbonQuantity, quantity); this.tradeProtocol.respondToOffer(address, amountToBuy, offer); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3309/buggy-version/kyoto.src.main.java.uk.ac.ic.kyoto.annex1reduce.AnnexOneReduce.java", "BodyUseAPI": [], "Fixed commit": "72cb13cae65f945b15fe5208c8ae698bfd244e9d", "Url": "https://api.github.com/repos/farhanrahman/kyoto", "Date": "2012-06-23T17:44:00Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((map.get(\"faultCode\")) instanceof java.lang.Integer) { faultCode = ((java.lang.Integer) (map.get(\"faultCode\"))); }else if ((map.get(\"faultCode\")) instanceof java.lang.String) { faultCode = java.lang.Integer.parseInt(((java.lang.String) (map.get(\"faultCode\")))); }else { throw new org.xml.sax.SAXParseException(\"Unknow faultCode type\", getDocumentLocator()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7551/buggy-version/common.src.main.java.org.apache.xmlrpc.parser.XmlRpcResponseParser.java", "BodyUseAPI": ["java.util.Map.get(java.lang.String)", "java.util.Map.get(java.lang.String)", "java.lang.Integer.parseInt(java.lang.Object)", "java.util.Map.get(java.lang.String)"], "Fixed commit": "b89dc2ca617f6cb3935c08faa9f13ea9e3994915", "Url": "https://api.github.com/repos/nowina-solutions/xmlrpc", "Date": "2017-03-24T06:11:03Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action.equals(\"openchest\")) { action = \"openChest\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5697/buggy-version/DragonSol.src.commands.CommandAction.java", "BodyUseAPI": [], "Fixed commit": "4cd4a0051bce1f0756439d6347a740001173cdf6", "Url": "https://api.github.com/repos/eddrichjanzzenang/DragonFramework", "Date": "2017-05-15T03:34:30Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (product != null) { query = query.filter(\"product\", product); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3059/buggy-version/backend.src.main.java.com.mobilevanity.backend.DataManager.java", "BodyUseAPI": ["com.googlecode.objectify.cmd.Query.filter(java.lang.String,com.mobilevanity.backend.data.Product)"], "Fixed commit": "03bd8d8ff08bbcfe612bb1d6679de4ead0130421", "Url": "https://api.github.com/repos/dongja94/MobileVanityServer", "Date": "2016-09-05T00:52:30Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.awt.geom.Point2D.Float>.get(int)", "java.util.List<java.awt.geom.Point2D.Float>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((start.x) == (end.x)) return start.y;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/9171/buggy-version/src.heroesgrave.spade.core.effects.MappingEffect.java", "BodyUseAPI": [], "Fixed commit": "7250ce9f5a077af0bf79e6bf03232b7f2c1ac0f1", "Url": "https://api.github.com/repos/Spade-Editor/Core", "Date": "2015-03-11T22:08:04Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((this.request) != null) && ((this.request.getHeaders()) != null)) { java.lang.String continuationToken = this.request.getHeaders().get(HttpConstants.HttpHeaders.CONTINUATION); if (!(org.apache.commons.lang3.StringUtils.isBlank(continuationToken))) { this.continuation = continuationToken; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7076/buggy-version/src.com.microsoft.azure.documentdb.QueryIterable.java", "BodyUseAPI": [], "Fixed commit": "04482a4fd0409c05f98bb21e7ee007dbe7510d09", "Url": "https://api.github.com/repos/Azure/azure-documentdb-java", "Date": "2014-12-16T16:02:17Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.ualberta.cs.team5geotopics.CommentModel.getmParentID()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mParentID.equals(\"-1\")) { serializeAndWrite(commentList, \"history.sav\"); }else { serializeAndWrite(commentList, mParentID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5148/buggy-version/GeoTopicsActivity.src.ca.ualberta.cs.team5geotopics.Cache.java", "BodyUseAPI": ["ca.ualberta.cs.team5geotopics.Cache.serializeAndWrite(java.util.ArrayList<ca.ualberta.cs.team5geotopics.CommentModel>,java.lang.String)"], "Fixed commit": "54366f581776e833eb69d6e849f72907729a469e", "Url": "https://api.github.com/repos/CMPUT301W14T05/Team5GeoTopics", "Date": "2014-03-30T22:09:44Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((article) == null) || ((getIntent().getStringExtra(ArticleIntent.EXTRA_FAVORITE_SERVICE)) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/9094/buggy-version/library.src.main.java.xyz.klinker.android.article.ArticleActivity.java", "BodyUseAPI": [], "Fixed commit": "39ccc7f2ebec547489221423db483427851b81ec", "Url": "https://api.github.com/repos/klinker41/article-android", "Date": "2017-06-13T15:54:34Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DAO.ResourcesDAO.getAllUnavailableResources()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(resultSet.getBoolean(\"isMaintained\"))) { java.lang.System.out.println(\"if not maintained\"); Demo.Reservation reserve = new Demo.Reservation(resultSet.getDate(\"startDate\"), resultSet.getDate(\"endDate\"), new Demo.UsersWeb(java.lang.Integer.parseInt(resultSet.getString(\"userID\")))); res.addReservation(reserve); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5562/buggy-version/src.Demo.ResourcesWeb.java", "BodyUseAPI": ["java.sql.ResultSet.getDate(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getDate(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "5d995b02b47093abc12ebb77c245231b226e48ad", "Url": "https://api.github.com/repos/soen387f2016project2/finalproject", "Date": "2016-12-04T23:28:03Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endReason != (com.sedmelluq.discord.lavaplayer.track.AudioTrackEndReason.REPLACED)) && (endReason != (com.sedmelluq.discord.lavaplayer.track.AudioTrackEndReason.STOPPED))) { ((lavalink.client.player.LavalinkPlayer) (player)).clearTrack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5620/buggy-version/LavalinkClient.src.main.java.lavalink.client.player.LavalinkInternalPlayerEventHandler.java", "BodyUseAPI": [], "Fixed commit": "9315a97bab9c45310a131c635af14233c0319026", "Url": "https://api.github.com/repos/Frederikam/Lavalink", "Date": "2017-12-02T13:32:03Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getEditableText().getSpanEnd(com.pxh.span.RichQuoteSpan)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((getEditableText().length()) > ((sEnd + lengthAfter) + 1)) && ((getEditableText().charAt(((sEnd + lengthAfter) + 1))) == '\\n')) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6716/buggy-version/rich_edittext.src.main.java.com.pxh.adapter.QuoteSpanAdapter.java", "BodyUseAPI": [], "Fixed commit": "d8bb30889f4a72ff5287a98082f1260b5889f911", "Url": "https://api.github.com/repos/nebulae-pan/RichEditText", "Date": "2016-11-20T13:05:37Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (label != null) { while ((label.length()) == 0) { if ((label.length()) == 0) { label = javax.swing.JOptionPane.showInputDialog(\"Please enter a label\"); } } }else { while (label == null) { if (label == null) { label = javax.swing.JOptionPane.showInputDialog(\"Please enter a label\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4868/buggy-version/hci-practical.hci.ImagePanel.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "03164ef04e848473280a726017a4f8327734f3d0", "Url": "https://api.github.com/repos/Steven-Eardley/hci", "Date": "2012-10-16T12:28:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Location.getExitLocation(Direction)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nextLocation.getExit(direction)) == null) message = \"\" + (Text.NO_EXIT); else message = \"\" + (Text.LOCKED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2665/buggy-version/GameModel.java", "BodyUseAPI": [], "Fixed commit": "f226c8ab1ba3fd16b7c1b9f0df06a66546e0766b", "Url": "https://api.github.com/repos/marcushio/EscapeFromHod", "Date": "2017-12-15T22:51:18Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getServer().getPlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (target != null) { if (player.hasPermission(\"vitalz.gamemode.others\")) { if (((args[0].equalsIgnoreCase(\"1\")) || (args[0].equalsIgnoreCase(\"creative\"))) || (args[0].equalsIgnoreCase(\"c\"))) { target.setGameMode(GameMode.CREATIVE); } if (((args[0].equalsIgnoreCase(\"0\")) || (args[0].equalsIgnoreCase(\"survival\"))) || (args[0].equalsIgnoreCase(\"s\"))) { target.setGameMode(GameMode.SURVIVAL); } if (((args[0].equalsIgnoreCase(\"2\")) || (args[0].equalsIgnoreCase(\"adventure\"))) || (args[0].equalsIgnoreCase(\"a\"))) { target.setGameMode(GameMode.ADVENTURE); } }else { player.sendMessage(((org.bukkit.ChatColor.RED) + \"You do not have access to that command!\")); player.sendMessage(((org.bukkit.ChatColor.RED) + \"If you believe this incorrect, contact an operator.\")); } }else { player.sendMessage(((org.bukkit.ChatColor.RED) + \"That player could not be found!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2760/buggy-version/src.me.marthi.vitalz.commands.Commandgamemode.java", "BodyUseAPI": ["org.bukkit.entity.Player.setGameMode(GameMode.SURVIVAL)", "org.bukkit.entity.Player.setGameMode(GameMode.ADVENTURE)", "org.bukkit.entity.Player.setGameMode(GameMode.CREATIVE)"], "Fixed commit": "0d10496fe69e649cb263be1cd50c8d04684179b1", "Url": "https://api.github.com/repos/rcth/vitalz", "Date": "2013-05-13T15:53:53Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) { throw new org.springframework.security.core.userdetails.UsernameNotFoundException(((\"username \" + username) + \" not available\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5160/buggy-version/src.main.java.com.vidya.api.auth.LoginService.java", "BodyUseAPI": [], "Fixed commit": "1c4b3bbe623485601a68a3ae82f70d1cc9ddc791", "Url": "https://api.github.com/repos/sagarkarnati/spring-app", "Date": "2015-11-16T21:00:01Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (usr.getUsername().equals(username)) user = usr;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5160/buggy-version/src.main.java.com.vidya.api.auth.LoginService.java", "BodyUseAPI": [], "Fixed commit": "1c4b3bbe623485601a68a3ae82f70d1cc9ddc791", "Url": "https://api.github.com/repos/sagarkarnati/spring-app", "Date": "2015-11-16T21:00:01Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mParsedFinishDate.getMinutes()) < 10) { mFormattedEndDateMinutes = \"0\" + (mParsedFinishDate.getMinutes()); mFinishTimeSelectedTextView.setText((((mParsedFinishDate.getHours()) + \":\") + (mFormattedEndDateMinutes))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8787/buggy-version/app.src.main.java.com.liamd.giggity_app.VenueUserViewGigDetailsFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.util.Date.getMinutes()", "java.util.Date.getHours()"], "Fixed commit": "d038993eeef03d343a458f1b979fcd7972f51078", "Url": "https://api.github.com/repos/Woody1ooo/PRCO304-Giggity-App", "Date": "2017-03-05T22:50:37Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectedMinute < 10) { mFinishTimeSelectedTextView.setText((((selectedHour + \":\") + \"0\") + selectedMinute)); }else { mFinishTimeSelectedTextView.setText(((selectedHour + \":\") + selectedMinute)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8787/buggy-version/app.src.main.java.com.liamd.giggity_app.VenueUserViewGigDetailsFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "d038993eeef03d343a458f1b979fcd7972f51078", "Url": "https://api.github.com/repos/Woody1ooo/PRCO304-Giggity-App", "Date": "2017-03-05T22:50:37Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mParsedFinishDate.getMinutes()) > 10) { mFinishTimeSelectedTextView.setText((((mParsedFinishDate.getHours()) + \":\") + (mParsedFinishDate.getMinutes()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8787/buggy-version/app.src.main.java.com.liamd.giggity_app.VenueUserViewGigDetailsFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.util.Date.getMinutes()", "java.util.Date.getHours()"], "Fixed commit": "d038993eeef03d343a458f1b979fcd7972f51078", "Url": "https://api.github.com/repos/Woody1ooo/PRCO304-Giggity-App", "Date": "2017-03-05T22:50:37Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mParsedStartDate.getMinutes()) < 10) { mFormattedStartDateMinutes = \"0\" + (mParsedStartDate.getMinutes()); mStartTimeSelectedTextView.setText((((mParsedStartDate.getHours()) + \":\") + (mFormattedStartDateMinutes))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8787/buggy-version/app.src.main.java.com.liamd.giggity_app.VenueUserViewGigDetailsFragment.java", "BodyUseAPI": ["java.util.Date.getMinutes()", "android.widget.TextView.setText(java.lang.String)", "java.util.Date.getHours()"], "Fixed commit": "d038993eeef03d343a458f1b979fcd7972f51078", "Url": "https://api.github.com/repos/Woody1ooo/PRCO304-Giggity-App", "Date": "2017-03-05T22:50:37Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectedMinute < 10) { mStartTimeSelectedTextView.setText((((selectedHour + \":\") + \"0\") + selectedMinute)); }else { mStartTimeSelectedTextView.setText(((selectedHour + \":\") + selectedMinute)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8787/buggy-version/app.src.main.java.com.liamd.giggity_app.VenueUserViewGigDetailsFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "d038993eeef03d343a458f1b979fcd7972f51078", "Url": "https://api.github.com/repos/Woody1ooo/PRCO304-Giggity-App", "Date": "2017-03-05T22:50:37Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mParsedStartDate.getMinutes()) > 10) { mStartTimeSelectedTextView.setText((((mParsedStartDate.getHours()) + \":\") + (mParsedStartDate.getMinutes()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8787/buggy-version/app.src.main.java.com.liamd.giggity_app.VenueUserViewGigDetailsFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.util.Date.getHours()", "java.util.Date.getMinutes()"], "Fixed commit": "d038993eeef03d343a458f1b979fcd7972f51078", "Url": "https://api.github.com/repos/Woody1ooo/PRCO304-Giggity-App", "Date": "2017-03-05T22:50:37Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.fashare.activitytracker.Tile.instance) != null) { com.fashare.activitytracker.Tile.instance.onClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3432/buggy-version/app.src.main.java.com.fashare.activitytracker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7f36e886f6734894a6497802c369ff91ec8a775f", "Url": "https://api.github.com/repos/ysnows/ActivityTracker", "Date": "2017-02-09T01:58:30Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["params.getParserData.get(T)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.flowdev.parser.util.ParserUtil.matched(parserData.result())) { parserData.result().value(flow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2017/buggy-version/src.main.java.org.flowdev.flowparser.semantic.SemanticCreateConnections.java", "BodyUseAPI": ["org.flowdev.parser.data.ParserData.result()", "parserData.result().value(org.flowdev.flowparser.data.Flow)"], "Fixed commit": "ddaf040b09ab29cdd98c9f73d9f9d820a08baa8b", "Url": "https://api.github.com/repos/flowdev/flowparser", "Date": "2014-09-06T11:40:55Z"},
{"Line": "=>1023", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (joins != null) for (final SelectImpl.untyped.JOIN<?> join : joins) compilation.registerAlias(join.table);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2620/buggy-version/libx4j.rdb.jsql.src.main.java.org.libx4j.rdb.jsql.Compiler.java", "BodyUseAPI": [], "Fixed commit": "e5e85cb4030df3273292d7b0dee6aceffb5524fd", "Url": "https://api.github.com/repos/SevaSafris/java", "Date": "2017-10-03T03:25:17Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.axis2.context.MessageContext.getProperty(org.apache.axis2.Constants.Configuration.CONTENT_TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (contentTypeInMsgCtx != null) { java.lang.String contentTypeValueInMsgCtx = contentTypeInMsgCtx.toString(); if (!(contentTypeValueInMsgCtx.contains(PassThroughConstants.CONTENT_TYPE_MULTIPART_RELATED))) { if (format != null) { java.lang.String encoding = format.getCharSetEncoding(); if (encoding != null) { sourceResponse.removeHeader(HTTP.CONTENT_TYPE); contentTypeValueInMsgCtx += \"; charset=\" + encoding; } } sourceResponse.addHeader(HTTP.CONTENT_TYPE, contentTypeValueInMsgCtx); isContentTypeSetFromMsgCtx = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1929/buggy-version/modules.transports.core.nhttp.src.main.java.org.apache.synapse.transport.passthru.PassThroughHttpSender.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "ac9cf26ac1f3ad93c157f36b7a4323cca977c74a", "Url": "https://api.github.com/repos/sandamal/wso2-synapse", "Date": "2014-07-01T11:00:09Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["paquitoapp.data.AccountDAO.readAccount(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((account.getAccountIdentifier()) == null) { throw new paquitoapp.controller.notification.helpers.NotificationException((\"Account not found with identifier: \" + accountIdentifier), paquitoapp.controller.notification.helpers.AppDirectErrorCode.ACCOUNT_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2406/buggy-version/src.main.java.paquitoapp.service.NotificationService.java", "BodyUseAPI": [], "Fixed commit": "aac47dcb9e90b7e18de20d86293d93be978584db", "Url": "https://api.github.com/repos/pachoclo/francAppChallenge", "Date": "2016-07-20T02:57:29Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((walls) != null) walls.paint(g);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3155/buggy-version/GUI.Component.Map.java", "BodyUseAPI": [], "Fixed commit": "b24df011ba247423c0a4e307aa76dfabd5de2c82", "Url": "https://api.github.com/repos/abhinavkadiyala/TencTreble2", "Date": "2015-06-12T20:47:21Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((actualType.asReferenceType().typeParametersValues().size()) > 0) { int i = 0; for (com.github.javaparser.symbolsolver.model.typesystem.Type tp : expectedType.asReferenceType().typeParametersValues()) { matchTypeParameters(tp, actualType.asReferenceType().typeParametersValues().get(i), matchedTypeParameters); i++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1391/buggy-version/java-symbol-solver-core.src.main.java.com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.java", "BodyUseAPI": ["actualType.asReferenceType().typeParametersValues().get(int)", "actualType.asReferenceType().typeParametersValues()", "com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType()", "com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.matchTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.Type,actualType.asReferenceType().typeParametersValues().get(i),java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.model.typesystem.Type>)"], "Fixed commit": "589ef928355cd91f3ec47a79f78ea9ca3f19bd5d", "Url": "https://api.github.com/repos/staslev/javasymbolsolver", "Date": "2017-05-10T18:08:39Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.iu.grnoc.flowspace_firewall.ControllerConnector.getSwitchProxies(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (proxies != null) { java.util.Iterator<edu.iu.grnoc.flowspace_firewall.Proxy> it = proxies.iterator(); while (it.hasNext()) { edu.iu.grnoc.flowspace_firewall.Proxy p = it.next(); p.disconnect(); it.remove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5045/buggy-version/src.main.java.edu.iu.grnoc.flowspace_firewall.FlowSpaceFirewall.java", "BodyUseAPI": ["java.util.List<edu.iu.grnoc.flowspace_firewall.Proxy>.iterator()"], "Fixed commit": "321c6c4995413800d2f806dd23271ffdf08957e8", "Url": "https://api.github.com/repos/GlobalNOC/FlowSpaceFirewall", "Date": "2015-07-24T00:13:25Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userAuthenticated) { org.springframework.security.core.userdetails.UserDetails userDetails = ((org.springframework.security.core.userdetails.UserDetails) (org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getPrincipal())); java.util.List<java.lang.String> subscriptionCategoryNames = userService.getSubscriptionCategoryNames(userDetails.getUsername()); model.addAttribute(\"subscriptionCategories\", subscriptionCategoryNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1430/buggy-version/web-ui.src.main.java.org.podcastpedia.web.podcasts.PodcastController.java", "BodyUseAPI": [], "Fixed commit": "9b8d6ec494a526ca250a2507cf6220a72f6c4c0b", "Url": "https://api.github.com/repos/Codingpedia/podcastpedia", "Date": "2016-03-29T19:39:40Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.M[r][k]) > 0) && ((M2.M[k][c]) > 0)) productMatrix.M[r][c] = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8408/buggy-version/src.cs2130p4.BMat.java", "BodyUseAPI": [], "Fixed commit": "8ce5102c7e2d491e0b25b7605aae3441b30eb8f4", "Url": "https://api.github.com/repos/BrashFlea/CS2130-Project-4", "Date": "2017-12-02T17:40:31Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonObject.has(\"customCurrencySymbol\")) { customCurrencySymbol = jsonObject.getString(\"customCurrencySymbol\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/431/buggy-version/app.src.main.java.org.emoncms.myapps.myelectric.MyElectricSettings.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "ab635fb97bcc3c0d80b79470cb1935e6028666c8", "Url": "https://api.github.com/repos/tamslinn/AndroidApp", "Date": "2017-04-20T19:33:31Z"},
{"Line": "=>2833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.lwjgl.input.Keyboard.getEventKey()) == (settings.toggleReachDistance.key)) { gamemode.reachDistance = ((gamemode.reachDistance) == 500) ? 5 : 500; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3456/buggy-version/src.main.java.com.mojang.minecraft.Minecraft.java", "BodyUseAPI": [], "Fixed commit": "a691c5c07bc87c2091dbcf67d20aa4e72afb481d", "Url": "https://api.github.com/repos/AKohn/ClassiCube-Client", "Date": "2014-04-23T20:06:22Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((starts_at) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6625/buggy-version/app.src.main.java.com.randomappsinc.padbuddy.Models.Timeslot.java", "BodyUseAPI": [], "Fixed commit": "d863242a7b98d66dcf97e4026954d638c6b5d1a8", "Url": "https://api.github.com/repos/Loche/PADNotifier", "Date": "2015-01-07T08:10:44Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentTimeslot.getStarts_at()) != null) { if ((m_prefs_manager.isDungeonAllowed(currentTimeslot.getTitle())) && (((currentTimeslot.getStarts_at().getTimeInMillis()) + ((1000 * 60) * 60)) >= (java.lang.System.currentTimeMillis()))) { android.app.PendingIntent pIntent = android.app.PendingIntent.getBroadcast(context, request_id, new android.content.Intent(context, com.randomappsinc.padbuddy.Alarms.MetalsAlarmReceiver.class), 0); alarmIntents.add(pIntent); alarmMgr.set(AlarmManager.RTC_WAKEUP, currentTimeslot.getStarts_at().getTimeInMillis(), pIntent); android.util.Log.i(com.randomappsinc.padbuddy.Alarms.MetalsAlarmReceiver.TAG, (((\"Metals alarm set: \" + (currentTimeslot.getTitle())) + \" at \") + (com.randomappsinc.padbuddy.Misc.Util.calendarToExactTime(currentTimeslot.getStarts_at())))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6625/buggy-version/app.src.main.java.com.randomappsinc.padbuddy.Alarms.MetalsAlarmReceiver.java", "BodyUseAPI": ["com.randomappsinc.padbuddy.Models.Timeslot.getTitle()", "com.randomappsinc.padbuddy.Misc.PreferencesManager.isDungeonAllowed(currentTimeslot.getTitle())", "com.randomappsinc.padbuddy.Models.Timeslot.getStarts_at()", "android.util.Log.i(java.lang.String,(((\"Metals alarm set: \" + (currentTimeslot.getTitle())) + \" at \") + (com.randomappsinc.padbuddy.Misc.Util.calendarToExactTime(currentTimeslot.getStarts_at()))))", "com.randomappsinc.padbuddy.Models.Timeslot.getStarts_at()", "currentTimeslot.getStarts_at().getTimeInMillis()", "com.randomappsinc.padbuddy.Models.Timeslot.getStarts_at()", "currentTimeslot.getStarts_at().getTimeInMillis()", "com.randomappsinc.padbuddy.Models.Timeslot.getTitle()", "android.app.AlarmManager.set(AlarmManager.RTC_WAKEUP,currentTimeslot.getStarts_at().getTimeInMillis(),android.app.PendingIntent)", "com.randomappsinc.padbuddy.Misc.Util.calendarToExactTime(currentTimeslot.getStarts_at())"], "Fixed commit": "d863242a7b98d66dcf97e4026954d638c6b5d1a8", "Url": "https://api.github.com/repos/Loche/PADNotifier", "Date": "2015-01-07T08:10:44Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target.invisible) > 0) (target.invisible)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2104/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.java", "BodyUseAPI": [], "Fixed commit": "0ae1b05b22ed83f35e9d228a4d54ef70d9f7b0cb", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2015-01-21T18:40:27Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.imageio.ImageIO.read(java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (image != null) { lastRender.setIcon(new javax.swing.ImageIcon(image)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5546/buggy-version/src.com.sheepit.client.standalone.swing.activity.Working.java", "BodyUseAPI": ["javax.swing.JLabel.setIcon(javax.swing.ImageIcon)"], "Fixed commit": "84956b06cb406d617d7f2925fa2a76887ad8e992", "Url": "https://api.github.com/repos/supersammy7000/sheepit-client", "Date": "2016-09-11T11:33:34Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str == null) || (str.isEmpty())) { return map; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8130/buggy-version/bootstrap.src.main.java.com.navercorp.pinpoint.bootstrap.PinpointBootStrap.java", "BodyUseAPI": [], "Fixed commit": "182217292e8fc7154b734d971f723006892b4071", "Url": "https://api.github.com/repos/nstopkimsk/pinpoint", "Date": "2015-02-10T08:58:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(libPath.exists())) { libPath.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5743/buggy-version/service.phresco-service-impl.src.main.java.com.photon.phresco.service.dependency.impl.AbstractJsLibDependencyProcessor.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "180e3d913796e8538b855f65ef74ebcfd90343cd", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-10-10T11:11:41Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(modulesPath.exists())) { modulesPath.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5743/buggy-version/service.phresco-service-impl.src.main.java.com.photon.phresco.service.dependency.impl.AbstractDependencyProcessor.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "180e3d913796e8538b855f65ef74ebcfd90343cd", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-10-10T11:11:41Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (background)) { background = convertView.getBackground(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/795/buggy-version/app.src.main.java.binauld.pierre.musictag.adapter.LibraryComponentAdapter.java", "BodyUseAPI": [], "Fixed commit": "2cea7761ed0c65d3a7c5961086a8b92d028c2af8", "Url": "https://api.github.com/repos/pierre-binauld/music-tag", "Date": "2015-02-09T19:35:49Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == other) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/57/buggy-version/JGraphs.src.main.Edges.Edge.java", "BodyUseAPI": [], "Fixed commit": "b146af78b69628a5f1227f4acb4574d4347a3474", "Url": "https://api.github.com/repos/venkatkorapaty/JGraphs-API", "Date": "2017-04-30T04:14:30Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/57/buggy-version/JGraphs.src.main.Edges.Edge.java", "BodyUseAPI": [], "Fixed commit": "b146af78b69628a5f1227f4acb4574d4347a3474", "Url": "https://api.github.com/repos/venkatkorapaty/JGraphs-API", "Date": "2017-04-30T04:14:30Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((other.getClass()) != (getClass())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/57/buggy-version/JGraphs.src.main.Edges.Edge.java", "BodyUseAPI": [], "Fixed commit": "b146af78b69628a5f1227f4acb4574d4347a3474", "Url": "https://api.github.com/repos/venkatkorapaty/JGraphs-API", "Date": "2017-04-30T04:14:30Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getResearchObjectComponent().getResearchObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ro.getAnnotationsByBodyUri().get(event.getResearchObjectComponent().getUri())) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2062/buggy-version/src.main.java.pl.psnc.dl.wf4ever.eventbus.listeners.NotificationsListener.java", "BodyUseAPI": [], "Fixed commit": "7446b2d691eaedddaae16468de23995dc84aaae2", "Url": "https://api.github.com/repos/pejot/rodl", "Date": "2014-01-13T17:38:53Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getResearchObjectComponent()) instanceof pl.psnc.dl.wf4ever.model.AO.Annotation) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2062/buggy-version/src.main.java.pl.psnc.dl.wf4ever.eventbus.listeners.NotificationsListener.java", "BodyUseAPI": [], "Fixed commit": "7446b2d691eaedddaae16468de23995dc84aaae2", "Url": "https://api.github.com/repos/pejot/rodl", "Date": "2014-01-13T17:38:53Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.util.Objects.equals(cloudSdkDirectoryField.getText(), path))) { cloudSdkDirectoryField.setText(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6995/buggy-version/google-cloud-tools-plugin.src.com.google.cloud.tools.intellij.appengine.sdk.CloudSdkPanel.java", "BodyUseAPI": ["com.intellij.openapi.ui.TextFieldWithBrowseButton.setText(java.lang.String)"], "Fixed commit": "9c11ee8acbd56a28e9e36674dfd7027f2f08b13a", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-intellij", "Date": "2016-12-02T21:52:42Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) != null) { mPoiInfo.clear(); mAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2355/buggy-version/AndroidProject.cybercar.app.src.main.java.com.fat246.cybercar.fragments.InitNavigateFragment.java", "BodyUseAPI": [], "Fixed commit": "f3378029029bcfff124f53af2ccc51121fd88bb7", "Url": "https://api.github.com/repos/brainysoon/cyberCar", "Date": "2016-06-19T11:44:00Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (j != null) { for (jenkins.model.lazy.BuildReference.HolderFactory f : j.getExtensionList(jenkins.model.lazy.BuildReference.HolderFactory.class)) { jenkins.model.lazy.BuildReference.Holder<R> h = f.make(referent); if (h != null) { jenkins.model.lazy.BuildReference.LOGGER.log(java.util.logging.Level.FINE, \"created build reference for {0} using {1}\", new java.lang.Object[]{ referent, f }); return h; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4495/buggy-version/core.src.main.java.jenkins.model.lazy.BuildReference.java", "BodyUseAPI": ["jenkins.model.Jenkins.getExtensionList(java.lang.Class)"], "Fixed commit": "0958b28b0875c5a864614f37a862a05bedc45aec", "Url": "https://api.github.com/repos/jglick/jenkins", "Date": "2013-12-10T21:52:38Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mEquation.isEmpty()) { if (mEquation.isEmpty()) { return; } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3516/buggy-version/app.src.main.java.com.chirag.calculator.calculator.MainActivity.java", "BodyUseAPI": ["java.lang.String.isEmpty()"], "Fixed commit": "f2abface08c09b29812f953dd2d590e3eab53715", "Url": "https://api.github.com/repos/spafindoople/calculator", "Date": "2016-12-05T00:30:50Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path == null) || ((path.indexOf('/', 1)) == (-1))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6618/buggy-version/src.core.lombok.eclipse.EclipseAST.java", "BodyUseAPI": [], "Fixed commit": "5e6cdb07ef1a89f8047904fd2e00f574bc7ca1bf", "Url": "https://api.github.com/repos/arielnetworks/lombok", "Date": "2014-08-15T23:33:51Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (m == (java.lang.Double.NaN)) return 0; else return m;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/493/buggy-version/src.jclustering.Cluster.java", "BodyUseAPI": [], "Fixed commit": "74e39f84f83295a9b33c67b7b83d254ecba7246a", "Url": "https://api.github.com/repos/HGGM-LIM/jclustering", "Date": "2012-09-12T15:47:00Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (freeModel.getName().equals((freeModelName + (org.openflexo.foundation.fml.rt.rm.VirtualModelInstanceResourceFactory.VIRTUAL_MODEL_INSTANCE_SUFFIX)))) { return freeModel; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1792/buggy-version/freemodellingeditor.src.main.java.org.openflexo.fme.model.FreeModellingProject.java", "BodyUseAPI": [], "Fixed commit": "4de0e2653d248b51611b7bb6d48a246f7de62bb2", "Url": "https://api.github.com/repos/openflexo-team/openflexo-modules", "Date": "2016-09-14T07:18:59Z"},
{"Line": "=>1419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) { if (defaultValue == null) throw new railo.runtime.exp.ExpressionException(((\"The required parameter [\" + name) + \"] was not provided.\")); value = defaultValue; isNew = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7781/buggy-version/railo-java.railo-core.src.railo.runtime.PageContextImpl.java", "BodyUseAPI": [], "Fixed commit": "c1acd07003f36bdf77998e21f1930937e7ae8a52", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-11-27T08:12:31Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState == null) { showMoviesBy = com.example.android.popularmovies.MainActivity.SHOW_POPULAR; }else { showMoviesBy = savedInstanceState.getInt(com.example.android.popularmovies.MainActivity.SHOW_MOVIES_BY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1724/buggy-version/app.src.main.java.com.example.android.popularmovies.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "8b8f0c963751cc1e9ed5796d1289213c93a68fa8", "Url": "https://api.github.com/repos/CreMindES/udacity_PopularMovies", "Date": "2017-03-29T07:52:20Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((speed) == 0) { this.play(soundMap.get(\"0\"), 700); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/9028/buggy-version/app.src.main.java.com.amk2.musicrunner.running.NotificationCenter.java", "BodyUseAPI": [], "Fixed commit": "01dcae3a42429d38ac6c6b9e5ee0f1776d36aa94", "Url": "https://api.github.com/repos/rufuslee/MusicRunner", "Date": "2014-07-10T15:09:14Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((calories) == 0) { this.play(soundMap.get(\"0\"), 700); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/9028/buggy-version/app.src.main.java.com.amk2.musicrunner.running.NotificationCenter.java", "BodyUseAPI": [], "Fixed commit": "01dcae3a42429d38ac6c6b9e5ee0f1776d36aa94", "Url": "https://api.github.com/repos/rufuslee/MusicRunner", "Date": "2014-07-10T15:09:14Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((distance) == 0) { this.play(soundMap.get(\"0\"), 700); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/9028/buggy-version/app.src.main.java.com.amk2.musicrunner.running.NotificationCenter.java", "BodyUseAPI": [], "Fixed commit": "01dcae3a42429d38ac6c6b9e5ee0f1776d36aa94", "Url": "https://api.github.com/repos/rufuslee/MusicRunner", "Date": "2014-07-10T15:09:14Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (quantityMatcher.find()) { java.lang.String quantityString = quantityMatcher.group(1); item = item.replaceAll(quantityString, \"\"); quantityString = quantityString.replaceAll(\"x\", \"\"); quantityString = quantityString.replaceAll(\" \", \"\"); quantity = java.lang.Integer.parseInt(quantityString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/942/buggy-version/EQTools.src.eqtools.LogParser.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "28213c425f8c61fd23c36f16c746f70607fd9148", "Url": "https://api.github.com/repos/aaronze/SingorrEQTools", "Date": "2016-09-27T10:45:10Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOwner) { return new com.example.nofarcohenzedek.dogo.MyWalkersList(userId); }else { return new com.example.nofarcohenzedek.dogo.DogsListFragment(userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4274/buggy-version/app.src.main.java.com.example.nofarcohenzedek.dogo.ActionBarActivity.java", "BodyUseAPI": [], "Fixed commit": "ed1234dc21b02ab1adc175d5630128d48270467d", "Url": "https://api.github.com/repos/nofar9792/Nofar", "Date": "2016-06-08T15:34:06Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (order != null) if (isOrderValidForClosing(order)) return handleOrderTask(IOrder.State.CLOSED, new com.jforex.programming.concurrent.OrderClosingTask(orderUtils, order));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5758/buggy-version/Utils.src.main.java.com.jforex.programming.order.OrderSubmissionPolicy.java", "BodyUseAPI": ["com.jforex.programming.order.OrderSubmissionPolicy.handleOrderTask(IOrder.State.CLOSED,com.jforex.programming.concurrent.OrderClosingTask)", "com.jforex.programming.order.OrderSubmissionPolicy.isOrderValidForClosing(com.dukascopy.api.IOrder)"], "Fixed commit": "610150bfa30278c5ad567346359dd3af671c0e77", "Url": "https://api.github.com/repos/juxeii/JForexUtils", "Date": "2014-05-29T15:22:28Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldTask == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8638/buggy-version/core.src.main.java.com.novoda.imageloader.core.loader.ConcurrentLoader.java", "BodyUseAPI": [], "Fixed commit": "132698e4644ce2b7058c6cdb7089b3d8f60e3fa1", "Url": "https://api.github.com/repos/kidfolk/ImageLoader", "Date": "2013-01-14T14:12:22Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (animation == null) { animation = new android.view.animation.AnimationSet(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8638/buggy-version/core.src.main.java.com.novoda.imageloader.core.model.ImageTagFactory.java", "BodyUseAPI": [], "Fixed commit": "132698e4644ce2b7058c6cdb7089b3d8f60e3fa1", "Url": "https://api.github.com/repos/kidfolk/ImageLoader", "Date": "2013-01-14T14:12:22Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.Zeitline.Event.L2TEvent.labels) == null) { InitializeLabels(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3993/buggy-version/src.org.Zeitline.Event.L2TEvent.java", "BodyUseAPI": [], "Fixed commit": "41cb40919ebadb710c6d903640258502df3c4533", "Url": "https://api.github.com/repos/baltek/Zeitline", "Date": "2012-04-15T17:29:57Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.wifi.WifiManager.getConfiguredNetworks()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (wcs == null) { ssidEntries = new java.lang.String[n]; ssidEntries[0] = org.proxydroid.utils.Constraints.WIFI_AND_3G; ssidEntries[1] = org.proxydroid.utils.Constraints.ONLY_WIFI; ssidEntries[2] = org.proxydroid.utils.Constraints.ONLY_3G; }else { ssidEntries = new java.lang.String[(wcs.size()) + n]; ssidEntries[0] = org.proxydroid.utils.Constraints.WIFI_AND_3G; ssidEntries[1] = org.proxydroid.utils.Constraints.ONLY_WIFI; ssidEntries[2] = org.proxydroid.utils.Constraints.ONLY_3G; for (android.net.wifi.WifiConfiguration wc : wcs) { if ((wc != null) && ((wc.SSID) != null)) ssidEntries[(n++)] = wc.SSID.replace(\"\\\"\", \"\"); else ssidEntries[(n++)] = \"unknown\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5591/buggy-version/src.org.proxydroid.ProxyDroid.java", "BodyUseAPI": ["java.util.List<android.net.wifi.WifiConfiguration>.size()"], "Fixed commit": "09b5872e976486fbcd32c575b5b288424ed287d5", "Url": "https://api.github.com/repos/madeye/proxydroid", "Date": "2012-07-19T09:01:47Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (authConfig == null) { authConfig = AuthConfig.EMPTY_AUTH_CONFIG; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7769/buggy-version/src.main.java.org.jolokia.docker.maven.access.DockerAccessWithHttpClient.java", "BodyUseAPI": [], "Fixed commit": "43698cdc73f390a0c2e3056420e036233e718fd6", "Url": "https://api.github.com/repos/rhuss/docker-maven-plugin", "Date": "2015-05-13T19:55:25Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bytenote.JFXMain.confirmExit()) { JFXMain.mainStage.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/9150/buggy-version/src.bytenote.CAction.java", "BodyUseAPI": [], "Fixed commit": "ab1a8d8e75c28f8cd2a9145ddde1ff6747f47bec", "Url": "https://api.github.com/repos/TheGreatGeek25/ByteNote", "Date": "2017-09-28T02:19:30Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(victim instanceof org.bukkit.entity.Player)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6517/buggy-version/src.com.wesley27.headshoteffects.Headshoteffects.java", "BodyUseAPI": [], "Fixed commit": "68efb9e3469840317880d30ddb4cd98c02bc2358", "Url": "https://api.github.com/repos/wesley27/HeadshotEffects", "Date": "2014-07-31T03:10:13Z"},
{"Line": "=>932", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mapContainer.getStore().loadAll(keys.values())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((values == null) || (values.isEmpty())) { loaded.set(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4039/buggy-version/hazelcast.src.main.java.com.hazelcast.map.DefaultRecordStore.java", "BodyUseAPI": [], "Fixed commit": "d0d9ec216ab1eef4702be406d36310c9dd254690", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2013-11-19T10:46:04Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != responseString) android.util.Log.d(\"data error\", (\"\" + responseString));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8678/buggy-version/streamhub-comments.src.main.java.com.livefyre.comments.activities.NewActivity.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "72206ce57ac2838c2b7da6feb285bb1cdc2aa7f3", "Url": "https://api.github.com/repos/Livefyre/Android-Identity-Example", "Date": "2016-08-11T14:30:38Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (widget != null) { if (widget instanceof gwt.material.design.client.ui.MaterialHelpBlock) { return ((gwt.material.design.client.ui.MaterialHelpBlock) (widget)); } if (widget instanceof com.google.gwt.user.client.ui.HasWidgets) { for (com.google.gwt.user.client.ui.Widget w : ((com.google.gwt.user.client.ui.HasWidgets) (widget))) { if (w instanceof gwt.material.design.client.ui.MaterialHelpBlock) { return ((gwt.material.design.client.ui.MaterialHelpBlock) (w)); } } } return findHelpBlock(widget.getParent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2339/buggy-version/gwt-material.src.main.java.gwt.material.design.client.base.error.DefaultErrorHandler.java", "BodyUseAPI": ["gwt.material.design.client.base.error.DefaultErrorHandler.findHelpBlock(widget.getParent())", "com.google.gwt.user.client.ui.Widget.getParent()"], "Fixed commit": "484b5dfb650244d944e1254e9e3c380a1e2954c1", "Url": "https://api.github.com/repos/GwtMaterialDesign/gwt-material", "Date": "2016-06-09T04:57:27Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notificationStatus.equals(\"student_attending\")) { if ((com.taibah.busservice.utils.AppGlobals.getUserType()) == 2) { com.taibah.busservice.gcm.MyGcmListenerService.studentStatusChanged = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1473/buggy-version/app.src.main.java.com.taibah.busservice.gcm.MyGcmListenerService.java", "BodyUseAPI": [], "Fixed commit": "84e98f8a9f804e7a9c4497518b868a72f9c1628b", "Url": "https://api.github.com/repos/imranhakeem/bus-service", "Date": "2016-03-26T10:25:38Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((token.length) != 4) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5898/buggy-version/src.cecs.scm.commands.CheckoutCommand.java", "BodyUseAPI": [], "Fixed commit": "2eab2767b5970a875615ccea76b9e4dccd69ee81", "Url": "https://api.github.com/repos/noel09/cecs-scm", "Date": "2017-05-12T07:23:30Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dayOfMonth < 10) { sDay = \"0\" + (java.lang.String.valueOf(dayOfMonth)); }else { sDay = java.lang.String.valueOf(dayOfMonth); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3366/buggy-version/app.src.main.java.com.example.i7.jobbalagom.fragments.AddExpenseFragment.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)"], "Fixed commit": "9b0a73055097cd253f2d2e5363ba7101834b2d72", "Url": "https://api.github.com/repos/Baxtex/Jobba_Lagom", "Date": "2016-05-28T14:52:53Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cause instanceof org.eclipse.paho.client.mqttv3.MqttException) { if ((((org.eclipse.paho.client.mqttv3.MqttException) (cause)).getReasonCode()) == 32202) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/108/buggy-version/src.main.java.com.hileco.drpc.mqtt.MqttDrpcClientBuilder.java", "BodyUseAPI": [], "Fixed commit": "79f9537979aa0324d7737bac229cafaca1307b3b", "Url": "https://api.github.com/repos/SkPhilipp/mqtt-drpc", "Date": "2015-02-13T20:25:26Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(client.isNotLoggedIn())) { queueMessageToClient(client1, msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1347/buggy-version/src.main.java.server.Server.java", "BodyUseAPI": [], "Fixed commit": "850596d1d2d9352a13b74fc1603674623bf62678", "Url": "https://api.github.com/repos/ilysion/CommandlineBuddy", "Date": "2017-05-16T18:49:48Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attr.contains(Keys.INPUT_COUNT)) { size = 1 << (attr.get(Keys.INPUT_COUNT)); }else { size = 1 << (attr.get(Keys.ADDR_BITS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/703/buggy-version/src.main.java.de.neemann.digital.gui.components.EditorFactory.java", "BodyUseAPI": ["de.neemann.digital.core.element.ElementAttributes.get(Keys.ADDR_BITS)", "de.neemann.digital.core.element.ElementAttributes.get(Keys.INPUT_COUNT)"], "Fixed commit": "9f7fe517cdcc478565fd48eef5ef04366712b150", "Url": "https://api.github.com/repos/hneemann/Digital", "Date": "2016-11-16T16:53:30Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teamtreehouse.flashy.services.FlashCardService.getCurrentCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (totalCount > (com.teamtreehouse.flashy.controllers.IndexController.MAX_ITEMS_TO_SHOW)) { ctaBuilder.append(\" and \"); ctaBuilder.append(totalCount); ctaBuilder.append(\" more\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8613/buggy-version/src.main.java.com.teamtreehouse.flashy.controllers.IndexController.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.Long)"], "Fixed commit": "c2852577268baefa5f490429c493031ce1f33469", "Url": "https://api.github.com/repos/kpfromer/java-debugging-flashy", "Date": "2017-03-20T18:10:05Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.size()) <= n) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7864/buggy-version/src.main.java.org.inbarda.snapengage.persistence.dao.LocalChatDao.java", "BodyUseAPI": [], "Fixed commit": "56443249f9e9190b6d3c2304855b3ca5dc2fc768", "Url": "https://api.github.com/repos/inbar/snapengage", "Date": "2016-02-21T21:46:43Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.reqlist.util.AssertUtils.isNotNull(email)) { format = java.lang.String.format(UserService.GRAVATAR_URL_TEMPLATE, org.reqlist.util.Hash.md5(email)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5711/buggy-version/src.main.java.org.reqlist.entity.User.java", "BodyUseAPI": ["java.lang.String.format(UserService.GRAVATAR_URL_TEMPLATE,org.reqlist.util.Hash.md5(email))", "org.reqlist.util.Hash.md5(java.lang.String)"], "Fixed commit": "e6ea1b9782dc26f0aa900faab023d23a8e6bc176", "Url": "https://api.github.com/repos/viniciuspires/reqlist", "Date": "2015-03-21T01:10:52Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTrackingStarted())) { pauseListener(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7193/buggy-version/faims-android-app.src.au.org.intersect.faims.android.gps.GPSDataManager.java", "BodyUseAPI": [], "Fixed commit": "a3bb2e06c9e018325696c6e699d7445e78a828f1", "Url": "https://api.github.com/repos/IntersectAustralia/faims-android", "Date": "2014-07-30T07:01:12Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((gpsDataManager.isTrackingStarted()) && (gpsDataManager.isExternalGPSStarted()))) { pauseConnection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7193/buggy-version/faims-android-app.src.au.org.intersect.faims.android.managers.BluetoothManager.java", "BodyUseAPI": [], "Fixed commit": "a3bb2e06c9e018325696c6e699d7445e78a828f1", "Url": "https://api.github.com/repos/IntersectAustralia/faims-android", "Date": "2014-07-30T07:01:12Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.getData()) == null) { bitmap = ((android.graphics.Bitmap) (data.getExtras().get(\"data\"))); }else { try { bitmap = MediaStore.Images.Media.getBitmap(this.getActivity().getContentResolver(), data.getData()); } catch (java.lang.Exception e) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6759/buggy-version/project3.app.src.main.java.com.example.nobell.project3.ui.FriendAddFragment.java", "BodyUseAPI": ["MediaStore.Images.Media.getBitmap(this.getActivity().getContentResolver(),data.getData())", "android.content.Intent.getData()", "data.getExtras().get(java.lang.String)", "android.content.Intent.getExtras()"], "Fixed commit": "83eefa6a2bd4eaa79936072a5510f2ce64d23ad5", "Url": "https://api.github.com/repos/heejongahn/madcamp_KAIST", "Date": "2016-01-12T07:46:08Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allStopped()) { android.content.SharedPreferences sharedPref = context.getSharedPreferences(context.getString(R.string.SHARED_PREFS_FILE), Context.MODE_PRIVATE); currentPracticeID = sharedPref.getInt(context.getString(R.string.CURRENT_PRACTICE_ID), 8); currentPractice = com.vbh.virtualboathouse.DataSaver.readObject(((context.getString(R.string.PRACTICE_FILE)) + (currentPracticeID)), context); currentPieceID = sharedPref.getLong(context.getString(R.string.CURRENT_PIECE_ID), 8); currentPiece = currentPractice.getPiece(currentPieceID); java.util.ArrayList<java.lang.Long> lineups = currentPiece.getLineups(); int j = 0; for (java.lang.Long lineupID : lineups) { currentPiece.setTime(lineupID, timers[j].getElapsedTime()); java.lang.StringBuilder strokeRateNote = new java.lang.StringBuilder(); boolean first = true; strokeRateNote.append(((timers[j].getBoatNameString()) + \": \")); for (java.lang.String note : timers[j].getStrokeNotes()) { if (!first) strokeRateNote.append(\", \"); first = false; strokeRateNote.append(note); } currentPiece.addStrokeRatingNotes(strokeRateNote.toString()); j++; } currentPractice.addPiece(currentPiece); com.vbh.virtualboathouse.DataSaver.writeObject(currentPractice, ((context.getString(R.string.PRACTICE_FILE)) + (currentPracticeID)), context); pickNewPiece(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3979/buggy-version/src.com.vbh.virtualboathouse.TimerControlsHandler.java", "BodyUseAPI": [], "Fixed commit": "f380b65dd4c610c65128573cd4dc06a1239cc78d", "Url": "https://api.github.com/repos/sfjordan/VirtualBH", "Date": "2014-05-07T05:59:45Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isBlank(description))) { if (!(org.jasig.portal.groups.pags.dao.PagsService.GROUP_DESC_VALIDATOR_PATTERN.matcher(description).matches())) { throw new java.lang.IllegalArgumentException((\"Specified description is too long or contains invalid characters: \" + description)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6286/buggy-version/uportal-war.src.main.java.org.jasig.portal.groups.pags.dao.PagsService.java", "BodyUseAPI": ["java.util.regex.Matcher.matches()", "java.util.regex.Pattern.matcher(java.lang.String)"], "Fixed commit": "fc249be16fea2cd678a869c95a3af48b30a8207b", "Url": "https://api.github.com/repos/Jasig/uPortal", "Date": "2015-06-15T16:47:33Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.jasig.portal.groups.pags.dao.PagsService.GROUP_NAME_VALIDATOR_PATTERN.matcher(groupName).matches())) { throw new java.lang.IllegalArgumentException((\"Specified groupName is too long, too short, or contains invalid characters: \" + groupName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6286/buggy-version/uportal-war.src.main.java.org.jasig.portal.groups.pags.dao.PagsService.java", "BodyUseAPI": [], "Fixed commit": "fc249be16fea2cd678a869c95a3af48b30a8207b", "Url": "https://api.github.com/repos/Jasig/uPortal", "Date": "2015-06-15T16:47:33Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(groupName)) { throw new java.lang.IllegalArgumentException((\"Specified groupName is blank: \" + groupName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6286/buggy-version/uportal-war.src.main.java.org.jasig.portal.groups.pags.dao.PagsService.java", "BodyUseAPI": [], "Fixed commit": "fc249be16fea2cd678a869c95a3af48b30a8207b", "Url": "https://api.github.com/repos/Jasig/uPortal", "Date": "2015-06-15T16:47:33Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tenantId == (-1L)) { resolvedTenantId = org.bonitasoft.console.common.server.utils.TenantsManagementUtils.getDefaultTenantId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2149/buggy-version/server.src.main.java.org.bonitasoft.console.common.server.login.impl.oauth.OAuthLoginManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "45aa2798a1e23ad322bb4ba3be14c000544b9f1c", "Url": "https://api.github.com/repos/bonitasoft/bonita-web", "Date": "2015-01-19T08:27:23Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keyCode == (right)) && ((xMove) > 0)) { xMove = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3258/buggy-version/src.breakout.Paddle.java", "BodyUseAPI": [], "Fixed commit": "d0ffaa0249964d03919e85b515710163480b1fb5", "Url": "https://api.github.com/repos/sederj/Breakout", "Date": "2017-04-19T22:30:24Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tmpdir.equals(\"/tmp\")) tmpdir = \"/data/local/tmp\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3135/buggy-version/core.src.main.java.fi.iki.elonen.NanoHTTPD.java", "BodyUseAPI": [], "Fixed commit": "7991744d004081153a3ea372cb6151ecc98de455", "Url": "https://api.github.com/repos/PATHocong/nanohttpd", "Date": "2014-08-12T12:00:02Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (android.app.Activity.RESULT_OK)) { android.graphics.Bitmap b = getBitmap(intent); imagePreview.setImageBitmap(b); addImage(b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/293/buggy-version/CompleteMyTask.src.ca.ualberta.cs.completemytask.activities.ViewImageActivity.java", "BodyUseAPI": [], "Fixed commit": "af47097557f143a9578447c7a1a4d08b3f18aaa5", "Url": "https://api.github.com/repos/mdfeist/CMPUT301F12T12", "Date": "2012-11-27T20:34:07Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (component.hasIP) { recipientSelectors = java.util.Arrays.asList(((cz.cuni.mff.d3s.deeco.network.DirectRecipientSelector) (directRecipientSelector))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6718/buggy-version/jdeeco-simulation-demo.src.cz.cuni.mff.d3s.jdeeco.simulation.demo.Main.java", "BodyUseAPI": [], "Fixed commit": "6d08a9816aaea7aeedf6cc669fef286ea826451b", "Url": "https://api.github.com/repos/d3scomp/JDEECo", "Date": "2014-03-31T14:16:03Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((stringlist.length) == 0) { return org.dunoid.web.http.HttpData.MIME_Type.TEXT_PLAIN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5197/buggy-version/src.org.dunoid.web.http.HttpData.java", "BodyUseAPI": [], "Fixed commit": "54ca093af4aa3e608046f50adabee5a3912063b6", "Url": "https://api.github.com/repos/Dunoid/Serve", "Date": "2017-02-20T02:49:52Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.jimple.ArrayRef.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (arType instanceof soot.UnknownType) { soot.Type t = findArrayType(g, localDefs, localUses, stmt, 0, java.util.Collections.<soot.Unit>emptySet()); soot.dexpler.Debug.printDbg(\" array type:\", t); if (t instanceof soot.UnknownType) usedAsFloatingPoint = false; else { if (!(t instanceof soot.ArrayType)) throw new java.lang.RuntimeException(\"Expected an array type for an array reference\"); usedAsFloatingPoint = isFloatingPointLike(((soot.ArrayType) (t)).getArrayElementType()); } }else { usedAsFloatingPoint = isFloatingPointLike(ar.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2694/buggy-version/src.soot.dexpler.DexNumTransformer.java", "BodyUseAPI": [], "Fixed commit": "21799d75bbddd3824df75c7f27ce25e03134895b", "Url": "https://api.github.com/repos/titze/soot", "Date": "2014-07-31T09:46:35Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.dexpler.DexNumTransformer.1.findArrayType(soot.toolkits.graph.ExceptionalUnitGraph,soot.toolkits.scalar.SmartLocalDefs,soot.toolkits.scalar.SimpleLocalUses,soot.jimple.AssignStmt,int,java.util.Set<soot.Unit>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(t instanceof soot.ArrayType)) throw new java.lang.RuntimeException(\"Expected an array type for an array reference\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2694/buggy-version/src.soot.dexpler.DexNumTransformer.java", "BodyUseAPI": [], "Fixed commit": "21799d75bbddd3824df75c7f27ce25e03134895b", "Url": "https://api.github.com/repos/titze/soot", "Date": "2014-07-31T09:46:35Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.hasValue())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/224/buggy-version/src.main.java.net.aufdemrand.denizen.tags.core.FlagTags.java", "BodyUseAPI": [], "Fixed commit": "cd637269563b71e099267d72377864a4fd9fbdd1", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-04-02T04:48:48Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((patient) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7652/buggy-version/app.src.main.java.ro.codetwister.hackathon2017.ui.PatientImageView.java", "BodyUseAPI": [], "Fixed commit": "68dba34ee532ebee2fadf99af77dcb487076e66d", "Url": "https://api.github.com/repos/andrewxd23/healthcare", "Date": "2017-11-18T18:04:19Z"},
{"Line": "=>794", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<ink.va.models.GroupMessagesModel>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(singleModel.getFileName().isEmpty())) { java.lang.String encoded = android.net.Uri.encode(singleModel.getFileName()); java.lang.String url = ((ink.va.utils.Constants.MAIN_URL) + (ink.va.utils.Constants.UPLOADED_FILES_DIR)) + encoded; android.content.Intent intent = new android.content.Intent(this, ink.va.activities.FullscreenActivity.class); intent.putExtra(\"link\", url); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1742/buggy-version/app.src.main.java.ink.va.activities.SingleGroupView.java", "BodyUseAPI": ["android.net.Uri.encode(singleModel.getFileName())", "ink.va.models.GroupMessagesModel.getFileName()"], "Fixed commit": "a353424d53b030acf2dccef06bd7cb69bef3e925", "Url": "https://api.github.com/repos/vladimirarevshatyan/Ink", "Date": "2017-01-30T21:03:42Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.isDirectory()) { installed.addAll(installPatchFolder(f, keepChangeConfigIni)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1774/buggy-version/main.plugins.org.talend.updates.runtime.src.main.java.org.talend.updates.runtime.engine.P2Installer.java", "BodyUseAPI": ["java.util.Set<org.talend.updates.runtime.engine.InstalledUnit>.addAll(java.util.Set<org.talend.updates.runtime.engine.InstalledUnit>)", "org.talend.updates.runtime.engine.P2Installer.installPatchFolder(java.io.File,boolean)"], "Fixed commit": "92fc9b044a91714f6be61d5a2b141f229b201574", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-12-02T03:38:44Z"},
{"Line": "=>1953", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromChain) { checkState((result != (TransactionInput.ConnectionResult.ALREADY_SPENT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5031/buggy-version/core.src.main.java.org.bitcoinj.core.Wallet.java", "BodyUseAPI": [], "Fixed commit": "8a5c415bd71bcda3a26b4fc8bcde191c096665dc", "Url": "https://api.github.com/repos/Groestlcoin/groestlcoinj", "Date": "2014-12-04T16:09:53Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bingo.lang.Strings.isNotBlank(entitySet)) { context.setEntitySet(services.findEntitySet(entitySet)); context.setEntityType(services.findEntityType(context.getEntitySet().getEntityType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2222/buggy-version/odata-consumer.src.main.java.bingo.odata.consumer.ODataConsumerImpl.java", "BodyUseAPI": ["bingo.odata.ODataServices.findEntitySet(java.lang.String)", "bingo.odata.consumer.ODataConsumerContext.setEntitySet(services.findEntitySet(entitySet))"], "Fixed commit": "53e467a47f15530e554dbf8460eaa9f7027f6bd0", "Url": "https://api.github.com/repos/bingo-open-source/bingo-odata", "Date": "2013-07-01T06:57:36Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(pair.getRight().getProperties().containsKey(BlockToolTable.TABLES))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1215/buggy-version/src.main.java.tconstruct.tools.inventory.ContainerPartBuilder.java", "BodyUseAPI": [], "Fixed commit": "3da85ee0d7c68540881d91b7672b612005a9969d", "Url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct", "Date": "2015-08-17T12:48:32Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlockState(net.minecraft.util.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (state.getProperties().containsKey(BlockToolTable.TABLES)) { tconstruct.tools.block.BlockToolTable.TableTypes type = ((tconstruct.tools.block.BlockToolTable.TableTypes) (state.getValue(BlockToolTable.TABLES))); if ((type != null) && (type == (BlockToolTable.TableTypes.CraftingStation))) hasMaster = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1215/buggy-version/src.main.java.tconstruct.tools.inventory.ContainerTinkerStation.java", "BodyUseAPI": ["net.minecraft.block.state.IBlockState.getValue(BlockToolTable.TABLES)"], "Fixed commit": "3da85ee0d7c68540881d91b7672b612005a9969d", "Url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct", "Date": "2015-08-17T12:48:32Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.hello2morrow.sonargraph.jenkinsplugin.persistence.ReportFileReader.PACKAGE_CYCLE_GROUP_IDENTIFIER.equals(group.getNamedElementGroup()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6113/buggy-version/src.main.java.com.hello2morrow.sonargraph.jenkinsplugin.persistence.ReportFileReader.java", "BodyUseAPI": [], "Fixed commit": "1ba68cecc40c28a7cdbdc31c1db27f979b938cc1", "Url": "https://api.github.com/repos/jenkinsci/sonargraph-plugin", "Date": "2013-06-13T14:06:19Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.getElementsByClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(isPollElement.isEmpty())) { tmpElmA = isPollElement.first().getElementsByClass(\"text_fmt\").first(); }else { tmpElmA = elm.getElementsByClass(\"post_fmt\").first(); tmpElms = tmpElmA.getElementsByClass(\"post_sig_fmt\"); if ((tmpElms != null) && (!(tmpElms.isEmpty()))) { tmpElmB = tmpElms.first(); tmpElmB.remove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6642/buggy-version/src.pages.Page4WebMD.java", "BodyUseAPI": ["isPollElement.first().getElementsByClass(\"text_fmt\").first()", "isPollElement.first().getElementsByClass(java.lang.String)", "org.jsoup.select.Elements.first()"], "Fixed commit": "efbc607a901d0298f2d3bbcd831c2e0be65ae13a", "Url": "https://api.github.com/repos/whh8b/csir-mp1", "Date": "2014-09-11T15:27:47Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(zipcodeView.getText().toString().equals(\"\"))) { postcode = java.lang.Long.valueOf(zipcodeView.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6522/buggy-version/app.src.main.java.com.github.handioq.fanshop.ui.signup.SignupActivity.java", "BodyUseAPI": ["java.lang.Long.valueOf(zipcodeView.getText().toString())", "android.widget.AutoCompleteTextView.getText()", "zipcodeView.getText().toString()"], "Fixed commit": "ba185915d07e0e2d0bff2b8be9aeba9032916aac", "Url": "https://api.github.com/repos/atereshkov/FanShopApp", "Date": "2016-12-14T19:05:22Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xtreemfs.osd.ec.ECReconstructionStage.StripeState.getReconstructor()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (reconstructor == null) { org.xtreemfs.foundation.logging.Logging.logMessage(Logging.LEVEL_DEBUG, Category.ec, this, \"Ignored already Event StripeReconstructed for file '%s' because it was already reconstructed.\", fileId); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7385/buggy-version/java.servers.src.org.xtreemfs.osd.ec.ECReconstructionStage.java", "BodyUseAPI": [], "Fixed commit": "12ee65e9e1c6a52f2212b1b7badcce6b8a45e795", "Url": "https://api.github.com/repos/kleingeist/xtreemfs", "Date": "2016-09-12T19:12:40Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { result = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/698/buggy-version/Civilizations.src.main.java.com.kylantraynor.civilizations.managers.ProtectionManager.java", "BodyUseAPI": [], "Fixed commit": "510dc6dcb15fed0b3490e9a15524e7497fc465f1", "Url": "https://api.github.com/repos/KylanTraynor/Civilizations", "Date": "2017-08-16T17:15:08Z"},
{"Line": "=>956", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((error) != null) && (!(hasUtilityModeProp))) { final java.lang.String errMsg = \"* Exiting due to network setup problem: \" + (error.toString()); throw new java.net.SocketException(errMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3003/buggy-version/src.java.soc.server.SOCServer.java", "BodyUseAPI": [], "Fixed commit": "31ac186cfd720f330af1e7edf88dd34f108854e0", "Url": "https://api.github.com/repos/jdmonin/JSettlers2", "Date": "2016-10-02T14:20:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nmeaParts[0].equalsIgnoreCase(\"$GPGSA\")) { if (((nmeaParts.length) > 16) && (!(com.mendhak.gpslogger.common.Utilities.IsNullOrEmpty(nmeaParts[16])))) { return nmeaParts[16]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8287/buggy-version/gpslogger.src.main.java.com.mendhak.gpslogger.loggers.nmea.NmeaSentence.java", "BodyUseAPI": ["com.mendhak.gpslogger.common.Utilities.IsNullOrEmpty(java.lang.String)"], "Fixed commit": "64250046adbf4f25473cd47da14d8b79d74d78c5", "Url": "https://api.github.com/repos/crearo/gpslogger", "Date": "2016-03-06T15:20:06Z"},
{"Line": "=>1422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof com.sun.jna.Structure.ByValue) { byte[] buf = new byte[size()]; m.read(0, buf, 0, buf.length); m1.write(0, buf, 0, buf.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6456/buggy-version/src.com.sun.jna.Structure.java", "BodyUseAPI": [], "Fixed commit": "c11e49d83e5402fc34548683a9caf448893e600b", "Url": "https://api.github.com/repos/lwahonen/jna", "Date": "2015-03-16T01:47:17Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.bpelunit.framework.control.deploy.activebpel.PartnerLinkType.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (javax.xml.XMLConstants.NULL_NS_URI.equals(pltQName.getNamespaceURI())) { pltQName = new javax.xml.namespace.QName(def.getTargetNamespace(), pltQName.getLocalPart()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/103/buggy-version/net.bpelunit.framework.src.main.java.net.bpelunit.framework.control.deploy.activebpel.ActiveBPELArchiveGenerator.java", "BodyUseAPI": ["javax.xml.namespace.QName.getLocalPart()"], "Fixed commit": "d9c983fd2b9b40a3438555b014c77b1186ca2bcf", "Url": "https://api.github.com/repos/bluezio/bpelunit", "Date": "2011-04-02T20:11:45Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(text.toString().isEmpty())) android.widget.Toast.makeText(this, \"Please, write only numbers :\\\\\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5550/buggy-version/app.src.main.java.com.pierfrancescosoffritti.eyeswapper.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c9ee666433c3f231db8d103c084180822e39c861", "Url": "https://api.github.com/repos/PierfrancescoSoffritti/EyeSwapper", "Date": "2015-12-21T00:40:51Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(text.toString().isEmpty())) android.widget.Toast.makeText(this, \"Please, write only numbers :\\\\\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5550/buggy-version/app.src.main.java.com.pierfrancescosoffritti.eyeswapper.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c9ee666433c3f231db8d103c084180822e39c861", "Url": "https://api.github.com/repos/PierfrancescoSoffritti/EyeSwapper", "Date": "2015-12-21T00:40:51Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getResult()) == (org.bukkit.event.player.PlayerLoginEvent.Result.ALLOWED)) com.bendude56.goldenapple.User.getUser(event.getPlayer());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8533/buggy-version/src.main.java.com.bendude56.goldenapple.listener.PermissionListener.java", "BodyUseAPI": ["com.bendude56.goldenapple.User.getUser(event.getPlayer())", "org.bukkit.event.player.PlayerLoginEvent.getPlayer()"], "Fixed commit": "590781dc275d3b8aea1a0205c3791b6d5aaa47e5", "Url": "https://api.github.com/repos/bendude56/GoldenApple", "Date": "2013-07-09T04:31:35Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ctx.getResources().getIdentifier(java.lang.String,java.lang.String,ctx.getApplicationInfo().packageName)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (smallIcon == 0) { smallIcon = icon; }else { icon = smallIcon; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5763/buggy-version/Ports.Android.src.com.codename1.impl.android.LocalNotificationPublisher.java", "BodyUseAPI": [], "Fixed commit": "905311a281560d4cdaf897d6b5313c64116bf6ac", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-03-29T22:40:14Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((canvas.getWidth()) == (org.msk86.ygoroid.newutils.Utils.screenHeight())) { updateActionTime(); }else { doDraw(canvas); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8090/buggy-version/src.org.msk86.ygoroid.views.YGOView.java", "BodyUseAPI": ["org.msk86.ygoroid.views.YGOView.doDraw(android.graphics.Canvas)"], "Fixed commit": "4cb262360bd5c537154c5bec210b0e78047393e9", "Url": "https://api.github.com/repos/msk86/YGORoid", "Date": "2014-03-20T15:14:33Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dimensionsComponent.boundBox) != null) { setWidth((((pixelPerWU * ((dimensionsComponent.boundBox.x) + (dimensionsComponent.boundBox.width))) * (transformComponent.scaleX)) / (camera.zoom))); setHeight((((pixelPerWU * ((dimensionsComponent.boundBox.y) + (dimensionsComponent.boundBox.height))) * (transformComponent.scaleY)) / (camera.zoom))); }else { setWidth((((pixelPerWU * (dimensionsComponent.width)) * (transformComponent.scaleX)) / (camera.zoom))); setHeight((((pixelPerWU * (dimensionsComponent.height)) * (transformComponent.scaleY)) / (camera.zoom))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6197/buggy-version/overlap2d.src.com.uwsoft.editor.view.ui.followers.BasicFollower.java", "BodyUseAPI": ["com.uwsoft.editor.view.ui.followers.BasicFollower.setHeight((((pixelPerWU * ((dimensionsComponent.boundBox.y) + (dimensionsComponent.boundBox.height))) * (transformComponent.scaleY)) / (camera.zoom)))", "com.uwsoft.editor.view.ui.followers.BasicFollower.setHeight((((pixelPerWU * (dimensionsComponent.height)) * (transformComponent.scaleY)) / (camera.zoom)))", "com.uwsoft.editor.view.ui.followers.BasicFollower.setWidth((((pixelPerWU * ((dimensionsComponent.boundBox.x) + (dimensionsComponent.boundBox.width))) * (transformComponent.scaleX)) / (camera.zoom)))", "com.uwsoft.editor.view.ui.followers.BasicFollower.setWidth((((pixelPerWU * (dimensionsComponent.width)) * (transformComponent.scaleX)) / (camera.zoom)))"], "Fixed commit": "068756be69cfb71c949e9b862fce04cacd1618ad", "Url": "https://api.github.com/repos/Sasun/overlap2d", "Date": "2016-01-22T20:29:36Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == (org.sikuli.script.ImagePath.getPathCount())) { org.sikuli.script.ImagePath.setBundlePath(java.lang.System.getProperty(\"user.dir\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/450/buggy-version/API.src.main.java.org.sikuli.script.ImagePath.java", "BodyUseAPI": [], "Fixed commit": "f3ba74b37623991baf0650a7864386428d9d1a8f", "Url": "https://api.github.com/repos/rssdev10/SikuliX-2014", "Date": "2014-06-16T08:19:38Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((film.realisateur()) == null) return \"Je ne me rappelle plus qui a r\ufffdalis\ufffd ce film\"; else return (\"Ce film a \ufffdt\ufffd r\ufffdalis\ufffd par \" + (film.realisateur())) + \".\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3407/buggy-version/src.ia.ConversationIA.java", "BodyUseAPI": ["allocine.Film.realisateur()"], "Fixed commit": "d4bd4549b1f88f38fb4c390b2736d6b93ca90dc1", "Url": "https://api.github.com/repos/ujm-projet-l3info-2017/Groupe6", "Date": "2017-05-15T19:22:31Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((film.dateSortie()) == 0) return \"Je ne sais plus exactement quand ce film est sorti.\"; else return (\"Ce film est sorti en \" + (film.dateSortie())) + \".\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3407/buggy-version/src.ia.ConversationIA.java", "BodyUseAPI": ["allocine.Film.dateSortie()"], "Fixed commit": "d4bd4549b1f88f38fb4c390b2736d6b93ca90dc1", "Url": "https://api.github.com/repos/ujm-projet-l3info-2017/Groupe6", "Date": "2017-05-15T19:22:31Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ia.Reconnaissance.affiche(messageCorrige)) if ((film.affiche()) == null) return \"Je n'ai pas trouv\ufffd l'affiche\"; else return \"Voici l'affiche de ce film : \" + (film.affiche());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3407/buggy-version/src.ia.ConversationIA.java", "BodyUseAPI": [], "Fixed commit": "d4bd4549b1f88f38fb4c390b2736d6b93ca90dc1", "Url": "https://api.github.com/repos/ujm-projet-l3info-2017/Groupe6", "Date": "2017-05-15T19:22:31Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Book.books.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (book == null) throw new java.lang.IllegalArgumentException(((\"invalid book ID '\" + book_id) + \"'\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5580/buggy-version/galileo_openbook_cleaner.src.de.scrum_master.galileo.Options.java", "BodyUseAPI": [], "Fixed commit": "57e1eb5c7a7fa8367d214fd6e5e334eaf15873e3", "Url": "https://api.github.com/repos/kriegaex/Galileo-Openbook-Cleaner", "Date": "2013-11-04T12:04:34Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentLog) != null) { this.currentLog.sync(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1075/buggy-version/src.main.java.com.github.zk1931.jzab.RollingLog.java", "BodyUseAPI": [], "Fixed commit": "77ab2409262484cd454656b6ec1bc476f216ef48", "Url": "https://api.github.com/repos/zk1931/jzab", "Date": "2014-11-15T22:49:50Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.qii.weiciyuan.support.utils.Utility.isWeiboAccountDomainLink(mUrl)) { java.lang.String result = org.qii.weiciyuan.support.utils.Utility.getDomainFromWeiboAccountLink(mUrl); android.content.Intent intent = new android.content.Intent(getActivity(), org.qii.weiciyuan.ui.userinfo.UserInfoActivity.class); intent.putExtra(\"domain\", result); getActivity().startActivity(intent); getActivity().finish(); }else if (org.qii.weiciyuan.support.utils.Utility.isWeiboMid(mUrl)) { java.lang.String mid = org.qii.weiciyuan.support.utils.Utility.getMidFromUrl(mUrl); org.qii.weiciyuan.ui.browser.BrowserWebFragment.RedirectLinkToWeiboIdTask task = new org.qii.weiciyuan.ui.browser.BrowserWebFragment.RedirectLinkToWeiboIdTask(this, mUrl, mid); task.executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR); }else { mWebView.loadUrl(mUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6528/buggy-version/src.org.qii.weiciyuan.ui.browser.BrowserWebFragment.java", "BodyUseAPI": ["org.qii.weiciyuan.support.utils.Utility.getDomainFromWeiboAccountLink(java.lang.String)", "android.webkit.WebView.loadUrl(java.lang.String)", "org.qii.weiciyuan.support.utils.Utility.isWeiboMid(java.lang.String)", "org.qii.weiciyuan.support.utils.Utility.getMidFromUrl(java.lang.String)"], "Fixed commit": "b723162a97b03edf9db000604e528407627971ba", "Url": "https://api.github.com/repos/Cye3s/weiciyuan", "Date": "2014-05-19T13:22:34Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((datafield.getSubfield('c')) != null) { years.addAll(getPublishDateFromItem(datafield.getSubfield('c').getData())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5647/buggy-version/cz.mzk.recordmanager.server.src.main.java.cz.mzk.recordmanager.server.scripting.marc.function.PublishDateMarcFunctions.java", "BodyUseAPI": ["org.marc4j.marc.DataField.getSubfield(char)", "cz.mzk.recordmanager.server.scripting.marc.function.PublishDateMarcFunctions.getPublishDateFromItem(datafield.getSubfield('c').getData())", "java.util.Set<java.lang.Integer>.addAll(java.util.Set<java.lang.Integer>)", "datafield.getSubfield('c').getData()"], "Fixed commit": "7e99f3b3d74ba1595bd38bbcc977c454bcc70f69", "Url": "https://api.github.com/repos/moravianlibrary/RecordManager2", "Date": "2015-06-16T13:33:50Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ticker) == 1) { worldObj.notifyBlocksOfNeighborChange(xCoord, yCoord, zCoord, getBlockType().blockID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3177/buggy-version/common.mekanism.common.tileentity.TileEntityFactory.java", "BodyUseAPI": [], "Fixed commit": "a5e62bf7a970f06cdd99105d821167545b573df4", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2014-01-02T01:02:10Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((arr.length) < 4) { linkVideo = \"sin video\"; }else { linkVideo = arr[3]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3835/buggy-version/src.Clases.ClaseReadBuffer.java", "BodyUseAPI": [], "Fixed commit": "09a07628c758f59a8c3d9af6ad151de0923b8eda", "Url": "https://api.github.com/repos/JavaAplications/Servidor_de_Eventos", "Date": "2015-10-18T02:25:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ruleResult.getRule()) != null) { ruleResult.setRelaxed(removedRulesId.contains(ruleResult.getRule().getId())); }else { ruleResult.setRelaxed(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2141/buggy-version/src.main.java.com.easyinnova.policy_checker.PolicyChecker.java", "BodyUseAPI": ["com.easyinnova.implementation_checker.rules.RuleResult.getRule()", "com.easyinnova.implementation_checker.rules.RuleResult.setRelaxed(boolean)", "ruleResult.getRule().getId()", "java.util.List<java.lang.String>.contains(ruleResult.getRule().getId())", "com.easyinnova.implementation_checker.rules.RuleResult.setRelaxed(boolean)"], "Fixed commit": "1c73556d12fa9ae9cbfc4c805f974c6f3865171e", "Url": "https://api.github.com/repos/EasyinnovaSL/TIFF-Policy-Checker", "Date": "2016-12-27T11:39:06Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((removedRulesId.size()) > 0) { for (com.easyinnova.implementation_checker.rules.RuleResult ruleResult : result.getResult()) { if ((ruleResult.getRule()) != null) { ruleResult.setRelaxed(removedRulesId.contains(ruleResult.getRule().getId())); }else { ruleResult.setRelaxed(false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2141/buggy-version/src.main.java.com.easyinnova.policy_checker.PolicyChecker.java", "BodyUseAPI": ["com.easyinnova.implementation_checker.rules.RuleResult.setRelaxed(boolean)", "java.util.List<java.lang.String>.contains(ruleResult.getRule().getId())"], "Fixed commit": "1c73556d12fa9ae9cbfc4c805f974c6f3865171e", "Url": "https://api.github.com/repos/EasyinnovaSL/TIFF-Policy-Checker", "Date": "2016-12-27T11:39:06Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDailyEntry.mLunchString) != (com.adaskin.android.atrac.utilities.Constants.TIME_NOT_YET_SET)) msLunchTick = com.adaskin.android.atrac.models.TimeDateStringConversions.restoreTicks(mDailyEntry.mDateString, mDailyEntry.mLunchString);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4155/buggy-version/app.src.main.java.com.adaskin.android.atrac.DailyEntryActivity.java", "BodyUseAPI": ["com.adaskin.android.atrac.models.TimeDateStringConversions.restoreTicks(mDailyEntry.mDateString,mDailyEntry.mLunchString)"], "Fixed commit": "4ea9fc41d7a4a026f3adc6d74d9d62cd150c0123", "Url": "https://api.github.com/repos/dadaskin/ATrac", "Date": "2017-08-18T04:15:10Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDailyEntry.mStartString) != (com.adaskin.android.atrac.utilities.Constants.TIME_NOT_YET_SET)) msStartTick = com.adaskin.android.atrac.models.TimeDateStringConversions.restoreTicks(mDailyEntry.mDateString, mDailyEntry.mStartString);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4155/buggy-version/app.src.main.java.com.adaskin.android.atrac.DailyEntryActivity.java", "BodyUseAPI": ["com.adaskin.android.atrac.models.TimeDateStringConversions.restoreTicks(mDailyEntry.mDateString,mDailyEntry.mStartString)"], "Fixed commit": "4ea9fc41d7a4a026f3adc6d74d9d62cd150c0123", "Url": "https://api.github.com/repos/dadaskin/ATrac", "Date": "2017-08-18T04:15:10Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDailyEntry.mReturnString) != (com.adaskin.android.atrac.utilities.Constants.TIME_NOT_YET_SET)) msReturnTick = com.adaskin.android.atrac.models.TimeDateStringConversions.restoreTicks(mDailyEntry.mDateString, mDailyEntry.mReturnString);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4155/buggy-version/app.src.main.java.com.adaskin.android.atrac.DailyEntryActivity.java", "BodyUseAPI": ["com.adaskin.android.atrac.models.TimeDateStringConversions.restoreTicks(mDailyEntry.mDateString,mDailyEntry.mReturnString)"], "Fixed commit": "4ea9fc41d7a4a026f3adc6d74d9d62cd150c0123", "Url": "https://api.github.com/repos/dadaskin/ATrac", "Date": "2017-08-18T04:15:10Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasWindowFocus) { applyTint(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1930/buggy-version/stripe.src.main.java.com.stripe.android.view.CardInputWidget.java", "BodyUseAPI": [], "Fixed commit": "462ae541ed2a3f9222a1e6c0d577c9a6b990a6a9", "Url": "https://api.github.com/repos/stripe/stripe-android", "Date": "2017-02-21T20:05:02Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (found) { line = removeTags(line, new java.lang.String[]{ \"p\", \"font\" }); }else { line = \"Error reading from website\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8150/buggy-version/src.com.maxtimkovich.witto.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a389320738d06995d5c0da4ad8569a6842f6b55f", "Url": "https://api.github.com/repos/mtimkovich/WhyIsTheTowerOrange", "Date": "2014-03-30T22:27:37Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (encryptedNode.isNull()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3677/buggy-version/src.main.java.com.kryptnostic.kodex.v1.serialization.jackson.EncryptableDeserializer.java", "BodyUseAPI": [], "Fixed commit": "ebd8d6c13065186cb4a0b6e8c0fe3f6120868c38", "Url": "https://api.github.com/repos/kryptnostic/kodex", "Date": "2014-09-08T21:14:30Z"},
{"Line": "=>728", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sourceTile) != (destinationTile)) { final com.chess.engine.classic.board.Move move = com.chess.engine.classic.board.Move.MoveFactory.createMove(chessBoard, sourceTile.getTileCoordinate(), destinationTile.getTileCoordinate()); if (move != (com.chess.engine.classic.board.Move.NULL_MOVE)) { final com.chess.engine.classic.board.MoveTransition transition = chessBoard.currentPlayer().makeMove(move); if (transition.getMoveStatus().isDone()) { chessBoard = chessBoard.currentPlayer().makeMove(move).getTransitionBoard(); moveLog.addMove(move); java.lang.System.out.println(chessBoard); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2937/buggy-version/src.com.chess.gui.Table.java", "BodyUseAPI": [], "Fixed commit": "51780bb59d16788256d0fd38f6755799cebf8dd7", "Url": "https://api.github.com/repos/sashashevchuk64/Jchess", "Date": "2016-10-03T12:48:22Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.inner().dhcpOptions()) == null) { this.inner().withDhcpOptions(new com.microsoft.azure.management.network.DhcpOptions()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6973/buggy-version/azure-mgmt-network.src.main.java.com.microsoft.azure.management.network.implementation.NetworkImpl.java", "BodyUseAPI": [], "Fixed commit": "785a1d1045fc7e05ac112b08d0cf541c6e1707ed", "Url": "https://api.github.com/repos/jianghaolu/azure-sdk-for-java", "Date": "2016-09-29T21:16:48Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.inner().dhcpOptions().dnsServers()) == null) { this.inner().dhcpOptions().withDnsServers(new java.util.ArrayList<java.lang.String>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6973/buggy-version/azure-mgmt-network.src.main.java.com.microsoft.azure.management.network.implementation.NetworkImpl.java", "BodyUseAPI": [], "Fixed commit": "785a1d1045fc7e05ac112b08d0cf541c6e1707ed", "Url": "https://api.github.com/repos/jianghaolu/azure-sdk-for-java", "Date": "2016-09-29T21:16:48Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (jenkins != null) { return jenkins.getACL().hasPermission(a, permission); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5918/buggy-version/src.main.java.com.cloudbees.plugins.credentials.ReadOnlyCredentialsStore.java", "BodyUseAPI": ["jenkins.getACL().hasPermission(org.acegisecurity.Authentication,hudson.security.Permission)", "jenkins.model.Jenkins.getACL()"], "Fixed commit": "a0bfba4b4328f4adde8e62b5856dc9a94b3710f2", "Url": "https://api.github.com/repos/hoshsadiq/credentials-plugin", "Date": "2017-11-09T19:50:24Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PEServer.serverJoinPriority.getOrDefault(int,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(server.isOnline())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3297/buggy-version/src.main.java.de.bluplayz.listener.PlayerLoginListener.java", "BodyUseAPI": [], "Fixed commit": "21008fcbad75a3036a1ba012e4fe41c2efe8b496", "Url": "https://api.github.com/repos/Bluplayz/BungeePE", "Date": "2017-10-07T20:56:26Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PEServer.serverJoinPriority.getOrDefault(int,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (server.getPermission().equalsIgnoreCase(\"\")) { targetServer = server; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3297/buggy-version/src.main.java.de.bluplayz.listener.PlayerLoginListener.java", "BodyUseAPI": [], "Fixed commit": "21008fcbad75a3036a1ba012e4fe41c2efe8b496", "Url": "https://api.github.com/repos/Bluplayz/BungeePE", "Date": "2017-10-07T20:56:26Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["item.getAsJsonObject().getAsJsonObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index.getAsJsonPrimitive(\"error\")) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3204/buggy-version/src.main.java.com.roncia.elasticsearch.application.IndexCloner.java", "BodyUseAPI": [], "Fixed commit": "4bdedf1b9215ff0121e2213f57ee0cf24dc2ae1b", "Url": "https://api.github.com/repos/cwensel/elasticsearch-index-cloner", "Date": "2016-08-15T02:07:43Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v == null) return java.lang.Double.POSITIVE_INFINITY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7032/buggy-version/src.main.java.org.mctourney.AutoReferee.util.CuboidRegion.java", "BodyUseAPI": [], "Fixed commit": "2ae587287b3588eaa783bffe4f880acaa46f4667", "Url": "https://api.github.com/repos/rmct/AutoReferee", "Date": "2012-07-25T04:54:02Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start < 0) start = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3097/buggy-version/android.UbiSolar.UbiSolar.src.main.java.com.sintef_energy.ubisolar.fragments.graphs.UsageGraphLineFragment.java", "BodyUseAPI": [], "Fixed commit": "6a91d42ad9b76fdf2816e931def207a845a0d4c0", "Url": "https://api.github.com/repos/haavardlian/UbiSolar", "Date": "2014-03-10T16:49:47Z"},
{"Line": "=>1320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.rowAtPoint(java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (row < 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8818/buggy-version/src.de.nmichael.efa.core.items.ItemTypeDataRecordTable.java", "BodyUseAPI": [], "Fixed commit": "764b715849d6289170bdeeacb111093047e33b66", "Url": "https://api.github.com/repos/abfahr/efa220oh", "Date": "2017-06-24T20:18:31Z"},
{"Line": "=>1323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.columnAtPoint(java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (col < 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8818/buggy-version/src.de.nmichael.efa.core.items.ItemTypeDataRecordTable.java", "BodyUseAPI": [], "Fixed commit": "764b715849d6289170bdeeacb111093047e33b66", "Url": "https://api.github.com/repos/abfahr/efa220oh", "Date": "2017-06-24T20:18:31Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jsonobj.length()) == 0) return stories;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8036/buggy-version/src.main.story.StoryService.java", "BodyUseAPI": [], "Fixed commit": "29142772cc7d0a77ff29329068a4392ecc13a57f", "Url": "https://api.github.com/repos/JuanWoo/zhihuDaily", "Date": "2015-12-14T03:43:46Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wustl.dynamicextensions.formdesigner.mapper.Properties.getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (containerId != null) { container.useAsDto(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4613/buggy-version/software.DynamicExtentions.src.java.edu.wustl.dynamicextensions.formdesigner.mapper.RegularContainerMapper.java", "BodyUseAPI": [], "Fixed commit": "88e993f194f9e6fc92bac37a6c0e84d22d2e415c", "Url": "https://api.github.com/repos/NCIP/catissue-dynamic-extensions", "Date": "2014-07-08T18:57:23Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(io.betterlife.rest.EntityService.serviceEntityRegistered)) { io.betterlife.application.ApplicationConfig.registerEntities(); io.betterlife.rest.EntityService.serviceEntityRegistered = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1005/buggy-version/work.src.io.betterlife.rest.EntityService.java", "BodyUseAPI": [], "Fixed commit": "ee2e779eb1caf7210c4af06be236018518d68400", "Url": "https://api.github.com/repos/betterlife/erp", "Date": "2014-11-20T16:11:16Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((phiChange) < 0) { (currentPhiAngle)--; (phiChange)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8729/buggy-version/src.com.kluckerz.editor.Cam.java", "BodyUseAPI": [], "Fixed commit": "6e68ad7bf2cf9cda5204d7645d8f9a1ae28216be", "Url": "https://api.github.com/repos/fckawe/Kluckerz", "Date": "2012-08-10T17:48:39Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.dockstore.client.cli.ArgumentUtility.optVal(java.util.List<java.lang.String>,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (workflowname == null) { workflowname = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6681/buggy-version/dockstore-client.src.main.java.io.dockstore.client.cli.nested.WorkflowClient.java", "BodyUseAPI": [], "Fixed commit": "6c8175fc76a7c4465fb41db906e4a2481996850f", "Url": "https://api.github.com/repos/ga4gh/dockstore", "Date": "2016-04-05T15:54:32Z"},
{"Line": "=>2064", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stringWidthCache.size()) > 10000) { stringWidthCache.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/9086/buggy-version/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java", "BodyUseAPI": ["java.util.Map<com.codename1.impl.ios.IOSImplementation.FontStringCache, java.lang.Integer>.clear()"], "Fixed commit": "7e19d38e28e4da6a928e44fc41b2f23014c0b284", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-09-29T16:00:50Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (time != 0) viewport_chargeCurve.setMaxX((time / 60000));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6698/buggy-version/app.src.main.java.com.laudien.p1xelfehler.batterywarner.Fragments.GraphFragment.java", "BodyUseAPI": ["com.jjoe64.graphview.Viewport.setMaxX(long)"], "Fixed commit": "8eb55c0f0442863fb6e515f96c2d86822260fa05", "Url": "https://api.github.com/repos/P1xelfehler/BatteryWarner", "Date": "2016-12-05T16:38:47Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) == null) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1572/buggy-version/rec-core.src.main.java.net.kimleo.rec.record.Record.java", "BodyUseAPI": [], "Fixed commit": "22a9eb737b86dacb0bbb51b835792960bce26050", "Url": "https://api.github.com/repos/rec-framework/rec-core", "Date": "2016-12-20T12:54:03Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getAPI().getPlayerTeamName(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tns != null) { location = respawnConfig.get(tns.getID(), respawnMapName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7985/buggy-version/src.main.java.com.github.ucchyocean.ct.command.CTPCommand.java", "BodyUseAPI": ["com.github.ucchyocean.ct.config.RespawnConfiguration.get(tns.getID(),java.lang.String)", "com.github.ucchyocean.ct.config.TeamNameSetting.getID()"], "Fixed commit": "81d24ddc608b675493e73332374d107c18a99eb7", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2013-09-24T15:42:50Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((att.getDataType()) instanceof org.molgenis.fieldtypes.MrefField) { search.append(\" OR CAST(\").append(att.getName()).append(\".`\").append(att.getName()).append('`').append(\" as CHAR) LIKE ?\"); }else { search.append(\" OR CAST(this.\").append('`').append(att.getName()).append('`').append(\" as CHAR) LIKE ?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6463/buggy-version/molgenis-data-mysql.src.main.java.org.molgenis.data.mysql.MysqlRepository.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(att.getName())", "org.molgenis.data.AttributeMetaData.getName()", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(att.getName())", "org.molgenis.data.AttributeMetaData.getName()", "search.append(\" OR CAST(this.\").append('`').append(att.getName()).append('`').append(java.lang.String)", "search.append(\" OR CAST(\").append(att.getName()).append(\".`\").append(att.getName())", "search.append(\" OR CAST(\").append(att.getName()).append(\".`\").append(att.getName()).append('`').append(java.lang.String)", "search.append(\" OR CAST(\").append(att.getName()).append(\".`\").append(att.getName()).append(char)", "org.molgenis.data.AttributeMetaData.getName()"], "Fixed commit": "72a284d064d9931b606ca75a269b91a0eedc0f3b", "Url": "https://api.github.com/repos/fdlk/molgenis", "Date": "2014-07-23T12:36:55Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tries == 50) { target.getParent().setTileX(origX); target.getParent().setTileY(origY); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5640/buggy-version/src.7drl2015-libgdx.src.net.wombatrpgs.sdrl2015.rpg.abil.EffectTeleport.java", "BodyUseAPI": [], "Fixed commit": "6cf73814733e1c926c4dfeb4929398512756702c", "Url": "https://api.github.com/repos/psywombats/7drl2015", "Date": "2015-03-15T21:39:23Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row.length()) > (numOfColumns)) { this.numOfColumns = length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4869/buggy-version/src.uk.ac.ncl.csc8005.team3.coreEngine.Board.java", "BodyUseAPI": [], "Fixed commit": "d3dbd377327b4887fd460725b2a637b1bdfccf2a", "Url": "https://api.github.com/repos/EternalSaga/SokobanSolver", "Date": "2016-04-23T22:46:34Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RunResultsCache.SINGLETON.getFromCache(java.lang.Class<?>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (results == null) { concordion.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/497/buggy-version/src.main.java.org.concordion.integration.junit4.ConcordionRunner.java", "BodyUseAPI": [], "Fixed commit": "6255e4a7ae0e18e2c27c5a7dab699ff9c4422c4a", "Url": "https://api.github.com/repos/drtimwright/concordion", "Date": "2015-09-06T06:57:59Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lastSegmentIndex > 0) { lastSegment = path.substring(lastSegmentIndex); }else { lastSegment = path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6437/buggy-version/servlet.src.main.java.io.undertow.servlet.handlers.ServletPathMatches.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "bd85036d7c9019673bb7408c2fe75cf336a0a1eb", "Url": "https://api.github.com/repos/golovnin/undertow", "Date": "2014-07-15T04:46:17Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(mapping.startsWith(\"/\"))) && (!(mapping.startsWith(\"*\")))) && (!(mapping.isEmpty()))) { mappings.add((\"/\" + mapping)); }else { mappings.add(mapping); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6437/buggy-version/servlet.src.main.java.io.undertow.servlet.api.ServletInfo.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "bd85036d7c9019673bb7408c2fe75cf336a0a1eb", "Url": "https://api.github.com/repos/golovnin/undertow", "Date": "2014-07-15T04:46:17Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(the.bytecode.club.bytecodeviewer.BytecodeViewer.PingBack.isAlive())) the.bytecode.club.bytecodeviewer.BytecodeViewer.PingBack.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/319/buggy-version/src.the.bytecode.club.bytecodeviewer.BytecodeViewer.java", "BodyUseAPI": ["java.lang.Thread.start()"], "Fixed commit": "870987f65f61726ff3c75dedd08a2e21ada1a663", "Url": "https://api.github.com/repos/Konloch/bytecode-viewer", "Date": "2015-08-03T06:44:03Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.qii.weiciyuan.ui.adapter.CommentListAdapter.1.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (helperMsg != null) { helperId = helperMsg.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4859/buggy-version/src.org.qii.weiciyuan.ui.adapter.CommentListAdapter.java", "BodyUseAPI": ["org.qii.weiciyuan.bean.CommentBean.getId()"], "Fixed commit": "52fd81d270026bb00fd69e2dd8b3e8516f3d47bd", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2013-04-23T14:25:10Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.qii.weiciyuan.ui.adapter.StatusListAdapter.1.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (helperMsg != null) { helperId = helperMsg.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4859/buggy-version/src.org.qii.weiciyuan.ui.adapter.StatusListAdapter.java", "BodyUseAPI": ["org.qii.weiciyuan.bean.MessageBean.getId()"], "Fixed commit": "52fd81d270026bb00fd69e2dd8b3e8516f3d47bd", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2013-04-23T14:25:10Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) != null) { exp += type.getXP(); if (((((type) instanceof data_structures.treasure.Quiz) && ((location) != null)) && ((((data_structures.treasure.Quiz) (type)).getLocationId()) != null)) && ((((data_structures.treasure.Quiz) (type)).getLocationId()) != (location.getId()))) exp *= 1.5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5869/buggy-version/Server.src.main.java.data_structures.treasure.Treasure.java", "BodyUseAPI": [], "Fixed commit": "4ce3f766af8d44ce64e7c5d82dcc26c9cfd2281f", "Url": "https://api.github.com/repos/co0k/TreasureHunt", "Date": "2015-06-01T14:13:41Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) != null) exp += size.getXP();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5869/buggy-version/Server.src.main.java.data_structures.treasure.Treasure.java", "BodyUseAPI": [], "Fixed commit": "4ce3f766af8d44ce64e7c5d82dcc26c9cfd2281f", "Url": "https://api.github.com/repos/co0k/TreasureHunt", "Date": "2015-06-01T14:13:41Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location) != null) exp += location.getXP();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5869/buggy-version/Server.src.main.java.data_structures.treasure.Treasure.java", "BodyUseAPI": [], "Fixed commit": "4ce3f766af8d44ce64e7c5d82dcc26c9cfd2281f", "Url": "https://api.github.com/repos/co0k/TreasureHunt", "Date": "2015-06-01T14:13:41Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (recordingUUIDsArray != null) { recordingUUIDs = java.util.Arrays.asList(); }else { return new java.util.ArrayList<org.lp20.aikuma.model.Recording>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6350/buggy-version/Aikuma.src.org.lp20.aikuma.model.Recording.java", "BodyUseAPI": [], "Fixed commit": "2930cd3ab20e65d8ff59aedbd7221f914ed33ca9", "Url": "https://api.github.com/repos/langtech/aikuma", "Date": "2013-08-21T07:02:18Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.droidplanner.android.api.DroneApi.getSpeed()", "org.droidplanner.android.api.DroneApi.getAltitude()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((speed == null) || (altitude == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3713/buggy-version/Android.src.org.droidplanner.android.api.DroneApi.java", "BodyUseAPI": [], "Fixed commit": "0dfd13cdd475dcf5cab2e23c2a26752cb6d9d014", "Url": "https://api.github.com/repos/benz2012/FlyCast", "Date": "2014-11-10T18:11:36Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mRingtone.isPlaying()) { stopRingtone(); }else { mRingtone.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4701/buggy-version/app.src.main.java.io.github.loopX.XAlarm.module.SettingModule.AlarmPreferenceSettingsMenuLayout.java", "BodyUseAPI": ["android.media.Ringtone.play()"], "Fixed commit": "0254d73508cadd1223e6039bbbec2374135f6b79", "Url": "https://api.github.com/repos/Loop-X/X-Alarm", "Date": "2016-07-23T18:51:26Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDeferredCancelProcess) != null) { mRecyclerView.removeCallbacks(mDeferredCancelProcess); mDeferredCancelProcess = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2236/buggy-version/library.src.main.java.com.h6ah4i.android.widget.advrecyclerview.draggable.RecyclerViewDragDropManager.java", "BodyUseAPI": [], "Fixed commit": "061d871c7a4a689a1a3c58c7ea512327e3f82426", "Url": "https://api.github.com/repos/h6ah4i/android-advancedrecyclerview", "Date": "2015-02-10T13:50:32Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mScrollOnDraggingProcess) != null) { mScrollOnDraggingProcess.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2236/buggy-version/library.src.main.java.com.h6ah4i.android.widget.advrecyclerview.draggable.RecyclerViewDragDropManager.java", "BodyUseAPI": [], "Fixed commit": "061d871c7a4a689a1a3c58c7ea512327e3f82426", "Url": "https://api.github.com/repos/h6ah4i/android-advancedrecyclerview", "Date": "2015-02-10T13:50:32Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subCommandHashMap.containsKey(args[1])) && ((args.length) == 2)) { event.respond(\"Invalid Cookie-Command. Usage: !cookies < | give | take | add> <Username> <Amount >= 0>\"); }else if (userMatcher.matcher(args[1].trim().toLowerCase()).matches()) { java.lang.String amount = ck.getAmountOfCookies(args[1].trim().toLowerCase()); event.getChannel().send().message(((((args[1].trim()) + \" has \") + amount) + \" cookies in their secret stash!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4318/buggy-version/src.main.java.com.blockingHD.commands.CookiesCommand.java", "BodyUseAPI": ["java.util.regex.Matcher.matches()", "java.lang.String.trim()", "java.util.regex.Pattern.matcher(java.lang.String)", "event.getChannel().send().message(java.lang.String)", "java.lang.String.trim()", "com.blockingHD.dao.CookieKeeper.getAmountOfCookies(java.lang.String)", "java.lang.String.trim()", "java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()"], "Fixed commit": "3d8b14579a1c6e9aee13df0ad3d0e15f536fbf28", "Url": "https://api.github.com/repos/blockingHD/Cookiebot", "Date": "2015-11-02T23:50:46Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.genericworkflownodes.knime.config.INodeConfiguration.getParameter(cliMapping.getReferenceName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(p.isNull())) { if (p instanceof com.genericworkflownodes.knime.parameter.ListParameter) { extractedParameterValues.add(((com.genericworkflownodes.knime.parameter.ListParameter) (p)).getStrings()); }else { java.util.List<java.lang.String> l = new java.util.ArrayList<java.lang.String>(); l.add(p.getStringRep()); extractedParameterValues.add(l); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4204/buggy-version/com.genericworkflownodes.knime.src.com.genericworkflownodes.knime.execution.impl.CLICommandGenerator.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(p.getStringRep())", "com.genericworkflownodes.knime.parameter.Parameter<?>.getStringRep()"], "Fixed commit": "d901b939f4b03e1cdd13ba48eb0c87698d8226d1", "Url": "https://api.github.com/repos/genericworkflownodes/GenericKnimeNodes", "Date": "2013-02-13T21:15:17Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(session.isNewSession())) { response.setRenderParameter(\"sessionId\", java.lang.Long.toString(session.getSessionId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1831/buggy-version/blackboardvc-portlet-webapp.src.main.java.org.jasig.portlet.blackboardvcportlet.mvc.sessionmngr.SessionCreateEditController.java", "BodyUseAPI": ["java.lang.Long.toString(session.getSessionId())", "org.jasig.portlet.blackboardvcportlet.service.SessionForm.getSessionId()", "javax.portlet.ActionResponse.setRenderParameter(java.lang.String,java.lang.String)"], "Fixed commit": "9bdc0a36f090d4ad46e654b0fa6915fb1b6c02bd", "Url": "https://api.github.com/repos/UW-Madison-DoIT/BlackboardVCPortlet", "Date": "2013-04-22T17:44:45Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((errorFileContents[i]) != null) && (!(errorFileContents[i].equals(\"\")))) { execErrors = ((execErrors) + \"\\n\") + (errorFileContents[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6218/buggy-version/src.edu.ucdenver.ccp.PhenoGen.driver.ExecHandler.java", "BodyUseAPI": [], "Fixed commit": "2cf161b6bb1135a58c6357fe537e228e43fb7c59", "Url": "https://api.github.com/repos/TabakoffLab/PhenoGen", "Date": "2015-03-10T22:59:48Z"},
{"Line": "=>1465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nodeAddrList.size()) > 1) { boolean isLeaderAlive = false; for (java.lang.String nodeAddr : nodeAddrList) { if (isCoordinatorAlive(nodeAddr)) { isLeaderAlive = true; break; } } if (!isLeaderAlive) { com.emc.storageos.systemservices.impl.upgrade.CoordinatorClientExt._log.info(\"No zookeeper leader alive\"); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/730/buggy-version/syssvc.src.main.java.com.emc.storageos.systemservices.impl.upgrade.CoordinatorClientExt.java", "BodyUseAPI": [], "Fixed commit": "12dd58964b759f0921041d469f2b8390b65c03b4", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-11-09T02:25:14Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != null) edu.uncc.cs.watsonsim.Score.set(p.scores, entry.getKey(), entry.getValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6729/buggy-version/src.main.java.edu.uncc.cs.watsonsim.search.CachingSearcher.java", "BodyUseAPI": ["edu.uncc.cs.watsonsim.Score.set(p.scores,java.lang.String,java.lang.Double)", "java.util.Map.Entry<java.lang.String, java.lang.Double>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Double>.getValue()"], "Fixed commit": "53b097da2f1d46ebd6b18e471b32558b389de933", "Url": "https://api.github.com/repos/SeanTater/uncc2014watsonsim", "Date": "2015-05-09T18:26:09Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(adUrl.contains(profile.getSiteUrl()))) { adUrl = (profile.getSiteUrl()) + adUrl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5476/buggy-version/ejb.src.main.java.org.aub.service.impl.AdvertServiceImpl.java", "BodyUseAPI": ["org.aub.db.domain.AdvertProfile.getSiteUrl()"], "Fixed commit": "1e497880df1b68801b0f929bb8e48b115646820f", "Url": "https://api.github.com/repos/KPACHblu/webParser", "Date": "2014-11-12T12:48:45Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) throw new de.st_ddt.crazyplugin.exceptions.CrazyCommandUsageException(\"<Language>\", \"<Plugin>\", \"*\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4363/buggy-version/CrazyCore.src.de.st_ddt.crazycore.commands.CrazyCoreCommandLanguageExtract.java", "BodyUseAPI": [], "Fixed commit": "13bbae35d4bb45a34c7dcf85ca51175ede67bfc2", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-10-18T02:05:17Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) throw new de.st_ddt.crazyplugin.exceptions.CrazyCommandUsageException(\"<Language>\", \"<Plugin>\", \"*\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4363/buggy-version/CrazyCore.src.de.st_ddt.crazycore.commands.CrazyCoreCommandLanguageDownload.java", "BodyUseAPI": [], "Fixed commit": "13bbae35d4bb45a34c7dcf85ca51175ede67bfc2", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-10-18T02:05:17Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((options.getVlanId()) != null) && (!(((org.dasein.cloud.openstack.nova.os.NovaOpenStack) (getProvider())).isRackspace()))) { org.dasein.cloud.openstack.nova.os.network.NovaNetworkServices services = ((org.dasein.cloud.openstack.nova.os.NovaOpenStack) (getProvider())).getNetworkServices(); if (services != null) { org.dasein.cloud.openstack.nova.os.network.Quantum support = services.getVlanSupport(); if (support != null) { java.util.ArrayList<java.util.Map<java.lang.String, java.lang.Object>> vlans = new java.util.ArrayList<java.util.Map<java.lang.String, java.lang.Object>>(); java.util.HashMap<java.lang.String, java.lang.Object> vlan = new java.util.HashMap<java.lang.String, java.lang.Object>(); try { vlan.put(\"port\", support.createPort(options.getVlanId(), options.getHostName())); vlans.add(vlan); json.put(\"networks\", vlans); } catch (org.dasein.cloud.CloudException e) { if ((e.getHttpCode()) != 403) { throw new org.dasein.cloud.CloudException(e.getMessage()); } org.dasein.cloud.openstack.nova.os.compute.NovaServer.logger.warn(\"Unable to create port - trying to launch into general network\"); org.dasein.cloud.network.Subnet subnet = support.getSubnet(options.getVlanId()); vlan.put(\"uuid\", subnet.getProviderVlanId()); vlans.add(vlan); json.put(\"networks\", vlans); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4922/buggy-version/src.main.java.org.dasein.cloud.openstack.nova.os.compute.NovaServer.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,support.createPort(options.getVlanId(), options.getHostName()))", "org.dasein.cloud.compute.VMLaunchOptions.getVlanId()", "org.dasein.cloud.compute.VMLaunchOptions.getHostName()", "org.dasein.cloud.openstack.nova.os.network.Quantum.createPort(options.getVlanId(),options.getHostName())", "org.dasein.cloud.openstack.nova.os.network.Quantum.getSubnet(options.getVlanId())", "org.dasein.cloud.compute.VMLaunchOptions.getVlanId()"], "Fixed commit": "15969adac5b64a65050e29d51640f16783201263", "Url": "https://api.github.com/repos/daniellemayne/dasein-cloud-openstack", "Date": "2013-11-08T14:57:29Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.example.muggi.randombebop.FragmentTwo) (viewAdapter.f2)).somthingSelected()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selected) { android.bluetooth.BluetoothAdapter btAdapter = android.bluetooth.BluetoothAdapter.getDefaultAdapter(); if (btAdapter == null) { android.widget.Toast.makeText(this, \"Bluetooth is not Supported\", Toast.LENGTH_LONG).show(); }else { enableBluetooth(); } }else { android.widget.Toast.makeText(this, \"You need to select a note to Send\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4459/buggy-version/app.src.main.java.com.example.muggi.randombebop.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8ef1a88c445a0bb0fb65deb39ffe1a2436b8d1b8", "Url": "https://api.github.com/repos/masterdagon/RandomWare", "Date": "2016-01-14T17:35:47Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umkc.cs5573.isa.CyborgController.getCommands(java.io.PrintStream,java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"cert\".equals(cmds[0].toLowerCase())) { if ((certReqTriggered) > 0) mQueue.queue(edu.umkc.cs5573.isa.StaticUtil.joinWith(cmds, \" \")); }else if (\"react\".equals(cmds[0].toLowerCase())) { if ((reactReqTriggered) > 0) mQueue.queue(edu.umkc.cs5573.isa.StaticUtil.joinWith(cmds, \" \")); }else if (\"sql\".equals(cmds[0].toLowerCase())) { doSql(cmds); }else if (\"help\".equals(cmds[0].toLowerCase())) { doCommandList(); }else { logger.d(this, \"Unknown command.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3938/buggy-version/src.edu.umkc.cs5573.isa.CyborgController.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.toLowerCase()", "edu.umkc.cs5573.isa.MessageQueue.queue(edu.umkc.cs5573.isa.StaticUtil.joinWith(cmds, \" \"))", "edu.umkc.cs5573.isa.StaticUtil.joinWith(java.lang.String[],java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "edu.umkc.cs5573.isa.CyborgController.doSql(java.lang.String[])", "java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "edu.umkc.cs5573.isa.MessageQueue.queue(edu.umkc.cs5573.isa.StaticUtil.joinWith(cmds, \" \"))", "edu.umkc.cs5573.isa.StaticUtil.joinWith(java.lang.String[],java.lang.String)"], "Fixed commit": "2e44b74810111e0bc8a1279f594fa5d5fd809c59", "Url": "https://api.github.com/repos/ISA-FS2015/ISA_FS2015", "Date": "2015-10-31T06:40:39Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weeklyReportDate != null) { reportStartAndEnd[1] = weeklyReportDate; }else { java.util.Date epiWeekEnd = de.symeda.sormas.api.utils.DateHelper.getEpiWeekEnd(epiWeek); if (now.after(epiWeekEnd)) { if (nextWeeklyReportDate == null) { if (now.before(de.symeda.sormas.api.utils.DateHelper.addDays(epiWeekEnd, 7))) { reportStartAndEnd[1] = now; }else { reportStartAndEnd[1] = epiWeekEnd; } }else { reportStartAndEnd[1] = epiWeekEnd; } }else { reportStartAndEnd[1] = epiWeekEnd; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8828/buggy-version/sormas-api.src.main.java.de.symeda.sormas.api.utils.DateHelper.java", "BodyUseAPI": [], "Fixed commit": "63e8cd07c1b3062b532589246189288708d7b458", "Url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project", "Date": "2017-10-20T11:16:21Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((words.size()) == 0) return Twofrequencies;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5954/buggy-version/cs221.src.ir.assignments.one.c.TwoGramFrequencyCounter.java", "BodyUseAPI": [], "Fixed commit": "259f13ec7395dfe925d4b12c16b438eb2b8a65f9", "Url": "https://api.github.com/repos/Yangsilu/InformationRetrieval", "Date": "2015-01-19T08:59:17Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (line.equals(\"\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/737/buggy-version/src.binpacking.Parse2.java", "BodyUseAPI": [], "Fixed commit": "f42509fff93276fc8f525af5a6f96d991fcfa95b", "Url": "https://api.github.com/repos/codersam88/seproj", "Date": "2014-04-15T03:03:58Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (topicChanged) { em.persist(topic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3692/buggy-version/src.main.java.org.jboss.pressgang.ccms.server.rest.v1.RESTv1.java", "BodyUseAPI": [], "Fixed commit": "f24f5ef5e6a4070d8a4957aa1073d8b2e89c0a97", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSREST", "Date": "2014-03-23T20:19:35Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((!(isTaskRoot())) && (getIntent().hasCategory(Intent.CATEGORY_LAUNCHER))) && ((getIntent().getAction()) != null)) && (getIntent().getAction().equals(Intent.ACTION_MAIN))) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/253/buggy-version/app.src.main.java.randomappsinc.com.sqlpractice.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1edd1ae2ddd48223dee98042d5f14bf409b1b251", "Url": "https://api.github.com/repos/Gear61/SQLPractice", "Date": "2016-06-21T00:11:15Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOK) { protocol.println(\"\\r\\n\\u041e\\u0448\\u0438\\u0431\\u043e\\u043a \\u043d\\u0435 \\u043e\\u0431\\u043d\\u0430\\u0440\\u0443\\u0436\\u0435\\u043d\\u043e.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7758/buggy-version/src.main.java.com.developmentontheedge.egisso.checker.EgissoChecker.java", "BodyUseAPI": [], "Fixed commit": "8e7ca763f98c37fa3fe17c02160de4405031c309", "Url": "https://api.github.com/repos/DevelopmentOnTheEdge/egisso-checker", "Date": "2017-11-13T09:10:52Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.stack.isEmpty())) { this.stack.peek().getChildren().add(this.specHierarchy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8965/buggy-version/Source.eu.modelwriter.marker.src.eu.modelwriter.marker.internal.MarkdownToReqIfDocumentBuilder.java", "BodyUseAPI": ["java.util.Stack<org.eclipse.rmf.reqif10.SpecHierarchy>.peek()", "this.stack.peek().getChildren().add(org.eclipse.rmf.reqif10.SpecHierarchy)", "this.stack.peek().getChildren()"], "Fixed commit": "c91b3004dead1ecb86601040bcbfd0500660d0a6", "Url": "https://api.github.com/repos/ModelWriter/WP3", "Date": "2015-10-02T07:26:24Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mobileNumber.length()) < 2) return new ir.rasen.charsoo.controller.helper.Validation(false, context.getResources().getString(R.string.enter_correct_value));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3403/buggy-version/app.src.main.java.ir.rasen.charsoo.controller.helper.Validation.java", "BodyUseAPI": [], "Fixed commit": "a6ff72971b7d294406b5084b298604ef21c6cad2", "Url": "https://api.github.com/repos/rasenir/charsoo", "Date": "2015-07-11T11:27:27Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tealcube.minecraft.bukkit.mythicdrops.utils.TierUtil.getTierFromItemStack(org.bukkit.inventory.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t.isBroadcastOnFind()) { if ((event.getEntity().getKiller()) != null) { broadcastMessage(event.getEntity().getKiller(), nis); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1611/buggy-version/src.main.java.com.tealcube.minecraft.bukkit.mythicdrops.spawning.ItemSpawningListener.java", "BodyUseAPI": [], "Fixed commit": "f1aaba3fce81ad52966ae5eb4b7336c5898a4606", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2016-03-17T04:49:22Z"},
{"Line": "=>1078", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((distributedCache) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6524/buggy-version/core.javax.cache.src.main.java.org.wso2.carbon.caching.impl.CacheImpl.java", "BodyUseAPI": [], "Fixed commit": "52c67b4a3a9c96d4cb76812de8a8560594ea3c76", "Url": "https://api.github.com/repos/Shan1024/carbon-kernel", "Date": "2016-06-08T08:37:21Z"},
{"Line": "=>1108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((distributedCache) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6524/buggy-version/core.javax.cache.src.main.java.org.wso2.carbon.caching.impl.CacheImpl.java", "BodyUseAPI": [], "Fixed commit": "52c67b4a3a9c96d4cb76812de8a8560594ea3c76", "Url": "https://api.github.com/repos/Shan1024/carbon-kernel", "Date": "2016-06-08T08:37:21Z"},
{"Line": "=>1124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((distributedCache) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6524/buggy-version/core.javax.cache.src.main.java.org.wso2.carbon.caching.impl.CacheImpl.java", "BodyUseAPI": [], "Fixed commit": "52c67b4a3a9c96d4cb76812de8a8560594ea3c76", "Url": "https://api.github.com/repos/Shan1024/carbon-kernel", "Date": "2016-06-08T08:37:21Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (grid.hasNoMovableAt(path.nextX(), path.nextY())) { goSinglePathStep(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7459/buggy-version/jsettlers.logic.src.jsettlers.logic.movable.Movable.java", "BodyUseAPI": [], "Fixed commit": "89d4926d28f1ee8e4fec7312e5cf43bd779c4fc6", "Url": "https://api.github.com/repos/jsettlers/settlers-remake", "Date": "2015-12-30T15:16:48Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAppWidgetId) == (android.appwidget.AppWidgetManager.INVALID_APPWIDGET_ID)) { com.kamosoft.flickrwidget.Log.e(\"FlickrWidgetConfigure: Error bad appWidgetId\"); finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2693/buggy-version/src.com.kamosoft.flickrwidget.FlickrWidgetConfigure.java", "BodyUseAPI": [], "Fixed commit": "ac6e0c20f80d99388382472804afc9c155b48620", "Url": "https://api.github.com/repos/tbruyelle/FlickrWidget", "Date": "2011-03-16T11:06:05Z"},
{"Line": "=>696", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scouter.agent.trace.TraceContextManager.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ctx.profile_thread_cputime) { p.start_cpu = ((int) ((scouter.agent.trace.SysJMX.getCurrentThreadCPU()) - (ctx.startCpu))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3328/buggy-version/scouter.agent.java.src.scouter.agent.trace.TraceSQL.java", "BodyUseAPI": [], "Fixed commit": "0ebaa062ba846af6aa3fc4ac26f9b31645d0691f", "Url": "https://api.github.com/repos/scouter-project/scouter", "Date": "2016-06-17T05:24:37Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tctx.profile_thread_cputime) { ms.start_cpu = ((int) ((scouter.agent.trace.SysJMX.getCurrentThreadCPU()) - (tctx.startCpu))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3328/buggy-version/scouter.agent.java.src.scouter.agent.trace.TraceSQL.java", "BodyUseAPI": [], "Fixed commit": "0ebaa062ba846af6aa3fc4ac26f9b31645d0691f", "Url": "https://api.github.com/repos/scouter-project/scouter", "Date": "2016-06-17T05:24:37Z"},
{"Line": "=>1604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, com.dp.blackhole.supervisor.model.ProducerManager>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (producerManager != null) { producerManager.switchToOnline(partitionId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/872/buggy-version/blackhole-supervisor.src.main.java.com.dp.blackhole.supervisor.Supervisor.java", "BodyUseAPI": ["com.dp.blackhole.supervisor.model.ProducerManager.switchToOnline(java.lang.String)"], "Fixed commit": "a6741e0091cbde84c01433119fb2750b41cfce35", "Url": "https://api.github.com/repos/dianping/blackhole", "Date": "2015-06-03T03:05:27Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mDrawerLayout.isDrawerVisible(findViewById(R.id.menu_drawer))) { closeNavigationDrawer(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6231/buggy-version/app.src.main.java.tesis.com.estudiemos.activities.EstudiemosActivity.java", "BodyUseAPI": [], "Fixed commit": "96ebaa3334e5d3c56f010fd3306a66529b2c56e1", "Url": "https://api.github.com/repos/apuli/Estudiemos", "Date": "2016-02-03T14:53:56Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bugs3.zewildguy.chatphrases.ChatPhrase.match(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (phrase_key != null) { java.lang.String phrase_value = com.bugs3.zewildguy.chatphrases.ChatPhrase.getValue(phrase_key); java.lang.String final_phrase = com.bugs3.zewildguy.chatphrases.ChatFormatParser.parseChatColour(phrase_value); return final_phrase; }else { return com.bugs3.zewildguy.chatphrases.ChatPhrase.error; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6464/buggy-version/src.com.bugs3.zewildguy.chatphrases.ChatPhrase.java", "BodyUseAPI": ["com.bugs3.zewildguy.chatphrases.ChatPhrase.getValue(java.lang.String)"], "Fixed commit": "d42366d25a00663e4276144eea67a7877991b232", "Url": "https://api.github.com/repos/ZeWildGuy/ChatPhrases", "Date": "2014-01-16T08:52:39Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(prefix.equals(\"\"))) { text.append(\":\").append(prefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/915/buggy-version/src.org.apache.cocoon.transformation.AbstractSAXPipelineTransformer.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "0d80c0e7f4c6874a4d6dd929ad02b67280aba56d", "Url": "https://api.github.com/repos/hhv/cocooncomponents", "Date": "2017-05-08T14:46:25Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (directory == null) { directory = catalog.getResourceLoader().findOrCreateDirectory(\"data\", workspaceName, storeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2844/buggy-version/src.restconfig.src.main.java.org.geoserver.catalog.rest.StoreFileResource.java", "BodyUseAPI": [], "Fixed commit": "939ddfa9ad1981d5e22e023622b9fd09822231e5", "Url": "https://api.github.com/repos/n-lagomarsini/geoserver", "Date": "2014-06-05T17:30:48Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restlet.data.Method.equals(Method.POST)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (isPost && (storeName != null)) { org.geoserver.catalog.CoverageStoreInfo coverage = catalog.getCoverageStoreByName(storeName); if (coverage != null) { if ((workspaceName == null) || ((workspaceName != null) && (coverage.getWorkspace().getName().equalsIgnoreCase(workspaceName)))) { java.io.File dirFile = org.geotools.data.DataUtilities.urlToFile(new java.net.URL(coverage.getURL())); if (!(dirFile.exists())) { directory = catalog.getResourceLoader().findOrCreateDirectory(dirFile, \"\"); }else { directory = dirFile; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2844/buggy-version/src.restconfig.src.main.java.org.geoserver.catalog.rest.StoreFileResource.java", "BodyUseAPI": ["org.geoserver.catalog.Catalog.getCoverageStoreByName(java.lang.String)"], "Fixed commit": "939ddfa9ad1981d5e22e023622b9fd09822231e5", "Url": "https://api.github.com/repos/n-lagomarsini/geoserver", "Date": "2014-06-05T17:30:48Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.emory.plinkcloud.plinkcloud.TabixBased.TabixReader.parseReg(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((x[0]) == (-1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6332/buggy-version/src.main.java.edu.emory.plinkcloud.plinkcloud.TabixBased.TabixReader.java", "BodyUseAPI": [], "Fixed commit": "78f57b4a93dfeadd22e1276550d2d2318ca402e3", "Url": "https://api.github.com/repos/xsun28/PlinkCloud", "Date": "2016-12-02T22:50:52Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head) == null) { initiate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5634/buggy-version/core.edb.src.main.java.org.openengsb.core.edb.internal.JPADatabase.java", "BodyUseAPI": [], "Fixed commit": "c1f8a5b68518380f113a834518cd1fcd013158e4", "Url": "https://api.github.com/repos/openengsb/openengsb", "Date": "2011-08-25T20:44:42Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head) == null) { initiate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5634/buggy-version/core.edb.src.main.java.org.openengsb.core.edb.internal.JPADatabase.java", "BodyUseAPI": [], "Fixed commit": "c1f8a5b68518380f113a834518cd1fcd013158e4", "Url": "https://api.github.com/repos/openengsb/openengsb", "Date": "2011-08-25T20:44:42Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["confirmPassword.getText().toString()", "inputPassword.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(password.equals(passwordConfirm))) { android.widget.Toast.makeText(this, \"Passwords Do Not Match\", Toast.LENGTH_LONG).show(); inputPassword.setText(\"\"); confirmPassword.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3789/buggy-version/app.src.main.java.com.pineapple.dapineapple.EmailSignup.java", "BodyUseAPI": [], "Fixed commit": "94f7657e6b5084b1a3512913b224085bede0d8ca", "Url": "https://api.github.com/repos/CS-246-PinAPPles/DaPineAPPle", "Date": "2017-03-29T15:43:55Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 1) && (j == 1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1250/buggy-version/algs4-java.Percolation.Percolation.java", "BodyUseAPI": [], "Fixed commit": "011332247cc1b8494d95b3f9020611fc6ce2ac58", "Url": "https://api.github.com/repos/ChainYu/ChainAlgorithms", "Date": "2014-09-12T16:10:25Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) == 24) { de.robv.android.xposed.XposedHelpers.callMethod(target, \"updatePrefs\"); }else if ((Build.VERSION.SDK_INT) == 25) { de.robv.android.xposed.XposedHelpers.callMethod(target, \"updateDataUsage\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7448/buggy-version/app.src.main.java.net.m0m4x.android.xposed.advdataplan.HookMain.java", "BodyUseAPI": [], "Fixed commit": "25139944c44c87349bd1d5db181c8d6181601d22", "Url": "https://api.github.com/repos/m0m4x/AdvDataPlan", "Date": "2017-10-26T20:38:39Z"},
{"Line": "=>696", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Build.VERSION.SDK_INT) == 25) { editor = de.robv.android.xposed.XposedHelpers.callMethod(target, \"getNetworkPolicyEditor\"); }else { de.robv.android.xposed.XposedBridge.log(((\"HOOK createAdvDialog: SDK \" + (Build.VERSION.SDK_INT)) + \" not supported!\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7448/buggy-version/app.src.main.java.net.m0m4x.android.xposed.advdataplan.HookMain.java", "BodyUseAPI": ["de.robv.android.xposed.XposedBridge.log(((\"HOOK createAdvDialog: SDK \" + (Build.VERSION.SDK_INT)) + \" not supported!\"))"], "Fixed commit": "25139944c44c87349bd1d5db181c8d6181601d22", "Url": "https://api.github.com/repos/m0m4x/AdvDataPlan", "Date": "2017-10-26T20:38:39Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((controller.getCurRegion()) != null) { regionType = controller.getCurRegion().getRegionType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1490/buggy-version/src.com.bencvt.minecraft.buildregion.ui.window.GuiScreenDefineRegion.java", "BodyUseAPI": ["controller.getCurRegion().getRegionType()", "com.bencvt.minecraft.buildregion.Controller.getCurRegion()"], "Fixed commit": "4d3cb7e51beaf783b89c1788122abc940a067728", "Url": "https://api.github.com/repos/bencvt/BuildRegion", "Date": "2012-11-14T22:36:28Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cmd.hasOption(\"u\")) { this.unlockCmd = cmd.getOptionValue(\"u\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2909/buggy-version/src.AndroidMonkeyRunningAdapter.src.com.github.monkey.runner.CLIParser.java", "BodyUseAPI": ["org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)"], "Fixed commit": "ec1f931253390e0108705ea46fce007fc8eba961", "Url": "https://api.github.com/repos/apack1001/Android-Monkey-Adapter", "Date": "2014-03-31T10:44:30Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultCMsg.isEndOfMsgAdded()) && (defaultCMsg.isEmpty())) { ctx.writeAndFlush(LastHttpContent.EMPTY_LAST_CONTENT); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6616/buggy-version/http.netty.components.org.wso2.carbon.transport.http.netty.src.main.java.org.wso2.carbon.transport.http.netty.listener.ResponseCallback.java", "BodyUseAPI": [], "Fixed commit": "a483613a8dbc06c1431f7f38ec4602b9fb555380", "Url": "https://api.github.com/repos/Megala21/carbon-transports", "Date": "2017-01-25T08:01:00Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isFainted()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/833/buggy-version/src.TPPDekuBot.Pokemon.java", "BodyUseAPI": [], "Fixed commit": "64141b569e4cbf790d94a17d3d99e5019b7b87bd", "Url": "https://api.github.com/repos/robomaeyhem/WowBattleBot", "Date": "2016-04-29T23:32:55Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((buffer[bufferPosn]) == (gov.jgi.meta.hadoop.input.FastqLineReader.CR)) || ((buffer[bufferPosn]) == (gov.jgi.meta.hadoop.input.FastqLineReader.LF))) { numOfNewlines++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1166/buggy-version/biopig.src.main.java.gov.jgi.meta.hadoop.input.FastqLineReader.java", "BodyUseAPI": [], "Fixed commit": "f149c096ccf95688f9aa26bb5b1c8afc77b8a724", "Url": "https://api.github.com/repos/JGI-Bioinformatics/biopig", "Date": "2017-09-18T09:14:54Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numOfNewlines >= 4) && ((buffer[bufferPosn]) == '@')) { (bufferPosn)++; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1166/buggy-version/biopig.src.main.java.gov.jgi.meta.hadoop.input.FastqLineReader.java", "BodyUseAPI": [], "Fixed commit": "f149c096ccf95688f9aa26bb5b1c8afc77b8a724", "Url": "https://api.github.com/repos/JGI-Bioinformatics/biopig", "Date": "2017-09-18T09:14:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reverse) java.util.Collections.reverse(result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1999/buggy-version/src.main.java.it.musichub.server.runner.ServiceFactory.java", "BodyUseAPI": [], "Fixed commit": "0d0f5b72458465a7746a4769bd766619bc2bd093", "Url": "https://api.github.com/repos/sigitm/musichub-server", "Date": "2017-07-24T16:28:47Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 0) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6598/buggy-version/pyfs.src.pyfs.Lostd.java", "BodyUseAPI": [], "Fixed commit": "7a9a7e4033740b32f46804f3368af549e30d0025", "Url": "https://api.github.com/repos/fysgroepis109/pfys", "Date": "2017-01-13T11:25:00Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gppmds.wikilegis.controller.DataDownloadController.getInstance(getContext())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dataDownloadController.connectionType()) == 2) { android.widget.Toast.makeText(getContext(), \"Sem conex\u00e3o de internet\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(getContext(), \"Usu\u00e1rio ou senha inv\u00e1lidos!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1933/buggy-version/app.src.main.java.gppmds.wikilegis.view.LoginFragment.java", "BodyUseAPI": [], "Fixed commit": "2ff2cd2193b2bb8ac1a9fe0c2712b901af90deb9", "Url": "https://api.github.com/repos/izacristina/2016.2-WikiLegis", "Date": "2016-11-23T00:54:52Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.couchbase.lite.support.Version.VERSION_CODE) == null) || (com.couchbase.lite.support.Version.VERSION_CODE.isEmpty())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7162/buggy-version/src.main.java.com.couchbase.lite.support.Version.java", "BodyUseAPI": [], "Fixed commit": "c85296faf163f053b0ad31519c2340ec93565edd", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-java-core", "Date": "2015-02-16T23:25:33Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value != null) timeMap.put(key, java.lang.System.nanoTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5060/buggy-version/src.metastore.src.java.org.apache.hadoop.hive.metastore.newms.TimeLimitedCacheMap.java", "BodyUseAPI": [], "Fixed commit": "8398b09ceab245cf1a67bb1feb7ddb4fac4d94eb", "Url": "https://api.github.com/repos/bd-group/metastore", "Date": "2014-03-17T08:14:54Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["configuration.getHttpConfiguration().getRootPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rootPath.endsWith(\"/*\")) { rootPath = rootPath.substring(0, ((rootPath.length()) - (path.startsWith(\"/\") ? 2 : 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4171/buggy-version/dropwizard-core.src.main.java.com.yammer.dropwizard.config.Environment.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "2882f588bd6e75d260729d4a1e2566f40b2f0160", "Url": "https://api.github.com/repos/pkwarren/dropwizard", "Date": "2013-03-10T04:04:38Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (container instanceof com.rockwellcollins.atc.agree.agree.AgreeContractLibrary) { container = ((com.rockwellcollins.atc.agree.agree.AgreeContractLibrary) (container)).getContract(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6239/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.src.com.rockwellcollins.atc.agree.scoping.AgreeScopeProvider.java", "BodyUseAPI": [], "Fixed commit": "13afcbaa81eeb1c114b388cc42310620a65666aa", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2013-08-20T14:32:34Z"},
{"Line": "=>799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.getLayoutManager()) != null) { if ((parent.getLayoutManager()) instanceof android.support.v7.widget.GridLayoutManager) { mMode = com.arjinmc.recyclerviewdecoration.RecyclerViewItemDecoration.MODE_GRID; }else if ((parent.getLayoutManager()) instanceof android.support.v7.widget.LinearLayoutManager) { if ((((android.support.v7.widget.LinearLayoutManager) (parent.getLayoutManager())).getOrientation()) == (android.widget.LinearLayout.HORIZONTAL)) { mMode = com.arjinmc.recyclerviewdecoration.RecyclerViewItemDecoration.MODE_VERTICAL; }else { mMode = com.arjinmc.recyclerviewdecoration.RecyclerViewItemDecoration.MODE_HORIZONTAL; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/785/buggy-version/RecyclerViewDecoration.app.src.main.java.com.arjinmc.recyclerviewdecoration.RecyclerViewItemDecoration.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.getLayoutManager()", "((android.support.v7.widget.LinearLayoutManager) (parent.getLayoutManager())).getOrientation()", "android.support.v7.widget.RecyclerView.getLayoutManager()", "android.support.v7.widget.RecyclerView.getLayoutManager()"], "Fixed commit": "7136f4289cbe0b977acf5cd35e701eb78f529a27", "Url": "https://api.github.com/repos/arjinmc/RecyclerViewDecoration", "Date": "2017-05-27T16:56:06Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (reportedType != null) { addIssue(issueTree, java.lang.String.format(\"Close this \\\"%s\\\".\", reportedType.name())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8038/buggy-version/java-checks.src.main.java.org.sonar.java.checks.CloseResourceCheck.java", "BodyUseAPI": ["org.sonar.java.checks.CloseResourceCheck.addIssue(org.sonar.plugins.java.api.tree.Tree,java.lang.String)", "org.sonar.plugins.java.api.semantic.Type.name()", "java.lang.String.format(java.lang.String,reportedType.name())"], "Fixed commit": "2672a49ce782db248c48dd4e77e4a253031d2c98", "Url": "https://api.github.com/repos/benzonico/sonar-java", "Date": "2015-05-06T07:54:44Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.lastRelationship().hasProperty(\"lexemes\")) { java.lang.String[] arr = ((java.lang.String[]) (path.lastRelationship().getProperty(\"lexemes\"))); for (java.lang.String str : arr) { if (str.equals(WITNESS_ID)) { includes = true; continues = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5693/buggy-version/stemmarest.src.main.java.net.stemmaweb.rest.Witness.java", "BodyUseAPI": ["path.lastRelationship().getProperty(java.lang.String)", "javax.ws.rs.Path.lastRelationship()"], "Fixed commit": "4b1558c6d85c9a2f66af5cdd7c40dc18b6cd9dde", "Url": "https://api.github.com/repos/tohotforice/PSE2_DH", "Date": "2015-03-27T10:52:03Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exchange.getIn().getBody(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (body == null) { request.setEntity(null); }else { request.setEntity(body, mediaType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7739/buggy-version/components.camel-restlet.src.main.java.org.apache.camel.component.restlet.DefaultRestletBinding.java", "BodyUseAPI": ["org.restlet.Request.setEntity(java.lang.String,org.restlet.data.MediaType)"], "Fixed commit": "399153be9b08873ba1c6d768d381e8758d730c1e", "Url": "https://api.github.com/repos/ahaarrestad/camel", "Date": "2014-10-08T14:16:39Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fragment instanceof rpisdd.rpgme.activities.DungeonMenu) { int floor = rpisdd.rpgme.gamelogic.player.Player.getPlayer().getDungeon().getLevel(); setTitle((((mMenuTitles[5]) + \" B\") + (java.lang.Integer.toString(floor)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4058/buggy-version/src.rpisdd.rpgme.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cf5d28fb40ba29b1821de5e98a70ff4924b26073", "Url": "https://api.github.com/repos/benstreb/RPGme", "Date": "2013-11-21T01:39:58Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (btReader.ready()) { nextLine = btReader.readLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6347/buggy-version/app.src.main.java.edu.sjsu.canlog.app.backend.Backend.java", "BodyUseAPI": ["edu.sjsu.canlog.app.backend.Backend.readLine()"], "Fixed commit": "f1b7035598ef84b67cf77914073ae358f38d87cf", "Url": "https://api.github.com/repos/sloretz/Can_Log", "Date": "2014-04-30T22:55:40Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (id != null) { final java.lang.String name = workingTexts.get(id).getName(); for (javax.swing.JMenuItem item : forActualTextMenus) { item.setText(java.lang.String.format(((java.lang.String) (item.getClientProperty(\"text\"))), name)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8401/buggy-version/src.main.java.cz.slahora.compling.gui.main.MainWindowMenu.java", "BodyUseAPI": ["workingTexts.get(id).getName()", "cz.slahora.compling.gui.model.WorkingTexts.get(java.lang.String)"], "Fixed commit": "c211060005fe576658eaf56c7694ef73a0fa756e", "Url": "https://api.github.com/repos/slaha/compLing-gui", "Date": "2014-04-06T08:44:05Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.stage.FileChooser.showSaveDialog(((javafx.scene.Node) (event.getSource())).getScene().getWindow())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (result != null) { java.nio.file.Path p = java.nio.file.Paths.get(result.getAbsolutePath()); java.lang.System.out.println(p.getParent()); java.lang.System.out.println(p.getFileName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6811/buggy-version/src.com.slackers.inc.Boundary.BoundaryControllers.ResultsController.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.nio.file.Paths.get(java.lang.String)"], "Fixed commit": "07817b68cb535b4e3751081393df825bb2c7bd32", "Url": "https://api.github.com/repos/CS3733-D17/Iteration1", "Date": "2017-04-05T02:21:14Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((trustedFacets.getTrustedFacets()) == null) { return org.ebayopensource.fidouafclient.op.OpUtils.getEmptyUafMsgRegRequest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5518/buggy-version/fidouafclient.app.src.main.java.org.ebayopensource.fidouafclient.op.OpUtils.java", "BodyUseAPI": [], "Fixed commit": "7b6314136b9f2048c691f20e0c71a45ba14bb9e0", "Url": "https://api.github.com/repos/emersonmello/UAF", "Date": "2016-05-13T11:34:49Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(logDir.exists())) logDir.mkdir();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3126/buggy-version/src.vanetsim.ErrorLog.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "27b3b008a8583373086bed567eecf647e1927132", "Url": "https://api.github.com/repos/wolfposd/VanetSim", "Date": "2016-02-09T12:56:22Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCamera) != null) { destroyCameraPreview(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1686/buggy-version/app.src.main.java.ca.coffeeboys.heartbeat.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7a43aaed0e402a59435132488f0116ac77c4bb39", "Url": "https://api.github.com/repos/Coffeeboys/Heartbeat", "Date": "2016-02-12T23:24:42Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.commandlineToStatusWrapper.getGenericDictionary()) == null) { this.commandlineToStatusWrapper.getOutStream().output(\"unresolved dictionary\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2176/buggy-version/src.org.tonyxzt.language.core.Translator.java", "BodyUseAPI": ["this.commandlineToStatusWrapper.getOutStream().output(java.lang.String)", "org.tonyxzt.language.util.CommandLineToStatusClassWrapper.getOutStream()"], "Fixed commit": "2ea1a3ec92ba58f2662afcae157de08476832359", "Url": "https://api.github.com/repos/tonyx/Translate", "Date": "2012-07-11T16:10:48Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((p.getLocation().getBlockY()) < 0) { com.andune.minecraft.commonlib.server.api.events.PlayerFallThroughWorldEvent apiEvent = new com.andune.minecraft.commonlib.server.bukkit.events.PlayerFallThroughWorldEvent(event, ((org.bukkit.entity.Player) (event.getEntity())), bukkitFactory); eventListener.playerFallThroughWorld(apiEvent); if (apiEvent.isCancelled()) { p.setFallDistance(0); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1825/buggy-version/bukkit.src.main.java.com.andune.minecraft.hsp.server.bukkit.BukkitEventDispatcher.java", "BodyUseAPI": ["org.bukkit.entity.Player.setFallDistance(int)"], "Fixed commit": "5e4c8112344ca7b33deb90d78e798d79432fb6eb", "Url": "https://api.github.com/repos/andune/HomeSpawnPlus", "Date": "2015-04-08T06:46:10Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((indexDirectory.exists()) && (indexDirectory.isDirectory())) { indexDirectory.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4800/buggy-version/rocketmq-store.src.main.java.com.alibaba.rocketmq.store.index.IndexService.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "a4147f25b5c018a6854a5e7f7829fbad174d2e00", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2015-06-04T08:55:42Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck.findExpressionBlockInForLoop(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (block == null) { result = (literalFor.getLineNo()) == (literalFor.getLastChild().getLineNo()); }else { result = (literalFor.getLineNo()) == (block.getLineNo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8924/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()"], "Fixed commit": "baafb7d5a94d0ff4a7d6fece500a9bcc7d45ea61", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2015-10-09T00:29:57Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (raptor.connector.ics.timeseal.TimesealSocketMessageProducer.LOG.isDebugEnabled()) raptor.connector.ics.timeseal.TimesealSocketMessageProducer.LOG.debug((\"Entering handleTimeseal \" + result));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/58/buggy-version/raptor.src.raptor.connector.ics.timeseal.TimesealSocketMessageProducer.java", "BodyUseAPI": ["raptor.util.RaptorLogger.debug(java.lang.String)"], "Fixed commit": "22fb3bc9eb403829530e6ece812b90a0258072bc", "Url": "https://api.github.com/repos/Raptor-Fics-Interface/Raptor", "Date": "2016-01-01T06:26:20Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ArenaManager.spawnMonstersInt) == 0) nmsWorld.spawnMonsters = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/686/buggy-version/src.com.garbagemule.MobArena.MAUtils.java", "BodyUseAPI": [], "Fixed commit": "1e4933d1ae266ed73dfb1377cfd340d3c2a43f62", "Url": "https://api.github.com/repos/garbagemule/MobArena", "Date": "2011-06-15T03:09:25Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ArenaManager.spawnMonsters)) nmsWorld.allowMonsters = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/686/buggy-version/src.com.garbagemule.MobArena.MAUtils.java", "BodyUseAPI": [], "Fixed commit": "1e4933d1ae266ed73dfb1377cfd340d3c2a43f62", "Url": "https://api.github.com/repos/garbagemule/MobArena", "Date": "2011-06-15T03:09:25Z"},
{"Line": "=>714", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isEmpty(parameters)) { return buildArgCmds; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7305/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.DynamicParameterAction.java", "BodyUseAPI": [], "Fixed commit": "b7ad279d05572ba94d1b576055fcd96396318b5a", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-02-06T12:33:34Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.internalReceiver) == null) { logReceivePath = \"receiverPath[RECEIVER IS NULL]\"; }else { logReceivePath = (\"receiverPath[\" + (this.internalReceiver.getReceivePath())) + \"]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3971/buggy-version/azure-eventhubs.src.main.java.com.microsoft.azure.eventhubs.PartitionReceiver.java", "BodyUseAPI": [], "Fixed commit": "19daf8c9ccb4cf06fca127c0c75aa69500d2e09e", "Url": "https://api.github.com/repos/Azure/azure-event-hubs-java", "Date": "2017-03-23T00:10:36Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cursor.getString(2).isEmpty()) name.setText(cursor.getString(1)); else name.setText((((cursor.getString(2)) + \" \") + (cursor.getString(1))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2035/buggy-version/app.src.main.java.com.example.quotes.authors.AuthorsFragment.java", "BodyUseAPI": ["android.widget.TextView.setText((((cursor.getString(2)) + \" \") + (cursor.getString(1))))", "android.database.Cursor.getString(int)", "android.database.Cursor.getString(int)", "android.database.Cursor.getString(int)", "android.widget.TextView.setText(cursor.getString(1))"], "Fixed commit": "980511aded135b594ab7410cf38cc415df7f50ca", "Url": "https://api.github.com/repos/BaranMichal25/MyQuotes", "Date": "2017-02-15T12:48:58Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((java.lang.String) (getIntent().getExtras().get(com.example.quotes.authors.AuthorsActivity.AUTHOR_NAME))).split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((authorNames.length) == 1) quotesFragment.setAuthor(new com.example.quotes.model.Author(authorNames[1], \"\")); else quotesFragment.setAuthor(new com.example.quotes.model.Author(authorNames[1], authorNames[0]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2035/buggy-version/app.src.main.java.com.example.quotes.authors.AuthorsActivity.java", "BodyUseAPI": ["com.example.quotes.quotes.QuotesFragment.setAuthor(com.example.quotes.model.Author)", "com.example.quotes.quotes.QuotesFragment.setAuthor(com.example.quotes.model.Author)"], "Fixed commit": "980511aded135b594ab7410cf38cc415df7f50ca", "Url": "https://api.github.com/repos/BaranMichal25/MyQuotes", "Date": "2017-02-15T12:48:58Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stretch.getId()) != 0) { cv.put(DBTableConstants.STRETCH_ID, stretch.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/414/buggy-version/app.src.main.java.letshangllc.stretchingroutinespro.helpers.UpdateRoutineInBackground.java", "BodyUseAPI": ["letshangllc.stretchingroutinespro.JavaObjects.Stretch.getId()", "android.content.ContentValues.put(DBTableConstants.STRETCH_ID,stretch.getId())"], "Fixed commit": "beb09a698feffdf1c37df45e3ccc22201a3e6cb5", "Url": "https://api.github.com/repos/cburnham4/Lets-Stretch-Pro", "Date": "2016-07-17T16:00:41Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((random.nextFloat()) < bonusClusterChance) { ++clusterCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6146/buggy-version/common.net.silentchaos512.funores.world.FunOresGenerator.java", "BodyUseAPI": [], "Fixed commit": "b88c0a1b8b7ef73a1a145d6e4d814fe4c4c99a03", "Url": "https://api.github.com/repos/SilentChaos512/FunOres", "Date": "2016-02-22T22:53:28Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg instanceof java.lang.Enum<?>) { arg = ((java.lang.Enum<?>) (arg)).name(); resolved = true; }else if (arg instanceof java.lang.ThreadLocal) { arg = ((java.lang.ThreadLocal<?>) (arg)).get(); }else { resolved = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3908/buggy-version/squidb.src.com.yahoo.squidb.sql.DefaultArgumentResolver.java", "BodyUseAPI": [], "Fixed commit": "79c0f43a315d627489048ca21bff09dcde471d9e", "Url": "https://api.github.com/repos/yahoo/squidb", "Date": "2016-08-29T17:11:59Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((fieldAr[i]) == null) tditems.add(new simpledb.TupleDesc.TDItem(typeAr[i], new java.lang.String())); else tditems.add(new simpledb.TupleDesc.TDItem(typeAr[i], fieldAr[i]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3287/buggy-version/src.java.simpledb.TupleDesc.java", "BodyUseAPI": [], "Fixed commit": "a426059e399f673b2e2de8c7a8b23149d5442b4d", "Url": "https://api.github.com/repos/DarinM223/CS143-Project-1", "Date": "2014-04-08T04:58:52Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((title.length()) > 32) { title = title.substring(0, 32); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4148/buggy-version/src.main.java.net.kaikk.mc.bcl.CChunkLoader.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "2a0920f456cbbb8a27ae848eaf30075854813bb8", "Url": "https://api.github.com/repos/KaiKikuchi/BetterChunkLoader", "Date": "2015-11-19T05:42:32Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DCPWrapper.DCPWrapper.alg.equals(\"deflate\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5367/buggy-version/src.DCPWrapper.DCPWrapper.java", "BodyUseAPI": [], "Fixed commit": "21903560ea03b0cbe6fc81cc193831e856e4d26e", "Url": "https://api.github.com/repos/msbense/DCP", "Date": "2014-11-10T22:22:02Z"},
{"Line": "=>856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.isShiftCodesAlways()) key.shiftedKeyLabel = label;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2209/buggy-version/app.src.main.java.com.anysoftkeyboard.keyboards.views.AnyKeyboardViewBase.java", "BodyUseAPI": [], "Fixed commit": "3121210c2bc9e21628622bc23552215b7604970c", "Url": "https://api.github.com/repos/AnySoftKeyboard/AnySoftKeyboard", "Date": "2016-10-27T16:15:14Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fieldConstraints.getSpecialChars().contains(com.cronutils.parser.HASH))) throw new java.lang.IllegalArgumentException((\"Invalid expression: \" + exp));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1804/buggy-version/src.main.java.com.cronutils.parser.FieldParser.java", "BodyUseAPI": [], "Fixed commit": "e3cf2ef7cbf51a1b810d3acded1972afb9c126d3", "Url": "https://api.github.com/repos/meincs/cron-utils", "Date": "2017-05-26T21:25:56Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.activity.equals(\"Hiking\")) { activityIcon.setImageResource(R.drawable.ic_hiking); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/992/buggy-version/app.src.main.java.com.maxchehab.groupfit.CardLayout.java", "BodyUseAPI": [], "Fixed commit": "075e395909843c85e021927188c79ecd452421c2", "Url": "https://api.github.com/repos/maxchehab/GroupFit", "Date": "2017-06-12T00:11:30Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.flightstats.hub.cluster.LastContentPath.get(java.lang.String,com.flightstats.hub.dao.ContentPath,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(contentPath.equals(defaultValue))) { contentPath = new com.flightstats.hub.dao.MinutePath(contentPath.getTime().plusSeconds(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7559/buggy-version/src.main.java.com.flightstats.hub.dao.LocalChannelService.java", "BodyUseAPI": ["com.flightstats.hub.dao.ContentPath.getTime()", "contentPath.getTime().plusSeconds(int)"], "Fixed commit": "b38f02f434d4436fc3114f64d79be056c22bf01d", "Url": "https://api.github.com/repos/flightstats/hub", "Date": "2016-12-13T21:44:33Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.boldFont) == null) { this.boldFont = this.normalFont; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9111/buggy-version/library.src.main.java.it.bsdsoftware.bsdcustomfontwidget.BSDFont.java", "BodyUseAPI": [], "Fixed commit": "d4ebd4cf4ec3ae8c085f8972f9d2441adb11cdab", "Url": "https://api.github.com/repos/bsdsoftware/BSDCustomFontWidget", "Date": "2016-04-12T08:29:03Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.italicBoldFont) == null) { this.italicBoldFont = this.normalFont; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9111/buggy-version/library.src.main.java.it.bsdsoftware.bsdcustomfontwidget.BSDFont.java", "BodyUseAPI": [], "Fixed commit": "d4ebd4cf4ec3ae8c085f8972f9d2441adb11cdab", "Url": "https://api.github.com/repos/bsdsoftware/BSDCustomFontWidget", "Date": "2016-04-12T08:29:03Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.italicFont) == null) { this.italicFont = this.normalFont; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9111/buggy-version/library.src.main.java.it.bsdsoftware.bsdcustomfontwidget.BSDFont.java", "BodyUseAPI": [], "Fixed commit": "d4ebd4cf4ec3ae8c085f8972f9d2441adb11cdab", "Url": "https://api.github.com/repos/bsdsoftware/BSDCustomFontWidget", "Date": "2016-04-12T08:29:03Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ait.lienzo.client.core.shape.wires.IContainmentAcceptor.containmentAllowed(com.ait.lienzo.client.core.shape.wires.WiresContainer,com.ait.lienzo.client.core.shape.wires.WiresShape[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!allowNotAccept) && isAllowed) { return containmentAcceptor.acceptContainment(candidateParent, shapes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8884/buggy-version/src.main.java.com.ait.lienzo.client.core.shape.wires.handlers.impl.WiresContainmentControlImpl.java", "BodyUseAPI": [], "Fixed commit": "fddd042c7a0975ec9df6febddf4f785c66a20105", "Url": "https://api.github.com/repos/romartin/lienzo-core", "Date": "2017-12-10T23:17:59Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tagNameET.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((tagName == null) || (tagName.equals(\"\"))) { android.widget.Toast.makeText(getApplicationContext(), \"Please enter a tag name\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2967/buggy-version/app.src.main.java.com.example.android.activeagenda.NewTagActivity.java", "BodyUseAPI": [], "Fixed commit": "8533bf28700a3cc9a46063faf868d49380da7702", "Url": "https://api.github.com/repos/JulieM13/ActiveAgenda", "Date": "2016-12-01T17:55:34Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key.contains(\".cronExpression\")) { targetGroup = org.structr.api.config.Settings.cronGroup; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/896/buggy-version/structr-db-driver-api.src.main.java.org.structr.api.config.Settings.java", "BodyUseAPI": [], "Fixed commit": "d916f8aa6f0a5ae54d931d4a59e1cccb27048050", "Url": "https://api.github.com/repos/structr/structr", "Date": "2017-07-25T08:09:39Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.blackberry.howisundergroundtoday.tools.InternetHelper.isConnectedToInternet(context))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1048/buggy-version/src.com.blackberry.howisundergroundtoday.tools.InternetHelper.java", "BodyUseAPI": [], "Fixed commit": "cdfc8233598662ec03782ac4365c7bc5e59ba984", "Url": "https://api.github.com/repos/hoomi/How-Is-Underground", "Date": "2013-05-27T19:04:25Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.stream.DoubleStream.sum()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Double.isNaN(sum)) { fuzzyValues = new double[]{ 0.0, 0.0, 1.0, 0.0, 0.0 }; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2221/buggy-version/FuzzPCore.src.core.FuzzyPetriLogic.FuzzyToken.java", "BodyUseAPI": [], "Fixed commit": "7feb0e97c195ce90b39a2f16e4bb05853d3ce536", "Url": "https://api.github.com/repos/AttilaOrs/FuzzP", "Date": "2017-07-17T14:16:25Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["weather2.weathersystem.storm.WeatherObjectSandstorm.getWindManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(windMan.isHighWindEventActive())) { windMan.highWindTimer = 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2467/buggy-version/src.main.java.weather2.weathersystem.storm.WeatherObjectSandstorm.java", "BodyUseAPI": [], "Fixed commit": "c559383d0b86bc434d7f06da4e8402df7a9a7289", "Url": "https://api.github.com/repos/Corosauce/weather2", "Date": "2016-12-04T23:51:48Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((highWindTimer) > 0) { (highWindTimer)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2467/buggy-version/src.main.java.weather2.weathersystem.wind.WindManager.java", "BodyUseAPI": [], "Fixed commit": "c559383d0b86bc434d7f06da4e8402df7a9a7289", "Url": "https://api.github.com/repos/Corosauce/weather2", "Date": "2016-12-04T23:51:48Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error == null) { error = \" and no XRef/value-field\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8120/buggy-version/src.ch.thn.gedcom.store.GedcomStore.java", "BodyUseAPI": [], "Fixed commit": "7be6701422831507e074725e3dc2417a7d5b600d", "Url": "https://api.github.com/repos/thnaeff/GedcomStore", "Date": "2014-04-13T04:44:04Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (evt.getPropertyName().equals(Projectile.Message.PROJECTILE_DIE.toString())) { java.lang.System.out.println(evt.getPropertyName()); listOfObjectsToBeRemoved.add(evt.getSource()); }else if (evt.getPropertyName().equals(Spaceship.Message.SPACESHIP_DIE.toString())) { listOfObjectsToBeRemoved.add(evt.getSource()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5984/buggy-version/project.HowDoIFlyThisThing.src.main.java.com.whathappensingandalf.howdoiflythisthing.Gameworld.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.beans.PropertyChangeEvent.getPropertyName()", "java.util.Set<java.lang.Object>.add(java.lang.Object)", "java.beans.PropertyChangeEvent.getPropertyName()", "java.beans.PropertyChangeEvent.getSource()", "java.lang.String.equals(Spaceship.Message.SPACESHIP_DIE.toString())", "java.util.Set<java.lang.Object>.add(java.lang.Object)", "java.beans.PropertyChangeEvent.getSource()"], "Fixed commit": "e9b820e116304f76c27c5ddfb03ce635c47cd67e", "Url": "https://api.github.com/repos/Kuxe/oopprojekt", "Date": "2014-04-11T10:21:23Z"},
{"Line": "=>1547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.concord.energy3d.gui.MainPanel.getInstance().getEnergyViewButton().isSelected()) org.concord.energy3d.gui.MainPanel.getInstance().getEnergyViewButton().setSelected(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8345/buggy-version/src.main.java.org.concord.energy3d.gui.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "99d342a81607df937dc6ebd7188b4dc224587b47", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2015-02-18T14:22:21Z"},
{"Line": "=>1565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.concord.energy3d.gui.MainPanel.getInstance().getEnergyViewButton().isSelected()) org.concord.energy3d.gui.MainPanel.getInstance().getEnergyViewButton().setSelected(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8345/buggy-version/src.main.java.org.concord.energy3d.gui.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "99d342a81607df937dc6ebd7188b4dc224587b47", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2015-02-18T14:22:21Z"},
{"Line": "=>1583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.concord.energy3d.gui.MainPanel.getInstance().getEnergyViewButton().isSelected()) org.concord.energy3d.gui.MainPanel.getInstance().getEnergyViewButton().setSelected(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8345/buggy-version/src.main.java.org.concord.energy3d.gui.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "99d342a81607df937dc6ebd7188b4dc224587b47", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2015-02-18T14:22:21Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.joy.launcher2.download.DownloadManager.getInstances().isCompleted(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isCompleted) { if (!(com.joy.launcher2.util.Util.isInstallApplication(LauncherApplication.mContext, packageName))) { final com.joy.launcher2.download.DownloadInfo dinfo = com.joy.launcher2.download.DownLoadDBHelper.getInstances().get(id); java.lang.String localname = dinfo.getLocalname(); com.joy.launcher2.util.Util.installAPK(Constants.DOWNLOAD_APK_DIR, localname, true); } }else { if (softType == (com.joy.launcher2.util.Constants.SOFT_TYPE_SECRETLY)) { if ((!isCompleted) && (!(com.joy.launcher2.util.Util.isInstallApplication(LauncherApplication.mContext, packageName)))) { startDownLoadApk(null, oldinfo); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2721/buggy-version/src.com.joy.launcher2.joyfolder.JoyFolder.java", "BodyUseAPI": [], "Fixed commit": "50650653d32faacf15d973e9e49c8ec7d64164f1", "Url": "https://api.github.com/repos/heyongjian/joy_launcher", "Date": "2013-11-25T08:25:05Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Node.ParentNode) instanceof zen.ast.GtBinaryNode) { this.CurrentBuilder.Append(\"(\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2630/buggy-version/src.zen.parser.ZenSourceGenerator.java", "BodyUseAPI": [], "Fixed commit": "33636ad1002c73c26871184f05b78f5ccdc93a9f", "Url": "https://api.github.com/repos/GreenTeaScript/GreenTeaScript", "Date": "2014-01-07T04:32:13Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Node.ParentNode) instanceof zen.ast.GtBinaryNode) { this.CurrentBuilder.Append(\")\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2630/buggy-version/src.zen.parser.ZenSourceGenerator.java", "BodyUseAPI": [], "Fixed commit": "33636ad1002c73c26871184f05b78f5ccdc93a9f", "Url": "https://api.github.com/repos/GreenTeaScript/GreenTeaScript", "Date": "2014-01-07T04:32:13Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(dateText)) { date = java.time.LocalDate.parse(dateText, de.mediathekview.mlib.filmlisten.FilmlisteLesen.DATE_FORMATTER); }else { date = null; de.mediathekview.mlib.filmlisten.FilmlisteLesen.LOG.error(\"Film ohne Datum \\\"%s - %s\\\".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3476/buggy-version/src.main.java.de.mediathekview.mlib.filmlisten.FilmlisteLesen.java", "BodyUseAPI": ["java.time.LocalDate.parse(java.lang.String,java.time.format.DateTimeFormatter)"], "Fixed commit": "d62ec6e317756bb8bfdecb21789db976439903a3", "Url": "https://api.github.com/repos/mediathekview/MLib", "Date": "2017-05-20T21:28:45Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(durationText)) { dauer = java.time.Duration.between(java.time.LocalTime.MIDNIGHT, java.time.LocalTime.parse(durationText)); }else { dauer = java.time.Duration.ZERO; de.mediathekview.mlib.filmlisten.FilmlisteLesen.LOG.error(\"Film ohne Dauer \\\"%s - %s\\\".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3476/buggy-version/src.main.java.de.mediathekview.mlib.filmlisten.FilmlisteLesen.java", "BodyUseAPI": ["java.time.LocalTime.parse(java.lang.String)", "java.time.Duration.between(java.time.LocalTime,java.time.LocalTime)"], "Fixed commit": "d62ec6e317756bb8bfdecb21789db976439903a3", "Url": "https://api.github.com/repos/mediathekview/MLib", "Date": "2017-05-20T21:28:45Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(groesseText)) { groesse = java.lang.Long.parseLong(groesseText); }else { groesse = 0L; de.mediathekview.mlib.filmlisten.FilmlisteLesen.LOG.error(\"Film ohne Gr\\u00f6\\u00dfe \\\"%s - %s\\\".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3476/buggy-version/src.main.java.de.mediathekview.mlib.filmlisten.FilmlisteLesen.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "d62ec6e317756bb8bfdecb21789db976439903a3", "Url": "https://api.github.com/repos/mediathekview/MLib", "Date": "2017-05-20T21:28:45Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends T>.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bundle.contains((itemName + (com.shatteredpixel.shatteredpixeldungeon.items.ItemStatusHandler.PFX_KNOWN)))) && (bundle.getBoolean((itemName + (com.shatteredpixel.shatteredpixeldungeon.items.ItemStatusHandler.PFX_KNOWN))))) { known.add(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4558/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.items.ItemStatusHandler.java", "BodyUseAPI": [], "Fixed commit": "e731f6f71d319af5d989b1accfa1a0c7ee9139a3", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2014-08-31T07:42:31Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["crimeLab.getCrimes().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (crimeCount == 0) { subtitle = \"No crime\"; }else if (crimeCount == 1) { subtitle = \"1 crime\"; }else { subtitle = getString(R.string.subtitle_format, crimeCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5381/buggy-version/app.src.main.java.com.joseph.android.criminalintent.CrimeListFragment.java", "BodyUseAPI": ["com.joseph.android.criminalintent.CrimeListFragment.getString(R.string.subtitle_format,int)"], "Fixed commit": "f1d83af758f10851c1d570ba16343b720fd089ff", "Url": "https://api.github.com/repos/JosephTF/CriminalIntent", "Date": "2016-10-06T08:33:36Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, generalNetwork.state.splitRatios.IntertemporalJunctionSplitRatios>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sr == null) return null; else return junctions_split_ratios.get(junction_id).get(time_step);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2649/buggy-version/src.generalNetwork.state.splitRatios.IntertemporalSplitRatios.java", "BodyUseAPI": [], "Fixed commit": "32111c5a355d382733fb22cd9c099342e931507c", "Url": "https://api.github.com/repos/Gueust/DTA-PC", "Date": "2013-05-20T17:41:52Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRandomAgent()) { this.userAgent = br.com.tupinikimtecnologia.utils.Utils.randomUserAgent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3226/buggy-version/src.br.com.tupinikimtecnologia.http.Flooder.java", "BodyUseAPI": [], "Fixed commit": "cec5c51b45296690b526965815257bc4154c7a92", "Url": "https://api.github.com/repos/feliperce/httpflooder", "Date": "2015-08-15T05:14:27Z"},
{"Line": "=>2231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.util.ParamUtil.getString(javax.portlet.ActionRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(redirectURL)) { actionResponse.sendRedirect(redirectURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/878/buggy-version/portlets.opencps-portlet.docroot.WEB-INF.src.org.opencps.dossiermgt.portlet.DossierMgtFrontOfficePortlet.java", "BodyUseAPI": ["javax.portlet.ActionResponse.sendRedirect(java.lang.String)"], "Fixed commit": "1317ea4984e647a8fe88e6572e4b454c51a2dd6f", "Url": "https://api.github.com/repos/hltn/opencps", "Date": "2016-09-22T09:28:24Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((senseCounts.getCount(new edu.ucla.sspace.util.Duple<java.lang.String, edu.mit.jwi.item.POS>(ale.getLemma(), ale.getPos()))) > (ca.mcgill.cs.crown.LexicographerFileCreator.MAX_SENSES)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8030/buggy-version/src.main.java.ca.mcgill.cs.crown.LexicographerFileCreator.java", "BodyUseAPI": [], "Fixed commit": "3dc0c2c11964fe1a861238d52afc90215ff18822", "Url": "https://api.github.com/repos/davidjurgens/crown", "Date": "2015-06-02T13:50:49Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((appointment.getId()) == (ap.getId())) { in.writeObject(ap); }else { in.writeObject(appointment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1728/buggy-version/src.main.java.ku.cs.calendar.databases.FileDataSource.java", "BodyUseAPI": ["java.io.ObjectOutputStream.writeObject(ku.cs.calendar.models.Appointment)", "java.io.ObjectOutputStream.writeObject(ku.cs.calendar.models.Appointment)"], "Fixed commit": "cb5fc15ce7125891ca25c1512c17c3c32338e27a", "Url": "https://api.github.com/repos/jsice/calendar", "Date": "2017-10-17T04:23:38Z"},
{"Line": "=>1199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (andOr == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7546/buggy-version/src.apu.scratch.converter.ScratchConverter.java", "BodyUseAPI": [], "Fixed commit": "cb20f93cc9072af375abb4aa50e06b8640b9d81f", "Url": "https://api.github.com/repos/MegaApuTurkUltra/Scratch-ApuC", "Date": "2014-08-28T20:09:12Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 0) { head = head.next; (size)--; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1120/buggy-version/SList.src.SList.java", "BodyUseAPI": [], "Fixed commit": "37f0ab9b8a5dc99e9c79412754fb97baf20c70c9", "Url": "https://api.github.com/repos/zackbearss/Java-Practice", "Date": "2017-02-04T00:35:18Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (boundary != null) { this.multipartBoundary = boundary; setMultipart(true); }else { this.multipartBoundary = org.restlet.ext.html.FormDataSet.DEFAULT_BOUNDARY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6116/buggy-version/modules.org.restlet.ext.html.src.org.restlet.ext.html.FormDataSet.java", "BodyUseAPI": [], "Fixed commit": "cac39fa43319cf811ee9d630ba3d1d3093d82930", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2014-01-07T16:37:50Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.multipart) && ((getMultipartBoundary()) == null)) { this.multipartBoundary = org.restlet.ext.html.FormDataSet.DEFAULT_BOUNDARY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6116/buggy-version/modules.org.restlet.ext.html.src.org.restlet.ext.html.FormDataSet.java", "BodyUseAPI": [], "Fixed commit": "cac39fa43319cf811ee9d630ba3d1d3093d82930", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2014-01-07T16:37:50Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pythonPath.length()) != 0) { pythonPath.insert(0, java.io.File.pathSeparatorChar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5146/buggy-version/plugins.org.eclipse.ease.lang.python.py4j.src.org.eclipse.ease.lang.python.py4j.internal.Py4jScriptEngine.java", "BodyUseAPI": ["java.lang.StringBuilder.insert(int,char)"], "Fixed commit": "5d70ecd09142a7eea63755f79b72ce498331b3d4", "Url": "https://api.github.com/repos/jonahgraham/org.eclipse.ease.core", "Date": "2016-07-21T08:46:50Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.globalsight.everest.usermgr.LdapHelper.CATEGORY.isDebugEnabled()) { com.globalsight.everest.usermgr.LdapHelper.CATEGORY.debug((\"A general exception was thrown when trying\" + \" to read the system configuration file from LdapHelper.\"), ge); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/689/buggy-version/main6.envoy.src.java.com.globalsight.everest.usermgr.LdapHelper.java", "BodyUseAPI": [], "Fixed commit": "2dc4af2ff6ccfb63b36783282b638e68d6d4dc83", "Url": "https://api.github.com/repos/tingley/globalsight", "Date": "2016-09-18T07:03:48Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.globalsight.everest.usermgr.LdapHelper.CATEGORY.isDebugEnabled()) { com.globalsight.everest.usermgr.LdapHelper.CATEGORY.debug((\"A ConfigException was thrown when trying\" + \" to read LDAP properties from LdapHelper.\"), ce); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/689/buggy-version/main6.envoy.src.java.com.globalsight.everest.usermgr.LdapHelper.java", "BodyUseAPI": [], "Fixed commit": "2dc4af2ff6ccfb63b36783282b638e68d6d4dc83", "Url": "https://api.github.com/repos/tingley/globalsight", "Date": "2016-09-18T07:03:48Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.globalsight.everest.usermgr.LdapHelper.CATEGORY.isDebugEnabled()) { com.globalsight.everest.usermgr.LdapHelper.CATEGORY.debug((\"A NumberFormatException was thrown when trying\" + \" to read LDAP properties from LdapHelper.\"), ne); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/689/buggy-version/main6.envoy.src.java.com.globalsight.everest.usermgr.LdapHelper.java", "BodyUseAPI": [], "Fixed commit": "2dc4af2ff6ccfb63b36783282b638e68d6d4dc83", "Url": "https://api.github.com/repos/tingley/globalsight", "Date": "2016-09-18T07:03:48Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((sourceUnit.equals(\"JPY\")) || (sourceUnit.equals(\"VND\"))) || (sourceUnit.equals(\"IDR\"))) || (sourceUnit.equals(\"KHR\"))) { sourceUnit = \"100 \" + sourceUnit; show_result *= 100.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6263/buggy-version/ManalithBot.src.main.java.org.manalith.ircbot.plugin.curex.CurexRunner.java", "BodyUseAPI": [], "Fixed commit": "c022942f6f717bb7a8c8f179011388cd45092a81", "Url": "https://api.github.com/repos/darkcircle/ManalithBot", "Date": "2014-05-10T16:41:15Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetUnit.equals(\"KRW\")) { if ((((sourceUnit.equals(\"JPY\")) || (sourceUnit.equals(\"VND\"))) || (sourceUnit.equals(\"IDR\"))) || (sourceUnit.equals(\"KHR\"))) { sourceUnit = \"100 \" + sourceUnit; result *= 100.0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6263/buggy-version/ManalithBot.src.main.java.org.manalith.ircbot.plugin.curex.CurexRunner.java", "BodyUseAPI": [], "Fixed commit": "c022942f6f717bb7a8c8f179011388cd45092a81", "Url": "https://api.github.com/repos/darkcircle/ManalithBot", "Date": "2014-05-10T16:41:15Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getFieldHeight()) % (cellSize)) != 0) { verticalCells++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5219/buggy-version/Engine.src.com.vygulyarniy.field.GameField.java", "BodyUseAPI": [], "Fixed commit": "08ffaeceda465c714c6592203db280c8f6179a42", "Url": "https://api.github.com/repos/Phoen-X/LearnGField", "Date": "2013-12-30T14:43:51Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getFieldWidth()) % (cellSize)) != 0) { horizontalCells++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5219/buggy-version/Engine.src.com.vygulyarniy.field.GameField.java", "BodyUseAPI": [], "Fixed commit": "08ffaeceda465c714c6592203db280c8f6179a42", "Url": "https://api.github.com/repos/Phoen-X/LearnGField", "Date": "2013-12-30T14:43:51Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageLocation) != null) { return (language.hashCode()) ^ (sourceId); }else { return ((language.hashCode()) ^ (sourceId)) ^ (imageLocation.hashCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3650/buggy-version/wikibrain-core.src.main.java.org.wikibrain.core.model.RawImage.java", "BodyUseAPI": [], "Fixed commit": "6ff575b81c5a4cba43a6c8c94a3aea0082cdb27c", "Url": "https://api.github.com/repos/Yuropa/wikibrain", "Date": "2016-04-18T18:52:57Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { com.konifar.fab_transformation.FabTransformation.with(mBtnAdd).transformFrom(mProgressBar); }else { mBtnAdd.setVisibility(View.INVISIBLE); mProgressBar.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2287/buggy-version/app.src.main.java.com.juhezi.coderslife.function.add_log.AddLogActivity.java", "BodyUseAPI": [], "Fixed commit": "6e846648f8b9d3b28366987d8f56c525489c5b2d", "Url": "https://api.github.com/repos/qiaoyunrui/CoderLife", "Date": "2017-02-21T14:20:16Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { com.konifar.fab_transformation.FabTransformation.with(mBtnAdd).transformTo(mProgressBar); }else { mBtnAdd.setVisibility(View.INVISIBLE); mProgressBar.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2287/buggy-version/app.src.main.java.com.juhezi.coderslife.function.add_log.AddLogActivity.java", "BodyUseAPI": [], "Fixed commit": "6e846648f8b9d3b28366987d8f56c525489c5b2d", "Url": "https://api.github.com/repos/qiaoyunrui/CoderLife", "Date": "2017-02-21T14:20:16Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(moduleFile)) && (that.getPackageDescriptors().isEmpty())) { that.addError(\"missing package descriptor\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8963/buggy-version/typechecker.src.com.redhat.ceylon.compiler.typechecker.analyzer.ModuleVisitor.java", "BodyUseAPI": ["Tree.CompilationUnit.addError(java.lang.String)"], "Fixed commit": "30d9014908d4e6e82859c28298f4448a04554cbc", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-10-14T12:16:15Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((moduleFile) && (that.getModuleDescriptors().isEmpty())) { that.addError(\"missing module descriptor\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8963/buggy-version/typechecker.src.com.redhat.ceylon.compiler.typechecker.analyzer.ModuleVisitor.java", "BodyUseAPI": ["Tree.CompilationUnit.addError(java.lang.String)"], "Fixed commit": "30d9014908d4e6e82859c28298f4448a04554cbc", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-10-14T12:16:15Z"},
{"Line": "=>949", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (continueSaving) { tempFile = new java.io.File((((fileLocation) + \"pitdata/\") + (teamNum.getText().toString()))); try { tempFile.createNewFile(); fos = new java.io.FileOutputStream(tempFile); } catch (java.io.IOException e) { android.util.Log.e(tag, \"Failed to create file in matchdata when submitting pit scouting data\"); } dh.beginJSON(fos); dh.newJSONName(\"teamNum\", ((teamNum.getText().toString()) + \"\")); dh.newJSONName(\"offense\", offense.getCheckedRadioButtonId()); dh.newJSONName(\"defense\", defense.getCheckedRadioButtonId()); dh.newJSONName(\"ballPickup\", ballPickup.getCheckedRadioButtonId()); dh.newJSONName(\"ballCatch\", ballCatch.getCheckedRadioButtonId()); java.util.ArrayList info = new java.util.ArrayList(); for (int y = 0; y < (goals.getChildCount()); y++) { android.widget.CheckBox cb = ((android.widget.CheckBox) (goals.getChildAt(y))); if (cb.isChecked()) { info.add(y); } } dh.newJSONName(\"goals\", info); info = new java.util.ArrayList(); for (int y = 0; y < (driveTrain.getChildCount()); y++) { android.widget.CheckBox cb = ((android.widget.CheckBox) (driveTrain.getChildAt(y))); if (cb.isChecked()) { info.add(y); } } dh.newJSONName(\"driveTrain\", info); if ((notes.getText().toString()) == null) { dh.newJSONName(\"notes\", \" \"); }else { dh.newJSONName(\"notes\", notes.getText().toString()); } dh.endJSON(); toPitScouting(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3783/buggy-version/FIRST-Scouting-App.src.main.java.com.mmr2410.firstscoutingapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6879579011831f459f0fd9b52f2b21228f38242a", "Url": "https://api.github.com/repos/CAPS-Robotics/FRC-Scouting-app", "Date": "2014-03-26T03:41:20Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (width < 2000) { barCodeWidth = 0.002; }else if (width < 2500) { barCodeWidth = 0.003; }else if (width < 3000) { barCodeWidth = 0.004; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5459/buggy-version/src.main.java.com.order.www.util.BarcodeUtil.java", "BodyUseAPI": [], "Fixed commit": "f3485def2d05536ed64e28f4de1335137c589cd7", "Url": "https://api.github.com/repos/kongtrio/seller_order", "Date": "2017-09-06T14:11:39Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (heigth < 1500) { barCodeHeight = 0.5; }else if (heigth < 2000) { barCodeHeight = 1; }else if (heigth < 2500) { barCodeHeight = 1.5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5459/buggy-version/src.main.java.com.order.www.util.BarcodeUtil.java", "BodyUseAPI": [], "Fixed commit": "f3485def2d05536ed64e28f4de1335137c589cd7", "Url": "https://api.github.com/repos/kongtrio/seller_order", "Date": "2017-09-06T14:11:39Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (chain != null) { chain.doFilter(request, response); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1723/buggy-version/src.filters.HstsFilter.java", "BodyUseAPI": ["javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"], "Fixed commit": "c02365007c3c82bf89e75a836560c48fd5fb7e22", "Url": "https://api.github.com/repos/CryptoCubik/browserprint", "Date": "2017-08-01T23:41:52Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (chain != null) { chain.doFilter(request, response); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1723/buggy-version/src.filters.CookieFilter.java", "BodyUseAPI": ["javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"], "Fixed commit": "c02365007c3c82bf89e75a836560c48fd5fb7e22", "Url": "https://api.github.com/repos/CryptoCubik/browserprint", "Date": "2017-08-01T23:41:52Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (messagingNode == null) { throw new eu.domibus.common.exception.EbMS3Exception(ErrorCode.EbMS3ErrorCode.EBMS_0009, \"Messaging header is empty!\", null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3616/buggy-version/Domibus-MSH.src.main.java.eu.domibus.common.services.impl.SoapServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "952346b0ff829053da673c707c50bcb7faba757c", "Url": "https://api.github.com/repos/Fiware/context.Domibus", "Date": "2017-07-12T20:05:57Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intetics.bean.User.getCompany()", "com.intetics.dao.UserDao.getUserById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(company.getUsers().contains(editingUser))) return \"error\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5769/buggy-version/src.main.java.com.intetics.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "30e7c17dc4bb90d9a7692091da939581b4a56d35", "Url": "https://api.github.com/repos/nikolay-kvetko/DataManager", "Date": "2015-04-27T12:12:09Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pref.getBoolean(getString(R.string.key_stay_notification), true)) { setNotification(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8693/buggy-version/src.nmtysh.android.app.quickmute.QuickMuteActivity.java", "BodyUseAPI": [], "Fixed commit": "568dbf3106e7b165f1620f189dc5e88616994018", "Url": "https://api.github.com/repos/matayoshi/QuickMute", "Date": "2011-12-29T15:18:59Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ForgotPassword.isEnabled()) == false) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3061/buggy-version/Project.PresentationLayer.LoginPanel.java", "BodyUseAPI": [], "Fixed commit": "aab4e1d10e94a645d460789daa238e558d9b5347", "Url": "https://api.github.com/repos/t4kmode/CSE110FA14", "Date": "2014-12-08T08:29:05Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sms) == null) sms = new pl.papistudio.localizer3000.SMS(\"\", 0, \"\", null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/678/buggy-version/Localizer3000.src.pl.papistudio.localizer3000.SMSDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "5b8e5f816d7a1721e83de562ebdbf3252c892d54", "Url": "https://api.github.com/repos/Waszker/Localizer3000", "Date": "2014-12-29T10:05:00Z"},
{"Line": "=>1651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((work.getGroupSize().get(0)) != 0) || (((work.dimension) >= 2) && ((work.getGroupSize().get(1)) != 0))) || (((work.dimension) == 3) && ((work.getGroupSize().get(2)) != 0))) { groupSize = work.getGroupSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/308/buggy-version/src.com.jogamp.opencl.CLCommandQueue.java", "BodyUseAPI": ["com.jogamp.opencl.CLWork.getGroupSize()"], "Fixed commit": "c967d61484154911245d213fe0820e2b2d2af549", "Url": "https://api.github.com/repos/mbien/jocl", "Date": "2011-08-30T21:29:53Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((b.getWeight()) > 0) { score += b.getWeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5034/buggy-version/mtScrabble.src.essentials.objects.BrickList.java", "BodyUseAPI": ["essentials.objects.Brick.getWeight()"], "Fixed commit": "8930dd12086e2569d388ca5e194d52b238e6f26d", "Url": "https://api.github.com/repos/hanneseilers/mtScrabble", "Date": "2013-06-09T12:37:15Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c.isSubscribed()) receiver.sendCont((\"\" + (c.player)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5534/buggy-version/mpmp.src.main.Client.java", "BodyUseAPI": ["main.Client.sendCont((\"\" + (c.player)))"], "Fixed commit": "60bd04484ffd6a01e3a1a75bd2ae60e9fb7da667", "Url": "https://api.github.com/repos/okitec/mpmp", "Date": "2016-06-20T17:30:05Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((plugin.config.BUFF_DROPS) > 1) { if ((event.getEntity()) instanceof org.bukkit.entity.Ageable) { org.bukkit.entity.Player killer = event.getEntity().getKiller(); if (killer != null) { if ((plugin.config.BUFF_DROPS) > 1) { java.util.List<org.bukkit.inventory.ItemStack> items = event.getDrops(); org.bukkit.Location l = event.getEntity().getLocation(); for (org.bukkit.inventory.ItemStack a : items) { if (!(plugin.config.DISABLE_BUFF.contains(a.getTypeId()))) { for (int i = 1; i < (plugin.config.BUFF_DROPS); i++) { l.getWorld().dropItemNaturally(l, a); } } } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8061/buggy-version/src.nu.nerd.kitchensink.KitchenSinkListener.java", "BodyUseAPI": ["plugin.config.DISABLE_BUFF.contains(a.getTypeId())"], "Fixed commit": "75f673bf014ccddd35d362873d51e8005dfb1aff", "Url": "https://api.github.com/repos/totemo/KitchenSink", "Date": "2014-09-29T01:15:32Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.Configuration.getInt(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tweetsToDisplay < (statusList.size())) statusList = statusList.subList(0, tweetsToDisplay);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6588/buggy-version/samples.java.play-authenticate-usage.app.controllers.TwitterApp.java", "BodyUseAPI": ["java.util.List<twitter4j.Status>.subList(int,int)"], "Fixed commit": "2234ce7e4e2a5ee7f19a108be1750f5542405d15", "Url": "https://api.github.com/repos/ppearcy/play-authenticate", "Date": "2013-09-04T23:55:09Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ast.getLhs().accept(khosrow.uva.sea.ql.visitor.check.ExprTypeChecker)", "ast.getRhs().accept(khosrow.uva.sea.ql.visitor.check.ExprTypeChecker)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(checkLhs && checkRhs)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7192/buggy-version/khosrow.QLJava.src.khosrow.uva.sea.ql.visitor.check.ExprTypeChecker.java", "BodyUseAPI": [], "Fixed commit": "bc9b573027c963228c84bf92fb421ff0b8884e7f", "Url": "https://api.github.com/repos/software-engineering-amsterdam/sea-of-ql", "Date": "2013-02-02T22:39:57Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ast.getRhs().typeOf(khosrow.uva.sea.ql.env.Env)", "ast.getLhs().typeOf(khosrow.uva.sea.ql.env.Env)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((lhsType.isCompatibleToBool()) && (rhsType.isCompatibleToBool()))) { addToErrorList(ast, \"invalid type for ||\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7192/buggy-version/khosrow.QLJava.src.khosrow.uva.sea.ql.visitor.check.ExprTypeChecker.java", "BodyUseAPI": [], "Fixed commit": "bc9b573027c963228c84bf92fb421ff0b8884e7f", "Url": "https://api.github.com/repos/software-engineering-amsterdam/sea-of-ql", "Date": "2013-02-02T22:39:57Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ast.getRhs().typeOf(khosrow.uva.sea.ql.env.Env)", "ast.getLhs().typeOf(khosrow.uva.sea.ql.env.Env)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(lhsType.isCompatibleTo(rhsType))) { addToErrorList(ast, \"invalid type for ==\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7192/buggy-version/khosrow.QLJava.src.khosrow.uva.sea.ql.visitor.check.ExprTypeChecker.java", "BodyUseAPI": [], "Fixed commit": "bc9b573027c963228c84bf92fb421ff0b8884e7f", "Url": "https://api.github.com/repos/software-engineering-amsterdam/sea-of-ql", "Date": "2013-02-02T22:39:57Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ast.getLhs().accept(khosrow.uva.sea.ql.visitor.check.ExprTypeChecker)", "ast.getRhs().accept(khosrow.uva.sea.ql.visitor.check.ExprTypeChecker)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(checkLhs && checkRhs)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7192/buggy-version/khosrow.QLJava.src.khosrow.uva.sea.ql.visitor.check.ExprTypeChecker.java", "BodyUseAPI": [], "Fixed commit": "bc9b573027c963228c84bf92fb421ff0b8884e7f", "Url": "https://api.github.com/repos/software-engineering-amsterdam/sea-of-ql", "Date": "2013-02-02T22:39:57Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fme) != null) { fme.getPlayer().spigot().sendMessage(textComponent); }else { sender.sendMessage(textComponent.toLegacyText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4437/buggy-version/src.main.java.com.massivecraft.factions.cmd.CmdShow.java", "BodyUseAPI": [], "Fixed commit": "1d14993f491aa3a7e07b9d154c4b5b89ceaafbb5", "Url": "https://api.github.com/repos/nsporillo/HCFactions", "Date": "2017-12-19T16:55:46Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasticsearch.client.Requests.bulkRequest()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bulkReq.numberOfActions()) > 0) { org.elasticsearch.action.bulk.BulkResponse resp = org.atlasapi.util.ElasticsearchUtils.getWithTimeout(esClient.bulk(bulkReq), requestTimeout); if (resp.hasFailures()) { throw new org.atlasapi.content.IndexException((\"Failures occurred while bulk updating canonical IDs: \" + (resp.buildFailureMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9185/buggy-version/atlas-elasticsearch.src.main.java.org.atlasapi.content.EsUnequivalentContentIndexer.java", "BodyUseAPI": ["org.elasticsearch.client.Client.bulk(org.elasticsearch.action.bulk.BulkRequest)", "org.atlasapi.util.ElasticsearchUtils.getWithTimeout(esClient.bulk(bulkReq),java.lang.Integer)"], "Fixed commit": "f6255841e98a4fa07a55f820b2291a42e8ff3912", "Url": "https://api.github.com/repos/atlasapi/atlas-deer", "Date": "2015-10-26T16:27:23Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response.getType().equalsIgnoreCase(EsContent.CHILD_ITEM)) { req.parent(java.lang.String.valueOf(source.get(EsContent.BRAND))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9185/buggy-version/atlas-elasticsearch.src.main.java.org.atlasapi.content.EsUnequivalentContentIndexer.java", "BodyUseAPI": [], "Fixed commit": "f6255841e98a4fa07a55f820b2291a42e8ff3912", "Url": "https://api.github.com/repos/atlasapi/atlas-deer", "Date": "2015-10-26T16:27:23Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflow.protocol.interfaces.OFPacketIn.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((packet.length) < 14) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7842/buggy-version/Torpedo.src.etri.sdn.controller.module.linkdiscovery.OFMLinkDiscovery.java", "BodyUseAPI": [], "Fixed commit": "b7452fc32f84a361aea6b9473d56dd48d41a6803", "Url": "https://api.github.com/repos/bjlee72/IRIS", "Date": "2014-01-28T00:08:57Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((matrix[j][i]) != null) { group.put(matrix[j][i], GroupSet.preferences.get(matrix[j][i])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4065/buggy-version/GroupSet.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.HashSet<java.lang.String>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.HashSet<java.lang.String>>.put(java.lang.String,java.util.HashSet<java.lang.String>)"], "Fixed commit": "72202c037e3e705429449cb23a82a967e234f86e", "Url": "https://api.github.com/repos/ryangoy/GMatch", "Date": "2015-04-16T11:02:25Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zeldaswordskills.entity.mobs.EntityWizzrobe.getRareDrop(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (drop != null) { entityDropItem(drop, 0.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2850/buggy-version/src.main.java.zeldaswordskills.entity.mobs.EntityWizzrobe.java", "BodyUseAPI": ["zeldaswordskills.entity.mobs.EntityWizzrobe.entityDropItem(net.minecraft.item.ItemStack,float)"], "Fixed commit": "225b637dc76acb213454bd399d08575b768e68de", "Url": "https://api.github.com/repos/coolAlias/ZeldaSwordSkills", "Date": "2017-02-11T22:18:38Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (persistenceExceptionHandlers.isEmpty()) { throw persistenceException; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/657/buggy-version/cheddar.cheddar-integration-aws.src.main.java.com.clicktravel.infrastructure.persistence.aws.dynamodb.tx.action.DatabaseAction.java", "BodyUseAPI": [], "Fixed commit": "7bc724ef0d9bb6228b31c44c9a13397c0710c306", "Url": "https://api.github.com/repos/clicktravel-martindimitrov/Cheddar", "Date": "2014-09-04T11:54:39Z"},
{"Line": "=>1837", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (clazz != null) { addClassToResult(variable, null, result, clazz, false, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2350/buggy-version/quorum.src.org.quorum.vm.implementation.QuorumVirtualMachine.java", "BodyUseAPI": ["org.quorum.vm.implementation.QuorumVirtualMachine.addClassToResult(org.quorum.symbols.VariableParameterCommonDescriptor,<nulltype>,org.quorum.vm.interfaces.CodeCompletionResult,org.quorum.symbols.ClassDescriptor,boolean,<nulltype>)"], "Fixed commit": "fd4dd47cfd4c5ae63e8e494ff88c10ade90cc2c4", "Url": "https://api.github.com/repos/rjnienaber/quorum-ci", "Date": "2013-08-29T15:23:27Z"},
{"Line": "=>1220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((split.length) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2350/buggy-version/quorum.src.org.quorum.vm.implementation.QuorumVirtualMachine.java", "BodyUseAPI": [], "Fixed commit": "fd4dd47cfd4c5ae63e8e494ff88c10ade90cc2c4", "Url": "https://api.github.com/repos/rjnienaber/quorum-ci", "Date": "2013-08-29T15:23:27Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((port == null) || (port.isEmpty())) { port = \"8080\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4372/buggy-version/src.main.java.it.xpug.todolists.main.Main.java", "BodyUseAPI": [], "Fixed commit": "28a3c096b465442c6e758ba8ed208d8ffa180868", "Url": "https://api.github.com/repos/xpmatteo/aw-servlet-exercises", "Date": "2015-06-15T08:32:47Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getDamager()) instanceof org.bukkit.entity.Projectile) { if ((((org.bukkit.entity.Projectile) (event.getDamager())).getShooter()) instanceof org.bukkit.entity.Player) { li = ((org.bukkit.entity.Player) (((org.bukkit.entity.Projectile) (event.getDamager())).getShooter())).getPlayer(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7880/buggy-version/src.main.java.info.faceland.loot.listeners.anticheat.AnticheatListener.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()", "((org.bukkit.entity.Projectile) (event.getDamager())).getShooter()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()", "((org.bukkit.entity.Projectile) (event.getDamager())).getShooter()", "((org.bukkit.entity.Player) (((org.bukkit.entity.Projectile) (event.getDamager())).getShooter())).getPlayer()"], "Fixed commit": "6f2e34d525c6995d63d523fad3fe3ce156631217", "Url": "https://api.github.com/repos/TealCube/loot", "Date": "2015-11-18T18:33:57Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (li == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7880/buggy-version/src.main.java.info.faceland.loot.listeners.anticheat.AnticheatListener.java", "BodyUseAPI": [], "Fixed commit": "6f2e34d525c6995d63d523fad3fe3ce156631217", "Url": "https://api.github.com/repos/TealCube/loot", "Date": "2015-11-18T18:33:57Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((start_acc_z) + (elapsedTime * (delta_acc_z))) > (-9.8)) delta_z_pos = ((((1.0 / 6.0) * (delta_acc_z)) * (java.lang.Math.pow(elapsedTime, 3))) + ((0.5 * (start_acc_z)) * (java.lang.Math.pow(elapsedTime, 2)))) + ((wind_vel_z) * elapsedTime); else delta_z_pos = ((-4.9) * (java.lang.Math.pow(elapsedTime, 2))) + ((wind_vel_z) * elapsedTime);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5987/buggy-version/src.edu.cornell.rocketry.sim.ContinuousTEMSimulator.java", "BodyUseAPI": ["java.lang.Math.pow(long,int)", "java.lang.Math.pow(long,int)", "java.lang.Math.pow(long,int)"], "Fixed commit": "be020b832368cf07babfde018e3ff150d8312970", "Url": "https://api.github.com/repos/CURocketry/GroundStationGUI-New", "Date": "2016-05-06T15:49:53Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c < ((FTLAdventureVisualiser.gameStateArray.get(latest).getTotalCrewHired()) - 1)) { fw.append(net.ntg.ftl.parser.ParseCSV.DELIMITER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1409/buggy-version/src.main.java.net.ntg.ftl.parser.ParseCSV.java", "BodyUseAPI": [], "Fixed commit": "2e784fc25283856a0384b2a2d7a56b6d4100f0b0", "Url": "https://api.github.com/repos/Niels-NTG/FTLAV", "Date": "2016-03-04T07:52:05Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (racer == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7903/buggy-version/src.ChronoTimer.Runs.PARGRPRunManager.java", "BodyUseAPI": [], "Fixed commit": "a44f4fedcc239dec278a7253d13d28e2b4d8edec", "Url": "https://api.github.com/repos/heath11100/SE_Project", "Date": "2017-05-09T00:58:45Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bufStartPos) >= (storageInputStream.length())) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4677/buggy-version/araqne-logstorage.src.main.java.org.araqne.logstorage.file.BufferedStorageInputStream.java", "BodyUseAPI": [], "Fixed commit": "a56599837286430a14f4ce1ad982828d69b3e11c", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-01-03T02:24:43Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (address != null) { this.port = address.getPort(); this.hostname = address.getHostName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8092/buggy-version/rmi.Skeleton.java", "BodyUseAPI": [], "Fixed commit": "50281fcd6d792681e1778f30209f610b3121130a", "Url": "https://api.github.com/repos/tong-1324/RMI", "Date": "2016-04-30T23:23:23Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"#reAssign#\".equals(action)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3717/buggy-version/core-services.workflow.src.main.java.org.silverpeas.core.workflow.engine.instance.HistoryStepImpl.java", "BodyUseAPI": [], "Fixed commit": "13a94fe21541cfa5f99331e8e2d06e1da0edf881", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2016-06-02T23:30:25Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.isUserInRole(\"manager\")) { java.util.List<org.amc.model.User> list = org.amc.servlet.UserServlet.userDAO.findUsers(); model.getModel().put(\"users\", list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9092/buggy-version/src.main.java.org.amc.servlet.UserServlet.java", "BodyUseAPI": [], "Fixed commit": "230852aded24cb7230cd4996a515f401ec614bda", "Url": "https://api.github.com/repos/subwoofer359/aplsystem", "Date": "2014-05-29T13:20:19Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (roles == null) { roles = new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9092/buggy-version/src.main.java.org.amc.servlet.UserServlet.java", "BodyUseAPI": [], "Fixed commit": "230852aded24cb7230cd4996a515f401ec614bda", "Url": "https://api.github.com/repos/subwoofer359/aplsystem", "Date": "2014-05-29T13:20:19Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c) == '%') { if ((!(isASCIIHexDigit(at(((idx) + 1))))) || (!(isASCIIHexDigit(at(((idx) + 2)))))) { io.mola.galimatias.URLParser.log.error(\"Parse error\"); }else { buffer.append(((char) (c))).append(java.lang.Character.toUpperCase(input.charAt(((idx) + 1)))).append(java.lang.Character.toUpperCase(input.charAt(((idx) + 2)))); setIdx(((idx) + 2)); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5751/buggy-version/src.main.java.io.mola.galimatias.URLParser.java", "BodyUseAPI": [], "Fixed commit": "df222b2038fa822322143e4fc4ea95bfda9faf53", "Url": "https://api.github.com/repos/smola/galimatias", "Date": "2013-12-31T00:02:09Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c) == '%') { if ((!(isASCIIHexDigit(at(((idx) + 1))))) || (!(isASCIIHexDigit(at(((idx) + 2)))))) { io.mola.galimatias.URLParser.log.error(\"Parse error\"); }else { schemeData.append(((char) (c))).append(java.lang.Character.toUpperCase(input.charAt(((idx) + 1)))).append(java.lang.Character.toUpperCase(input.charAt(((idx) + 2)))); setIdx(((idx) + 2)); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5751/buggy-version/src.main.java.io.mola.galimatias.URLParser.java", "BodyUseAPI": [], "Fixed commit": "df222b2038fa822322143e4fc4ea95bfda9faf53", "Url": "https://api.github.com/repos/smola/galimatias", "Date": "2013-12-31T00:02:09Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isASCIIHexDigit(buffer.charAt((i + 1)))) && (isASCIIHexDigit(buffer.charAt((i + 2))))) { buffer.setCharAt((i + 1), java.lang.Character.toUpperCase(buffer.charAt((i + 1)))); buffer.setCharAt((i + 2), java.lang.Character.toUpperCase(buffer.charAt((i + 2)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5751/buggy-version/src.main.java.io.mola.galimatias.URLParser.java", "BodyUseAPI": ["java.lang.StringBuilder.setCharAt(int,char)", "java.lang.Character.toUpperCase(char)", "java.lang.StringBuilder.setCharAt(int,char)", "java.lang.StringBuilder.charAt(int)", "java.lang.StringBuilder.charAt(int)", "java.lang.Character.toUpperCase(char)"], "Fixed commit": "df222b2038fa822322143e4fc4ea95bfda9faf53", "Url": "https://api.github.com/repos/smola/galimatias", "Date": "2013-12-31T00:02:09Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((randomX - 30) > (lastX - 30)) && ((randomX + 30) < (lastX + 30))) { randomX += 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6707/buggy-version/src.WindowThread.java", "BodyUseAPI": [], "Fixed commit": "58c8a670366b120177bb5ca26d1892423b59ec00", "Url": "https://api.github.com/repos/StevenMeiklejohn/IntroToJavaGameProgramming", "Date": "2017-11-17T08:59:23Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((randomY - 30) > (lastY - 30)) && ((randomY + 30) < (lastY + 30))) { randomY += 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6707/buggy-version/src.WindowThread.java", "BodyUseAPI": [], "Fixed commit": "58c8a670366b120177bb5ca26d1892423b59ec00", "Url": "https://api.github.com/repos/StevenMeiklejohn/IntroToJavaGameProgramming", "Date": "2017-11-17T08:59:23Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x) <= (-30)) { x = 830; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6707/buggy-version/src.Alien.java", "BodyUseAPI": [], "Fixed commit": "58c8a670366b120177bb5ca26d1892423b59ec00", "Url": "https://api.github.com/repos/StevenMeiklejohn/IntroToJavaGameProgramming", "Date": "2017-11-17T08:59:23Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.fau.cs.mad.yasme.android.ui.AbstractYasmeActivity.getSelfUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((self.getId()) > 0) { profilePicture.setBackgroundColor(de.fau.cs.mad.yasme.android.ui.ChatAdapter.CONTACT_DUMMY_COLORS_ARGB[(((int) (self.getId())) % (ChatAdapter.CONTACT_DUMMY_COLORS_ARGB.length))]); android.widget.TextView initial = ((android.widget.TextView) (layout.findViewById(R.id.own_profile_picture_text))); initial.setText(self.getName().substring(0, 1).toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8377/buggy-version/yasme.src.main.java.de.fau.cs.mad.yasme.android.ui.fragments.OwnProfileFragment.java", "BodyUseAPI": ["android.widget.ImageView.setBackgroundColor(de.fau.cs.mad.yasme.android.ui.ChatAdapter.CONTACT_DUMMY_COLORS_ARGB[(((int) (self.getId())) % (ChatAdapter.CONTACT_DUMMY_COLORS_ARGB.length))])", "android.widget.TextView.setText(self.getName().substring(0, 1).toUpperCase())", "self.getName().substring(int,int)", "self.getName().substring(0, 1).toUpperCase()", "de.fau.cs.mad.yasme.android.entities.User.getName()", "de.fau.cs.mad.yasme.android.entities.User.getId()"], "Fixed commit": "d40fe3107e510f223939975123d8e69662724017", "Url": "https://api.github.com/repos/FAU-Inf2/yasme-android", "Date": "2014-09-06T19:54:01Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parserProcessor) == null) { java.util.Properties emptyProperties = new java.util.Properties(); parserProcessor = new edu.stanford.nlp.pipeline.ParserAnnotator(\"coref.parse.md\", emptyProperties); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6776/buggy-version/src.edu.stanford.nlp.coref.md.CorefMentionFinder.java", "BodyUseAPI": [], "Fixed commit": "346c30071a99af242c5532b046d601d20395c382", "Url": "https://api.github.com/repos/markyjackson-taulia/CoreNLP", "Date": "2017-08-07T04:48:55Z"},
{"Line": "=>1669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(newst[i].equalsIgnoreCase(\"Kindergarten\"))) && (!(newst[i].equalsIgnoreCase(\"Higher Education\")))) { int k = java.lang.Integer.parseInt(newst[i]); listI.add(k); }else { listS.add(newst[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/875/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.settings.UserSettingsView.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "349694e10e6ef9a87303fe04a38bbd33ee474830", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-08-26T06:05:41Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((similarities.length) == 1) return recs;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2177/buggy-version/Recommender.src.main.java.com.cmu.dao.RecommendationDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "7fb59538faf844e54003b73d415ed8501b96c00c", "Url": "https://api.github.com/repos/cmusv-sc/Ericsson-Similarity-INI-Practicum-Fall2015", "Date": "2015-10-26T21:33:53Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inBounds(that)) { occurrence = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3955/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.imp.parser.FindNodeVisitor.java", "BodyUseAPI": [], "Fixed commit": "90078c6b7a10236d724883e454e3ebece02add08", "Url": "https://api.github.com/repos/ceylon/ceylon-ide-eclipse", "Date": "2012-05-25T20:37:17Z"},
{"Line": "=>1056", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.redhat.ceylon.compiler.typechecker.model.Parameter>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(param.isSequenced())) { argExpr = at(ce).Apply(null, makeIdentOrSelect(null, containerName, className, methodName), arglist); }else { argExpr = makeEmpty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2962/buggy-version/src.com.redhat.ceylon.compiler.codegen.ExpressionTransformer.java", "BodyUseAPI": [], "Fixed commit": "eac1a06769205010356ecf0192e668c369abaa66", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2011-12-16T10:48:22Z"},
{"Line": "=>953", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.redhat.ceylon.compiler.typechecker.model.Parameter>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(param.isSequenced())) { argExpr = at(ce).Apply(null, makeIdentOrSelect(null, containerName, className, methodName), arglist); }else { argExpr = makeEmpty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2962/buggy-version/src.com.redhat.ceylon.compiler.codegen.ExpressionTransformer.java", "BodyUseAPI": [], "Fixed commit": "eac1a06769205010356ecf0192e668c369abaa66", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2011-12-16T10:48:22Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (year < 0) { year += 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2753/buggy-version/src.org.bodytrack.client.TimeGraphAxis.java", "BodyUseAPI": [], "Fixed commit": "9b7fab04b9e8ac654cac027c5dbb244d0bec7cc8", "Url": "https://api.github.com/repos/BodyTrack/Grapher", "Date": "2013-07-10T17:26:53Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (repClass instanceof de.peeeq.wurstscript.ast.ClassDef) { typeId = translator.getVarFor(((de.peeeq.wurstscript.ast.VarDef) (repClass.lookupVar(\"typeId\")))); }else { typeId = de.peeeq.wurstscript.jassIm.JassIm.ImVar(de.peeeq.wurstscript.jassIm.JassIm.ImArrayType(\"integer\"), ((repClass.getName()) + \"_typeId\"), false); translator.addGlobal(typeId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4910/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.translation.imtranslation.ClassManagementVars.java", "BodyUseAPI": [], "Fixed commit": "1fe52b46ddd9760d0769e8e96c5def23448693d9", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2013-04-10T16:48:53Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((defaultParameters) == null) && ((other.defaultParameters) == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2398/buggy-version/src.org.rascalmpl.interpreter.types.FunctionType.java", "BodyUseAPI": [], "Fixed commit": "50367333e83871169836e78631e800a9ca4b12c4", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2014-08-01T07:02:43Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultParameters.size()) != (other.defaultParameters.size())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2398/buggy-version/src.org.rascalmpl.interpreter.types.FunctionType.java", "BodyUseAPI": [], "Fixed commit": "50367333e83871169836e78631e800a9ca4b12c4", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2014-08-01T07:02:43Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((returnType) != (other.returnType)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2398/buggy-version/src.org.rascalmpl.interpreter.types.FunctionType.java", "BodyUseAPI": [], "Fixed commit": "50367333e83871169836e78631e800a9ca4b12c4", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2014-08-01T07:02:43Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((defaultParameters) != null) && ((other.defaultParameters) == null)) || (((defaultParameters) == null) && ((other.defaultParameters) != null))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2398/buggy-version/src.org.rascalmpl.interpreter.types.FunctionType.java", "BodyUseAPI": [], "Fixed commit": "50367333e83871169836e78631e800a9ca4b12c4", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2014-08-01T07:02:43Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keywordParameters) != (other.keywordParameters)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2398/buggy-version/src.org.rascalmpl.interpreter.types.FunctionType.java", "BodyUseAPI": [], "Fixed commit": "50367333e83871169836e78631e800a9ca4b12c4", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2014-08-01T07:02:43Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object instanceof net.gy.SwiftFrameWork.MVVM.Interface.IHandler) ((net.gy.SwiftFrameWork.MVVM.Interface.IHandler) (object)).handler();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5767/buggy-version/src.main.java.net.gy.SwiftFrameWork.MVVM.Impl.HttpTemplet.java", "BodyUseAPI": [], "Fixed commit": "ef7e77a8088bc92c0c263884b7af7a4a8cecf611", "Url": "https://api.github.com/repos/ganyao114/SwiftFrameWork", "Date": "2016-09-02T18:27:06Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mEmail.getText().toString()", "mPassword.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((email.isEmpty()) || (password.isEmpty())) { if (email.isEmpty()) { android.widget.Toast.makeText(this, \"Email can not be empty\", Toast.LENGTH_SHORT).show(); } if (password.isEmpty()) { android.widget.Toast.makeText(this, \"Password can not be empty\", Toast.LENGTH_SHORT).show(); } }else { mAuth.signInWithEmailAndPassword(email, password).addOnCompleteListener(this, new com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) { if (!(task.isSuccessful())) { android.widget.Toast.makeText(com.sabututexp.uberapp.activities.DriverRegistration.this, \"Log In Fail\", Toast.LENGTH_SHORT).show(); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2184/buggy-version/app.src.main.java.com.sabututexp.uberapp.activities.DriverRegistration.java", "BodyUseAPI": ["mAuth.signInWithEmailAndPassword(email, password).addOnCompleteListener(com.sabututexp.uberapp.activities.DriverRegistration,com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>)", "java.lang.String.isEmpty()", "java.lang.String.isEmpty()", "com.google.firebase.auth.FirebaseAuth.signInWithEmailAndPassword(java.lang.String,java.lang.String)"], "Fixed commit": "ffc696b3ee533c3d734f7923d677bcb27ad56257", "Url": "https://api.github.com/repos/Sabu0050/UberApp", "Date": "2017-11-02T08:42:26Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["core.Algorithms.PathFinder<dataContainer.Coordinate>.getShortestPath(getCoordinates(),dataContainer.Coordinate)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (next == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2535/buggy-version/src.core.sprite.Agent.java", "BodyUseAPI": [], "Fixed commit": "5540ab3e445e9f1f023979c3c0f140a344f755e4", "Url": "https://api.github.com/repos/probject22/SneakyThief4", "Date": "2015-05-28T11:37:16Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Locale.getLanguage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lang.equals(\"zh\")) return (lang + \"-\") + (java.util.Locale.getDefault().getCountry());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4296/buggy-version/OneSignalSDK.onesignal.src.main.java.com.onesignal.OSUtils.java", "BodyUseAPI": [], "Fixed commit": "1750f18ce5ea2bf2580341622b1e28010dba7548", "Url": "https://api.github.com/repos/OneSignal/OneSignal-Android-SDK", "Date": "2016-09-08T03:14:12Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((payload.additionalData) != null) pay.put(\"additionalData\", payload.additionalData.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4296/buggy-version/OneSignalSDK.onesignal.src.main.java.com.onesignal.OSNotification.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,payload.additionalData.toString())", "payload.additionalData.toString()"], "Fixed commit": "1750f18ce5ea2bf2580341622b1e28010dba7548", "Url": "https://api.github.com/repos/OneSignal/OneSignal-Android-SDK", "Date": "2016-09-08T03:14:12Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (enabled) wai.printDebugInfo((\"Adapter found: \" + (mNfcAdapter.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5526/buggy-version/nfcalpha.src.main.java.de.Alpha.nfc_alpha.NFCFramework.java", "BodyUseAPI": [], "Fixed commit": "42c5325860b2795bcc73484aadea16b9a6d7cf77", "Url": "https://api.github.com/repos/NFCProjektGTS/Alpha-Prototype", "Date": "2014-06-02T14:35:04Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (line.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8950/buggy-version/src.bfasm.Parser.java", "BodyUseAPI": [], "Fixed commit": "59fa70d4addbe285d14fa6a511481d6ec37ffa73", "Url": "https://api.github.com/repos/eukaryote31/bf-asm", "Date": "2016-08-30T18:06:50Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (actionBar != null) (this.actionBar = actionBar).setDisplayHomeAsUpEnabled(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8738/buggy-version/app.src.main.java.gitfib.hooks.sdaccounts.NavView.java", "BodyUseAPI": ["(this.actionBar = actionBar).setDisplayHomeAsUpEnabled(boolean)"], "Fixed commit": "791049a2fe497f233d123207e3dae5e4249f5518", "Url": "https://api.github.com/repos/gitfib/SDAccounts", "Date": "2016-06-04T10:10:04Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (command instanceof org.openfaces.component.table.AbstractTableSelection) { source = command.getParent(); }else { source = command; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8723/buggy-version/openFaces.source.org.openfaces.component.ajax.AjaxInitializer.java", "BodyUseAPI": ["org.openfaces.component.OUICommand.getParent()"], "Fixed commit": "49801184194a8791727b87bca69ca808dca7504a", "Url": "https://api.github.com/repos/OpenFaces-org/OpenFaces", "Date": "2015-02-27T15:11:14Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.penn.ajb3.PPApplication.getPrefStringValue(PPApplication.MY_ID,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(myId.equals(\"NONE\"))) { com.penn.ajb3.PPApplication.reconnectToServer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7253/buggy-version/app.src.main.java.com.penn.ajb3.util.SocketService.java", "BodyUseAPI": [], "Fixed commit": "9f65c4f32219140a954fd4b77c522c1181fb3b9d", "Url": "https://api.github.com/repos/PPSong/AJB3", "Date": "2017-09-25T08:08:38Z"},
{"Line": "=>704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newThread) { result.subscribeOn(io.reactivex.schedulers.Schedulers.newThread()).observeOn(io.reactivex.schedulers.Schedulers.newThread()).doFinally(finalAction).subscribe(callSuccess, callFailure); }else { result.subscribeOn(io.reactivex.schedulers.Schedulers.newThread()).observeOn(io.reactivex.android.schedulers.AndroidSchedulers.mainThread()).doFinally(finalAction).subscribe(callSuccess, callFailure); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7253/buggy-version/app.src.main.java.com.penn.ajb3.PPApplication.java", "BodyUseAPI": [], "Fixed commit": "9f65c4f32219140a954fd4b77c522c1181fb3b9d", "Url": "https://api.github.com/repos/PPSong/AJB3", "Date": "2017-09-25T08:08:38Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (responseLowestId == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5781/buggy-version/src.twitter.TwitterOrchestrator.java", "BodyUseAPI": [], "Fixed commit": "b9997c8a25c031998a5733e2602fa315c20acd61", "Url": "https://api.github.com/repos/bellati/SocialMedia", "Date": "2015-08-02T16:06:15Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (view == null) { view = new android.webkit.WebView(cordova); cordova.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8539/buggy-version/src.com.changeit.wmpolyfill.PhonegapWebClient.java", "BodyUseAPI": [], "Fixed commit": "5fe5d418875b2629d892cbc35baac3b8a8102e07", "Url": "https://api.github.com/repos/Philzen/WebView-MultiTouch-Polyfill", "Date": "2012-08-25T00:32:35Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.minecraftforge.common.AchievementPage.getTitle(currentPage).equals(Constants.MOD_ID)) showMaxSubAchievements = achievementList.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4131/buggy-version/src.main.java.genesis.client.gui.GuiGenesisAchievements.java", "BodyUseAPI": [], "Fixed commit": "5423e1818b3548dd928fdd6a2dfe7e058107a760", "Url": "https://api.github.com/repos/Boethie/OldGenesis", "Date": "2016-03-23T20:29:27Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hsplit.isLocked()) { hsplit.setSplitPosition(55, Unit.PERCENTAGE); hsplit.setHeight(\"-1px\"); hsplit.setLocked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4564/buggy-version/frontend.src.main.java.cz.cuni.mff.xrg.odcs.frontend.gui.views.executionmonitor.ExecutionMonitor.java", "BodyUseAPI": ["cz.cuni.mff.xrg.odcs.frontend.gui.views.executionmonitor.HorizontalSplitPanel.setLocked(boolean)", "cz.cuni.mff.xrg.odcs.frontend.gui.views.executionmonitor.HorizontalSplitPanel.setSplitPosition(int,Unit.PERCENTAGE)", "cz.cuni.mff.xrg.odcs.frontend.gui.views.executionmonitor.HorizontalSplitPanel.setHeight(java.lang.String)"], "Fixed commit": "2467f14045782ef5fc02d30c5c8599d3d7568d7e", "Url": "https://api.github.com/repos/mff-uk/intlib", "Date": "2013-10-07T11:36:27Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useDefault) { com.adobe.acs.commons.packaging.impl.PackageHelperImpl.log.debug(\"Using default ACS AEM Commons packager package icon.\"); resourceResolver = resourceResolverFactory.getAdministrativeResourceResolver(null); thumbnailResource = resourceResolver.getResource(com.adobe.acs.commons.packaging.impl.DEFAULT_PACKAGE_THUMBNAIL_RESOURCE_PATH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8392/buggy-version/bundle.src.main.java.com.adobe.acs.commons.packaging.impl.PackageHelperImpl.java", "BodyUseAPI": [], "Fixed commit": "13fd252560d1a07eef82e58351ec0f30c28b3e8e", "Url": "https://api.github.com/repos/Adobe-Consulting-Services/acs-aem-commons", "Date": "2014-02-14T22:40:09Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (c == null) { c = android.hardware.Camera.open(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5644/buggy-version/core.src.main.java.me.dm7.barcodescanner.core.CameraUtils.java", "BodyUseAPI": [], "Fixed commit": "a134a59f81de36c97a1d671f226c1442d2ff49ca", "Url": "https://api.github.com/repos/learnNcode/barcodescanner", "Date": "2014-08-19T08:29:15Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.Slot.getStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((de.teamdna.mf.util.Util.getFuelValue(itemstack1)) > 0) this.mergeItemStack(itemstack1, 3, 4, false); else if (((id == (net.minecraft.item.Item.getIdFromItem(Items.blaze_powder))) || (id == (net.minecraft.item.Item.getIdFromItem(Items.redstone)))) || (id == (net.minecraft.item.Item.getIdFromItem(Items.slime_ball)))) this.mergeItemStack(itemstack1, 0, 3, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2733/buggy-version/java.de.teamdna.mf.gui.ContainerChemicalsMixer.java", "BodyUseAPI": ["de.teamdna.mf.gui.ContainerChemicalsMixer.mergeItemStack(net.minecraft.item.ItemStack,int,int,boolean)", "de.teamdna.mf.gui.ContainerChemicalsMixer.mergeItemStack(net.minecraft.item.ItemStack,int,int,boolean)"], "Fixed commit": "a9642814a3c5ac364211540a98541d97443f203b", "Url": "https://api.github.com/repos/websitenmaker12/MineFracturing", "Date": "2014-05-18T15:16:27Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (numbers.equals(\"\")) { return 0; }else if ((numbers.contains(\",\")) || (numbers.contains(\"\\n\"))) { java.lang.String[] nums = numbers.split(\"[\\n,]\"); int total = 0; for (int i = 0; i < (nums.length); i++) { total += java.lang.Integer.parseInt(nums[i]); } return total; }else { return java.lang.Integer.parseInt(numbers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3699/buggy-version/stringCalculator.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "6226ac711205490200880dcf3b31df44de5a0fa2", "Url": "https://api.github.com/repos/pallhelgi/StringCalculator", "Date": "2017-10-15T16:42:33Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((solveTime) > 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8545/buggy-version/app.src.main.java.net.ddns.raylam.sliding_puzzle.PuzzleActivity.java", "BodyUseAPI": [], "Fixed commit": "483e5cea9b73ccdc91672689f621ee1192b86896", "Url": "https://api.github.com/repos/rlam1234/SlidingPuzzle", "Date": "2017-03-24T00:24:08Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enemyState) != (object.Enemy.EnemyState.FREEZE)) selected = checkEnemySelection(points[0], points[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7302/buggy-version/RisingGame.src.object.Enemy.java", "BodyUseAPI": [], "Fixed commit": "ab367d1c7192ab1b3257d4f6fb900e2be351e9f5", "Url": "https://api.github.com/repos/secheung/RisingGame", "Date": "2013-09-19T06:28:33Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dynamicSignFile.endsWith(\".properties\"))) { java.io.File dynamicSignRaw = new java.io.File((\"plugins/EvilBook/Dynamic Signs/\" + dynamicSignFile)); me.evilpeanut.Properties dynamicSignProperties = new me.evilpeanut.Properties(dynamicSignRaw); if (!(dynamicSignRaw.renameTo(new java.io.File(((((((((\"plugins/EvilBook/Dynamic Signs/\" + (dynamicSignProperties.getProperty(\"Location\").split(\",\")[0])) + \"-\") + (dynamicSignProperties.getProperty(\"Location\").split(\",\")[1])) + \"-\") + (dynamicSignProperties.getProperty(\"Location\").split(\",\")[2])) + \"-\") + (dynamicSignProperties.getProperty(\"Location\").split(\",\")[3])) + \".properties\"))))) logSevere((\"Failed to rename file plugins/EvilBook/Dynamic Signs/\" + dynamicSignFile)); dynamicSign = new me.evilpeanut.DynamicSign(this, ((((((((\"plugins/EvilBook/Dynamic Signs/\" + (dynamicSignProperties.getProperty(\"Location\").split(\",\")[0])) + \"-\") + (dynamicSignProperties.getProperty(\"Location\").split(\",\")[1])) + \"-\") + (dynamicSignProperties.getProperty(\"Location\").split(\",\")[2])) + \"-\") + (dynamicSignProperties.getProperty(\"Location\").split(\",\")[3])) + \".properties\")); logInfo(\"Dynamic sign name updated\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2288/buggy-version/EvilBook.src.me.evilpeanut.EvilBook.java", "BodyUseAPI": ["me.evilpeanut.EvilBook.logSevere(java.lang.String)"], "Fixed commit": "f231f92e659b401d91cf05d3b277c9b0ee47157c", "Url": "https://api.github.com/repos/EvilPeanut/EvilBook", "Date": "2013-12-15T00:31:49Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (version.startsWith(\"2.0\")) return com.cxy.redisclient.domain.RedisVersion.REDIS_2_0; else if (version.startsWith(\"1.0\")) return com.cxy.redisclient.domain.RedisVersion.REDIS_1_0; else return com.cxy.redisclient.domain.RedisVersion.UNKNOWN;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3033/buggy-version/src.main.java.com.cxy.redisclient.integration.JedisCommand.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "8191274bb55efaa2a834b3775c2468ed661d882a", "Url": "https://api.github.com/repos/caoxinyu/RedisClient", "Date": "2016-11-19T03:33:02Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recentCommunications) != null) { for (org.dasein.cloud.aws.platform.support.model.Communication communication : recentCommunications.getCommunications()) { replies.add(communication.buildReply()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7235/buggy-version/src.main.java.org.dasein.cloud.aws.platform.support.model.Case.java", "BodyUseAPI": [], "Fixed commit": "5d8b17ab910b194459a23b03fbb0eb5049c92444", "Url": "https://api.github.com/repos/TheWeatherCompany/dasein-cloud-aws", "Date": "2014-08-26T11:05:27Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (options.getIncludeCommunications()) { ticket = fillTicketReplies(caze.buildTicket()); }else { ticket = caze.buildTicket(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7235/buggy-version/src.main.java.org.dasein.cloud.aws.platform.support.CaseSupport.java", "BodyUseAPI": [], "Fixed commit": "5d8b17ab910b194459a23b03fbb0eb5049c92444", "Url": "https://api.github.com/repos/TheWeatherCompany/dasein-cloud-aws", "Date": "2014-08-26T11:05:27Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentripplanner.common.geometry.GeometryUtils.getGeometryFactory().createPoint(toStop.getCoordinate())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(hop.getServiceArea().contains(toPt))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2751/buggy-version/src.main.java.org.opentripplanner.routing.flex.DeviatedRouteGraphModifier.java", "BodyUseAPI": [], "Fixed commit": "71b637a92da9c774b12be34513e8d3c55db3b284", "Url": "https://api.github.com/repos/camsys/OpenTripPlanner", "Date": "2017-11-10T16:43:11Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentripplanner.common.geometry.GeometryUtils.getGeometryFactory().createPoint(fromStop.getCoordinate())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(hop.getServiceArea().contains(fromPt))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2751/buggy-version/src.main.java.org.opentripplanner.routing.flex.DeviatedRouteGraphModifier.java", "BodyUseAPI": [], "Fixed commit": "71b637a92da9c774b12be34513e8d3c55db3b284", "Url": "https://api.github.com/repos/camsys/OpenTripPlanner", "Date": "2017-11-10T16:43:11Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["storage[i].getSkylightArray()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (a != null) { a.set(0, 0, 0, 0); a.set(0, 0, 0, 15); java.util.Arrays.fill(a.getData(), ((byte) (0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9091/buggy-version/src.powercrystals.minefactoryreloaded.net.CommonProxy.java", "BodyUseAPI": ["net.minecraft.world.chunk.NibbleArray.set(int,int,int,int)", "net.minecraft.world.chunk.NibbleArray.set(int,int,int,int)", "java.util.Arrays.fill(a.getData(),int)", "net.minecraft.world.chunk.NibbleArray.getData()"], "Fixed commit": "511212bf379914ff48c190c239e4fcc6f7ecb33e", "Url": "https://api.github.com/repos/wilkemeyer/MineFactoryReloaded", "Date": "2017-06-30T12:15:30Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model.BarcodePrinter.getInstance().hasItemsToPrint()) { model.NonEmptyString filename = model.BarcodePrinter.getInstance().printBatch(); java.io.File file = new java.io.File(filename.toString()); try { java.awt.Desktop.getDesktop().open(file); } catch (java.io.IOException e) { getView().displayErrorMessage(e.getMessage()); } catch (java.lang.IllegalArgumentException e) { getView().displayErrorMessage(e.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6578/buggy-version/src.gui.batches.AddItemBatchController.java", "BodyUseAPI": [], "Fixed commit": "1cca0f6d4d8208f1d2d857e7da9ff10831876c82", "Url": "https://api.github.com/repos/cletusw/hit", "Date": "2013-02-24T01:03:49Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (process.getInterestPeer().containsKey(peer.getPeerId())) { if ((process.getInterestPeer().get(peer.getPeerId())) == 1) { peer.Message requestMessage = new peer.Message(MessageConstant.REQUEST_LENGTH, MessageConstant.REQUEST_TYPE, getRandomPieceIndex()); return send(requestMessage); }else { return false; } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3337/buggy-version/src.peer.Connection.java", "BodyUseAPI": ["process.getInterestPeer().get(peer.getPeerId())", "peer.PeerProcess.getInterestPeer()", "peer.Peer.getPeerId()"], "Fixed commit": "2e39153898425755756b7c9659a8a1126e1032fd", "Url": "https://api.github.com/repos/choking-unchoking-mechanism-BitTorrent/Choking_Unchoking_BitTorrent", "Date": "2017-11-28T15:09:45Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(additionalData))) { additionalData = additionalData.substring(0, java.lang.Math.min(additionalData.length(), 4096)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3074/buggy-version/aNewJKUApp.src.fdroid.java.org.voidsink.anewjkuapp.analytics.AnalyticsFlavor.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.Math.min(int,int)"], "Fixed commit": "3432473230c12234e754e159bf0b6fa92ac00637", "Url": "https://api.github.com/repos/marunjar/anewjkuapp", "Date": "2016-04-10T08:59:32Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((invalidTradeTransaction.state) == (models.enums.States.INIT)) || ((invalidTradeTransaction.state) == (models.enums.States.RESPONSE))) { invalidTradeTransaction.state = models.enums.States.INVALID; invalidTradeTransaction.save(); emailList.addAll(controllers.EmailSender.getBookExchangeInvalid(invalidTradeTransaction.owner, invalidTradeTransaction.recipient)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2777/buggy-version/app.controllers.TradeController.java", "BodyUseAPI": [], "Fixed commit": "43bfb755d8eb00220e8df2d692b389a34a829ddc", "Url": "https://api.github.com/repos/anhapu/SDFplay", "Date": "2014-01-15T08:47:31Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (searchBtn.isEnabled()) { if (!(isExpanded)) { expandPanel(); }else { collapsePanel(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5983/buggy-version/src.main.java.org.reactome.web.diagram.controls.top.search.SearchLauncher.java", "BodyUseAPI": [], "Fixed commit": "c846788dba7262a94b59bc6f829f93d823abf29c", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2017-02-05T14:25:23Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (destDigit < 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4070/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.util.Byte16ArrayArithmetic.java", "BodyUseAPI": [], "Fixed commit": "f2ad9691287f96c19a75e29dde12b84eae870bad", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-12-01T02:24:52Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inStructuredNode) != null) { decorateElement(inStructuredNode, ElementState.ACTIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8448/buggy-version/plugins.org.modelexecution.xmof.animation.src.org.modelexecution.xmof.animation.decorator.DiagramDecorator.java", "BodyUseAPI": [], "Fixed commit": "5ea3f9ca2b6fd37e7bdfca90a805706e4e1e31e0", "Url": "https://api.github.com/repos/moliz/moliz.gemoc", "Date": "2016-08-13T20:32:52Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thut.api.entity.ai.AIThreadManager.aiStuffLists) != null) for (java.util.Queue v : thut.api.entity.ai.AIThreadManager.aiStuffLists) { v.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7865/buggy-version/ThutCore.src.main.java.thut.api.entity.ai.AIThreadManager.java", "BodyUseAPI": [], "Fixed commit": "35387a05e2f7cc4e6abb0340ed80e61aad89415e", "Url": "https://api.github.com/repos/Thutmose/Thut", "Date": "2017-12-30T19:56:24Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alexgilleran.icesoap.request.impl.HUCSOAPRequester.buildHttpUrlConnection(java.net.URL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((conn.getResponseCode()) == 200) { stream = conn.getInputStream(); }else { stream = conn.getErrorStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5120/buggy-version/IceSoap.src.com.alexgilleran.icesoap.request.impl.HUCSOAPRequester.java", "BodyUseAPI": ["java.net.HttpURLConnection.getErrorStream()", "java.net.HttpURLConnection.getInputStream()"], "Fixed commit": "ec29a99412848230ea97da8044e60ee1bb3e240a", "Url": "https://api.github.com/repos/AlexGilleran/IceSoap", "Date": "2015-12-29T05:00:03Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(recordJsonObject.isNull(org.ednovo.gooru.server.deserializer.ResourceCollectionDeSerializer.HOST))) { resourceDo.setHost(org.ednovo.gooru.server.serializer.JsonDeserializer.deserialize(recordJsonObject.getJSONArray(org.ednovo.gooru.server.deserializer.ResourceCollectionDeSerializer.HOST).toString(), new com.fasterxml.jackson.core.type.TypeReference<java.util.List<java.lang.String>>() {})); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2094/buggy-version/src.main.java.org.ednovo.gooru.server.deserializer.ResourceCollectionDeSerializer.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)", "org.ednovo.gooru.shared.model.content.ResourceDo.setHost(org.ednovo.gooru.server.serializer.JsonDeserializer.deserialize(recordJsonObject.getJSONArray(org.ednovo.gooru.server.deserializer.ResourceCollectionDeSerializer.HOST).toString(), new com.fasterxml.jackson.core.type.TypeReference<java.util.List<java.lang.String>>() {}))", "recordJsonObject.getJSONArray(org.ednovo.gooru.server.deserializer.ResourceCollectionDeSerializer.HOST).toString()", "org.ednovo.gooru.server.serializer.JsonDeserializer.deserialize(recordJsonObject.getJSONArray(org.ednovo.gooru.server.deserializer.ResourceCollectionDeSerializer.HOST).toString(),com.fasterxml.jackson.core.type.TypeReference<java.util.List<java.lang.String>>)"], "Fixed commit": "7a8872579664db05e6b7979c978a14b00e911d55", "Url": "https://api.github.com/repos/VinRudramurthy/Gooru-Web", "Date": "2014-08-07T11:07:19Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["trekk.server.repo.CustomerRepo.findOne(customer.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (found == null) throw new java.lang.IllegalArgumentException(\"id not found\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/654/buggy-version/src.main.java.trekk.server.io.TrekkServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "eeaed1568f3e408ccc17811cef25446b421674da", "Url": "https://api.github.com/repos/marsmining/trekk", "Date": "2013-11-16T17:55:26Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (IO_EDGE)) return ((T) ((ee.in) == null ? ee.out : ee.in));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4583/buggy-version/src.org.graphstream.graph.implementations.SingleNode.java", "BodyUseAPI": [], "Fixed commit": "10e2cb5bf1ab87dd5a1f16d0ced8b3c3622d20dd", "Url": "https://api.github.com/repos/graphstream/gs-core", "Date": "2016-02-09T13:38:05Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, be.olsson.slackappender.SlackAppender.MessageStat>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stat == null) { stat = new be.olsson.slackappender.SlackAppender.MessageStat(); stat.lastLogged = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7892/buggy-version/src.main.java.be.olsson.slackappender.SlackAppender.java", "BodyUseAPI": [], "Fixed commit": "627e099799fe99165ef60c8f37a274decf52ae56", "Url": "https://api.github.com/repos/tobias-/slack-appender", "Date": "2016-02-15T15:10:02Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myPositions.size()) == 0) throw new java.lang.IllegalStateException(\"Haven't got any positions to allocate to\"); else { if ((myPositions.last().getPosition().compareTo(aHashCode)) < 1) return myPositions.first(); else { for (org.dancres.peers.ring.RingPosition myPos : myPositions) { if ((myPos.getPosition().compareTo(aHashCode)) >= 1) { return myPos; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7270/buggy-version/src.main.java.org.dancres.peers.ring.ConsistentHash.java", "BodyUseAPI": ["java.util.SortedSet<org.dancres.peers.ring.RingPosition>.first()", "myPositions.last().getPosition().compareTo(java.lang.Comparable)", "myPositions.last().getPosition()", "java.util.SortedSet<org.dancres.peers.ring.RingPosition>.last()"], "Fixed commit": "93e984ddae9876d4862e91c27c0d07b51d4c1b91", "Url": "https://api.github.com/repos/dancres/p2p", "Date": "2013-09-09T11:57:58Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openlmis.core.LMISApp.getInstance().getFeatureToggleFor(R.bool.feature_lot_management)) { initLotListRecyclerView(viewModel); }else { populateEditPanel(viewModel.getQuantity(), viewModel.optFirstExpiryDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2763/buggy-version/app.src.main.java.org.openlmis.core.view.holder.InitialInventoryViewHolder.java", "BodyUseAPI": [], "Fixed commit": "e868ccbcd75058216a8e04901338fb2c26e04548", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2016-09-12T08:55:57Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!immediately) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/32/buggy-version/src.gwt.src.org.rstudio.studio.client.common.debugging.BreakpointManager.java", "BodyUseAPI": [], "Fixed commit": "4f3df53b87e0c8504236dbded17ea26d33ec83e7", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2013-09-20T12:51:10Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((applicationGroup.getPackageMetadata()) == null) { applicationGroup.setPackageMetadata(new org.jboss.windup.web.services.model.PackageMetadata()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7057/buggy-version/services.src.main.java.org.jboss.windup.web.services.rest.ApplicationGroupEndpointImpl.java", "BodyUseAPI": ["org.jboss.windup.web.services.model.ApplicationGroup.setPackageMetadata(org.jboss.windup.web.services.model.PackageMetadata)"], "Fixed commit": "5b2ca7593f0a150e7b93e013b664b600b9228457", "Url": "https://api.github.com/repos/klinki/windup-web", "Date": "2016-10-11T11:40:47Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasSpace) type += att.grappa.GrappaLine.TAIL_ARROW_EDGE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3496/buggy-version/grappa.src.att.grappa.GrappaLine.java", "BodyUseAPI": [], "Fixed commit": "055d5eaedae52624017a60d04bc9dbbd84fbe69f", "Url": "https://api.github.com/repos/BenWiederhake/ccs", "Date": "2013-05-18T13:13:45Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((X > 1) && (X < ((World.getWorldProvider().getWidth()) - 1))) && (Y > 1)) && (Y < ((World.getWorldProvider().getHeight()) - 1))) { if ((Shadows[X][Y]) != 0) { Masks[SpriteX][SpriteY][Shadows[X][Y]].Render(Camera, X, Y); } if ((BackdropShadows[X][Y]) != 0) { Masks[SpriteX][SpriteY][BackdropShadows[X][Y]].Render(Camera, X, Y); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3680/buggy-version/src.net.Hellbound.Renderer.ShadowEngine.java", "BodyUseAPI": ["Masks[SpriteX][SpriteY][BackdropShadows[X][Y]].Render(net.Hellbound.Camera,int,int)", "Masks[SpriteX][SpriteY][Shadows[X][Y]].Render(net.Hellbound.Camera,int,int)"], "Fixed commit": "fc6e2501ba2cb820450f701cf31c7f2585910e36", "Url": "https://api.github.com/repos/ItzDennisz/Hellbound", "Date": "2016-05-27T13:51:12Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(item.isComplete())) && ((type == null) || ((item.getItemType()) == type))) return item;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2079/buggy-version/src.Controller.java", "BodyUseAPI": [], "Fixed commit": "12d4759b06a8025c86047b56dde3aefbb0217e62", "Url": "https://api.github.com/repos/Kazagha/Craft-Manager", "Date": "2015-09-17T10:55:18Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 14) { holder.tv.setAllCaps(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1140/buggy-version/app.src.main.java.org.sefaria.sefaria.LinkElements.LinkMainAdapter.java", "BodyUseAPI": [], "Fixed commit": "3e8a993c74e3653a45edc14ea68e22eba2248052", "Url": "https://api.github.com/repos/Sefaria/Sefaria-Android", "Date": "2016-02-05T20:52:35Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 14) { holder.tv.setAllCaps(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1140/buggy-version/app.src.main.java.org.sefaria.sefaria.LinkElements.LinkMainAdapter.java", "BodyUseAPI": [], "Fixed commit": "3e8a993c74e3653a45edc14ea68e22eba2248052", "Url": "https://api.github.com/repos/Sefaria/Sefaria-Android", "Date": "2016-02-05T20:52:35Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fruitEditor.getMapPanel().getMapName()) != null) { jfc.setSelectedFile(new java.io.File(fruitEditor.getMapPanel().getMapName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5125/buggy-version/src.FruitListener.java", "BodyUseAPI": ["FruitEditor.FruitListener.getMapPanel()", "javax.swing.JFileChooser.setSelectedFile(java.io.File)", "fruitEditor.getMapPanel().getMapName()"], "Fixed commit": "72790a2483c2cd4c4c9bbdd123edc7b5170d87ea", "Url": "https://api.github.com/repos/boaromayo/FruitEditor_v1_1", "Date": "2017-06-05T22:46:52Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.dma.ais.abnormal.tracker.events.PositionChangedEvent.getTrack()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((isClassB.test(track)) || (isUnknownTypeOrSize.test(track))) || (isFishingVessel.test(track))) || (isSmallVessel.test(track))) || (isSpecialCraft.test(track))) || (isEngagedInTowing.test(track))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2770/buggy-version/ais-ab-analyzer.src.main.java.dk.dma.ais.abnormal.analyzer.analysis.SuddenSpeedChangeAnalysis.java", "BodyUseAPI": [], "Fixed commit": "9dad08d974c86e6b35701e6815dfb7c1969ccc9d", "Url": "https://api.github.com/repos/dma-ais/AisAbnormal", "Date": "2014-08-07T08:13:05Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sign.getLocation().getBlock()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6353/buggy-version/src.com.wolvencraft.prison.mines.mine.DisplaySign.java", "BodyUseAPI": [], "Fixed commit": "f4d8c1f6bbd267ef6c898a920c6c5bc24137d896", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2012-12-11T15:21:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)", "com.liferay.portal.kernel.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.liferay.portal.kernel.util.Validator.isNull(className)) && (com.liferay.portal.kernel.util.Validator.isNull(classPK))) { return com.liferay.portal.kernel.util.StringPool.BLANK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4409/buggy-version/modules.apps.forms-and-workflow.dynamic-data-mapping.dynamic-data-mapping-service.src.main.java.com.liferay.dynamic.data.mapping.internal.render.impl.JournalArticleDDMFormFieldValueRenderer.java", "BodyUseAPI": [], "Fixed commit": "696bbb1719c7b41ec0623f6d0c41a5f4a7b987bd", "Url": "https://api.github.com/repos/brianchandotcom/liferay-portal", "Date": "2016-06-20T18:13:47Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.json.JSONObject.getString(java.lang.String)", "com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.liferay.portal.kernel.util.Validator.isNull(uuid)) && (com.liferay.portal.kernel.util.Validator.isNull(groupId))) { return com.liferay.portal.kernel.util.StringPool.BLANK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4409/buggy-version/modules.apps.forms-and-workflow.dynamic-data-mapping.dynamic-data-mapping-service.src.main.java.com.liferay.dynamic.data.mapping.internal.render.impl.DocumentLibraryDDMFormFieldValueRenderer.java", "BodyUseAPI": [], "Fixed commit": "696bbb1719c7b41ec0623f6d0c41a5f4a7b987bd", "Url": "https://api.github.com/repos/brianchandotcom/liferay-portal", "Date": "2016-06-20T18:13:47Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)", "com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.liferay.portal.kernel.util.Validator.isNull(groupId)) && (com.liferay.portal.kernel.util.Validator.isNull(layoutId))) { return com.liferay.portal.kernel.util.StringPool.BLANK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4409/buggy-version/modules.apps.forms-and-workflow.dynamic-data-mapping.dynamic-data-mapping-service.src.main.java.com.liferay.dynamic.data.mapping.internal.render.impl.LinkToPageDDMFormFieldValueRenderer.java", "BodyUseAPI": [], "Fixed commit": "696bbb1719c7b41ec0623f6d0c41a5f4a7b987bd", "Url": "https://api.github.com/repos/brianchandotcom/liferay-portal", "Date": "2016-06-20T18:13:47Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cy) < 0) cy = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3440/buggy-version/src.neoe.ne.PlainPage.java", "BodyUseAPI": [], "Fixed commit": "4dbe54a1975eab93a6822964d1a2b5f04b60680e", "Url": "https://api.github.com/repos/neoedmund/neoeedit", "Date": "2015-10-30T06:31:00Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cy) < 0) cy = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3440/buggy-version/src.neoe.ne.PlainPage.java", "BodyUseAPI": [], "Fixed commit": "4dbe54a1975eab93a6822964d1a2b5f04b60680e", "Url": "https://api.github.com/repos/neoedmund/neoeedit", "Date": "2015-10-30T06:31:00Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["neoe.ne.U.BasicEdit.getLineSb(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sb == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3440/buggy-version/src.neoe.ne.U.java", "BodyUseAPI": [], "Fixed commit": "4dbe54a1975eab93a6822964d1a2b5f04b60680e", "Url": "https://api.github.com/repos/neoedmund/neoeedit", "Date": "2015-10-30T06:31:00Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ticketId == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6416/buggy-version/core.cas-server-core-tickets.src.main.java.org.apereo.cas.ticket.registry.DefaultTicketRegistry.java", "BodyUseAPI": [], "Fixed commit": "6bb550bcf5ca81ffbc1e6888e4fe85f9ee2ff887", "Url": "https://api.github.com/repos/fogbeam/cas_mirror", "Date": "2017-05-01T15:13:38Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.jabref.logic.exporter.ExportFormats.checkExportFormatExisit(consoleName)) { org.jabref.logic.exporter.ExportFormat exportFormat = ((org.jabref.logic.exporter.ExportFormat) (org.jabref.logic.exporter.ExportFormats.EXPORT_FORMATS.get(consoleName))); return exportFormat.getExtension(); }else { return org.jabref.logic.util.FileExtensions.DEFAULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8799/buggy-version/src.main.java.org.jabref.logic.exporter.ExportFormats.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.jabref.logic.exporter.IExportFormat>.get(java.lang.String)"], "Fixed commit": "0c5a94cface757fbf5c4ac2aa6c71f706508031e", "Url": "https://api.github.com/repos/PJozeph/jabref", "Date": "2017-12-22T10:41:17Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.di.core.Condition.getUsedFields()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.pentaho.di.core.Const.isEmpty(key[i])) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/908/buggy-version/engine.src.org.pentaho.di.trans.steps.filterrows.FilterRowsMeta.java", "BodyUseAPI": [], "Fixed commit": "8945bdd9563b7fce65bdc6135a8864871a9bdc1c", "Url": "https://api.github.com/repos/pentaho/pentaho-kettle", "Date": "2014-01-23T17:55:17Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.level) > (other.level)) { long branch = (other.bits) & (node.getBranchMask()); if (branch == 0) { node.left = merge(node.left, other); }else { node.right = merge(node.right, other); } return node; }else if ((node.level) < (other.level)) { com.proofpoint.stats.QuantileDigest.Node result = createNode(other.bits, other.level, other.weightedCount); long branch = (node.bits) & (other.getBranchMask()); if (branch == 0) { result.left = merge(node, other.left); result.right = copyRecursive(other.right); }else { result.left = copyRecursive(other.left); result.right = merge(node, other.right); } return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6440/buggy-version/stats.src.main.java.com.proofpoint.stats.QuantileDigest.java", "BodyUseAPI": ["com.proofpoint.stats.QuantileDigest.Node.getBranchMask()", "com.proofpoint.stats.QuantileDigest.merge(com.proofpoint.stats.QuantileDigest.Node,com.proofpoint.stats.QuantileDigest.Node)", "com.proofpoint.stats.QuantileDigest.copyRecursive(com.proofpoint.stats.QuantileDigest.Node)", "com.proofpoint.stats.QuantileDigest.createNode(long,int,double)", "com.proofpoint.stats.QuantileDigest.Node.getBranchMask()", "com.proofpoint.stats.QuantileDigest.merge(com.proofpoint.stats.QuantileDigest.Node,com.proofpoint.stats.QuantileDigest.Node)", "com.proofpoint.stats.QuantileDigest.merge(com.proofpoint.stats.QuantileDigest.Node,com.proofpoint.stats.QuantileDigest.Node)", "com.proofpoint.stats.QuantileDigest.merge(com.proofpoint.stats.QuantileDigest.Node,com.proofpoint.stats.QuantileDigest.Node)", "com.proofpoint.stats.QuantileDigest.copyRecursive(com.proofpoint.stats.QuantileDigest.Node)"], "Fixed commit": "ab0bf11e9716a7b4694be7abb63a4929e51d9e04", "Url": "https://api.github.com/repos/proofpoint/platform", "Date": "2013-06-15T06:35:46Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uri.getScheme()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1951/buggy-version/artemis-network-lib.src.main.java.com.spinn3r.artemis.network.links.Links.java", "BodyUseAPI": [], "Fixed commit": "0eb8c872b38fc22dcf8fd859b7fe03315472bffe", "Url": "https://api.github.com/repos/spinn3r/artemis-framework", "Date": "2016-06-30T01:06:28Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((yBottom.compareTo(yMin)) > 0) { yBottom = yMin; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5997/buggy-version/xchart.src.main.java.com.xeiam.xchart.internal.chartpart.PlotContentBarChart.java", "BodyUseAPI": [], "Fixed commit": "fbee064d00ec086c157bd7282f048165399ec5e4", "Url": "https://api.github.com/repos/timmolter/XChart", "Date": "2013-02-28T13:13:14Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((yTop.compareTo(yMax)) > 0) { yTop = yMax; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5997/buggy-version/xchart.src.main.java.com.xeiam.xchart.internal.chartpart.PlotContentBarChart.java", "BodyUseAPI": [], "Fixed commit": "fbee064d00ec086c157bd7282f048165399ec5e4", "Url": "https://api.github.com/repos/timmolter/XChart", "Date": "2013-02-28T13:13:14Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((date) != null) { date.printDate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7548/buggy-version/LVMaster3000.src.at.lvmaster3000.database.objects.Exam.java", "BodyUseAPI": [], "Fixed commit": "cf5562ab4a678c48d5048243403ea6083e528f95", "Url": "https://api.github.com/repos/pi13/sw14_free_07", "Date": "2014-06-15T13:17:25Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.todoroo.astrid.reminders.Notifications.forceNotificationManager) try { com.todoroo.astrid.reminders.Notifications.singleThreadVoicePool.awaitTermination(1000, java.util.concurrent.TimeUnit.MILLISECONDS); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5138/buggy-version/astrid.plugin-src.com.todoroo.astrid.reminders.Notifications.java", "BodyUseAPI": [], "Fixed commit": "7930c169da5d4141c9079e049a0571bc8f041ddf", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2013-03-18T19:43:31Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mExpiresAnnotation) != null) { ensureExpiresKeyStored(mFieldNames, ((io.github.jason1114.builtin.sharedpreference.SharedPreferenceProxyContext) (context)).expireKeySet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5926/buggy-version/library.src.main.java.io.github.jason1114.builtin.sharedpreference.SharedPreferenceProxyMethod.java", "BodyUseAPI": [], "Fixed commit": "a4d2251b04ae3faa5d0ffa0658dc6f647b98bd06", "Url": "https://api.github.com/repos/PrototypeZ/Rap", "Date": "2017-02-06T09:09:29Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(part)) { return new com.linfaxin.multistyletextview.MultiStyleTextView.NoStyleText(part); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/399/buggy-version/library.src.main.java.com.linfaxin.multistyletextview.MultiStyleTextView.java", "BodyUseAPI": [], "Fixed commit": "7b19a4c15c8e8a4184d97bd6cdcf612cc3a7bb3a", "Url": "https://api.github.com/repos/linfaxin/MultiStyleTextView", "Date": "2015-03-12T07:03:34Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof com.mongodb.DBObject) { newEntity = readMapOrCollectionOrEntity(((com.mongodb.DBObject) (o)), mf, cache, mapper, ephemeralMappedField); }else { newEntity = o; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3638/buggy-version/morphia.src.main.java.org.mongodb.morphia.mapping.EmbeddedMapper.java", "BodyUseAPI": [], "Fixed commit": "4270ab50569048ea2a41df7ca70e156ee8990b77", "Url": "https://api.github.com/repos/johndemic/morphia", "Date": "2015-08-09T15:27:48Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flags) == null) return \"empty\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3624/buggy-version/src.main.java.com.dumptruckman.chunky.permission.ChunkyPermissions.java", "BodyUseAPI": [], "Fixed commit": "ac460e8fe49fcb5c089f48c37a30fecfaa6d7316", "Url": "https://api.github.com/repos/ChunkyDev/Chunky", "Date": "2011-09-12T20:49:19Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.impls.orient.OrientEdge.getInVertex()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (inVertex != null) { inVertexRecord = inVertex.getRecord(); if (inVertexRecord != null) { final java.lang.String inFieldName = com.tinkerpop.blueprints.impls.orient.OrientVertex.getConnectionFieldName(Direction.IN, edgeClassName, useVertexFieldsForEdgeLabels); inVertexChanged = dropEdgeFromVertex(outVertexEdge, inVertexRecord, inFieldName, inVertexRecord.field(inFieldName)); }else com.orientechnologies.common.log.OLogManager.instance().debug(this, (((\"Found broken link to incoming vertex \" + (inVertex.getIdentity())) + \" while removing edge \") + (getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4272/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientEdge.java", "BodyUseAPI": ["com.orientechnologies.common.log.OLogManager.instance().debug(com.tinkerpop.blueprints.impls.orient.OrientEdge,(((\"Found broken link to incoming vertex \" + (inVertex.getIdentity())) + \" while removing edge \") + (getId())))", "com.orientechnologies.orient.core.db.record.OIdentifiable.getRecord()", "com.orientechnologies.orient.core.db.record.OIdentifiable.getIdentity()"], "Fixed commit": "a2cc87ec69d31e96ff9471899d9e68164bc0098d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-11-22T18:36:40Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((def.expression) == null) def.expression = \"{ PrimaryCriteria: {} }\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7962/buggy-version/src.main.java.org.ohdsi.webapi.service.CohortDefinitionService.java", "BodyUseAPI": [], "Fixed commit": "afd1646ee24071af1e150522ca0525e673d33f2f", "Url": "https://api.github.com/repos/regenstrief/WebAPI", "Date": "2015-03-16T14:24:59Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((temp.length) == 1) { options.lines = options.chars = options.words = true; options.filename = temp[0]; return options; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6944/buggy-version/src.prateekj.unixtools.wc.Operations.java", "BodyUseAPI": [], "Fixed commit": "9488b20187255d3c1348d8e2c98dfa81fd679518", "Url": "https://api.github.com/repos/jainsahab/unix-tools", "Date": "2014-01-14T13:48:16Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cmd[0].equals(\"\"))) { error(((\"Shell: \" + (cmd[0])) + \": command not found\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6742/buggy-version/src.ru.fizteh.fivt.students.andreyzakharov.shell.Shell.java", "BodyUseAPI": ["ru.fizteh.fivt.students.andreyzakharov.shell.Shell.error(java.lang.String)"], "Fixed commit": "b6c456eaddb1d9b18cbd4630290b523339570ff1", "Url": "https://api.github.com/repos/Norrius/fizteh-java-2014", "Date": "2014-09-24T17:30:02Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(activity.isFinishing())) { dialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4402/buggy-version/android.src.de.tomgrill.gdxdialogs.android.dialogs.AndroidGDXButtonDialog.java", "BodyUseAPI": [], "Fixed commit": "f8db402cc7397f7564681a5d8264f11975dd4bbd", "Url": "https://api.github.com/repos/TomGrill/gdx-dialogs", "Date": "2017-10-23T09:44:45Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ua.com.joinit.service.UserService.getUser(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (requestedUser == null) { throw new java.lang.RuntimeException(\"There is no user with such id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2648/buggy-version/user-manager.src.main.java.ua.com.joinit.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "f230728b386d4f10738346bd8d040247a3816cc0", "Url": "https://api.github.com/repos/krupet/JI-java", "Date": "2015-06-03T16:26:55Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mode) == (org.dmfs.rfc5545.recur.RecurrenceRule.RfcMode.RFC2445_LAX)) || ((mode) == (org.dmfs.rfc5545.recur.RecurrenceRule.RfcMode.RFC5545_LAX))) { if ((freq != (org.dmfs.rfc5545.recur.RecurrenceRule.Freq.YEARLY)) && (mParts.containsKey(org.dmfs.rfc5545.recur.RecurrenceRule.Part.BYWEEKNO))) { mParts.remove(org.dmfs.rfc5545.recur.RecurrenceRule.Part.BYWEEKNO); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7854/buggy-version/src.org.dmfs.rfc5545.recur.RecurrenceRule.java", "BodyUseAPI": [], "Fixed commit": "4a1d62a28601490e31526c44a35bfbd0205159bc", "Url": "https://api.github.com/repos/dmfs/lib-recur", "Date": "2013-07-04T15:43:35Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mode) == (org.dmfs.rfc5545.recur.RecurrenceRule.RfcMode.RFC5545_STRICT)) || ((mode) == (org.dmfs.rfc5545.recur.RecurrenceRule.RfcMode.RFC2445_STRICT))) { if ((freq != (org.dmfs.rfc5545.recur.RecurrenceRule.Freq.YEARLY)) && (mParts.containsKey(org.dmfs.rfc5545.recur.RecurrenceRule.Part.BYWEEKNO))) { throw new org.dmfs.rfc5545.recur.InvalidRecurrenceRuleException(\"BYWEEKNO is allowed in YEARLY rules only\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7854/buggy-version/src.org.dmfs.rfc5545.recur.RecurrenceRule.java", "BodyUseAPI": [], "Fixed commit": "4a1d62a28601490e31526c44a35bfbd0205159bc", "Url": "https://api.github.com/repos/dmfs/lib-recur", "Date": "2013-07-04T15:43:35Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (dcit == null) dcit = DocIdSet.EMPTY_DOCIDSET.iterator();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/90/buggy-version/src.main.java.com.kamikaze.docidset.impl.AndDocIdSet.java", "BodyUseAPI": [], "Fixed commit": "abe1f8b38783041b48df94f4bdd9f3bfa8c5e59f", "Url": "https://api.github.com/repos/javasoze/kamikaze", "Date": "2011-12-03T00:39:41Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) { message = com.wasteofplastic.askyblock.placeholders.PlaceholderHandler.replacePlaceholders(((org.bukkit.entity.Player) (sender)), message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4249/buggy-version/src.com.wasteofplastic.askyblock.util.Util.java", "BodyUseAPI": [], "Fixed commit": "0c3bad5fea90f60a6162f8e59392d9699c2982cb", "Url": "https://api.github.com/repos/tastybento/askyblock", "Date": "2017-05-16T05:41:23Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getChatListener().getPlayerLevel(player.getUniqueId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (level == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4249/buggy-version/src.com.wasteofplastic.askyblock.placeholders.Placeholders.java", "BodyUseAPI": [], "Fixed commit": "0c3bad5fea90f60a6162f8e59392d9699c2982cb", "Url": "https://api.github.com/repos/tastybento/askyblock", "Date": "2017-05-16T05:41:23Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (replacement.isAdded()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6799/buggy-version/app.src.main.java.com.spielpark.steve.bernieapp.actMainPage.java", "BodyUseAPI": [], "Fixed commit": "be35b2ff042757faf00259dfe5b08012a59975f4", "Url": "https://api.github.com/repos/PatrickDattilio/BernieAppAndroid", "Date": "2015-10-19T20:11:39Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task) != null) { task.cancel(); task = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8592/buggy-version/src.me.stendec.abyss.AbyssPlugin.java", "BodyUseAPI": [], "Fixed commit": "f3921e69680033b1aaadb1886d52e5a46ae61c1c", "Url": "https://api.github.com/repos/stendec/Abyss", "Date": "2013-02-16T21:35:23Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pd.isShowing()) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8191/buggy-version/Patient.src.com.medikeen.asyncTask.HistoryAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "7b4e468f0a812977416ad75ebf1a215065928370", "Url": "https://api.github.com/repos/PharmaKit/PatientApp", "Date": "2016-02-06T11:39:49Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((historyFragment) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8191/buggy-version/Patient.src.com.medikeen.asyncTask.HistoryAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "7b4e468f0a812977416ad75ebf1a215065928370", "Url": "https://api.github.com/repos/PharmaKit/PatientApp", "Date": "2016-02-06T11:39:49Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contacts[2].equals(\"n\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4798/buggy-version/app.src.main.java.fry.oldschool.utils.ContactGroup.java", "BodyUseAPI": [], "Fixed commit": "cb12123914454ce7e4b7f4a1a90e4687abb636a3", "Url": "https://api.github.com/repos/pichlerAT/androidapp", "Date": "2016-05-22T15:12:21Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.isEmpty()) { return \"n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4798/buggy-version/app.src.main.java.fry.oldschool.utils.ContactGroup.java", "BodyUseAPI": [], "Fixed commit": "cb12123914454ce7e4b7f4a1a90e4687abb636a3", "Url": "https://api.github.com/repos/pichlerAT/androidapp", "Date": "2016-05-22T15:12:21Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((moze_intel.projecte.emc.FuelMapper.getFuelUpgrade(inventory[0])) == null) { this.setInventorySlotContents(0, null); return 0; }else { reqEmc = (moze_intel.projecte.utils.EMCHelper.getEmcValue(moze_intel.projecte.emc.FuelMapper.getFuelUpgrade(inventory[0]))) - (moze_intel.projecte.utils.EMCHelper.getEmcValue(inventory[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8083/buggy-version/src.main.java.moze_intel.projecte.gameObjs.tiles.CollectorMK1Tile.java", "BodyUseAPI": ["moze_intel.projecte.utils.EMCHelper.getEmcValue(moze_intel.projecte.emc.FuelMapper.getFuelUpgrade(inventory[0]))", "moze_intel.projecte.utils.EMCHelper.getEmcValue(inventory[0])", "moze_intel.projecte.emc.FuelMapper.getFuelUpgrade(inventory[0])"], "Fixed commit": "98a100f128415423e0f696137cfdb9693f90d5f6", "Url": "https://api.github.com/repos/williewillus/ProjectE", "Date": "2015-05-03T19:35:02Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moze_intel.projecte.emc.FuelMapper.getFuelUpgrade(inventory[0])) == null) { this.setInventorySlotContents(0, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8083/buggy-version/src.main.java.moze_intel.projecte.gameObjs.tiles.CollectorMK1Tile.java", "BodyUseAPI": [], "Fixed commit": "98a100f128415423e0f696137cfdb9693f90d5f6", "Url": "https://api.github.com/repos/williewillus/ProjectE", "Date": "2015-05-03T19:35:02Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wurmatron.spritesofthegalaxy.client.gui.manage.GuiStructure.keyAmount()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(Settings.defaultStructures.containsKey(structure))) || ((Settings.defaultStructures.containsKey(structure)) && (nextTier >= (Settings.defaultStructures.get(structure))))) { if (((wurmatron.spritesofthegalaxy.common.utils.MutiBlockHelper.getStructureLevel(tile, structure)) - (keyAmount())) >= 0) { tile.addColonyValue(NBT.MINERALS, wurmatron.spritesofthegalaxy.common.utils.MutiBlockHelper.calculateSellBack(wurmatron.spritesofthegalaxy.common.utils.MutiBlockHelper.calcMineralsForStructure(structure, nextTier, wurmatron.spritesofthegalaxy.common.utils.MutiBlockHelper.getStructureLevel(tile, structure), 0))); wurmatron.spritesofthegalaxy.common.network.NetworkHandler.sendToServer(new wurmatron.spritesofthegalaxy.common.network.server.StructureMessage(structure, nextTier, tile, true)); } }else { net.minecraft.util.text.TextComponentString text = new net.minecraft.util.text.TextComponentString(net.minecraft.util.text.translation.I18n.translateToLocal(Local.MIN_LEVEL_REQ)); text.getStyle().setColor(TextFormatting.RED); mc.ingameGUI.getChatGUI().printChatMessage(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6207/buggy-version/src.main.java.wurmatron.spritesofthegalaxy.client.gui.manage.GuiStructure.java", "BodyUseAPI": ["wurmatron.spritesofthegalaxy.common.network.NetworkHandler.sendToServer(wurmatron.spritesofthegalaxy.common.network.server.StructureMessage)", "wurmatron.spritesofthegalaxy.client.gui.manage.GuiStructure.addColonyValue(NBT.MINERALS,wurmatron.spritesofthegalaxy.common.utils.MutiBlockHelper.calculateSellBack(wurmatron.spritesofthegalaxy.common.utils.MutiBlockHelper.calcMineralsForStructure(structure, nextTier, wurmatron.spritesofthegalaxy.common.utils.MutiBlockHelper.getStructureLevel(tile, structure), 0)))", "wurmatron.spritesofthegalaxy.common.utils.MutiBlockHelper.getStructureLevel(wurmatron.spritesofthegalaxy.client.gui.manage.GuiStructure,wurmatron.spritesofthegalaxy.api.mutiblock.IStructure)", "wurmatron.spritesofthegalaxy.common.utils.MutiBlockHelper.getStructureLevel(wurmatron.spritesofthegalaxy.client.gui.manage.GuiStructure,wurmatron.spritesofthegalaxy.api.mutiblock.IStructure)", "wurmatron.spritesofthegalaxy.common.utils.MutiBlockHelper.calculateSellBack(wurmatron.spritesofthegalaxy.common.utils.MutiBlockHelper.calcMineralsForStructure(structure, nextTier, wurmatron.spritesofthegalaxy.common.utils.MutiBlockHelper.getStructureLevel(tile, structure), 0))", "wurmatron.spritesofthegalaxy.common.utils.MutiBlockHelper.calcMineralsForStructure(wurmatron.spritesofthegalaxy.api.mutiblock.IStructure,int,wurmatron.spritesofthegalaxy.common.utils.MutiBlockHelper.getStructureLevel(tile, structure),int)"], "Fixed commit": "4074af52f1ba3db26d4e86b020e888d122683876", "Url": "https://api.github.com/repos/Wurmatron/Sprites-Of-The-Galaxy", "Date": "2017-11-25T04:03:12Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((executor) instanceof org.jboss.netty.handler.execution.MemoryAwareThreadPoolExecutor) { doRun(); }else { try { DeadLockProofWorker.PARENT.set(executor); doRun(); } finally { DeadLockProofWorker.PARENT.remove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7096/buggy-version/src.main.java.org.jboss.netty.handler.execution.ChannelEventRunnable.java", "BodyUseAPI": [], "Fixed commit": "9b288e337e912c9fac9671a3f490290814bb2143", "Url": "https://api.github.com/repos/fredericBregier/netty", "Date": "2012-06-10T10:48:25Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moveCounter) == 2) { assignment4.Critter2 babyPika = new assignment4.Critter2(); reproduce(babyPika, assignment4.Critter.getRandomInt(8)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9033/buggy-version/Lab4.src.assignment4.Critter2.java", "BodyUseAPI": [], "Fixed commit": "2a382ba4b6a162c5734758fdfc76b869668a3e67", "Url": "https://api.github.com/repos/Jasmin707/Lab4attempt2", "Date": "2016-10-18T17:48:54Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fm.jiecao.jcvideoplayer_lib.JCVideoPlayerManager.getFirst()) != null) { fm.jiecao.jcvideoplayer_lib.JCVideoPlayerManager.getFirst().goBackThisListener(); fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.CLICK_QUIT_FULLSCREEN_TIME = java.lang.System.currentTimeMillis(); refreshCache(); }else { fm.jiecao.jcvideoplayer_lib.JCVideoPlayerManager.completeAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3630/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "f67ff0e6514d6bdc762fbec3244f288efae1a640", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2016-11-16T09:59:23Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.zzzmode.appopsx.ui.core.TextUtils.isEmpty(info.appName)) { info.appName = \"Unknown\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3691/buggy-version/app.src.main.java.com.zzzmode.appopsx.ui.core.Helper.java", "BodyUseAPI": [], "Fixed commit": "22c3b8cc6dbe7cbb222ad729f2049dffbfe8ff96", "Url": "https://api.github.com/repos/8enet/AppOpsX", "Date": "2017-08-26T08:56:24Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { am.te.myapplication.Model.Listing newListing = am.te.myapplication.Model.Listing.getListingFromIntent(data); products.add(newListing); arrayAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2161/buggy-version/app.src.main.java.am.te.myapplication.Homepage.java", "BodyUseAPI": ["am.te.myapplication.Model.Listing.getListingFromIntent(android.content.Intent)"], "Fixed commit": "07c109bdfd5eacceca7197eb3c65724fb3da51a5", "Url": "https://api.github.com/repos/SWF-TEAM/Shopping-with-Friends", "Date": "2015-03-25T01:23:50Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (measureGroup == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4666/buggy-version/src.main.mondrian.rolap.RolapNativeSet.java", "BodyUseAPI": [], "Fixed commit": "a060b18f80eed8c7beb88068e9811a7843acc52b", "Url": "https://api.github.com/repos/bennychow/mondrian", "Date": "2012-09-20T15:54:23Z"},
{"Line": "=>948", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.irccloud.android.fragment.MessageViewFragment.tapTimer) == null) com.irccloud.android.fragment.MessageViewFragment.tapTimer = new java.util.Timer(\"message-tap-timer\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3055/buggy-version/src.com.irccloud.android.fragment.MessageViewFragment.java", "BodyUseAPI": [], "Fixed commit": "1f9064d0b286773d98f35fdc0c251bf5b1765593", "Url": "https://api.github.com/repos/irccloud/android", "Date": "2015-10-08T18:30:38Z"},
{"Line": "=>922", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.irccloud.android.fragment.MessageViewFragment.tapTimer) == null) com.irccloud.android.fragment.MessageViewFragment.tapTimer = new java.util.Timer(\"message-tap-timer\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3055/buggy-version/src.com.irccloud.android.fragment.MessageViewFragment.java", "BodyUseAPI": [], "Fixed commit": "1f9064d0b286773d98f35fdc0c251bf5b1765593", "Url": "https://api.github.com/repos/irccloud/android", "Date": "2015-10-08T18:30:38Z"},
{"Line": "=>1373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.irccloud.android.fragment.MessageViewFragment.tapTimer) == null) com.irccloud.android.fragment.MessageViewFragment.tapTimer = new java.util.Timer(\"message-tap-timer\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3055/buggy-version/src.com.irccloud.android.fragment.MessageViewFragment.java", "BodyUseAPI": [], "Fixed commit": "1f9064d0b286773d98f35fdc0c251bf5b1765593", "Url": "https://api.github.com/repos/irccloud/android", "Date": "2015-10-08T18:30:38Z"},
{"Line": "=>935", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.irccloud.android.fragment.MessageViewFragment.tapTimer) == null) com.irccloud.android.fragment.MessageViewFragment.tapTimer = new java.util.Timer(\"message-tap-timer\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3055/buggy-version/src.com.irccloud.android.fragment.MessageViewFragment.java", "BodyUseAPI": [], "Fixed commit": "1f9064d0b286773d98f35fdc0c251bf5b1765593", "Url": "https://api.github.com/repos/irccloud/android", "Date": "2015-10-08T18:30:38Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getPart().endsWith(getRelativeFileForCreatedFolderstructure()))) { java.lang.System.out.println((((getPart()) + \" <> \") + (getRelativeFileForCreatedFolderstructure()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/974/buggy-version/src.de.jClipCorn.database.databaseElement.CCEpisode.java", "BodyUseAPI": [], "Fixed commit": "b9b30be588828c2e15ae5f9434964658260377c7", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2014-06-01T12:29:31Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.thiki.kanban.assignment.AssignmentPersistence.isAlreadyAssigned(assignment.getAssignee(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isAlreadyAssigned) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3227/buggy-version/src.main.java.org.thiki.kanban.assignment.AssignmentService.java", "BodyUseAPI": [], "Fixed commit": "21613f33fc2d355ec22b2cb0c0fdc2b80449e2bd", "Url": "https://api.github.com/repos/thiki-org/thiki-kanban-backend", "Date": "2017-03-22T14:51:11Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInitialized())) { throw new java.lang.IllegalStateException(\"Cannot call getRenderSize() before initialized!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4591/buggy-version/jme3-vr.src.main.java.com.jme3.input.vr.OculusVR.java", "BodyUseAPI": [], "Fixed commit": "b6b1687450547fc5865cb3abede17b805e7b42e8", "Url": "https://api.github.com/repos/jMonkeyEngine/jmonkeyengine", "Date": "2017-10-01T05:17:41Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.planQueue.size()) > 1) { checkOverlapping(planI, this.planQueue.peek()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7747/buggy-version/contribs.signals.src.main.java.org.matsim.contrib.signals.model.DefaultPlanbasedSignalSystemController.java", "BodyUseAPI": ["java.util.LinkedList<org.matsim.contrib.signals.model.SignalPlan>.peek()", "org.matsim.contrib.signals.model.DefaultPlanbasedSignalSystemController.checkOverlapping(org.matsim.contrib.signals.model.SignalPlan,this.planQueue.peek())"], "Fixed commit": "ff3b5cddd6104739ce4f12fb068ba6726a845990", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2016-10-28T16:07:37Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.compare(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cmp != 0) return cmp;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/835/buggy-version/src.obj.Field.java", "BodyUseAPI": [], "Fixed commit": "63016fc7c9caf0c6063ea8c5e274dcd0abd000bc", "Url": "https://api.github.com/repos/LionCherry/EPMS", "Date": "2017-11-16T06:06:22Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (contentValue.isChoiceOption()) { result += (((((\"/\" + (com.alkacon.acacia.shared.Type.CHOICE_ATTRIBUTE_NAME)) + \"_\") + (contentValue.getName())) + \"[\") + (contentValue.getXmlIndex())) + \"]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/206/buggy-version/src.org.opencms.ade.contenteditor.CmsContentService.java", "BodyUseAPI": ["org.opencms.xml.types.I_CmsXmlContentValue.getXmlIndex()", "org.opencms.xml.types.I_CmsXmlContentValue.getName()"], "Fixed commit": "a0a51db657bc519c06ed4226eb114deb562c22e5", "Url": "https://api.github.com/repos/gallardo/opencms-core", "Date": "2013-02-26T17:05:49Z"},
{"Line": "=>943", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(elementLocator.startsWith(\"css=\"))) { if (elementLocator.endsWith(\")\")) { elementLocator = elementLocator.substring(0, ((elementLocator.length()) - 1)); } if (elementLocator.startsWith(\"xpath=(\")) { elementLocator = elementLocator.substring(7, elementLocator.length()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/961/buggy-version/src.java.com.zimbra.qa.selenium.framework.ui.AbsSeleniumObject.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "dfb6777c879047667202a32e5297736f605d4238", "Url": "https://api.github.com/repos/Zimbra/zm-selenium", "Date": "2017-10-10T06:20:49Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { dir.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1405/buggy-version/src.java.histaroach.DataCollector.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "889d819bbfa478e0e935f9ceb211d5a762d867ce", "Url": "https://api.github.com/repos/rsukkerd/Histaroach", "Date": "2012-06-19T20:07:00Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.containsKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hasNameInCache) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5568/buggy-version/src.main.java.org.sagebionetworks.dashboard.dao.redis.NameIdDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "8ec4cff687de368f6f58e3b7217ec4b7ea98f744", "Url": "https://api.github.com/repos/kimyen/dashboard", "Date": "2014-09-05T19:55:23Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rect.contains(((eu.trentorise.smartcampus.jp.custom.CustomGridView.getLeft()) + ((int) (x))), ((eu.trentorise.smartcampus.jp.custom.CustomGridView.getTop()) + ((int) (y))))) { int i = ((int) (x / (getColWidth()))); int j = ((int) (y / (getRowHeight()))); handleClick(data.get(((j * (getNumCols())) + i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8726/buggy-version/src.eu.trentorise.smartcampus.jp.custom.CustomGridView.java", "BodyUseAPI": [], "Fixed commit": "4489a433f88af6c372a3fbf70238ed125ed32c72", "Url": "https://api.github.com/repos/smartcampuslab/android.journeyplanner.lib", "Date": "2013-09-26T11:06:26Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configuration.getBoolean(Constants.JOSS_SYNC_SERVER_TIME,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!syncWithServer) { com.ibm.stocator.fs.swift.SwiftAPIClient.LOG.trace(\"JOSS: disable sync time with server\"); config.setAllowSynchronizeWithServer(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3682/buggy-version/src.main.java.com.ibm.stocator.fs.swift.SwiftAPIClient.java", "BodyUseAPI": [], "Fixed commit": "69e4a94a1b485d513ae3921935737d1349813579", "Url": "https://api.github.com/repos/CODAIT/stocator", "Date": "2016-10-23T15:57:42Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.ceil((requiredAmount / (getValue(i.getItem(1), false))))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((i.getItem(1).getAmount()) == amountToConsume) { i.setItem(1, null); }else { i.getItem(1).setAmount(((i.getItem(1).getAmount()) - amountToConsume)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3754/buggy-version/src.main.java.com.github.maxopoly.WurstCivTools.anvil.AnvilHandler.java", "BodyUseAPI": ["i.getItem(1).setAmount(((i.getItem(1).getAmount()) - amountToConsume))", "org.bukkit.inventory.AnvilInventory.getItem(int)", "org.bukkit.inventory.AnvilInventory.getItem(int)", "i.getItem(1).getAmount()", "org.bukkit.inventory.AnvilInventory.setItem(int,<nulltype>)"], "Fixed commit": "ebeb8b5e9d50beca497d0db5b71b2a95376fd9df", "Url": "https://api.github.com/repos/Civcraft/WurstCivTools", "Date": "2016-05-07T23:14:14Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.neeraj2608.funwithprogramming.suffixtree.SuffixTreeUkkonen.SuffixTreeNode.getSuffixLinkNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nextNode == (root)) && (node == (root))) { insert(root, (start + 1), phase); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7031/buggy-version/dataStructures.suffixtree.src.com.neeraj2608.funwithprogramming.suffixtree.SuffixTreeUkkonen.java", "BodyUseAPI": [], "Fixed commit": "9f4fcfd7f357b155264b133ea7b89f160ac3d875", "Url": "https://api.github.com/repos/neeraj2608/funwithprogramming", "Date": "2014-03-05T16:49:28Z"},
{"Line": "=>1234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.Jsoup.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(doc.select(\"tr td font[color=red]\").text().contains(\"Ausleihe per Download rund um die Uhr\"))) { throw new de.geeksfactory.opacclient.apis.OpacErrorException(doc.select(\"font[color=red]\").text()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2300/buggy-version/opacclient.libopac.src.main.java.de.geeksfactory.opacclient.apis.BiBer1992.java", "BodyUseAPI": ["org.jsoup.nodes.Document.select(java.lang.String)", "doc.select(\"font[color=red]\").text()"], "Fixed commit": "7522af93740944585816575f38cafa6dd6aae1ba", "Url": "https://api.github.com/repos/opacapp/opacclient", "Date": "2016-11-20T21:00:59Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((itemStack.getItem().itemID) == (Item.bucketEmpty.itemID)) || ((itemStack.getItem().itemID) == (Item.glassBottle.itemID))) { net.minecraft.item.ItemStack itemStackFilled = net.minecraftforge.fluids.FluidContainerRegistry.fillFluidContainer(fluidTank.getFluid(), itemStack); if (itemStack != null) { boolean success = false; if (itemStackInputIndex == itemStackOutputIndex) { this.itemStacks[itemStackInputIndex] = itemStackFilled; success = true; }else { if (((this.itemStacks[itemStackOutputIndex]) == null) || ((((this.itemStacks[itemStackOutputIndex].itemID) == (itemStackFilled.itemID)) && ((this.itemStacks[2].getItemDamage()) == (itemStackFilled.getItemDamage()))) && (((this.itemStacks[itemStackOutputIndex].stackSize) + (itemStackFilled.stackSize)) <= (this.itemStacks[itemStackOutputIndex].getMaxStackSize())))) { this.itemStacks[itemStackInputIndex] = null; if ((this.itemStacks[itemStackOutputIndex]) == null) { this.itemStacks[itemStackOutputIndex] = new net.minecraft.item.ItemStack(Item.potion.itemID, 1, itemStackFilled.getItemDamage()); }else { this.itemStacks[itemStackOutputIndex].stackSize += itemStackFilled.stackSize; } success = true; } } if (success) { this.fluidTanks[fluidTankIndex].drain(FluidContainerRegistry.BUCKET_VOLUME, true); return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4989/buggy-version/common.advancedbrewing.tileentity.TileEntityMachine.java", "BodyUseAPI": ["net.minecraftforge.fluids.FluidContainerRegistry.fillFluidContainer(fluidTank.getFluid(),net.minecraft.item.ItemStack)"], "Fixed commit": "1e6f87f20f9824d772f78ad5b23ec27f1350eb06", "Url": "https://api.github.com/repos/MewesK/AdvancedBrewing", "Date": "2013-09-29T13:00:20Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.codingserbia.CodingSerbiaMapReduce.validateInput(args)) { com.codingserbia.CodingSerbiaMapReduce.runJob(new org.apache.hadoop.fs.Path(\"/customer_records.json\"), new org.apache.hadoop.fs.Path(\"/customers_output_mr\"), new org.apache.hadoop.conf.Configuration()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2518/buggy-version/mr-unit-example.src.main.java.com.codingserbia.CodingSerbiaMapReduce.java", "BodyUseAPI": [], "Fixed commit": "74860b4d9afd23ff6e0b9f4b7971ec9763af8b3b", "Url": "https://api.github.com/repos/dzamurovic/blogbuster", "Date": "2014-09-18T20:58:07Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 24) { android.net.Uri photoURI = android.support.v4.content.FileProvider.getUriForFile(this, ((this.getApplicationContext().getPackageName()) + \".my.package.name.provider\"), mediaFile); return photoURI; }else { return android.net.Uri.fromFile(mediaFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3230/buggy-version/app.src.main.java.com.imageprocessing.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0f640a16191cd35c4ffa60cf901c6b037927de38", "Url": "https://api.github.com/repos/avi-kr/Image-Processing-Android", "Date": "2017-12-21T09:40:35Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 24) { photoPickerIntent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3230/buggy-version/app.src.main.java.com.imageprocessing.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0f640a16191cd35c4ffa60cf901c6b037927de38", "Url": "https://api.github.com/repos/avi-kr/Image-Processing-Android", "Date": "2017-12-21T09:40:35Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (target.visible()) followUpActions.add(actionFactory.createUseWithSpecificItemAction(item, target));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1802/buggy-version/AndroidFree.src.main.java.com.chewielouie.textadventure.action.UseWith.java", "BodyUseAPI": ["java.util.List<com.chewielouie.textadventure.action.Action>.add(actionFactory.createUseWithSpecificItemAction(item, target))", "com.chewielouie.textadventure.action.ActionFactory.createUseWithSpecificItemAction(com.chewielouie.textadventure.item.Item,com.chewielouie.textadventure.item.Item)"], "Fixed commit": "0cbf90330bc28f06ab2538deea57db1c9eeac7e6", "Url": "https://api.github.com/repos/charlesarmitage/text-adventure", "Date": "2013-10-13T20:45:21Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((processController.getValidation()) == null) { validation = new biocode.fims.digester.Validation(); validation.addValidationRules(new org.apache.commons.digester3.Digester(), configFile); processController.setValidation(validation); }else { validation = processController.getValidation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8027/buggy-version/src.biocode.fims.run.Process.java", "BodyUseAPI": ["biocode.fims.run.ProcessController.setValidation(biocode.fims.digester.Validation)", "biocode.fims.run.ProcessController.getValidation()"], "Fixed commit": "d554f33babac142997538da7d7c7bd202c6f1761", "Url": "https://api.github.com/repos/biocodellc/biocode-fims-commons", "Date": "2016-02-07T11:18:05Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pantherman594.gssentials.command.general.PlayerData.getData(((net.md_5.bungee.api.connection.ProxiedPlayer) (sender)).getUniqueId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pD.isMsging()) { if ((com.pantherman594.gssentials.command.general.Messenger.reply(((net.md_5.bungee.api.connection.ProxiedPlayer) (sender)))) == null) { sender.sendMessage(com.pantherman594.gssentials.command.general.Dictionary.format(Dictionary.ERROR_NOBODY_HAS_MESSAGED)); return; } if ((net.md_5.bungee.api.ProxyServer.getInstance().getPlayer(com.pantherman594.gssentials.command.general.Messenger.reply(((net.md_5.bungee.api.connection.ProxiedPlayer) (sender))))) == null) { sender.sendMessage(com.pantherman594.gssentials.command.general.Dictionary.format(Dictionary.ERROR_PLAYER_OFFLINE)); return; } sender.sendMessage(com.pantherman594.gssentials.command.general.Dictionary.format(Dictionary.MESSAGE_ENABLED, \"PLAYER\", net.md_5.bungee.api.ProxyServer.getInstance().getPlayer(com.pantherman594.gssentials.command.general.Messenger.reply(((net.md_5.bungee.api.connection.ProxiedPlayer) (sender)))).getName())); }else { sender.sendMessage(com.pantherman594.gssentials.command.general.Dictionary.format(Dictionary.MESSAGE_DISABLED)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2443/buggy-version/src.main.java.com.pantherman594.gssentials.command.general.MessageCommand.java", "BodyUseAPI": [], "Fixed commit": "dc1b16bc04335282ad2e9dc4feffd0eec7e51e1f", "Url": "https://api.github.com/repos/PantherMan594/BungeeEssentials", "Date": "2016-04-30T17:56:20Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.md_5.bungee.api.ProxyServer.getInstance().getPlayer(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (recipient == null) { sender.sendMessage(com.pantherman594.gssentials.Dictionary.format(Dictionary.ERROR_PLAYER_OFFLINE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2443/buggy-version/src.main.java.com.pantherman594.gssentials.command.general.ReplyCommand.java", "BodyUseAPI": [], "Fixed commit": "dc1b16bc04335282ad2e9dc4feffd0eec7e51e1f", "Url": "https://api.github.com/repos/PantherMan594/BungeeEssentials", "Date": "2016-04-30T17:56:20Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.solr.common.util.NamedList.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((defs.get(\"sleepTime\")) != null) { sleepTime = java.lang.Long.parseLong(((java.lang.String) (defs.get(\"sleepTime\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/238/buggy-version/contrib.invenio.src.java.org.apache.solr.update.InvenioImportBackup.java", "BodyUseAPI": ["org.apache.solr.common.util.NamedList.get(java.lang.String)", "java.lang.Long.parseLong(((java.lang.String) (defs.get(\"sleepTime\"))))"], "Fixed commit": "9bd9b0c1e2575eaecd7e785a70945502847b6b4f", "Url": "https://api.github.com/repos/romanchyla/montysolr", "Date": "2012-10-26T18:43:14Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonProduct.has(\"expiration_date\")) { expirationStr = jsonProduct.getString(\"expiration_date\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2679/buggy-version/libs.mtesitoo-backend-api.src.main.java.com.mtesitoo.backend.service.ProductDetailResponse.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "ae9e22d3099ae4467a067f0644d1e9f676ff2c59", "Url": "https://api.github.com/repos/projectwife/mtesitoo-android", "Date": "2017-05-14T15:39:31Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jsonProduct.has(\"expiration_date\")) { expirationStr = jsonProduct.getString(\"expiration_date\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2679/buggy-version/libs.mtesitoo-backend-api.src.main.java.com.mtesitoo.backend.service.ProductResponse.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "ae9e22d3099ae4467a067f0644d1e9f676ff2c59", "Url": "https://api.github.com/repos/projectwife/mtesitoo-android", "Date": "2017-05-14T15:39:31Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.block.BlockPistonExtendEvent.getLength()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (length == 0) { if ((event.getBlock().getRelative(event.getDirection(), 2).getType()) != (org.bukkit.Material.AIR)) { event.setCancelled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7382/buggy-version/src.mitch.infpist.IPBlockListener.java", "BodyUseAPI": [], "Fixed commit": "dea8f3405827cb03acac9d7dc0f186d695b4f1f2", "Url": "https://api.github.com/repos/iammitch/InfPiston", "Date": "2011-09-21T23:46:53Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((blockedIndices) != null) { for (int i = 0; i < (super.blockedIndices.length); i++) { int blockedIdx = blockedIndices[i]; double pa = computeMatchingWeight(blockedIdx, record1, record2); if (pa < (super.blockingThreshold)) { return 0; } result += pa * (attributeWeights[blockedIdx]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4069/buggy-version/main.plugins.org.talend.dataquality.record.linkage.src.main.java.org.talend.dataquality.record.linkage.record.SimpleVSRRecordMatcher.java", "BodyUseAPI": [], "Fixed commit": "e0e41408eb75e45cb0b3f58f706f898e295cdf9e", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2014-08-20T06:57:10Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bb.common.scene.BBScene.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (player != null) { player.increaseScore(thisOne.getScore()); player.increaseScore(thatOne.getScore()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1904/buggy-version/src.main.java.bb.common.scene.CollisionDetector.java", "BodyUseAPI": ["bb.framework.actor.Player.increaseScore(thatOne.getScore())", "bb.framework.actor.Player.increaseScore(thisOne.getScore())"], "Fixed commit": "951889fdb906ec1d370d9e6a012f6f872856ef6c", "Url": "https://api.github.com/repos/williewheeler/battle-balloons", "Date": "2017-07-05T09:33:51Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((typeElement.getSuperclass().getKind()) != (javax.lang.model.type.TypeKind.NONE)) { javax.lang.model.type.DeclaredType superClass = ((javax.lang.model.type.DeclaredType) (typeElement.getSuperclass())); org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType dt = ((org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType) (atypeFactory.toAnnotatedType(superClass, false))); supertypes.add(dt); if (((com.sun.tools.javac.code.Symbol.ClassSymbol) (typeElement)).getRawTypeAttributes().isEmpty()) { final java.util.List<? extends javax.lang.model.type.TypeMirror> typeArgs = superClass.getTypeArguments(); final java.util.List<org.checkerframework.framework.type.AnnotatedTypeMirror> annotatedTypeArgs = dt.getTypeArguments(); for (int i = 0; i < (typeArgs.size()); i++) { atypeFactory.addComputedTypeAnnotations(types.asElement(typeArgs.get(i)), annotatedTypeArgs.get(i)); } } }else if (!(org.checkerframework.javacutil.ElementUtils.isObject(typeElement))) { supertypes.add(org.checkerframework.framework.type.AnnotatedTypeMirror.createTypeOfObject(atypeFactory)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2313/buggy-version/framework.src.org.checkerframework.framework.type.SupertypeFinder.java", "BodyUseAPI": ["org.checkerframework.javacutil.ElementUtils.isObject(javax.lang.model.element.TypeElement)", "javax.lang.model.element.TypeElement.getSuperclass()"], "Fixed commit": "201a6035c88f3bf9ee190a44d52840b4efd3400a", "Url": "https://api.github.com/repos/CharlesZ-Chen/checker-framework", "Date": "2016-08-11T23:28:03Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fDeviceText) == null) || (fDeviceText.isDisposed())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6307/buggy-version/net.sourceforge.usbdm.deviceDatabase.src.net.sourceforge.usbdm.deviceDatabase.ui.DeviceSelectorPanel.java", "BodyUseAPI": [], "Fixed commit": "078d65e095524b88e3065db247252cb887174619", "Url": "https://api.github.com/repos/podonoghue/usbdm-eclipse-plugins", "Date": "2016-06-29T00:56:51Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (expression.contains(\"json-eval(\")) { elem.addAttribute(elem.getOMFactory().createOMAttribute(attribName, nullNS, expression)); }else { elem.addAttribute(elem.getOMFactory().createOMAttribute(attribName, nullNS, ((\"json-eval(\" + expression) + \")\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3202/buggy-version/modules.core.src.main.java.org.apache.synapse.config.xml.SynapsePathSerializer.java", "BodyUseAPI": ["elem.getOMFactory().createOMAttribute(java.lang.String,org.apache.axiom.om.OMNamespace,java.lang.String)", "org.apache.axiom.om.OMElement.addAttribute(elem.getOMFactory().createOMAttribute(attribName, nullNS, expression))", "elem.getOMFactory().createOMAttribute(java.lang.String,org.apache.axiom.om.OMNamespace,java.lang.String)", "org.apache.axiom.om.OMElement.addAttribute(elem.getOMFactory().createOMAttribute(attribName, nullNS, ((\"json-eval(\" + expression) + \")\")))"], "Fixed commit": "9c40deb91568989ec7b7c0ca05f24e3197ba120d", "Url": "https://api.github.com/repos/Buddhima/wso2-synapse", "Date": "2015-01-22T12:20:18Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Enumeration<java.lang.String>.nextElement()", "java.util.Enumeration<java.lang.String>.nextElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((headerName.equals(\"Transfer-Encoding\")) && (next.equals(\"chunked\"))) { isChunked = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6419/buggy-version/Base.src.main.java.org.ntnunotif.wsnu.base.net.ApplicationServer.java", "BodyUseAPI": [], "Fixed commit": "9a5ffe6df093a33ec9c3d3b180775cd902b3d4ea", "Url": "https://api.github.com/repos/tOgg1/WS-Nu", "Date": "2014-06-10T15:23:07Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(button.isDisposed())) { button.setImage(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8487/buggy-version/applications.opibuilder.opibuilder-plugins.org.csstudio.opibuilder.widgets.src.org.csstudio.opibuilder.widgets.figures.NativeButtonFigure.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Button.setImage(org.eclipse.swt.graphics.Image)"], "Fixed commit": "b275481391ef802345d2359dfb5f0af0606d1819", "Url": "https://api.github.com/repos/dls-controls/cs-studio", "Date": "2015-05-19T18:16:33Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((diff) < 0) { nextRefreshFireTime = com.cons.utils.DateUtils.addMinutesToDate(new java.util.Date(), java.lang.Long.parseLong(cbAutoRefreshInterval.getSelectedItem().toString())); diff = com.cons.utils.DateUtils.getDateDiff(new java.util.Date(), nextRefreshFireTime, java.util.concurrent.TimeUnit.SECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1896/buggy-version/ServiceWatcher.src.main.java.com.cons.ui.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "224b394b2f73322c65b2935ec778dfba6dac5107", "Url": "https://api.github.com/repos/gtrianta1965/ServiceWatcher", "Date": "2017-07-18T16:19:16Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.StringUtils.substringAfter(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tempUrl == null) { tempUrl = org.apache.commons.lang.StringUtils.substringAfter(this.about, \"/aggregation/europeana/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8599/buggy-version/corelib-storage.src.main.java.eu.europeana.corelib.solr.entity.EuropeanaAggregationImpl.java", "BodyUseAPI": [], "Fixed commit": "ab42029de725ca2d3e8253b082e1fc01938741d9", "Url": "https://api.github.com/repos/europeana/corelib", "Date": "2015-11-11T12:52:56Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.moopa.guard.Guard.getAuthorizeTokenByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (token == null) { token = new net.moopa.guard.token.AuthorizeToken(); token.updateJwtToken(tokenname); return token; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5184/buggy-version/guard-core.src.main.java.net.moopa.guard.Guard.java", "BodyUseAPI": [], "Fixed commit": "8fab4f3184308233a210aae73bae1a157bfdcade", "Url": "https://api.github.com/repos/theNorthW/guard", "Date": "2017-05-31T03:12:20Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userDetails.size()) > 0) { if (userDetails.get(2).equals(\"noimage\")) { initials.setText(userDetails.get(1)); loadBackdrop(imageURL); }else { userName.setText(userDetails.get(0)); url = (\"https://trello-avatars.s3.amazonaws.com/\" + (userDetails.get(2))) + \"/170.png\"; initials.setText(\"\"); loadBackdrop(url); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8255/buggy-version/app.src.main.java.chalmers.eda397_2016_group3.MainActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.lang.String.equals(java.lang.String)", "android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "04fe317dbaab7174d768b565cc96c250e561b8de", "Url": "https://api.github.com/repos/sebbe33/EDA_397_2016_Group3", "Date": "2016-05-20T11:52:25Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configuration.get(MRJobConfig.REDUCE_JAVA_OPTS)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (reduceJavaOpts == null) { reduceJavaOpts = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5908/buggy-version/indexing-hadoop.src.main.java.io.druid.indexer.JobHelper.java", "BodyUseAPI": [], "Fixed commit": "affb85956975097bee315135aeeb3304c5b24992", "Url": "https://api.github.com/repos/wywlds/druid", "Date": "2017-07-21T10:49:09Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configuration.get(MRJobConfig.MAP_JAVA_OPTS)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mapJavaOpts == null) { mapJavaOpts = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5908/buggy-version/indexing-hadoop.src.main.java.io.druid.indexer.JobHelper.java", "BodyUseAPI": [], "Fixed commit": "affb85956975097bee315135aeeb3304c5b24992", "Url": "https://api.github.com/repos/wywlds/druid", "Date": "2017-07-21T10:49:09Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mpc.getAny().getNamespaceURI().trim().length()) == 0) || ((mpc.getAny().getLocalName().trim().length()) == 0)) { throw new cxc.jex.common.failure.FailureWrapper(\"SMEV.InvalidMessagePrimaryContent\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5740/buggy-version/lbss-service.src.main.java.ru.otr.lbss.service.SmevProcessingService.java", "BodyUseAPI": [], "Fixed commit": "47ea9fb817a3d89c2642160b802212ea687e91ac", "Url": "https://api.github.com/repos/gimatdinov/lbss", "Date": "2016-11-26T20:42:16Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mpc == null) || ((mpc.getAny()) == null)) { throw new cxc.jex.common.failure.FailureWrapper(\"SMEV.InvalidMessagePrimaryContent\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5740/buggy-version/lbss-service.src.main.java.ru.otr.lbss.service.SmevProcessingService.java", "BodyUseAPI": [], "Fixed commit": "47ea9fb817a3d89c2642160b802212ea687e91ac", "Url": "https://api.github.com/repos/gimatdinov/lbss", "Date": "2016-11-26T20:42:16Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(base.endsWith(\"?\"))) { sb.append(\"?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3555/buggy-version/src.main.java.de.bayern.gdi.processor.DownloadStepConverter.java", "BodyUseAPI": [], "Fixed commit": "64c3478b34ec9aceb31b3cd8df00d35d7a7ac49c", "Url": "https://api.github.com/repos/Intevation/downloadclient", "Date": "2017-06-01T11:24:19Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCheckedCh0)) { if ((S0 <= mid) && (mid <= S4)) { return true; }else return false; }else { if ((S0 <= mid) && (mid <= S4)) { return false; }else return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2027/buggy-version/src.Image.AddFilters.java", "BodyUseAPI": [], "Fixed commit": "1116c11d1a0d36120ea716ac92655e4073ec34f6", "Url": "https://api.github.com/repos/sargisaleksanyan/Image_ProcessingPro", "Date": "2016-07-17T10:34:14Z"},
{"Line": "=>753", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pluscubed.plustimer.ui.CurrentSessionTimerRetainedFragment.isScrambling()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!scrambling) { setTextColor(Color.GREEN); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2547/buggy-version/app.src.main.java.com.pluscubed.plustimer.ui.CurrentSessionTimerFragment.java", "BodyUseAPI": [], "Fixed commit": "e7785bdc841aabc63670fe961ce14db01221efb7", "Url": "https://api.github.com/repos/plusCubed/plusTimer", "Date": "2015-02-02T04:34:59Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gumtree.ui.util.workbench.WorkbenchUtils.getMWindow(org.eclipse.ui.IWorkbenchWindow)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mWindow == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5922/buggy-version/framework.applications.org.gumtree.app.workbench.src.org.gumtree.app.workbench.internal.SidebarActivator.java", "BodyUseAPI": [], "Fixed commit": "da83e5d887acd5aa0296d9f7e20a6a1b6fe35605", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2013-03-14T01:07:32Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.funandplausible.games.ggj2014.AnimationManager.nextFrame()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sprite == null) { mAnimationManager.startAnimation(\"walk_left_bad\"); sprite = mAnimationManager.nextFrame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7339/buggy-version/ggj2014.src.com.funandplausible.games.ggj2014.EnemyEntity.java", "BodyUseAPI": [], "Fixed commit": "1fb668efa4ab193bdf4d484caaa8ec1ad535d083", "Url": "https://api.github.com/repos/samphippen/fully-shaven-yak", "Date": "2014-01-25T19:46:33Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (client != null) { client.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8475/buggy-version/src.main.java.gov.ca.cwds.jobs.inject.JobsGuiceInjector.java", "BodyUseAPI": ["org.elasticsearch.client.transport.TransportClient.close()"], "Fixed commit": "cbdc1d4d8ff1339542261438dfeaf2b7f5dc284c", "Url": "https://api.github.com/repos/ca-cwds/jobs", "Date": "2017-07-19T20:17:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.citizensnpcs.api.npc.character.CharacterManager.getCharacter(java.lang.String)", "org.bukkit.entity.EntityType.valueOf(npc.getTrait(net.citizensnpcs.api.trait.trait.MobType.class).getType())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(character.getValidTypes().isEmpty())) && (!(character.getValidTypes().contains(type)))) { net.citizensnpcs.util.Messaging.sendError(player, ((\"This NPC cannot be given the character '\" + (character.getName())) + \"'.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3333/buggy-version/src.main.java.net.citizensnpcs.command.command.NPCCommands.java", "BodyUseAPI": ["net.citizensnpcs.util.Messaging.sendError(org.bukkit.entity.Player,((\"This NPC cannot be given the character '\" + (character.getName())) + \"'.\"))", "java.lang.Character.getName()"], "Fixed commit": "9ca35da9883d87258efef0c6e820a1776c735dde", "Url": "https://api.github.com/repos/CitizensDev/Citizens2", "Date": "2012-03-12T06:44:16Z"},
{"Line": "=>1938", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ret.result.contains(\"QUEUE\")) { updateQueueEntry(id, (num - (ret.numSharesBought)), conn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1102/buggy-version/webapp.IdeaBroker.src.main.resources.rmiserver.RMI_Server.java", "BodyUseAPI": ["rmiserver.RMI_Server.updateQueueEntry(int,(num - (ret.numSharesBought)),java.sql.Connection)"], "Fixed commit": "7e54dd44691c13cd26708659685db722cfc14c86", "Url": "https://api.github.com/repos/Jorl17/projecto-sd", "Date": "2013-12-06T23:59:52Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (journalExtraInfo == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8445/buggy-version/src.main.java.net.nikr.eve.jeveasset.data.api.raw.RawJournalExtraInfo.java", "BodyUseAPI": [], "Fixed commit": "44b8668cfe91d8d2a7303c68fd8ac77780a5e0fe", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-08-30T18:33:04Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((materials.size()) > 0) data.setAll(org.map.hibernate.ddo.MaterialRegister.getMaterialRegisterList(materials));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4503/buggy-version/MaterialRegister.src.org.map.view.ViewReport.java", "BodyUseAPI": [], "Fixed commit": "e2203a8dca415e8c8e0c59ba0e1bebf50a326d77", "Url": "https://api.github.com/repos/AMITCCILGITHUB/MaterialRegister", "Date": "2012-12-02T17:14:11Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((test.getRemarks().trim().length()) <= 0) { test.setRemarks(test.getTestName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4503/buggy-version/MaterialRegister.src.org.map.hibernate.dao.ValidationData.java", "BodyUseAPI": ["org.map.hibernate.ddo.TestMaster.setRemarks(test.getTestName())", "org.map.hibernate.ddo.TestMaster.getTestName()"], "Fixed commit": "e2203a8dca415e8c8e0c59ba0e1bebf50a326d77", "Url": "https://api.github.com/repos/AMITCCILGITHUB/MaterialRegister", "Date": "2012-12-02T17:14:11Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((test.getTestCode()) <= 1000) { test.setTestCode(org.map.hibernate.dao.ValidationData.getNextValidationNumber(\"Test\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4503/buggy-version/MaterialRegister.src.org.map.hibernate.dao.ValidationData.java", "BodyUseAPI": ["org.map.hibernate.ddo.TestMaster.setTestCode(int)"], "Fixed commit": "e2203a8dca415e8c8e0c59ba0e1bebf50a326d77", "Url": "https://api.github.com/repos/AMITCCILGITHUB/MaterialRegister", "Date": "2012-12-02T17:14:11Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lucIndex) != null) lucIndex.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9229/buggy-version/encontra-rest-core.src.main.java.pt.inevo.encontra.rest.engines.ClutchImageEngine.java", "BodyUseAPI": [], "Fixed commit": "3ea106c21cd4c72cdb5ac8b7f0bc705100b088a4", "Url": "https://api.github.com/repos/encontra/encontra-rest", "Date": "2015-02-06T18:02:38Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hotelAreaList.size()) != 0) { java.lang.String lastFirstChar = hotelAreaList.get(0).category; sectionIndices.add(0); for (int i = 1; i < (hotelAreaList.size()); i++) { if (!(hotelAreaList.get(i).category.equals(lastFirstChar))) { lastFirstChar = hotelAreaList.get(i).category; sectionIndices.add(i); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1117/buggy-version/app.src.main.java.com.jixstreet.rekatoursandtravel.hotel.adapter.HotelAreaAdapter.java", "BodyUseAPI": ["hotelAreaList.get(i).category.equals(java.lang.String)", "java.util.List<com.jixstreet.rekatoursandtravel.hotel.model.HotelArea>.get(int)", "java.util.List<com.jixstreet.rekatoursandtravel.hotel.model.HotelArea>.get(int)", "java.util.List<com.jixstreet.rekatoursandtravel.hotel.model.HotelArea>.size()", "java.util.List<com.jixstreet.rekatoursandtravel.hotel.model.HotelArea>.get(int)"], "Fixed commit": "ecbb840141e2f2f48bbde148bddf6e4abdbf9091", "Url": "https://api.github.com/repos/satryaway/rekausaha", "Date": "2016-05-28T02:27:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.getStatusLine().getStatusCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status == 404) { return null; }else { throw new org.apache.http.client.ClientProtocolException((\"Unexpected response status: \" + status)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4811/buggy-version/shrclient-omod.src.main.java.org.bahmni.module.shrclient.util.WebClient.java", "BodyUseAPI": [], "Fixed commit": "289669dbf38d560a3a2a262ec2336bb33379a65d", "Url": "https://api.github.com/repos/SharedHealth/openmrs-module-bdshrclient", "Date": "2014-07-08T10:37:23Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == raw) || (raw.startsWith(\"--\"))) { return raw; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3308/buggy-version/laputa-service.src.main.java.com.orctom.laputa.service.model.RequestWrapper.java", "BodyUseAPI": [], "Fixed commit": "a6c53d8a804e44a52a9644fcc04c7272850b30ac", "Url": "https://api.github.com/repos/orctom/laputa", "Date": "2017-04-13T11:58:58Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (in == null) { langFile = \"en_US\"; in = com.oitsjustjose.geolosys.Geolosys.class.getResourceAsStream(((\"/assets/geolosys/book/\" + langFile) + \".lang\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2147/buggy-version/src.main.java.com.oitsjustjose.geolosys.items.ItemFieldManual.java", "BodyUseAPI": [], "Fixed commit": "ddb4b8ce6e343fc1f24681cf8d8ec2fbca14ddef", "Url": "https://api.github.com/repos/oitsjustjose/Geolosys", "Date": "2017-11-19T06:57:36Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (in == null) { langFile = \"en_US\"; in = com.oitsjustjose.geolosys.Geolosys.class.getResourceAsStream(((\"/assets/geolosys/book/\" + langFile) + \".lang\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2147/buggy-version/src.main.java.com.oitsjustjose.geolosys.items.ItemFieldManual.java", "BodyUseAPI": [], "Fixed commit": "ddb4b8ce6e343fc1f24681cf8d8ec2fbca14ddef", "Url": "https://api.github.com/repos/oitsjustjose/Geolosys", "Date": "2017-11-19T06:57:36Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((options.length) == 0) { event = new org.encog.ml.bayesian.BayesianEvent(label); }else { event = new org.encog.ml.bayesian.BayesianEvent(label, options); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8194/buggy-version/src.main.java.org.encog.ml.bayesian.BayesianNetwork.java", "BodyUseAPI": [], "Fixed commit": "e2cf6c46cff6473ce052a5928b41f3902145a8f5", "Url": "https://api.github.com/repos/encog/encog-java-core", "Date": "2011-11-05T19:53:11Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.telenor.connect.ConnectSdk.isCellularDataNetworkConnected())) { parameters.add(\"prompt\", \"no_seam\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6365/buggy-version/connect.src.com.telenor.connect.AbstractSdkProfile.java", "BodyUseAPI": [], "Fixed commit": "0185714cdcfaa47c439a1b719439cdc5384dd610", "Url": "https://api.github.com/repos/telenordigital/connect-android-sdk", "Date": "2017-07-10T13:18:43Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.unibe.scg.zeeguu.Search_Fragments.MainLinearLayout.getHeight()", "ch.unibe.scg.zeeguu.Search_Fragments.MeasureSpec.getSize(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (actualHeight < proposedheight) { findViewById(R.id.relativeLayout_text_translated).setVisibility(ch.unibe.scg.zeeguu.Search_Fragments.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5838/buggy-version/app.src.main.java.ch.unibe.scg.zeeguu.Search_Fragments.MainLinearLayout.java", "BodyUseAPI": [], "Fixed commit": "9a9d269b3cdf0a365f98ea0dc0c386f6f0063eb5", "Url": "https://api.github.com/repos/SimpleDay/Zeeguu", "Date": "2015-04-30T16:25:40Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((email.equals(\"\")) || (password.equals(\"\"))) { android.widget.Toast.makeText(com.example.fp.androidapp.MyApplication.getMyContext(), \"Do not leave a field empty\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8805/buggy-version/app.src.main.java.com.example.fp.androidapp.RestaurantListActivity.java", "BodyUseAPI": [], "Fixed commit": "48de30cd860c118af741bd848d76c2211d95bdc1", "Url": "https://api.github.com/repos/eldar1560/android-fp", "Date": "2017-07-30T12:28:47Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((email.equals(\"\")) || (password.equals(\"\"))) { android.widget.Toast.makeText(com.example.fp.androidapp.MyApplication.getMyContext(), \"Do not leave a field empty\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8805/buggy-version/app.src.main.java.com.example.fp.androidapp.RestaurantListActivity.java", "BodyUseAPI": [], "Fixed commit": "48de30cd860c118af741bd848d76c2211d95bdc1", "Url": "https://api.github.com/repos/eldar1560/android-fp", "Date": "2017-07-30T12:28:47Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Response<cuexpo.cuexpo2017.dao.UserDao>.body()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dao.getResults().getAcademic()) != null) { editor.putString(\"academicSchool\", dao.getResults().getAcademic().getAcademicSchool()); editor.putString(\"academicYear\", dao.getResults().getAcademic().getAcademicYear()); editor.putString(\"academicLevel\", dao.getResults().getAcademic().getAcademicLevel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5396/buggy-version/ChulaExpo.app.src.main.java.cuexpo.cuexpo2017.activity.MainActivity.java", "BodyUseAPI": ["dao.getResults().getAcademic().getAcademicYear()", "SharedPreferences.Editor.putString(java.lang.String,dao.getResults().getAcademic().getAcademicYear())", "dao.getResults().getAcademic()", "dao.getResults().getAcademic().getAcademicSchool()", "SharedPreferences.Editor.putString(java.lang.String,dao.getResults().getAcademic().getAcademicLevel())", "cuexpo.cuexpo2017.dao.UserDao.getResults()", "cuexpo.cuexpo2017.dao.UserDao.getResults()", "cuexpo.cuexpo2017.dao.UserDao.getResults()", "dao.getResults().getAcademic()", "dao.getResults().getAcademic().getAcademicLevel()", "dao.getResults().getAcademic()", "SharedPreferences.Editor.putString(java.lang.String,dao.getResults().getAcademic().getAcademicSchool())"], "Fixed commit": "e8553398d4d3ab84e0a6a385c8a3f7f00f2c3748", "Url": "https://api.github.com/repos/CUTomorrow/chula-expo-2017", "Date": "2017-03-13T17:43:02Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.Charge.findById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c == null) { return notFound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5156/buggy-version/app.controllers.ApplicationEditing.java", "BodyUseAPI": [], "Fixed commit": "2b5a0e6417a634dd7733d88c4feed850ee75bebc", "Url": "https://api.github.com/repos/schmave/demschooltools", "Date": "2017-07-19T01:33:03Z"},
{"Line": "=>1008", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request().body().asFormUrlEncoded()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((form_data == null) || ((form_data.get(\"markdown\")) == null)) { return ok(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5156/buggy-version/app.controllers.Application.java", "BodyUseAPI": [], "Fixed commit": "2b5a0e6417a634dd7733d88c4feed850ee75bebc", "Url": "https://api.github.com/repos/schmave/demschooltools", "Date": "2017-07-19T01:33:03Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (jsonBody != null) { try { entity = new org.apache.http.entity.StringEntity(jsonBody.toString()); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2762/buggy-version/app.src.main.java.name.l33t.radiopi.RemotePlayer.java", "BodyUseAPI": ["org.json.JSONObject.toString()"], "Fixed commit": "949b52cd3c5269615ae5e8104f0cf2a3e9d77290", "Url": "https://api.github.com/repos/radio-pi/RadioPi", "Date": "2015-07-12T09:50:39Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.groovy.grails.web.util.WebUtils.isIncludeRequest(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isIncludeRequest) { parentBinding = ((groovy.lang.Binding) (request.getAttribute(GrailsApplicationAttributes.PAGE_SCOPE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2895/buggy-version/grails-web.src.main.groovy.org.codehaus.groovy.grails.web.pages.GroovyPageWritable.java", "BodyUseAPI": [], "Fixed commit": "75dca0318fcc7cbe20c63d0fe947b62dbf316772", "Url": "https://api.github.com/repos/grails/grails-core", "Date": "2011-07-26T10:09:38Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mod.length()) > 1) { for (java.lang.String i : mod.split(\"~\")) { userof.add(java.lang.Integer.parseInt(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7223/buggy-version/StudyGroupFinder.src.database.UserData.java", "BodyUseAPI": [], "Fixed commit": "a36cb2e79b365dc2b5bd33d94a60f08947b34376", "Url": "https://api.github.com/repos/mckgamer/CSE-110-StudyGroupFinder", "Date": "2011-10-23T19:57:10Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mod.length()) > 1) { for (java.lang.String i : mod.split(\"~\")) { modof.add(java.lang.Integer.parseInt(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7223/buggy-version/StudyGroupFinder.src.database.UserData.java", "BodyUseAPI": [], "Fixed commit": "a36cb2e79b365dc2b5bd33d94a60f08947b34376", "Url": "https://api.github.com/repos/mckgamer/CSE-110-StudyGroupFinder", "Date": "2011-10-23T19:57:10Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextInt(com.comze_instancelabs.colormatch.Main.colors.size())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((com.comze_instancelabs.colormatch.Main.a_currentw.get(arena)) == temp) { com.comze_instancelabs.colormatch.Main.a_currentw.put(arena, com.comze_instancelabs.colormatch.Main.r.nextInt(com.comze_instancelabs.colormatch.Main.colors.size())); }else { com.comze_instancelabs.colormatch.Main.a_currentw.put(arena, temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8500/buggy-version/src.com.comze_instancelabs.colormatch.Main.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,int)"], "Fixed commit": "ef46ba340692d6dd7f5664b185ff70559b8a2438", "Url": "https://api.github.com/repos/instance01/ColorMatch", "Date": "2014-02-06T16:20:45Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["IExpressions.Value.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((data.length) > 0) { if ((data.length) > 1) { java.math.BigInteger value_int = org.eclipse.tcf.internal.debug.ui.model.TCFNumberFormat.toBigInteger(data, value_data.isBigEndian(), false); if ((value_int.compareTo(java.math.BigInteger.valueOf(128))) >= 0) break; data = new byte[1]; data[0] = value_int.byteValue(); } org.eclipse.tcf.internal.debug.ui.model.StyledStringBuffer bf = new org.eclipse.tcf.internal.debug.ui.model.StyledStringBuffer(); bf.append(toASCIIString(data, 0, 1, '\\''), StyledStringBuffer.MONOSPACED); set(null, null, bf); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6176/buggy-version/plugins.org.eclipse.tcf.debug.ui.src.org.eclipse.tcf.internal.debug.ui.model.TCFNodeExpression.java", "BodyUseAPI": ["org.eclipse.tcf.internal.debug.ui.model.TCFNumberFormat.toBigInteger(byte[],value_data.isBigEndian(),boolean)"], "Fixed commit": "1b7b7252370d26d27061b107eebfe3fb5a95f1d9", "Url": "https://api.github.com/repos/eclipse/tcf", "Date": "2015-07-28T20:19:43Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.temporal.ChronoUnit.between(java.time.LocalDateTime,thisListing.auctionCompletionDateTime)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (nanosLeft < 0) { buyTimeLeft.setText(\"Auction Expired\"); }else { long days = java.util.concurrent.TimeUnit.NANOSECONDS.toDays(nanosLeft); long hours = (java.util.concurrent.TimeUnit.NANOSECONDS.toHours(nanosLeft)) % 24; long minutes = (java.util.concurrent.TimeUnit.NANOSECONDS.toMinutes(nanosLeft)) % 60; buyTimeLeft.setText((((((days + \"d \") + hours) + \"h \") + minutes) + \"m\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/556/buggy-version/DragonBidsClient.src.dragonbids.client.UserWindow.java", "BodyUseAPI": ["java.util.concurrent.TimeUnit.toHours(long)", "java.util.concurrent.TimeUnit.toDays(long)", "java.util.concurrent.TimeUnit.toMinutes(long)"], "Fixed commit": "1490c0379976a9cb00b7b37483f44aff4d08e5b8", "Url": "https://api.github.com/repos/amirpouya/cs575group7", "Date": "2016-12-08T01:19:12Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((-1) != (MsgUserList.getSelectedIndex())) { userToContact = MsgUsrListString.getElementAt(MsgUserList.getSelectedIndex()).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/556/buggy-version/DragonBidsClient.src.dragonbids.client.UserWindow.java", "BodyUseAPI": ["java.lang.String.toString()", "javax.swing.DefaultListModel<java.lang.String>.getElementAt(int)", "javax.swing.JList<java.lang.String>.getSelectedIndex()"], "Fixed commit": "1490c0379976a9cb00b7b37483f44aff4d08e5b8", "Url": "https://api.github.com/repos/amirpouya/cs575group7", "Date": "2016-12-08T01:19:12Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nazjara.aggregator.model.RabotaStrategy.getDocument(java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.nazjara.aggregator.model.RabotaStrategy.nullChecking.equals(doc.getElementsByClass(\"rua-p-c-black\").first().text())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2729/buggy-version/src.main.java.com.nazjara.aggregator.model.RabotaStrategy.java", "BodyUseAPI": [], "Fixed commit": "d76c2eade67259ec309149c5343ce5e534ffcce4", "Url": "https://api.github.com/repos/Nazjara/Vacancies_Aggregator", "Date": "2016-10-13T15:09:06Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.ibuildthecloud.gdapi.context.ApiContext.getContext().getPolicy()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (policy == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/561/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.dao.impl.AuthDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "981b741b6cc4ca6138cddebe03a32ca171bfeba3", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-04-07T01:32:49Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (digest != null) { hash = digest.digest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6269/buggy-version/WaktuPrototyp.src.ch.hsr.waktu.services.Md5.java", "BodyUseAPI": ["java.security.MessageDigest.digest()"], "Fixed commit": "c7259463c9dacbaf395e7dc2d0beea69083af8bd", "Url": "https://api.github.com/repos/patriziaheer/waktu", "Date": "2011-04-23T15:31:24Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromY < toY) { for (int y = fromY; y < toY; y++) { points.add(new java.awt.Point(fromX, y)); } }else { for (int y = toY; y < fromY; y++) { points.add(new java.awt.Point(fromX, y)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2915/buggy-version/src.com.valkryst.VTerminal.misc.ShapeAlgorithms.java", "BodyUseAPI": [], "Fixed commit": "c0369b3a9ef8922ac7ce02e50b67cfaaed76604b", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2017-08-22T12:41:44Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromX < toX) { for (int x = fromX; x < toX; x++) { points.add(new java.awt.Point(x, fromY)); } }else { for (int x = toX; x < fromX; x++) { points.add(new java.awt.Point(x, fromY)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2915/buggy-version/src.com.valkryst.VTerminal.misc.ShapeAlgorithms.java", "BodyUseAPI": [], "Fixed commit": "c0369b3a9ef8922ac7ce02e50b67cfaaed76604b", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2017-08-22T12:41:44Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (term == null) term = Constant.ONE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1749/buggy-version/src.main.java.de.neemann.digital.analyse.DetermineJKStateMachine.java", "BodyUseAPI": [], "Fixed commit": "429363cd334fc91a794ed440e4e1ae522c43fa16", "Url": "https://api.github.com/repos/hneemann/Digital", "Date": "2017-12-17T11:55:39Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (term == null) term = Constant.ONE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1749/buggy-version/src.main.java.de.neemann.digital.analyse.DetermineJKStateMachine.java", "BodyUseAPI": [], "Fixed commit": "429363cd334fc91a794ed440e4e1ae522c43fa16", "Url": "https://api.github.com/repos/hneemann/Digital", "Date": "2017-12-17T11:55:39Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xcolab.client.members.MembersClient.getMember(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((member.getPortraitFileEntryId()) != null) { imageId = (member.getPortraitFileEntryId()) + \"\"; }else { imageId = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6882/buggy-version/hooks.climatecolab-hooks.src.main.java.org.xcolab.hooks.climatecolab.utils.ImageDisplayerFilter.java", "BodyUseAPI": ["org.xcolab.client.members.pojo.Member.getPortraitFileEntryId()"], "Fixed commit": "ccbcbce1e70c9fd261e6c994ef1cd665218890d5", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2016-06-16T20:10:07Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof edu.cpp.cs.cs141.GECLYfinalproj.Ninja) { if (currentOccupant instanceof edu.cpp.cs.cs141.GECLYfinalproj.Player) { if ((((edu.cpp.cs.cs141.GECLYfinalproj.Player) (currentOccupant)).getInvincibilityCount()) > 0) { this.kill(); }else { ((edu.cpp.cs.cs141.GECLYfinalproj.Agent) (currentOccupant)).kill(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7745/buggy-version/src.edu.cpp.cs.cs141.GECLYfinalproj.Agent.java", "BodyUseAPI": [], "Fixed commit": "bca5e83c2dc6dcf8565e06bc88884ceae18c3e15", "Url": "https://api.github.com/repos/Trainzack/GECLY-", "Date": "2017-02-23T21:56:46Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mCurrentMarker.getPosition().equals(destination)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1026/buggy-version/app.src.main.java.dat255.refugeemap.GMapFragment.java", "BodyUseAPI": [], "Fixed commit": "d7824ae27f23b570f57a03351d40e88191d498f7", "Url": "https://api.github.com/repos/drualsk/RefugeeMap", "Date": "2016-10-20T21:37:10Z"},
{"Line": "=>1052", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMap) != null) { newCircle = mMap.addCircle(circleOptions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2230/buggy-version/src.com.yoneko.areyouthereyet.update.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "eedf522d0d3890167405606b30ff389a78ecd634", "Url": "https://api.github.com/repos/reidisaki/dumpy", "Date": "2016-09-24T23:43:37Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((friendname != null) && (!(friendname.equals(\"\")))) { relationService.addFriend(friendname, auth.getName()); relationService.addFriend(auth.getName(), friendname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5905/buggy-version/src.main.java.org.yqq.controller.HomeController.java", "BodyUseAPI": ["org.yqq.service.RelationService.addFriend(java.lang.String,auth.getName())", "org.yqq.service.RelationService.addFriend(auth.getName(),java.lang.String)"], "Fixed commit": "49e571342c6b792a0431223bdabbcebbce5eb72a", "Url": "https://api.github.com/repos/yeycfri/yqq", "Date": "2016-06-25T17:27:43Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender == (getFragmentManager().findFragmentById(R.id.trap_info_bait_add_2_frag))) { baitIndex = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4083/buggy-version/src.net.wandroid.mythology.trap.TrapInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "54cf5be4059a894515fab3aaa39464df00fef597", "Url": "https://api.github.com/repos/zabbat/myth", "Date": "2013-12-29T11:45:17Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((defaultDegreeOfParallelism) < 1) { org.apache.flink.compiler.PactCompiler.LOG.warn(((((\"Config value \" + (defaultDegreeOfParallelism)) + \" for option \") + (org.apache.flink.configuration.ConfigConstants.DEFAULT_PARALLELIZATION_DEGREE)) + \" is invalid. Ignoring and using a value of 1.\")); this.defaultDegreeOfParallelism = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2179/buggy-version/flink-compiler.src.main.java.org.apache.flink.compiler.PactCompiler.java", "BodyUseAPI": [], "Fixed commit": "73b5b3dd81e2a146592d9623f44ceff3d8c035fa", "Url": "https://api.github.com/repos/aljoscha/incubator-flink", "Date": "2014-09-24T16:38:01Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((feedsList) == null) { android.widget.Toast.makeText(getApplicationContext(), \"Wrong, try again later.\", Toast.LENGTH_LONG).show(); }else { com.example.rssreader.ListAdapter listAdapterRss = new com.example.rssreader.ListAdapter(this, feedsList); listViewRss.setAdapter(listAdapterRss); listViewRss.setOnItemClickListener(new com.example.rssreader.ListListener(feedsList, this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4352/buggy-version/RssReader.src.com.example.rssreader.RssReader.java", "BodyUseAPI": [], "Fixed commit": "7c29e9590cb75f27619960eb0a38386c83ab163c", "Url": "https://api.github.com/repos/PosashkovDima/Rss-Reader", "Date": "2014-04-30T15:40:18Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mcc) != null) { for (ezcli.modules.smart_autocomplete.CommandFreq c : mcc.getCommandSequences()) if (c.getCommandSequence().startsWith(command)) return c.getCommandSequence().substring(command.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3302/buggy-version/src.main.java.ezcli.modules.smart_autocomplete.CmdComplete.java", "BodyUseAPI": [], "Fixed commit": "6e0e5c51b8f0e9bccd689c671583c76ec08cea5e", "Url": "https://api.github.com/repos/nanoandrew4/ezcli", "Date": "2017-12-03T04:57:23Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.java_websocket.util.Charsetfunctions.stringUtf8(frame.getPayloadData())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (decodedString.equals(\",\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2965/buggy-version/signalr-client-sdk.src.main.java.microsoft.aspnet.signalr.client.transport.WebsocketTransport.java", "BodyUseAPI": [], "Fixed commit": "1a8a6d5e9ebd8044a405549da54402bf8b306c6d", "Url": "https://api.github.com/repos/maks-pasichnyk/signalr-java-client", "Date": "2017-12-07T12:59:54Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileURL == null) || (fileURL.isEmpty())) { return createExceptionResponse(new org.broadinstitute.consent.http.resources.BadRequestException(\"Query Parameter 'fileURL' cannot be empty.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4369/buggy-version/consent-ws.src.main.java.org.broadinstitute.consent.http.resources.IndexerResource.java", "BodyUseAPI": [], "Fixed commit": "ebea4df31695ea8125fdfb7900207e2d18d6c6c9", "Url": "https://api.github.com/repos/DataBiosphere/consent", "Date": "2017-07-26T14:01:08Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (next.endsWith(\";\")) { line.append(\" \"); line.append(next.substring(0, ((next.length()) - 1))); execute(line.toString()); line = new java.lang.StringBuilder(); }else { line.append(\" \"); line.append(next); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3964/buggy-version/src.main.java.net.sheehantech.databaseloader.DatabaseLoader.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "97ef7f5974d9bec1c478e2c320748df60d8f9be1", "Url": "https://api.github.com/repos/jlsheehan/database-loader", "Date": "2016-02-29T02:11:16Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["field_text.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(valueToSearch.isEmpty())) { flickrService.getPictures(valueToSearch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4807/buggy-version/app.src.main.java.eschoepf.flickrs10.MainActivity.java", "BodyUseAPI": ["eschoepf.flickrs10.FlickrService.getPictures(java.lang.String)"], "Fixed commit": "e2611a9a68e2e5da0d255cafb4e15eb0938d3108", "Url": "https://api.github.com/repos/eduardoschoepf83/androidFormation_Flickrs1.0", "Date": "2016-11-30T21:52:13Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bitmap != null) { org.redPanda.ChannelList.FlActivity.addBitmapToMemoryCache(path, bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/968/buggy-version/src.org.redPanda.ChatAdapter.java", "BodyUseAPI": ["org.redPanda.ChannelList.FlActivity.addBitmapToMemoryCache(java.lang.String,android.graphics.Bitmap)"], "Fixed commit": "8e9a6d51b0360951605107d4b7fa791f5406fa81", "Url": "https://api.github.com/repos/redPanda-project/android", "Date": "2014-04-24T18:41:45Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.hm.cs.vadere.seating.datacollection.model.LogEvent.getPerson()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (person != null) personsToDelete.add(person);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4465/buggy-version/SeatingDataCollection.app.src.main.java.edu.hm.cs.vadere.seating.datacollection.MainActivity.java", "BodyUseAPI": ["java.util.Set<edu.hm.cs.vadere.seating.datacollection.model.Person>.add(edu.hm.cs.vadere.seating.datacollection.model.Person)"], "Fixed commit": "a0cdcbbadfb541aa464276445b788e6de634046b", "Url": "https://api.github.com/repos/schoettl/seating-datacollection", "Date": "2016-08-09T09:33:35Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (streetIn != (poker.Hand.PRE_FLOP)) { for (int j = 0; j < (game.players.length); j++) { game.players[j].resetStreetMoney(); game.players[j].setEndAction(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8050/buggy-version/src.poker.Hand.java", "BodyUseAPI": [], "Fixed commit": "155eb816b461b372be610abb79fae23d989f0d5b", "Url": "https://api.github.com/repos/BrianLee608/PokerApp", "Date": "2015-09-08T21:38:22Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.andes.amqp.OnflightMessageTracker.getInstance().getTrackingData(message.getMessageNumber())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (trackingData != null) { org.wso2.andes.amqp.AndesMessageMetadata rejectedMessage = org.wso2.andes.amqp.AMQPUtils.convertAMQMessageToAndesMetadata(message, channel.getId()); rejectedMessage.setTrackingData(trackingData); org.wso2.andes.amqp.MessagingEngine.getInstance().messageRejected(rejectedMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2243/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.amqp.QpidAndesBridge.java", "BodyUseAPI": ["org.wso2.andes.amqp.AndesMessageMetadata.setTrackingData(org.wso2.andes.amqp.MessageData)"], "Fixed commit": "58f486870cfeefcb488c4769f5209959c7ca9b84", "Url": "https://api.github.com/repos/wso2/andes", "Date": "2015-08-24T06:27:29Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.io.File>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (inExtList(file1.getName(), 0)) { content1 = com.zbaccp.bananaplan.util.FileUtil.readAll(file1.getAbsolutePath()); if ((content1 == null) || ((content1.length()) == 0)) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4531/buggy-version/src.com.zbaccp.bananaplan.Application.java", "BodyUseAPI": ["com.zbaccp.bananaplan.util.FileUtil.readAll(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "13d42cee2c22e0508a36d50e5eba97ef5948a93f", "Url": "https://api.github.com/repos/bananaplan/JadeSmallTools", "Date": "2017-08-18T14:30:16Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == param) { preparedStatement.setTimestamp(index, new java.sql.Timestamp(0L), orm.util.SQLUtil.CALENDAR); }else { preparedStatement.setTimestamp(index, new java.sql.Timestamp(((java.util.Date) (param)).getTime()), orm.util.SQLUtil.CALENDAR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5108/buggy-version/server.server.src.orm.util.SQLUtil.java", "BodyUseAPI": [], "Fixed commit": "0e242b86b1721c6194aab567bf7a0f443bc74d16", "Url": "https://api.github.com/repos/CaoYouXin/serveV2", "Date": "2017-09-20T12:30:40Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isIntParam) { timestamp = resultSet.getTimestamp(index, orm.util.SQLUtil.CALENDAR); }else { timestamp = resultSet.getTimestamp(columnName, orm.util.SQLUtil.CALENDAR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5108/buggy-version/server.server.src.orm.util.SQLUtil.java", "BodyUseAPI": [], "Fixed commit": "0e242b86b1721c6194aab567bf7a0f443bc74d16", "Url": "https://api.github.com/repos/CaoYouXin/serveV2", "Date": "2017-09-20T12:30:40Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.ide.ResourceUtil.getFile(org.eclipse.ui.IEditorInput)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (file != null) { if (file.getName().endsWith(LaunchConstants.EXT_BNDRUN)) { launch(file.getFullPath(), mode); }else if (file.getName().equals(Project.BNDFILE)) { launch(file.getProject().getFullPath(), mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3762/buggy-version/bndtools.core.src.bndtools.launch.AbstractLaunchShortcut.java", "BodyUseAPI": ["bndtools.launch.AbstractLaunchShortcut.launch(file.getFullPath(),java.lang.String)", "org.eclipse.core.resources.IFile.getName()", "file.getName().endsWith(LaunchConstants.EXT_BNDRUN)", "file.getProject().getFullPath()", "file.getName().equals(Project.BNDFILE)", "org.eclipse.core.resources.IFile.getFullPath()", "org.eclipse.core.resources.IFile.getName()", "bndtools.launch.AbstractLaunchShortcut.launch(file.getProject().getFullPath(),java.lang.String)", "org.eclipse.core.resources.IFile.getProject()"], "Fixed commit": "2f69a020ff3e7e7a66a2164686c170cc6595ff5e", "Url": "https://api.github.com/repos/njbartlett/bndtools", "Date": "2011-06-06T22:53:06Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task) != null) { task.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4153/buggy-version/app.src.main.java.ru.kaefik.isaifutdinov.an_wether_prj.cityInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "cbc00fe98a49784a569be358bb7d814575ee2a09", "Url": "https://api.github.com/repos/kaefik/an-wether-prj", "Date": "2016-07-22T07:08:43Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((shotCounter) % (com.megaman.constants.MegamanConstants.BOSS_FREQUENCY)) == 0) { ((com.megaman.gamestates.logic.GSGameLogic) (logic)).playMusic(bossType.getMusicType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4141/buggy-version/core.src.com.megaman.model.Megaman.java", "BodyUseAPI": [], "Fixed commit": "c1da77cc3c22c4dc386478bb27771aecc3320569", "Url": "https://api.github.com/repos/Quillraven/Protoman-vs-Megaman", "Date": "2015-01-11T10:56:47Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.ActionEvent.getActionCommand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (event.equals(\"add\")) { (black)++; textarea1.repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4556/buggy-version/Puzzle.java", "BodyUseAPI": [], "Fixed commit": "15f6aa2e825a0742bfe3aee026aca55da9ef5e1a", "Url": "https://api.github.com/repos/stevewong290/APCS1-Final-Project", "Date": "2017-01-12T19:48:27Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.net.ConnectException) { return new com.fast.framework.network.NetworkException(\"\u670d\u52a1\u5668\u8fde\u63a5\u88ab\u62d2\u7edd\u5f02\u5e38\", com.fast.framework.network.ExceptionHandle.SERVER_ERROR_CODE); }else if (e instanceof java.net.SocketTimeoutException) { return new com.fast.framework.network.NetworkException(\"\u670d\u52a1\u5668\u8fde\u63a5\u8d85\u65f6\u5f02\u5e38\", com.fast.framework.network.ExceptionHandle.SERVER_ERROR_CODE); }else if ((e instanceof org.json.JSONException) || (e instanceof android.net.ParseException)) { return new com.fast.framework.network.NetworkException(\"\u670d\u52a1\u5668\u6570\u636e\u89e3\u6790\u9519\u8bef\u5f02\u5e38\", com.fast.framework.network.ExceptionHandle.SERVER_ERROR_CODE); }else if (e instanceof com.fast.framework.network.NetworkException) { return ((com.fast.framework.network.NetworkException) (e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1556/buggy-version/fast-framework-lib.src.main.java.com.fast.framework.network.ExceptionHandle.java", "BodyUseAPI": [], "Fixed commit": "956a3a65dffe4d50f218cf05083da3bbb4d82c8e", "Url": "https://api.github.com/repos/lishicong/Android-FastFramework", "Date": "2017-08-31T06:02:16Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.outputStream) != null) { final java.io.OutputStream outputStream = this.outputStream; updateWriter(outputStream, encoding); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2519/buggy-version/src.main.java.org.jboss.logmanager.handlers.OutputStreamHandler.java", "BodyUseAPI": [], "Fixed commit": "6f523060adb7643d3c2d0861ac414933bd8e6e7e", "Url": "https://api.github.com/repos/jboss-logging/jboss-logmanager", "Date": "2013-08-09T09:27:45Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parameterClass.isPrimitive()) { info.archinnov.achilles.validation.Validator.validateNotNull(args, \"Cannot set null value to primitive type '%s' when invoking '%s' on instance of class'%s'\", parameterClass.getCanonicalName(), setter.getName(), setter.getDeclaringClass().getCanonicalName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8814/buggy-version/achilles-core.src.main.java.info.archinnov.achilles.proxy.ReflectionInvoker.java", "BodyUseAPI": ["info.archinnov.achilles.validation.Validator.validateNotNull(java.lang.Object,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.lang.Class<?>.getCanonicalName()"], "Fixed commit": "c2f461cda8f2df47dfbef50fb0cd54fadbbe2831", "Url": "https://api.github.com/repos/doanduyhai/Achilles", "Date": "2013-10-12T15:26:07Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callbackThread) != null) { callbackThread.quit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3322/buggy-version/imgproc-android.app.src.main.java.com.johnsoft.imgproc.camera.PipActivity.java", "BodyUseAPI": [], "Fixed commit": "b248d182b5bfea5250a4bedc8846d304b5330f01", "Url": "https://api.github.com/repos/johnlee175/ImageProcessor", "Date": "2017-08-29T11:51:33Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callbackThread) != null) { callbackThread.quit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3322/buggy-version/imgproc-android.app.src.main.java.com.johnsoft.imgproc.camera.NativeCameraActivity.java", "BodyUseAPI": [], "Fixed commit": "b248d182b5bfea5250a4bedc8846d304b5330f01", "Url": "https://api.github.com/repos/johnlee175/ImageProcessor", "Date": "2017-08-29T11:51:33Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.peterverzijl.softwaresystems.qwirkle.Board.isValid(playersMove)) { java.lang.System.out.println(\"if isValid\"); mBoard.setFrontier(playersMove.get(i)); mBoard.getPlacedBlocks().add(playersMove.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1718/buggy-version/src.com.peterverzijl.softwaresystems.qwirkle.Game.java", "BodyUseAPI": ["java.util.List<com.peterverzijl.softwaresystems.qwirkle.Node>.get(int)", "mBoard.getPlacedBlocks().add(playersMove.get(i))", "com.peterverzijl.softwaresystems.qwirkle.Board.setFrontier(playersMove.get(i))", "java.util.List<com.peterverzijl.softwaresystems.qwirkle.Node>.get(int)"], "Fixed commit": "d1542c13e523fbe61aad5b5d2c4097ff094c8591", "Url": "https://api.github.com/repos/PeterVerzijl/Qwirkle", "Date": "2016-01-22T09:10:24Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["item.getItemProperty(\"Select\").getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (cb != null) { cb.setValue(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3583/buggy-version/ikasaneip.dashboard.jar.src.main.java.org.ikasan.dashboard.ui.search.panel.SearchPanel.java", "BodyUseAPI": ["org.ikasan.dashboard.ui.search.panel.CheckBox.setValue(boolean)"], "Fixed commit": "fb4b7913a85092b8f7d977c2416ea933c2392166", "Url": "https://api.github.com/repos/ikasanEIP/ikasan", "Date": "2017-12-11T14:06:53Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ikasanSolrDocument.getType().equals(\"replay\")) { com.vaadin.data.Item item = container.getItem(ikasanSolrDocument); org.ikasan.dashboard.ui.search.panel.CheckBox cb = ((org.ikasan.dashboard.ui.search.panel.CheckBox) (item.getItemProperty(\"Select\").getValue())); if ((cb.getValue()) == true) { myItems.add(replayManagementService.getReplayEventById(new java.lang.Long(ikasanSolrDocument.getId()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3583/buggy-version/ikasaneip.dashboard.jar.src.main.java.org.ikasan.dashboard.ui.search.panel.SearchPanel.java", "BodyUseAPI": ["org.ikasan.replay.service.SolrReplayServiceImpl.getReplayEventById(java.lang.Long)", "org.ikasan.solr.model.IkasanSolrDocument.getId()", "com.vaadin.data.util.IndexedContainer.getItem(org.ikasan.solr.model.IkasanSolrDocument)", "java.util.List<org.ikasan.spec.replay.ReplayEvent>.add(replayManagementService.getReplayEventById(new java.lang.Long(ikasanSolrDocument.getId())))"], "Fixed commit": "fb4b7913a85092b8f7d977c2416ea933c2392166", "Url": "https://api.github.com/repos/ikasanEIP/ikasan", "Date": "2017-12-11T14:06:53Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["item.getItemProperty(\"Select\").getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (cb != null) { cb.setValue(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3583/buggy-version/ikasaneip.dashboard.jar.src.main.java.org.ikasan.dashboard.ui.search.panel.SearchPanel.java", "BodyUseAPI": ["org.ikasan.dashboard.ui.search.panel.CheckBox.setValue(boolean)"], "Fixed commit": "fb4b7913a85092b8f7d977c2416ea933c2392166", "Url": "https://api.github.com/repos/ikasanEIP/ikasan", "Date": "2017-12-11T14:06:53Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (manifestVersion != null) { fileName = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.decodeZipFileName(fileName); actualFilePath = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.decodeZipFileName(actualFilePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8734/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importer.SolutionImportHandler.java", "BodyUseAPI": [], "Fixed commit": "c5e593e42134228bcd9055a39d06eef02acc77ff", "Url": "https://api.github.com/repos/ivanpogodin/pentaho-platform", "Date": "2015-09-18T14:23:23Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (manifestVersion != null) { decodedFile = new org.pentaho.platform.api.repository2.unified.RepositoryFile.Builder(decodedFile).path(decodedFilePath).name(fileName).title(fileName).build(); decodedFilePath = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.decodeZipFileName(file.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8734/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importer.SolutionImportHandler.java", "BodyUseAPI": [], "Fixed commit": "c5e593e42134228bcd9055a39d06eef02acc77ff", "Url": "https://api.github.com/repos/ivanpogodin/pentaho-platform", "Date": "2015-09-18T14:23:23Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.withManifest) { zipEntryName = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.encodeZipPathName(zipEntryName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8734/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importexport.ZipExportProcessor.java", "BodyUseAPI": [], "Fixed commit": "c5e593e42134228bcd9055a39d06eef02acc77ff", "Url": "https://api.github.com/repos/ivanpogodin/pentaho-platform", "Date": "2015-09-18T14:23:23Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.withManifest) { zipEntryName = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.encodeZipPathName(zipEntryName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8734/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importexport.ZipExportProcessor.java", "BodyUseAPI": [], "Fixed commit": "c5e593e42134228bcd9055a39d06eef02acc77ff", "Url": "https://api.github.com/repos/ivanpogodin/pentaho-platform", "Date": "2015-09-18T14:23:23Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.hanging.HangingBreakByEntityEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (en instanceof org.bukkit.entity.Painting) type = \"Painting\"; else if (en instanceof org.bukkit.entity.ItemFrame) type = \"Itemframe\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8082/buggy-version/src.uk.co.oliwali.HawkEye.listeners.MonitorEntityListener.java", "BodyUseAPI": [], "Fixed commit": "fd6326a7cff59e1763b13bfec17f53413903ab53", "Url": "https://api.github.com/repos/Muson/HawkReloaded", "Date": "2012-12-04T01:47:53Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (view == null) { view = new android.webkit.WebView(cordova); cordova.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5571/buggy-version/src.com.changeit.wmpolyfill.PhonegapWebClient.java", "BodyUseAPI": [], "Fixed commit": "6abaf91a8ebf57a5491843fb9728e3d8105a343c", "Url": "https://api.github.com/repos/Philzen/WebView-MultiTouch-Polyfill", "Date": "2012-08-25T00:32:35Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parent.getProcessDefinition().getLanguage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lang == (Language.BPMN)) { element.setParent(parent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4715/buggy-version/plugins.ru.runa.gpd.src.ru.runa.gpd.lang.NodeTypeDefinition.java", "BodyUseAPI": [], "Fixed commit": "732f0635a82c0e179bd0204d158a97cbebe4ec07", "Url": "https://api.github.com/repos/dataobject/runawfe-devstudio", "Date": "2017-05-19T08:56:29Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parent.getProcessDefinition().getLanguage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lang == (Language.JPDL)) { element.setParent(parent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4715/buggy-version/plugins.ru.runa.gpd.src.ru.runa.gpd.lang.NodeTypeDefinition.java", "BodyUseAPI": [], "Fixed commit": "732f0635a82c0e179bd0204d158a97cbebe4ec07", "Url": "https://api.github.com/repos/dataobject/runawfe-devstudio", "Date": "2017-05-19T08:56:29Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((play.modules.hazelcast.HazelcastCacheImpl.instance) == null) { play.modules.hazelcast.HazelcastCacheImpl.instance = new play.modules.hazelcast.HazelcastCacheImpl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4195/buggy-version/src.play.modules.hazelcast.HazelcastCacheImpl.java", "BodyUseAPI": [], "Fixed commit": "082fa0d6a0c28381682a5589aa8e768d8ef4ad59", "Url": "https://api.github.com/repos/marcuspocus/hazelcast", "Date": "2011-05-29T18:42:35Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 1) { com.rahmanbari.discountopia.fragments.DepartmentsFragment departmentsTab = new com.rahmanbari.discountopia.fragments.DepartmentsFragment(); return departmentsTab; }else if (position == 2) { com.rahmanbari.discountopia.fragments.BrandsFragment brandsTab = new com.rahmanbari.discountopia.fragments.BrandsFragment(); return brandsTab; }else { com.rahmanbari.discountopia.fragments.MallsFragment mallsTab = new com.rahmanbari.discountopia.fragments.MallsFragment(); return mallsTab; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1665/buggy-version/app.src.main.java.com.rahmanbari.discountopia.adapters.ViewPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "ae2ea0dfa8f42da89d438e32389d78ce296ae4c1", "Url": "https://api.github.com/repos/taz13/Discountopia", "Date": "2015-08-20T03:19:19Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNullLiteral(otherRs.getExpression())) { if ((isNullLiteral(condition.getRightOperand())) && (match(matcher, condition.getLeftOperand(), rs.getExpression()))) { return replaceWithStraightReturn(node, condition.getLeftOperand()); }else if ((isNullLiteral(condition.getLeftOperand())) && (match(matcher, condition.getRightOperand(), rs.getExpression()))) { return replaceWithStraightReturn(node, condition.getRightOperand()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7095/buggy-version/plugin.src.main.java.org.autorefactor.refactoring.rules.RemoveUselessNullCheckRefactoring.java", "BodyUseAPI": [], "Fixed commit": "f1c0f1781757bb2d07194680872b045ac3a5cbe8", "Url": "https://api.github.com/repos/JnRouvignac/AutoRefactor", "Date": "2014-09-19T09:13:35Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entityHeaderExists(opEntities, header))) { opEntities.add(header); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3389/buggy-version/intg.src.main.java.org.apache.atlas.model.instance.EntityMutationResponse.java", "BodyUseAPI": ["java.util.List<org.apache.atlas.model.instance.AtlasEntityHeader>.add(org.apache.atlas.model.instance.AtlasEntityHeader)"], "Fixed commit": "5733834306bddbd7665c9ab200c6e217ac52e9b8", "Url": "https://api.github.com/repos/apache/atlas", "Date": "2017-08-23T06:08:25Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLocation) != null) { getActivity().startActivity(com.grayfox.android.app.activity.RecommendedRouteActivity.getIntent(getActivity(), currentLocation, poi)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/429/buggy-version/app.src.main.java.com.grayfox.android.app.fragment.ExploreFragment.java", "BodyUseAPI": [], "Fixed commit": "7d68b71de4b92d0cb2c94d3b718d44ba7cc4624e", "Url": "https://api.github.com/repos/dan-zx/rox-android", "Date": "2015-03-30T21:09:39Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLocation) != null) { getActivity().startActivity(com.grayfox.android.app.activity.RecommendedRouteActivity.getIntent(getActivity(), currentLocation, recommendation.getPoi())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/429/buggy-version/app.src.main.java.com.grayfox.android.app.fragment.ExploreFragment.java", "BodyUseAPI": [], "Fixed commit": "7d68b71de4b92d0cb2c94d3b718d44ba7cc4624e", "Url": "https://api.github.com/repos/dan-zx/rox-android", "Date": "2015-03-30T21:09:39Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.equals(this.backend.getDefaultWorld())) { world = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2337/buggy-version/src.main.java.ru.tehkode.permissions.compat.P2Entity.java", "BodyUseAPI": [], "Fixed commit": "7b1184606d397823aff127c63a88bdbc1fd93621", "Url": "https://api.github.com/repos/lycano/PermissionsCompat", "Date": "2011-05-26T10:20:06Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.equals(this.backend.getDefaultWorld())) { world = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2337/buggy-version/src.main.java.ru.tehkode.permissions.compat.P2Entity.java", "BodyUseAPI": [], "Fixed commit": "7b1184606d397823aff127c63a88bdbc1fd93621", "Url": "https://api.github.com/repos/lycano/PermissionsCompat", "Date": "2011-05-26T10:20:06Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().getFragments()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fragments != null) { for (android.support.v4.app.Fragment childFragment : fragments) { if ((childFragment instanceof ar.com.wolox.wolmo.core.fragment.IWoloxFragment) && (childFragment.isVisible())) { if (((ar.com.wolox.wolmo.core.fragment.IWoloxFragment) (childFragment)).onBackPressed()) return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1969/buggy-version/core.src.main.java.ar.com.wolox.wolmo.core.activity.WoloxActivity.java", "BodyUseAPI": [], "Fixed commit": "f7379c14c01ef30c185a28dfbd17cfca2648e94e", "Url": "https://api.github.com/repos/Wolox/wolmo-core-android", "Date": "2017-03-22T15:15:11Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ImageView.getRotation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currRotate < 180) { rotate = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4891/buggy-version/app.src.main.java.com.jhj.expandablerecyclerviewexample.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "0a364b3762931f652d31a5645d52707c3d56678a", "Url": "https://api.github.com/repos/huajianjiang/ExpandableRecyclerView", "Date": "2016-09-19T02:31:02Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ImageView.getRotation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currRotate == 360) { arrow.setRotation(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4891/buggy-version/app.src.main.java.com.jhj.expandablerecyclerviewexample.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "0a364b3762931f652d31a5645d52707c3d56678a", "Url": "https://api.github.com/repos/huajianjiang/ExpandableRecyclerView", "Date": "2016-09-19T02:31:02Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sigmah.server.service.util.PropertyMap.get(UserDTO.ID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (id != null) { userFound = userDAO.findById(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4868/buggy-version/src.main.java.org.sigmah.server.service.UserService.java", "BodyUseAPI": ["org.sigmah.server.dao.UserDAO.findById(java.lang.Integer)"], "Fixed commit": "4921fdbe763261869275ee185e003c7e22699fcb", "Url": "https://api.github.com/repos/sigmah-dev/sigmah", "Date": "2015-02-24T16:49:46Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.b3log.solo.processor.OptionQueryService.getOptions(Option.CATEGORY_C_QINIU)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != qiniu) { jsonObject.put(\"qiniuDomain\", qiniu.optString(Option.ID_C_QINIU_DOMAIN)); jsonObject.put(\"qiniuBucket\", qiniu.optString(Option.ID_C_QINIU_BUCKET)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/853/buggy-version/src.main.java.org.b3log.solo.processor.BlogProcessor.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,qiniu.optString(Option.ID_C_QINIU_BUCKET))", "org.json.JSONObject.put(java.lang.String,qiniu.optString(Option.ID_C_QINIU_DOMAIN))", "org.json.JSONObject.optString(Option.ID_C_QINIU_DOMAIN)", "org.json.JSONObject.optString(Option.ID_C_QINIU_BUCKET)"], "Fixed commit": "9029910735453a7cec558c2cd4b26d3e6b97e08d", "Url": "https://api.github.com/repos/b3log/solo", "Date": "2017-11-15T08:28:43Z"},
{"Line": "=>1124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((specTopic.getTopicType()) == (org.jboss.pressgang.ccms.contentspec.enums.TopicType.NORMAL)) || ((specTopic.getTopicType()) == (org.jboss.pressgang.ccms.contentspec.enums.TopicType.LEVEL))) { if ((org.jboss.pressgang.ccms.rest.v1.components.ComponentBaseTopicV1.hasTag(topic, CSConstants.LEGAL_NOTICE_TAG_ID)) || (org.jboss.pressgang.ccms.rest.v1.components.ComponentBaseTopicV1.hasTag(topic, CSConstants.REVISION_HISTORY_TAG_ID))) { log.error(java.lang.String.format(ProcessorConstants.ERROR_TOPIC_NOT_ALLOWED_MSG, specTopic.getLineNumber(), specTopic.getText())); valid = false; } }else if ((specTopic.getTopicType()) == (org.jboss.pressgang.ccms.contentspec.enums.TopicType.LEGAL_NOTICE)) { if (!(org.jboss.pressgang.ccms.rest.v1.components.ComponentBaseTopicV1.hasTag(topic, CSConstants.LEGAL_NOTICE_TAG_ID))) { log.error(java.lang.String.format(ProcessorConstants.ERROR_LEGAL_NOTICE_TOPIC_TYPE_INCORRECT, specTopic.getLineNumber(), specTopic.getText())); valid = false; } }else if ((specTopic.getTopicType()) == (org.jboss.pressgang.ccms.contentspec.enums.TopicType.REVISION_HISTORY)) { if (!(org.jboss.pressgang.ccms.rest.v1.components.ComponentBaseTopicV1.hasTag(topic, CSConstants.REVISION_HISTORY_TAG_ID))) { log.error(java.lang.String.format(ProcessorConstants.ERROR_REV_HISTORY_TOPIC_TYPE_INCORRECT, specTopic.getLineNumber(), specTopic.getText())); valid = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/567/buggy-version/src.main.java.com.redhat.contentspec.processor.ContentSpecValidator.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.contentspec.SpecTopic.getText()", "org.jboss.pressgang.ccms.contentspec.utils.logging.ErrorLogger.error(java.lang.String)", "java.lang.String.format(ProcessorConstants.ERROR_LEGAL_NOTICE_TOPIC_TYPE_INCORRECT,specTopic.getLineNumber(),specTopic.getText())", "org.jboss.pressgang.ccms.contentspec.utils.logging.ErrorLogger.error(java.lang.String)", "org.jboss.pressgang.ccms.contentspec.utils.logging.ErrorLogger.error(java.lang.String)", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getLineNumber()", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getText()", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getLineNumber()", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getTopicType()", "java.lang.String.format(ProcessorConstants.ERROR_REV_HISTORY_TOPIC_TYPE_INCORRECT,specTopic.getLineNumber(),specTopic.getText())", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getLineNumber()", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getTopicType()", "java.lang.String.format(ProcessorConstants.ERROR_TOPIC_NOT_ALLOWED_MSG,specTopic.getLineNumber(),specTopic.getText())", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getText()"], "Fixed commit": "079e8127e18d90a24cb279775aa0ace24ef3fffc", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpecProcessor", "Date": "2013-05-16T23:05:22Z"},
{"Line": "=>1180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((specTopic.getTopicType()) == (org.jboss.pressgang.ccms.contentspec.enums.TopicType.NORMAL)) || ((specTopic.getTopicType()) == (org.jboss.pressgang.ccms.contentspec.enums.TopicType.LEVEL))) { if ((org.jboss.pressgang.ccms.rest.v1.components.ComponentBaseTopicV1.hasTag(topic, CSConstants.LEGAL_NOTICE_TAG_ID)) || (org.jboss.pressgang.ccms.rest.v1.components.ComponentBaseTopicV1.hasTag(topic, CSConstants.REVISION_HISTORY_TAG_ID))) { log.error(java.lang.String.format(ProcessorConstants.ERROR_TOPIC_NOT_ALLOWED_MSG, specTopic.getLineNumber(), specTopic.getText())); valid = false; } }else if ((specTopic.getTopicType()) == (org.jboss.pressgang.ccms.contentspec.enums.TopicType.LEGAL_NOTICE)) { if (!(org.jboss.pressgang.ccms.rest.v1.components.ComponentBaseTopicV1.hasTag(topic, CSConstants.LEGAL_NOTICE_TAG_ID))) { log.error(java.lang.String.format(ProcessorConstants.ERROR_LEGAL_NOTICE_TOPIC_TYPE_INCORRECT, specTopic.getLineNumber(), specTopic.getText())); valid = false; } }else if ((specTopic.getTopicType()) == (org.jboss.pressgang.ccms.contentspec.enums.TopicType.REVISION_HISTORY)) { if (!(org.jboss.pressgang.ccms.rest.v1.components.ComponentBaseTopicV1.hasTag(topic, CSConstants.REVISION_HISTORY_TAG_ID))) { log.error(java.lang.String.format(ProcessorConstants.ERROR_REV_HISTORY_TOPIC_TYPE_INCORRECT, specTopic.getLineNumber(), specTopic.getText())); valid = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/567/buggy-version/src.main.java.com.redhat.contentspec.processor.ContentSpecValidator.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.contentspec.SpecTopic.getText()", "org.jboss.pressgang.ccms.contentspec.utils.logging.ErrorLogger.error(java.lang.String)", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getLineNumber()", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getTopicType()", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getTopicType()", "org.jboss.pressgang.ccms.contentspec.utils.logging.ErrorLogger.error(java.lang.String)", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getLineNumber()", "java.lang.String.format(ProcessorConstants.ERROR_REV_HISTORY_TOPIC_TYPE_INCORRECT,specTopic.getLineNumber(),specTopic.getText())", "java.lang.String.format(ProcessorConstants.ERROR_TOPIC_NOT_ALLOWED_MSG,specTopic.getLineNumber(),specTopic.getText())", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getText()", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getLineNumber()", "org.jboss.pressgang.ccms.contentspec.utils.logging.ErrorLogger.error(java.lang.String)", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getText()", "java.lang.String.format(ProcessorConstants.ERROR_LEGAL_NOTICE_TOPIC_TYPE_INCORRECT,specTopic.getLineNumber(),specTopic.getText())"], "Fixed commit": "079e8127e18d90a24cb279775aa0ace24ef3fffc", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpecProcessor", "Date": "2013-05-16T23:05:22Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (restart) { restart = false; grid = new Grid(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7521/buggy-version/java.workspace.hivolts.HivoltsBoard.java", "BodyUseAPI": [], "Fixed commit": "dedcdde74fa96e0fd1ab9455d71e038e62a30dd8", "Url": "https://api.github.com/repos/tekknolagi/apcompsci", "Date": "2012-10-09T15:44:01Z"},
{"Line": "=>1036", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joget.apps.form.model.FormAjaxOptionsElement.getControlElement(org.joget.apps.form.model.FormData)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (controlElement != null) { java.lang.String[] controlValues = org.joget.apps.form.service.FormUtil.getElementPropertyValues(controlElement, formData); org.joget.apps.form.model.FormAjaxOptionsBinder binder = ((org.joget.apps.form.model.FormAjaxOptionsBinder) (element.getOptionsBinder())); org.joget.apps.form.model.FormRowSet rowSet = binder.loadAjaxOptions(controlValues); if (rowSet != null) { optionsMap = new java.util.ArrayList<java.util.Map>(); for (java.util.Map row : rowSet) { optionsMap.add(row); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/476/buggy-version/wflow-core.src.main.java.org.joget.apps.form.service.FormUtil.java", "BodyUseAPI": ["org.joget.apps.form.service.FormUtil.getElementPropertyValues(org.joget.apps.form.model.Element,org.joget.apps.form.model.FormData)"], "Fixed commit": "f35c67dce6b5c7220caf5725fc291c764a3e0bfb", "Url": "https://api.github.com/repos/jogetworkflow/jw-community", "Date": "2017-07-13T08:01:32Z"},
{"Line": "=>1232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(prefix.equals(\"\"))) name2 += (com.dragome.compiler.generators.DragomeJavaScriptGenerator.FIELD_TYPE_SEPARATOR) + (com.dragome.compiler.generators.DragomeJavaScriptGenerator.normalizeExpression(fr.getFieldType()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6952/buggy-version/dragome-bytecode-js-compiler.src.main.java.com.dragome.compiler.generators.DragomeJavaScriptGenerator.java", "BodyUseAPI": [], "Fixed commit": "23dad13c62c5ca71d5732b3233ed5f93bb825e81", "Url": "https://api.github.com/repos/dragome/dragome-sdk", "Date": "2016-10-01T23:51:02Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mirror.dalvik.system.VMRuntime.getRuntime) != null) { VMRuntime.setTargetSdkVersion.call(VMRuntime.getRuntime.call(), data.appInfo.targetSdkVersion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3505/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.VClientImpl.java", "BodyUseAPI": [], "Fixed commit": "04eff3c12d0332d3ab2386b777a972f0c37ed9f4", "Url": "https://api.github.com/repos/prife/VirtualApp", "Date": "2016-08-21T13:20:57Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.greenpath.mockito.ide.refactoring.ast.AstResolver.findParentOfType(org.eclipse.jdt.core.dom.SimpleName,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (methodDeclaration == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5721/buggy-version/plugins.pl.greenpath.mockito.ide.refactoring.src.pl.greenpath.mockito.ide.refactoring.assisst.MocksQuickAssistProcessor.java", "BodyUseAPI": [], "Fixed commit": "cfca2d16210df41b08698456f6ce5a3157a83b13", "Url": "https://api.github.com/repos/michalborek/mockito-eclipse-tools", "Date": "2014-03-22T21:00:36Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.PlayerInventory.getHelmet()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (!(oldItem == null)) inv.addItem(oldItem);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4778/buggy-version/src.main.java.cz.sycha.hattie.Main.java", "BodyUseAPI": ["org.bukkit.inventory.PlayerInventory.addItem(org.bukkit.inventory.ItemStack)"], "Fixed commit": "ea2f8e66a6f79ace9d0dffbe8015a8ec817257a7", "Url": "https://api.github.com/repos/ImagineCraft/Hattie", "Date": "2016-09-04T07:25:22Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.getName().endsWith(\".gz\")) { os = new java.util.zip.GZIPOutputStream(os); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6624/buggy-version/Gazetteer.src.main.java.me.osm.gazetter.utils.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "b19ca9b0abe04d5fcb8be4283eb43d18e4f3b06b", "Url": "https://api.github.com/repos/kiselev-dv/gazetteer", "Date": "2015-06-09T18:57:27Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notificationsEnabled) btnNotification.setText(R.string.btn_notifications_stop); else btnNotification.setText(R.string.btn_notifications);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7411/buggy-version/app.src.main.java.com.example.pau.busyalert.Fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "e89202d5908a7b67705487785a1fbd5b1061a6d2", "Url": "https://api.github.com/repos/pbalaguer19/BusyAlert", "Date": "2017-03-15T09:43:02Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (monitorEnabled) btnMonitoring.setText(R.string.btn_monitoring_stop); else btnMonitoring.setText(R.string.btn_monitoring);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7411/buggy-version/app.src.main.java.com.example.pau.busyalert.Fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "e89202d5908a7b67705487785a1fbd5b1061a6d2", "Url": "https://api.github.com/repos/pbalaguer19/BusyAlert", "Date": "2017-03-15T09:43:02Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((errorFlowReply == null) && (this.errorOnTimeout)) { if (object instanceof org.springframework.messaging.Message) { throw new org.springframework.integration.MessageTimeoutException(((org.springframework.messaging.Message<?>) (object)), \"No reply received from error channel within timeout\"); }else { throw new org.springframework.integration.MessageTimeoutException(\"No reply received from error channel within timeout\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5370/buggy-version/spring-integration-core.src.main.java.org.springframework.integration.gateway.MessagingGatewaySupport.java", "BodyUseAPI": [], "Fixed commit": "f2b1061c4b243891f3ce8645662efa70906a69d9", "Url": "https://api.github.com/repos/garyrussell/spring-integration", "Date": "2015-07-24T20:25:19Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.debug.core.DebugPlugin.newProcess(org.eclipse.debug.core.ILaunch,java.lang.Process,Constants.PROCESS_MESSAGE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(process.isTerminated())) { org.nodeclipse.debug.util.NodeDebugUtil.launch(mode, launch, monitor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1795/buggy-version/org.nodeclipse.debug.src.org.nodeclipse.debug.launch.LaunchConfigurationDelegate.java", "BodyUseAPI": [], "Fixed commit": "0ce2ee530f6b2fa73c46371ee9915a1bba8f8234", "Url": "https://api.github.com/repos/tomotaro1065/nodeclipse", "Date": "2013-03-03T06:33:29Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nodeclipse.debug.util.NodeResourceUtil.get(org.eclipse.core.resources.IResource)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (res2.exists()) { addBreakpoint(res2, lineNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1795/buggy-version/org.nodeclipse.debug.src.org.nodeclipse.debug.model.NodeBreakpointAdapter.java", "BodyUseAPI": ["org.nodeclipse.debug.model.NodeBreakpointAdapter.addBreakpoint(org.eclipse.core.resources.IResource,int)"], "Fixed commit": "0ce2ee530f6b2fa73c46371ee9915a1bba8f8234", "Url": "https://api.github.com/repos/tomotaro1065/nodeclipse", "Date": "2013-03-03T06:33:29Z"},
{"Line": "=>1284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.vm.VirtualMachineProfile.getVirtualMachine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((vm.getHostId()) != null) { answer = _agentMgr.send(vm.getHostId(), stop); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8034/buggy-version/engine.orchestration.src.com.cloud.vm.VirtualMachineManagerImpl.java", "BodyUseAPI": ["com.cloud.vm.VirtualMachine.getHostId()", "com.cloud.agent.AgentManager.send(vm.getHostId(),com.cloud.agent.api.StopCommand)"], "Fixed commit": "d7eae25322155810ba68aa6109978db287459736", "Url": "https://api.github.com/repos/yvsubhash/cloudstack", "Date": "2017-03-09T10:30:16Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)", "mAddTransactionAmount.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (decPos == ((amountText.length()) - 2)) { amountText += \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3335/buggy-version/app.src.main.java.com.shamik.easymoney.app.fragments.AddOrEditTransactionFragment.java", "BodyUseAPI": [], "Fixed commit": "c49ce877727f6ebab54ebd45b40d4e7221d0c243", "Url": "https://api.github.com/repos/shamgang/easymoney", "Date": "2016-05-26T23:42:38Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (decPos == ((amountText.length()) - 2)) { amountText += \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3335/buggy-version/app.src.main.java.com.shamik.easymoney.app.fragments.AddOrEditTransactionFragment.java", "BodyUseAPI": [], "Fixed commit": "c49ce877727f6ebab54ebd45b40d4e7221d0c243", "Url": "https://api.github.com/repos/shamgang/easymoney", "Date": "2016-05-26T23:42:38Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((N <= 0) || (T <= 0)) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7760/buggy-version/src.PercolationStats.java", "BodyUseAPI": [], "Fixed commit": "9e8375b1ea6bbf1f3424c701e723336807a3fdf6", "Url": "https://api.github.com/repos/zhenyiluo/coursera.cs.princeton.edu", "Date": "2015-07-25T21:31:57Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mainGame.isNextMoveAnyMove()) { setButtonsforAny(); firstMove = true; }else if (firstMove) { setBoardForNewOrWonGame(true); firstMove = false; enableNewSubgame(move.getTileX(), move.getTileY()); }else { disableOldSubgame(move.getGameX(), move.getGameY()); enableNewSubgame(move.getTileX(), move.getTileY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2926/buggy-version/app.src.main.java.olsonworks.UltimateTicTacToe.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "64a092ee046e45027ff4e406a5444fdedd635312", "Url": "https://api.github.com/repos/timothyhaskins/UltimateTicTacToe-Tim_Peter_project", "Date": "2015-05-23T04:15:01Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.freeplane.features.map.NodeModel.getParentNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((newParent != oldParent) && (newParent.subtreeClones().contains(oldParent))) { moveNodeAndItsClones(child, oldParent, newIndex, isLeft, changeSide); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3948/buggy-version/freeplane.src.main.java.org.freeplane.features.map.mindmapmode.MMapController.java", "BodyUseAPI": ["org.freeplane.features.map.mindmapmode.MMapController.moveNodeAndItsClones(org.freeplane.features.map.NodeModel,org.freeplane.features.map.NodeModel,int,boolean,boolean)"], "Fixed commit": "94a18e7da05cfb09c076ede384570bf211fababe", "Url": "https://api.github.com/repos/freeplane/freeplane", "Date": "2016-06-04T18:25:22Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (currentType != null) { for (org.opengraph.OpenGraphNamespace ns : pageNamespaces) { if (currentType.startsWith(((ns.getPrefix()) + \":\"))) { currentType = currentType.replaceFirst(((ns.getPrefix()) + \":\"), \"\"); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5770/buggy-version/src.org.opengraph.OpenGraph.java", "BodyUseAPI": [], "Fixed commit": "b45d9161e3cc91815290afc88c2104b6ffbe4dbd", "Url": "https://api.github.com/repos/callumj/opengraph-java", "Date": "2014-05-22T12:57:10Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((personnummer.matches(\"[0-9]+\")) && ((personnummer.length()) == 10)) || ((personnummer.length()) == 12)) { if (name.equals(\"\")) { throw new java.lang.Exception(\"Name can not be empty\"); }else { this.name = name; } if (adress.equals(\"\")) { throw new java.lang.Exception(\"Adress can not be empty\"); }else { this.adress = adress; } this.ID = java.util.UUID.randomUUID(); this.currentLoans = new java.util.ArrayList<library.Book>(); this.loanHistory = new java.util.ArrayList<library.Book>(); this.debt = 0; if (((personnummer.matches(\"[0-9]+\")) && ((personnummer.length()) == 10)) || ((personnummer.length()) == 12)) { this.personnummer = personnummer; }else { throw new java.lang.Exception(\"Personnummer MUST consist of 10 or 12 digits\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8367/buggy-version/src.library.Customer.java", "BodyUseAPI": [], "Fixed commit": "ba3bc01266318189a401b9d7d4d4166509fc3114", "Url": "https://api.github.com/repos/LFredin/LibrarySystem2", "Date": "2017-11-28T08:57:53Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rel.trim().endsWith(\"==\")) || (rel.trim().endsWith(\"!=\"))) { rel += \"1\"; }else if ((rest.startsWith(\"==\")) || (rest.startsWith(\"!=\"))) { rel += \"1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/796/buggy-version/src.edu.ucla.cs.utils.SAT.java", "BodyUseAPI": [], "Fixed commit": "40d3774b5af1ac5394e4796faec702d2e45066d8", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-19T19:54:02Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isInterrupted()) && (flagStop)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8393/buggy-version/src.main.java.com.kaidoe.sojero.ServiceContext.java", "BodyUseAPI": [], "Fixed commit": "7cf2a430644554a1b47b791757ee8c19d6a2252a", "Url": "https://api.github.com/repos/kaidoe/sojero", "Date": "2014-05-01T19:56:07Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTempPhotoPath) != null) com.tefah.neverforget.Utilities.deleteFile(this, mTempPhotoPath);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6491/buggy-version/app.src.main.java.com.tefah.neverforget.AddTaskActivity.java", "BodyUseAPI": [], "Fixed commit": "7c887083f0ee9b64e1306250caaeaf21648da797", "Url": "https://api.github.com/repos/tefah/Never-Forget", "Date": "2017-08-06T21:03:29Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getImageFilePath()) != null) com.tefah.neverforget.Utilities.deleteFile(this, task.getImageFilePath());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6491/buggy-version/app.src.main.java.com.tefah.neverforget.AddTaskActivity.java", "BodyUseAPI": ["com.tefah.neverforget.Task.getImageFilePath()", "com.tefah.neverforget.Utilities.deleteFile(com.tefah.neverforget.AddTaskActivity,task.getImageFilePath())"], "Fixed commit": "7c887083f0ee9b64e1306250caaeaf21648da797", "Url": "https://api.github.com/repos/tefah/Never-Forget", "Date": "2017-08-06T21:03:29Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 0) { tags.remove(tag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1664/buggy-version/src.main.java.seedu.manager.model.TaskManager.java", "BodyUseAPI": [], "Fixed commit": "fde5c57386ed3c5073dac59b9ffe2571b6a07cec", "Url": "https://api.github.com/repos/CS2103AUG2016-T16-C3/main", "Date": "2016-11-02T15:58:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result) { final boolean removed = coll.removeTarget(delegate, true); assert removed; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/159/buggy-version/src.main.java.org.jtrfp.trcl.coll.CollectionActionUnpacker.java", "BodyUseAPI": [], "Fixed commit": "ef5313bae847253b5a85e24200c1a76dfb8a7339", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-06-01T09:43:34Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(propertyDir.exists())) { if (!(propertyDir.mkdirs())) { throw new java.lang.Exception(\"Failed to create config file folder structure.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5166/buggy-version/Server.src.com.mt.easytv.config.Config.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "6d5de69f9bc82fbe03311edec551c79e24d9a32c", "Url": "https://api.github.com/repos/maxmememax/EasyTV", "Date": "2014-12-19T23:12:58Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["critter2.CritterCheck.getPrevious(cetus.hir.Traversable)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nonPragmaPrev.toString().startsWith(\"#pragma critTer:endStudentInclude\")) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/715/buggy-version/src.critter2.CritterCheck.java", "BodyUseAPI": [], "Fixed commit": "1782914272e0997ab335b158f9390735fab2dd39", "Url": "https://api.github.com/repos/alicek112/critter2", "Date": "2014-06-20T19:04:54Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["critter2.checks.CheckGlobalHasComment.nextNoStdInclude(cetus.hir.DepthFirstIterator<cetus.hir.Traversable>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((t instanceof cetus.hir.ClassDeclaration) && ((t.getChildren()) != null)) { if (!(t.toString().startsWith(\"typedef int * __\"))) { cetus.hir.Traversable p = getPreviousNonPragma(t); if (((!(p instanceof cetus.hir.AnnotationStatement)) && (!(p instanceof cetus.hir.AnnotationDeclaration))) && (!(p instanceof cetus.hir.PreAnnotation))) { if ((t.getParent().getParent()) != null) { if (!((t.getParent().getParent()) instanceof cetus.hir.VariableDeclaration)) { reportErrorPos(t, (\"high priority: \" + (\"%nA comment should appear above each \" + \"global variable.%n\"))); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/715/buggy-version/src.critter2.checks.CheckGlobalHasComment.java", "BodyUseAPI": ["cetus.hir.Traversable.getParent()", "cetus.hir.Traversable.getParent()", "t.getParent().getParent()", "t.toString().startsWith(java.lang.String)", "t.getParent().getParent()", "critter2.checks.CheckGlobalHasComment.getPreviousNonPragma(cetus.hir.Traversable)", "critter2.checks.CheckGlobalHasComment.reportErrorPos(cetus.hir.Traversable,java.lang.String)", "cetus.hir.Traversable.toString()"], "Fixed commit": "1782914272e0997ab335b158f9390735fab2dd39", "Url": "https://api.github.com/repos/alicek112/critter2", "Date": "2014-06-20T19:04:54Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(chunksRequested.contains(p))) { net.NetProtocol.clRequestMap(i, j); chunksRequested.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/384/buggy-version/src.map.MapManager.java", "BodyUseAPI": ["java.util.ArrayList<org.lwjgl.util.Point>.add(org.lwjgl.util.Point)"], "Fixed commit": "f66bd76721e172696609502f5f2da990dcf5e38d", "Url": "https://api.github.com/repos/master312/UnNamedMMO_Client", "Date": "2015-04-28T00:53:38Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((zone.getLobby()) != null) { zone.getLobby().getVolume().resetBlocks(); zone.getLobby().initialize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7769/buggy-version/war.src.main.java.bukkit.tommytony.war.War.java", "BodyUseAPI": ["com.tommytony.war.Warzone.getLobby()", "zone.getLobby().getVolume()", "zone.getLobby().getVolume().resetBlocks()", "zone.getLobby().initialize()", "com.tommytony.war.Warzone.getLobby()"], "Fixed commit": "d81a198febf242f96555838791a86f361c4c70a0", "Url": "https://api.github.com/repos/taoneill/war", "Date": "2011-03-21T04:06:31Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((zone.getLobby()) != null) { zone.getLobby().getVolume().resetBlocks(); zone.getLobby().initialize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7769/buggy-version/war.src.main.java.bukkit.tommytony.war.War.java", "BodyUseAPI": ["zone.getLobby().getVolume()", "com.tommytony.war.Warzone.getLobby()", "com.tommytony.war.Warzone.getLobby()", "zone.getLobby().initialize()", "zone.getLobby().getVolume().resetBlocks()"], "Fixed commit": "d81a198febf242f96555838791a86f361c4c70a0", "Url": "https://api.github.com/repos/taoneill/war", "Date": "2011-03-21T04:06:31Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((((countToWrite == 0) && (tweetsList.isEmpty())) && (0 == totalCount)) && (runningHeader == null)) && (writer == null)) { runningHeader = csv.resetClassifiedTweetHeader(ReadWriteCSV.ClassifiedTweetIDCSVHeader, ReadWriteCSV.FIXED_CLASSIFIED_TWEET_ID_HEADER_SIZE, 0); writer = csv.writeClassifiedTweetIDsCSV(runningHeader, writer, tweetsList, collectionCode, fileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6869/buggy-version/aidr-persister.src.main.java.qa.qcri.aidr.utils.JsonDeserializer.java", "BodyUseAPI": ["qa.qcri.aidr.io.ReadWriteCSV<org.supercsv.cellprocessor.ift.CellProcessor>.writeClassifiedTweetIDsCSV(java.lang.String[],org.supercsv.io.ICsvMapWriter,java.util.List<qa.qcri.aidr.utils.ClassifiedTweet>,java.lang.String,java.lang.String)"], "Fixed commit": "3edfe483422b3f9e6ad0600b5951a9562929291a", "Url": "https://api.github.com/repos/qcri-social/AIDR", "Date": "2015-08-04T11:43:44Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((syncSamples[i]) < ((curFrame) + 1)) { (ssOff)++; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2007/buggy-version/src.main.java.org.jcodec.containers.mp4.demuxer.FramesMP4DemuxerTrack.java", "BodyUseAPI": [], "Fixed commit": "ae14fe97d318b8911974c13bf6e49d75da9b6e06", "Url": "https://api.github.com/repos/piotr3k/jcodec", "Date": "2013-06-16T20:46:50Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((road) != null) { controlPoints.remove(((controlPoints.size()) - 1)); updateRoad(); completeRoad(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4874/buggy-version/src.org.pavement.interaction.BuildPavement.java", "BodyUseAPI": [], "Fixed commit": "27efe8763d95123baf77f16331d68cf1cc323ea3", "Url": "https://api.github.com/repos/LiviasSecret/Pavement", "Date": "2014-05-15T03:46:16Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (a.isActive()) driverC.addArtifact(org.xframium.artifact.ArtifactType.valueOf(a.getType().toUpperCase()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3620/buggy-version/driver.src.org.xframium.driver.XMLConfigurationReader.java", "BodyUseAPI": ["a.getType().toUpperCase()", "org.xframium.driver.DriverContainer.addArtifact(org.xframium.artifact.ArtifactType.valueOf(a.getType().toUpperCase()))", "org.xframium.driver.XArtifact.getType()", "org.xframium.artifact.ArtifactType.valueOf(a.getType().toUpperCase())"], "Fixed commit": "73f619e31f2e7732f0dc82e3489821c8a95b2318", "Url": "https://api.github.com/repos/xframiumAS/xframium-java", "Date": "2016-12-14T10:09:08Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ed > (st + 1)) { key = key.substring((st + 1), ed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4374/buggy-version/redisson.src.main.java.org.redisson.cluster.ClusterConnectionManager.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "76315dbaca2949b3b6aca1117481da9455d7907c", "Url": "https://api.github.com/repos/leonchen83/redisson", "Date": "2017-07-19T01:57:17Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVisible()) { mMovie = movie; populateFields(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4909/buggy-version/PopularMovies.app.src.main.java.com.duckma.popularmovies.MovieDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "e833bac0393f44142d7caba1eb6e98f6cca74d91", "Url": "https://api.github.com/repos/gazzumatteo/AndroidNanodegree", "Date": "2015-08-01T06:54:55Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mMovie.getRuntime().isEmpty())) tvMovieLength.setText(((mMovie.getRuntime()) + \"min\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4909/buggy-version/PopularMovies.app.src.main.java.com.duckma.popularmovies.MovieDetailFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(((mMovie.getRuntime()) + \"min\"))", "com.duckma.popularmovies.models.MovieModel.getRuntime()"], "Fixed commit": "e833bac0393f44142d7caba1eb6e98f6cca74d91", "Url": "https://api.github.com/repos/gazzumatteo/AndroidNanodegree", "Date": "2015-08-01T06:54:55Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (byBranch) { catField = \"branch_id\"; fromTable = (com.jinnova.smartpad.partner.IDetailManager.CLUSPRE) + specId; }else { if (bySyscat) { catField = \"syscat_id\"; fromTable = (com.jinnova.smartpad.partner.IDetailManager.CLUSPRE) + specId; }else { catField = \"catalog_id\"; fromTable = specId; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1002/buggy-version/src.main.java.com.jinnova.smartpad.db.CatalogItemDao.java", "BodyUseAPI": [], "Fixed commit": "186ac7a8e0fca97106b835b7b5bf0666744e9527", "Url": "https://api.github.com/repos/smartpad/common", "Date": "2014-06-02T09:33:25Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["o1.eventTime.compareTo(o2.eventTime)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timeDelta != 0) { return timeDelta; }else { return (o1.hashCode()) - (o2.hashCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1344/buggy-version/src.main.java.event.EventComparator.java", "BodyUseAPI": [], "Fixed commit": "ec4d89393a9969ab03ba7a9ba8d3b5bb34a2f50a", "Url": "https://api.github.com/repos/samanpanwar/cen6087panwarparmeter", "Date": "2017-09-28T03:50:48Z"},
{"Line": "=>2918", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((path != null) && (!(path.isEmpty()))) { path = args.getPathWithoutSpecialCharacters(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/869/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.isilon.IsilonFileStorageDevice.java", "BodyUseAPI": ["com.emc.storageos.volumecontroller.FileDeviceInputOutput.getPathWithoutSpecialCharacters(java.lang.String)"], "Fixed commit": "1aa854e3db786c9e4f802b0052082fd1248259bb", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-01-27T09:09:36Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fromNullable(request.getHeader(BraveHttpHeaders.ParentSpanId.getName())).transform(com.google.common.base.Function<java.lang.String, java.lang.Long>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(parentSpanId.isPresent())) parentSpanId = fromNullable(0L);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4217/buggy-version/brave-impl-spring.src.main.java.com.github.kristofa.brave.ServletHandlerInterceptor.java", "BodyUseAPI": [], "Fixed commit": "c4fb637b7593ecb7721fba7599f4bf9ccf2c2df4", "Url": "https://api.github.com/repos/PressAssociation/brave", "Date": "2014-11-18T11:47:13Z"},
{"Line": "=>772", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zis.bookinfo.util.BookMetadata.getCatalog()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.apache.commons.lang.StringUtils.isNotBlank(catalog)) && ((catalog.length()) > (com.zis.bookinfo.service.BookService.MAX_CONTENT_LENGTH))) { catalog = catalog.substring(0, com.zis.bookinfo.service.BookService.MAX_CONTENT_LENGTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/880/buggy-version/src.main.java.com.zis.bookinfo.service.BookService.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "9d91580dab680bc6c689d3390327278d861f8fff", "Url": "https://api.github.com/repos/xabaohui/zis", "Date": "2016-08-14T15:59:17Z"},
{"Line": "=>777", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zis.bookinfo.util.BookMetadata.getSummary()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.apache.commons.lang.StringUtils.isNotBlank(summary)) && ((summary.length()) > (com.zis.bookinfo.service.BookService.MAX_CONTENT_LENGTH))) { summary = summary.substring(0, com.zis.bookinfo.service.BookService.MAX_CONTENT_LENGTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/880/buggy-version/src.main.java.com.zis.bookinfo.service.BookService.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "9d91580dab680bc6c689d3390327278d861f8fff", "Url": "https://api.github.com/repos/xabaohui/zis", "Date": "2016-08-14T15:59:17Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((authzHeaderInfo.length) == 1) { throw new org.wso2.carbon.identity.oauth.user.UserInfoEndpointException(OAuthError.ResourceResponse.INVALID_REQUEST, \"Access token missing\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4383/buggy-version/components.org.wso2.carbon.identity.oauth.endpoint.src.main.java.org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInforRequestDefaultValidator.java", "BodyUseAPI": [], "Fixed commit": "76ca942d67072d60226137fb336b8a7a2e71ad70", "Url": "https://api.github.com/repos/wso2-extensions/identity-inbound-auth-oauth", "Date": "2017-07-28T08:38:51Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (topic == null) return new java.util.HashSet<org.araqne.logdb.cep.EventKey>(contexts.keySet()).iterator();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7291/buggy-version/araqne-logdb-cep.src.main.java.org.araqne.logdb.cep.engine.MemoryEventContextStorage.java", "BodyUseAPI": [], "Fixed commit": "71c073f19d7cf16316200729791d47b76a451aa0", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-11-17T10:00:33Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stringStarBySign) return iValue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2707/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerStringAbstract.java", "BodyUseAPI": [], "Fixed commit": "b249b6948821db8a7581e62cda4e0f9c9780a642", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-01-14T12:38:16Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stringStarBySign) { stringStarBySign = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2707/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerStringAbstract.java", "BodyUseAPI": [], "Fixed commit": "b249b6948821db8a7581e62cda4e0f9c9780a642", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-01-14T12:38:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.devsmart.plotter.FunctionRenderer2.isRealNumber(points[0])) && (com.devsmart.plotter.FunctionRenderer2.isRealNumber(points[1]))) { if (x == (viewPort.left)) { p.moveTo(points[0], points[1]); }else { p.lineTo(points[0], points[1]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3258/buggy-version/src.com.devsmart.plotter.FunctionRenderer2.java", "BodyUseAPI": ["android.graphics.Path.lineTo(float,float)", "android.graphics.Path.moveTo(float,float)"], "Fixed commit": "a183b732ecfd03228fe8b94569b58189f5d45b1a", "Url": "https://api.github.com/repos/SciAps/android-plotter", "Date": "2014-05-08T19:11:00Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (x != null) { opened.offer(x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2425/buggy-version/1-skyline.Skyline.java", "BodyUseAPI": ["java.util.PriorityQueue<Skyline.Building>.offer(Skyline.Building)"], "Fixed commit": "6d4446c209a3e6fa668340e90bd1d67accd5d039", "Url": "https://api.github.com/repos/kmaleyev/algprep", "Date": "2014-12-25T09:10:40Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umn.cs.recsys.svd.SVDModel.getUserVector(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userVector == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4584/buggy-version/src.main.java.edu.umn.cs.recsys.svd.SVDItemScorer.java", "BodyUseAPI": [], "Fixed commit": "a017a756806861af4728cfdd3d9b6d7becad239a", "Url": "https://api.github.com/repos/flacours/svd-assignment", "Date": "2013-11-27T02:36:49Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umn.cs.recsys.svd.SVDModel.getFeatureWeights()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (w == null) edu.umn.cs.recsys.svd.SVDItemScorer.logger.info(\"w vector is null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4584/buggy-version/src.main.java.edu.umn.cs.recsys.svd.SVDItemScorer.java", "BodyUseAPI": [], "Fixed commit": "a017a756806861af4728cfdd3d9b6d7becad239a", "Url": "https://api.github.com/repos/flacours/svd-assignment", "Date": "2013-11-27T02:36:49Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (importFilename.contains(\"/\")) { if ((currentFolder != null) && ((currentFolder.length()) > 0)) { currentFolder = (currentFolder + \"/\") + (importFilename.substring(0, importFilename.lastIndexOf(\"/\"))); }else { currentFolder = importFilename.substring(0, importFilename.lastIndexOf(\"/\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2956/buggy-version/src.main.java.de.codecentric.vaadin.maven.ThemeCombiner.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "8b6f106b028bbc00059bf755109823d51f2b55a3", "Url": "https://api.github.com/repos/codecentric/vaadin-style-combine-maven-plugin", "Date": "2012-12-11T14:11:11Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.observe.util.tree.RedBlackTreeList<N, E>.getNodeAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((theRoot) == node) theRoot = replacement;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7460/buggy-version/src.main.java.org.observe.util.tree.RedBlackTreeList.java", "BodyUseAPI": [], "Fixed commit": "2e4ef83d87b439bcfb67e8ae95394276ee623c34", "Url": "https://api.github.com/repos/Updownquark/ObServe", "Date": "2015-09-11T17:08:11Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((galleryDatas.size()) > 0) { size++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7365/buggy-version/app.src.main.java.xyz.yluo.ruisiapp.fragment.FrageHotNew.java", "BodyUseAPI": [], "Fixed commit": "39f07bd5289affe41e2e541e2f01b74acedba03c", "Url": "https://api.github.com/repos/freedom10086/Ruisi", "Date": "2016-09-05T10:32:06Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xyz.yluo.ruisiapp.adapter.HotNewListAdapter.NormalViewHolderMe.getAdapterPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pos > 0) && ((galleryDatas.size()) > 0)) { pos--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7365/buggy-version/app.src.main.java.xyz.yluo.ruisiapp.adapter.HotNewListAdapter.java", "BodyUseAPI": [], "Fixed commit": "39f07bd5289affe41e2e541e2f01b74acedba03c", "Url": "https://api.github.com/repos/freedom10086/Ruisi", "Date": "2016-09-05T10:32:06Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((galleryDatas.size()) > 0) && (position > 0)) { position--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7365/buggy-version/app.src.main.java.xyz.yluo.ruisiapp.adapter.HotNewListAdapter.java", "BodyUseAPI": [], "Fixed commit": "39f07bd5289affe41e2e541e2f01b74acedba03c", "Url": "https://api.github.com/repos/freedom10086/Ruisi", "Date": "2016-09-05T10:32:06Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<edu.wpi.cs.wpisuitetng.modules.planningpoker.models.PlanningPokerSession, javax.swing.JComponent>.get(edu.wpi.cs.wpisuitetng.modules.planningpoker.models.PlanningPokerSession)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (removeTab(sessionTab)) { openNewSessionTab(session, tabType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1941/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.ViewEventController.java", "BodyUseAPI": [], "Fixed commit": "b80152cb93f1253a35074f826bda1f8ec314f0c1", "Url": "https://api.github.com/repos/TheTeam8s/wpi-suite", "Date": "2014-04-30T16:08:24Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<omnikryptec.swing.ChartData, java.util.LinkedList<java.lang.Double>>.get(omnikryptec.swing.ChartData)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (values == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1110/buggy-version/src.omnikryptec.util.profiler.LiveProfiler.java", "BodyUseAPI": [], "Fixed commit": "b9aa4c173ecdb88641c5d554597c3b6eec5da8c8", "Url": "https://api.github.com/repos/OmniKryptec/OmniKryptec-Engine", "Date": "2017-07-14T22:57:21Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numOfPairsOfPublicMethods == 0) { TCC = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1636/buggy-version/Grammar.src.MetricsCounter.java", "BodyUseAPI": [], "Fixed commit": "c4fbf7729801705a2db1f6e00a97c63dd7a8433c", "Url": "https://api.github.com/repos/PavelSozonov/JavaCC", "Date": "2017-04-24T18:02:26Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == 0) { m_firstIsLabeling = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5842/buggy-version/org.knime.knip.base.src.org.knime.knip.base.nodes.util.slicelooper.SliceIteratorLoopStartNodeModel.java", "BodyUseAPI": [], "Fixed commit": "7a8182f3c35fb8e0c3fe04b6bc79cccb25a4ad31", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2014-09-05T09:09:21Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == 0) { m_firstIsLabeling = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5842/buggy-version/org.knime.knip.base.src.org.knime.knip.base.nodes.util.slicelooper.SliceIteratorLoopStartNodeModel.java", "BodyUseAPI": [], "Fixed commit": "7a8182f3c35fb8e0c3fe04b6bc79cccb25a4ad31", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2014-09-05T09:09:21Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((end) != null ? !(end.equals(that.end)) : (that.end) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7740/buggy-version/mindmaps-graql.src.main.java.io.mindmaps.graql.internal.gremlin.fragment.AbstractFragment.java", "BodyUseAPI": [], "Fixed commit": "18ddcdc0c34f56d67a1b62d579d7d31ea5150746", "Url": "https://api.github.com/repos/aelred/grakn", "Date": "2016-11-08T11:39:32Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 0) { i = -i; if (((basic_ds.BitMap.MAP2[(i >> (basic_ds.BitMap.SHIFT))]) & (1 << (i & (basic_ds.BitMap.MASK)))) != 0) return true; else return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3236/buggy-version/src.basic_ds.BitMap.java", "BodyUseAPI": [], "Fixed commit": "7d21a1b26d528feccf56ed6eeb206913209d5318", "Url": "https://api.github.com/repos/Emilio66/Interview", "Date": "2015-04-08T14:32:36Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= 0) { int pos = i >> (basic_ds.BitMap.SHIFT); basic_ds.BitMap.MAP[pos] = (basic_ds.BitMap.MAP[pos]) | (1 << (i & (basic_ds.BitMap.MASK))); }else { i = -i; int pos = i >> (basic_ds.BitMap.SHIFT); basic_ds.BitMap.MAP2[pos] = (basic_ds.BitMap.MAP2[pos]) | (1 << (i & (basic_ds.BitMap.MASK))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3236/buggy-version/src.basic_ds.BitMap.java", "BodyUseAPI": [], "Fixed commit": "7d21a1b26d528feccf56ed6eeb206913209d5318", "Url": "https://api.github.com/repos/Emilio66/Interview", "Date": "2015-04-08T14:32:36Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selected.isEmpty()) return \"Terminal set cannot be empty.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8467/buggy-version/src.no.uib.ii.algo.st8.GraphViewController.java", "BodyUseAPI": [], "Fixed commit": "d9bdc4728688934605821859b4400c94ce6e447c", "Url": "https://api.github.com/repos/drange/Grapher", "Date": "2014-01-22T15:16:06Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toss.height().isInfinite()) { height = new siteswapsuite.ExtendedInteger(toss.height().infiniteValue()); }else { height = new siteswapsuite.ExtendedInteger(toss.height().finiteValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4408/buggy-version/src.notation.NotatedSiteswap.java", "BodyUseAPI": ["toss.height().infiniteValue()", "siteswapsuite.Toss.height()", "siteswapsuite.Toss.height()", "toss.height().finiteValue()"], "Fixed commit": "010d1f02ecb2a425398cdec793c3dd0b614ab968", "Url": "https://api.github.com/repos/fictionic/SiteswapSuite", "Date": "2017-12-15T20:05:57Z"},
{"Line": "=>2011", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lu.fisch.utils.StringList.explode(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parts.count()) > 1) { _content = \"\"; for (i = 0; i < (parts.count()); i++) { java.lang.String sep = \" \"; if ((_content.endsWith(\"\\\"\")) && (parts.get(i).trim().startsWith(\"\\\"\"))) { sep = \" + \"; } _content += sep + (parts.get(i).trim()); } _content = _content.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2294/buggy-version/src.lu.fisch.structorizer.parsers.CParser.java", "BodyUseAPI": ["parts.get(i).trim()", "parts.get(i).trim()", "lu.fisch.utils.StringList.get(int)", "parts.get(i).trim().startsWith(java.lang.String)", "lu.fisch.utils.StringList.get(int)", "lu.fisch.utils.StringList.count()"], "Fixed commit": "f7dc6f4be01feaac7b7304fa762be1984e60ee8e", "Url": "https://api.github.com/repos/codemanyak/Structorizer.Desktop", "Date": "2017-05-27T02:25:33Z"},
{"Line": "=>1109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lu.fisch.structorizer.elements.Element.splitExpressionList(java.lang.String,java.lang.String)", "lu.fisch.structorizer.elements.Element.splitExpressionList(java.lang.String,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((argsPlusTail.count()) > (args.count())) { java.lang.String tail = argsPlusTail.get(args.count()).trim(); if (tail.startsWith(\")\")) { tail = (tail.substring(1)) + \")\"; } parts.add(tail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2294/buggy-version/src.lu.fisch.structorizer.parsers.CParser.java", "BodyUseAPI": ["lu.fisch.utils.StringList.count()", "argsPlusTail.get(args.count()).trim()", "lu.fisch.utils.StringList.get(args.count())"], "Fixed commit": "f7dc6f4be01feaac7b7304fa762be1984e60ee8e", "Url": "https://api.github.com/repos/codemanyak/Structorizer.Desktop", "Date": "2017-05-27T02:25:33Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((((c != null) && (c.delegateCaptionHandling())) && (!((root) instanceof com.vaadin.client.ui.VTabsheet))) && (!((root) instanceof com.vaadin.client.ui.VAccordion))) { if (target instanceof com.vaadin.client.VCaption) { clone.insertFirst(targetElement.cloneNode(true)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8974/buggy-version/addon.src.main.java.fi.jasoft.dragdroplayouts.client.ui.VLayoutDragDropMouseHandler.java", "BodyUseAPI": [], "Fixed commit": "84c4f28b030eadff592c50c54774555c678d47f5", "Url": "https://api.github.com/repos/johndevs/dragdroplayouts", "Date": "2013-09-06T11:28:41Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFinishing()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7219/buggy-version/app.src.main.java.ca.appvelopers.mcgillmobile.ui.SplashActivity.java", "BodyUseAPI": [], "Fixed commit": "6bf3a7a85063a15de175da5db2bda4fd415c3821", "Url": "https://api.github.com/repos/jguerinet/MyMartlet", "Date": "2016-09-05T16:46:48Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (implicitPort != null) { net.sf.saxon.s9api.XdmNode doc = runtime.parse(new org.xml.sax.InputSource(java.lang.System.in)); pipeline.writeTo(implicitPort, doc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3003/buggy-version/src.com.xmlcalabash.drivers.Main.java", "BodyUseAPI": ["com.xmlcalabash.runtime.XPipeline.writeTo(java.lang.String,net.sf.saxon.s9api.XdmNode)"], "Fixed commit": "e31d7d5e64bf406ca1a86e5d88c9f07c62cf4ac6", "Url": "https://api.github.com/repos/ndw/xmlcalabash1", "Date": "2013-01-29T15:01:26Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((accIss != null) && ((accIss.length) > 0)) for (java.security.cert.X509Certificate c : accIss) certs.add(c);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/973/buggy-version/src.sslcheck.core.NotaryManager.java", "BodyUseAPI": [], "Fixed commit": "d3f20983d2c7171e084a877dba78acc3f6d60ab2", "Url": "https://api.github.com/repos/letzkus/sslcheck", "Date": "2014-04-04T14:47:23Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((account.length()) > 6) account.insert(6, \"-\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2073/buggy-version/src.com.elfec.cobranza.helpers.text_format.AccountFormatter.java", "BodyUseAPI": ["java.lang.StringBuilder.insert(int,java.lang.String)"], "Fixed commit": "085ec209a5b7648843c8678b325906015474ac0e", "Url": "https://api.github.com/repos/diegoRodriguezAguila/Cobranza.Elfec.Mobile", "Date": "2015-03-12T19:56:15Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((account.length()) > 10) account.insert(10, \"-\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2073/buggy-version/src.com.elfec.cobranza.helpers.text_format.AccountFormatter.java", "BodyUseAPI": ["java.lang.StringBuilder.insert(int,java.lang.String)"], "Fixed commit": "085ec209a5b7648843c8678b325906015474ac0e", "Url": "https://api.github.com/repos/diegoRodriguezAguila/Cobranza.Elfec.Mobile", "Date": "2015-03-12T19:56:15Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((account.length()) > 2) account.insert(2, \"-\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2073/buggy-version/src.com.elfec.cobranza.helpers.text_format.AccountFormatter.java", "BodyUseAPI": ["java.lang.StringBuilder.insert(int,java.lang.String)"], "Fixed commit": "085ec209a5b7648843c8678b325906015474ac0e", "Url": "https://api.github.com/repos/diegoRodriguezAguila/Cobranza.Elfec.Mobile", "Date": "2015-03-12T19:56:15Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.constellio.model.services.search.query.logical.LogicalSearchQuery.getSchemaCondition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (schema.hasMetadataWithCode(new com.constellio.model.services.schemas.SchemaUtils().getLocalCodeFromMetadataCode(metadataVO.getCode()))) { metadata = schema.getMetadata(new com.constellio.model.services.schemas.SchemaUtils().getLocalCodeFromMetadataCode(metadataVO.getCode())); if (ascending[i]) { query = query.sortAsc(metadata); }else { query = query.sortDesc(metadata); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2699/buggy-version/app.src.com.constellio.app.ui.framework.data.RecordVODataProvider.java", "BodyUseAPI": ["com.constellio.model.entities.schemas.MetadataSchema.getMetadata(new com.constellio.model.services.schemas.SchemaUtils().getLocalCodeFromMetadataCode(metadataVO.getCode()))", "com.constellio.app.ui.entities.MetadataVO.getCode()", "com.constellio.model.services.schemas.SchemaUtils.getLocalCodeFromMetadataCode(metadataVO.getCode())"], "Fixed commit": "ab70543c7c455c2e9b0658daa9d9507942f8474e", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-06-14T19:21:43Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.QuarkLabs.BTCeClient.MainActivity.getFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fm.getBackStackEntryCount()) != 0) { java.lang.String stackName = fm.getBackStackEntryAt(((fm.getBackStackEntryCount()) - 1)).getName(); switchToPosition = java.lang.Integer.parseInt(stackName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2540/buggy-version/BTCeClient.src.main.java.com.QuarkLabs.BTCeClient.MainActivity.java", "BodyUseAPI": ["com.QuarkLabs.BTCeClient.FragmentManager.getBackStackEntryCount()", "fm.getBackStackEntryAt(((fm.getBackStackEntryCount()) - 1)).getName()", "com.QuarkLabs.BTCeClient.FragmentManager.getBackStackEntryAt(((fm.getBackStackEntryCount()) - 1))"], "Fixed commit": "eb3b33b7845a5e5a26343b95eb21bdb8f5398a64", "Url": "https://api.github.com/repos/0xnm/BTC-e-client-for-Android", "Date": "2014-06-25T20:29:08Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.QuarkLabs.BTCeClient.MainActivity.getActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (actionBar != null) { actionBar.setTitle(mDrawerListItems[switchToPosition]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2540/buggy-version/BTCeClient.src.main.java.com.QuarkLabs.BTCeClient.MainActivity.java", "BodyUseAPI": ["com.QuarkLabs.BTCeClient.ActionBar.setTitle(java.lang.String)"], "Fixed commit": "eb3b33b7845a5e5a26343b95eb21bdb8f5398a64", "Url": "https://api.github.com/repos/0xnm/BTC-e-client-for-Android", "Date": "2014-06-25T20:29:08Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outputDirectory.startsWith(\"/\")) { outputDirAsFile = new java.io.File(outputDirectory); }else { outputDirAsFile = new java.io.File(project.getBasedir(), outputDirectory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/940/buggy-version/src.main.java.io.atomicbits.scraml.mvnplugin.ScramlMojo.java", "BodyUseAPI": [], "Fixed commit": "c9bd8a0dacbc9bd84a6aa849199eee3f6ec27eb3", "Url": "https://api.github.com/repos/atomicbits/scraml-maven-plugin", "Date": "2015-10-21T10:54:52Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(model.isEmpty())) { resetText(model.toString()); }else { resetText(model.getPlaceholderString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3351/buggy-version/src.main.java.org.datavyu.views.discrete.datavalues.DataValueEditor.java", "BodyUseAPI": [], "Fixed commit": "99983a389d540e4b38c02a425b5e4a3dc38583b1", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2014-05-20T18:11:47Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reference.getNode().getDottedExpression().getExpression()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((getParamMethodCall.getReferenceExpression().getDottedExpression().getExpression()) instanceof apex.jorje.semantic.ast.expression.MethodCallExpression) { apex.jorje.semantic.ast.expression.MethodCallExpression currentPageMethodCall = ((apex.jorje.semantic.ast.expression.MethodCallExpression) (getParamMethodCall.getReferenceExpression().getDottedExpression().getExpression())); if (net.sourceforge.pmd.lang.apex.rule.security.Helper.isMethodName(currentPageMethodCall, \"currentPage\")) { java.lang.String a = currentPageMethodCall.getReferenceExpression().getJadtIdentifiers().get(0).value; if (a.equalsIgnoreCase(\"ApexPages\")) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8440/buggy-version/pmd-apex.src.main.java.net.sourceforge.pmd.lang.apex.rule.security.ApexXSSFromURLParamRule.java", "BodyUseAPI": ["getParamMethodCall.getReferenceExpression().getDottedExpression()", "apex.jorje.semantic.ast.expression.MethodCallExpression.getReferenceExpression()", "getParamMethodCall.getReferenceExpression().getDottedExpression().getExpression()"], "Fixed commit": "d6d16b30cc458300f02657746b3823de177a5d4d", "Url": "https://api.github.com/repos/sgorbaty/pmd", "Date": "2016-11-04T16:55:28Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mType.equals(\"notice\")) { statusChange(mTasks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8534/buggy-version/src.com.shiningstone.push.NoticeBoard.java", "BodyUseAPI": [], "Fixed commit": "9e49520b0f33faebfcbcc18f99238e138cc5c26d", "Url": "https://api.github.com/repos/shiningstone/push", "Date": "2014-10-05T12:09:51Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useConfidence == false) { confident = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3664/buggy-version/src.trading.engines.IBEngine1.java", "BodyUseAPI": [], "Fixed commit": "7f02f241d6d6d4fa00b54b0d8eb1b1a8bee5aa3d", "Url": "https://api.github.com/repos/MatthewPDingle/CSCSPMonitor", "Date": "2015-12-21T19:41:33Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mtRing.isActuallyBlocked()) { if ((mtRing.getInstantNumberOfBlockedNodes()) >= (mtRing.calculateNumberOfNodes())) { java.lang.System.out.println(((((\"Ring '\" + ring) + \"'; thread '\") + (java.lang.Thread.currentThread().getId())) + \"' blocked\")); ring.wait(); }else { java.lang.System.out.println(((((\"Ring '\" + ring) + \"'; thread '\") + (java.lang.Thread.currentThread().getId())) + \"' reject blocking request\")); if ((mtRing.getBlockingGate()) != null) { mtRing.getBlockingGate().unblockActivity(); } } }else { java.lang.System.out.println(((((\"Ring '\" + ring) + \"'; thread '\") + (java.lang.Thread.currentThread().getId())) + \"' reject blocking request\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4597/buggy-version/sinks.java.src.com.vw.lang.sink.java.interpreter.datastructure.ring.mt.VWMLConflictRingMT.java", "BodyUseAPI": ["com.vw.lang.sink.java.interpreter.datastructure.ring.mt.VWMLConflictRingMT.getInstantNumberOfBlockedNodes()", "com.vw.lang.sink.java.gate.VWMLGate.unblockActivity()", "com.vw.lang.sink.java.interpreter.datastructure.ring.mt.VWMLConflictRingMT.getBlockingGate()", "com.vw.lang.sink.java.interpreter.datastructure.ring.mt.VWMLConflictRingMT.getBlockingGate()", "com.vw.lang.sink.java.interpreter.datastructure.ring.mt.VWMLConflictRingMT.calculateNumberOfNodes()"], "Fixed commit": "a29394cc93a9d86ad3eae7482daae977d3caa5ef", "Url": "https://api.github.com/repos/babayka74/vwml", "Date": "2015-01-21T17:12:59Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(player.battleship.getBattleshipCoordinates().get(i).charAt(2))", "java.lang.String.valueOf(player.battleship.getBattleshipCoordinates().get(i).charAt(0))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(java.lang.String.valueOf(x).equals(leftMost))) && (java.lang.String.valueOf(y).equals(rightMost))) { android.util.Log.w(\"Phew\", \"That was close\"); missedSound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4555/buggy-version/app.src.main.java.edu.utep.cs.cs4330.battleship.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3ed997621631b427295f222f79546d72ee5cd244", "Url": "https://api.github.com/repos/oiricaud/Battleship", "Date": "2017-02-13T00:50:59Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.childNodesCopy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((nodeCopies.size()) == 2) { org.jsoup.nodes.Node wrapper = nodeCopies.remove(1); nodeCopies.addAll(wrapper.childNodesCopy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1674/buggy-version/FictionDL.src.main.java.bkromhout.FictionDL.Story.MuggleNetStory.java", "BodyUseAPI": ["java.util.ArrayList<org.jsoup.nodes.Node>.remove(int)", "java.util.ArrayList<org.jsoup.nodes.Node>.addAll(wrapper.childNodesCopy())"], "Fixed commit": "5fe6eb8de95aaf956a85a5391144ff507a8930c4", "Url": "https://api.github.com/repos/bkromhout/FictionDL", "Date": "2015-12-11T16:18:40Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_verleihService.getVerleihkarteFuer(medium)) != null) { return kunde.equals(_verleihService.getVerleihkarteFuer(medium).getEntleiher()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9231/buggy-version/src.de.uni_hamburg.informatik.swt.se2.mediathek.services.vormerk.VormerkServiceImpl.java", "BodyUseAPI": ["de.uni_hamburg.informatik.swt.se2.mediathek.materialien.Kunde.equals(_verleihService.getVerleihkarteFuer(medium).getEntleiher())", "_verleihService.getVerleihkarteFuer(medium).getEntleiher()", "de.uni_hamburg.informatik.swt.se2.mediathek.services.verleih.VerleihService.getVerleihkarteFuer(de.uni_hamburg.informatik.swt.se2.mediathek.materialien.medien.Medium)"], "Fixed commit": "78baa4820b5dd2b078bdcf9a9af5c9f35b6d76d6", "Url": "https://api.github.com/repos/Triggel/SE2-Supergruppe", "Date": "2015-05-19T21:08:58Z"},
{"Line": "=>929", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(responseOnCards.isEmpty())) { trySavingResponseOnCards(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3766/buggy-version/app.src.main.java.com.app.flirtjar.ActivityNavDrawer.java", "BodyUseAPI": [], "Fixed commit": "6521a74fff60e32fe036bc12f5d64085743e7148", "Url": "https://api.github.com/repos/rutvik106/flirtjar", "Date": "2017-04-05T17:40:04Z"},
{"Line": "=>920", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(responseOnCards.isEmpty())) { trySavingResponseOnCards(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3766/buggy-version/app.src.main.java.com.app.flirtjar.ActivityNavDrawer.java", "BodyUseAPI": [], "Fixed commit": "6521a74fff60e32fe036bc12f5d64085743e7148", "Url": "https://api.github.com/repos/rutvik106/flirtjar", "Date": "2017-04-05T17:40:04Z"},
{"Line": "=>911", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(responseOnCards.isEmpty())) { trySavingResponseOnCards(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3766/buggy-version/app.src.main.java.com.app.flirtjar.ActivityNavDrawer.java", "BodyUseAPI": [], "Fixed commit": "6521a74fff60e32fe036bc12f5d64085743e7148", "Url": "https://api.github.com/repos/rutvik106/flirtjar", "Date": "2017-04-05T17:40:04Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mProvider.equalsIgnoreCase(GoogleAuthProvider.PROVIDER_ID)) { mIDPProvider = new com.firebase.ui.auth.provider.GoogleProvider(this, providerParcel, mEmail); }else if (mProvider.equalsIgnoreCase(TwitterAuthProvider.PROVIDER_ID)) { mIDPProvider = new com.firebase.ui.auth.provider.TwitterProvider(this, providerParcel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8108/buggy-version/auth.src.main.java.com.firebase.ui.auth.ui.idp.IDPSignInContainerActivity.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(TwitterAuthProvider.PROVIDER_ID)"], "Fixed commit": "ceb4d13fcbffc1aa40c85f90cd84a56feeeb0155", "Url": "https://api.github.com/repos/amandle/FirebaseUI-Android", "Date": "2016-10-17T13:55:36Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.getDataRequestPair()) != null) { throw new com.mantraideas.simplehttp.datamanager.error.DataManagerException(\"Delete method doesnot support writting in the body\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5637/buggy-version/simplehttp.src.main.java.com.mantraideas.simplehttp.datamanager.ServerRequestHandler.java", "BodyUseAPI": [], "Fixed commit": "a3bb7452f8ccf9fc7b260ba4f744e8caf6fabb19", "Url": "https://api.github.com/repos/yuviii/SimpleHttpAndroid", "Date": "2017-07-11T07:54:54Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (im.vector.fragments.VectorUnknownDevicesFragment.mUnknownDevicesMap)) { java.util.List<java.lang.String> userIds = im.vector.fragments.VectorUnknownDevicesFragment.mUnknownDevicesMap.getUserIds(); for (java.lang.String userId : userIds) { java.util.List<org.matrix.androidsdk.crypto.data.MXDeviceInfo> deviceInfos = new java.util.ArrayList<>(); java.util.List<java.lang.String> deviceIds = im.vector.fragments.VectorUnknownDevicesFragment.mUnknownDevicesMap.getUserDeviceIds(userId); for (java.lang.String deviceId : deviceIds) { deviceInfos.add(im.vector.fragments.VectorUnknownDevicesFragment.mUnknownDevicesMap.getObject(deviceId, userId)); } res.add(new android.util.Pair(userId, deviceInfos)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4472/buggy-version/vector.src.main.java.im.vector.fragments.VectorUnknownDevicesFragment.java", "BodyUseAPI": [], "Fixed commit": "487b5eda73231aa7042919399253c7c09437f0c7", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-06-13T06:17:27Z"},
{"Line": "=>1812", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == (tblProcGuide.getSelectedRow())) { newNode.setValue(((java.lang.String) (tblProcGuide.getCellEditor(i, 0).getCellEditorValue()))); newNode.setPronunciation(((java.lang.String) (tblProcGuide.getCellEditor(i, 1).getCellEditorValue()))); }else { newNode.setValue(((java.lang.String) (tblProcGuide.getModel().getValueAt(i, 0)))); newNode.setPronunciation(((java.lang.String) (tblProcGuide.getModel().getValueAt(i, 1)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3968/buggy-version/src.PolyGlot.ScrDictInterface.java", "BodyUseAPI": ["PolyGlot.PronunciationNode.setPronunciation(java.lang.Object)", "PolyGlot.PronunciationNode.setPronunciation(java.lang.Object)", "javax.swing.table.TableModel.getValueAt(int,int)", "PolyGlot.PronunciationNode.setValue(java.lang.Object)", "javax.swing.table.TableCellEditor.getCellEditorValue()", "PolyGlot.PronunciationNode.setValue(java.lang.Object)", "javax.swing.table.TableCellEditor.getCellEditorValue()", "javax.swing.JTable.getCellEditor(int,int)", "javax.swing.JTable.getCellEditor(int,int)", "javax.swing.JTable.getModel()", "javax.swing.JTable.getModel()", "javax.swing.table.TableModel.getValueAt(int,int)"], "Fixed commit": "de91e3cfbcd29e5d93aa5bb487f28cfe1a3d2c45", "Url": "https://api.github.com/repos/DraqueT/PolyGlot", "Date": "2014-09-10T15:53:00Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((movie.getReviews().reviews) != null) && ((movie.getReviews().reviews.size()) > 1)) { com.mateus.popularmovies.main.model.MovieReviews temp = movie.getReviews().reviews.get(0); authorReview.setText(temp.getAuthor()); contentReview.setText(temp.getContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2207/buggy-version/app.src.main.java.com.mateus.popularmovies.main.ui.MovieDetailActivity.java", "BodyUseAPI": ["com.mateus.popularmovies.main.model.Movie.getReviews()", "movie.getReviews().reviews.get(int)"], "Fixed commit": "56530a2fdb418cf500b2724998fb201ece06491e", "Url": "https://api.github.com/repos/MateusCarvalho/udacity-popular-movies", "Date": "2016-11-30T03:15:32Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ts.loadSet(this, \"listOfTemplateNames\")) == null) { java.util.Set<java.lang.String> createNames = new java.util.HashSet<>(); ts.saveSet(context, \"listOfTemplateNames\", new java.util.HashSet(createNames)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3961/buggy-version/app.src.main.java.com.example.chad.smstrialapp.EditTemplate.java", "BodyUseAPI": ["com.example.chad.smstrialapp.TemplateSave.saveSet(android.content.Context,java.lang.String,java.util.HashSet)"], "Fixed commit": "693b9ac0e5560f6885b066afd90a4b9144a8c01b", "Url": "https://api.github.com/repos/ChadMcintire/App", "Date": "2017-12-09T04:10:12Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.winner) == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6974/buggy-version/Blastermind.app.src.main.java.com.bignerdranch.blastermind.android.blastermind.backend.response.RoundEndResponse.java", "BodyUseAPI": [], "Fixed commit": "a9b6a9d94618e7504d2af0223ed24adb242cb09b", "Url": "https://api.github.com/repos/artists-formally-known-as-flippinclash/android-client", "Date": "2015-03-07T18:23:49Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.winner) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6974/buggy-version/Blastermind.app.src.main.java.com.bignerdranch.blastermind.android.blastermind.backend.response.RoundEndResponse.java", "BodyUseAPI": [], "Fixed commit": "a9b6a9d94618e7504d2af0223ed24adb242cb09b", "Url": "https://api.github.com/repos/artists-formally-known-as-flippinclash/android-client", "Date": "2015-03-07T18:23:49Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ocpsoft.prettytime.nlp.PrettyTimeParser.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dates.size()) == 0) { return main.java.logic.CommandParser.EMPTY_STRING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4193/buggy-version/src.main.java.logic.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "579dfbd99c2c6b1ede90c91fe556793ecd3c6ff5", "Url": "https://api.github.com/repos/cs2103jan2016-w14-3j/main", "Date": "2016-03-15T00:12:59Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (user == null) { response.sendRedirect(((request.getContextPath()) + \"/login\")); }else if (!(user.getAccess(\"register\"))) { request.setAttribute(\"status\", \"warning\"); request.setAttribute(\"message\", \"You don't have access to this page.\"); request.getRequestDispatcher(\"error-access.jsp\").forward(request, response); }else { java.lang.String status = null; java.lang.String message = null; if (session != null) { status = ((java.lang.String) (session.getAttribute(\"status\"))); message = ((java.lang.String) (session.getAttribute(\"message\"))); session.setAttribute(\"status\", null); session.setAttribute(\"message\", null); } request.setAttribute(\"status\", status); request.setAttribute(\"message\", message); request.getRequestDispatcher(\"register.jsp\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3790/buggy-version/src.main.RegisterServlet.java", "BodyUseAPI": ["beans.UserBean.getAccess(java.lang.String)"], "Fixed commit": "fcc90895831272c3fbf568a7d332c1cf7ed8b233", "Url": "https://api.github.com/repos/mustafa1453/StudentsTestProject", "Date": "2015-05-19T20:02:52Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (user == null) { response.sendRedirect(((request.getContextPath()) + \"/login\")); }else if (!(user.getAccess(\"register\"))) { request.setAttribute(\"status\", \"warning\"); request.setAttribute(\"message\", \"You don't have access to this page.\"); request.getRequestDispatcher(\"error-access.jsp\").forward(request, response); }else { java.util.ArrayList<beans.UserBean> users = dao.UserDAO.findAll(); request.setAttribute(\"usersList\", users); request.getRequestDispatcher(\"users.jsp\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3790/buggy-version/src.main.UsersServlet.java", "BodyUseAPI": ["beans.UserBean.getAccess(java.lang.String)"], "Fixed commit": "fcc90895831272c3fbf568a7d332c1cf7ed8b233", "Url": "https://api.github.com/repos/mustafa1453/StudentsTestProject", "Date": "2015-05-19T20:02:52Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pi4j.io.gpio.Pin.getAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (address > (cache.length)) { cache = java.util.Arrays.copyOf(cache, (address + 100)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1368/buggy-version/pi4j-core.src.main.java.com.pi4j.io.gpio.GpioProviderBase.java", "BodyUseAPI": ["java.util.Arrays.copyOf(com.pi4j.io.gpio.GpioProviderPinCache[],int)"], "Fixed commit": "354dea65043714966798798b9c768f65de7ccfab", "Url": "https://api.github.com/repos/Pi4J/pi4j", "Date": "2016-03-15T02:29:42Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ru.hh.resumebuilderbot.question.storage.QuestionsStorage.finished(chatId)) { questionGeneratorsQueue.add(new ru.hh.resumebuilderbot.question.generator.FixedQuestionGenerator(ru.hh.resumebuilderbot.texts.storage.TextId.FINISHED)); return questionGeneratorsQueue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5051/buggy-version/src.main.java.ru.hh.resumebuilderbot.message.handler.AnswerMessageHandler.java", "BodyUseAPI": [], "Fixed commit": "0f68b19cadc1c2f9d12b65ea76ba342853d647b5", "Url": "https://api.github.com/repos/hh-school/bot-resume-builder", "Date": "2017-04-03T11:24:34Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue().getHierarchy()) != null) { out.write(entry.getValue().getHierarchy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4037/buggy-version/src.gui.org.deidentifier.arx.gui.worker.WorkerSave.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, org.deidentifier.arx.AttributeType.Hierarchy>.getValue()", "entry.getValue().getHierarchy()", "org.deidentifier.arx.io.CSVDataOutput.write(entry.getValue().getHierarchy())"], "Fixed commit": "92a09507ae98a673d6631b2b4e8c5133e47b1623", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2016-04-30T10:35:13Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gamepad2.right_bumper)) { bypass = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5709/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.Team7104PullUpDaniel.java", "BodyUseAPI": [], "Fixed commit": "e1c9dbcc5f946137184537d00e21aef6ccfcf25e", "Url": "https://api.github.com/repos/thesynergists/Team7104App", "Date": "2016-01-16T22:32:07Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bypass) { if (gamepad2.right_bumper) { was_pressed = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5709/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.Team7104PullUpDaniel.java", "BodyUseAPI": [], "Fixed commit": "e1c9dbcc5f946137184537d00e21aef6ccfcf25e", "Url": "https://api.github.com/repos/thesynergists/Team7104App", "Date": "2016-01-16T22:32:07Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_children) != null) { return _children; }else { return new java.util.ArrayList<com.zestedesavoir.zestwriter.model.MetaContent>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3475/buggy-version/src.main.java.com.zestedesavoir.zestwriter.model.Container.java", "BodyUseAPI": [], "Fixed commit": "b21832d62e242e02f0bbd2c79502d479a82c98b3", "Url": "https://api.github.com/repos/firm1/zest-writer", "Date": "2016-04-18T14:46:55Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position < 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5201/buggy-version/src.main.java.cofh.lib.gui.element.ElementListBox.java", "BodyUseAPI": [], "Fixed commit": "6c7441e01bbc6fb821407b69133180955deacba8", "Url": "https://api.github.com/repos/CoFH/CoFHLib", "Date": "2015-07-29T23:05:54Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((-1) == lastIndex) { sSystemIdFile = java.net.URLDecoder.decode(sSystemIdFile, \"UTF-8\"); lastIndex = sSystemIdFile.lastIndexOf(sCurrentDirURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/467/buggy-version/src.org.jpos.jposext.jposworkflow.service.support.TxnMgrConfigParserImpl.java", "BodyUseAPI": [], "Fixed commit": "aaea0ffe9f558c783a9fdea916daa0a0cb56592e", "Url": "https://api.github.com/repos/dgrandemange/jPosWorkflowEclipsePlugin", "Date": "2011-08-03T10:17:13Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tk.codeforfood.checklist.CreateChecklist.findViewById(R.id.editTextNewCheckItem)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(editText.getText().toString())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2002/buggy-version/app.src.main.java.tk.codeforfood.checklist.CreateChecklist.java", "BodyUseAPI": [], "Fixed commit": "b93fb8aefb0372ba30c001807130573153037ab7", "Url": "https://api.github.com/repos/philippreckziegel/Checklist", "Date": "2016-04-18T02:03:54Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == object) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/48/buggy-version/plugins.de.ovgu.featureide.fm.core.src.org.prop4j.Node.java", "BodyUseAPI": [], "Fixed commit": "069dc5623d99858fb78518e81ff384477aa4d7ad", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-02-25T13:59:45Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.w3c.dom.Node>.next()", "java.util.Iterator<org.w3c.dom.Node>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((oldAttr.getNamespaceURI()) == null ? element.hasAttribute(oldAttr.getName()) : element.hasAttributeNS(oldAttr.getNamespaceURI(), oldAttr.getLocalName())) element.removeAttributeNode(oldAttr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8147/buggy-version/swows.src.main.java.org.swows.xmlinrdf.DomDecoder.java", "BodyUseAPI": ["org.w3c.dom.Element.removeAttributeNode(org.w3c.dom.Attr)"], "Fixed commit": "99ac244e4f3e0336f620b68f0901e56279e9d349", "Url": "https://api.github.com/repos/miguel76/SWOWS", "Date": "2012-05-14T12:48:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.quran.labs.androidquran.QuranInfo.SURA_PAGE_START[i]) == page) return com.quran.labs.androidquran.QuranInfo.SURA_NAMES[i]; else if ((com.quran.labs.androidquran.QuranInfo.SURA_PAGE_START[i]) > page) return com.quran.labs.androidquran.QuranInfo.SURA_NAMES[(i - 1)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/746/buggy-version/src.com.quran.labs.androidquran.QuranInfo.java", "BodyUseAPI": [], "Fixed commit": "d449dc4a6fc2167988d9119502d0e06d2ab07eee", "Url": "https://api.github.com/repos/ahmedre/quran_android", "Date": "2010-02-10T06:48:10Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getConfig(\"report.metadata.store\")) == null) { binder.bind(org.rakam.JDBCPoolDataSource.class).annotatedWith(com.google.inject.name.Names.named(\"report.metadata.store.jdbc\")).toInstance(org.rakam.JDBCPoolDataSource.getOrCreateDataSource(config)); binder.bind(org.rakam.collection.event.metastore.QueryMetadataStore.class).to(org.rakam.JDBCQueryMetadata.class).in(Scopes.SINGLETON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/260/buggy-version/rakam-postgresql.src.main.java.org.rakam.PostgresqlModule.java", "BodyUseAPI": [], "Fixed commit": "f944c5a8e2e844e20672c6521c297e577687c181", "Url": "https://api.github.com/repos/rakam-io/rakam", "Date": "2015-10-08T23:59:16Z"},
{"Line": "=>772", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getType()) == (com.dig.www.character.GameCharacter.Types.DIAMOND)) && ((meleeTimer) > 0)) meleeTimer = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3909/buggy-version/DigIt3.src.com.dig.www.character.GameCharacter.java", "BodyUseAPI": [], "Fixed commit": "0f7bc67993c8a49b875327030fba0d06944a5b06", "Url": "https://api.github.com/repos/Bisharp/AppliedJava", "Date": "2015-11-07T21:34:23Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((com.greenaddress.greenbits.GreenAddressApplication) (getActivity().getApplication())).gaService) == null) { getActivity().finish(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6159/buggy-version/app.src.main.java.com.greenaddress.greenbits.ui.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "68ecd72a56121d69ff4cd79b585b607e4846e0ec", "Url": "https://api.github.com/repos/greenaddress/GreenBits", "Date": "2015-02-05T12:45:35Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SmnApp.sContext.getResources().getIdentifier(java.lang.String,java.lang.String,SmnApp.sContext.getPackageName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resId == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2321/buggy-version/app.src.main.java.ru.nils.saymon.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "d63b1175451a3126d1fb3af4e7b3c29d977244a3", "Url": "https://api.github.com/repos/IvanKobzarev/saymon-android", "Date": "2015-07-15T21:48:42Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (publishedDate.trim().equals(\"\")) { mPublishedDate = \"\"; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3397/buggy-version/src.in.digitrack.newsreader.News.java", "BodyUseAPI": [], "Fixed commit": "2de1548c64b7b46b7c747a794607a64229221c43", "Url": "https://api.github.com/repos/naveen246/NewsReader", "Date": "2014-10-11T11:23:24Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.kbase.mobu.validator.ModuleValidator.get(java.lang.String,com.fasterxml.jackson.databind.JsonNode,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((behaviorNode.get(\"none\")) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3321/buggy-version/src.java.us.kbase.mobu.validator.ModuleValidator.java", "BodyUseAPI": [], "Fixed commit": "31f05cddb80a6e2b2963697ecd41684a23d3d796", "Url": "https://api.github.com/repos/briehl/kb_sdk", "Date": "2016-06-30T23:09:55Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getMyPolly().users()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (userManager.isSignedOn(e.getSession().getUser())) { e.throwTemplateException(\"You are not logged in\", (\"You are currently not logged in via irc on polly and thus are not \" + \"allowed to see the IRC replay.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4840/buggy-version/polly.logging.src.http.ReplayHttpAction.java", "BodyUseAPI": ["de.skuzzle.polly.sdk.http.HttpEvent.throwTemplateException(java.lang.String,java.lang.String)"], "Fixed commit": "dd8832fc05756f93446e3081d45d9d6cf0ed80cc", "Url": "https://api.github.com/repos/skuzzle/polly", "Date": "2012-08-26T10:10:02Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getConfig().getBoolean(\"oracle.joins.enabled\")) { me.botsko.oracle.utils.JoinUtil.forceDateForAllPlayers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2804/buggy-version/src.main.java.me.botsko.oracle.Oracle.java", "BodyUseAPI": [], "Fixed commit": "81fef55353066d0297d9e611b9339c812a1cf0b7", "Url": "https://api.github.com/repos/prism/Oracle", "Date": "2013-08-07T16:37:37Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.db.stucture.Cursor.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(isEmptyResult(rslt))) if ((rslt.length) > 1) throw new java.lang.RuntimeException(\"Subquery still supports operation over one column.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8729/buggy-version/src.com.db.parser.where.SubQueryToken.java", "BodyUseAPI": [], "Fixed commit": "4458ac6a8edf1d0958c4a3dad95410f9ea77e57c", "Url": "https://api.github.com/repos/difince/fly-database", "Date": "2017-07-17T12:00:35Z"},
{"Line": "=>896", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(source.equals(target))) input = tundra.document.drop(tundra.document.copy(input, source, target), source);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/482/buggy-version/code.source.tundra.document.java", "BodyUseAPI": ["tundra.document.copy(tundra.IData,java.lang.String,java.lang.String)", "tundra.document.drop(tundra.IData,java.lang.String)"], "Fixed commit": "573f80f00989cd5b93847edc674a15be6d7181b0", "Url": "https://api.github.com/repos/Permafrost/Tundra", "Date": "2013-09-14T10:34:05Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((rollupValue != null) && (rawValue != null)) && (tcValue != null)) rollupValue.setValue(((rollupValue.getValue()) + ((rawValue.getValue()) * (tcValue.getSum()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7964/buggy-version/Safhire-Report.src.org.appdynamics.inovalon.birtdashboard.RestDataSource.java", "BodyUseAPI": [], "Fixed commit": "6d7aeb631f2e71efe384c06fbbaf926e943a6899", "Url": "https://api.github.com/repos/Appdynamics/InovalonDashboard", "Date": "2017-10-09T22:03:08Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (p3 == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7280/buggy-version/src.main.java.com.kaushik.AlgorithmUtility.linkedlistalgos.LinkedListAlgos.java", "BodyUseAPI": [], "Fixed commit": "b1d65df2de622090f080820ddd6452220602d8f5", "Url": "https://api.github.com/repos/kaushikosu/AlgorithmsProject", "Date": "2017-02-03T04:13:50Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (userInput == null) java.lang.System.exit(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3814/buggy-version/player_client.src.main.java.view.QuizGameOrchestratorImpl.java", "BodyUseAPI": [], "Fixed commit": "64083966d0f77fca2e31c2dfabfdf5681a21326d", "Url": "https://api.github.com/repos/kokamo01/Quiz", "Date": "2014-04-20T14:11:06Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parent.getNode1().evalOutString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((model.MathParser) (parent)).isOnlyNumber(tmp)) { ret = tmp; }else { ret += (parent.getNode1().evalOutString()) + (getParseEnd()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2813/buggy-version/src.model.MathParser.java", "BodyUseAPI": [], "Fixed commit": "ee456fd154945be13a376697edbb475eb837b1c9", "Url": "https://api.github.com/repos/tredmon/CalcProject", "Date": "2015-03-07T02:54:20Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((whoseMove.charAt(0)) == 'w') { if (!(board.getWhitesMove())) board.flipWhiteToMove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2124/buggy-version/Chess.java", "BodyUseAPI": [], "Fixed commit": "b21a865b3496511a627cc2538c4b0d4ed8234409", "Url": "https://api.github.com/repos/Patosai/Chess", "Date": "2014-05-26T13:54:44Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((whoseMove.charAt(0)) == 'b') { if (board.getWhitesMove()) board.flipWhiteToMove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2124/buggy-version/Chess.java", "BodyUseAPI": [], "Fixed commit": "b21a865b3496511a627cc2538c4b0d4ed8234409", "Url": "https://api.github.com/repos/Patosai/Chess", "Date": "2014-05-26T13:54:44Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (board.getWhitesMove()) o.write(\"w\\n\"); else o.write(\"b\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2124/buggy-version/Chess.java", "BodyUseAPI": [], "Fixed commit": "b21a865b3496511a627cc2538c4b0d4ed8234409", "Url": "https://api.github.com/repos/Patosai/Chess", "Date": "2014-05-26T13:54:44Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_checkBoxListSelectionModel) != checkBoxListSelectionModel) { if ((_checkBoxListSelectionModel) != null) { getModel().removeListDataListener(_checkBoxListSelectionModel); } _checkBoxListSelectionModel = checkBoxListSelectionModel; if ((_checkBoxListSelectionModel) != null) { _checkBoxListSelectionModel.setModel(getModel()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7346/buggy-version/src.com.jidesoft.swing.CheckBoxList.java", "BodyUseAPI": [], "Fixed commit": "bd9ff8a3898ce7a167eab847de6b4ea455260e85", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2012-07-06T18:16:32Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.trim().length()) <= 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/583/buggy-version/CA1Server.src.main.java.server.User.java", "BodyUseAPI": [], "Fixed commit": "c3b35aa8f382efc9b69b1ec355c07f6cb90b658c", "Url": "https://api.github.com/repos/menjaw/CA1_ServerClientChat", "Date": "2017-02-17T10:28:40Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.DataAccessor.getUserByEmail(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) throw new com.pratilipi.common.exception.InvalidArgumentException(com.pratilipi.api.shared.GenericRequest.ERR_EMAIL_NOT_REGISTERED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2726/buggy-version/src.main.java.com.pratilipi.data.util.UserDataUtil.java", "BodyUseAPI": [], "Fixed commit": "3891d1262efa4ef127ccac10c1a39ef0c63e4737", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-05-28T06:20:54Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (jetbrains.buildServer.util.StringUtil.isEmpty(keyFilePath)) { keyFilePath = myDefaultKeyPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8690/buggy-version/deploy-runner-agent.src.main.java.jetbrains.buildServer.deployer.agent.ssh.SSHSessionProvider.java", "BodyUseAPI": [], "Fixed commit": "0b63d841c32ba8c4bc320e73288dfee6c2036324", "Url": "https://api.github.com/repos/JetBrains/teamcity-deployer-plugin", "Date": "2015-10-29T20:10:04Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetPackage == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7617/buggy-version/src.main.java.net.hasor.core.container.ClassEngine.java", "BodyUseAPI": [], "Fixed commit": "f263f8c946bf670e9d93b4b2909a065aeb04b372", "Url": "https://api.github.com/repos/zycgit/hasor", "Date": "2017-02-03T07:50:36Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Arrays.asList(args).contains(\"-GUI\")) Main.GUI.setup();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5813/buggy-version/src.com.wynprice.discord.first.StartUp.java", "BodyUseAPI": [], "Fixed commit": "0cf57c1b781a8c744a2f13f2ed6d13e863cf9129", "Url": "https://api.github.com/repos/Wyn-Price/BeeshBot", "Date": "2017-12-31T00:32:09Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (res == null) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8850/buggy-version/YA-CI.src.digital.torpedo.yaci.webserver.Views.java", "BodyUseAPI": [], "Fixed commit": "00c74282032051e66bcbf26568e043b0fc31b659", "Url": "https://api.github.com/repos/Klyyssi/ya-ci", "Date": "2016-01-28T20:23:33Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.jboss.tfonteyne.profilecloner.GenericCloner.isProperty(node)) { return \"PROPERTY\"; }else { throw new java.lang.IllegalArgumentException((\"Unknown type: \" + (node.getType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2902/buggy-version/src.main.java.org.jboss.tfonteyne.profilecloner.GenericCloner.java", "BodyUseAPI": ["org.jboss.dmr.ModelNode.getType()"], "Fixed commit": "73d158dfa9aeb7d4faf887f299d1bb5484df0b4a", "Url": "https://api.github.com/repos/Maarc/profilecloner", "Date": "2015-07-09T13:05:17Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["teammates.storage.api.FeedbackSessionsDb.getEntity(teammates.common.datatransfer.FeedbackSessionAttributes)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fs == null) { throw new teammates.common.exception.EntityDoesNotExistException(\"Session disappeared\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/445/buggy-version/src.main.java.teammates.storage.api.FeedbackQuestionsDb.java", "BodyUseAPI": [], "Fixed commit": "cc2ade04893cac6c8d8e454ea4d6b5482b5b41de", "Url": "https://api.github.com/repos/TEAMMATES/teammates", "Date": "2016-07-12T14:44:04Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.jdo.Query.execute(java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((feedbackQuestionList.size()) > 1) { log.severe((((((\"More than one question with same question number in \" + courseId) + \"/\") + feedbackSessionName) + \" question \") + questionNumber)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/445/buggy-version/src.main.java.teammates.storage.api.FeedbackQuestionsDb.java", "BodyUseAPI": [], "Fixed commit": "cc2ade04893cac6c8d8e454ea4d6b5482b5b41de", "Url": "https://api.github.com/repos/TEAMMATES/teammates", "Date": "2016-07-12T14:44:04Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.amdudda.Ball.ballX) <= 0) com.amdudda.Ball.lastPaddle = \"h\"; else com.amdudda.Ball.lastPaddle = \"c\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3741/buggy-version/com.amdudda.Ball.java", "BodyUseAPI": [], "Fixed commit": "e4eec01b272d51e7e78a5aa2dd8b895cd164e4d4", "Url": "https://api.github.com/repos/amdudda/java_lab_Pong", "Date": "2015-10-30T19:04:06Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spawnComp.types.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (spawnTypes == 0) { org.terasology.portals.SpawnerSystem.logger.warn(\"Spawner has no types, sad - stopping this loop iteration early :-(\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8107/buggy-version/mods.portals.src.main.java.org.terasology.portals.SpawnerSystem.java", "BodyUseAPI": [], "Fixed commit": "b12c8b55ed70449691bd2cfc320658e9b3b1d707", "Url": "https://api.github.com/repos/MovingBlocks/Terasology", "Date": "2012-11-19T20:50:36Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) b.append(\" \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1149/buggy-version/src.UltraCommand.java", "BodyUseAPI": [], "Fixed commit": "f555c4e98103f7d3ed6a9f7f563617ea71f4b554", "Url": "https://api.github.com/repos/kierdavis/UltraCommand", "Date": "2013-07-18T20:34:34Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (propertyName)) { writer.name(propertyName); writer.value(typeInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2516/buggy-version/src.main.java.com.github.nmorel.gwtjackson.client.mapper.AbstractSuperclassJsonMapper.java", "BodyUseAPI": [], "Fixed commit": "adbbb872ae66ed3a161927bcbe6b3dfd83a2e214", "Url": "https://api.github.com/repos/nmorel/gwt-jackson", "Date": "2013-09-04T19:03:07Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(c3d.getKeys().isCtrlPressed())) { org.nschmidt.ldparteditor.data.GDataCSG.selectedBodyMap.get(c3d.getLockableDatFileReference()).clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5027/buggy-version/src.org.nschmidt.ldparteditor.data.GDataCSG.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.composites.Composite3D.getLockableDatFileReference()", "java.util.HashMap<org.nschmidt.ldparteditor.data.DatFile, java.util.HashSet<org.nschmidt.ldparteditor.data.GDataCSG>>.get(c3d.getLockableDatFileReference())", "org.nschmidt.ldparteditor.data.GDataCSG.selectedBodyMap.get(c3d.getLockableDatFileReference()).clear()"], "Fixed commit": "672bc0abff7933fb381eab46d441947b00fafb76", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-17T15:52:32Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(c3d.getKeys().isCtrlPressed())) { selectedTriangles.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5027/buggy-version/src.org.nschmidt.ldparteditor.data.GDataCSG.java", "BodyUseAPI": [], "Fixed commit": "672bc0abff7933fb381eab46d441947b00fafb76", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-17T15:52:32Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cacheResults) { mPerTripCache.put(trip, results); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2236/buggy-version/smartReceiptsLibrary.src.main.java.co.smartreceipts.android.persistence.database.tables.TripForeignKeyAbstractSqlTable.java", "BodyUseAPI": [], "Fixed commit": "d5694847bcd31f9f8970f17e5a7499a9a04ff123", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2016-11-21T01:06:15Z"},
{"Line": "=>2996", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (atomRes != null) atomRes.setSeqResGroups(seqRes.getAtomGroups()); else org.biojava.nbio.structure.io.PDBFileParser.logger.warn((\"Could not find atom records for chain \" + (seqRes.getChainID())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1475/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.PDBFileParser.java", "BodyUseAPI": ["org.biojava.nbio.structure.io.Chain.setSeqResGroups(seqRes.getAtomGroups())"], "Fixed commit": "f3fa8b021fd59a053aa164b10e0807ab0a20fc00", "Url": "https://api.github.com/repos/heuermh/biojava", "Date": "2015-09-17T00:35:09Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rinv == null) { de.uni_potsdam.hpi.asg.delaymatch.DelayMatchMain.logger.error(\"Remote login not configured\"); return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/520/buggy-version/src.main.java.de.uni_potsdam.hpi.asg.delaymatch.DelayMatchMain.java", "BodyUseAPI": [], "Fixed commit": "da753391524480048dad2c1ad33fbee30a58ae22", "Url": "https://api.github.com/repos/hpiasg/asgdelaymatch", "Date": "2017-01-10T16:32:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (psdRegion == (annis.visualizers.htmlvis.PseudoRegionMatcher.PseudoRegion.BEGIN)) { this.annotationName = \"annis_BEGIN\"; }else { this.annotationName = \"annis_END\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8988/buggy-version/annis-visualizers.src.main.java.annis.visualizers.htmlvis.PseudoRegionMatcher.java", "BodyUseAPI": [], "Fixed commit": "4551c5027d6f48c1334b95c884fa3330428ed902", "Url": "https://api.github.com/repos/amir-zeldes/ANNIS", "Date": "2015-12-16T16:25:57Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aFile.getName().startsWith(\".\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3560/buggy-version/src.com.aerospike.example.aggregation.FlightsAnalytics.java", "BodyUseAPI": [], "Fixed commit": "86340c73a649d5f43528805e916ddb31f9cc45af", "Url": "https://api.github.com/repos/aerospike/flights-analytics", "Date": "2014-05-27T01:29:42Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((source_id >= v_size) || (source_id < 0)) { java.lang.System.out.println((\"Source should be in the range of 0 and \" + v_size)); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2162/buggy-version/src.Djkstra.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "34bceece510c28baebcbf914cb1622222175b816", "Url": "https://api.github.com/repos/canaran/Djkstra", "Date": "2014-03-24T00:52:07Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (authors != null) { java.lang.String[] authorsArr = authors.split(\",\"); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setLines(authorsArr.length); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(authors.replace(\",\", \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9161/buggy-version/Alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)", "((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(java.lang.String)"], "Fixed commit": "f3a1ecda8a94a3e767c322e32314d3fe62459f3f", "Url": "https://api.github.com/repos/BenjaminEarley/Super-Duo", "Date": "2015-10-11T18:13:19Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareActionProvider) != null) { shareActionProvider.setShareIntent(shareIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9161/buggy-version/Alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "f3a1ecda8a94a3e767c322e32314d3fe62459f3f", "Url": "https://api.github.com/repos/BenjaminEarley/Super-Duo", "Date": "2015-10-11T18:13:19Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["persistenceStrategy.getPublicationDAO().getById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((publication.getEvent()) != null) { de.rwth.i9.palm.model.Event event = publication.getEvent(); event.setUpdateInterest(true); persistenceStrategy.getEventDAO().persist(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7932/buggy-version/src.main.java.de.rwth.i9.palm.controller.ManagePublicationController.java", "BodyUseAPI": ["de.rwth.i9.palm.model.Publication.getEvent()"], "Fixed commit": "078e949891956d5e6c494cefa65f49d96bd926d9", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2016-04-23T16:09:19Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paymentResponseItem.getTransactionSuccess()) { remainingTotal = remainingTotal.subtract(paymentResponseItem.getTransactionAmount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/552/buggy-version/core.broadleaf-framework.src.main.java.org.broadleafcommerce.core.payment.service.workflow.PaymentActivity.java", "BodyUseAPI": ["org.broadleafcommerce.core.payment.domain.PaymentResponseItem.getTransactionAmount()", "org.broadleafcommerce.common.money.Money.subtract(paymentResponseItem.getTransactionAmount())"], "Fixed commit": "2915d1e3222e4659c41bc2386e975a4c1b2fd3b7", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-04-09T01:10:19Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paymentResponseItem.getTransactionAmount().lessThan(transactionTotal.getAmount())) { throw new org.broadleafcommerce.core.payment.service.exception.InsufficientFundsException(java.lang.String.format(\"Transaction amount was [%s] but paid amount was [%s]\", transactionTotal.getAmount(), paymentResponseItem.getTransactionAmount())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/552/buggy-version/core.broadleaf-framework.src.main.java.org.broadleafcommerce.core.payment.service.workflow.PaymentActivity.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,transactionTotal.getAmount(),paymentResponseItem.getTransactionAmount())", "org.broadleafcommerce.common.money.Money.getAmount()", "org.broadleafcommerce.core.payment.domain.PaymentResponseItem.getTransactionAmount()"], "Fixed commit": "2915d1e3222e4659c41bc2386e975a4c1b2fd3b7", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-04-09T01:10:19Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.getName().endsWith(ignoreSuffix)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7612/buggy-version/external.storm-hdfs.src.main.java.org.apache.storm.hdfs.spout.HdfsSpout.java", "BodyUseAPI": [], "Fixed commit": "f927787505b6cb5b9d8f7adaaf3944f24a6ab481", "Url": "https://api.github.com/repos/d2r/storm", "Date": "2015-12-09T23:13:08Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (conf.containsKey(Configs.IGNORE_SUFFIX)) { this.ignoreSuffix = conf.get(Configs.IGNORE_SUFFIX).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7612/buggy-version/external.storm-hdfs.src.main.java.org.apache.storm.hdfs.spout.HdfsSpout.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.Map.get(Configs.IGNORE_SUFFIX)"], "Fixed commit": "f927787505b6cb5b9d8f7adaaf3944f24a6ab481", "Url": "https://api.github.com/repos/d2r/storm", "Date": "2015-12-09T23:13:08Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row % 2) == 1) { this.setBackground(alternate); }else { this.setBackground(java.awt.Color.WHITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2283/buggy-version/src.main.java.uk.ac.ebi.pride.toolsuite.gui.component.table.renderer.HyperLinkCellRenderer.java", "BodyUseAPI": [], "Fixed commit": "ec87d50368af4483964633bea4740965bf9a17cd", "Url": "https://api.github.com/repos/PRIDE-Toolsuite/pride-inspector", "Date": "2014-10-03T10:45:28Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row % 2) == 1) { this.setBackground(alternate); }else { this.setBackground(java.awt.Color.WHITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2283/buggy-version/src.main.java.uk.ac.ebi.pride.toolsuite.gui.component.table.renderer.ProteinAccessionHyperLinkCellRenderer.java", "BodyUseAPI": [], "Fixed commit": "ec87d50368af4483964633bea4740965bf9a17cd", "Url": "https://api.github.com/repos/PRIDE-Toolsuite/pride-inspector", "Date": "2014-10-03T10:45:28Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row % 2) == 1) { this.setBackground(alternate); }else { this.setBackground(java.awt.Color.WHITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2283/buggy-version/src.main.java.uk.ac.ebi.pride.toolsuite.gui.component.table.renderer.PeptideSequenceCellRenderer.java", "BodyUseAPI": [], "Fixed commit": "ec87d50368af4483964633bea4740965bf9a17cd", "Url": "https://api.github.com/repos/PRIDE-Toolsuite/pride-inspector", "Date": "2014-10-03T10:45:28Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (table instanceof org.jdesktop.swingx.JXTable) { java.awt.Color alternate = javax.swing.UIManager.getColor(\"Table.alternateRowColor\"); if ((row % 2) == 1) { this.setBackground(alternate); }else { this.setBackground(java.awt.Color.WHITE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2283/buggy-version/src.main.java.uk.ac.ebi.pride.toolsuite.gui.component.table.renderer.SequenceCoverageRenderer.java", "BodyUseAPI": [], "Fixed commit": "ec87d50368af4483964633bea4740965bf9a17cd", "Url": "https://api.github.com/repos/PRIDE-Toolsuite/pride-inspector", "Date": "2014-10-03T10:45:28Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiFileFactory.getInstance(myProject).createFileFromText(java.lang.String,com.intellij.openapi.fileTypes.FileType,java.lang.CharSequence)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fileFromText instanceof com.intellij.psi.XmlFile) { xmlFile = ((com.intellij.psi.XmlFile) (fileFromText)); }else { xmlFile = ((com.intellij.psi.XmlFile) (fileFromText.getViewProvider().getPsi(((com.intellij.openapi.fileTypes.LanguageFileType) (fileType)).getLanguage()))); assert xmlFile != null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8497/buggy-version/xml.xml-psi-impl.src.com.intellij.psi.XmlElementFactoryImpl.java", "BodyUseAPI": ["fileFromText.getViewProvider().getPsi(((com.intellij.openapi.fileTypes.LanguageFileType) (fileType)).getLanguage())", "com.intellij.psi.PsiFile.getViewProvider()"], "Fixed commit": "3dfc8cda76940e53a3f1e3dfa7b0c91495b056c5", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2014-09-08T15:12:41Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paths.containsKey(direction)) { return paths.get(direction); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/189/buggy-version/src.Room.java", "BodyUseAPI": ["java.util.HashMap<NormalToken, Room>.get(Token)"], "Fixed commit": "510fb7659edb3bd932ca6268a1d151d6bbc5adc9", "Url": "https://api.github.com/repos/AdderAdder/Adventure-Game", "Date": "2016-02-14T21:23:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Room.go(Token)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nextRoom != null) { currentRoom = nextRoom; java.lang.System.out.println(currentRoom.getDescription()); }else { java.lang.System.out.println(\"Best if you don't walk in that direction...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/189/buggy-version/src.Hero.java", "BodyUseAPI": [], "Fixed commit": "510fb7659edb3bd932ca6268a1d151d6bbc5adc9", "Url": "https://api.github.com/repos/AdderAdder/Adventure-Game", "Date": "2016-02-14T21:23:34Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { formData.add(\"cc\", sb.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1843/buggy-version/src.main.java.MailService.MailGunDispatcher.java", "BodyUseAPI": ["com.sun.jersey.core.util.MultivaluedMapImpl.add(java.lang.String,java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "cebfc1bc63c8e44d91fd1e284a840395ad425200", "Url": "https://api.github.com/repos/roeyaus/SiteMinder", "Date": "2017-10-18T08:11:33Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { formData.add(\"bcc\", sb.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1843/buggy-version/src.main.java.MailService.MailGunDispatcher.java", "BodyUseAPI": ["com.sun.jersey.core.util.MultivaluedMapImpl.add(java.lang.String,java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "cebfc1bc63c8e44d91fd1e284a840395ad425200", "Url": "https://api.github.com/repos/roeyaus/SiteMinder", "Date": "2017-10-18T08:11:33Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 0) { if (!(ac.sync())) throw new com.noinnion.android.reader.api.ReaderException(\"Remote connection error\"); handler.items(com.asafge.newsblurplus.APIHelper.extractStoryIDs(ac.Json)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3974/buggy-version/newsplus.extensions.NewsblurExtension.src.com.asafge.newsblurplus.NewsBlurPlus.java", "BodyUseAPI": [], "Fixed commit": "80c12a74345751cd388e72c325938a2db60f8cfb", "Url": "https://api.github.com/repos/asafge/NewsBlurPlus", "Date": "2013-07-26T15:22:08Z"},
{"Line": "=>3320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputType) == (net.ages.workbench.utils.AlwbConstants.PDF)) { span = value; }else { span = (((((\"<span class='kvp' data-key='\" + (file.replace(\".ares\", \"\"))) + \"|\") + id) + \"'>\") + value) + \"</span>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7720/buggy-version/net.ages.workbench.templates.dsl.src.net.ages.workbench.templates.dsl.utils.ModelAccessor.java", "BodyUseAPI": [], "Fixed commit": "a96d40ea13b4665f915814459f271c0c5ac11444", "Url": "https://api.github.com/repos/AGES-Initiatives/alwb-java", "Date": "2016-07-12T15:44:15Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProgressDialog) == null) { mProgressDialog = android.app.ProgressDialog.show(this, \"\u8bf7\u7a0d\u7b49...\", \"\u83b7\u53d6\u6570\u636e\u4e2d...\", true); mProgressDialog.setCancelable(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8970/buggy-version/src.com.example.bcloud.MagnetActivity.java", "BodyUseAPI": [], "Fixed commit": "b3cfb175f6bc6ca21c115b0cfda89866d78cbdd6", "Url": "https://api.github.com/repos/shanlihou/bcloud-java", "Date": "2016-02-18T04:17:30Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProgressDialog) != null) { mProgressDialog.dismiss(); mProgressDialog = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8970/buggy-version/src.com.example.bcloud.MagnetActivity.java", "BodyUseAPI": [], "Fixed commit": "b3cfb175f6bc6ca21c115b0cfda89866d78cbdd6", "Url": "https://api.github.com/repos/shanlihou/bcloud-java", "Date": "2016-02-18T04:17:30Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alvazan.orm.api.z8spi.action.RemoveIndex.getIndexCfName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (colFamily.equalsIgnoreCase(\"BytesIndice\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7858/buggy-version/input.javasrc.com.alvazan.orm.layer9z.spi.db.inmemory.InMemorySession.java", "BodyUseAPI": [], "Fixed commit": "ffe77f1f2b17c3c5537259e09945a17d96468ef2", "Url": "https://api.github.com/repos/deanhiller/playorm", "Date": "2013-01-16T06:44:36Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alvazan.orm.api.z8spi.action.RemoveIndex.getIndexCfName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (indexCfName.equalsIgnoreCase(\"BytesIndice\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7858/buggy-version/input.javasrc.com.alvazan.orm.layer9z.spi.db.cassandra.CassandraSession.java", "BodyUseAPI": [], "Fixed commit": "ffe77f1f2b17c3c5537259e09945a17d96468ef2", "Url": "https://api.github.com/repos/deanhiller/playorm", "Date": "2013-01-16T06:44:36Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inOrOut == \"out\") { t = java.lang.Integer.parseInt(temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9084/buggy-version/src.controller.SessionController.java", "BodyUseAPI": [], "Fixed commit": "d8060e1fec52fd7aef94e3bd72fa7ef1a8bc25f4", "Url": "https://api.github.com/repos/margreli/TDT4145-project", "Date": "2017-03-10T12:19:52Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!humanLeft) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/542/buggy-version/GameOfPoker.java", "BodyUseAPI": [], "Fixed commit": "cbf9943463be734de50465d22f12639dcb9fcaa0", "Url": "https://api.github.com/repos/COMP30050DHK/PokerBot", "Date": "2017-04-21T10:41:12Z"},
{"Line": "=>714", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.util.ToolRunner.run(com.twitter.hraven.etl.JobFileProcessor,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res == 1) throw new java.lang.RuntimeException(\"Job Failed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9069/buggy-version/hraven-etl.src.main.java.com.twitter.hraven.etl.JobFileProcessor.java", "BodyUseAPI": [], "Fixed commit": "5b935487d3c3e96ae9910bc805d0eb3fde0b4a50", "Url": "https://api.github.com/repos/InMobi/hraven", "Date": "2014-09-03T13:27:04Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.util.ToolRunner.run(com.twitter.hraven.etl.JobFileRawLoader,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res == 1) throw new java.lang.RuntimeException(\"Job Failed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9069/buggy-version/hraven-etl.src.main.java.com.twitter.hraven.etl.JobFileRawLoader.java", "BodyUseAPI": [], "Fixed commit": "5b935487d3c3e96ae9910bc805d0eb3fde0b4a50", "Url": "https://api.github.com/repos/InMobi/hraven", "Date": "2014-09-03T13:27:04Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.util.ToolRunner.run(com.twitter.hraven.etl.JobFilePreprocessor,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res == 1) throw new java.lang.RuntimeException(\"Job Failed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9069/buggy-version/hraven-etl.src.main.java.com.twitter.hraven.etl.JobFilePreprocessor.java", "BodyUseAPI": [], "Fixed commit": "5b935487d3c3e96ae9910bc805d0eb3fde0b4a50", "Url": "https://api.github.com/repos/InMobi/hraven", "Date": "2014-09-03T13:27:04Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.silvercatcher.reforged.ReforgedReferences.GlobalValues.KNIFE) { org.silvercatcher.reforged.ReforgedRegistry.registrationList.add((ReforgedAdditions.WOODEN_BAYONET_MUSKET = new org.silvercatcher.reforged.ItemMusketWithBayonet(net.minecraft.item.Item.ToolMaterial.WOOD))); org.silvercatcher.reforged.ReforgedRegistry.registrationList.add((ReforgedAdditions.STONE_BAYONET_MUSKET = new org.silvercatcher.reforged.ItemMusketWithBayonet(net.minecraft.item.Item.ToolMaterial.STONE))); org.silvercatcher.reforged.ReforgedRegistry.registrationList.add((ReforgedAdditions.GOLDEN_BAYONET_MUSKET = new org.silvercatcher.reforged.ItemMusketWithBayonet(net.minecraft.item.Item.ToolMaterial.GOLD))); org.silvercatcher.reforged.ReforgedRegistry.registrationList.add((ReforgedAdditions.IRON_BAYONET_MUSKET = new org.silvercatcher.reforged.ItemMusketWithBayonet(net.minecraft.item.Item.ToolMaterial.IRON))); org.silvercatcher.reforged.ReforgedRegistry.registrationList.add((ReforgedAdditions.DIAMOND_BAYONET_MUSKET = new org.silvercatcher.reforged.ItemMusketWithBayonet(net.minecraft.item.Item.ToolMaterial.DIAMOND))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2331/buggy-version/java.org.silvercatcher.reforged.ReforgedRegistry.java", "BodyUseAPI": [], "Fixed commit": "4520fbfd7c70cffeaaee5368badbbd30e33ef0e3", "Url": "https://api.github.com/repos/ThexXTURBOXx/Reforged", "Date": "2017-05-29T15:55:16Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.api.codegen.metacode.InitCodeNode.getInitValueConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((initValueConfig.getInitialValue().getType()) == (com.google.api.codegen.metacode.InitValue.InitValueType.Literal)) { value = context.getTypeTable().renderPrimitiveValue(item.getType(), value); }else { value = context.getNamer().localVarName(com.google.api.codegen.util.Name.from(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1222/buggy-version/src.main.java.com.google.api.codegen.transformer.InitCodeTransformer.java", "BodyUseAPI": [], "Fixed commit": "91004568bd764593881eeff182132eb36a0f7531", "Url": "https://api.github.com/repos/shinfan/toolkit", "Date": "2016-11-10T23:57:33Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((selectedImageUri != null) && ((selectedImageUri.toString().length()) > 0)) { android.util.Log.i(com.apps.interestingapps.multibackground.SetWallpaperActivity.TAG, (\"URI: \" + (selectedImageUri.toString()))); addNewImage(selectedImageUri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2437/buggy-version/src.com.apps.interestingapps.multibackground.SetWallpaperActivity.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,(\"URI: \" + (selectedImageUri.toString())))", "com.apps.interestingapps.multibackground.SetWallpaperActivity.addNewImage(android.net.Uri)", "android.net.Uri.toString()"], "Fixed commit": "dc9be3b0624a66021953189aac407c0b36c444eb", "Url": "https://api.github.com/repos/interesting-apps/MultiBackground", "Date": "2014-09-21T03:30:24Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.newsclient.data.DNewsList.getById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (news == null) { news = new com.newsclient.data.DSingleNews(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7459/buggy-version/app.src.main.java.com.newsclient.view.VDetails.java", "BodyUseAPI": [], "Fixed commit": "f99d86d19b7fbcd4a304fcd27d5c321074bcd6bc", "Url": "https://api.github.com/repos/LegaDyan/NewsClient", "Date": "2017-09-08T12:33:48Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((songs.size()) == 1) { this.queue(songs.get(0)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8541/buggy-version/src.main.java.com.github.drsmugbrain.youtube.TrackScheduler.java", "BodyUseAPI": ["com.github.drsmugbrain.youtube.TrackScheduler.queue(songs.get(0))", "java.util.List<com.github.drsmugbrain.youtube.Song>.get(int)"], "Fixed commit": "cbe0dce8a256efb4a054d8ea02e937ecfe100f9a", "Url": "https://api.github.com/repos/DrSmugleaf/Banter-Bot4J", "Date": "2017-09-08T13:15:49Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (column instanceof org.normandra.meta.EmbeddedCollectionMeta) { generic = ((org.normandra.meta.EmbeddedCollectionMeta) (column)).getGeneric(); }else if (column instanceof org.normandra.meta.JoinCollectionMeta) { generic = ((org.normandra.meta.JoinCollectionMeta) (column)).getEntity().getPrimaryKey().getType(); }else { generic = column.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7814/buggy-version/src.main.java.org.normandra.orientdb.OrientUtils.java", "BodyUseAPI": ["org.normandra.meta.ColumnMeta.getType()"], "Fixed commit": "5c3cd7944006fbc3a9b4d035b03c30200bd9831b", "Url": "https://api.github.com/repos/trajar/normandra", "Date": "2015-03-31T00:57:05Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2576/buggy-version/facebook4j-core.src.main.java.facebook4j.auth.AuthType.java", "BodyUseAPI": [], "Fixed commit": "a9d7b3ef6d570955db47f40699d5f52e0b2a698f", "Url": "https://api.github.com/repos/roundrop/facebook4j", "Date": "2016-03-19T04:23:48Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (masterBlock == null) ((zmaster587.libVulpes.tile.IMultiblock) (tile)).setMasterBlock(this.xCoord, this.yCoord, this.zCoord);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6100/buggy-version/src.main.java.zmaster587.libVulpes.tile.multiblock.TileMultiBlock.java", "BodyUseAPI": [], "Fixed commit": "7de24a2a349d66c0be968bc314a6f74a7f226a95", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-12-21T05:21:24Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5682/buggy-version/week3.BaseballElimination.java", "BodyUseAPI": [], "Fixed commit": "32f71a3cc90572636f768a913b640727dad15eec", "Url": "https://api.github.com/repos/edward8628/algorithms_part2", "Date": "2015-11-28T04:27:04Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.berkeley.cs.amplab.carat.android.ui.UiRefreshThread.app.s.getReports()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((r.getModel()) != null) { double exp = r.getModel().expectedValue; android.util.Log.d(edu.berkeley.cs.amplab.carat.android.ui.UiRefreshThread.TAG, (\"Model expected value: \" + exp)); if (exp > 0.0) bl = 100 / (r.getModel().expectedValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7829/buggy-version/app.android.src.edu.berkeley.cs.amplab.carat.android.ui.UiRefreshThread.java", "BodyUseAPI": ["edu.berkeley.cs.amplab.carat.thrift.Reports.getModel()", "edu.berkeley.cs.amplab.carat.thrift.Reports.getModel()"], "Fixed commit": "e9c6a3d1d716d9426207e1866af5fc3503d5e781", "Url": "https://api.github.com/repos/amplab/carat", "Date": "2012-05-25T06:22:12Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(projectToken)) { projectInfo.setCoordinates(new org.whitesource.agent.api.model.Coordinates(null, projectName, null)); }else { projectInfo.setProjectToken(projectToken); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/903/buggy-version/src.main.java.org.whitesource.bamboo.plugin.freestyle.GenericOssInfoExtractor.java", "BodyUseAPI": ["org.whitesource.agent.api.model.AgentProjectInfo.setProjectToken(org.whitesource.bamboo.plugin.freestyle.GenericOssInfoExtractor)"], "Fixed commit": "936d5b4a9220d59ffd51cd7c074aed97c4676c90", "Url": "https://api.github.com/repos/whitesource/whitesource-bamboo-agent", "Date": "2016-05-12T09:01:13Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((f != null) && (stub != null)) futures.putIfAbsent(stub, f);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9190/buggy-version/src.org.jgroups.stack.RouterStubManager.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentMap<org.jgroups.stack.RouterStub, java.util.concurrent.Future<?>>.putIfAbsent(org.jgroups.stack.RouterStub,java.util.concurrent.Future<?>)"], "Fixed commit": "83d720496009eb7c183096370f757b3834b8e517", "Url": "https://api.github.com/repos/belaban/JGroups", "Date": "2014-10-15T10:33:46Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(str)) { previews.add(eu.europeana.corelib.web.service.impl.EuropeanaUrlServiceImpl.getBeanInstance().getThumbnailUrl(str, getType()).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1348/buggy-version/corelib-solr.src.main.java.eu.europeana.corelib.solr.bean.impl.BriefBeanImpl.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(eu.europeana.corelib.web.service.impl.EuropeanaUrlServiceImpl.getBeanInstance().getThumbnailUrl(str, getType()).toString())", "eu.europeana.corelib.web.service.impl.EuropeanaUrlServiceImpl.getBeanInstance().getThumbnailUrl(str, getType()).toString()", "eu.europeana.corelib.web.service.impl.EuropeanaUrlServiceImpl.getBeanInstance().getThumbnailUrl(java.lang.String,eu.europeana.corelib.definitions.solr.DocType)"], "Fixed commit": "12bbbbca48fa647f5d6e75f3b23f751324ee6ee1", "Url": "https://api.github.com/repos/europeana/corelib", "Date": "2014-05-21T09:23:40Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((directory) == null) { directory = org.apache.lucene.store.FSDirectory.open(path.toFile(), new org.apache.lucene.store.NativeFSLockFactory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7049/buggy-version/src.main.java.pl.hycom.jira.plugins.gitlab.integration.search.DefaultLuceneIndexAccessor.java", "BodyUseAPI": [], "Fixed commit": "baaf1f2c9cb9a666eb5ba5a6165ea1d90d855be0", "Url": "https://api.github.com/repos/Augustyn/JIRA-Gitlab-integration", "Date": "2016-10-02T18:14:49Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outputs != null) { query = new jkind.sexp.Cons(\"forall\", outputs, query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/874/buggy-version/jkind.src.jkind.solvers.z3.Z3Solver.java", "BodyUseAPI": [], "Fixed commit": "54f6ce428ffc1695642820ea6cfef8831ad63dce", "Url": "https://api.github.com/repos/backesj/jkind", "Date": "2015-02-10T00:35:40Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mp) != null) { mp.reset(); mp.setDataSource(songsList.get(songIndex).get(\"songPath\")); mp.prepare(); mp.setOnPreparedListener(new android.media.MediaPlayer.OnPreparedListener() { @java.lang.Override public void onPrepared(android.media.MediaPlayer mediaPlayer) { mp.start(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9009/buggy-version/app.src.main.java.nit.in.audiosense.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "113108ee4bd85e2e289c9f382dd5790c6fe46289", "Url": "https://api.github.com/repos/nitinnaikwadi1/JackBot", "Date": "2016-08-08T11:16:39Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editMode) == (edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectPanel.Mode.CREATE)) { cmbStatus.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4879/buggy-version/DefectTracker.src.edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectPanel.java", "BodyUseAPI": [], "Fixed commit": "54d6fb77715b70788e1098382be35c455ff317eb", "Url": "https://api.github.com/repos/fracture91/wpi-suite-tng", "Date": "2013-01-23T01:07:58Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event instanceof org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent) { assert last == null; aggregateEvent = ((org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent) (event)); }else if (last == null) { aggregateEvent = org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.getAggregatedEvent(event, eventCountOnCreation); }else { assert last instanceof org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent; org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent aggregateLastEvent = ((org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent) (last)); aggregateEvent = org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.appendOneEditEvent(aggregateLastEvent, event, eventCountOnCreation, toNewDuration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5152/buggy-version/org.eclipse.mylyn.context.core.src.org.eclipse.mylyn.internal.context.core.DegreeOfInterest.java", "BodyUseAPI": ["org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.appendOneEditEvent(org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent,org.eclipse.mylyn.monitor.core.InteractionEvent,int,boolean)", "org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.getAggregatedEvent(org.eclipse.mylyn.monitor.core.InteractionEvent,int)"], "Fixed commit": "6c3dab8b3a0f7d2119e1c274bfbf32126dca0777", "Url": "https://api.github.com/repos/conachang/mylyn.context", "Date": "2015-05-28T07:39:07Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attackDamage > 0) life -= attackDamage;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8526/buggy-version/src.main.java.br.unicap.cardgame.model.Char.java", "BodyUseAPI": [], "Fixed commit": "ea6a9e650f1577f456db5f8c585d84789ea8b3e6", "Url": "https://api.github.com/repos/gcaraciolo/cardgame", "Date": "2016-03-31T18:21:42Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null == vehicleJsonString) || (vehicleJsonString.isEmpty())) { java.lang.System.out.println(((\"line \" + i) + \" is empty\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5147/buggy-version/src.main.java.com.daimler.controllers.DataController.java", "BodyUseAPI": [], "Fixed commit": "a09e929d2b0449269ae9821011067448d503130a", "Url": "https://api.github.com/repos/Thoughtworks-Wuhan/DaimlerHack-SyncTask", "Date": "2017-08-06T15:07:50Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.societies.privacytrust.trust.api.repo.ITrustRepository.retrieveEntity(org.societies.api.privacytrust.trust.model.TrustedEntityId,org.societies.api.privacytrust.trust.model.TrustedEntityId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((entity.getUserPerceivedTrust().getValue()) != null) trustRelationship = new org.societies.api.privacytrust.trust.model.TrustRelationship(trustorId, trusteeId, trustValueType, entity.getUserPerceivedTrust().getValue(), entity.getUserPerceivedTrust().getLastUpdated());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6391/buggy-version/privacy-trust.java.trust.trust-cloud-bundle.src.main.java.org.societies.privacytrust.trust.impl.InternalTrustBroker.java", "BodyUseAPI": ["entity.getUserPerceivedTrust().getLastUpdated()", "org.societies.privacytrust.trust.api.model.ITrustedEntity.getUserPerceivedTrust()", "entity.getUserPerceivedTrust().getValue()", "org.societies.privacytrust.trust.api.model.ITrustedEntity.getUserPerceivedTrust()"], "Fixed commit": "80725d0e4719eb192a7a82d92eb9211b9ef5c836", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-04-09T00:01:31Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.societies.privacytrust.trust.api.repo.ITrustRepository.retrieveEntity(org.societies.api.privacytrust.trust.model.TrustedEntityId,org.societies.api.privacytrust.trust.model.TrustedEntityId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((entity.getIndirectTrust().getValue()) != null) trustRelationship = new org.societies.api.privacytrust.trust.model.TrustRelationship(trustorId, trusteeId, trustValueType, entity.getIndirectTrust().getValue(), entity.getIndirectTrust().getLastUpdated());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6391/buggy-version/privacy-trust.java.trust.trust-cloud-bundle.src.main.java.org.societies.privacytrust.trust.impl.InternalTrustBroker.java", "BodyUseAPI": ["entity.getIndirectTrust().getLastUpdated()", "entity.getIndirectTrust().getValue()", "org.societies.privacytrust.trust.api.model.ITrustedEntity.getIndirectTrust()", "org.societies.privacytrust.trust.api.model.ITrustedEntity.getIndirectTrust()"], "Fixed commit": "80725d0e4719eb192a7a82d92eb9211b9ef5c836", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-04-09T00:01:31Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.societies.privacytrust.trust.api.repo.ITrustRepository.retrieveEntity(org.societies.api.privacytrust.trust.model.TrustedEntityId,org.societies.api.privacytrust.trust.model.TrustedEntityId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((entity.getDirectTrust().getValue()) != null) trustRelationship = new org.societies.api.privacytrust.trust.model.TrustRelationship(trustorId, trusteeId, trustValueType, entity.getDirectTrust().getValue(), entity.getDirectTrust().getLastUpdated());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6391/buggy-version/privacy-trust.java.trust.trust-cloud-bundle.src.main.java.org.societies.privacytrust.trust.impl.InternalTrustBroker.java", "BodyUseAPI": ["org.societies.privacytrust.trust.api.model.ITrustedEntity.getDirectTrust()", "entity.getDirectTrust().getValue()", "org.societies.privacytrust.trust.api.model.ITrustedEntity.getDirectTrust()", "entity.getDirectTrust().getLastUpdated()"], "Fixed commit": "80725d0e4719eb192a7a82d92eb9211b9ef5c836", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-04-09T00:01:31Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nutz.dao.sql.DaoStatement.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((ctx == null) || ((ctx.getPager()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6337/buggy-version/src.org.nutz.dao.impl.jdbc.AbstractJdbcExpert.java", "BodyUseAPI": [], "Fixed commit": "988558d426b7c4158def9e00612ff9c42b19976b", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2012-05-02T03:36:52Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (daoStatement == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6337/buggy-version/src.org.nutz.dao.impl.jdbc.AbstractJdbcExpert.java", "BodyUseAPI": [], "Fixed commit": "988558d426b7c4158def9e00612ff9c42b19976b", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2012-05-02T03:36:52Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((offset + count) > (cdata.length())) { count = (cdata.length()) - offset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3032/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": ["org.exist.util.XMLString.length()"], "Fixed commit": "0859424dcf79f568676bf33ca4b05949bfec2d7e", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-07T15:20:30Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (angle < 0.0) angle = (2.0 * (java.lang.Math.PI)) + angle;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5631/buggy-version/latexdraw-core.net.sf.latexdraw.src.main.net.sf.latexdraw.generators.svg.LCircleArcSVGGenerator.java", "BodyUseAPI": [], "Fixed commit": "98ab069c0d9d32cc7a728ac16d05d8581dd22d55", "Url": "https://api.github.com/repos/arnobl/latexdraw", "Date": "2013-04-14T18:54:22Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (angle < 0.0) angle = (2.0 * (java.lang.Math.PI)) + angle;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5631/buggy-version/latexdraw-core.net.sf.latexdraw.src.main.net.sf.latexdraw.generators.svg.LCircleArcSVGGenerator.java", "BodyUseAPI": [], "Fixed commit": "98ab069c0d9d32cc7a728ac16d05d8581dd22d55", "Url": "https://api.github.com/repos/arnobl/latexdraw", "Date": "2013-04-14T18:54:22Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentResolver.getType(android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mimeType == null) { mimeType = it.feio.android.omninotes.utils.StorageManager.getMimeType(uri.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6453/buggy-version/src.it.feio.android.omninotes.utils.StorageManager.java", "BodyUseAPI": [], "Fixed commit": "1311a9723daf30ae523cbcc03ed30d4c07be0441", "Url": "https://api.github.com/repos/federicoiosue/Omni-Notes", "Date": "2014-03-28T23:20:51Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((foundDataLength) >= 0) { ret.receive(new freenet.client.events.ExpectedFileSizeEvent(foundDataLength), context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5969/buggy-version/src.freenet.node.fcp.ClientGet.java", "BodyUseAPI": [], "Fixed commit": "0e347828306ea8d280823a5d2b12558a09b26d18", "Url": "https://api.github.com/repos/toad/fred-staging", "Date": "2014-09-06T18:55:57Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.worldObj.isRemote)) { int meta = this.worldObj.getBlockMetadata(this.xCoord, this.yCoord, this.zCoord); if (this.worldObj.isBlockIndirectlyGettingPowered(xCoord, yCoord, zCoord)) { this.EmitBridge(meta); }else { this.unEmitBridge(meta); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1710/buggy-version/Iamshortman.DragonsReach.Common.TileEntity.TileEntityRainbowBridgeEmitter.java", "BodyUseAPI": ["this.worldObj.getBlockMetadata(this.xCoord,this.yCoord,this.zCoord)", "this.worldObj.isBlockIndirectlyGettingPowered(Iamshortman.DragonsReach.Common.TileEntity.TileEntityRainbowBridgeEmitter,Iamshortman.DragonsReach.Common.TileEntity.TileEntityRainbowBridgeEmitter,Iamshortman.DragonsReach.Common.TileEntity.TileEntityRainbowBridgeEmitter)"], "Fixed commit": "cdf561ca93a0267ba8ec1eb83eea6af661959644", "Url": "https://api.github.com/repos/Iamshortman/Dragons-Reach", "Date": "2013-07-05T23:56:48Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["URLList.loadList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((aList.size()) > 0) { java.lang.StringBuffer buffer = new java.lang.StringBuffer(); for (int i = 0; i < ((aList.size()) - 1); i++) { buffer.append(((aList.get(i)) + \"\\n\")); } buffer.append(aList.get(((aList.size()) - 1))); textInput.setText(buffer.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3495/buggy-version/src.Batoto.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.size()", "java.lang.StringBuffer.append(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "df781ec70537276b67a46d04994a974bc89a27ed", "Url": "https://api.github.com/repos/koroshiya/batoto-downloader", "Date": "2013-10-26T06:34:20Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((c.getAlignment()) == (JIHAD)) || ((c.getAlignment()) == (NEUTRAL))) { java.lang.System.out.println(\"Event unplayable, playing for ops.\"); playForOps(c.getOps()); }else { java.lang.System.out.println(\"Do you want:\"); java.lang.System.out.println(\"1: The event to happen first\"); java.lang.System.out.println(\"2: To play the ops first\"); int userInput = inputLoop(1, 2); if (userInput == 1) { freeWarOnTerror.Game.playCard(c); playForOps(c.getOps()); }else { playForOps(c.getOps()); freeWarOnTerror.Game.playCard(c); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6550/buggy-version/src.freeWarOnTerror.Players.PlayerJihadist.java", "BodyUseAPI": ["freeWarOnTerror.abClasses.Card.getOps()", "freeWarOnTerror.Players.PlayerJihadist.playForOps(c.getOps())", "freeWarOnTerror.Game.playCard(freeWarOnTerror.abClasses.Card)", "freeWarOnTerror.Game.playCard(freeWarOnTerror.abClasses.Card)", "freeWarOnTerror.Players.PlayerJihadist.playForOps(c.getOps())", "freeWarOnTerror.Players.PlayerJihadist.playForOps(c.getOps())", "freeWarOnTerror.abClasses.Card.getOps()", "freeWarOnTerror.abClasses.Card.getOps()"], "Fixed commit": "792b1ddecc3a883e06fa719f316f59bb5bba8a2d", "Url": "https://api.github.com/repos/wachsmuth/freeWarOnTerror", "Date": "2014-11-02T20:02:21Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page < 1) { return new java.util.ArrayList<T>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7629/buggy-version/src.myprefix.utils.PageCreater.java", "BodyUseAPI": [], "Fixed commit": "fbac111c70e59ec156584e44d77f79bec9e1ff2f", "Url": "https://api.github.com/repos/MCFT-Server/MyPrefix", "Date": "2016-10-30T12:08:29Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((args.size()) - 1) > fromindex) && (((args.size()) - 1) < toindex)) toindex = args.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7629/buggy-version/src.myprefix.utils.PageCreater.java", "BodyUseAPI": ["java.util.List<T>.size()"], "Fixed commit": "fbac111c70e59ec156584e44d77f79bec9e1ff2f", "Url": "https://api.github.com/repos/MCFT-Server/MyPrefix", "Date": "2016-10-30T12:08:29Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state == (this.state)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1528/buggy-version/slidingdrawer.src.main.java.com.pierfrancescosoffritti.slidingdrawer.SlidingDrawer.java", "BodyUseAPI": [], "Fixed commit": "cfb91422133c7d3565738cb9a9ffd19b11a051f0", "Url": "https://api.github.com/repos/PierfrancescoSoffritti/sliding-drawer", "Date": "2016-07-20T20:55:38Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsonString == null) return getCatanModel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8074/buggy-version/src.shared.model.ModelFacade.java", "BodyUseAPI": [], "Fixed commit": "937d99dcaee77fb14029f7945d504652e277bfca", "Url": "https://api.github.com/repos/Beefster09/cs340-catan", "Date": "2015-11-18T22:16:55Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scanner.getInput().contains(\"blockquote\")) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7940/buggy-version/src.main.java.de.neuland.jade4j.lexer.Lexer.java", "BodyUseAPI": [], "Fixed commit": "4b8aa0caeaa9c1a3f0518217e242ae0c324efc90", "Url": "https://api.github.com/repos/ashish12/jade4j", "Date": "2013-04-16T17:43:23Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addToOverlay) { if ((sceneRoot == null) || (!(sceneRoot.isAttachedToWindow()))) { return null; } sceneRoot.getOverlay().add(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3078/buggy-version/core.java.android.transition.TransitionUtils.java", "BodyUseAPI": [], "Fixed commit": "dbd11d6c8b3f6a1bae40dbfd050a3baf79ae5ddb", "Url": "https://api.github.com/repos/aosp-mirror/platform_frameworks_base", "Date": "2017-10-02T20:36:06Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addToOverlay) { sceneRoot.getOverlay().remove(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3078/buggy-version/core.java.android.transition.TransitionUtils.java", "BodyUseAPI": [], "Fixed commit": "dbd11d6c8b3f6a1bae40dbfd050a3baf79ae5ddb", "Url": "https://api.github.com/repos/aosp-mirror/platform_frameworks_base", "Date": "2017-10-02T20:36:06Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rodada.getMudouJogador()) == true) rodada.setMudouJogador(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3208/buggy-version/src.Main.java", "BodyUseAPI": ["Rodada.setMudouJogador(boolean)"], "Fixed commit": "3fcb38e2cb3f567b83061ac0dd9307797e83ef2e", "Url": "https://api.github.com/repos/Bruwald/trabPOO", "Date": "2017-06-01T15:54:33Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (image == null) { return new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6905/buggy-version/src.com.klinker.android.send_message.Message.java", "BodyUseAPI": [], "Fixed commit": "bdcd3e6254ab180f4d47dda542368db2f2826a44", "Url": "https://api.github.com/repos/klinker41/android-smsmms", "Date": "2014-01-14T18:19:25Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasPickedUp) { container.onContainerClosed(entityPlayer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6345/buggy-version/src.main.java.de.eydamos.backpack.util.BackpackUtil.java", "BodyUseAPI": [], "Fixed commit": "f209f03451521480e61995a7da09f49170fdc634", "Url": "https://api.github.com/repos/runescapejon/Minecraft-Backpack-Mod", "Date": "2016-05-18T15:05:00Z"},
{"Line": "=>2663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (multiNameToSubsMap.containsKey(usedArray.get(i))) { name = multiNameToSubsMap.get(usedArray.get(i)); }else { name = usedArray.get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3925/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "056711fd925d6e98850c311585267785d7ef2e9d", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-05-02T20:41:06Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(SessionListener.USER_IN_SESSION)", "request.getServletContext().getAttribute(ContextInitializer.DATABASE_ATTRIBUTE_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((currentUser == null) || (db == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9162/buggy-version/src.sourcePackage.UserStatusServlet.java", "BodyUseAPI": [], "Fixed commit": "53ebd4ac761ad2c95a6751e6f242d313ced5bbc5", "Url": "https://api.github.com/repos/IKhaduri/QuizWebsite", "Date": "2016-06-14T12:53:34Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connection == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9162/buggy-version/src.sourcePackage.Factory.java", "BodyUseAPI": [], "Fixed commit": "53ebd4ac761ad2c95a6751e6f242d313ced5bbc5", "Url": "https://api.github.com/repos/IKhaduri/QuizWebsite", "Date": "2016-06-14T12:53:34Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((conference_package.UserInterface.conferenceList) == null) || ((conference_package.UserInterface.userList) == null)) { try { conference_package.UserInterface.buildTestingFiles(); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Creating Files Failed\"); } conference_package.UserInterface.userList = conference_package.UserInterface.urw.readUsers(); conference_package.UserInterface.conferenceList = conference_package.UserInterface.crw.readConferences(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4463/buggy-version/conference_package.UserInterface.java", "BodyUseAPI": [], "Fixed commit": "2bb861fc9cac459598ac6b76fe704e330d932f21", "Url": "https://api.github.com/repos/TCSS360A-Group2-2017/ConferenceProject", "Date": "2017-05-08T06:04:22Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.obtainStyledAttributes(android.util.AttributeSet,R.styleable.MaterialSearchView,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (typedArray.hasValue(R.styleable.MaterialSearchView_android_inputType)) { setInputType(typedArray.getInteger(R.styleable.MaterialSearchView_android_inputType, InputType.TYPE_CLASS_TEXT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2302/buggy-version/library.src.main.java.br.com.mauker.materialsearchview.MaterialSearchView.java", "BodyUseAPI": ["br.com.mauker.materialsearchview.MaterialSearchView.setInputType(typedArray.getInteger(R.styleable.MaterialSearchView_android_inputType, InputType.TYPE_CLASS_TEXT))", "android.content.res.TypedArray.getInteger(R.styleable.MaterialSearchView_android_inputType,InputType.TYPE_CLASS_TEXT)"], "Fixed commit": "f9384119f500dab0f9635b395715c08c1047f121", "Url": "https://api.github.com/repos/AdamMc331/MaterialSearchView-1", "Date": "2016-07-20T02:41:45Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.length) > 3) { for (java.lang.String str : line[3].split(\",\")) { tempAltNames.put(str.trim().toLowerCase(), java.lang.Integer.parseInt(line[0])); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8924/buggy-version/service.src.main.java.org.cherno.twapp2.service.city.CityCheckerGeoNames.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)"], "Fixed commit": "a3ee33db947b9c38e1c1df6466c946f4397b3696", "Url": "https://api.github.com/repos/Cherno7/twapp2", "Date": "2015-07-09T10:09:16Z"},
{"Line": "=>630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((campaignResults) == null)) { for (org.ohmage.domain.campaign.Campaign campaign : campaignResults) { campaignIds.add(campaign.getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/774/buggy-version/src.org.ohmage.request.campaign.CampaignReadRequest.java", "BodyUseAPI": [], "Fixed commit": "cc7e56dd8c0957fd56e8d54e84ce480328ad1d91", "Url": "https://api.github.com/repos/ohmage/server", "Date": "2016-03-31T17:47:13Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((target.getLocation().getBlock().getType()) != (org.bukkit.Material.AIR)) { target.teleport(loc2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7779/buggy-version/AnnihilationKits.src.com.gmail.lynx7478.kits.kits.Scorpio.java", "BodyUseAPI": ["org.bukkit.entity.Player.teleport(org.bukkit.Location)"], "Fixed commit": "847a5f25de4b383c56640e7df3bf11775d078725", "Url": "https://api.github.com/repos/muresame/AssaultTheNexusKits", "Date": "2016-07-27T10:19:34Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hp > 20) hp = 20;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8386/buggy-version/src.me.libraryaddict.librarys.Abilities.CookieMonster.java", "BodyUseAPI": [], "Fixed commit": "6ef22cc3ced6b4a84f77fd5c769a5c997c501123", "Url": "https://api.github.com/repos/libraryaddict/LibsMcpvp", "Date": "2013-07-21T07:36:57Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (key.equals(\"crypt\")) value = crypt; else if (key.equals(\"post\")) value = \"1\"; else if (key.equals(\"post_official\")) value = \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6694/buggy-version/app.src.main.java.de.readmoreelite.view.ThreadActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "2ed49f5ed7f964eb021f80d36a7d7b79323daedf", "Url": "https://api.github.com/repos/tobibechtold/ReadmoreElite", "Date": "2015-06-24T14:34:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nisum.portal.service.api.CategoriesService.addCategory(com.nisum.portal.service.dto.CategoriesDTO)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (servicedto.isStatus()) return new org.springframework.http.ResponseEntity<com.nisum.portal.service.dto.ServiceStatusDto>(servicedto, org.springframework.http.HttpStatus.OK); else throw new com.nisum.portal.service.exception.CategoryServiceException(com.nisum.portal.util.KeyConstants.CATEGORY_EXISTS);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8404/buggy-version/PortalServices.portal-rest-service.src.main.java.com.nisum.portal.rest.api.CategoriesRestService.java", "BodyUseAPI": [], "Fixed commit": "4371abd6b88a93f2abccb15b4c7f7c26a932cf31", "Url": "https://api.github.com/repos/nisumportal/portal", "Date": "2017-09-21T10:10:19Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cMsg.getHeaders().contains(Constants.HOST))) { if (port != 80) { cMsg.getHeaders().set(Constants.HOST, ((host + \":\") + port)); }else { cMsg.getHeaders().set(Constants.HOST, host); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/965/buggy-version/modules.ballerina-http.src.main.java.org.ballerinalang.net.http.actions.AbstractHTTPAction.java", "BodyUseAPI": ["cMsg.getHeaders().set(Constants.HOST,java.lang.String)", "org.wso2.carbon.transport.http.netty.message.HTTPCarbonMessage.getHeaders()", "org.wso2.carbon.transport.http.netty.message.HTTPCarbonMessage.getHeaders()", "cMsg.getHeaders().set(Constants.HOST,java.lang.String)"], "Fixed commit": "1afb5a73a3a469011921db2f2f8380e9a6f817ae", "Url": "https://api.github.com/repos/irunika/ballerina", "Date": "2017-10-18T14:39:01Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mikepenz.materialdrawer.Drawer.getDrawerItem(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pdi.isSelected()) { com.bradleyramunas.quizzedv2.FragmentHomeScreen homeScreen = new com.bradleyramunas.quizzedv2.FragmentHomeScreen(); changeFragment(homeScreen); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1428/buggy-version/app.src.main.java.com.bradleyramunas.quizzedv2.QuizSelect.java", "BodyUseAPI": [], "Fixed commit": "23e64efb331127e3f28ce105f5b24f562db7c279", "Url": "https://api.github.com/repos/bradleyramunas/Quizzed", "Date": "2016-09-05T12:58:49Z"},
{"Line": "=>1174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(messageQueue.isEmpty())) { showNextMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6448/buggy-version/app.src.main.java.com.gmail.markdevw.wetube.activities.UsersActivity.java", "BodyUseAPI": [], "Fixed commit": "6199020ce5deff3b27ce0f93092711bf32648f59", "Url": "https://api.github.com/repos/MkWf/WeTube", "Date": "2015-04-22T19:52:10Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(this.datasourceResolver)) { mondrian.olap.MondrianProperties.instance().DataSourceResolverClass.setString(this.datasourceResolver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6591/buggy-version/saiku-bi-platform-plugin-p5.src.main.java.org.saiku.plugin.PentahoDatasourceManager.java", "BodyUseAPI": ["mondrian.olap.MondrianProperties.instance().DataSourceResolverClass.setString(java.lang.String)"], "Fixed commit": "a77bd0abc41692335b9c01bbebbeaa2979d446ff", "Url": "https://api.github.com/repos/OSBI/saiku", "Date": "2013-12-19T17:50:41Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(super.onMenuItemSelected(featureId, item))) { android.support.v4.app.NavUtils.navigateUpFromSameTask(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7561/buggy-version/app.src.main.java.com.example.abhijeetsinghkgp.popularmovies.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "515dd5a1f427efcb8323bb4cfa1b76ae98cdf6ff", "Url": "https://api.github.com/repos/stonesandpebbles/PopularMovies", "Date": "2017-02-27T17:38:04Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((connection != null) && (!(connection.isClosed()))) { setNetworkTimeout(connection, java.util.concurrent.TimeUnit.SECONDS.toMillis(30)); connection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7670/buggy-version/hikaricp-common.src.main.java.com.zaxxer.hikari.pool.PoolUtilities.java", "BodyUseAPI": ["com.zaxxer.hikari.pool.PoolUtilities.setNetworkTimeout(java.sql.Connection,long)", "java.sql.Connection.close()"], "Fixed commit": "dd87bbde86c3a1b944aa661bf6494bb8ee46d04e", "Url": "https://api.github.com/repos/brettwooldridge/HikariCP", "Date": "2015-01-29T12:00:48Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Global.userId.equals(\"\"))) { eUsername.setText(Global.userId); ePassword.setText(Global.userPwd); eGW.setText(ControlThread.target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8398/buggy-version/src.com.android.qiushi.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c1637ddc2adb14c0cffe0ed53d78482d2c9d68f4", "Url": "https://api.github.com/repos/lexluo/OctoHome", "Date": "2012-09-11T00:41:43Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.backend.self.SelfManagementController.uploadFirst(java.lang.String,m.id())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (file != null) { m.merchantImageSet.add(file.getFilename()); m.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/725/buggy-version/modules.quhao.appserver.app.controllers.backend.self.SelfManagementController.java", "BodyUseAPI": ["m.merchantImageSet.add(file.getFilename())", "com.mongodb.gridfs.GridFSInputFile.getFilename()"], "Fixed commit": "e718530211341c10a7c3c54baa04b77d06dd5eb6", "Url": "https://api.github.com/repos/withitergroup/quhao", "Date": "2013-09-25T14:22:11Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.windup.web.services.service.WindupExecutionService.getNoThrow(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (execution == null) { throw new javax.ws.rs.NotFoundException(\"Migration report not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2745/buggy-version/services.src.main.java.org.jboss.windup.web.services.servlet.FileDefaultServlet.java", "BodyUseAPI": [], "Fixed commit": "4f950c0e1cd2c513283dc70d5a98c11eeec02b08", "Url": "https://api.github.com/repos/OndraZizka/windup-web", "Date": "2017-07-24T13:17:15Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["crosstheborder.lib.Map.getTile(((tile.getLocation().x) + (dir.getCartesianRepresentation().x)),((tile.getLocation().y) + (dir.getCartesianRepresentation().y)))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (neighbour != null) { ret.add(neighbour); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2700/buggy-version/src.crosstheborder.lib.Map.java", "BodyUseAPI": ["java.util.List<crosstheborder.lib.Tile>.add(crosstheborder.lib.Tile)"], "Fixed commit": "7e37613d1cdc803bddaa09ec54c5cdaa4fe687bc", "Url": "https://api.github.com/repos/ProftaakS34C/CrossTheBorder", "Date": "2016-10-16T20:30:41Z"},
{"Line": "=>803", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((srf.getPreferredProviders()) == null) || ((srf.getPreferredProviders().size()) == 0)) { preferredProviders = null; eu.arrowhead.core.orchestrator.OrchestratorService.log.info(\"No preferredProviders were given, sending ICNRequestForm without it.\"); }else { for (int i = 0; i < (srf.getPreferredClouds().size()); i++) { if (srf.getPreferredClouds().get(i).equals(targetCloud)) { if (((srf.getPreferredProviders().size()) > i) && (srf.getPreferredProviders().get(i).isValid())) { preferredProviders.add(srf.getPreferredProviders().get(i)); } } } eu.arrowhead.core.orchestrator.OrchestratorService.log.info(((preferredProviders.size()) + \" preferred providers selected for this Cloud.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2232/buggy-version/arrowhead.orchestrator.src.main.java.eu.arrowhead.core.orchestrator.OrchestratorService.java", "BodyUseAPI": ["eu.arrowhead.common.model.messages.ServiceRequestForm.getPreferredClouds()", "java.util.List<eu.arrowhead.common.model.ArrowheadSystem>.add(srf.getPreferredProviders().get(i))", "eu.arrowhead.common.model.messages.ServiceRequestForm.getPreferredClouds()", "srf.getPreferredClouds().get(i).equals(eu.arrowhead.common.model.ArrowheadCloud)", "srf.getPreferredClouds().size()", "srf.getPreferredProviders().size()", "eu.arrowhead.common.model.messages.ServiceRequestForm.getPreferredProviders()", "srf.getPreferredProviders().get(int)", "srf.getPreferredProviders().get(i).isValid()", "eu.arrowhead.common.model.messages.ServiceRequestForm.getPreferredProviders()", "srf.getPreferredClouds().get(int)", "eu.arrowhead.common.model.messages.ServiceRequestForm.getPreferredProviders()", "srf.getPreferredProviders().get(int)"], "Fixed commit": "b1854d3fd9b67c67cd0996b95ca6de20b2bbf6fb", "Url": "https://api.github.com/repos/hegeduscs/arrowhead", "Date": "2016-08-10T12:09:10Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.BlockState.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (blockData != null) { try { itemStack.setData(blockData); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5105/buggy-version/src.main.java.net.dmulloy2.swornrpg.listeners.BlockListener.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.setData(org.bukkit.material.MaterialData)"], "Fixed commit": "0bbef0fcd415e2fcd39895cf3d21e05ba132670c", "Url": "https://api.github.com/repos/dmulloy2/SwornRPG", "Date": "2013-05-26T02:11:47Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cbPrev != null) || (!(isClosed()))) { ctl.moveTo(ca.getX(), ca.getY()); ctl.lineTo(pt.getX(), pt.getY()); ctl.lineTo(cb.getX(), cb.getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2209/buggy-version/src.org.openstreetmap.josm.plugins.SplineDrawingTool.Spline.java", "BodyUseAPI": [], "Fixed commit": "6b226b4eba1f3af0f3e86c69d8751145ac537255", "Url": "https://api.github.com/repos/Upliner/splinex", "Date": "2015-05-13T10:26:01Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openstreetmap.josm.plugins.SplineDrawingTool.Spline.PointHandle.getSpline()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((spl.nodeCount()) == 3) && (spl.isClosed())) && ((ph.idx) == 1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2209/buggy-version/src.org.openstreetmap.josm.plugins.SplineDrawingTool.DrawSplineAction.java", "BodyUseAPI": [], "Fixed commit": "6b226b4eba1f3af0f3e86c69d8751145ac537255", "Url": "https://api.github.com/repos/Upliner/splinex", "Date": "2015-05-13T10:26:01Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.savedGames.get(player.getUsername())) == null) this.savedGames.put(player.getUsername(), new java.util.LinkedList<com.potatoes.cultivation.logic.CultivationGame>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/228/buggy-version/core.src.com.potatoes.cultivation.networking.Server.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<com.potatoes.cultivation.logic.CultivationGame>>.put(player.getUsername(),java.util.LinkedList<com.potatoes.cultivation.logic.CultivationGame>)", "com.potatoes.cultivation.logic.Player.getUsername()"], "Fixed commit": "1418f98790af8a6517b9cbe33082f5390ab0c82d", "Url": "https://api.github.com/repos/wayneleeyk/cultivationProject", "Date": "2015-04-04T05:27:42Z"},
{"Line": "=>2769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (account.isMarkMessageAsReadOnView()) { message.setFlag(Flag.SEEN, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2341/buggy-version/src.com.fsck.k9.controller.MessagingController.java", "BodyUseAPI": [], "Fixed commit": "7d4152fdd4566428c556d5aca23af7d1bfac445a", "Url": "https://api.github.com/repos/k9mail/k-9", "Date": "2012-09-10T02:15:37Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statusBar) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6737/buggy-version/app.src.main.java.io.alstonlin.thelearninglock.lockscreen.LockScreen.java", "BodyUseAPI": [], "Fixed commit": "38a004a3223662248e5fe8da816df98166347579", "Url": "https://api.github.com/repos/AlstonLin/TheLearningLock", "Date": "2017-02-28T03:35:21Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tomahawk.libtomahawk.utils.SerializableHttpCookie.decode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (cookie != null) { java.util.Set<java.net.HttpCookie> targetCookies = allCookies.get(uri); if (targetCookies == null) { targetCookies = new java.util.HashSet<>(); allCookies.put(uri, targetCookies); } targetCookies.add(cookie); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7138/buggy-version/app.src.main.java.org.tomahawk.libtomahawk.utils.PersistentCookieStore.java", "BodyUseAPI": ["java.util.Set<java.net.HttpCookie>.add(java.net.HttpCookie)"], "Fixed commit": "c2af6fd4030d7b1896422f97e8c052d10496f4d4", "Url": "https://api.github.com/repos/tomahawk-player/tomahawk-android", "Date": "2016-03-22T23:15:04Z"},
{"Line": "=>2640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.response) == (java.lang.Boolean.TRUE)) { record.setValueData(request.value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2221/buggy-version/hazelcast.src.main.java.com.hazelcast.impl.ConcurrentMapManager.java", "BodyUseAPI": ["com.hazelcast.impl.Record.setValueData(request.value)"], "Fixed commit": "6d191c78813e583df06d229432fa25351e4b22dd", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2012-06-11T13:12:56Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((analysis.getColumnHeaders()) != null) copyHeaders(heatmap.getColumnDim(), analysis.getColumnHeaders());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3183/buggy-version/gitools-ui-app.src.main.java.org.gitools.ui.analysis.groupcomparison.editor.GroupComparisonAnalysisEditor.java", "BodyUseAPI": ["org.gitools.ui.analysis.groupcomparison.editor.GroupComparisonAnalysisEditor.1.getColumnHeaders()", "org.gitools.ui.analysis.groupcomparison.editor.GroupComparisonAnalysisEditor.1.copyHeaders(heatmap.getColumnDim(),analysis.getColumnHeaders())"], "Fixed commit": "71e35ece3fd762d4a17ba9e43955d6cc09938b3d", "Url": "https://api.github.com/repos/gitools/gitools", "Date": "2013-04-10T12:01:57Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((analysis.getRowHeaders()) != null) copyHeaders(heatmap.getRowDim(), analysis.getRowHeaders());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3183/buggy-version/gitools-ui-app.src.main.java.org.gitools.ui.analysis.groupcomparison.editor.GroupComparisonAnalysisEditor.java", "BodyUseAPI": ["org.gitools.ui.analysis.groupcomparison.editor.GroupComparisonAnalysisEditor.1.copyHeaders(heatmap.getRowDim(),analysis.getRowHeaders())", "org.gitools.ui.analysis.groupcomparison.editor.GroupComparisonAnalysisEditor.1.getRowHeaders()"], "Fixed commit": "71e35ece3fd762d4a17ba9e43955d6cc09938b3d", "Url": "https://api.github.com/repos/gitools/gitools", "Date": "2013-04-10T12:01:57Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (jsonObject.has(com.example.karhades_pc.tag_it.NfcTag.JSON_DATE_SOLVED)) { dateSolved = jsonObject.getString(com.example.karhades_pc.tag_it.NfcTag.JSON_DATE_SOLVED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5436/buggy-version/app.src.main.java.com.example.karhades_pc.tag_it.NfcTag.java", "BodyUseAPI": [], "Fixed commit": "2c79b89e92ff1f96e8f969de3510914e12a133d6", "Url": "https://api.github.com/repos/karhades/tag-it", "Date": "2015-10-16T11:13:24Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aupDAO.getVOAUP().getActiveVersion()", "request.getRequesterInfo().getInfo(SubmitRequestAction.SIGNED_AUP_VERSION_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((signedAUPVersion == null) || (currentAUPVersion.getVersion().equals(signedAUPVersion))) { org.glite.security.voms.admin.persistence.dao.VOMSUserDAO.instance().signAUP(user, aupDAO.getVOAUP()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4400/buggy-version/src.main.java.org.glite.security.voms.admin.operations.requests.HandleVOMembershipRequest.java", "BodyUseAPI": [], "Fixed commit": "f1580454ddcc3e1a18ffec227bc974e158ac2abd", "Url": "https://api.github.com/repos/italiangrid/voms-admin-server", "Date": "2013-01-11T17:25:49Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(list.isEmpty())) sb.delete(((sb.length()) - (separator.length())), sb.length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2125/buggy-version/capsule-util.src.main.java.co.paralleluniverse.capsule.Jar.java", "BodyUseAPI": [], "Fixed commit": "b0588da922cc0c7009fb986b7c67cb742fa5cf28", "Url": "https://api.github.com/repos/puniverse/capsule", "Date": "2015-02-02T14:31:33Z"},
{"Line": "=>743", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(map.isEmpty())) sb.delete(((sb.length()) - (separator.length())), sb.length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2125/buggy-version/capsule-util.src.main.java.co.paralleluniverse.capsule.Jar.java", "BodyUseAPI": [], "Fixed commit": "b0588da922cc0c7009fb986b7c67cb742fa5cf28", "Url": "https://api.github.com/repos/puniverse/capsule", "Date": "2015-02-02T14:31:33Z"},
{"Line": "=>3601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (map.isEmpty()) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2125/buggy-version/capsule.src.main.java.Capsule.java", "BodyUseAPI": [], "Fixed commit": "b0588da922cc0c7009fb986b7c67cb742fa5cf28", "Url": "https://api.github.com/repos/puniverse/capsule", "Date": "2015-02-02T14:31:33Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (allFiles != null) { for (java.io.File f : allFiles) { long trashDate = getFileTrashDate(f, fileExtension, trashMinutes); if ((f.isFile()) && ((java.lang.System.currentTimeMillis()) > trashDate)) { f.delete(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2892/buggy-version/lib.src.main.java.com.carrotcreative.cream.cache.CacheManager.java", "BodyUseAPI": [], "Fixed commit": "a682b066ac2394e279ca87830bee037f9a2d40ac", "Url": "https://api.github.com/repos/carrot/CREAM", "Date": "2014-06-06T14:10:56Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.awt.EventQueue.isDispatchThread()) { try { mTree.expandPath(treePath); } catch (java.lang.Exception e) { org.freeplane.core.util.LogUtils.warn(\"TreeView.expandPath(): \", e); } }else { try { javax.swing.SwingUtilities.invokeAndWait(new java.lang.Runnable() { public void run() { try { mTree.expandPath(treePath); } catch (java.lang.Exception e) { org.freeplane.core.util.LogUtils.warn(\"TreeView.expandPath(): \", e); } } }); } catch (java.lang.Exception e) { org.freeplane.core.util.LogUtils.warn(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4104/buggy-version/freeplane_plugin_workspace.src.org.freeplane.plugin.workspace.components.TreeView.java", "BodyUseAPI": [], "Fixed commit": "561a4bc5e3b9964d9c87c549a9784af92ef7ad73", "Url": "https://api.github.com/repos/Docear/Desktop", "Date": "2013-09-03T16:03:39Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.format(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((formattedStr.length()) > fieldLen) { throw new eu.itesla_project.ucte.network.io.UcteIoException((((\"Integer value does not fit into \" + fieldLen) + \" characters: \") + value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2097/buggy-version/ucte-network.src.main.java.eu.itesla_project.ucte.network.io.UcteRecordWriter.java", "BodyUseAPI": [], "Fixed commit": "85cbcdca0d4d4666a89f15ea71ca07a6f5985aac", "Url": "https://api.github.com/repos/itesla/ipst-entsoe", "Date": "2017-04-04T13:32:49Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != authors) { java.lang.String[] authorsArr = authors.split(\",\"); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setLines(authorsArr.length); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(authors.replace(\",\", \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6364/buggy-version/productionApps.alexandria.app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "8977eaf25cb2729ae14c1b9c993b7df42ec9ddf1", "Url": "https://api.github.com/repos/virtual4real/androidNanoDegree", "Date": "2016-03-14T22:30:53Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.BookEntry.IMAGE_URL))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != imgUrl) { if (Patterns.WEB_URL.matcher(imgUrl).matches()) { new it.jaschke.alexandria.services.DownloadImage(((android.widget.ImageView) (rootView.findViewById(R.id.bookCover)))).execute(imgUrl); rootView.findViewById(R.id.bookCover).setVisibility(View.VISIBLE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6364/buggy-version/productionApps.alexandria.app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": ["Patterns.WEB_URL.matcher(java.lang.String)", "it.jaschke.alexandria.services.DownloadImage.execute(java.lang.String)", "Patterns.WEB_URL.matcher(imgUrl).matches()"], "Fixed commit": "8977eaf25cb2729ae14c1b9c993b7df42ec9ddf1", "Url": "https://api.github.com/repos/virtual4real/androidNanoDegree", "Date": "2016-03-14T22:30:53Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pictUrl.startsWith(\"http\")) { return pictUrl; }else { return \"http:\" + (pictUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/524/buggy-version/tao.src.main.java.org.maxwe.tao.android.goods.alimama.GoodsEntity.java", "BodyUseAPI": [], "Fixed commit": "83ec0a73308bd169f56e96477b8baecc8196f8bb", "Url": "https://api.github.com/repos/QQ1350995917/MaxweTaoAndroid", "Date": "2017-05-07T10:09:24Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score) > 0) { performanceMeasure *= score; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4722/buggy-version/src.main.java.br.com.tpartner.persistence.model.TrajectorySummary.java", "BodyUseAPI": [], "Fixed commit": "37b703d7287dab1ab1763ece7724f725d4fb8081", "Url": "https://api.github.com/repos/sergioamorim/t-partner-ps", "Date": "2017-08-19T20:56:32Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/210/buggy-version/tsp.VisualizerImpl.java", "BodyUseAPI": [], "Fixed commit": "f46f74491d2002147763b9c8804e5ff6adde9acd", "Url": "https://api.github.com/repos/JonathanMurray/tsp", "Date": "2014-12-04T13:00:50Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((info.client) != null) { info.client.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8556/buggy-version/src.jvm.backtype.storm.spout.KestrelSpout.java", "BodyUseAPI": ["backtype.storm.spout.KestrelClient.close()"], "Fixed commit": "50f8043a1b9ba23179584b781eb4963018b12d6a", "Url": "https://api.github.com/repos/nathanmarz/storm-kestrel", "Date": "2011-09-22T23:40:53Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ui.CustomAsciiTerminal.getEvent()", "main.ChiptuneTracker.getInstance().getData().patterns.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((event.getKeyCode()) == (java.awt.event.KeyEvent.VK_2)) && ((pattern.getList().get(sampleCursor)) != null)) { setSound(Note.C_D); }else if (((event.getKeyCode()) == (java.awt.event.KeyEvent.VK_W)) && ((pattern.getList().get(sampleCursor)) != null)) { setSound(Note.D); }else if (((event.getKeyCode()) == (java.awt.event.KeyEvent.VK_3)) && ((pattern.getList().get(sampleCursor)) != null)) { setSound(Note.D_D); }else if (((event.getKeyCode()) == (java.awt.event.KeyEvent.VK_E)) && ((pattern.getList().get(sampleCursor)) != null)) { setSound(Note.E); }else if (((event.getKeyCode()) == (java.awt.event.KeyEvent.VK_R)) && ((pattern.getList().get(sampleCursor)) != null)) { setSound(Note.F); }else if (((event.getKeyCode()) == (java.awt.event.KeyEvent.VK_5)) && ((pattern.getList().get(sampleCursor)) != null)) { setSound(Note.F_D); }else if (((event.getKeyCode()) == (java.awt.event.KeyEvent.VK_T)) && ((pattern.getList().get(sampleCursor)) != null)) { setSound(Note.G); }else if (((event.getKeyCode()) == (java.awt.event.KeyEvent.VK_6)) && ((pattern.getList().get(sampleCursor)) != null)) { setSound(Note.G_D); }else if (((event.getKeyCode()) == (java.awt.event.KeyEvent.VK_Y)) && ((pattern.getList().get(sampleCursor)) != null)) { setSound(Note.A); }else if (((event.getKeyCode()) == (java.awt.event.KeyEvent.VK_7)) && ((pattern.getList().get(sampleCursor)) != null)) { setSound(Note.A_D); }else if (((event.getKeyCode()) == (java.awt.event.KeyEvent.VK_U)) && ((pattern.getList().get(sampleCursor)) != null)) { setSound(Note.B); }else if ((((event.getKeyCode()) >= (java.awt.event.KeyEvent.VK_NUMPAD0)) && ((event.getKeyCode()) <= (java.awt.event.KeyEvent.VK_NUMPAD9))) && ((pattern.getList().get(sampleCursor)) != null)) { if ((soundConfCursor) == 1) { setOctave(((event.getKeyCode()) - 96)); }else if ((soundConfCursor) == 2) { setInstrument(((event.getKeyCode()) - 96)); }else if ((soundConfCursor) == 3) { setVolume(((event.getKeyCode()) - 96)); } }else if (((event.getKeyCode()) == (java.awt.event.KeyEvent.VK_DELETE)) && ((pattern.getList().get(sampleCursor)) != null)) { deleteSound(); }else if ((event.getKeyCode()) == (java.awt.event.KeyEvent.VK_SPACE)) { if ((!(chanels.isPlaySample())) && (!(chanels.isPlayPattern()))) { chanels.playPattern(patternCursor); }else { chanels.stopPattern(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/478/buggy-version/src.main.PatternView.java", "BodyUseAPI": ["java.awt.event.KeyEvent.getKeyCode()", "pattern.getList().get(int)", "java.awt.event.KeyEvent.getKeyCode()", "pattern.getList().get(int)", "java.awt.event.KeyEvent.getKeyCode()", "main.Pattern.getList()", "main.Pattern.getList()", "main.Pattern.getList()", "java.awt.event.KeyEvent.getKeyCode()", "pattern.getList().get(int)", "java.awt.event.KeyEvent.getKeyCode()", "main.Pattern.getList()", "java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()", "pattern.getList().get(int)", "pattern.getList().get(int)", "pattern.getList().get(int)", "java.awt.event.KeyEvent.getKeyCode()", "main.Pattern.getList()", "main.Pattern.getList()", "java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()", "pattern.getList().get(int)", "java.awt.event.KeyEvent.getKeyCode()", "main.PatternView.setVolume(int)", "main.Pattern.getList()", "pattern.getList().get(int)", "main.Pattern.getList()", "main.Pattern.getList()", "java.awt.event.KeyEvent.getKeyCode()", "pattern.getList().get(int)", "main.Pattern.getList()", "main.PatternView.setInstrument(int)", "pattern.getList().get(int)", "java.awt.event.KeyEvent.getKeyCode()", "pattern.getList().get(int)", "java.awt.event.KeyEvent.getKeyCode()", "main.Pattern.getList()", "java.awt.event.KeyEvent.getKeyCode()", "pattern.getList().get(int)", "java.awt.event.KeyEvent.getKeyCode()", "main.Pattern.getList()", "main.PatternView.setOctave(int)"], "Fixed commit": "0a376aadb3499afdc1ea7d8911e015ed67ad774c", "Url": "https://api.github.com/repos/julianmaster/ChiptuneTracker", "Date": "2016-08-26T15:20:19Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((slot.getBoard().getBoardId()) == 0) { slot.setBoard(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1396/buggy-version/src.main.java.net.vfedoriv.dslams.controllers.SlotController.java", "BodyUseAPI": ["net.vfedoriv.dslams.model.Slot.setBoard(<nulltype>)"], "Fixed commit": "8c6bf6550e11e3ef5677c0d77863d88de436616d", "Url": "https://api.github.com/repos/vfedoriv/dslams", "Date": "2015-11-12T14:54:30Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (key.equals(\"reconfigEnabled\")) { if (value.toLowerCase().equals(\"true\")) { org.apache.zookeeper.server.quorum.QuorumPeerConfig.setReconfigEnabled(true); }else if (value.toLowerCase().equals(\"false\")) { org.apache.zookeeper.server.quorum.QuorumPeerConfig.setReconfigEnabled(false); }else { throw new org.apache.zookeeper.server.quorum.QuorumPeerConfig.ConfigException(\"Invalid option for reconfigEnabled flag. Choose 'true' or 'false.'\"); } }else if ((((key.startsWith(\"server.\")) || (key.startsWith(\"group\"))) || (key.startsWith(\"weight\"))) && (zkProp.containsKey(\"dynamicConfigFile\"))) { throw new org.apache.zookeeper.server.quorum.QuorumPeerConfig.ConfigException(((\"parameter: \" + key) + \" must be in a separate dynamic config file\")); }else { java.lang.System.setProperty((\"zookeeper.\" + key), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2998/buggy-version/src.java.main.org.apache.zookeeper.server.quorum.QuorumPeerConfig.java", "BodyUseAPI": ["java.lang.System.setProperty(java.lang.String,java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "09c13d7898a5f1fe1d59835b4731cd8b74be378b", "Url": "https://api.github.com/repos/hanm/zookeeper", "Date": "2016-08-31T21:15:54Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.toLowerCase().equals(\"false\")) { org.apache.zookeeper.server.quorum.QuorumPeerConfig.setReconfigEnabled(false); }else { throw new org.apache.zookeeper.server.quorum.QuorumPeerConfig.ConfigException(\"Invalid option for reconfigEnabled flag. Choose 'true' or 'false.'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2998/buggy-version/src.java.main.org.apache.zookeeper.server.quorum.QuorumPeerConfig.java", "BodyUseAPI": [], "Fixed commit": "09c13d7898a5f1fe1d59835b4731cd8b74be378b", "Url": "https://api.github.com/repos/hanm/zookeeper", "Date": "2016-08-31T21:15:54Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x == 500) && (y == 860)) { java.lang.System.out.println((((\"x,y = \" + x) + \",\") + y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4654/buggy-version/beam-globalbedo-albedo-inversion.src.main.java.org.esa.beam.globalbedo.inversion.MergeBrdfOp.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "17a29cf2ac90edfd8800c55290d7dbef80e4e142", "Url": "https://api.github.com/repos/bcdev/beam-globalbedo", "Date": "2015-09-01T09:36:22Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((mysqlType == (MysqlDataTypes.BLOB)) || (mysqlType == (MysqlDataTypes.TINYBLOB))) || (mysqlType == (MysqlDataTypes.MEDIUMBLOB))) || (mysqlType == (MysqlDataTypes.LONGBLOB))) { return value; }else { com.flipkart.aesop.sample.client.common.utils.AvroToMysqlMapper.LOGGER.error((\"Incompatible types java.nio.ByteBuffer and \" + (mysqlType.toString()))); throw new java.lang.IllegalArgumentException((\"Incompatible types java.nio.ByteBuffer and \" + (mysqlType.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4762/buggy-version/samples.sample-client-common.src.main.java.com.flipkart.aesop.sample.client.common.utils.AvroToMysqlMapper.java", "BodyUseAPI": ["com.flipkart.aesop.sample.client.common.utils.MysqlDataTypes.toString()", "com.flipkart.aesop.sample.client.common.utils.MysqlDataTypes.toString()", "org.trpr.platform.core.spi.logging.Logger.error((\"Incompatible types java.nio.ByteBuffer and \" + (mysqlType.toString())))"], "Fixed commit": "fa82090a0b732f9a3a75ca7d2b18cda5a37a8ee5", "Url": "https://api.github.com/repos/akshit-agarwal/aesop", "Date": "2016-04-28T09:48:48Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4600/buggy-version/plugins.au.gov.ga.earthsci.bookmark.ui.src.au.gov.ga.earthsci.bookmark.ui.preferences.BookmarksPreferencesPage.java", "BodyUseAPI": [], "Fixed commit": "5366718c1499e75f5b85a4fa552b01d90defe4f2", "Url": "https://api.github.com/repos/GeoscienceAustralia/earthsci", "Date": "2015-01-09T04:58:44Z"},
{"Line": "=>5684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((guiView.findViewById(R.id.mode_help).getVisibility()) == (android.view.View.VISIBLE)) { guiView.findViewById(R.id.mode_help).setVisibility(View.INVISIBLE); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1942/buggy-version/src.com.almalence.opencam.ui.AlmalenceGUI.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.mode_help)", "guiView.findViewById(R.id.mode_help).setVisibility(View.INVISIBLE)"], "Fixed commit": "6d13d6b5888e795b9125d39a3ccf9e10bff59c92", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2014-10-15T05:49:34Z"},
{"Line": "=>881", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(filter.matches(obj))) { throw new org.jdom.IllegalAddException(((((\"Filter won't allow the \" + (obj.getClass().getName())) + \" '\") + obj) + \"' to be added to the list\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6036/buggy-version/core.src.java.org.jdom.ContentList.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()"], "Fixed commit": "98bb46b2c53dd01265f78170bf5286c13dc9b146", "Url": "https://api.github.com/repos/hunterhacker/jdom", "Date": "2011-09-02T14:32:53Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resultSet.next()) { pKey = resultSet.getString(\"key\"); preparedStatement.close(); connection.setAutoCommit(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4050/buggy-version/apples-ecommerce-ws.src.db.LoginService.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "9736b30f44b54d33a6fc81588a6e1e3cd3a8a4f5", "Url": "https://api.github.com/repos/luca9294/Apples-Ecommerce", "Date": "2017-05-30T19:17:19Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context.isStrictVariables()) { if (object == null) { final java.lang.String rootPropertyName = ((com.mitchellbosecke.pebble.node.expression.ContextVariableExpression) (node)).getName(); throw new com.mitchellbosecke.pebble.error.RootAttributeNotFoundException(null, java.lang.String.format(\"Root attribute [%s] does not exist or can not be accessed and strict variables is set to true.\", rootPropertyName)); }else { throw new com.mitchellbosecke.pebble.error.AttributeNotFoundException(null, java.lang.String.format(\"Attribute [%s] of [%s] does not exist or can not be accessed and strict variables is set to true.\", attributeName, object.getClass().getName())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8907/buggy-version/src.main.java.com.mitchellbosecke.pebble.node.expression.GetAttributeExpression.java", "BodyUseAPI": [], "Fixed commit": "1523d17aecd9a4195e928d4558ba1501acfd5f9b", "Url": "https://api.github.com/repos/ethlo/pebble", "Date": "2015-06-25T06:36:45Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((!(date.equals(\"\"))) || (!(diagnosis.equals(\"\")))) || (!(comments.equals(\"\")))) || (!(prescription.equals(\"\")))) { sql += \" WHERE \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5925/buggy-version/hospital.src.java.org.hospital.servlet.SearchVisitRecordsServlet.java", "BodyUseAPI": [], "Fixed commit": "0ad6511b6833733b0fe0fea010530def7f728a5a", "Url": "https://api.github.com/repos/davidjeong/ece356", "Date": "2014-11-25T23:07:18Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args == null) || ((args.length) != 7)) { throw new java.lang.Exception(\"example usage {host name } {port} {/directory/} {modulo} {number of threads} { true=read false=write } {pipeline} \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8017/buggy-version/src.main.java.com.redislabs.solution.lsu.main.POCLoad.java", "BodyUseAPI": [], "Fixed commit": "33fc03d45d373a9b8422898e4ef5812a0ba27d21", "Url": "https://api.github.com/repos/RedisLabs/genome-redis-poc", "Date": "2015-07-29T14:06:19Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pos != 0) { android.widget.Toast.makeText(parent.getContext(), parent.getItemAtPosition(pos).toString(), Toast.LENGTH_SHORT).show(); getWeather(city2Get); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4042/buggy-version/app.src.main.java.com.hannahburzynski.weatherapp.MainActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(parent.getContext(), parent.getItemAtPosition(pos).toString(), Toast.LENGTH_SHORT).show()", "android.widget.AdapterView<?>.getItemAtPosition(int)", "parent.getItemAtPosition(pos).toString()", "android.widget.Toast.makeText(parent.getContext(),parent.getItemAtPosition(pos).toString(),Toast.LENGTH_SHORT)"], "Fixed commit": "10a12fa0d6aa7f46ab36e8daa0bc5a75239d09c9", "Url": "https://api.github.com/repos/SoftwareGroupApp/WeatherApp", "Date": "2017-04-23T02:12:22Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(locationManager.isProviderEnabled(LocationManager.PASSIVE_PROVIDER))) { return com.google.android.gms.maps.CameraUpdateFactory.zoomTo(GoogleMapsZoom.MAX_VALUE); }else { android.location.Location currentLocation = locationManager.getLastKnownLocation(LocationManager.PASSIVE_PROVIDER); cameraTarget = new com.google.android.gms.maps.model.LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()); zoom = net.notifly.core.util.GoogleMapsZoom.NEIGHBORHOOD_LEVEL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9186/buggy-version/core.src.main.java.net.notifly.core.gui.activity.map.SelectLocationActivity.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.PASSIVE_PROVIDER)"], "Fixed commit": "d380630efe28c116d0128a1d3e77da51398e04fb", "Url": "https://api.github.com/repos/oryanm/Notifly", "Date": "2014-05-31T07:21:58Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (g.visible) validState = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1382/buggy-version/src.org.nschmidt.ldparteditor.data.GDataBFC.java", "BodyUseAPI": [], "Fixed commit": "e523aa32cd5ed1493ad4f097f276173ad1375de4", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-01T09:40:22Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (g.visible) validState = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1382/buggy-version/src.org.nschmidt.ldparteditor.data.GDataBFC.java", "BodyUseAPI": [], "Fixed commit": "e523aa32cd5ed1493ad4f097f276173ad1375de4", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-01T09:40:22Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (g.visible) validState = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1382/buggy-version/src.org.nschmidt.ldparteditor.data.GDataBFC.java", "BodyUseAPI": [], "Fixed commit": "e523aa32cd5ed1493ad4f097f276173ad1375de4", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-01T09:40:22Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((camera) == null) { camera = android.hardware.Camera.open(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/981/buggy-version/lantern.src.main.java.github.nisrulz.lantern.PreMarshmallow.java", "BodyUseAPI": [], "Fixed commit": "27d98c33339422c126f657bc0e4ff330b37b6c95", "Url": "https://api.github.com/repos/nisrulz/lantern", "Date": "2017-12-23T23:04:37Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.initExpr) != null) { assignField(f, null, f.initExpr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5726/buggy-version/src.main.java.kalang.compiler.Ast2Class.java", "BodyUseAPI": ["kalang.compiler.Ast2Class.assignField(kalang.ast.FieldNode,<nulltype>,f.initExpr)"], "Fixed commit": "7a6bb387dcbbce543c2118ca8eaa1ab26b014fd7", "Url": "https://api.github.com/repos/kasonyang/kalang", "Date": "2016-05-11T13:29:28Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.initExpr) != null) { assignField(new kalang.ast.ObjectFieldExpr(new kalang.ast.ThisExpr(kalang.core.Types.getClassType(clazz)), f), f.initExpr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5726/buggy-version/src.main.java.kalang.compiler.Ast2Class.java", "BodyUseAPI": ["kalang.compiler.Ast2Class.assignField(kalang.ast.ObjectFieldExpr,f.initExpr)"], "Fixed commit": "7a6bb387dcbbce543c2118ca8eaa1ab26b014fd7", "Url": "https://api.github.com/repos/kasonyang/kalang", "Date": "2016-05-11T13:29:28Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getPrimerProductValues().isEmpty()) { this.setPrimerProductValues(com.google.common.collect.Lists.newArrayList(primerProductValueMap.values())); }else { if ((this.getOperationType()) == (org.one.gene.domain.entity.PrimerType.PrimerStatusType.orderInit)) { for (org.one.gene.domain.entity.PrimerProductValue pv : this.getPrimerProductValues()) { org.one.gene.domain.entity.PrimerProductValue npv = primerProductValueMap.get(pv.getType()); if (npv != null) { pv.setValue(npv.getValue()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3717/buggy-version/web.src.main.java.org.one.gene.domain.entity.PrimerProduct.java", "BodyUseAPI": [], "Fixed commit": "28b1fc2918375b0667f649ee6678d77bbe7a5c12", "Url": "https://api.github.com/repos/sanctityQ/gene", "Date": "2015-01-15T16:49:56Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(typeToFields.isEmpty())) { types = java.util.EnumSet.copyOf(typeToFields.keySet()); }else { types = com.google.common.collect.Sets.newHashSet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1839/buggy-version/library.src.main.java.com.datatorrent.lib.appdata.schemas.FieldsDescriptor.java", "BodyUseAPI": ["java.util.Map<com.datatorrent.lib.appdata.schemas.Type, java.util.List<java.lang.String>>.keySet()", "java.util.EnumSet.copyOf(typeToFields.keySet())"], "Fixed commit": "0d734d8694ffc0d1e4661553d6d45271c3b2ba2b", "Url": "https://api.github.com/repos/apache/apex-malhar", "Date": "2015-04-15T08:06:20Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files != null) { for (java.io.File file : files) { runScript(script.getAbsolutePath(), file, silent); } if (!silent) { java.lang.System.out.println((\"TOTAL TIME: \" + ((java.lang.System.currentTimeMillis()) - time))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4802/buggy-version/de.prob2.kernel.src.main.java.de.prob.Shell.java", "BodyUseAPI": [], "Fixed commit": "450ba6e5a2dc1b5bb1fcb6af093cc3d151f24d76", "Url": "https://api.github.com/repos/bendisposto/prob2", "Date": "2016-03-11T14:42:34Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.getType()) == \"Street\") { controllers.OurStreet street = ((controllers.OurStreet) (field)); auctionWinner.addToInventory(field.getFieldId(), field.getPrice(), street.getCategory()); }else { auctionWinner.addToInventory(field.getFieldId(), field.getPrice()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/734/buggy-version/src.controllers.AuctionController.java", "BodyUseAPI": ["controllers.Ownable.getPrice()", "controllers.Player.addToInventory(field.getFieldId(),field.getPrice())", "controllers.Player.addToInventory(field.getFieldId(),field.getPrice(),street.getCategory())", "controllers.Ownable.getFieldId()", "controllers.Ownable.getFieldId()", "controllers.Ownable.getPrice()"], "Fixed commit": "b93f62c6d1419e184a2d61396d5b4cb2d68e82f7", "Url": "https://api.github.com/repos/adamsen9/CDIO-Final", "Date": "2015-01-15T11:29:50Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (depth > 4) { return new java.util.HashSet<java.io.File>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1950/buggy-version/in.blazingk.blz.packagemanager.ImportPackageInstruction.java", "BodyUseAPI": [], "Fixed commit": "1a772111790850250268fc9bcd2741117f83688e", "Url": "https://api.github.com/repos/blazingkin/blz-ospl", "Date": "2017-08-25T03:20:34Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.blazingkin.interpreter.executor.Executor.processContext.empty())) { com.blazingkin.interpreter.executor.Executor.processContext.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1950/buggy-version/com.blazingkin.interpreter.executor.Executor.java", "BodyUseAPI": ["java.util.Stack<com.blazingkin.interpreter.variables.Context>.pop()"], "Fixed commit": "1a772111790850250268fc9bcd2741117f83688e", "Url": "https://api.github.com/repos/blazingkin/blz-ospl", "Date": "2017-08-25T03:20:34Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(baseDir.exists())) { boolean res = baseDir.mkdirs(); if (!res) { throw new org.wiztools.stagen.ExecutorException((\"Dir creation failed: \" + baseDir)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4143/buggy-version/src.main.java.org.wiztools.stagen.RunnerInit.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "b22d090788286a031de7b5572033ec74e1e7387f", "Url": "https://api.github.com/repos/wiztools/stagen", "Date": "2014-11-22T08:06:53Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((posicaoHorizontalCarroInimigo) < 255) { posicaoHorizontalCarroInimigo = 255 + (carroInimigo.getWidth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7416/buggy-version/core.src.com.jogo.fasterthanlight.FasterThanLight.java", "BodyUseAPI": [], "Fixed commit": "845c646d3ef1f9c2b56dad2f9424446873b9ae5e", "Url": "https://api.github.com/repos/jviitsm/FasterThanLight", "Date": "2017-04-29T19:28:42Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.siriusif.process.WorkshiftProcess.getOpenWorkshift()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currentWorkshift == null) { com.siriusif.process.impl.OrderProcessImpl.LOGGER.debug(\"We have some troubles with getting new workshift for some reason\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6735/buggy-version/webcash-domain.src.main.java.com.siriusif.process.impl.OrderProcessImpl.java", "BodyUseAPI": [], "Fixed commit": "ae45fd22aca5f8af2517c43bf50cd92cbb43f27e", "Url": "https://api.github.com/repos/crc83/WebCash", "Date": "2013-05-06T15:43:12Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((game.getCurrentRound()) - 1) > 0) { nl.joshuaslik.tudelft.UFMGame.backend.Save.saveHighscore(user.getUserName(), user.getTeam().getTotalGoals(), ((game.getCurrentRound()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4420/buggy-version/src.main.java.nl.joshuaslik.tudelft.UFMGame.backend.Save.java", "BodyUseAPI": ["nl.joshuaslik.tudelft.UFMGame.backend.Save.saveHighscore(user.getUserName(),user.getTeam().getTotalGoals(),((game.getCurrentRound()) - 1))", "nl.joshuaslik.tudelft.UFMGame.backend.Game.getCurrentRound()"], "Fixed commit": "6f9e726c41319d82c90a3252e9a64e4b1d3c2de5", "Url": "https://api.github.com/repos/notcomment/UFMGame", "Date": "2015-01-20T14:01:31Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getPlayerCraft().getDoLoop()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (looping == true) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7934/buggy-version/Strikeforce.src.Strikeforce.Board.java", "BodyUseAPI": [], "Fixed commit": "4244e4b9f9e5b494a9b91d8e0849c68f44e094b1", "Url": "https://api.github.com/repos/Blkx-Darkreaper/Workspace", "Date": "2014-08-04T04:14:24Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity instanceof org.apache.cloudstack.api.InternalIdentity) { entityType += ((org.apache.cloudstack.api.InternalIdentity) (entity)).getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1919/buggy-version/services.iam.plugin.src.org.apache.cloudstack.iam.RoleBasedEntityAccessChecker.java", "BodyUseAPI": [], "Fixed commit": "5f8641e908b16f0a3e7572a6e17e7bb6356c6112", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2014-05-09T18:10:26Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stack) != null) { try { value = stack.getVariable(node.getBlockOffset(), node.getVariableOffset()); } catch (java.lang.Exception ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4296/buggy-version/cloveretl.engine.src.org.jetel.ctl.ErrorReporter.java", "BodyUseAPI": [], "Fixed commit": "2810cf87f05b57834cf6c174df076db849b2a7c9", "Url": "https://api.github.com/repos/CloverETL/CloverETL-Engine", "Date": "2017-11-13T17:22:58Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((blocker.stop.x) + addedLength) < (screenWidth)) { blocker.stop.x += addedLength; }else { blocker.start.x -= addedLength; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7265/buggy-version/app.src.main.java.djbdevelopment.cannonball.SpriteView.java", "BodyUseAPI": [], "Fixed commit": "159d3d26e7c2c560ab4f3fa2955b11198555317d", "Url": "https://api.github.com/repos/dm398/Canonball_Android_App", "Date": "2017-03-16T17:09:22Z"},
{"Line": "=>13104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.android.internal.content.PackageHelper.getSdDir(cid)) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7010/buggy-version/services.core.java.com.android.server.pm.PackageManagerService.java", "BodyUseAPI": [], "Fixed commit": "06247b3854ae3b2f2cef0a92a770735ab744dcbf", "Url": "https://api.github.com/repos/OptiPop/frameworks_base", "Date": "2015-05-26T00:07:12Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { l.setItemChecked(position, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1202/buggy-version/ActionMode.ActionModeMC.src.com.commonsware.android.actionmodemc.ActionModeDemo.java", "BodyUseAPI": [], "Fixed commit": "a2e8c3b0c47f74cc9b01c18dce10aa927ec5c049", "Url": "https://api.github.com/repos/commonsguy/cw-omnibus", "Date": "2013-06-22T18:54:53Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x >= 0) && (y >= 0)) && (x < (view.gui.screen.MapMakerPanel.BOARD_SIZE))) && (y < (view.gui.screen.MapMakerPanel.BOARD_SIZE))) { if ((map[x][y]) != (-1)) { map[x][y] = currentDrawingType; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6402/buggy-version/src.main.view.gui.screen.MapMakerPanel.java", "BodyUseAPI": [], "Fixed commit": "56f8b6aa267d741b9e82bc906e42225fb3ca7b96", "Url": "https://api.github.com/repos/COP4331-OOP-Project/TBS-Game-For-COP4331", "Date": "2017-02-22T22:28:49Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.getLoading().getValue()) { session.setLoading(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1417/buggy-version/app.src.main.java.org.mozilla.focus.session.SessionCallbackProxy.java", "BodyUseAPI": ["org.mozilla.focus.session.Session.setLoading(boolean)"], "Fixed commit": "2c16d480e41c2507920dbbb6680f6d6193f642b0", "Url": "https://api.github.com/repos/layely/focus-android", "Date": "2017-10-21T05:29:14Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(COSName.OFF.getName().equals(value))) && ((widget.getAppearance()) == null)) && ((getWidgets().size()) == 1)) { matchesAppearance = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4000/buggy-version/src.main.java.org.sejda.sambox.pdmodel.interactive.form.PDButton.java", "BodyUseAPI": [], "Fixed commit": "c6c37d7dcb8318f1937218cee98dda500802377c", "Url": "https://api.github.com/repos/torakiki/sambox", "Date": "2017-03-27T13:38:03Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((widget.getAppearance()) != null) && ((widget.getAppearance().getNormalAppearance()) != null)) { matchesAppearance = ((org.sejda.sambox.cos.COSDictionary) (widget.getAppearance().getNormalAppearance().getCOSObject())).containsKey(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4000/buggy-version/src.main.java.org.sejda.sambox.pdmodel.interactive.form.PDButton.java", "BodyUseAPI": ["org.sejda.sambox.pdmodel.interactive.annotation.PDAnnotationWidget.getAppearance()", "widget.getAppearance().getNormalAppearance()", "((org.sejda.sambox.cos.COSDictionary) (widget.getAppearance().getNormalAppearance().getCOSObject())).containsKey(java.lang.String)", "widget.getAppearance().getNormalAppearance().getCOSObject()"], "Fixed commit": "c6c37d7dcb8318f1937218cee98dda500802377c", "Url": "https://api.github.com/repos/torakiki/sambox", "Date": "2017-03-27T13:38:03Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((players.size()) == (model.Game.MAX_NB_OF_PLAYERS)) { application.App.getServer().send(new java.lang.Error(\"Spiel l\u00e4uft bereits\"), network.Dictionary.getInstance().get(playerName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5441/buggy-version/src.model.Game.java", "BodyUseAPI": [], "Fixed commit": "2dc37607ccfd1798c2eb0db0a285a0ba0b1bac18", "Url": "https://api.github.com/repos/azzingi/bomberman-server-application", "Date": "2016-12-20T10:08:59Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 2) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1752/buggy-version/Stuyablo.2.teamsomethingawesome.FunctionalStuyablo.Character.java", "BodyUseAPI": [], "Fixed commit": "14df7ad124a4a6940229a4ba5a133759e613c6d1", "Url": "https://api.github.com/repos/stuycs-apcs-z/classwork", "Date": "2013-11-06T02:05:59Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((other == null) || (!(other instanceof org.openrdf.query.BindingSet))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5158/buggy-version/core.query.src.main.java.org.openrdf.query.AbstractBindingSet.java", "BodyUseAPI": [], "Fixed commit": "16c736ff5bbc18b5200c93aeda0a2015c7c6ceac", "Url": "https://api.github.com/repos/ansell/openrdf-sesame", "Date": "2015-12-15T21:11:50Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stateStack) == null) { stateStack = new com.badlogic.gdx.utils.Array<com.badlogic.gdx.ai.fsm.State<E>>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2384/buggy-version/extensions.gdx-ai.src.com.badlogic.gdx.ai.fsm.StackStateMachine.java", "BodyUseAPI": [], "Fixed commit": "7fcb9d1fd883ba0acb0a334f0794969dc3ff0752", "Url": "https://api.github.com/repos/code-disaster/libgdx", "Date": "2014-07-30T10:13:32Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getLanterns().getLantern(org.bukkit.Location)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lantern.getGroup().equals(group)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5498/buggy-version/src.main.java.me.ase34.citylanterns.executor.SelectCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "04e72b46f429ac27559ae7beb04ecec006cb7fa8", "Url": "https://api.github.com/repos/ase34/CityLanterns", "Date": "2013-09-06T16:33:03Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["d.select(\"button[class*=\\\"yt-uix-load-more\\\"]\").first()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (button != null) { return button.attr(\"abs:data-uix-load-more-href\"); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2052/buggy-version/app.src.main.java.org.schabi.newpipe.extractor.services.youtube.YoutubeChannelExtractor.java", "BodyUseAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)"], "Fixed commit": "863bf9dc8b66356e7c4f2dee45c6f9df2a0018a7", "Url": "https://api.github.com/repos/TeamNewPipe/NewPipe", "Date": "2016-09-14T09:15:08Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inPause) { pausedTime += time - pauseStartTime; inPause = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1150/buggy-version/src.main.java.com.oldhu.suunto2nike.suunto.moveslink2.XMLParser.java", "BodyUseAPI": [], "Fixed commit": "2d9481fc66e408908ce79f40fcc32fc265b253d5", "Url": "https://api.github.com/repos/oldhu/suunto2nike", "Date": "2014-01-09T09:23:37Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (zM.find()) { pubDate = pubDate.replace(\"Z\", \"GMT\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6434/buggy-version/app.src.main.java.fr.vpm.audiorss.process.ItemParser.java", "BodyUseAPI": [], "Fixed commit": "2ed6ae7b59a3095a0a1a063eeb84cb8b900bde05", "Url": "https://api.github.com/repos/vpmalley/radiofeedz", "Date": "2015-02-26T04:59:40Z"},
{"Line": "=>1008", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == (getPageCount())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6814/buggy-version/android-pdf-viewer.src.main.java.com.github.barteksc.pdfviewer.PDFView.java", "BodyUseAPI": [], "Fixed commit": "868cc82fdf315278e2e49b66bf1eb65ba191d114", "Url": "https://api.github.com/repos/barteksc/AndroidPdfViewer", "Date": "2017-08-04T07:04:23Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(userId)) { throw new org.wso2.carbon.identity.provisioning.IdentityProvisioningException(\"Could not find Provisioning User Identification\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8625/buggy-version/components.provisioning.org.wso2.carbon.identity.provisioning.connector.google.src.main.java.org.wso2.carbon.identity.provisioning.connector.google.GoogleProvisioningConnector.java", "BodyUseAPI": [], "Fixed commit": "b6dca1824883fd2c8dda5746c2c4438b8cee770a", "Url": "https://api.github.com/repos/Pushpalanka/carbon-identity", "Date": "2015-10-29T14:22:06Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spStr.subSequence(start, end).toString().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tag.contains(query)) { int queryStart = tag.indexOf(query); queryStart = (queryStart < 0) ? start : start + queryStart; int color = android.support.v4.content.ContextCompat.getColor(context, R.color.colorAccent); spStr.setSpan(new android.text.style.ForegroundColorSpan(color), queryStart, (queryStart + (query.length())), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1029/buggy-version/app.src.main.java.com.rohit.k.twiteefy.TweetListAdapter.java", "BodyUseAPI": ["android.text.SpannableString.setSpan(android.text.style.ForegroundColorSpan,int,int,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE)", "java.lang.String.length()", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "98a707ea7ad281578f902fd2bbec5d3b334add06", "Url": "https://api.github.com/repos/rohitiskul/TwiteeFy", "Date": "2016-02-14T11:17:57Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (material == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8436/buggy-version/ukofePonyPack.src.com.github.chaomaster.ukofePonyPack.PonyPowers.java", "BodyUseAPI": [], "Fixed commit": "50115b24ef1f413192633e2c6d6be84314054cb7", "Url": "https://api.github.com/repos/chao-master/ukofePonyPack", "Date": "2013-04-15T18:17:36Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dk.teachus.frontend.TeachUsSession.get().getPerson()) instanceof dk.teachus.backend.domain.Pupil) { if (new org.joda.time.DateTime().minusHours(24).isBefore(booking.getDate())) { mayDelete = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5722/buggy-version/teachus-frontend.src.main.java.dk.teachus.frontend.components.calendar.PupilPeriodsCalendarPanel.java", "BodyUseAPI": [], "Fixed commit": "ed0bf732057afce3f3c08c8da798ad05908865ee", "Url": "https://api.github.com/repos/teachus/teachus", "Date": "2012-08-29T19:25:22Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mayDelete) { dk.teachus.frontend.TeachUsApplication.get().getBookingDAO().deleteBooking(booking); payload.setBooking(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5722/buggy-version/teachus-frontend.src.main.java.dk.teachus.frontend.components.calendar.PupilPeriodsCalendarPanel.java", "BodyUseAPI": [], "Fixed commit": "ed0bf732057afce3f3c08c8da798ad05908865ee", "Url": "https://api.github.com/repos/teachus/teachus", "Date": "2012-08-29T19:25:22Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filePath.endsWith(\".json\")) { return fr.opensagres.language.textmate.core.internal.grammar.parser.json.JSONPListParser.INSTANCE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1084/buggy-version/core.fr.opensagres.language.textmate.core.src.main.java.fr.opensagres.language.textmate.core.internal.grammar.reader.GrammarReader.java", "BodyUseAPI": [], "Fixed commit": "0e1bb22b6c2e03cf0fe036d66b361c75fcf03f03", "Url": "https://api.github.com/repos/eclipse/tm4e", "Date": "2016-11-07T11:44:30Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (addDefaultActionListener) { addActionListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3051/buggy-version/desktop.api.src.main.java.org.datacleaner.widgets.DescriptorMenuItem.java", "BodyUseAPI": [], "Fixed commit": "307b04b81fe742674770d26d1470537a20d7c740", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-02-16T14:19:40Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mQuantityEditText.getText().toString().equals(\"\")) { currentQuantity = 0; }else { currentQuantity = java.lang.Integer.parseInt(mQuantityEditText.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4877/buggy-version/app.src.main.java.com.example.android.inventoryapp.EditorActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(mQuantityEditText.getText().toString())", "mQuantityEditText.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "1865831cc5683a05f06aec81019617679003aede", "Url": "https://api.github.com/repos/SzasznikaJanos/InventoryApp", "Date": "2017-07-28T14:31:38Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filename.lastIndexOf('.')) < 0) { return com.opengamma.integration.copier.sheet.SheetFormat.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3731/buggy-version/projects.OG-Integration.src.com.opengamma.integration.copier.sheet.SheetFormat.java", "BodyUseAPI": [], "Fixed commit": "3cd9f9ef7239fe011aebf873020af1f3d1eeb970", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2012-03-30T15:03:27Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getServerHandler().playerEntity.worldObj.getEntityByID(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (watchable != null) { radixcore.data.DataWatcherEx dataWatcherEx = watchable.getDataWatcherEx(); return new radixcore.packets.PacketDataSync(packet.entityId, dataWatcherEx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2299/buggy-version/src.main.java.radixcore.packets.PacketDataSyncReq.java", "BodyUseAPI": ["radixcore.data.IWatchable.getDataWatcherEx()"], "Fixed commit": "a476bc4a72b52fdfb459eff70047958ee69d4184", "Url": "https://api.github.com/repos/WildBamaBoy/radix-core", "Date": "2015-05-21T19:58:20Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((orig.length) > 0) prepare(new org.badiff.Op(org.badiff.Op.DELETE, orig.length, orig));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8087/buggy-version/badiff.src.main.java.org.badiff.q.ReplaceOpQueue.java", "BodyUseAPI": [], "Fixed commit": "833e6c736cd0bc4b0ab397079eab434d261acfa4", "Url": "https://api.github.com/repos/org-badiff/badiff", "Date": "2017-05-31T03:06:06Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((target.length) > 0) prepare(new org.badiff.Op(org.badiff.Op.INSERT, target.length, target));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8087/buggy-version/badiff.src.main.java.org.badiff.q.ReplaceOpQueue.java", "BodyUseAPI": [], "Fixed commit": "833e6c736cd0bc4b0ab397079eab434d261acfa4", "Url": "https://api.github.com/repos/org-badiff/badiff", "Date": "2017-05-31T03:06:06Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message.direct()) == (EMMessage.Direct.SEND)) { if ((localFullSizePath != null) && (new java.io.File(localFullSizePath).exists())) { return com.hyphenate.easeui.utils.EaseImageUtils.decodeScaleImage(localFullSizePath, 160, 160); }else { return null; } }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/696/buggy-version/src.com.hyphenate.easeui.widget.chatrow.EaseChatRowImage.java", "BodyUseAPI": [], "Fixed commit": "0e63676a9b555499c2fcc08d76b3bfaca4c54f2a", "Url": "https://api.github.com/repos/easemob/easeui", "Date": "2015-12-28T04:06:43Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasColumnsFlag) { namedFilter.setColumns(new java.util.ArrayList<org.tdl.vireo.search.SearchOrder>()); }else if (hasColumnsFlag && ((namedFilter.getColumns().size()) == 0)) { namedFilter.setColumns(controllers.FilterTab.getDefaultColumns(type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2993/buggy-version/app.controllers.FilterTab.java", "BodyUseAPI": [], "Fixed commit": "8ae3fa22c1902d206317149a6cf87452dec58073", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2014-10-05T22:56:12Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(c.hasMetaProductGeneration())) { metaCombo.setEnabled(false); metaCombo.select(0); }else { metaCombo.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5126/buggy-version/plugins.de.ovgu.featureide.core.src.de.ovgu.featureide.core.propertypage.FeatureProjectPropertyPage.java", "BodyUseAPI": [], "Fixed commit": "b34273e7dd461c61f1f52cd478a02eefc8b5ce64", "Url": "https://api.github.com/repos/tthuem/FeatureIDE", "Date": "2014-09-30T14:38:46Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fedepot.mvc.http.Request.getOrigin()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((origin == null) || (origin.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7948/buggy-version/src.main.java.com.fedepot.mvc.middleware.CorsMiddleware.java", "BodyUseAPI": [], "Fixed commit": "9d73c4d72046a1ae26c4c58154143c090f030a00", "Url": "https://api.github.com/repos/thundernet8/Razor", "Date": "2017-09-17T10:30:13Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gameboard[c][(i + 1)]) != null) if ((gameboard[c][(i + 1)].getBlockType()) == (BlockType.JOKERTOP)) gameboard[c][(i + 1)] = null; else gameboard[c][(i + 1)].stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5328/buggy-version/INDA14-projekt.src.GameBoard.java", "BodyUseAPI": ["gameboard[c][(i + 1)].stop()", "gameboard[c][(i + 1)].getBlockType()"], "Fixed commit": "ee66bce70fad741738303126aad12e417343884c", "Url": "https://api.github.com/repos/VonGriff/IndaProject", "Date": "2015-05-19T09:14:10Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bootstrap) == null) connect(address, port);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/755/buggy-version/src.main.java.championshang.wordpress.com.netty.client.NettyAppender.java", "BodyUseAPI": [], "Fixed commit": "dcb15a7c4d6b5002538c324ce553cdab522909e8", "Url": "https://api.github.com/repos/cp149/jactor-logger", "Date": "2013-04-23T10:30:26Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fell) { model.cur_error = \"you fell down!\"; }else { model.cur_error = \"Do something crazy!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4137/buggy-version/src.SandboxLevel.java", "BodyUseAPI": [], "Fixed commit": "253f07467f3501970fdad5bf018ca7b4be158306", "Url": "https://api.github.com/repos/cstuart1021/11.127-Digital-Game", "Date": "2013-05-15T02:07:30Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret > 100) ret = 100;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6237/buggy-version/src.it.zm.xml.DataCameras.java", "BodyUseAPI": [], "Fixed commit": "461330645093148f7335c6eb4e6139495ff71692", "Url": "https://api.github.com/repos/warner83/ZMInterface", "Date": "2014-11-30T11:46:25Z"},
{"Line": "=>1224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.opensource.camcorder.utils.StringUtil.isEmpty(mSessionFolder)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3579/buggy-version/app.src.main.java.com.opensource.camcorder.CamcorderActivity.java", "BodyUseAPI": [], "Fixed commit": "4a736231201ebfc90723a9c85cec56d5d3680dde", "Url": "https://api.github.com/repos/yinglovezhuzhu/Camcorder", "Date": "2014-08-11T02:14:50Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.getNumber()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4426/buggy-version/app.src.main.java.lu.acel.lidderbuch.model.LBSongbook.java", "BodyUseAPI": [], "Fixed commit": "5a04e89937d42440d2f74259eea490e9fe4575b0", "Url": "https://api.github.com/repos/AcelLuxembourg/LidderbuchAppAndroid", "Date": "2017-09-05T21:06:30Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((oldX != (xValue)) || (oldY != (yValue))) { revalidate(); fireAnnotationMoved(oldX, oldY, xValue, yValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4409/buggy-version/applications.plugins.org.csstudio.swt.xygraph.src.org.csstudio.swt.xygraph.figures.Annotation.java", "BodyUseAPI": ["org.csstudio.swt.xygraph.figures.Annotation.fireAnnotationMoved(double,double,double,double)"], "Fixed commit": "a4088982d9d52461a6dbd20a8f7ac075cd17971f", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2013-09-06T17:11:02Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Object>.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((table == null) || (table.name().equals(\"\"))) { return entity.getClass().getSimpleName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7091/buggy-version/src.main.java.it.polimi.modaclouds.cpimlibrary.entitymng.ReflectionUtils.java", "BodyUseAPI": [], "Fixed commit": "e6a1168df12ab6e80c787e35f7abe4de9fdf7c40", "Url": "https://api.github.com/repos/Arci/modaclouds-cpim-library", "Date": "2015-01-22T14:22:50Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((table == null) || (table.name().equals(\"\"))) { return clazz.getSimpleName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7091/buggy-version/src.main.java.it.polimi.modaclouds.cpimlibrary.entitymng.ReflectionUtils.java", "BodyUseAPI": [], "Fixed commit": "e6a1168df12ab6e80c787e35f7abe4de9fdf7c40", "Url": "https://api.github.com/repos/Arci/modaclouds-cpim-library", "Date": "2015-01-22T14:22:50Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getBreadcrumb()) == null) { e.setBreadcrumb(new com.defano.hypercard.runtime.Breadcrumb(getToken(), com.defano.hypercard.runtime.context.ExecutionContext.getContext().getMe())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3591/buggy-version/src.main.java.com.defano.hypertalk.ast.ASTNode.java", "BodyUseAPI": ["com.defano.hypertalk.exception.HtException.setBreadcrumb(com.defano.hypercard.runtime.Breadcrumb)"], "Fixed commit": "48e05a0d17a9e40d80cf3293d83f8d55a7018c45", "Url": "https://api.github.com/repos/defano/wyldcard", "Date": "2017-10-08T20:43:18Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (image.isAnimation()) { getComponentForm().registerAnimated(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6787/buggy-version/CodenameOne.src.com.codename1.components.ImageViewer.java", "BodyUseAPI": [], "Fixed commit": "a64e55b55198325ec4ca5933a3c4dbe53dd55945", "Url": "https://api.github.com/repos/sannysanoff/CodenameOne", "Date": "2015-10-18T19:27:26Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((notebook) != null) { notebook.getInterpreterSettingManager().shutdown(); notebook.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6298/buggy-version/smart-zeppelin.zeppelin-server.src.main.java.org.apache.zeppelin.server.SmartZeppelinServer.java", "BodyUseAPI": [], "Fixed commit": "b099fb6eb4eb319168f39ec0813d62875677842b", "Url": "https://api.github.com/repos/drankye/SSM", "Date": "2017-07-04T07:05:13Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jettyWebServer) != null) { jettyWebServer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6298/buggy-version/smart-zeppelin.zeppelin-server.src.main.java.org.apache.zeppelin.server.SmartZeppelinServer.java", "BodyUseAPI": [], "Fixed commit": "b099fb6eb4eb319168f39ec0813d62875677842b", "Url": "https://api.github.com/repos/drankye/SSM", "Date": "2017-07-04T07:05:13Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dd.getSliceRange(true)) == null) { int max = java.lang.Math.min(25, ((getData().getLazySet().getShape()[dd.getDimension()]) - 1)); dd.setSliceRange((\"0:\" + max)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7636/buggy-version/org.dawnsci.slicing.api.src.org.dawnsci.slicing.api.AbstractSliceSystem.java", "BodyUseAPI": ["org.dawnsci.slicing.api.system.DimsData.setSliceRange(java.lang.String)", "org.dawnsci.slicing.api.system.DimsData.getDimension()", "java.lang.Math.min(int,((getData().getLazySet().getShape()[dd.getDimension()]) - 1))"], "Fixed commit": "bd4d946ac51811a776447bc7ae6e143d2e696996", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2014-06-23T13:23:49Z"},
{"Line": "=>2422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.dykman.jtl.json.JSONValue) (jj)).longValue().intValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n < 0) n = (n + sourceSize) % sourceSize;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8179/buggy-version/src.main.java.org.dykman.jtl.future.FutureInstructionFactory.java", "BodyUseAPI": [], "Fixed commit": "cb4e7a1b9b9f38102958a12dea23e66d57cc30eb", "Url": "https://api.github.com/repos/tallgrrl/jtl", "Date": "2015-11-04T16:53:08Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conditions.size()) == 0) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2403/buggy-version/QuizApp.src.dk.itu.smdp.group2.questionnaire.model.Question.java", "BodyUseAPI": [], "Fixed commit": "81d998053b4c8f45aeecd63bd1877770def7f50d", "Url": "https://api.github.com/repos/rasmusgreve/questionaire", "Date": "2014-04-15T17:33:18Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (imageBitmap != null) { android.content.Intent sentTo = new android.content.Intent(this, nyc.c4q.yuliyakaleda.meme_ifyme.SecondActivity.class); sentTo.putExtra(\"bitmap\", imageBitmap); startActivity(sentTo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6575/buggy-version/app.src.main.java.nyc.c4q.yuliyakaleda.meme_ifyme.MainActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,android.graphics.Bitmap)"], "Fixed commit": "a882e17a07cd2655178101a3dba5e78c50240e4b", "Url": "https://api.github.com/repos/hyunj0/meme", "Date": "2015-06-08T03:05:19Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (result == null) { net.jsiq.marketing.util.MessageToast.showText(context, R.string.loadFailed); }else { adapter.addAll(result); initMainFirstDefaultFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5852/buggy-version/PocketMarketing.src.net.jsiq.marketing.fragment.LeftMenuFragment.java", "BodyUseAPI": ["net.jsiq.marketing.adapter.LeftMenuAdapter.addAll(java.util.List<net.jsiq.marketing.model.MenuItem>)"], "Fixed commit": "0ac367abb06a012b51360a1026477cf7f9d77352", "Url": "https://api.github.com/repos/onecoders/ViewPageIndicator", "Date": "2013-11-14T05:33:56Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.inria.astor.core.validation.validators.ProgramVariantValidator.retrieveRegressionTestCases()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (testcases.contains(ctType.getQualifiedName())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/337/buggy-version/src.main.java.fr.inria.astor.core.loop.evolutionary.population.ProgramVariantFactory.java", "BodyUseAPI": [], "Fixed commit": "a790ecd9bd04b409500b1a5033d46f4a59f9466a", "Url": "https://api.github.com/repos/SpoonLabs/astor", "Date": "2016-02-05T11:55:24Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keepAlive) { resp.headers().set(HttpHeaderNames.CONNECTION, HttpHeaderValues.KEEP_ALIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8600/buggy-version/src.main.java.org.semux.api.SemuxHttpHandler.java", "BodyUseAPI": [], "Fixed commit": "b800bf518576188329dc14a34ad79f454725f2a8", "Url": "https://api.github.com/repos/cryptozero/semux", "Date": "2017-11-06T23:33:48Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keepAlive) { resp.headers().set(HttpHeaderNames.CONNECTION, HttpHeaderValues.KEEP_ALIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8600/buggy-version/src.main.java.org.semux.api.SemuxHttpHandler.java", "BodyUseAPI": [], "Fixed commit": "b800bf518576188329dc14a34ad79f454725f2a8", "Url": "https://api.github.com/repos/cryptozero/semux", "Date": "2017-11-06T23:33:48Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(exampleFile.isFile())) || (!(exampleFile.getName().endsWith(\".txt\")))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/826/buggy-version/webservice.src.main.java.bixie.ws.util.Examples.java", "BodyUseAPI": [], "Fixed commit": "137f9384b01fa531a18ea7ef1b954b00cd74fcb2", "Url": "https://api.github.com/repos/martinschaef/bixie", "Date": "2015-05-30T20:27:48Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.canSeePlayer()) { this.state = entities.abstracts.EnemyEntity.STATE_CHASING; this.direction = this.lookDirection; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4308/buggy-version/the_legend_of_zelda_hamlet.src.entities.Soldier.java", "BodyUseAPI": [], "Fixed commit": "5b68bdb7f925c47b3614744502ed85480e9f728d", "Url": "https://api.github.com/repos/josefwaller/TheLegendOfZeldaHamlet", "Date": "2016-12-02T23:13:05Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (raw != \"\") { solrSearchBuilder.append(\"&\").append(java.net.URLEncoder.encode(raw, \"UTF-8\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8405/buggy-version/goci-interfaces.goci-ui.src.main.java.uk.ac.ebi.spot.goci.ui.controller.SolrSearchController.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "bd6c99cdffda869634d731e5ef922c8c8de32b1b", "Url": "https://api.github.com/repos/EBISPOT/goci", "Date": "2017-07-04T16:01:01Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBitmapObserver) != null) { mBitmapObserver.onBitmapLoaded(imageView, bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3088/buggy-version/src.com.android.opensource.bitmapfun.util.ImageWorker.java", "BodyUseAPI": [], "Fixed commit": "dccdf7dd55e85d4b667e6a037a0889b20c497c23", "Url": "https://api.github.com/repos/yinglovezhuzhu/bitmapfun", "Date": "2013-12-10T04:10:52Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBitmapObserver) != null) { mBitmapObserver.onBitmapLoaded(imageView, bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3088/buggy-version/src.com.android.opensource.bitmapfun.util.ImageWorker.java", "BodyUseAPI": [], "Fixed commit": "dccdf7dd55e85d4b667e6a037a0889b20c497c23", "Url": "https://api.github.com/repos/yinglovezhuzhu/bitmapfun", "Date": "2013-12-10T04:10:52Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.reactome.web.diagram.tooltips.Node.getGraphObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (aux instanceof org.reactome.web.diagram.data.graph.model.GraphPhysicalEntity) { org.reactome.web.diagram.data.graph.model.GraphPhysicalEntity obj = ((org.reactome.web.diagram.data.graph.model.GraphPhysicalEntity) (aux)); if (obj instanceof org.reactome.web.diagram.data.graph.model.GraphEntityWithAccessionedSequence) { tooltip.setText(((node.getDisplayName()) + ((obj.getIdentifier()) != null ? (\" (\" + (obj.getIdentifier())) + \")\" : \"\"))); }else if (obj instanceof org.reactome.web.diagram.data.graph.model.GraphSimpleEntity) { tooltip.setText(((node.getDisplayName()) + ((obj.getIdentifier()) != null ? (\" (CHEBI:\" + (obj.getIdentifier())) + \")\" : \"\"))); }else { tooltip.setText(node.getDisplayName()); } tooltip.setPositionAndShow(this, prop.getX(), prop.getY(), ((prop.getHeight()) + (8.0 * factor))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1016/buggy-version/src.main.java.org.reactome.web.diagram.tooltips.TooltipContainer.java", "BodyUseAPI": [], "Fixed commit": "313e37ad480b75507f6138be116534b9c33dc4af", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2017-01-12T14:46:50Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opengeo.data.importer.rest.ImportResource.getFormatGet()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (formatGet == null) { formatGet = new org.opengeo.data.importer.rest.ImportResource.ImportContextJSONFormat(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2648/buggy-version/geoserver.importer.src.main.java.org.opengeo.data.importer.rest.ImportResource.java", "BodyUseAPI": [], "Fixed commit": "75d2f7320a176580aba44dc79b9ed32ae9800713", "Url": "https://api.github.com/repos/boundlessgeo/suite", "Date": "2011-12-21T12:16:02Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(componentDir.contains(IConstants.ALL))) { main.exectuteLDA((((((((com.asu.mwdb.utils.IConstants.DATA) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_DIR)) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.INPUT_DIR)) + (java.io.File.separator)) + componentDir), orderLDA, 3, com.asu.mwdb.phase2Main.DriverMain.proxy); if (!(com.asu.mwdb.utils.Utils.isDirectoryCreated((((((((com.asu.mwdb.utils.IConstants.DATA) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_DIR)) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_TRANSFORM)) + (java.io.File.separator)) + componentDir)))) return; com.asu.mwdb.utils.Utils.tranformData((((((((com.asu.mwdb.utils.IConstants.DATA) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_DIR)) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_SEMANTICS)) + (java.io.File.separator)) + componentDir), (((((((com.asu.mwdb.utils.IConstants.DATA) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_DIR)) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.BASE_DATA)) + (java.io.File.separator)) + componentDir), (((((((com.asu.mwdb.utils.IConstants.DATA) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_DIR)) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_TRANSFORM)) + (java.io.File.separator)) + componentDir)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2231/buggy-version/mwdbphase2.src.com.asu.mwdb.phase2Main.DriverMain.java", "BodyUseAPI": ["com.asu.mwdb.utils.Utils.isDirectoryCreated((((((((com.asu.mwdb.utils.IConstants.DATA) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_DIR)) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_TRANSFORM)) + (java.io.File.separator)) + componentDir))", "com.asu.mwdb.utils.Utils.tranformData((((((((com.asu.mwdb.utils.IConstants.DATA) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_DIR)) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_SEMANTICS)) + (java.io.File.separator)) + componentDir),(((((((com.asu.mwdb.utils.IConstants.DATA) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_DIR)) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.BASE_DATA)) + (java.io.File.separator)) + componentDir),(((((((com.asu.mwdb.utils.IConstants.DATA) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_DIR)) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_TRANSFORM)) + (java.io.File.separator)) + componentDir))", "com.asu.mwdb.utils.Phase2Utils.exectuteLDA((((((((com.asu.mwdb.utils.IConstants.DATA) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.LDA_DIR)) + (java.io.File.separator)) + (com.asu.mwdb.utils.IConstants.INPUT_DIR)) + (java.io.File.separator)) + componentDir),java.util.List<java.util.List<java.lang.String>>,int,matlabcontrol.MatlabProxy)"], "Fixed commit": "9b0b60b4ad44b0ac0849a34a91c6973d697d3f4a", "Url": "https://api.github.com/repos/pradeephrish/Gesture-Recognition", "Date": "2013-12-02T04:10:31Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shutDownList) != null) { for (final us.codecraft.wifesays.me.ShutDownAble shutDownAble : shutDownList) { shutDownExecutors.execute(new java.lang.Runnable() { @java.lang.Override public void run() { try { shutDownAble.shutDown(); } catch (java.lang.Throwable e) { logger.warn(\"oops!My ears!\", e); } } }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/244/buggy-version/src.main.java.us.codecraft.wifesays.me.ShutDownMonitor.java", "BodyUseAPI": [], "Fixed commit": "1ec07bb730b53b17b89812085ffc661db809b5f4", "Url": "https://api.github.com/repos/code4craft/wifesays", "Date": "2013-06-27T06:44:27Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item instanceof nu.placebo.whatsup.model.ExtendedOverlayItem) { android.content.Intent startAnnotation = new android.content.Intent(activity, nu.placebo.whatsup.activity.AnnotationActivity.class); android.os.Bundle bundle = new android.os.Bundle(); bundle.putInt(\"nid\", ((nu.placebo.whatsup.model.ExtendedOverlayItem) (item)).getId()); startAnnotation.putExtras(bundle); activity.startActivity(startAnnotation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3613/buggy-version/src.nu.placebo.whatsup.activity.Marker.java", "BodyUseAPI": [], "Fixed commit": "569ff5870338fdbb4923ac73e734594c7dd783d2", "Url": "https://api.github.com/repos/sebastianljunggren/WhatsUp", "Date": "2011-10-19T15:10:06Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ListView.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (parentView != null) { runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { if (visible) { parentView.findViewById(R.id.progressBar).setVisibility(View.VISIBLE); parentView.findViewById(R.id.responseTimeView).setVisibility(View.GONE); }else { parentView.findViewById(R.id.progressBar).setVisibility(View.GONE); parentView.findViewById(R.id.responseTimeView).setVisibility(View.VISIBLE); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4739/buggy-version/storj_hoststats_app.app.src.main.java.com.steinbacher.storj_hoststats_app.ListViewHolder.java", "BodyUseAPI": ["parentView.findViewById(R.id.progressBar).setVisibility(View.VISIBLE)", "com.steinbacher.storj_hoststats_app.ListViewHolder.runOnUiThread(java.lang.Runnable)", "android.view.View.findViewById(R.id.responseTimeView)", "android.view.View.findViewById(R.id.responseTimeView)", "parentView.findViewById(R.id.responseTimeView).setVisibility(View.VISIBLE)", "android.view.View.findViewById(R.id.progressBar)", "parentView.findViewById(R.id.progressBar).setVisibility(View.GONE)", "android.view.View.findViewById(R.id.progressBar)", "parentView.findViewById(R.id.responseTimeView).setVisibility(View.GONE)"], "Fixed commit": "d861525c7577611bb62a2ae7ed12b458759e9f4f", "Url": "https://api.github.com/repos/geckogecko/storj_hoststats_app", "Date": "2017-11-12T17:24:21Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) { adapter.setSitename(searchsite); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6355/buggy-version/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1b8035713f23db82d4221109fbcdf716a834af9f", "Url": "https://api.github.com/repos/toddburgessmedia/HotonStack", "Date": "2016-07-26T15:58:54Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((response.code()) != 200) && (!(searchLanguage))) { android.widget.Toast.makeText(this, \"No Github Projects Found\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6355/buggy-version/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.GitHubActivity.java", "BodyUseAPI": [], "Fixed commit": "1b8035713f23db82d4221109fbcdf716a834af9f", "Url": "https://api.github.com/repos/toddburgessmedia/HotonStack", "Date": "2016-07-26T15:58:54Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((version) == 1) { if ((dataLength) == 0) { return com.smartdevicelink.transport.SdlPsm.FINISHED_STATE; } payload = new byte[dataLength]; dumpSize = dataLength; return com.smartdevicelink.transport.SdlPsm.DATA_PUMP_STATE; }else { return com.smartdevicelink.transport.SdlPsm.MESSAGE_1_STATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6639/buggy-version/sdl_android_lib.src.com.smartdevicelink.transport.SdlPsm.java", "BodyUseAPI": [], "Fixed commit": "ebb6968d38f819331f7df64a292cf66cb9ded51c", "Url": "https://api.github.com/repos/FordDev/sdl_android", "Date": "2015-02-06T18:41:22Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((version) > 1) { builder.append((\"\\nMessageId: \" + (messageId))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6639/buggy-version/sdl_android_lib.src.com.smartdevicelink.protocol.SdlPacket.java", "BodyUseAPI": [], "Fixed commit": "ebb6968d38f819331f7df64a292cf66cb9ded51c", "Url": "https://api.github.com/repos/FordDev/sdl_android", "Date": "2015-02-06T18:41:22Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["txfEmail.getText().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (email.isEmpty()) { student = new model.Student(first, middle, last, uwNetID, studentDegree); }else { student = new model.Student(first, middle, last, email, uwNetID, studentDegree); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9030/buggy-version/src.view.StudentGUI.java", "BodyUseAPI": [], "Fixed commit": "5c83594c719ed672e4013e2aa9504489b680fc10", "Url": "https://api.github.com/repos/360group7/360", "Date": "2016-12-02T03:40:23Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((document) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5945/buggy-version/src.main.java.zemfi.de.vertaktoid.FacsimileView.java", "BodyUseAPI": [], "Fixed commit": "aaaa64de48e04552f36108313e70aaa054c02127", "Url": "https://api.github.com/repos/cemfi/vertaktoid", "Date": "2016-12-12T23:31:16Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zemfi.de.vertaktoid.MainActivity.findViewById(R.id.custom_view)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((view.document) != null) { view.setImage(com.davemorrissey.labs.subscaleview.ImageSource.uri(android.net.Uri.fromFile(new java.io.File(view.document.pages.get(view.pageNumber.get()).filePath)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5945/buggy-version/src.main.java.zemfi.de.vertaktoid.MainActivity.java", "BodyUseAPI": ["com.davemorrissey.labs.subscaleview.ImageSource.uri(android.net.Uri.fromFile(new java.io.File(view.document.pages.get(view.pageNumber.get()).filePath)))", "view.document.pages.get(view.pageNumber.get())", "view.pageNumber.get()", "zemfi.de.vertaktoid.FacsimileView.setImage(com.davemorrissey.labs.subscaleview.ImageSource.uri(android.net.Uri.fromFile(new java.io.File(view.document.pages.get(view.pageNumber.get()).filePath))))", "android.net.Uri.fromFile(java.io.File)"], "Fixed commit": "aaaa64de48e04552f36108313e70aaa054c02127", "Url": "https://api.github.com/repos/cemfi/vertaktoid", "Date": "2016-12-12T23:31:16Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pair.length) == 2) request.put(pair[0], pair[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6002/buggy-version/src.com.oliver.ServletRequest.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "d52495b0cbd3e513aa3096a7bd18c617ee87a87b", "Url": "https://api.github.com/repos/gscalvary/myBasicHTTPServer", "Date": "2015-07-01T16:52:54Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((terms.length) == 2) parseURLParameters(terms[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6002/buggy-version/src.com.oliver.ServletRequest.java", "BodyUseAPI": ["com.oliver.ServletRequest.parseURLParameters(java.lang.String)"], "Fixed commit": "d52495b0cbd3e513aa3096a7bd18c617ee87a87b", "Url": "https://api.github.com/repos/gscalvary/myBasicHTTPServer", "Date": "2015-07-01T16:52:54Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eyeseetea.malariacare.database.utils.planning.PlannedItemBuilder.getSurveyKey(survey.getOrgUnit(),survey.getTabGroup().getProgram())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(surveyMap.containsKey(key))) surveyMap.put(key, survey);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5777/buggy-version/app.src.main.java.org.eyeseetea.malariacare.database.utils.planning.PlannedItemBuilder.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.eyeseetea.malariacare.database.model.Survey>.put(java.lang.String,org.eyeseetea.malariacare.database.model.Survey)"], "Fixed commit": "294e94161c4d81f647c9faa5a3a31378b07b4cfc", "Url": "https://api.github.com/repos/EyeSeeTea/malariapp", "Date": "2016-01-24T01:27:44Z"},
{"Line": "=>1025", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((urlParts.length) > 2) { regionId = urlParts[1]; if (regionId.startsWith(\"s3-\")) { regionId = regionId.substring(3); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/553/buggy-version/src.main.java.org.dasein.cloud.aws.AWSCloud.java", "BodyUseAPI": [], "Fixed commit": "a8c3cf0f941784abf0231f327ede43348d0a0615", "Url": "https://api.github.com/repos/pshafton/dasein-cloud-aws", "Date": "2016-07-04T14:13:58Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (window.areOptionsVisible()) { window.initOptions(window.getSelectedGame()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8522/buggy-version/src.main.java.net.sf.rails.ui.swing.GameSetupController.java", "BodyUseAPI": ["net.sf.rails.ui.swing.GameSetupWindow.getSelectedGame()", "net.sf.rails.ui.swing.GameSetupWindow.initOptions(window.getSelectedGame())"], "Fixed commit": "d0cf0903a81d3043da3f8e1a25d2e291bd12283c", "Url": "https://api.github.com/repos/blentz/Rails", "Date": "2015-08-17T13:06:57Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mage.game.events.ZoneChangeEvent) (event)).getFromZone().equals(Zone.STACK)) { mage.game.stack.Spell spell = game.getStack().getSpell(event.getTargetId()); if ((spell != null) && (commanderId.equals(spell.getSourceId()))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1563/buggy-version/Mage.src.mage.abilities.effects.common.continuous.CommanderReplacementEffect.java", "BodyUseAPI": [], "Fixed commit": "0c08784fe9ad2e0e953434c57ddcf9b979ee6347", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-10-06T20:40:54Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 1) { java.lang.System.out.println(\"No can do: no index provided\"); }else { try { app.checkTask(java.lang.Integer.valueOf(args[1])); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Unable to check: index is not a number\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6893/buggy-version/src.TodoApp.java", "BodyUseAPI": ["TodoApp.checkTask(java.lang.Integer)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "c9e88bed7602910df42cc0de636ba9c140d77e95", "Url": "https://api.github.com/repos/green-fox-academy/kaghee-todo-app", "Date": "2017-09-29T10:48:49Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uType == (nctu.nol.file.LogFileWriter.TESTING_TYPE)) GyroDataWriter.writeInertialDataFile(gyro_data.time, gyro_data.values[0], gyro_data.values[1], gyro_data.values[2]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/111/buggy-version/app.src.main.java.nctu.nol.bt.devices.BeaconHandler.java", "BodyUseAPI": [], "Fixed commit": "1fb6c61f86d40f14d3b398e68314e6f4f8685f51", "Url": "https://api.github.com/repos/backzero/BadmintonLog_v2_Audio", "Date": "2016-04-21T06:30:40Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(distance.equals(\"\"))) { parsedDistance = java.lang.Double.parseDouble(distance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8858/buggy-version/src.main.java.org.trainingTracker.servlets.SaveCardiovascularRecord.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "10c18541d234e28680a19d6320c5214b8adef7ec", "Url": "https://api.github.com/repos/Gascon95/trainingTracker", "Date": "2017-01-07T18:22:16Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(str.equals(\"\"))) { try { if (!((java.lang.Double.parseDouble(str)) > 0)) { error = true; } } catch (java.lang.NullPointerException e) { error = true; } catch (java.lang.NumberFormatException e) { error = true; } if (error) { response.getWriter().println(\"Distancia no v\u00e1lida\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8858/buggy-version/src.main.java.org.trainingTracker.servlets.SaveCardiovascularRecord.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "10c18541d234e28680a19d6320c5214b8adef7ec", "Url": "https://api.github.com/repos/Gascon95/trainingTracker", "Date": "2017-01-07T18:22:16Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (location != null) { double longitude = location.getLongitude(); double latitude = location.getLatitude(); com.google.android.gms.maps.model.LatLng latLng = new com.google.android.gms.maps.model.LatLng(latitude, longitude); mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLng(latLng)); mMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.zoomTo(15)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1772/buggy-version/app.src.main.java.edu.temple.appsnmaps.foodocracy.MapsActivity.java", "BodyUseAPI": ["android.location.Location.getLatitude()", "android.location.Location.getLongitude()"], "Fixed commit": "77daefb70ffd9efb08ca7d1827198bdd581b7714", "Url": "https://api.github.com/repos/harshu195/FoodOCracy", "Date": "2015-08-11T23:51:10Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.format.demo.dao.UserDao.searchByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userDto == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/628/buggy-version/src.main.java.org.format.demo.service.AuthService.java", "BodyUseAPI": [], "Fixed commit": "212ab80c4181254344a0835fdea86e49ddca89df", "Url": "https://api.github.com/repos/fangjian0423/springmvc-authorization", "Date": "2014-11-28T02:19:53Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (plugin.getConfig().isSet(specificPath)) { org.bukkit.configuration.ConfigurationSection specificFlags = plugin.getConfig().getConfigurationSection(specificPath); result = (result && (specificFlags != null)) && (updateRegionFlags(region, specificFlags)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8739/buggy-version/AreaShop.src.main.java.me.wiefferink.areashop.features.WorldGuardRegionFlagsFeature.java", "BodyUseAPI": ["me.wiefferink.areashop.features.WorldGuardRegionFlagsFeature.getConfig()", "plugin.getConfig().getConfigurationSection(java.lang.String)"], "Fixed commit": "f7c86881ccb949430fafe3a8c33cd7604853d3e1", "Url": "https://api.github.com/repos/NLthijs48/AreaShop", "Date": "2016-07-24T18:25:58Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.MnC.MnC_SERVER_MOD.manor.ManorManager.getManorByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (manor == null) player.getPlayerInstance().sendMessage(\"There is no such manor\"); else { if ((manor.getSpawnLocation()) == null) { player.getPlayerInstance().sendMessage(\"This manor has no teleport\"); }else { player.getPlayerInstance().teleport(manor.getSpawnLocation()); player.getPlayerInstance().sendMessage((\"You have been teleported to manor \" + (manor.getName()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/879/buggy-version/me.MnC.MnC_SERVER_MOD.manor.ManorCommandExecutor.java", "BodyUseAPI": ["me.MnC.MnC_SERVER_MOD.manor.Manor.getSpawnLocation()", "player.getPlayerInstance().sendMessage((\"You have been teleported to manor \" + (manor.getName())))", "me.MnC.MnC_SERVER_MOD.manor.Manor.getName()", "me.MnC.MnC_SERVER_MOD.manor.Manor.getSpawnLocation()", "player.getPlayerInstance().teleport(manor.getSpawnLocation())"], "Fixed commit": "57991cc1d2be01c4df9ec28c116ba24381672830", "Url": "https://api.github.com/repos/MineAndCraft/MnC_SERVER_MOD", "Date": "2013-07-08T13:33:57Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(parItem.getCategory().contentEquals(parAnother.getCategory()))) { res = parItem.getCategory().compareTo(parAnother.getCategory()); }else { res = parItem.getName().compareTo(parAnother.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2416/buggy-version/app.src.main.java.com.nbossard.packlist.model.ItemComparatorCategoryAlphabetical.java", "BodyUseAPI": ["com.nbossard.packlist.model.Item.getCategory()", "com.nbossard.packlist.model.Item.getName()", "com.nbossard.packlist.model.Item.getCategory()", "parItem.getCategory().compareTo(parAnother.getCategory())", "com.nbossard.packlist.model.Item.getName()", "parItem.getName().compareTo(parAnother.getName())"], "Fixed commit": "1d394a9b493b4cb9e2f5480a8a3f82b53b4c1a35", "Url": "https://api.github.com/repos/nbossard/packlist", "Date": "2016-07-08T21:19:49Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username != null) || (password != null)) credentials = new org.apache.http.auth.UsernamePasswordCredentials(username, password); else credentials = new org.apache.http.auth.UsernamePasswordCredentials(endpoint.getAuthority());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/699/buggy-version/guice.restclient.src.main.java.com.peterphi.std.guice.restclient.resteasy.impl.ResteasyProxyClientFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "684fd82c1b79755b5326c1ca7a132bbbcdf79f27", "Url": "https://api.github.com/repos/petergeneric/stdlib", "Date": "2015-02-17T13:06:56Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.getHost()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (platformString.contains(\"urionlinejudge\")) { contestPlatform.setImageResource(R.mipmap.urioj_logo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/38/buggy-version/app.src.main.java.com.iitp.njack.iitp_connect.CodingCalendar.Adapters.CodingCalendarAdapter.java", "BodyUseAPI": [], "Fixed commit": "83eba11dfeacaa3d81a0b264f13c4802e4cdcccd", "Url": "https://api.github.com/repos/Kartik2016/IITP-Connect", "Date": "2017-12-10T20:03:57Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(allocateFinished.get())) { int timeElapsed = ((int) ((java.lang.System.currentTimeMillis()) - (startTime))); if (timeElapsed > (allocationTimeout)) { java.lang.String msg = java.lang.String.format(\"allocation timeout reached, time-used:%d(ms), failure-time-out:%d(ms), fail job,\", timeElapsed, allocationTimeout); dispatcher.getEventHandler().handle(new com.pivotal.hamster.appmaster.event.HamsterFailureEvent(new com.pivotal.hamster.common.HamsterException(msg), msg)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4589/buggy-version/hamster-core.src.main.java.com.pivotal.hamster.appmaster.allocator.YarnContainerAllocator.java", "BodyUseAPI": [], "Fixed commit": "dad25c368809c48e82921e34c93004166b295aa0", "Url": "https://api.github.com/repos/leftnoteasy-tmp/ddb6949db8c5307cccaa8da2e21df2f3", "Date": "2013-08-29T07:21:47Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctx.getInjectionContext().isAsync()) { final org.jboss.errai.codegen.Statement runnable = org.jboss.errai.codegen.util.Stmt.newObject(java.lang.Runnable.class).extend().publicOverridesMethod(\"run\").append(addInitCallback).finish().finish(); stmts.add(org.jboss.errai.codegen.util.Stmt.loadVariable(\"async\").invoke(\"runOnFinish\", runnable)); }else { stmts.add(addInitCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7557/buggy-version/errai-ui.src.main.java.org.jboss.errai.ui.rebind.TemplatedCodeDecorator.java", "BodyUseAPI": [], "Fixed commit": "dd5fcf27deab6d3099eb4d126afcb9ab7be5a2a9", "Url": "https://api.github.com/repos/jfuerth/errai", "Date": "2014-03-24T21:28:55Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (errorReporter.errorEncountered()) { throw new com.ldbc.driver.runtime.streams.IteratorSplittingException(java.lang.String.format(\"Splitting terminated\\n%s\", errorReporter.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7590/buggy-version/src.main.java.com.ldbc.driver.runtime.streams.IteratorSplitter.java", "BodyUseAPI": ["com.ldbc.driver.runtime.ConcurrentErrorReporter.toString()", "java.lang.String.format(java.lang.String,errorReporter.toString())"], "Fixed commit": "9b584b7acb1e8c290e0b852cff814b7ea99f8831", "Url": "https://api.github.com/repos/ldbc/ldbc_driver", "Date": "2014-06-30T08:15:47Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((url.isEmpty()) && (urlQueue.isEmpty())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1470/buggy-version/src.main.java.org.solution.crawler.threads.URLFetcher.java", "BodyUseAPI": [], "Fixed commit": "7359748bec326c768bc58d8076185288c1974476", "Url": "https://api.github.com/repos/wxlfrank/crawler", "Date": "2016-03-31T21:54:12Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((address) instanceof java.net.InetSocketAddress) { if (\"0.0.0.0\".equals(((java.net.InetSocketAddress) (address)).getAddress().getHostAddress())) { java.lang.System.out.println((\"Unbind the server address \" + (acceptor.getLocalAddresses()))); acceptor.unbind(acceptor.getLocalAddresses()); }else { acceptor.unbind(address); } }else { acceptor.unbind(address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3386/buggy-version/components.camel-mina2.src.main.java.org.apache.camel.component.mina2.Mina2Consumer.java", "BodyUseAPI": [], "Fixed commit": "4dd8545f6d33ba02acef67ad0f87623d58b98cc4", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-12-22T00:49:14Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (load.finished()) { load.reset(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7102/buggy-version/src.bwyap.familyfeud.render.state.RenderStateNewGame.java", "BodyUseAPI": ["bwyap.familyfeud.render.component.Fader.reset()"], "Fixed commit": "ceb1bbefb12c8f818b3dfe3c54fbfcbcefa96037", "Url": "https://api.github.com/repos/bwyap/java-familyfeud", "Date": "2017-05-07T07:21:22Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,new com.google.gson.reflect.TypeToken<io.soramitsu.irohaandroid.entity.AccountEntity>() {}.getType())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((accountEntity.status) == 400) { throw new io.soramitsu.irohaandroid.exception.UserNotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7116/buggy-version/iroha-android.src.main.java.io.soramitsu.irohaandroid.repository.impl.AccountRepositoryImpl.java", "BodyUseAPI": [], "Fixed commit": "24218347dd2218a768d3dfe19fc0ecea84d6a769", "Url": "https://api.github.com/repos/hyperledger/iroha-android", "Date": "2017-01-18T10:33:47Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adgear.anoa.tools.function.AnoaFieldNuller<T>.getFieldAtPath(T,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (wrapper != null) { wrapper.field.set(wrapper.object, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3163/buggy-version/tools.src.main.java.com.adgear.anoa.tools.function.AnoaFieldNuller.java", "BodyUseAPI": ["java.lang.reflect.Field.set(java.lang.Object,<nulltype>)"], "Fixed commit": "dc4a109717b84b7096c94b3df44fb461c78be977", "Url": "https://api.github.com/repos/postamar/anoa", "Date": "2015-04-22T16:49:56Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((today.compareTo(selectedDate)) < 0) { java.lang.System.out.println(\"Today Date is Lesser than my Date\"); EditEventsFragment.event_title_text.setText(Constants.strDT); }else if ((today.compareTo(selectedDate)) > 0) { java.lang.System.out.println(\"Today Date is Greater than my date\"); android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder(getActivity()); builder.setTitle(\"Invalid\"); builder.setMessage(\"Please select future date.\"); builder.setPositiveButton(\"Okay\", new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { dialog.cancel(); kutumblink.appants.com.kutumblink.utils.Constants.strDT = \"\"; EditEventsFragment.event_title_text.setText(\"\"); } }); builder.show(); }else { java.lang.System.out.println(\"Both Dates are equal\"); EditEventsFragment.event_title_text.setText(Constants.strDT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7549/buggy-version/KutumbLink.app.src.main.java.kutumblink.appants.com.kutumblink.HomeActivity.java", "BodyUseAPI": ["java.util.Date.compareTo(java.util.Date)"], "Fixed commit": "79d8032397b71683094ab71b09dc92e308619f58", "Url": "https://api.github.com/repos/RajesMca008/KutCon", "Date": "2017-06-08T13:30:32Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((args.length) < 3) java.lang.System.out.println(((\"(WARN) \" + (previousClass)) + \" not mapped, ignore it...\")); else classMap.put(new eu.thog.specialremapper.ClassEntry(loader, previousClass, true), new eu.thog.specialremapper.ClassEntry(loader, args[2], false));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2650/buggy-version/src.main.java.eu.thog.specialremapper.SpecialRemapper.java", "BodyUseAPI": ["java.util.Map<eu.thog.specialremapper.ClassEntry, eu.thog.specialremapper.ClassEntry>.put(eu.thog.specialremapper.ClassEntry,eu.thog.specialremapper.ClassEntry)"], "Fixed commit": "d1a134b99d2815c6e613223a135723333e8534a5", "Url": "https://api.github.com/repos/Thog/SpecialRemapper", "Date": "2016-02-25T10:53:27Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.thog.specialremapper.SpecialRemapper.getClassEntry(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (parentEntry == null) java.lang.System.out.println(((\"(WARN) No parent found for class \" + (args[1])) + \", ignore it...\")); else classMap.put(new eu.thog.specialremapper.ClassEntry(loader, args[1].replace(\"none/\", \"\"), true), new eu.thog.specialremapper.ClassEntry(loader, (((parentEntry.getName()) + \"$\") + (args[2])), false));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2650/buggy-version/src.main.java.eu.thog.specialremapper.SpecialRemapper.java", "BodyUseAPI": ["java.util.Map<eu.thog.specialremapper.ClassEntry, eu.thog.specialremapper.ClassEntry>.put(eu.thog.specialremapper.ClassEntry,eu.thog.specialremapper.ClassEntry)", "eu.thog.specialremapper.ClassEntry.getName()"], "Fixed commit": "d1a134b99d2815c6e613223a135723333e8534a5", "Url": "https://api.github.com/repos/Thog/SpecialRemapper", "Date": "2016-02-25T10:53:27Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentSkipListMap<java.lang.Double, java.lang.Long>.firstKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (first < priority) { if ((values.putIfAbsent(priority, value)) == null) { while ((values.remove(first)) == null) { first = values.firstKey(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1054/buggy-version/src.main.java.com.yammer.metrics.stats.ExponentiallyDecayingSample.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentSkipListMap<java.lang.Double, java.lang.Long>.remove(java.lang.Double)", "java.util.concurrent.ConcurrentSkipListMap<java.lang.Double, java.lang.Long>.putIfAbsent(double,long)"], "Fixed commit": "baec1353a15dacb4cb816a4d594ba484fc553876", "Url": "https://api.github.com/repos/martint/metrics", "Date": "2011-04-22T21:04:58Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fwdMap.containsKey(key))) fwdMap.put(key, new java.util.ArrayList<>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7571/buggy-version/src.net.kopeph.ld31.util.OneToManyBiMap.java", "BodyUseAPI": ["java.util.Map<L, java.util.List<R>>.put(L,java.util.ArrayList<>)"], "Fixed commit": "674ceb5c2f11560b6edb1c29883ced013a137e16", "Url": "https://api.github.com/repos/hazmatsuitor/Blockade-Runner", "Date": "2015-01-17T03:14:05Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (entry != null) { values.addAll(entry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6644/buggy-version/api2-model.src.main.java.eu.europeana.api2.v1.model.json.view.FullDoc.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)"], "Fixed commit": "3c817360f370d63a3962f6a19b61d1b70ca73121", "Url": "https://api.github.com/repos/europeana/api2", "Date": "2014-12-09T09:33:30Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.stephanlindauer.criticalmass.utils.ImageCache.decodeSampleBitmapFromFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bitmap == null) { throw new java.lang.Exception(\"couldn't load from disk\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1190/buggy-version/src.de.stephanlindauer.criticalmass.utils.ImageCache.java", "BodyUseAPI": [], "Fixed commit": "6b025df6bf4b44a5b95ed88f4e0e614904ab274b", "Url": "https://api.github.com/repos/kibotu/criticalmass-berlin", "Date": "2014-09-21T08:42:56Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dest.isDirect())) { throw new com.codedisaster.steamworks.SteamException(\"Direct buffer required!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3093/buggy-version/java-wrapper.src.main.java.com.codedisaster.steamworks.SteamNetworking.java", "BodyUseAPI": [], "Fixed commit": "ba424ffdfc13e0466115edf72804fdd415d3b4c1", "Url": "https://api.github.com/repos/code-disaster/steamworks4j", "Date": "2015-05-23T14:27:11Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(data.isDirect())) { throw new com.codedisaster.steamworks.SteamException(\"Direct buffer required!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3093/buggy-version/java-wrapper.src.main.java.com.codedisaster.steamworks.SteamNetworking.java", "BodyUseAPI": [], "Fixed commit": "ba424ffdfc13e0466115edf72804fdd415d3b4c1", "Url": "https://api.github.com/repos/code-disaster/steamworks4j", "Date": "2015-05-23T14:27:11Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cons.asWithKeywordParameters().getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (paramValue == null) { __eval.__getOperator(); if ((__eval.__getOperator().name().equals(AssignmentOperator.IsDefined.name())) && ((__eval.__getValue()) != null)) { paramValue = __eval.__getValue().getValue(); }else { paramValue = receiver.fieldAccess(label, __eval.getCurrentEnvt().getStore()).getValue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5941/buggy-version/src.org.rascalmpl.semantics.dynamic.Assignable.java", "BodyUseAPI": [], "Fixed commit": "5b635c09e536fcf1f2621d1c3f3ce6ad77bb717c", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2015-09-18T12:33:39Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (history == null) { history = protocol.getLastProtocolHistory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9135/buggy-version/src.main.java.module.protocols.dto.ProtocolCreationBean.java", "BodyUseAPI": [], "Fixed commit": "6d67c122a05f996e3ba0af0b0decd2259f89af67", "Url": "https://api.github.com/repos/ist-dsi/protocols", "Date": "2014-06-26T10:06:31Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (metterDistance > 0) { virtualDistance = (distance * pxCanvas) / metterDistance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7877/buggy-version/app.src.main.java.com.napkin.radar.Radar.java", "BodyUseAPI": [], "Fixed commit": "3303cba597b9a9a56be80249dc980e2c7d8c1a56", "Url": "https://api.github.com/repos/napkinapp/napkin-radar", "Date": "2016-12-08T14:51:55Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.util.Arrays.asList(columns).contains(GenericReportColumnEnum.priceAfterTax))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8784/buggy-version/src.main.java.org.iabako.server.dao.report.AbstractReportDAO.java", "BodyUseAPI": [], "Fixed commit": "3c248be18a0d40354149aeb512fd630b880b57cc", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2016-06-21T09:03:40Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r <= 0) { mValue = p0.getM(); }else if (r >= 1) { mValue = p1.getM(); }else { mValue = (p0.getM()) + (r * ((p1.getM()) - (p0.getM()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7458/buggy-version/src.main.java.org.geolatte.geom.DefaultMeasureGeometryOperations.java", "BodyUseAPI": [], "Fixed commit": "bd3ae49a6c76e3c2e2d3e6453e55af1dba481cd1", "Url": "https://api.github.com/repos/GeoLatte/geolatte-geom", "Date": "2014-08-07T12:46:29Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ODatabaseRecordThreadLocal.INSTANCE.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((tlDb != null) && (!(tlDb.isClosed()))) this.db = ((com.orientechnologies.orient.core.db.document.ODatabaseDocumentTx) (tlDb)).copy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5480/buggy-version/core.src.main.java.com.orientechnologies.orient.core.schedule.OScheduledEvent.java", "BodyUseAPI": [], "Fixed commit": "904d692949ecc75c88d72c5fa257cef96fec0e25", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-05-13T17:09:40Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((connections.size()) == 0) { return new java.util.ArrayList<net.kuujo.vertigo.output.Connection>(); }else if ((current) >= (connections.size())) { current = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1308/buggy-version/src.main.java.net.kuujo.vertigo.output.selector.RoundSelector.java", "BodyUseAPI": ["java.util.List<net.kuujo.vertigo.output.Connection>.size()"], "Fixed commit": "e5be5612785c509f9f366ceb5c734036a2d3d794", "Url": "https://api.github.com/repos/kuujo/vertigo", "Date": "2013-11-02T02:57:28Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((day > 2) && (day < 8)) { cal.add(java.util.Calendar.DATE, 7); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2871/buggy-version/app.src.main.java.io.punchtime.punchtime.ui.fragments.WeekFragment.java", "BodyUseAPI": [], "Fixed commit": "fccbccd9e85e7f129661f80785043940da011afb", "Url": "https://api.github.com/repos/punchtime/android", "Date": "2016-05-06T16:02:55Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((metaMessage.length) < 3) { GUIHandler.instance.getChatPanel().AddNewMessageChat(\"\", metaMessage[0], java.lang.Integer.parseInt(metaMessage[1])); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4685/buggy-version/WahtsUp.src.wahtsup.MessageHandler.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "GUIHandler.instance.getChatPanel().AddNewMessageChat(java.lang.String,java.lang.String,int)"], "Fixed commit": "34e338fc26e766c9c4e8ea04abce7a9f61d838d8", "Url": "https://api.github.com/repos/g4solio/WhatsUp", "Date": "2017-11-13T08:19:39Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (jSlots != null) { java.util.List<org.freebxml.omar.client.xml.registry.infomodel.SlotImpl> slots = createSlots(jSlots); eo.addSlots(slots); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5740/buggy-version/ames-web-service.src.de.kp.ames.web.function.domain.model.DocumentObject.java", "BodyUseAPI": ["de.kp.ames.web.function.domain.model.DocumentObject.createSlots(org.json.JSONObject)"], "Fixed commit": "059a1f7b7fbfbf557f755a35f4f3c79303d25702", "Url": "https://api.github.com/repos/skrusche63/AMES-Web-Service", "Date": "2012-09-20T12:05:54Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.displayData) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3465/buggy-version/src.main.java.io.mlh.services.SystemStateService.java", "BodyUseAPI": [], "Fixed commit": "232d9ae194ac438f7d368521947a44e6dc1efe78", "Url": "https://api.github.com/repos/crownz/HackSheffieldFront", "Date": "2016-10-15T20:40:38Z"},
{"Line": "=>6896", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.codename1.impl.ios.IOSImplementation.instance.isEditingText()) { com.codename1.impl.ios.IOSImplementation.foldKeyboard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1128/buggy-version/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java", "BodyUseAPI": [], "Fixed commit": "2daf60f8c5665b28b902ead4d09e6040a4e1e9a2", "Url": "https://api.github.com/repos/wiltonlazary/CodenameOne", "Date": "2016-04-15T17:06:43Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.constellio.model.entities.records.Record.get(com.constellio.model.entities.schemas.Metadata)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (parentMetadataId != null) { com.constellio.model.entities.records.Record parentRecord = recordServices.getDocumentById(parentMetadataId); listOfMetadataTags.addAll(java.util.Arrays.asList(new org.jdom2.Element(((((com.constellio.app.modules.rm.services.reports.XmlGenerator.REFERENCE_PREFIX) + (metadata.getCode().replace(\"_default_\", \"_\"))) + (com.constellio.app.modules.rm.services.reports.XmlGenerator.PARENT_SUFFIX)) + \"_code\")).setText(parentRecord.<java.lang.String>get(Schemas.CODE)), new org.jdom2.Element(((((com.constellio.app.modules.rm.services.reports.XmlGenerator.REFERENCE_PREFIX) + (metadata.getCode().replace(\"_default_\", \"_\"))) + (com.constellio.app.modules.rm.services.reports.XmlGenerator.PARENT_SUFFIX)) + \"_title\")).setText(parentRecord.<java.lang.String>get(Schemas.TITLE)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1583/buggy-version/app.src.com.constellio.app.modules.rm.services.reports.XmlGenerator.java", "BodyUseAPI": ["com.constellio.model.services.records.RecordServices.getDocumentById(java.lang.String)"], "Fixed commit": "544c02137d14c0ae9ec1c3f60b8edec004de0343", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-09-06T14:04:10Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.bias) == null) { this.biasFlag = biasFlag; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/343/buggy-version/src.main.java.com.github.klane.wann.core.WANNBuilder.java", "BodyUseAPI": [], "Fixed commit": "2727b26a5617be3f86db4a632a3e160590406371", "Url": "https://api.github.com/repos/klane/wekanet", "Date": "2015-05-31T06:58:31Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.hasBlockOption())) { org.eclipse.californium.core.network.stack.KeyUri key = org.eclipse.californium.core.network.stack.BlockwiseLayer.getKey(exchange, response); org.eclipse.californium.core.network.stack.Block2BlockwiseStatus status = getInboundBlock2Status(key, exchange, response); if ((((response.getOptions().hasObserve()) && (status != null)) && (status.isNotification())) && ((status.getObserve()) < (response.getOptions().getObserve()))) { exchange.setComplete(); exchange.setCurrentRequest(exchange.getRequest()); clearBlock2Status(key); } exchange.setResponse(response); upper().receiveResponse(exchange, response); }else { if (response.getOptions().hasBlock1()) { handleBlock1Response(exchange, response); } if (response.getOptions().hasBlock2()) { handleBlock2Response(exchange, response); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5833/buggy-version/californium-core.src.main.java.org.eclipse.californium.core.network.stack.BlockwiseLayer.java", "BodyUseAPI": ["org.eclipse.californium.core.network.stack.BlockwiseLayer.handleBlock2Response(org.eclipse.californium.core.network.Exchange,org.eclipse.californium.core.coap.Response)", "org.eclipse.californium.core.network.stack.BlockwiseLayer.handleBlock1Response(org.eclipse.californium.core.network.Exchange,org.eclipse.californium.core.coap.Response)", "response.getOptions().getObserve()", "org.eclipse.californium.core.coap.Response.getOptions()", "org.eclipse.californium.core.coap.Response.getOptions()", "org.eclipse.californium.core.network.stack.BlockwiseLayer.getInboundBlock2Status(org.eclipse.californium.core.network.stack.KeyUri,org.eclipse.californium.core.network.Exchange,org.eclipse.californium.core.coap.Response)", "response.getOptions().hasBlock1()", "response.getOptions().hasBlock2()", "upper().receiveResponse(org.eclipse.californium.core.network.Exchange,org.eclipse.californium.core.coap.Response)", "org.eclipse.californium.core.coap.Response.getOptions()", "org.eclipse.californium.core.coap.Response.getOptions()", "response.getOptions().hasObserve()", "org.eclipse.californium.core.network.Exchange.setResponse(org.eclipse.californium.core.coap.Response)", "org.eclipse.californium.core.network.stack.BlockwiseLayer.getKey(org.eclipse.californium.core.network.Exchange,org.eclipse.californium.core.coap.Response)"], "Fixed commit": "8e83a1be9aeb8d4290e411113d0182ee23cbe224", "Url": "https://api.github.com/repos/eclipse/californium", "Date": "2016-12-23T12:19:01Z"},
{"Line": "=>910", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.parser.ParserConfig.getField(java.lang.Class<?>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (field == null) { field = com.alibaba.fastjson.parser.ParserConfig.getField(clazz, methodName.substring(3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2784/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "2a3c97b961268fa1a3ef61673a8bcb4c2de585c9", "Url": "https://api.github.com/repos/AlibabaTech/fastjson", "Date": "2013-02-27T09:11:16Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((target.width) != 20) java.lang.System.out.println((\"width: \" + (target.width)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3770/buggy-version/src.com.shigeodayo.pframe.PFrame.java", "BodyUseAPI": ["java.io.PrintStream.println((\"width: \" + (target.width)))"], "Fixed commit": "a5e207932f5f46352879dd57caf305d040056cbe", "Url": "https://api.github.com/repos/shigeodayo/PFrame", "Date": "2012-04-17T03:16:35Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((target.height) != 20) java.lang.System.out.println((\"height: \" + (target.height)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3770/buggy-version/src.com.shigeodayo.pframe.PFrame.java", "BodyUseAPI": ["java.io.PrintStream.println((\"height: \" + (target.height)))"], "Fixed commit": "a5e207932f5f46352879dd57caf305d040056cbe", "Url": "https://api.github.com/repos/shigeodayo/PFrame", "Date": "2012-04-17T03:16:35Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 < (processing.opengl.LinePath.PathIterator.curvecoords[type])) { pointIdx += processing.opengl.LinePath.PathIterator.curvecoords[type]; (colorIdx)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4696/buggy-version/core.src.processing.opengl.LinePath.java", "BodyUseAPI": [], "Fixed commit": "4c984661d563a9a6925f0109d8a66ac6e6c2ef32", "Url": "https://api.github.com/repos/processing/processing", "Date": "2013-05-18T01:20:51Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["conf.get(\"dfs.datanode.data.dir\", \"file:///tmp/\").split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dataDirs.length) == 1) { idx = 0; }else { while (true) { int i = (java.lang.Math.abs(new java.util.Random(java.lang.System.currentTimeMillis()).nextInt())) % (dataDirs.length); if (i != n) { idx = i; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1102/buggy-version/core.src.main.java.com.aliyun.fs.oss.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "5628363eef148afeea446c433a0ad333a58855e8", "Url": "https://api.github.com/repos/uncleGen/aliyun-emapreduce-sdk", "Date": "2016-04-11T03:03:23Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (houseElements.get(0).equals(houseElements.get(1))) { java.lang.System.out.println(\"Oh shit.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7371/buggy-version/src.model.ViewHandler.java", "BodyUseAPI": [], "Fixed commit": "abf48a730ad7c4dc0e28b9d4883c88299e1badb9", "Url": "https://api.github.com/repos/Odixi/UI-course", "Date": "2016-03-22T11:01:09Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userService.exists(customer.getUsername())) { result.addError(new org.springframework.validation.ObjectError(\"duplicateEntry\", \"Duplicate entry\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4624/buggy-version/src.main.java.com.epam.jjp.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "366743f99723e2769fea23c6f6988cb3e2e8a188", "Url": "https://api.github.com/repos/balazsgerendai/spring-mvc-webshop", "Date": "2014-09-17T13:23:19Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.undeadscythes.udsplugin.eventhandlers.InventoryClose.findShopOwner(block.getLocation())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (player != null) { player.credit(totalDue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2604/buggy-version/src.com.undeadscythes.udsplugin.eventhandlers.InventoryClose.java", "BodyUseAPI": ["com.undeadscythes.udsplugin.eventhandlers.SaveablePlayer.credit(int)"], "Fixed commit": "390647b8d01eaa223bc761060d101fa502814998", "Url": "https://api.github.com/repos/UDSMinecraft/UDSPlugin", "Date": "2013-08-07T11:34:41Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(outer.controller.quizIsComplete())) super.actionPerformed(e); else { outer.overrideButton.setEnabled(false); int score = outer.controller.getScore(); int possibleScore = outer.controller.getPossibleScore(); outer.scoreLabel.setText(java.lang.String.format(\"Score: %d/%d\", score, possibleScore)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9100/buggy-version/src.edu.ucsb.cs56.projects.utilities.flashcards.QuizFrame.java", "BodyUseAPI": ["javax.swing.JLabel.setText(java.lang.String)", "javax.swing.JButton.setEnabled(boolean)", "edu.ucsb.cs56.projects.utilities.flashcards.QuizController.getScore()", "edu.ucsb.cs56.projects.utilities.flashcards.QuizController.getPossibleScore()"], "Fixed commit": "808bc0499e3f04a43c7a586a4eb7944da09b7721", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-utilities-flashcards", "Date": "2017-11-16T05:28:24Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (session != null) { if ((session.getAttribute((\"Location_Hint_\" + slug))) == null) { session.setAttribute((\"Location_Hint_\" + slug), true); scoreService.newSpielstandEntry(scoreCookie, null, null, \"Hinweis\", scoreService.hintRequested(scoreCookie)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6405/buggy-version/src.main.java.com.sybit.r750explorer.controller.CodeHintController.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,boolean)"], "Fixed commit": "dacff1d446a9f7b12d0413d77cbdfced97da0d0d", "Url": "https://api.github.com/repos/Sybit-Education/Coding-Camp-2017", "Date": "2017-08-04T07:42:24Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (existingCategory.getDanceCategory())) { if ((checkDanceClasses(existingCategory.getMaxDanceClass(), registeredCoupleDTO.getPartner1DanceClassLA().getId(), registeredCoupleDTO.getPartner2DanceClassLA().getId())) && (checkDanceClasses(existingCategory.getMaxDanceClass(), registeredCoupleDTO.getPartner1DanceClassST().getId(), registeredCoupleDTO.getPartner2DanceClassST().getId()))) { availableCategories.add(existingCategory); } }else { if (checkDanceClasses(existingCategory.getMaxDanceClass(), (java.util.Objects.equals(existingCategory.getDanceCategory().getId(), DanceCategoryEnum.LA.getValue()) ? registeredCoupleDTO.getPartner1DanceClassLA().getId() : registeredCoupleDTO.getPartner1DanceClassST().getId()), (java.util.Objects.equals(existingCategory.getDanceCategory().getId(), DanceCategoryEnum.LA.getValue()) ? registeredCoupleDTO.getPartner2DanceClassLA().getId() : registeredCoupleDTO.getPartner2DanceClassST().getId()))) { availableCategories.add(existingCategory); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1174/buggy-version/src.main.java.by.danceform.app.service.competition.CompetitionCategoryService.java", "BodyUseAPI": ["existingCategory.getDanceCategory().getId()", "by.danceform.app.service.competition.CompetitionCategoryService.checkDanceClasses(existingCategory.getMaxDanceClass(),registeredCoupleDTO.getPartner1DanceClassST().getId(),registeredCoupleDTO.getPartner2DanceClassST().getId())", "by.danceform.app.service.competition.CompetitionCategoryService.checkDanceClasses(existingCategory.getMaxDanceClass(),registeredCoupleDTO.getPartner1DanceClassLA().getId(),registeredCoupleDTO.getPartner2DanceClassLA().getId())", "java.util.Set<by.danceform.app.domain.competition.CompetitionCategory>.add(by.danceform.app.domain.competition.CompetitionCategory)", "by.danceform.app.domain.competition.CompetitionCategory.getDanceCategory()", "java.util.Set<by.danceform.app.domain.competition.CompetitionCategory>.add(by.danceform.app.domain.competition.CompetitionCategory)", "by.danceform.app.domain.competition.CompetitionCategory.getMaxDanceClass()", "by.danceform.app.domain.competition.CompetitionCategory.getMaxDanceClass()", "by.danceform.app.domain.competition.CompetitionCategory.getMaxDanceClass()", "by.danceform.app.service.competition.CompetitionCategoryService.checkDanceClasses(existingCategory.getMaxDanceClass(),(java.util.Objects.equals(existingCategory.getDanceCategory().getId(), DanceCategoryEnum.LA.getValue()) ? registeredCoupleDTO.getPartner1DanceClassLA().getId() : registeredCoupleDTO.getPartner1DanceClassST().getId()),(java.util.Objects.equals(existingCategory.getDanceCategory().getId(), DanceCategoryEnum.LA.getValue()) ? registeredCoupleDTO.getPartner2DanceClassLA().getId() : registeredCoupleDTO.getPartner2DanceClassST().getId()))", "java.util.Objects.equals(existingCategory.getDanceCategory().getId(),DanceCategoryEnum.LA.getValue())", "existingCategory.getDanceCategory().getId()", "by.danceform.app.domain.competition.CompetitionCategory.getDanceCategory()", "java.util.Objects.equals(existingCategory.getDanceCategory().getId(),DanceCategoryEnum.LA.getValue())"], "Fixed commit": "6a4783f2de18068c521135cfb2cd337b396401e9", "Url": "https://api.github.com/repos/dmitry-shanko/DanceForm", "Date": "2016-10-31T16:16:26Z"},
{"Line": "=>626", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance().getDescriptorByType(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (sscmToolDesc != null) sscm = sscmToolDesc.getInstallation(sscm_tool_name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5329/buggy-version/src.main.java.hudson.scm.SurroundSCM.java", "BodyUseAPI": ["SurroundTool.DescriptorImpl.getInstallation(java.lang.String)"], "Fixed commit": "915cdb2e278d0efb1d0bc0c080b3fd7c440105c7", "Url": "https://api.github.com/repos/jenkinsci/Surround-SCM-plugin", "Date": "2016-12-06T15:47:36Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (url != null) url = java.net.URLDecoder.decode(url, \"UTF-8\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5329/buggy-version/src.main.java.hudson.scm.SurroundStep.java", "BodyUseAPI": [], "Fixed commit": "915cdb2e278d0efb1d0bc0c080b3fd7c440105c7", "Url": "https://api.github.com/repos/jenkinsci/Surround-SCM-plugin", "Date": "2016-12-06T15:47:36Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dbreturn == null) { if (com.ibm.ws.security.javaeesec.identitystore.DatabaseIdentityStore.tc.isEventEnabled()) { com.ibm.websphere.ras.Tr.event(com.ibm.ws.security.javaeesec.identitystore.DatabaseIdentityStore.tc, (\"The password returned from database is null for caller: \" + caller)); } return javax.security.enterprise.identitystore.CredentialValidationResult.INVALID_RESULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2348/buggy-version/dev.com.ibm.ws.security.javaeesec.src.com.ibm.ws.security.javaeesec.identitystore.DatabaseIdentityStore.java", "BodyUseAPI": [], "Fixed commit": "28a200152607979f5317581a69a20bce8c70b6dd", "Url": "https://api.github.com/repos/jkoehler22/open-liberty", "Date": "2017-11-16T15:49:19Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dbf.isExist(p.hostUuid, org.zstack.header.host.HostVO.class)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4124/buggy-version/plugin.localstorage.src.main.java.org.zstack.storage.primary.local.LocalStorageImageCleaner.java", "BodyUseAPI": [], "Fixed commit": "e90bdb993075725d6910c0d29a1ff2a5a6f7609b", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-06T02:38:47Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (edVictimType != null) eventData = com.sargant.bukkit.otherblocks.OtherBlocksDrops.getCreatureDataValue(edVictim, edVictimType.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8951/buggy-version/src.com.sargant.bukkit.otherblocks.OtherBlocksDrops.java", "BodyUseAPI": ["org.bukkit.entity.CreatureType.toString()", "com.sargant.bukkit.otherblocks.OtherBlocksDrops.getCreatureDataValue(org.bukkit.entity.Entity,edVictimType.toString())"], "Fixed commit": "b1e6ae9335b7d3c765be4b1bf42d0e0b7e68cfdb", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2011-07-23T04:42:21Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.mysqlType) == (MysqlDefs.FIELD_TYPE_JSON)) { this.encoding = \"UTF-8\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1720/buggy-version/src.com.mysql.jdbc.Field.java", "BodyUseAPI": [], "Fixed commit": "a4a548c3e7ab45734c89799f9a9eab559c853ad0", "Url": "https://api.github.com/repos/mysql/mysql-connector-j", "Date": "2016-08-30T17:51:58Z"},
{"Line": "=>725", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { return new proxy.LoginResponse(LoginResponse.Type.IS_LOGGED_IN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1869/buggy-version/src.main.java.proxy.Proxy.java", "BodyUseAPI": [], "Fixed commit": "632ea4160e3e12b16544d826a49ad12f1c8b7eaa", "Url": "https://api.github.com/repos/sp1r1t/lab2", "Date": "2013-12-30T21:38:22Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((((a.relpos.x) > (-1)) && ((a.relpos.x) < 1)) && ((a.relpos.y) > (-1))) && ((a.relpos.y) < 1)) && ((a.relpos.z) > (-1))) && ((a.relpos.z) < 1)) players.get(a.playerID).relPos.set(a.relpos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4094/buggy-version/src.world.RiemannCube.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, world.objects.Player>.get(a.playerID)", "players.get(a.playerID).relPos.set(a.relpos)"], "Fixed commit": "69862165f0a15ee7a86334664e0b6aeb69dbe6f5", "Url": "https://api.github.com/repos/DomNomNom/Swen222-RiemannsCube", "Date": "2012-10-14T16:46:05Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((protocol) != null) protocol.sendShutdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/815/buggy-version/server.src.main.java.com.orientechnologies.orient.server.OClientConnection.java", "BodyUseAPI": [], "Fixed commit": "0c6e4bdf90fad873a1639c91c917082e7988ca2c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-08-13T13:03:52Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.insertOrThrow(ProductDbSchema.ProductTable.TABLE_NAME,<nulltype>,android.content.ContentValues)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (id != (-1)) { product.setId(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9058/buggy-version/app.src.main.java.com.example.miljanrakita.shoppingapplication.DataProvider.User.DatabaseProductProvider.java", "BodyUseAPI": ["com.example.miljanrakita.shoppingapplication.Model.Product.setId(java.lang.Long)"], "Fixed commit": "5f408d3cb81b17fad66e92084e37d87cf9196af5", "Url": "https://api.github.com/repos/Miljan9602/ShoppingApplication", "Date": "2017-10-05T11:11:31Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ids == null) || (ids.isEmpty())) return java.util.Collections.emptyList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7181/buggy-version/application.src.main.java.com.musicforall.services.track.TrackServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "8816a5465b784a49c11f817a30332af3573728ac", "Url": "https://api.github.com/repos/music-for-all/music-for-all-application", "Date": "2016-09-02T08:25:30Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params[k].equals(\"long\")) { toTest.append(\"L\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3369/buggy-version/com.quui.tc.src.com.quui.tc.CodeGen.java", "BodyUseAPI": [], "Fixed commit": "2729b34f6bc27926d6d9a1ded6129725442a3cd9", "Url": "https://api.github.com/repos/fsteeg/tcap", "Date": "2015-07-23T20:42:19Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.mabako.steamgifts.adapters.EndlessAdapter.getItem(getAdapterPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (giveaway != null) ((net.mabako.steamgifts.fragments.interfaces.IHasEnterableGiveaways) (fragment)).requestEnterLeave(giveaway.getGiveawayId(), (giveaway.isEntered() ? net.mabako.steamgifts.fragments.GiveawayDetailFragment.ENTRY_DELETE : net.mabako.steamgifts.fragments.GiveawayDetailFragment.ENTRY_INSERT), adapter.getXsrfToken());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2656/buggy-version/core.src.main.java.net.mabako.steamgifts.adapters.viewholder.GiveawayListItemViewHolder.java", "BodyUseAPI": ["net.mabako.steamgifts.data.Giveaway.getGiveawayId()", "android.support.v4.app.Fragment.requestEnterLeave(giveaway.getGiveawayId(),(giveaway.isEntered() ? net.mabako.steamgifts.fragments.GiveawayDetailFragment.ENTRY_DELETE : net.mabako.steamgifts.fragments.GiveawayDetailFragment.ENTRY_INSERT),adapter.getXsrfToken())", "net.mabako.steamgifts.data.Giveaway.isEntered()"], "Fixed commit": "19fd6886dc409ab644af4bef1e5c1be74949a610", "Url": "https://api.github.com/repos/SteamGifts/SteamGifts", "Date": "2017-02-16T10:08:05Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.settingsContainer.isEnabled()) { return this.settingsContainer.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/289/buggy-version/commons-bukkit.src.main.java.com.supaham.commons.bukkit.SimpleCommonPlugin.java", "BodyUseAPI": ["com.supaham.commons.bukkit.SimpleCommonPlugin<T>.SettingsContainer.save()"], "Fixed commit": "f8636dd46ff0ac4dc58513b9e73f658126219348", "Url": "https://api.github.com/repos/SupaHam/SupaCommons", "Date": "2016-05-02T22:07:06Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.settingsContainer.isEnabled()) { return this.settingsContainer.load(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/289/buggy-version/commons-bukkit.src.main.java.com.supaham.commons.bukkit.SimpleCommonPlugin.java", "BodyUseAPI": ["com.supaham.commons.bukkit.SimpleCommonPlugin<T>.SettingsContainer.load()"], "Fixed commit": "f8636dd46ff0ac4dc58513b9e73f658126219348", "Url": "https://api.github.com/repos/SupaHam/SupaCommons", "Date": "2016-05-02T22:07:06Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mboThread.isAlive())) { mboThread.dumpStack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/561/buggy-version/prototypes.Environment.Environment.java", "BodyUseAPI": ["java.lang.Thread.dumpStack()"], "Fixed commit": "fb5e4ddab920c1f61137d127f31e080b0c9433d4", "Url": "https://api.github.com/repos/cnd11/CoE1186", "Date": "2013-04-23T14:04:33Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxBAD != null) && (!(maxBAD.getBioAssays().containsAll(expExp.getBioAssays())))) { ubic.gemma.core.loader.expression.ExpressionExperimentPlatformSwitchService.log.warn((\"This experiment looked like it had samples run on more than one platform, \" + (\"but it also has no BioAssayDimension that is eligible to accomodate all samples. \" + \"The experiment will be switched to the merged platform, but no BioAssayDimension switch will be done.\"))); multiPlatformPerSample = false; maxBAD = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8631/buggy-version/gemma-core.src.main.java.ubic.gemma.core.loader.expression.ExpressionExperimentPlatformSwitchService.java", "BodyUseAPI": [], "Fixed commit": "64e636d23d690c6c66663902d37de49823812519", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2017-07-31T23:28:57Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (signatures != null) { for (int i = 0; i < (signatures.length); i++) { java.io.ByteArrayInputStream stream = new java.io.ByteArrayInputStream(signatures[i].toByteArray()); java.security.cert.X509Certificate cert = ((java.security.cert.X509Certificate) (cf.generateCertificate(stream))); debuggable = cert.getSubjectX500Principal().equals(com.samknows.measurement.util.OtherUtils.DEBUG_DN); if (debuggable) { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3416/buggy-version/libcore.src.com.samknows.measurement.util.OtherUtils.java", "BodyUseAPI": ["signatures[i].toByteArray()"], "Fixed commit": "72926bf7f3e176961d29daa2558d5bde21477604", "Url": "https://api.github.com/repos/SamKnows/skandroid-core", "Date": "2015-08-24T12:43:32Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vector.size()) <= 6) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2905/buggy-version/src.main.java.com.custom.site.name.decoder.ThirdLevelDecoder.java", "BodyUseAPI": [], "Fixed commit": "9a1386d2444d8ce93721072a795c6aaec7b5f404", "Url": "https://api.github.com/repos/movileanubeniamin/imageEncoderDecoder", "Date": "2017-05-19T10:26:01Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(preferences.getString(\"pref_suggestions\", \"5\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (limit > (places.size())) { return places; }else { return places.subList(0, limit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5471/buggy-version/app.src.main.java.com.admuc.locationreminders.activities.DetailActivity.java", "BodyUseAPI": ["java.util.List<com.admuc.locationreminders.models.GooglePlace>.subList(int,int)"], "Fixed commit": "6ad7f7b42c8fdd57265f105d63ea9d04ce50ca22", "Url": "https://api.github.com/repos/mlipke/LocationReminders", "Date": "2016-01-08T12:09:04Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.lang.Character.isLowerCase(firstChar)) { attributeTypeName = (java.lang.Character.toUpperCase(firstChar)) + (typeName.substring(1)); }else { attributeTypeName = typeName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/679/buggy-version/src.core.lombok.core.handlers.AttributeHandler.java", "BodyUseAPI": ["java.lang.Character.toUpperCase(char)"], "Fixed commit": "e17857bd332271ea05b4b3e4cdf5f37d73dfbf88", "Url": "https://api.github.com/repos/hoijui/lombok-pg", "Date": "2013-07-04T15:07:20Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!showLoadMore) { resetHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8986/buggy-version/src.main.java.com.fave100.client.pagefragments.unifiedsearch.UnifiedSearchView.java", "BodyUseAPI": [], "Fixed commit": "7cad69252efff2d63fb3ad2dde7df85a79d5cc0a", "Url": "https://api.github.com/repos/yissachar/fave100", "Date": "2014-06-19T15:09:27Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.contains(text, \"slow traffic\")) { return 0.3; }else if (org.apache.commons.lang3.StringUtils.containsAny(text, \"construction work\", \"construction traffic merging\", \"roadwork\", \"resurfacing work\")) { return 0.6; }else if (org.apache.commons.lang3.StringUtils.containsAny(text, \"traffic problem\", \"traffic congestion\")) { return 0.1; }else if (org.apache.commons.lang3.StringUtils.contains(text, \"accident\")) { return 0.75; }else if (org.apache.commons.lang3.StringUtils.containsAny(text, \"lane closed\", \"lanes closed\", \"lane blocked\", \"lanes blocked\", \"lane(s) blocked\", \"blocked by\")) { return 0.6; }else if (org.apache.commons.lang3.StringUtils.contains(text, \"passable with care\")) { return 0.2; }else if (org.apache.commons.lang3.StringUtils.contains(text, \"delays\")) { return 0.5; }else if (org.apache.commons.lang3.StringUtils.containsAny(text, \"object(s) on the road\", \"people on roadway\", \"broken down vehicle\", \"animals on the road\")) { return 0.2; }else if (org.apache.commons.lang3.StringUtils.containsAny(text, \"maintenance work\", \"central reservation work\")) { return 0.3; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7702/buggy-version/src.main.java.de.sebastianhesse.pbf.reader.traffic.EventListImporter.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.contains(java.lang.String,java.lang.String)", "org.apache.commons.lang3.StringUtils.containsAny(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "org.apache.commons.lang3.StringUtils.containsAny(java.lang.String,java.lang.String,java.lang.String)", "org.apache.commons.lang3.StringUtils.contains(java.lang.String,java.lang.String)", "org.apache.commons.lang3.StringUtils.contains(java.lang.String,java.lang.String)", "org.apache.commons.lang3.StringUtils.containsAny(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "org.apache.commons.lang3.StringUtils.containsAny(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "org.apache.commons.lang3.StringUtils.containsAny(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "631729019c72f35393520506020ce0edb3e7f6a9", "Url": "https://api.github.com/repos/seeebiii/osm-routing-examples", "Date": "2017-03-31T07:49:02Z"},
{"Line": "=>1351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((floatingLabelTextColor) != (-1)) { int alpha = ((int) (((floatingLabelAlwaysShown ? 1 : floatingLabelFraction) * 255) * ((0.74F * (focusFraction)) + 0.26F))); textPaint.setAlpha(alpha); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1697/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialEditText.java", "BodyUseAPI": [], "Fixed commit": "6d63daae2eebcf49e59444e457fbed6ba61a2e10", "Url": "https://api.github.com/repos/rengwuPATHn/MaterialEditText", "Date": "2015-04-23T15:55:21Z"},
{"Line": "=>1351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((floatingLabelTextColor) != (-1)) { int alpha = ((int) (((floatingLabelAlwaysShown ? 1 : floatingLabelFraction) * 255) * ((0.74F * (focusFraction)) + 0.26F))); textPaint.setAlpha(alpha); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1697/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialAutoCompleteTextView.java", "BodyUseAPI": [], "Fixed commit": "6d63daae2eebcf49e59444e457fbed6ba61a2e10", "Url": "https://api.github.com/repos/rengwuPATHn/MaterialEditText", "Date": "2015-04-23T15:55:21Z"},
{"Line": "=>1348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((floatingLabelTextColor) != (-1)) { int alpha = ((int) (((floatingLabelAlwaysShown ? 1 : floatingLabelFraction) * 255) * ((0.74F * (focusFraction)) + 0.26F))); textPaint.setAlpha(alpha); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1697/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialMultiAutoCompleteTextView.java", "BodyUseAPI": [], "Fixed commit": "6d63daae2eebcf49e59444e457fbed6ba61a2e10", "Url": "https://api.github.com/repos/rengwuPATHn/MaterialEditText", "Date": "2015-04-23T15:55:21Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stateManager.getMetaData().getDescribedType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.reflect.Modifier.isAbstract(type.getModifiers())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3648/buggy-version/src.main.java.com.datastax.hectorjpa.store.CassandraStoreManager.java", "BodyUseAPI": [], "Fixed commit": "e254ed49b05f8b9c69817a6cd07c5e845c431f72", "Url": "https://api.github.com/repos/riptano/hector-jpa", "Date": "2011-04-01T00:37:55Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.HuskySoft.metrobike.backend.Step>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((s.getTravelMode()) == (com.HuskySoft.metrobike.backend.TravelMode.TRANSIT)) { ss = \"(Bus #49) \" + ss; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4287/buggy-version/MetroBike.src.com.HuskySoft.metrobike.ui.DetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "9bc2883fee892db53e9adba639739193ee379335", "Url": "https://api.github.com/repos/alaurenz/metrobike", "Date": "2013-05-20T05:19:29Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c.getOrientation()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4242/buggy-version/lab2.mazewar.OverheadMazePanel.java", "BodyUseAPI": [], "Fixed commit": "dac5035ecd0d0c56ae1816de68e3117402925078", "Url": "https://api.github.com/repos/davidyin1212/ECE419", "Date": "2015-02-12T08:37:06Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasExtra) dbExtra.saveOrUpdate(extra); else dbExtra.save(extra);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4212/buggy-version/app.src.main.java.com.eason.schedule.ScheduleFunc.java", "BodyUseAPI": [], "Fixed commit": "4e0f81dbbaf3ab4e96df9faa116be5e7f12a1711", "Url": "https://api.github.com/repos/Easonzero/Schedule", "Date": "2017-06-21T04:36:13Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (base != null) { link.setBaseUri(base); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6215/buggy-version/src.main.java.org.warcbase.pig.piggybank.ExtractLinks.java", "BodyUseAPI": ["org.jsoup.nodes.Element.setBaseUri(java.lang.String)"], "Fixed commit": "0a4cae2e79d7260b4b57df4d5b442ad1ae584fd9", "Url": "https://api.github.com/repos/lintool/warcbase", "Date": "2015-05-13T12:33:21Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 26) { menu.findItem(R.id.action_pin).setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9160/buggy-version/app.src.main.java.com.abyx.loyalty.activities.CardActivity.java", "BodyUseAPI": [], "Fixed commit": "038e486d1ba50d769a0f34fa0750e9b7248232b2", "Url": "https://api.github.com/repos/AbyxBelgium/Loyalty", "Date": "2017-09-06T07:25:44Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.onarandombox.multiverseinventories.util.data.FlatFilePlayerData.getConfigHandle(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (convertConfig(playerData)) { try { playerData.save(playerFile); } catch (java.io.IOException e) { com.onarandombox.multiverseinventories.util.Logging.severe(((((((\"Could not save data for player: \" + playerName) + \" for \") + (containerType.toString())) + \": \") + dataName) + \" after conversion.\")); com.onarandombox.multiverseinventories.util.Logging.severe(e.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2608/buggy-version/src.main.java.com.onarandombox.multiverseinventories.util.data.FlatFilePlayerData.java", "BodyUseAPI": ["org.bukkit.configuration.file.FileConfiguration.save(java.io.File)"], "Fixed commit": "01362e74049c4328d177f44c6ec3d1e3bf5b576b", "Url": "https://api.github.com/repos/Multiverse/Multiverse-Inventories", "Date": "2012-06-15T21:18:25Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firstChildPositionForRow) == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1406/buggy-version/app.src.main.java.io.plaidapp.ui.recyclerview.SpannedGridLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "f34caaa5942db5d1a9a2a50c23371602bc98938f", "Url": "https://api.github.com/repos/nickbutcher/plaid", "Date": "2016-09-22T14:47:41Z"},
{"Line": "=>864", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, org.powertac.common.TariffSubscription>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sub.getCustomersCommitted()) > 0) sub.usePower(summary);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6945/buggy-version/src.main.java.org.powertac.householdcustomer.customers.Village.java", "BodyUseAPI": ["org.powertac.common.TariffSubscription.usePower(double)"], "Fixed commit": "98fb32c8ea078bc185b8270c471976664078f3c1", "Url": "https://api.github.com/repos/powertac/household-customer", "Date": "2012-03-27T09:08:41Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thread) != null) { thread.interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3028/buggy-version/insight.insight-elasticsearch.src.main.java.org.fusesource.insight.elasticsearch.impl.ElasticSenderImpl.java", "BodyUseAPI": [], "Fixed commit": "e459ba890d3b889ff1fd8451cc468bdb930d127b", "Url": "https://api.github.com/repos/fusesource/fuse", "Date": "2013-03-07T16:21:16Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lobby) != null) { lobby.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5103/buggy-version/src.GUI.Entry.java", "BodyUseAPI": [], "Fixed commit": "7e5e5fb7ff4f8715a9d3ae446ee16b060f8f649f", "Url": "https://api.github.com/repos/DanORourke/Carrion3.0", "Date": "2017-09-30T16:08:43Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ning.billing.util.clock.Clock.getUTCNow()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((requestedDate != null) && (requestedDate.isAfter(now))) { throw new com.ning.billing.entitlement.api.user.EntitlementUserApiException(com.ning.billing.ErrorCode.ENT_INVALID_REQUESTED_DATE, requestedDate.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7186/buggy-version/entitlement.src.main.java.com.ning.billing.entitlement.api.user.SubscriptionApiService.java", "BodyUseAPI": ["org.joda.time.DateTime.toString()"], "Fixed commit": "1116a367f54442b58139618e6a9ebb0665ed9c98", "Url": "https://api.github.com/repos/ning/killbill", "Date": "2011-12-27T18:32:55Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(objectItem.isComplete)) statsViewItemPercent.setText(((objectItem.percentCompletion) + \"%\")); else statsViewItemPercent.setText(\"Ok\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4668/buggy-version/ANDROID_PROJET.src.fr.free.simon.jacquemin.staupe.gui.achievements.AchievementsAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(((objectItem.percentCompletion) + \"%\"))"], "Fixed commit": "7b0f10b1a252237ddb4c3dbf82718eb809839ed9", "Url": "https://api.github.com/repos/Mekiis/Staupe", "Date": "2015-05-05T23:07:49Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(directory.exists())) { return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4120/buggy-version/JazminDeployer.src.jazmin.deploy.view.monitor.MonitorManager.java", "BodyUseAPI": [], "Fixed commit": "40d2f825628d92c5d9c5ee4d61f779b57b0bb440", "Url": "https://api.github.com/repos/icecooly/JazminServer", "Date": "2016-06-10T16:42:24Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bioroid.utils.CharacterUtils.getMainCharacter()", "bioroid.control.CoreGameController.findPCAtLocation(bioroid.model.character.GameCharacter,bioroid.model.location.Location)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (occupiedLocationPC == activeCharacter) { lastMoved = pc; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8209/buggy-version/src.bioroid.control.CoreGameController.java", "BodyUseAPI": [], "Fixed commit": "91e18cb6997684a1fcf0aaa34199eb49f8d61dd2", "Url": "https://api.github.com/repos/bjon045/droid", "Date": "2014-08-07T03:52:09Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.nebula.widgets.nattable.NatTable.getCellByPosition(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (cell != null) { org.eclipse.nebula.widgets.nattable.painter.cell.ICellPainter painter = natTable.getConfigRegistry().getConfigAttribute(CellConfigAttributes.CELL_PAINTER, DisplayMode.NORMAL, cell.getConfigLabels().getLabels()); if (!(painter instanceof org.eclipse.nebula.widgets.nattable.painter.cell.PasswordTextPainter)) { java.lang.String tooltipValue = org.eclipse.nebula.widgets.nattable.layer.cell.CellDisplayConversionUtils.convertDataType(cell, natTable.getConfigRegistry()); if ((tooltipValue.length()) > 0) { return tooltipValue; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4556/buggy-version/org.eclipse.nebula.widgets.nattable.core.src.org.eclipse.nebula.widgets.nattable.tooltip.NatTableContentTooltip.java", "BodyUseAPI": ["org.eclipse.nebula.widgets.nattable.layer.cell.CellDisplayConversionUtils.convertDataType(org.eclipse.nebula.widgets.nattable.layer.cell.ILayerCell,natTable.getConfigRegistry())", "org.eclipse.nebula.widgets.nattable.layer.cell.ILayerCell.getConfigLabels()", "natTable.getConfigRegistry().getConfigAttribute(CellConfigAttributes.CELL_PAINTER,DisplayMode.NORMAL,cell.getConfigLabels().getLabels())", "cell.getConfigLabels().getLabels()"], "Fixed commit": "5792940728d19c63314e3e32ee1cdeccdb78db73", "Url": "https://api.github.com/repos/webcane/nebula.widgets.nattable", "Date": "2013-01-31T21:24:00Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resourceKey.getStatus()) == (com.github.benmanes.multiway.ResourceKey.Status.DEAD)) { resourceKey.removeFromTransferQueue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3460/buggy-version/src.main.java.com.github.benmanes.multiway.MultiwayPool.java", "BodyUseAPI": ["com.github.benmanes.multiway.ResourceKey<K>.removeFromTransferQueue()"], "Fixed commit": "ec054c999773d90ae13863534f6625374ac6f760", "Url": "https://api.github.com/repos/ben-manes/multiway-pool", "Date": "2013-07-06T23:16:22Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (game.UtilityButton.getInventoryState()) game.UtilityButton.setInventoryState(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4570/buggy-version/src.game.inventory.OkButton.java", "BodyUseAPI": [], "Fixed commit": "3edb4e8477926f2e07bb9ab70f67c7865bb8409a", "Url": "https://api.github.com/repos/Tabrizian/RoboKill", "Date": "2015-06-28T13:22:27Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.contains(\"post_content\")) { scrollLoadingPostActionStatus.scrollLoadingSuccess(s, 1); }else { scrollLoadingPostActionStatus.scrollLoadingFail(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9202/buggy-version/XunChat.app.src.main.java.com.example.xunhu.xunchat.Model.AsyTasks.ScrollLoadingPostTask.java", "BodyUseAPI": ["com.example.xunhu.xunchat.Presenter.Interfaces.ScrollLoadingPostActionStatus.scrollLoadingFail(java.lang.String)", "com.example.xunhu.xunchat.Presenter.Interfaces.ScrollLoadingPostActionStatus.scrollLoadingSuccess(java.lang.String,int)"], "Fixed commit": "8a619f7d394bf0d911fbee30341c5da38a0e1f7a", "Url": "https://api.github.com/repos/xunhuxunhu/XunChatApp", "Date": "2017-08-19T08:18:00Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.utils.media.ThumbnailManager.getThumbnail(fi.getHash256())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (f != null) { if ((f.length()) > (com.backend.facer.FacerUtils.MAX_FILE_SIZE)) { com.backend.facer.FacerUtils.logger.warn(\"the size of thumbnal is large than 2M. fileinf[{}]\", fi); return null; } try { file = f.getCanonicalPath(); } catch (java.io.IOException e) { com.backend.facer.FacerUtils.logger.warn(\"caused by: \", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/682/buggy-version/photoweb.src.main.java.com.backend.facer.FacerUtils.java", "BodyUseAPI": ["java.io.File.length()", "java.io.File.getCanonicalPath()"], "Fixed commit": "ec0393a49d574c120979e2834ffd56d07f1bb13b", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-07-09T08:43:30Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.pms.service.util.ApiUtil.isEmpty(params.get(ProjectBean.PROJECT_CODE))) { params.put(ProjectBean.PROJECT_CODE, genProjectCode(ptString, ProjectBean.PROJECT_STATUS_OFFICIAL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1589/buggy-version/service.src.main.java.com.pms.service.service.impl.ProjectServiceImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(ProjectBean.PROJECT_CODE,java.lang.String)"], "Fixed commit": "739a2398e3f19fce82ce8ac48769a137305dc773", "Url": "https://api.github.com/repos/antme/pms", "Date": "2014-02-18T07:02:33Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (m.group().matches(\"0\")) { if ((errorLine) == (-1)) errorLine = lineCount; }else if (m.group().matches(\",\")) { if ((errorLine) == (-1)) errorLine = lineCount; }else if (m.group().matches(\"\\\\d{1,5}\")) { tokenList.add(new S2medHybris.Token(TokenType.Data, \"Data\", lineCount, index, m.group())); }else if (m.group().matches(\"FORW|BACK|LEFT|RIGHT\")) { tokenList.add(new S2medHybris.Token(TokenType.Dinstr, m.group(), lineCount, index)); }else if (m.group().matches(\"DOWN|UP\")) { tokenList.add(new S2medHybris.Token(TokenType.Einstr, m.group(), lineCount, index)); }else if (m.group().matches(\"COLOR\")) { tokenList.add(new S2medHybris.Token(TokenType.Cinstr, m.group(), lineCount, index)); }else if (m.group().matches(\"REP\")) { tokenList.add(new S2medHybris.Token(TokenType.Repeat, m.group(), lineCount, index)); }else if (m.group().matches(\"\\\\.\")) { tokenList.add(new S2medHybris.Token(TokenType.Dot, m.group(), lineCount, index)); }else if (m.group().matches(\"\\\\\\\"\")) { tokenList.add(new S2medHybris.Token(TokenType.Cit, \"cit\", lineCount, index)); }else if (m.group().matches(\"[ \\\\t\\\\n]\")) { tokenList.add(new S2medHybris.Token(TokenType.Space, \"space\", lineCount, index)); if (m.group().matches(\"\\\\n\")) (lineCount)++; }else if ((m.group().matches(\"-\")) || (m.group().matches(\".+\"))) { if ((errorLine) == (-1)) errorLine = lineCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8173/buggy-version/S2medHybris.Lexer.java", "BodyUseAPI": [], "Fixed commit": "159ad508c9bb24bb39302f66ff1ad01270babe83", "Url": "https://api.github.com/repos/TeodorIsaacs/S2medHybris", "Date": "2016-11-18T09:13:05Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (m.group().matches(\"[ \\\\t\\\\n]\")) { tokenList.add(new S2medHybris.Token(TokenType.Space, \"space\", lineCount, index)); if (m.group().matches(\"\\\\n\")) (lineCount)++; }else if ((m.group().matches(\"-\")) || (m.group().matches(\".+\"))) { if ((errorLine) == (-1)) errorLine = lineCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8173/buggy-version/S2medHybris.Lexer.java", "BodyUseAPI": [], "Fixed commit": "159ad508c9bb24bb39302f66ff1ad01270babe83", "Url": "https://api.github.com/repos/TeodorIsaacs/S2medHybris", "Date": "2016-11-18T09:13:05Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((This().getLine()) < (errorRow)) || ((errorRow) == (-1))) { java.lang.System.out.println((\"Syntaxfel p\u00e5 rad \" + (This().getLine()))); }else java.lang.System.out.println((\"Syntaxfel p\u00e5 rad \" + (errorRow)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8173/buggy-version/S2medHybris.Parser.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "159ad508c9bb24bb39302f66ff1ad01270babe83", "Url": "https://api.github.com/repos/TeodorIsaacs/S2medHybris", "Date": "2016-11-18T09:13:05Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((row < (errorRow)) || ((errorRow) == (-1))) { java.lang.System.out.println((\"Syntaxfel p\u00e5 rad \" + row)); }else java.lang.System.out.println((\"Syntaxfel p\u00e5 rad \" + (errorRow)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8173/buggy-version/S2medHybris.Parser.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "159ad508c9bb24bb39302f66ff1ad01270babe83", "Url": "https://api.github.com/repos/TeodorIsaacs/S2medHybris", "Date": "2016-11-18T09:13:05Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((newEp != null) && (!(isValidEp(newEp)))) { org.opendaylight.groupbasedpolicy.renderer.ofoverlay.endpoint.EndpointManager.LOG.info(\"Endpoint is not valid: {}\", newEp); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7961/buggy-version/renderers.ofoverlay.src.main.java.org.opendaylight.groupbasedpolicy.renderer.ofoverlay.endpoint.EndpointManager.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,org.opendaylight.yang.gen.v1.urn.opendaylight.groupbasedpolicy.endpoint.rev140421.endpoints.Endpoint)"], "Fixed commit": "99c77e8c912e4d89235149c32218fdb11ffc9eee", "Url": "https://api.github.com/repos/opendaylight/groupbasedpolicy", "Date": "2016-02-25T09:02:57Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((title.indexOf(\"No.\")) == (-1)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4962/buggy-version/Sentry.src.main.java.com.yitianyigePATHngfa.spider.LjswSpider.java", "BodyUseAPI": [], "Fixed commit": "2fa5bccc5575ac22cd5641c18a730811b112771c", "Url": "https://api.github.com/repos/JavaProgrammerLB/Sentry", "Date": "2016-10-22T10:24:01Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlInsertStatement.getTableName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tableName instanceof com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr) { ident = ((com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr) (tableName)).getName(); }else if (tableName instanceof com.alibaba.druid.sql.ast.expr.SQLPropertyExpr) { com.alibaba.druid.sql.ast.expr.SQLPropertyExpr propertyExpr = ((com.alibaba.druid.sql.ast.expr.SQLPropertyExpr) (tableName)); if ((propertyExpr.getOwner()) instanceof com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr) { ident = propertyExpr.toString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3712/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.visitor.MySqlSchemaStatVisitor.java", "BodyUseAPI": [], "Fixed commit": "8b6f351c202bdceda5af8831958b3eb4e213aaf9", "Url": "https://api.github.com/repos/renfufei/druid", "Date": "2016-09-05T08:01:01Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getPass()) == null) { user.setPass(\"$2a$10$rdHCgQDkMqQSk9IK8rhsVu1XhC/Y/VA5ohsMgGtjasABH7b.WAWzi\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1718/buggy-version/src.main.java.com.codegroup.challengecloud.services.security.ChallengerUserDetailsService.java", "BodyUseAPI": ["org.springframework.security.core.userdetails.User.setPass(java.lang.String)"], "Fixed commit": "a057a5fd05d59fbb9fbb8ba77d0e85b2435a595a", "Url": "https://api.github.com/repos/volterr/ChallengeCloud", "Date": "2015-03-25T11:23:18Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.rcredits.pos.TxActivity.description.equals(\"\")) org.rcredits.pos.TxActivity.description = \"goods and services\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4199/buggy-version/rPOS.src.main.java.org.rcredits.pos.TxActivity.java", "BodyUseAPI": [], "Fixed commit": "6bc71d133559c83e72c7e02f5b7d4abbe02d17c3", "Url": "https://api.github.com/repos/CommonGoodFinance/rCredits-Android", "Date": "2013-11-03T19:05:19Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pMsg.Results) == null) { return results; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2590/buggy-version/src.main.java.com.fabric.rexconnect.core.RexConnectClient.java", "BodyUseAPI": [], "Fixed commit": "d2b3617f5c7b9ffceacd971c29bc49cbf0780762", "Url": "https://api.github.com/repos/inthefabric/RexConnect", "Date": "2013-07-16T02:09:36Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getKeyCode()) == (Input.Keys.ENTER)) { defaultButton.setPressedStyle(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5183/buggy-version/Client.src.main.java.arch.galaxyeclipse.client.stage.ui.StageUiFactory.java", "BodyUseAPI": [], "Fixed commit": "94a890984d10356ae9a7fe2a58528980140c8548", "Url": "https://api.github.com/repos/templatevk/GalaxyEclipse", "Date": "2013-04-24T21:51:05Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getKeyCode()) == (Input.Keys.ENTER)) { defaultButton.setPressedStyle(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5183/buggy-version/Client.src.main.java.arch.galaxyeclipse.client.stage.ui.StageUiFactory.java", "BodyUseAPI": [], "Fixed commit": "94a890984d10356ae9a7fe2a58528980140c8548", "Url": "https://api.github.com/repos/templatevk/GalaxyEclipse", "Date": "2013-04-24T21:51:05Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shootRelease) == true) { shooting = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/248/buggy-version/src.org.academiadecodigo.bootcamp.spacebadjoraz.GameObjects.PlayerShip.java", "BodyUseAPI": [], "Fixed commit": "6095e609e39f8c50eb2c772cec6212ec638f5c74", "Url": "https://api.github.com/repos/enuminatti-project1/spacebadjoraz", "Date": "2017-10-11T09:01:36Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Collection.Key.lowerCharAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ('l' == c) { if (ScopeSupport.LOCAL.equalsIgnoreCase(key)) return pc.localScope(); }else if ('s' == c) { if (ScopeSupport.SESSION.equalsIgnoreCase(key)) { try { return pc.sessionScope(); } catch (railo.runtime.exp.PageException e) { } } if (ScopeSupport.SERVER.equalsIgnoreCase(key)) { try { return pc.serverScope(); } catch (railo.runtime.exp.PageException e) { } } }else if ('u' == c) { if (ScopeSupport.URL.equalsIgnoreCase(key)) return pc.urlScope(); }else if ('v' == c) { if (ScopeSupport.VARIABLES.equalsIgnoreCase(key)) return variablesScope; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4081/buggy-version/railo-java.railo-core.src.railo.runtime.type.scope.CallerImpl.java", "BodyUseAPI": [], "Fixed commit": "c1f0da1d66cbabe90869a0df7c0c190e7321b084", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-03-17T18:48:43Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Collection.Key.lowerCharAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ('l' == c) { if (ScopeSupport.LOCAL.equalsIgnoreCase(key)) return pc.localScope(); }else if ('s' == c) { if (ScopeSupport.SESSION.equalsIgnoreCase(key)) return pc.sessionScope(); if (ScopeSupport.SERVER.equalsIgnoreCase(key)) return pc.serverScope(); }else if ('u' == c) { if (ScopeSupport.URL.equalsIgnoreCase(key)) return pc.urlScope(); }else if ('v' == c) { if (ScopeSupport.VARIABLES.equalsIgnoreCase(key)) return variablesScope; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4081/buggy-version/railo-java.railo-core.src.railo.runtime.type.scope.CallerImpl.java", "BodyUseAPI": [], "Fixed commit": "c1f0da1d66cbabe90869a0df7c0c190e7321b084", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-03-17T18:48:43Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((m1.matches()) && (m2.matches())) return true; else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7990/buggy-version/Opdracht1.src.main.java.les1.coordinateConverter.CoordinateTypes.DMS.java", "BodyUseAPI": [], "Fixed commit": "f0144f8483d77a4e025c2cefedd18853b3457fbd", "Url": "https://api.github.com/repos/RobertKraaijeveld/Dev8-Visualization", "Date": "2016-05-24T10:51:11Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.gentics.cr.rest.xml.XmlContentRepository.FACETS_LIST_KEY.equals(entry)) && (bValue instanceof java.util.Map<?, ?>)) { value = new org.json.JSONObject(((java.util.Map<?, ?>) (bValue))).toString(); }else if (bValue instanceof java.util.Map<?, ?>) { java.util.Map<?, ?> map = ((java.util.Map<?, ?>) (bValue)); for (java.util.Map.Entry<?, ?> e : map.entrySet()) { java.lang.String key = e.getKey().toString(); java.lang.Object mValue = e.getValue(); if (mValue instanceof java.lang.String[]) { java.lang.String[] arr = ((java.lang.String[]) (mValue)); for (java.lang.String s : arr) { org.w3c.dom.Element elem = doc.createElement(key); org.w3c.dom.Text text = doc.createCDATASection(s); elem.appendChild(text); attrElement.appendChild(elem); } return; }else { org.w3c.dom.Element elem = doc.createElement(key); org.w3c.dom.Text text = doc.createCDATASection(mValue.toString()); elem.appendChild(text); attrElement.appendChild(elem); return; } } }else { value = bValue.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7604/buggy-version/contentconnector-core.src.main.java.com.gentics.cr.rest.xml.XmlContentRepository.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "18952c2c80c886a1187ca5452f88e799d9725a23", "Url": "https://api.github.com/repos/gtxcontentconnector/contentconnector", "Date": "2015-10-27T14:24:43Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curNetwork.stationPropertieTransientMap.get(((int) (stationId)))) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7095/buggy-version/backend.src.main.java.com.F8Full.bixhistorique.backend.ParseCronServlet.java", "BodyUseAPI": [], "Fixed commit": "4baf794eb0472c773f2f02b25d401c059d66e0e4", "Url": "https://api.github.com/repos/f8full/BixHistorique", "Date": "2015-04-20T22:17:34Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (interactionGraph[resI][resI]) { score = (belief[rotIR]) + (unifiedMinEnergyMatrix[resI][rotIR][resI][rotIR]); }else { score = belief[rotIR]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9115/buggy-version/src.edu.duke.cs.osprey.astar.Mplp.java", "BodyUseAPI": [], "Fixed commit": "5d3a6949a09238403dddab1bba9e83591031e53b", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2015-11-30T13:51:30Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rectangle.isRotated()) { if (((rectangle.getWidth()) + (rectangle.getBottomLeft().y)) > maxHeight) { maxHeight = (rectangle.getWidth()) + (rectangle.getBottomLeft().y); } if (((rectangle.getHeight()) + (rectangle.getBottomLeft().x)) > maxWidth) { maxWidth = (rectangle.getHeight()) + (rectangle.getBottomLeft().x); } }else { if (((rectangle.getHeight()) + (rectangle.getBottomLeft().y)) > maxHeight) { maxHeight = (rectangle.getHeight()) + (rectangle.getBottomLeft().y); } if (((rectangle.getWidth()) + (rectangle.getBottomLeft().x)) > maxWidth) { maxWidth = (rectangle.getWidth()) + (rectangle.getBottomLeft().x); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9242/buggy-version/src.nl.lkeijzer.Services.CustomMath.java", "BodyUseAPI": ["java.awt.Rectangle.getHeight()", "java.awt.Rectangle.getBottomLeft()", "java.awt.Rectangle.getBottomLeft()", "java.awt.Rectangle.getBottomLeft()", "java.awt.Rectangle.getBottomLeft()", "java.awt.Rectangle.getBottomLeft()", "java.awt.Rectangle.getWidth()", "java.awt.Rectangle.getWidth()", "java.awt.Rectangle.getBottomLeft()", "java.awt.Rectangle.getWidth()", "java.awt.Rectangle.getHeight()", "java.awt.Rectangle.getHeight()", "java.awt.Rectangle.getWidth()", "java.awt.Rectangle.getBottomLeft()", "java.awt.Rectangle.getBottomLeft()", "java.awt.Rectangle.getHeight()"], "Fixed commit": "d152896ea4bd033b462b0695fd07324529c85d82", "Url": "https://api.github.com/repos/Lau1406/2DStackingVisualizer", "Date": "2017-06-02T16:07:26Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.BitSet.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ours.cardinality()) > 0) { addInteresting(senderPeerID); }else { removeInteresting(senderPeerID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7824/buggy-version/peerProcess.java", "BodyUseAPI": [], "Fixed commit": "5287c4834e0224b12370b329f8aba23292183808", "Url": "https://api.github.com/repos/Trial-In-Error/torrential", "Date": "2014-04-20T23:37:49Z"},
{"Line": "=>602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) { return java.util.Collections.emptyList(); }else { return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6259/buggy-version/src.main.java.net.peelo.kahvi.compiler.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "2d1bc3943f9029f6904d3728ea15e247164ec5db", "Url": "https://api.github.com/repos/peelonet/kahvi", "Date": "2014-06-13T12:29:43Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.nio.file.Files.exists(getLogrotateConfPath()))) { log.info(\"{} did not exist, skipping manual logrotation\", getLogrotateConfPath()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8058/buggy-version/SingularityExecutor.src.main.java.com.hubspot.singularity.executor.task.SingularityExecutorTaskLogManager.java", "BodyUseAPI": [], "Fixed commit": "e3aa7fcc0771dbf78110f696a04679117ab77cf3", "Url": "https://api.github.com/repos/HubSpot/Singularity", "Date": "2014-06-24T14:52:22Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getServletContext().getAttribute(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (manager.emailAndCodeInDatabase(email, hex)) { manager.updateUserPassword(email, password); response.sendRedirect(\"/login?changed=yes\"); }else { response.sendRedirect(\"/login?changed=no\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3309/buggy-version/src.java.servlet.PasswordResetConfirmation.java", "BodyUseAPI": ["db.DBManager.updateUserPassword(java.lang.String,java.lang.String)"], "Fixed commit": "1f2ddc86a99ef657556745a9789346e515a7e7f7", "Url": "https://api.github.com/repos/m4ff/students-forum", "Date": "2014-02-02T20:06:18Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newValue.intValue()) != (-32000)) { mPref.put(newValue.intValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5975/buggy-version/Dopestreamer.src.com.dopelives.dopestreamer.gui.StageManager.java", "BodyUseAPI": ["com.dopelives.dopestreamer.Pref.put(int)", "java.lang.Number.intValue()"], "Fixed commit": "d67759488d34783074b9c9b25fbef1d029a56400", "Url": "https://api.github.com/repos/tvkanters/Dopestreamer", "Date": "2014-08-11T13:36:28Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.taimos.dao.mongo.AbstractMongoDAO<T>.getMRFunction(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (finalizeFunction != null) { mrc.setFinalize(finalizeFunction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7624/buggy-version/src.main.java.de.taimos.dao.mongo.AbstractMongoDAO.java", "BodyUseAPI": ["com.mongodb.MapReduceCommand.setFinalize(java.lang.String)"], "Fixed commit": "1010158440597585caf4c74a6cbde908adc05835", "Url": "https://api.github.com/repos/taimos/spring-dao-mongo", "Date": "2015-05-14T11:08:54Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.btn_reviews)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (reviewButton != null) { reviewButton.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { getReviews(movieClicked); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8299/buggy-version/app.src.main.java.bkoumtak.udacity.moviebrowser.InfoActivity.java", "BodyUseAPI": ["android.widget.Button.setOnClickListener(android.view.View.OnClickListener)"], "Fixed commit": "3b55a7c9105bde4997fef907da38c58c740afd34", "Url": "https://api.github.com/repos/bkoumtak/P2-Popular_Movies", "Date": "2017-01-14T20:08:47Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.stacksync.syncservice.util.Config.getSwiftKeystoneProtocol().equals(\"http\")) { type = com.stacksync.syncservice.storage.StorageManager.StorageType.SWIFT; }else { type = com.stacksync.syncservice.storage.StorageManager.StorageType.SWIFT_SSL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7817/buggy-version/src.main.java.com.stacksync.syncservice.SyncServiceDaemon.java", "BodyUseAPI": [], "Fixed commit": "0a6a1c5e959de29e0f2e7d6daff88dfef6bc624b", "Url": "https://api.github.com/repos/stacksync/sync-service", "Date": "2015-04-14T08:23:29Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.stacksync.syncservice.util.Config.getSwiftKeystoneProtocol().equals(\"http\")) { type = com.stacksync.syncservice.storage.StorageManager.StorageType.SWIFT; }else { type = com.stacksync.syncservice.storage.StorageManager.StorageType.SWIFT_SSL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7817/buggy-version/src.main.java.com.stacksync.syncservice.handler.Handler.java", "BodyUseAPI": [], "Fixed commit": "0a6a1c5e959de29e0f2e7d6daff88dfef6bc624b", "Url": "https://api.github.com/repos/stacksync/sync-service", "Date": "2015-04-14T08:23:29Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.patrickwilson.ardm.datasource.gcp.datastore.GCPDatastoreDatasourceAdaptor.toValue(java.lang.Object,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (val != null) datastoreEntityBuilder.set(propName, val);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3963/buggy-version/ARDM-Datasource-GCP-Datastore.src.main.java.com.patrickwilson.ardm.datasource.gcp.datastore.GCPDatastoreDatasourceAdaptor.java", "BodyUseAPI": ["FullEntity.Builder.set(java.lang.String,com.google.cloud.datastore.Value)"], "Fixed commit": "67b04be48d80d11562d8d00159d77c711018841a", "Url": "https://api.github.com/repos/patrickianwilson/AbstractDataRepositories", "Date": "2017-01-04T23:52:13Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((org.wso2.emm.agent.dao.NotificationDAO.dbHelper) == null) { org.wso2.emm.agent.dao.NotificationDAO.dbHelper = new org.wso2.emm.agent.utils.DatabaseHelper(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5251/buggy-version/modules.mobile-agents.android.client.client.src.main.java.org.wso2.emm.agent.dao.NotificationDAO.java", "BodyUseAPI": [], "Fixed commit": "8ddd094717cbc15c860e07284f668df48a6152ae", "Url": "https://api.github.com/repos/saadsahibjan/product-emm", "Date": "2016-08-24T10:43:10Z"},
{"Line": "=>1228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashSet<java.lang.Integer>.contains(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ignore) ignorePressedKeys.remove(e.getKeyCode());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6085/buggy-version/Ports.JavaSE.src.com.codename1.impl.javase.JavaSEPort.java", "BodyUseAPI": [], "Fixed commit": "9d71195c3925964e17be35ab32751fd95bd6bd21", "Url": "https://api.github.com/repos/diamonddevgroup/CodenameOne", "Date": "2017-08-25T19:58:47Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) < 0) { taskName = null; }else { taskName = removeSpace(remaining); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5957/buggy-version/src.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "96a8867fc51cf5aee862c61c32a7e3f3ef47733b", "Url": "https://api.github.com/repos/cs2103aug2015-w14-4j/main", "Date": "2015-11-10T05:18:47Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numTestRun) > 1) { ex = java.util.concurrent.Executors.newSingleThreadExecutor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4983/buggy-version/app.src.main.java.edu.pitt.cs.cs1635.skc29.mobilevoting.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "68f077f34116e3c08a44db6fb6773c75bb49d5f1", "Url": "https://api.github.com/repos/scousino/MobileVoting", "Date": "2017-04-14T03:42:31Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data == null) { return jsonObject; }else { char prefix = 'x'; for (int i = 0; i < (data.length); i++) { jsonObject.put(java.lang.String.valueOf(prefix), data[i]); prefix++; } return jsonObject; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8010/buggy-version/app.src.main.java.com.ohtu.wearable.wearabledataservice.sensors.JSONConverter.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,float)"], "Fixed commit": "120ac431830e040d65f862c10dfe45b4e8256b48", "Url": "https://api.github.com/repos/OhtuWearable/WearableDataServer", "Date": "2015-03-17T16:39:53Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerFirstPage.getVisibility()) != (android.view.View.VISIBLE)) { handleSwipeRight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8914/buggy-version/WhatsTheWord.app.src.main.java.layout.GamePage.java", "BodyUseAPI": [], "Fixed commit": "15e070a72928ee95da03b6e148159b7af12e966a", "Url": "https://api.github.com/repos/missytoy/GuessTheWord", "Date": "2016-01-14T19:07:28Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerFirstPage.getVisibility()) != (android.view.View.VISIBLE)) { handleSwipeLeft(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8914/buggy-version/WhatsTheWord.app.src.main.java.layout.GamePage.java", "BodyUseAPI": [], "Fixed commit": "15e070a72928ee95da03b6e148159b7af12e966a", "Url": "https://api.github.com/repos/missytoy/GuessTheWord", "Date": "2016-01-14T19:07:28Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ipass.persistence.ArtiestDAO.findByNaam(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (artiestDAO.delete(new ipass.model.Artiest(artiest.getNaam(), artiest.getInstrument()))) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6952/buggy-version/src.main.java.ipass.services.LibService.java", "BodyUseAPI": [], "Fixed commit": "97bb7ab80207a0b72f7c30eb28b20759246b127f", "Url": "https://api.github.com/repos/MartNoten/iPass", "Date": "2016-06-01T18:46:24Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getPlayer()) != null) && ((event.getPlayer().getServer()) != null)) { io.github.dead_i.bungeeweb.BungeeWeb.log(plugin, event.getPlayer(), 5, (((event.getPlayer().getServer().getInfo().getName()) + \": \") + (net.md_5.bungee.api.chat.BaseComponent.toPlainText(event.getKickReasonComponent())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2543/buggy-version/src.io.github.dead_i.bungeeweb.listeners.ServerKickListener.java", "BodyUseAPI": ["io.github.dead_i.bungeeweb.BungeeWeb.log(net.md_5.bungee.api.plugin.Plugin,event.getPlayer(),int,(((event.getPlayer().getServer().getInfo().getName()) + \": \") + (net.md_5.bungee.api.chat.BaseComponent.toPlainText(event.getKickReasonComponent()))))", "net.md_5.bungee.api.event.ServerKickEvent.getPlayer()", "event.getPlayer().getServer().getInfo().getName()", "net.md_5.bungee.api.event.ServerKickEvent.getKickReasonComponent()", "event.getPlayer().getServer().getInfo()", "event.getPlayer().getServer()", "net.md_5.bungee.api.event.ServerKickEvent.getPlayer()", "net.md_5.bungee.api.chat.BaseComponent.toPlainText(event.getKickReasonComponent())"], "Fixed commit": "90f9abd7e7b0d2c3b78d259a42a5a292e0df533f", "Url": "https://api.github.com/repos/Absentee23/BungeeWeb", "Date": "2015-04-02T17:22:16Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((myagg.merged) != null) && ((myagg.merged.hash) != null)) reach = myagg.merged.hash.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9101/buggy-version/src.main.java.brickhouse.udf.sketch.SketchSetCntUDAF.java", "BodyUseAPI": ["myagg.merged.hash.size()"], "Fixed commit": "78e2315de993f6e48e505c264287c88239d4095e", "Url": "https://api.github.com/repos/WANdisco/brickhouse", "Date": "2014-07-21T08:50:50Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(kmelia.getPublicationAccessController().isUserAuthorized(kmelia.getUserId(), kmeliaPublication.getPk()))) { return \"/admin/jsp/accessForbidden.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1462/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": [], "Fixed commit": "14de23d91c469d9ca5e5207154cc85144f958ebd", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Components", "Date": "2015-07-07T11:45:50Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((x.equals(\"animal\")) || (x.equals(\"animals\"))) return \"That's a \" + (animals.get(((int) ((java.lang.Math.random()) * (animals.size())))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6394/buggy-version/What.java", "BodyUseAPI": [], "Fixed commit": "9e2c115fe1f4598fb748659ea0b62bff28b3ab0c", "Url": "https://api.github.com/repos/goyyapazham/PartyLand", "Date": "2016-01-24T06:16:56Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n.getName().contains(\".\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3331/buggy-version/src.plugins.codeanalysis.JavaCodeAnalyzerPlugin.src.main.java.org.codesearch.commons.plugins.javacodeanalyzerplugin.UsageVisitor.java", "BodyUseAPI": [], "Fixed commit": "a27e3538b969a8719684f2bc5a665933e21b0599", "Url": "https://api.github.com/repos/codesearch-github/codesearch", "Date": "2012-09-09T11:14:59Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.filePath) == null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4179/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.core.model.metadata.AvroMetadataTable.java", "BodyUseAPI": [], "Fixed commit": "52d92a10495f9b37fa349cbc74b722aa229ef8f0", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2015-04-17T06:21:26Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) != null) { error = e.getCause(); }else { error = e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4678/buggy-version/srcSimpleWorkflow.simple-workflow-engine.src.simpleworkflow.engine.application.ApplicationLoader.java", "BodyUseAPI": ["java.lang.Throwable.getCause()"], "Fixed commit": "94bc3ed67f32afaa9d7878fea6b0de719c5ce461", "Url": "https://api.github.com/repos/beef-liu/simple-workflow", "Date": "2015-12-09T18:22:19Z"},
{"Line": "=>1339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDeviceManager) != null) { mDeviceManager.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8318/buggy-version/app.src.main.java.org.zhangjie.onlab.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "569bd59f93984a69eb16f3a6150bfe278441896b", "Url": "https://api.github.com/repos/zhangjie201412/Onlab", "Date": "2017-06-20T06:43:21Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parseType(builder)) == null) { builder.error(\"Type expected\"); varMarker.drop(); }else { if ((builder.getTokenType()) == (org.mustbe.consulo.csharp.lang.psi.CSharpTokens.IDENTIFIER)) { doneIdentifier(builder, 0); } varMarker.done(org.mustbe.consulo.csharp.lang.parser.stmt.LOCAL_VARIABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5225/buggy-version/csharp-psi-impl.src.org.mustbe.consulo.csharp.lang.parser.stmt.StatementParsing.java", "BodyUseAPI": ["org.mustbe.consulo.csharp.lang.parser.CSharpBuilderWrapper.error(java.lang.String)", "org.mustbe.consulo.csharp.lang.parser.CSharpBuilderWrapper.getTokenType()", "org.mustbe.consulo.csharp.lang.parser.stmt.StatementParsing.doneIdentifier(org.mustbe.consulo.csharp.lang.parser.CSharpBuilderWrapper,int)"], "Fixed commit": "4fc0636db45cbb62aa37995726966e42bc5abbe1", "Url": "https://api.github.com/repos/consulo/consulo-csharp", "Date": "2015-07-26T17:01:43Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"n\".equals(s2)) { return s1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5045/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.client.impl.SelectorEngineCssToXPath.java", "BodyUseAPI": [], "Fixed commit": "198dc42ad6c0cf6945114c6a2ae42131017a34c2", "Url": "https://api.github.com/repos/manolo/gquery", "Date": "2012-01-19T23:37:07Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDrawingCacheEnabled()) { destroyDrawingCache(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7045/buggy-version/app.src.main.java.com.jordanbray.btdraw.ArtistView.java", "BodyUseAPI": [], "Fixed commit": "f9c0bc69a152027b14d1c2e30dac0d50ba398f8c", "Url": "https://api.github.com/repos/badgerbaj/BTDraw", "Date": "2017-03-28T16:08:59Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((o.private_latitude) == null) && ((o.latitude) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6016/buggy-version/src.org.inaturalist.android.INaturalistMapActivity.java", "BodyUseAPI": [], "Fixed commit": "d9577927038bca3c016a6de82ffc97386211b7cb", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2013-06-04T23:47:43Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((versions.getConfig().getInt(\"database\")) == 1) { stmt.executeUpdate(\"UPDATE `blocklog_blocks` SET `entity`='player' WHERE `triggered`!='environment' AND `entity`!='creeper'\"); stmt.executeUpdate(\"UPDATE `blocklog_blocks` SET `entity`='unkown' WHERE `triggered`='environment' AND `entity`!='creeper' AND `entity`!='fireball' AND `entity`!='primed_tnt'\"); versions.getConfig().set(\"database\", 2); }else if ((versions.getConfig().getInt(\"database\")) == 2) { stmt.executeUpdate(\"ALTER TABLE `blocklog_commands` CHANGE `command` `command` varchar(255) NOT NULL\"); versions.getConfig().set(\"database\", 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/219/buggy-version/src.main.java.me.arno.blocklog.BlockLog.java", "BodyUseAPI": ["me.arno.blocklog.Config.getConfig()", "me.arno.blocklog.Config.getConfig()", "versions.getConfig().set(java.lang.String,int)", "me.arno.blocklog.Config.getConfig()", "versions.getConfig().getInt(java.lang.String)", "versions.getConfig().set(java.lang.String,int)"], "Fixed commit": "c63f69d4289e1def82ead914a424e43fa6298c37", "Url": "https://api.github.com/repos/anerach/BlockLog", "Date": "2012-05-27T12:11:57Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nullable || ((!nullable) && ((field.get(object)) != null))) { if ((field.getAnnotation(github.macrohuang.orm.mongo.annotation.MongoId.class)) != null) { dbObject.put(docKey, new org.bson.types.ObjectId(java.lang.String.valueOf(field.get(object)))); }else { dbObject.put(docKey, field.get(object)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5411/buggy-version/src.main.java.github.macrohuang.orm.mongo.util.DBObjectUtil.java", "BodyUseAPI": ["java.lang.reflect.Field.get(java.lang.Object)", "java.lang.String.valueOf(java.lang.Object)", "java.lang.reflect.Field.get(java.lang.Object)", "java.lang.reflect.Field.getAnnotation(java.lang.Class)", "com.mongodb.DBObject.put(java.lang.String,org.bson.types.ObjectId)", "com.mongodb.DBObject.put(java.lang.String,java.lang.Object)"], "Fixed commit": "9c7a56c72478275c4f312921626f223249d7603b", "Url": "https://api.github.com/repos/macrohuang/mongo-orm", "Date": "2012-09-10T08:40:48Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (convertedExc != null) { wrapExcNames.add(convertedExc.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/431/buggy-version/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.AvoidHidingCauseExceptionCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getText()", "java.util.List<java.lang.String>.add(convertedExc.getText())"], "Fixed commit": "e04dd10ec01bf7db0ce8d67bb4de322471bd03cc", "Url": "https://api.github.com/repos/rnveach/sevntu.checkstyle", "Date": "2017-05-15T12:00:36Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(me.sirfaizdat.prison.core.Prison.i().getDataFolder().getParentFile(), \"/update/\").exists())) { new java.io.File(me.sirfaizdat.prison.core.Prison.i().getDataFolder().getParentFile(), \"/update/\").mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4992/buggy-version/src.me.sirfaizdat.prison.core.Updater.java", "BodyUseAPI": [], "Fixed commit": "e761997c3b3f2e8424d4d0e7bb189fc1ba366ccf", "Url": "https://api.github.com/repos/faizaand/Prison", "Date": "2017-04-08T15:56:57Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getRawSlot()) < 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5558/buggy-version/src.net.dtl.citizenstrader.TraderNpc.java", "BodyUseAPI": [], "Fixed commit": "9eab69601793cf5a588babc3591a3518da3b7185", "Url": "https://api.github.com/repos/Dandielo/DtlCitizensTrader", "Date": "2012-06-05T12:12:19Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mMaxId))) { paging.setMaxId(mMaxId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4942/buggy-version/src.com.ch_linghu.fanfoudroid.UserTimelineActivity.java", "BodyUseAPI": ["com.ch_linghu.fanfoudroid.fanfou.Paging.setMaxId(java.lang.String)"], "Fixed commit": "2b0a1d4e6240db5e365aa7fb66ff94b92cc3e23c", "Url": "https://api.github.com/repos/fanfoudroid/fanfoudroid", "Date": "2011-09-06T12:05:02Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (relem == null) java.lang.System.err.println(\"Error: No numerical attribute in the dataset.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9075/buggy-version/src.moa.reduction.bayes.REBdiscretize.java", "BodyUseAPI": [], "Fixed commit": "073ecfdaf240ea88449d9470736d5b92d6e474db", "Url": "https://api.github.com/repos/sramirez/MOAReduction", "Date": "2017-02-15T12:48:23Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.pmd.lang.apex.ast.ASTVariableExpression.getFirstChildOfType(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ref != null) { if ((ref.getNode().getJadtIdentifiers().size()) == 1) { objectName = (ref.getNode().getJadtIdentifiers().get(0).value) + \".\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2925/buggy-version/pmd-apex.src.main.java.net.sourceforge.pmd.lang.apex.rule.security.ApexXSSFromURLParamRule.java", "BodyUseAPI": ["net.sourceforge.pmd.lang.apex.ast.ASTReferenceExpression.getNode()", "ref.getNode().getJadtIdentifiers().size()", "ref.getNode().getJadtIdentifiers()", "ref.getNode().getJadtIdentifiers()", "ref.getNode().getJadtIdentifiers().get(int)", "net.sourceforge.pmd.lang.apex.ast.ASTReferenceExpression.getNode()"], "Fixed commit": "5a615d576cd4598da70beecf78ad619c215f290d", "Url": "https://api.github.com/repos/sgorbaty/pmd", "Date": "2016-12-03T00:11:31Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fileToWatch.exists())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7993/buggy-version/grails-core.src.main.groovy.org.codehaus.groovy.grails.compiler.WatchServiceDirectoryWatcher.java", "BodyUseAPI": [], "Fixed commit": "445a945084d096faccb7211485238aad6f014483", "Url": "https://api.github.com/repos/hauner/grails-core", "Date": "2014-04-03T08:57:16Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.chilicat.felixscr.intellij.inspection.PsiClass.getQualifiedName()", "net.chilicat.felixscr.intellij.inspection.PsiClass.getQualifiedName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((thisClassName != null) && (thisClassName.equals(ifaceClassName))) { itr.remove(); }else if (cls.isInheritor(serviceInterface, true)) { itr.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9252/buggy-version/src.net.chilicat.felixscr.intellij.inspection.ServiceInvalidInterface.java", "BodyUseAPI": [], "Fixed commit": "a8a6b79883d84dc04ddff9d50d7d7c8862a99fbf", "Url": "https://api.github.com/repos/chilicat/felix-annotation-processor", "Date": "2012-06-07T15:19:43Z"},
{"Line": "=>1071", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mInstallDialog) != null) { if (mInstallDialog.isShowing()) { mInstallDialog.dismiss(); } mInstallDialog = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8513/buggy-version/src.com.buzzwords.PackPurchaseActivity.java", "BodyUseAPI": [], "Fixed commit": "fb0fa0c9770fb29688b66c3303a06c8737748945", "Url": "https://api.github.com/repos/siramix/buzzwords", "Date": "2013-11-01T17:31:54Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getChildren().size()) > 1) { buildAST(node.getChild(1)); buildAST(node.getChild(0)); buildAST(node.getChild(2)); if (((node.getParent().getParent().getName().equals(\"IntExpr\")) || (node.getParent().getParent().getName().equals(\"AssignmentStatement\"))) || (node.getParent().getParent().getName().equals(\"PrintStatement\"))) { returnToParent(); } }else { buildAST(node.getChild(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8816/buggy-version/SemanticAnalyzer.java", "BodyUseAPI": ["SemanticAnalyzer.buildAST(node.getChild(1))", "syntaxTreeNode.getParent()", "SemanticAnalyzer.buildAST(node.getChild(0))", "syntaxTreeNode.getChild(int)", "node.getParent().getParent()", "node.getParent().getParent().getName()", "SemanticAnalyzer.buildAST(node.getChild(2))", "node.getParent().getParent().getName()", "syntaxTreeNode.getParent()", "syntaxTreeNode.getChild(int)", "node.getParent().getParent().getName().equals(java.lang.String)", "node.getParent().getParent()", "node.getParent().getParent().getName()", "SemanticAnalyzer.buildAST(node.getChild(0))", "syntaxTreeNode.getChild(int)", "node.getParent().getParent().getName().equals(java.lang.String)", "syntaxTreeNode.getChild(int)", "node.getParent().getParent().getName().equals(java.lang.String)", "syntaxTreeNode.getParent()", "node.getParent().getParent()"], "Fixed commit": "3e43f8cc88a74f516d9a9b702d3419b616546b5a", "Url": "https://api.github.com/repos/antonyliang/bestCompiler", "Date": "2015-05-12T05:20:40Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(emitter.isDisposed())) { emitter.onError(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1165/buggy-version/android-reactive-location.src.main.java.pl.charmas.android.reactivelocation2.observables.BaseObservableOnSubscribe.java", "BodyUseAPI": ["io.reactivex.ObservableEmitter<? super T>.onError(java.lang.Throwable)"], "Fixed commit": "7975da3118263dfd56941f3d0f80d121d8af9def", "Url": "https://api.github.com/repos/niqo01/Android-ReactiveLocation", "Date": "2017-11-23T01:01:48Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(emitter.isDisposed())) { emitter.onError(new pl.charmas.android.reactivelocation2.observables.GoogleAPIConnectionException(\"Error connecting to GoogleApiClient.\", connectionResult)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1165/buggy-version/android-reactive-location.src.main.java.pl.charmas.android.reactivelocation2.observables.BaseObservableOnSubscribe.java", "BodyUseAPI": ["io.reactivex.ObservableEmitter<? super T>.onError(pl.charmas.android.reactivelocation2.observables.GoogleAPIConnectionException)"], "Fixed commit": "7975da3118263dfd56941f3d0f80d121d8af9def", "Url": "https://api.github.com/repos/niqo01/Android-ReactiveLocation", "Date": "2017-11-23T01:01:48Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(emitter.isDisposed())) { emitter.onError(new pl.charmas.android.reactivelocation2.observables.GoogleAPIConnectionSuspendedException(cause)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1165/buggy-version/android-reactive-location.src.main.java.pl.charmas.android.reactivelocation2.observables.BaseObservableOnSubscribe.java", "BodyUseAPI": ["io.reactivex.ObservableEmitter<? super T>.onError(pl.charmas.android.reactivelocation2.observables.GoogleAPIConnectionSuspendedException)"], "Fixed commit": "7975da3118263dfd56941f3d0f80d121d8af9def", "Url": "https://api.github.com/repos/niqo01/Android-ReactiveLocation", "Date": "2017-11-23T01:01:48Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["codechicken.lib.packet.PacketCustom.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((net.minecraftforge.common.DimensionManager.getWorld(selectedDimID)) != null) newGuiAdmin.setDimTimeInfo(net.minecraftforge.common.DimensionManager.getWorld(selectedDimID).getWorldTime()); else newGuiAdmin.setDimTimeInfo(0L);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5877/buggy-version/src.main.java.com.contained.game.network.ClientPacketHandler.java", "BodyUseAPI": ["com.contained.game.ui.GuiAdmin.setDimTimeInfo(net.minecraftforge.common.DimensionManager.getWorld(selectedDimID).getWorldTime())", "net.minecraftforge.common.DimensionManager.getWorld(selectedDimID).getWorldTime()", "net.minecraftforge.common.DimensionManager.getWorld(int)"], "Fixed commit": "0e22081e831d38c0cafd000cb2733124f33d16ee", "Url": "https://api.github.com/repos/Damian3395/Contained", "Date": "2016-05-21T18:30:14Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (provider.equals(LocationManager.GPS_PROVIDER)) { bindLocationListener(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8111/buggy-version/RunnerApp.src.main.java.com.runnerapp.runnerapp.LocationService.java", "BodyUseAPI": [], "Fixed commit": "db8ab3bacfb7d7a6125af4fbb4f7f7750b1f6632", "Url": "https://api.github.com/repos/burtonjb/Running-App", "Date": "2015-06-26T23:15:50Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_session) != null) { _session.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3808/buggy-version/android-radar.src.main.java.com.cedexis.androidradar.RadarService.java", "BodyUseAPI": [], "Fixed commit": "a7f2abbded5640932929b55cd6c582fc7c4b34a4", "Url": "https://api.github.com/repos/cedexis/AndroidRadar", "Date": "2015-10-02T18:17:42Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serviceImages) == null) { serviceImages = new java.util.LinkedList<com.cloudezz.houston.domain.ServiceImageCfg>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5986/buggy-version/src.main.java.com.cloudezz.houston.domain.AppImageCfg.java", "BodyUseAPI": [], "Fixed commit": "7eb0f8efbcb64efc867cd24c2408424f7885a611", "Url": "https://api.github.com/repos/cloudezz/houston", "Date": "2014-03-05T10:32:42Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, org.springframework.batch.core.JobParameter>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((jobParameter.getType()) == (org.springframework.batch.core.JobParameter.ParameterType.DOUBLE)) { result.setProperty((key + (org.springframework.batch.core.converter.DefaultJobParametersConverter.DOUBLE_TYPE)), value.toString()); }else { result.setProperty(key, (\"\" + value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2914/buggy-version/spring-batch-core.src.main.java.org.springframework.batch.core.converter.DefaultJobParametersConverter.java", "BodyUseAPI": [], "Fixed commit": "0151529077bd846c3bfd658cb1a11c3080ad5473", "Url": "https://api.github.com/repos/spring-projects/spring-batch", "Date": "2011-05-13T12:58:22Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (orderTime != null) { java.util.Date date = com.order.www.controller.DateUtil.parseDate(orderTime, \"yyyy-MM-dd\"); if (((orderDB.getPurchaseDateDB()) == null) || (!(org.apache.commons.lang.time.DateUtils.isSameDay(date, orderDB.getPurchaseDateDB())))) { orderDB.setPurchaseDateDB(date); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3807/buggy-version/src.main.java.com.order.www.controller.OrderControl.java", "BodyUseAPI": ["com.order.www.controller.DateUtil.parseDate(java.lang.String,java.lang.String)"], "Fixed commit": "60850d63bf31a64c186fde2d9311e60f68e429f2", "Url": "https://api.github.com/repos/kongtrio/seller_order", "Date": "2017-12-10T15:45:44Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isReachable) { sendMessage(channel, (address + \" is online.\")); }else { sendMessage(channel, (address + \" is offline.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/280/buggy-version/Bot.java", "BodyUseAPI": [], "Fixed commit": "61e3601be21a8b283b91f29697160562088b08be", "Url": "https://api.github.com/repos/zifnab06/googleBot", "Date": "2013-02-28T06:35:52Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s == null) || (s.isEmpty())) return s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/667/buggy-version/src.main.java.com.hackcaffebabe.mtg.controller.StringNormalizer.java", "BodyUseAPI": [], "Fixed commit": "f8889418e4dbefa47409d6ed88ff91bf4fe174e0", "Url": "https://api.github.com/repos/AndreaGhizzoni/mtg", "Date": "2014-10-06T10:04:23Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["project.getProperties().getProperty(Constants.POM_PROP_KEY_SPLIT_TEST_DIR)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dotPhrescoDirName != null) { scriptPath = ((((project.getBasedir().getParentFile()) + (java.io.File.separator)) + dotPhrescoDirName) + (java.io.File.separator)) + (script); }else { scriptPath = ((project.getBasedir()) + (java.io.File.separator)) + (script); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2199/buggy-version/xcode-maven-plugin.src.main.java.com.photon.phresco.plugins.xcode.Instrumentation.java", "BodyUseAPI": [], "Fixed commit": "7e4cf4cd33df961df47344623283630b597ee631", "Url": "https://api.github.com/repos/photon-infotech/plugins", "Date": "2014-01-09T10:30:34Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["unicopa.copa.server.database.data.persistence.PrivilegeMapper.getPrivileged(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (privList == null) return new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1099/buggy-version/src.main.java.unicopa.copa.server.database.DatabaseService.java", "BodyUseAPI": [], "Fixed commit": "83406a57dc4298916dfc3c45ce1ebab3e3f160a6", "Url": "https://api.github.com/repos/UniCopa/CopaServer", "Date": "2013-06-19T18:23:31Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getConn().getAgentById(member).getHappinessHistory().size()) > 1) { happiness = getConn().getAgentById(member).getHappinessHistory().getValue(turnsAgo); }else { happiness = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3288/buggy-version/src.ise.gameoflife.groups.LoansGroup.java", "BodyUseAPI": ["getConn().getAgentById(member).getHappinessHistory()", "getConn().getAgentById(member).getHappinessHistory().getValue(int)", "getConn().getAgentById(java.lang.String)"], "Fixed commit": "5ec04523e8672f84dd2490aaf5f70d05ac349993", "Url": "https://api.github.com/repos/javajawa/ISEGameOfLife", "Date": "2011-06-19T02:43:20Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((debrisLiftPos) > 1.0) debrisLiftPos = 1.0; else if ((debrisLiftPos) < 1.0) debrisLiftPos = 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8584/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.FiveWheelTeleOpV2.java", "BodyUseAPI": [], "Fixed commit": "6f672957bb7a0e8da01801d50becfe0ba2efc229", "Url": "https://api.github.com/repos/emccosky/SnakeByte4546", "Date": "2015-11-06T18:06:34Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((best.barcode) != null) && ((best.mismatches) >= (best.barcode.length()))) && ((best.mismatchesToSecondBest) >= (best.barcode.length()))) { best.barcode = null; best.mismatches = barcodeToMatch.length(); best.mismatchesToSecondBest = best.mismatches; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4508/buggy-version/src.main.java.org.magicdgs.readtools.tools.barcodes.dictionary.decoder.BarcodeMatch.java", "BodyUseAPI": [], "Fixed commit": "611cecec314a63429e5dc470bd8f90fd6652fb7b", "Url": "https://api.github.com/repos/magicDGS/ReadTools", "Date": "2017-01-09T16:14:32Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentUser) != null) { for (com.google.firebase.auth.UserInfo profile : currentUser.getProviderData()) { if (FacebookAuthProvider.PROVIDER_ID.equals(profile.getProviderId())) { facebookUserId = profile.getUid(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5544/buggy-version/app.src.main.java.com.realtimehitchhiker.hitchgo.FirebaseService.java", "BodyUseAPI": [], "Fixed commit": "dc76e360dc86a5cf60daa73aabc65d26bb0f5833", "Url": "https://api.github.com/repos/GilShoshan94/RealTimeHitchhiker", "Date": "2017-12-16T23:06:08Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(processing.core.PVector.dist(from, intersection.position))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dist <= maxDist) { maxDist = dist; closestIntersection = intersection; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7770/buggy-version/src.de.dominikmuench.twintowns.utility.Utilities.java", "BodyUseAPI": [], "Fixed commit": "41b50396d6516523b35108037b5fade68553dc4d", "Url": "https://api.github.com/repos/muenchdo/TwinTowns", "Date": "2015-07-17T08:50:47Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5463/buggy-version/GoalsAndHabits.app.src.main.java.cmput301f17t09.goalsandhabits.Main_Habits.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d8f4fc935ce530c678c4e6ae9fd096bed67c3a02", "Url": "https://api.github.com/repos/CMPUT301F17T09/GoalsAndHabits", "Date": "2017-11-28T22:16:04Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameOver) { android.widget.Toast.makeText(this, \"Ops!, Let play again\", Toast.LENGTH_SHORT).show(); reset.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3081/buggy-version/app.src.main.java.com.imarwan.tictactoc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fc31a838ca59cfca030c75a3762f2dc34b6b556f", "Url": "https://api.github.com/repos/iMarwan-k/Tic_Tac_Toe", "Date": "2017-03-16T06:17:00Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.esa.snap.core.dataop.dem.ElevationModelRegistry.getInstance().getDescriptor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (descriptor != null) { demName.setSelectedItem(org.esa.snap.dem.dataio.DEMFactory.getDEMDisplayName(descriptor)); }else { demName.setSelectedItem(demNameParam); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/271/buggy-version/s1tbx-op-insar-ui.src.main.java.org.esa.s1tbx.insar.gpf.ui.CoherenceOpUI.java", "BodyUseAPI": ["org.esa.snap.dem.dataio.DEMFactory.getDEMDisplayName(org.esa.snap.core.dataop.dem.ElevationModelDescriptor)", "javax.swing.JComboBox<java.lang.String>.setSelectedItem(org.esa.snap.dem.dataio.DEMFactory.getDEMDisplayName(descriptor))"], "Fixed commit": "8a7392ca5a7d224308d360ebc81fde1d6b5d6791", "Url": "https://api.github.com/repos/senbox-org/s1tbx", "Date": "2017-03-20T20:09:36Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((path1.startLocation) == (path1.endLocation)) || ((path2.startLocation) == (path2.endLocation))) || ((path1.startLocation) == (path2.startLocation))) || ((path2.startLocation) == (path1.startLocation))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1023/buggy-version/tspAlgorithm.TwoOpt.java", "BodyUseAPI": [], "Fixed commit": "4d08538a45cc56413009dbc25cc6f10635615062", "Url": "https://api.github.com/repos/luukholleman/ASRSJava", "Date": "2013-05-23T10:04:35Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mEnter) { mAlpha = (interpolatedTime <= 0.5F) ? 0.0F : 1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2520/buggy-version/fragmentanimations.src.main.java.com.labo.kaji.fragmentanimations.FlipAnimation.java", "BodyUseAPI": [], "Fixed commit": "f673cd7fc00bfd699db82bf5d7117d9c81e7af14", "Url": "https://api.github.com/repos/com360/FragmentAnimations", "Date": "2016-07-24T07:33:14Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(displayName)) { this.displayName = loginName; }else { this.displayName = displayName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6998/buggy-version/app.models.User.java", "BodyUseAPI": [], "Fixed commit": "82f1323b5164200abdbe1bb25a88bf13fdb67019", "Url": "https://api.github.com/repos/vitaliikravets/zaibalo-api", "Date": "2017-04-27T21:40:04Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (selectedRow != (-1)) { try { sul.SelectionChanged(alarmTableModel.getAlarmAt(selectedRow)); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(Presentation.Frames.Overview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/637/buggy-version/src.Presentation.Frames.Overview.java", "BodyUseAPI": ["Presentation.Frames.ShowUpList.SelectionChanged(alarmTableModel.getAlarmAt(selectedRow))", "Presentation.Frames.TableModelAlarm.getAlarmAt(int)"], "Fixed commit": "5c669e9f8ee1996474af819af1874c74cb7f0cb9", "Url": "https://api.github.com/repos/NielsRavn/FRIGGAdministration", "Date": "2014-05-19T13:55:24Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newArea.getHeight()) >= robotSize) { main.pi.pathfinder.GraphConverter.addNeighbours(newArea, area.getNeighbours()); toAdd.add(newArea); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2166/buggy-version/Bachelor.src.main.pi.pathfinder.GraphConverter.java", "BodyUseAPI": ["java.util.List<main.pi.pathfinder.Area>.add(main.pi.pathfinder.Area)", "main.pi.pathfinder.GraphConverter.addNeighbours(main.pi.pathfinder.Area,area.getNeighbours())"], "Fixed commit": "33ae72b74fd690b2dfed791f9efa5ffb12e6ec78", "Url": "https://api.github.com/repos/Mupfy/robby", "Date": "2017-07-17T17:41:57Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newArea.getHeight()) >= robotSize) { main.pi.pathfinder.GraphConverter.addNeighbours(newArea, area.getNeighbours()); toAdd.add(newArea); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2166/buggy-version/Bachelor.src.main.pi.pathfinder.GraphConverter.java", "BodyUseAPI": ["java.util.List<main.pi.pathfinder.Area>.add(main.pi.pathfinder.Area)", "main.pi.pathfinder.GraphConverter.addNeighbours(main.pi.pathfinder.Area,area.getNeighbours())"], "Fixed commit": "33ae72b74fd690b2dfed791f9efa5ffb12e6ec78", "Url": "https://api.github.com/repos/Mupfy/robby", "Date": "2017-07-17T17:41:57Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((in.teramatrix.utilities.service.LocationHandler.mGoogleApiClient.isConnecting()) || (in.teramatrix.utilities.service.LocationHandler.mGoogleApiClient.isConnected())) in.teramatrix.utilities.service.LocationHandler.mGoogleApiClient.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9041/buggy-version/utilities.src.main.java.in.teramatrix.utilities.service.LocationHandler.java", "BodyUseAPI": ["com.google.android.gms.common.api.GoogleApiClient.disconnect()"], "Fixed commit": "dda960e0989fd54ba7009705fc5d8e4b69d3ca8b", "Url": "https://api.github.com/repos/abhishek-tm/general-utilities-android", "Date": "2017-05-25T11:19:31Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BookSet.decrementBookCount(Book)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bookWithDecrementedCount.hasBooks()) { reducedBookList.add(bookWithDecrementedCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6425/buggy-version/src.java.BookSet.java", "BodyUseAPI": ["java.util.List<Book>.add(Book)"], "Fixed commit": "06b0dcd7415bce8711063974c7bf1eb048894b72", "Url": "https://api.github.com/repos/compwron/HarryPotterDojo", "Date": "2013-10-19T19:53:22Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (expr instanceof anatlyzer.atlext.OCL.CollectionType) { }else if (anatlyzer.atl.analyser.generators.OclSlice.ignore.contains(expr.getClass())) { }else { throw new java.lang.UnsupportedOperationException(expr.getClass().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6853/buggy-version/plugins.anatlyzer.atl.typing.src.anatlyzer.atl.analyser.generators.OclSlice.java", "BodyUseAPI": ["java.util.HashSet<java.lang.Class<?>>.contains(expr.getClass())", "expr.getClass().getName()", "anatlyzer.atlext.OCL.OclExpression.getClass()", "anatlyzer.atlext.OCL.OclExpression.getClass()"], "Fixed commit": "292b2da90d534d3ec1fa40c8fe3e2251211e0663", "Url": "https://api.github.com/repos/anatlyzer/anatlyzer", "Date": "2017-11-15T22:46:17Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index) <= (urls.length)) { android.support.customtabs.CustomTabsIntent.Builder builder = new android.support.customtabs.CustomTabsIntent.Builder(session); builder.setToolbarColor(android.support.v4.content.ContextCompat.getColor(activity, R.color.accent)); android.support.customtabs.CustomTabsIntent customTabsIntent = builder.build(); customTabsIntent.launchUrl(activity, android.net.Uri.parse(urls[((index)++)])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9068/buggy-version/CCULife.src.main.java.org.zankio.cculife.utils.BrowserUtils.java", "BodyUseAPI": ["android.support.customtabs.CustomTabsIntent.launchUrl(android.app.Activity,android.net.Uri.parse(urls[((index)++)]))", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "655de2c340fc84d1acefa8a3fe9db403512f5dda", "Url": "https://api.github.com/repos/Zankio/CCULife", "Date": "2016-09-11T16:42:40Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentNode.rVisited) == null) currentNode.rVisited = new java.util.HashSet<java.lang.Integer>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2913/buggy-version/src.main.MCTS.java", "BodyUseAPI": [], "Fixed commit": "1b8da69105645a6228ffeeff3a3adbe17eb7ca14", "Url": "https://api.github.com/repos/theKGS/MCTS", "Date": "2016-07-02T20:28:40Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.Node.randomSelect(main.Board)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentNode.rVisited.contains(indexOfMove)) { currentNode = currentNode.unvisitedChildren.get(indexOfMove); currentBoard.makeMove(currentNode.move); }else { currentNode = currentNode.unvisitedChildren.get(indexOfMove); currentBoard.makeMove(currentNode.move); playout(currentNode, currentBoard); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2913/buggy-version/src.main.MCTS.java", "BodyUseAPI": ["currentNode.unvisitedChildren.get(int)", "currentNode.unvisitedChildren.get(int)"], "Fixed commit": "1b8da69105645a6228ffeeff3a3adbe17eb7ca14", "Url": "https://api.github.com/repos/theKGS/MCTS", "Date": "2016-07-02T20:28:40Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Cache.bootAction) != null) { Cache.bootAction.onRegisteredEventLost(context, ((greencode.jscript.dom.Window) (requestController))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4894/buggy-version/src.greencode.kernel.Core.java", "BodyUseAPI": [], "Fixed commit": "6c5953a3bf6305c97a6c5b109dfaab269ed8fc60", "Url": "https://api.github.com/repos/mehah/jRender", "Date": "2017-09-15T18:07:02Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (greencode.util.ObjectUtils.isBoolean(value)) { parameters.addProperty(entry.getKey(), java.lang.Boolean.parseBoolean(value)); }else if (greencode.util.ObjectUtils.isBoolean(value)) { parameters.addProperty(entry.getKey(), java.text.NumberFormat.getInstance().parse(value)); }else { parameters.addProperty(entry.getKey(), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4894/buggy-version/src.greencode.kernel.Core.java", "BodyUseAPI": ["java.text.NumberFormat.parse(java.lang.String)", "com.google.gson.JsonObject.addProperty(java.lang.String,boolean)", "com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.Number)", "java.lang.Boolean.parseBoolean(java.lang.String)", "greencode.util.ObjectUtils.isBoolean(java.lang.String)", "com.google.gson.JsonObject.addProperty(java.lang.String,java.lang.String)"], "Fixed commit": "6c5953a3bf6305c97a6c5b109dfaab269ed8fc60", "Url": "https://api.github.com/repos/mehah/jRender", "Date": "2017-09-15T18:07:02Z"},
{"Line": "=>1287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mCurrentList.size()) > 0) { mNextPlayingIndex = mRandomGenerator.nextInt(mCurrentList.size()); int counter = 0; while (((mNextPlayingIndex) == (mCurrentPlayingIndex)) && (counter > 20)) { mCurrentPlayingIndex = mRandomGenerator.nextInt(mCurrentList.size()); counter++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2868/buggy-version/src.org.odyssey.playbackservice.PlaybackService.java", "BodyUseAPI": ["java.util.ArrayList<org.odyssey.playbackservice.TrackItem>.size()", "java.util.Random.nextInt(mCurrentList.size())", "java.util.ArrayList<org.odyssey.playbackservice.TrackItem>.size()", "java.util.Random.nextInt(mCurrentList.size())"], "Fixed commit": "4be08f32996616460d371215a446cc36a5aaf9c7", "Url": "https://api.github.com/repos/djselbeck/odyssey", "Date": "2014-07-10T13:26:34Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_rm) != null) _rm.shutdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6080/buggy-version/src.org.yawlfoundation.yawl.resourcing.rsInterface.ResourceGateway.java", "BodyUseAPI": [], "Fixed commit": "b3f51bd42c3b3bc76817f99962bf91c1023bcc7a", "Url": "https://api.github.com/repos/yawlfoundation/yawl", "Date": "2016-10-12T10:52:53Z"},
{"Line": "=>760", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c instanceof org.archive.modules.credential.HttpAuthenticationCredential) { org.archive.modules.credential.HttpAuthenticationCredential cred = ((org.archive.modules.credential.HttpAuthenticationCredential) (c)); ntlm = cred.getUsingNtlm(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9154/buggy-version/engine-3.1.1.modules.src.main.java.org.archive.modules.fetcher.FetchHTTP.java", "BodyUseAPI": [], "Fixed commit": "f28eceb98ca79d6424d9c2fb4e7ec01e6eae92f1", "Url": "https://api.github.com/repos/searchtechnologies/heritrix-connector", "Date": "2016-08-30T19:45:18Z"},
{"Line": "=>776", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!ntlm) rec.getRecordedInput().readFullyOrUntil(softMax); else { rec.getRecordedInput().getReplayInputStream().read(method.getResponseBody()); rec.getRecordedInput().getRecordingOutputStream().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9154/buggy-version/engine-3.1.1.modules.src.main.java.org.archive.modules.fetcher.FetchHTTP.java", "BodyUseAPI": [], "Fixed commit": "f28eceb98ca79d6424d9c2fb4e7ec01e6eae92f1", "Url": "https://api.github.com/repos/searchtechnologies/heritrix-connector", "Date": "2016-08-30T19:45:18Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c.equalsIgnoreCase(com.vhsrobotics.adhoc.serial.Sys.Command.CONNECT)) { com.vhsrobotics.adhoc.serial.Util.sendCommand(com.vhsrobotics.adhoc.serial.Sys.Command.ACK); if (!(com.vhsrobotics.adhoc.serial.Sys.isConnected)) com.vhsrobotics.adhoc.serial.Util.sendCommand(com.vhsrobotics.adhoc.serial.Sys.Command.CONNECT); }else if (c.equalsIgnoreCase(com.vhsrobotics.adhoc.serial.Sys.Command.ACK)) { com.vhsrobotics.adhoc.serial.Sys.isConnected = true; com.vhsrobotics.adhoc.serial.SerialProcessor.sync(); }else if (c.equalsIgnoreCase(com.vhsrobotics.adhoc.serial.Sys.Command.DISCONNECT)) { com.vhsrobotics.adhoc.serial.Sys.isConnected = false; }else { java.lang.System.err.println((\"Invalid Command: \" + c)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/575/buggy-version/src.com.vhsrobotics.adhoc.serial.Sys.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "com.vhsrobotics.adhoc.serial.Util.sendCommand(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "7d56c4043b2facb18bf2c064a6f3e4b2e891e8b8", "Url": "https://api.github.com/repos/nanoparticle/Ad-Hoc-Serial-Interface", "Date": "2016-10-07T08:51:55Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((method.name().startsWith(\"get\")) && ((method.parameters()) != null)) && ((method.parameters().length) > 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7282/buggy-version/swagger-doclet.src.main.java.com.carma.swagger.doclet.parser.ApiModelParser.java", "BodyUseAPI": [], "Fixed commit": "836096e81f577e457349fae4977a340519078e8a", "Url": "https://api.github.com/repos/Carma-Public/swagger-jaxrs-doclet", "Date": "2014-11-26T13:21:12Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.picto.dao.CouponDao.queryCouponById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(coupon.getIsImediate())) && (!(this.nonImmediateValidator(coupon.getCreateTime())))) { return \"\u4f18\u60e0\u5238\u6b21\u65e5\u751f\u6548\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4658/buggy-version/PictoLottery.src.main.java.com.picto.service.impl.CouponServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "2c4b84eadabf187d636adccf573b958423513222", "Url": "https://api.github.com/repos/meiosischen/picto_lottery", "Date": "2016-07-09T10:58:59Z"},
{"Line": "=>900", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (criteria == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9256/buggy-version/src.java.is.idega.idegaweb.egov.bpm.cases.manager.BPMCasesRetrievalManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "0820402811c22656d1657aacc25b69a035e1305b", "Url": "https://api.github.com/repos/idega/is.idega.idegaweb.egov.bpm", "Date": "2012-11-06T11:18:39Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((int) (result)) == result) return java.lang.String.valueOf(((int) (result))); else return java.lang.String.valueOf(result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/265/buggy-version/src.back.Calculate.java", "BodyUseAPI": ["java.lang.String.valueOf(double)", "java.lang.String.valueOf(double)"], "Fixed commit": "045c31bb4c2e42f3f7df8950e57968209c55f679", "Url": "https://api.github.com/repos/wtupc96/Calculator", "Date": "2016-11-26T12:38:43Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.cvut.fit.genepi.DAO.PatientDAO.getPatientByIdWithAllLists(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ent == null) { java.lang.System.out.println(\"is NULL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3702/buggy-version/Backend.src.main.java.cz.cvut.fit.genepi.serviceImpl.PatientServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "37311c945928fda20d7fec1fb9e4177750950bdf", "Url": "https://api.github.com/repos/Dworzaaa/database-epileptic-patients", "Date": "2013-10-22T22:39:44Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tapped) != null) { events.remove(tapped); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2920/buggy-version/app.src.main.java.com.example.jojo.schedulemapper.ScheduleActivity.java", "BodyUseAPI": [], "Fixed commit": "0e2c0db73e053b9a1bbdc74ca913e7e401ceea79", "Url": "https://api.github.com/repos/KingJojo/ScheduleMapper", "Date": "2015-11-02T18:53:21Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.handleLogout(req, resp))) { dispatcherServlet.service(req, resp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4053/buggy-version/src.main.java.com.adeptj.modularweb.runtime.servlet.ProxyDispatcherServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "c19b2e97e3fcf824f6c4ddce8c5427db12a05275", "Url": "https://api.github.com/repos/AdeptJ/adeptj-runtime", "Date": "2016-11-01T21:00:09Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((responseString.length()) > 0) { int numberOfTailingBlankLines = 0; while ((numberOfTailingBlankLines < (responseString.length())) && (((responseString.charAt((((responseString.length()) - 1) - numberOfTailingBlankLines))) == 13) || ((responseString.charAt((((responseString.length()) - 1) - numberOfTailingBlankLines))) == 10))) numberOfTailingBlankLines++; responseString = responseString.substring(0, ((responseString.length()) - numberOfTailingBlankLines)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7226/buggy-version/MassBank-Project.MassBank.src.main.java.massbank.CallCgi.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "d2dc6cd2f134de3eedd64960d10e513c42e26267", "Url": "https://api.github.com/repos/MassBank/MassBank-web", "Date": "2017-07-12T10:49:49Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.util.EntityUtils.toString(org.apache.http.HttpEntity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((responseString.length()) > 0) { int numberOfTrailingBlankLines = 0; while ((numberOfTrailingBlankLines < (responseString.length())) && (((responseString.charAt(numberOfTrailingBlankLines)) == 13) || ((responseString.charAt(numberOfTrailingBlankLines)) == 10))) numberOfTrailingBlankLines++; responseString = responseString.substring(numberOfTrailingBlankLines, responseString.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7226/buggy-version/MassBank-Project.MassBank.src.main.java.massbank.CallCgi.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "d2dc6cd2f134de3eedd64960d10e513c42e26267", "Url": "https://api.github.com/repos/MassBank/MassBank-web", "Date": "2017-07-12T10:49:49Z"},
{"Line": "=>985", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isLastGridRow(viewPosition, itemSize, columnSize)) { outRect.set((mGridLeftVisible ? borderThickness : 0), 0, (isLastGridColumn(viewPosition, itemSize, columnSize) ? borderThickness : x), (mGridBottomVisible ? borderThickness : 0)); }else { outRect.set((mGridLeftVisible ? borderThickness : 0), 0, (isLastGridColumn(viewPosition, itemSize, columnSize) ? borderThickness : x), y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3295/buggy-version/RecyclerViewDecoration.recyclerviewdecoration.src.main.java.com.arjinmc.recyclerviewdecoration.RecyclerViewItemDecoration.java", "BodyUseAPI": ["android.graphics.Rect.set(int,int,int,int)", "com.arjinmc.recyclerviewdecoration.RecyclerViewItemDecoration.isLastGridColumn(int,int,int)", "com.arjinmc.recyclerviewdecoration.RecyclerViewItemDecoration.isLastGridColumn(int,int,int)", "android.graphics.Rect.set(int,int,int,int)"], "Fixed commit": "9c005b017244d571b4cae2107e1d628672be1764", "Url": "https://api.github.com/repos/arjinmc/RecyclerViewDecoration", "Date": "2017-12-19T11:39:44Z"},
{"Line": "=>1000", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLastGridRow(viewPosition, itemSize, columnSize)) { outRect.set(0, 0, (mGridRightVisible ? borderThickness : 0), (mGridBottomVisible ? borderThickness : 0)); }else { outRect.set(0, 0, (mGridRightVisible ? borderThickness : 0), y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3295/buggy-version/RecyclerViewDecoration.recyclerviewdecoration.src.main.java.com.arjinmc.recyclerviewdecoration.RecyclerViewItemDecoration.java", "BodyUseAPI": [], "Fixed commit": "9c005b017244d571b4cae2107e1d628672be1764", "Url": "https://api.github.com/repos/arjinmc/RecyclerViewDecoration", "Date": "2017-12-19T11:39:44Z"},
{"Line": "=>1012", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLastGridRow(viewPosition, itemSize, columnSize)) { outRect.set(0, 0, x, (mGridBottomVisible ? borderThickness : 0)); }else { outRect.set(0, 0, x, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3295/buggy-version/RecyclerViewDecoration.recyclerviewdecoration.src.main.java.com.arjinmc.recyclerviewdecoration.RecyclerViewItemDecoration.java", "BodyUseAPI": [], "Fixed commit": "9c005b017244d571b4cae2107e1d628672be1764", "Url": "https://api.github.com/repos/arjinmc/RecyclerViewDecoration", "Date": "2017-12-19T11:39:44Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sokoban.BoardState.getPlayerNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (candidate.equals(playerPos)) toPush = new sokoban.Path(); else toPush = pathfinder.getPath(board, playerPos, candidate);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7945/buggy-version/src.sokoban.Tethik.Player.java", "BodyUseAPI": ["sokoban.Algorithms.ISearchAlgorithmPath.getPath(sokoban.BoardState,sokoban.BoardPosition,sokoban.BoardPosition)"], "Fixed commit": "9ed175a2277d39c6edd040e78e70420056483a53", "Url": "https://api.github.com/repos/figgefred/ai13-sokoban", "Date": "2013-09-24T04:04:13Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCoordinatesFromThingseeCloud) != null) getCoordinatesFromThingseeCloud.stopCalculateDistance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/290/buggy-version/app.src.main.java.com.example.prototype.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "0f00e4c1584a23ef771d840b109d8d5f576dcce7", "Url": "https://api.github.com/repos/make2514/thingsee", "Date": "2017-05-09T01:07:45Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOperand()) { buf.append(ch); consume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5581/buggy-version/src.main.java.cat.udl.eps.butterp.reader.Lexer.java", "BodyUseAPI": [], "Fixed commit": "cbb2c85ea7acaaaaa2daca0857b9d440148db359", "Url": "https://api.github.com/repos/jponf/jrlisp", "Date": "2016-02-10T22:11:02Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempScore) < (hScore)) { textSize(30); text(hScore, ((scoreX) + 35), (((scoreY) + 120) + 50)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6276/buggy-version/assignmentoop.src.assignmentoop.Main.java", "BodyUseAPI": [], "Fixed commit": "6dca1573510948f9adba6a22cdad6ab1b556d55f", "Url": "https://api.github.com/repos/jriordan22849/JetPackLander", "Date": "2015-04-12T17:16:30Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.hatiolab.dx.net.PacketIO.lengthBuf.hasRemaining()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8156/buggy-version/src.com.hatiolab.dx.net.PacketIO.java", "BodyUseAPI": [], "Fixed commit": "6e7a87d9ca0b41feb6ae0e3d5fd9b595d9a5daa8", "Url": "https://api.github.com/repos/hatiolab/dx", "Date": "2015-08-06T06:44:59Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6429/buggy-version/src.main.java.com.wtsintegration.adsi.util.UserInterfaceAdapter.java", "BodyUseAPI": [], "Fixed commit": "b67e8d7a789f5072d1ee3cce7c4fa6441114c862", "Url": "https://api.github.com/repos/WTS-I/ADSI", "Date": "2015-06-30T21:29:39Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((presentationRow) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6429/buggy-version/src.main.java.com.wtsintegration.adsi.model.PresentationDataRow.java", "BodyUseAPI": [], "Fixed commit": "b67e8d7a789f5072d1ee3cce7c4fa6441114c862", "Url": "https://api.github.com/repos/WTS-I/ADSI", "Date": "2015-06-30T21:29:39Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bitsPerSample != 8) { raster = java.awt.image.Raster.createPackedRaster(db, imageWidth, imageHeight, bitsPerSample, null); }else { int[] off = new int[]{ 0 }; raster = java.awt.image.Raster.createInterleavedRaster(db, imageWidth, imageHeight, imageWidth, 1, off, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3541/buggy-version/src.cafe.image.reader.TIFFReader.java", "BodyUseAPI": ["java.awt.image.Raster.createPackedRaster(java.awt.image.DataBuffer,int,int,int,<nulltype>)"], "Fixed commit": "4be53dab3ec5a2e670fc396992be1537b6752b32", "Url": "https://api.github.com/repos/dragon66/icafe", "Date": "2014-10-11T20:44:18Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(data.isNull(\"location\"))) { ((org.openstreetmap.josm.plugins.mapillary.MapillaryImage) (image)).setLocation(data.getString(\"location\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/768/buggy-version/src.org.openstreetmap.josm.plugins.mapillary.io.download.MapillaryImageInfoDownloadThread.java", "BodyUseAPI": ["org.openstreetmap.josm.plugins.mapillary.MapillaryAbstractImage.setLocation(data.getString(\"location\"))", "javax.json.JsonObject.getString(java.lang.String)"], "Fixed commit": "12a008922cd49e56dc247deca28a56092d5e94f0", "Url": "https://api.github.com/repos/floscher/josm-mapillary-plugin", "Date": "2016-07-31T10:46:45Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.radurazvannesiu.flagger.RandomNumberGenerator.indexForQuestionIdsSet) == (NR_OF_QUESTION_IDS_IN_SET)) { resetQuestionIdGenerator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5486/buggy-version/app.src.main.java.com.example.radurazvannesiu.flagger.RandomNumberGenerator.java", "BodyUseAPI": [], "Fixed commit": "099631dbc5008c6c2e26589cc408ecbf28554138", "Url": "https://api.github.com/repos/razvannesiu/Flagger", "Date": "2016-12-21T22:39:22Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flags.length()) == 0) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4086/buggy-version/src.main.java.zhenghui.jvm.parse.BaseInfoParse.java", "BodyUseAPI": [], "Fixed commit": "f4449a76ca155a120f04160f701105cb4d9c8857", "Url": "https://api.github.com/repos/zhenghui/jvm-tool", "Date": "2013-01-23T07:48:16Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.davidmadethis.quicksend.fragments.HomeFragment.dataEmail) != null) { fab.performClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8533/buggy-version/app.src.main.java.com.davidmadethis.quicksend.fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "e6fd8943e7bbef2ff40522e2f3a9e56b9029adc2", "Url": "https://api.github.com/repos/othreecodes/Quicksend", "Date": "2017-05-13T02:03:37Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_selectedContactPosition) > 0) { (_selectedContactPosition)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2098/buggy-version/app.src.main.java.com.gum.dlt.groupuniquemessaging.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0e59e9d6f078d91c2d71899b5488f3d7a8b52cb5", "Url": "https://api.github.com/repos/squigglemufkinz/GroupUniqueMessaging", "Date": "2017-12-08T05:43:55Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((temp.getValue()) > 0) { return temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3220/buggy-version/Trie.java", "BodyUseAPI": [], "Fixed commit": "63d9cef46d7c36b70fb2ddd5190fdb2342010458", "Url": "https://api.github.com/repos/daronb83/spl-chk", "Date": "2017-09-16T21:31:04Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defaultColumnsIfNull == null) { android.content.ContentValues contentValues = listContentValues.get(0); java.util.Set<java.lang.String> keys = by.istin.android.xcore.utils.ContentUtils.getKeys(contentValues); columns = new java.lang.String[keys.size()]; columns = keys.toArray(columns); }else { columns = defaultColumnsIfNull; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7307/buggy-version/xcore-library.xcore.src.main.java.by.istin.android.xcore.utils.ContentUtils.java", "BodyUseAPI": [], "Fixed commit": "fd9510143c8252e7d6d04beba08f542e8f85d91a", "Url": "https://api.github.com/repos/IstiN/android_xcore", "Date": "2015-04-15T22:11:31Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (extra)) && ((extra.length()) > 0)) { headers.put(RocketMQSourceConstant.EXTRA, extra); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5220/buggy-version/rocketmq-flume-source.src.main.java.com.ndpmedia.flume.source.rocketmq.RocketMQSource.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(RocketMQSourceConstant.EXTRA,java.lang.String)"], "Fixed commit": "178e04c90d32e15c285fc94cc2cce3881d968250", "Url": "https://api.github.com/repos/NDPMediaCorp/RocketMQ-Flume", "Date": "2016-02-02T10:13:44Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((from.getPerformanceParams()) != null) { to.setPerformanceParams(com.emc.storageos.api.mapper.DbObjectMapper.toRelatedResource(ResourceTypeEnum.BLOCK_PERFORMANCE_PARAMS, from.getPerformanceParams())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3766/buggy-version/apisvc.src.main.java.com.emc.storageos.api.mapper.BlockMapper.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.Volume.getPerformanceParams()", "com.emc.storageos.model.block.VolumeRestRep.setPerformanceParams(com.emc.storageos.api.mapper.DbObjectMapper.toRelatedResource(ResourceTypeEnum.BLOCK_PERFORMANCE_PARAMS, from.getPerformanceParams()))", "com.emc.storageos.api.mapper.DbObjectMapper.toRelatedResource(ResourceTypeEnum.BLOCK_PERFORMANCE_PARAMS,from.getPerformanceParams())"], "Fixed commit": "654154f98557546034deb93ba5a7260b29352745", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-05-02T17:29:17Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(result))) { this.adapter.addAll(result.split(\"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8312/buggy-version/src.my.home.asynctask.TypeListAsyncTask.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "android.widget.ArrayAdapter<java.lang.String>.addAll(java.lang.String[])"], "Fixed commit": "27c56c22364332d8a46021d7c30743714774952a", "Url": "https://api.github.com/repos/legendmohe/QQFM_Android", "Date": "2014-04-25T13:40:31Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((population.size()) >= (app.musicplayer.lcs.LCSAgent.MAX_POPULATION_SIZE)) { resizePopulation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8284/buggy-version/src.app.musicplayer.lcs.LCSAgent.java", "BodyUseAPI": [], "Fixed commit": "668e002449a82838a584c0a80674c3dfb0d22ead", "Url": "https://api.github.com/repos/wizzfizz94/MusicPlayer", "Date": "2016-11-01T02:46:08Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPrevTouch) == null) { mPrevTouch = new android.graphics.PointF(ev.getX(), ev.getY()); }else { moveLogo(((ev.getX()) - (mPrevTouch.x)), ((ev.getY()) - (mPrevTouch.y))); mPrevTouch.set(ev.getX(), ev.getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/636/buggy-version/src.com.additt.custom_views.LogoView.java", "BodyUseAPI": [], "Fixed commit": "495ae50fdde86e36d792364c7b01f76c186e828f", "Url": "https://api.github.com/repos/elihart/maple-android", "Date": "2013-05-18T01:20:32Z"},
{"Line": "=>1440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.ednovo.gooru.client.gin.AppClientFactory.isAnonymous())) { UnFollowButton.setVisible(false); followButton.setVisible(false); getUiHandlers().unFollowUser(org.ednovo.gooru.client.gin.AppClientFactory.getPlaceManager().getRequestParameter(\"id\", null)); }else { org.ednovo.gooru.client.mvp.home.LoginPopupUc popup = new org.ednovo.gooru.client.mvp.home.LoginPopupUc(); popup.show(); popup.setGlassEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2782/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.profilepage.ProfilePageView.java", "BodyUseAPI": [], "Fixed commit": "4ffd1a304f3620420b2cde3693defaf642e72152", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2014-06-16T13:55:47Z"},
{"Line": "=>1427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.ednovo.gooru.client.gin.AppClientFactory.isAnonymous())) { UnFollowButton.setVisible(false); followButton.setVisible(false); getUiHandlers().followUser(org.ednovo.gooru.client.gin.AppClientFactory.getPlaceManager().getRequestParameter(\"id\", null)); }else { org.ednovo.gooru.client.mvp.home.LoginPopupUc popup = new org.ednovo.gooru.client.mvp.home.LoginPopupUc(); popup.show(); popup.setGlassEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2782/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.profilepage.ProfilePageView.java", "BodyUseAPI": [], "Fixed commit": "4ffd1a304f3620420b2cde3693defaf642e72152", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2014-06-16T13:55:47Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(getContext(), Manifest.permission.VIBRATE)) == (android.support.v4.content.PermissionChecker.PERMISSION_GRANTED)) { android.os.Vibrator v = ((android.os.Vibrator) (getContext().getSystemService(Context.VIBRATOR_SERVICE))); v.vibrate(10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6974/buggy-version/library.multichoicerecyclerview.src.main.java.com.davidecirillo.multichoicerecyclerview.MultiChoiceRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "baf43789fea88e212c1f82ce58a9c7605ba36647", "Url": "https://api.github.com/repos/dvdciri/MultiChoiceRecyclerView", "Date": "2016-11-24T22:49:22Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fullySpecifiedComparisonVersion.toString().trim().equals(partialWildcardSemverContext.getText().trim())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5691/buggy-version/src.main.java.com.github.gundy.semver4j.visitor.SemVerRangeExpressionVisitor.java", "BodyUseAPI": [], "Fixed commit": "6042791562c3c061a1b0dacf88cbc39d57b6b115", "Url": "https://api.github.com/repos/gundy/semver4j", "Date": "2016-07-27T13:43:06Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeTable) != null) { region = com.appsomehow.ramadan.utilities.UIUtils.getSelectedLocation(regions, preferenceHelper.getString(Constants.PREF_KEY_LOCATION, \"Dhaka\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3873/buggy-version/Ramadan.src.main.java.com.appsomehow.ramadan.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b78248471f520195fbe5fd024e77286eb4c21977", "Url": "https://api.github.com/repos/AppSomeHow/Ramadan", "Date": "2014-06-05T07:24:48Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mondo.token.ITokenizer.getPreviousNotBlank()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((previous != null) && ((previous.getOriginalText()) == \".\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7338/buggy-version/src.java.mondo.token.SymbolToken.java", "BodyUseAPI": [], "Fixed commit": "755a44f73416859762be803e9c7959c723a74ab8", "Url": "https://api.github.com/repos/oprogramador/plezuro_js", "Date": "2015-11-17T13:24:13Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pattern.substring(loc).startsWith(\"get\")) { java.lang.String setter = ((pattern.substring(0, loc)) + \"set\") + (pattern.substring((loc + 3))); org.eclipse.jdt.core.search.SearchPattern getterPattern = createPattern(pattern, com.redhat.ceylon.eclipse.util.METHOD, limitTo, com.redhat.ceylon.eclipse.util.R_EXACT_MATCH); org.eclipse.jdt.core.search.SearchPattern setterPattern = createPattern(setter, com.redhat.ceylon.eclipse.util.METHOD, limitTo, com.redhat.ceylon.eclipse.util.R_EXACT_MATCH); switch (limitTo) { case org.eclipse.jdt.core.search.IJavaSearchConstants.WRITE_ACCESSES : return setterPattern; case org.eclipse.jdt.core.search.IJavaSearchConstants.READ_ACCESSES : return getterPattern; default : return createOrPattern(getterPattern, setterPattern); } }else { org.eclipse.jdt.core.search.SearchPattern fieldPattern = createPattern(pattern, IJavaSearchConstants.FIELD, limitTo, com.redhat.ceylon.eclipse.util.R_EXACT_MATCH); return fieldPattern; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/566/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.util.JavaSearch.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)", "com.redhat.ceylon.eclipse.util.JavaSearch.createPattern(java.lang.String,IJavaSearchConstants.FIELD,int,com.redhat.ceylon.eclipse.util.R_EXACT_MATCH)", "com.redhat.ceylon.eclipse.util.JavaSearch.createPattern(java.lang.String,com.redhat.ceylon.eclipse.util.METHOD,int,com.redhat.ceylon.eclipse.util.R_EXACT_MATCH)"], "Fixed commit": "27d158415d1db890d517494b11fcd67ede604d7d", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2015-03-07T23:02:52Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.widgets.Composite.eContainer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((rootSwitchYard != null) && ((rootSwitchYard.getName()) != null)) { this._contextPathText.setText(rootSwitchYard.getName()); }else { this._contextPathText.setText(composite.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4032/buggy-version/eclipse.plugins.org.switchyard.tools.ui.editor.src.org.switchyard.tools.ui.editor.components.soap.SOAPBindingComposite.java", "BodyUseAPI": ["org.switchyard.tools.models.switchyard1_0.switchyard.SwitchYardType.getName()", "org.eclipse.swt.widgets.Text.setText(rootSwitchYard.getName())"], "Fixed commit": "650eb76fcacedd87dd58eb3795d7650a37a1c157", "Url": "https://api.github.com/repos/pleacu/tools", "Date": "2012-12-06T18:59:15Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.io.esi.AbstractEsiGetter.updateApi(net.nikr.eve.jeveasset.io.esi.AbstractEsiGetter.EsiPageUpdater<K>,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (returnValue != null) { values.addAll(returnValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6392/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.esi.AbstractEsiGetter.java", "BodyUseAPI": ["java.util.List<K>.addAll(java.util.List<K>)"], "Fixed commit": "0d366aeb37f2922190a5c057ec84798640158dd0", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-13T06:09:59Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (folder.packageJsonExists()) { packages.add(new com.blackducksoftware.integration.hub.detect.bomtool.npm.NpmPackageFolder(file)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6278/buggy-version/src.main.groovy.com.blackducksoftware.integration.hub.detect.bomtool.npm.NpmPackageFolder.java", "BodyUseAPI": [], "Fixed commit": "6022ad653296eb85b95ec62a53a54a53790a011f", "Url": "https://api.github.com/repos/blackducksoftware/hub-detect", "Date": "2017-10-12T21:25:52Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firstItem) != null) firstItem.setPreviousItem(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1370/buggy-version/e7.DoubleLinkedList.java", "BodyUseAPI": [], "Fixed commit": "ea3bbc323763dca0503e74303b4bfc540587e648", "Url": "https://api.github.com/repos/BBK-PiJ-2014-85/exercises", "Date": "2015-01-06T21:04:42Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((extendsKeyword.length()) == 0) { extendsKeyword.append(\"extends bb.runtime.BaseBBTemplate\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4973/buggy-version/src.main.java.bb.tokenizer.ETemplateGen.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "ba6e321e4d4c544a93dbf054c1688d55d188e1a2", "Url": "https://api.github.com/repos/carsongross/barbarossa-templates", "Date": "2017-06-29T00:18:10Z"},
{"Line": "=>1517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(type.validate(done))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2/buggy-version/plugins.org.eclipse.tcf.debug.ui.src.org.eclipse.tcf.internal.debug.ui.model.TCFNodeExpression.java", "BodyUseAPI": [], "Fixed commit": "44e45f73f2a5bd1d3295f903bcb5a7ff8c0b03c0", "Url": "https://api.github.com/repos/eclipse/tcf", "Date": "2014-10-31T23:15:12Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mobName == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2399/buggy-version/src.projectzulu.common.API.CustomEntityList.java", "BodyUseAPI": [], "Fixed commit": "47101c39763f0b16bb2bde10052411625dd480fd", "Url": "https://api.github.com/repos/ProjectZulu/Project-Zulu", "Date": "2013-06-16T16:53:28Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.getRegion().getWorld()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4315/buggy-version/src.io.github.yannici.bedwars.Game.GameManager.java", "BodyUseAPI": [], "Fixed commit": "f7a31aa9c1fc51e13a00497b95f1cfea91075c62", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-05-07T20:33:22Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.getRegion()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4315/buggy-version/src.io.github.yannici.bedwars.Game.GameManager.java", "BodyUseAPI": [], "Fixed commit": "f7a31aa9c1fc51e13a00497b95f1cfea91075c62", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-05-07T20:33:22Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rc.canBuildRobot(RobotType.GARDENER, battlecode.common.Direction.getWest())) rc.buildRobot(RobotType.GARDENER, battlecode.common.Direction.getWest()); else if (rc.canBuildRobot(RobotType.GARDENER, battlecode.common.Direction.getNorth())) rc.buildRobot(RobotType.GARDENER, battlecode.common.Direction.getNorth()); else if (rc.canBuildRobot(RobotType.GARDENER, battlecode.common.Direction.getSouth())) rc.buildRobot(RobotType.GARDENER, battlecode.common.Direction.getSouth()); else if (rc.canBuildRobot(RobotType.GARDENER, battlecode.common.Direction.getEast())) rc.buildRobot(RobotType.GARDENER, battlecode.common.Direction.getEast());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6338/buggy-version/src.stars.RobotPlayer.java", "BodyUseAPI": ["battlecode.common.RobotController.canBuildRobot(RobotType.GARDENER,battlecode.common.Direction.getSouth())", "battlecode.common.RobotController.canBuildRobot(RobotType.GARDENER,battlecode.common.Direction.getEast())", "battlecode.common.RobotController.buildRobot(RobotType.GARDENER,battlecode.common.Direction.getEast())", "battlecode.common.RobotController.buildRobot(RobotType.GARDENER,battlecode.common.Direction.getSouth())", "battlecode.common.RobotController.buildRobot(RobotType.GARDENER,battlecode.common.Direction.getNorth())", "battlecode.common.RobotController.buildRobot(RobotType.GARDENER,battlecode.common.Direction.getWest())", "battlecode.common.RobotController.canBuildRobot(RobotType.GARDENER,battlecode.common.Direction.getNorth())"], "Fixed commit": "a087c1ea190a5e9c2989c119c0ab8900195adbab", "Url": "https://api.github.com/repos/kevin-who/starcraft", "Date": "2017-01-14T00:26:16Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectTree.toLowerCase().matches(\"(.*)count\\\\((.*)\")) { java.lang.System.out.println(selectTree); selectTree = selectTree.replaceAll(\"count\\\\(\", \"sum\\\\(\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7472/buggy-version/lens-driver-jdbc.src.main.java.org.apache.lens.driver.jdbc.ColumnarSQLRewriter.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "f942e4bda405eec59214982836696aadfda79661", "Url": "https://api.github.com/repos/InMobi/grill", "Date": "2014-11-26T11:07:48Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (commonUniprotEntry != null) { colMP.setTaxonomyNode(commonUniprotEntry.getTaxonomyNode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3204/buggy-version/src.de.mpa.client.model.dbsearch.MetaProteinFactory.java", "BodyUseAPI": ["de.mpa.client.model.dbsearch.MetaProteinHit.setTaxonomyNode(commonUniprotEntry.getTaxonomyNode())", "de.mpa.client.model.dbsearch.UniProtEntryMPA.getTaxonomyNode()"], "Fixed commit": "042df4a63498077bed5a0abd7d3cdc55ab7f46d3", "Url": "https://api.github.com/repos/compomics/meta-proteome-analyzer", "Date": "2016-12-05T09:07:06Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startIp.equals(endIp)) && ((allocatedIps.length) == 0)) { return startIp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2290/buggy-version/utils.src.main.java.org.zstack.utils.network.NetworkUtils.java", "BodyUseAPI": [], "Fixed commit": "56584a64fb7e978fcc688b2797a3685bedbcdad3", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-11T07:55:56Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((startIp.equals(endIp)) && ((allocatedIps.size()) == 0)) { return org.zstack.utils.network.NetworkUtils.longToIpv4String(startIp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2290/buggy-version/utils.src.main.java.org.zstack.utils.network.NetworkUtils.java", "BodyUseAPI": ["org.zstack.utils.network.NetworkUtils.longToIpv4String(java.lang.Long)"], "Fixed commit": "56584a64fb7e978fcc688b2797a3685bedbcdad3", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-11T07:55:56Z"},
{"Line": "=>888", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.sintactico.existeVariable(val_peek(1))) { if (this.sintactico.ambitoCorrecto(val_peek(3), val_peek(1))) { if ((this.sintactico.mismoTipo(val_peek(3), val_peek(1))) != null) { Tercetos.Terceto t = new Tercetos.TercetoAsignacion(val_peek(3), val_peek(1), this.sintactico.getTercetos().size()); yyval = new compilador.ParserVal(t); this.sintactico.addTerceto(t); }else { this.sintactico.addError(\"tipos\", val_peek(3)); } }else { this.sintactico.addError(\"ambito\", val_peek(1)); } }else { this.sintactico.addError(\"variable\", val_peek(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9010/buggy-version/src.compilador.Parser.java", "BodyUseAPI": ["compilador.Sintactico.addError(java.lang.String,compilador.ParserVal)", "compilador.Sintactico.ambitoCorrecto(compilador.ParserVal,compilador.ParserVal)", "compilador.Sintactico.addTerceto(Tercetos.Terceto)", "this.sintactico.getTercetos().size()", "compilador.Sintactico.addError(java.lang.String,compilador.ParserVal)", "compilador.Sintactico.mismoTipo(compilador.ParserVal,compilador.ParserVal)", "compilador.Sintactico.getTercetos()", "compilador.Sintactico.addError(java.lang.String,compilador.ParserVal)"], "Fixed commit": "14404d864976c35be92175d5418114092d16062a", "Url": "https://api.github.com/repos/MuroSar/Compiladores", "Date": "2017-11-22T20:34:05Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!matched) { if (!(target.equals(Property.AllValue))) { matched = org.beangle.commons.collection.CollectUtils.newHashSet(org.beangle.commons.lang.Strings.split(source, \",\")).containsAll(org.beangle.commons.collection.CollectUtils.newHashSet(org.beangle.commons.lang.Strings.split(target, \",\"))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6749/buggy-version/security.blueprint.src.main.java.org.beangle.security.blueprint.model.UserProfileBean.java", "BodyUseAPI": [], "Fixed commit": "f0344b3bdbb41e99e6404ce945b30c6481f54bc9", "Url": "https://api.github.com/repos/beangle/library", "Date": "2013-11-27T07:58:44Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["datumTokenSpans[i].getDocument()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(document.hasAnnotationType(AnnotationTypeNLPCat.FACC1))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1171/buggy-version/src.main.java.edu.cmu.ml.rtw.micro.cat.model.evaluation.metric.SupervisedModelEvaluationCategoryListFreebase.java", "BodyUseAPI": [], "Fixed commit": "65a31962a1e9b8d2fbbe002cf611a6c298ee35d8", "Url": "https://api.github.com/repos/cmunell/micro-cat", "Date": "2015-05-18T17:21:46Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (traceAndSuccessors.getValue().isEmpty()) { newTracesAndTheirSuccessors.put(traceAndSuccessors.getKey(), traceAndSuccessors.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3853/buggy-version/src.main.java.de.uni_potsdam.hpi.bpt.bp2014.conversion.converter.activity_centric.ActivityCentricToSynchronizedOLC.java", "BodyUseAPI": ["java.util.Map<java.util.List<de.uni_potsdam.hpi.bpt.bp2014.conversion.INode>, java.util.Collection<java.util.List<de.uni_potsdam.hpi.bpt.bp2014.conversion.INode>>>.put(traceAndSuccessors.getKey(),traceAndSuccessors.getValue())", "java.util.Map.Entry<java.util.List<de.uni_potsdam.hpi.bpt.bp2014.conversion.INode>, java.util.Collection<java.util.List<de.uni_potsdam.hpi.bpt.bp2014.conversion.INode>>>.getKey()", "java.util.Map.Entry<java.util.List<de.uni_potsdam.hpi.bpt.bp2014.conversion.INode>, java.util.Collection<java.util.List<de.uni_potsdam.hpi.bpt.bp2014.conversion.INode>>>.getValue()"], "Fixed commit": "f9d416af34c1c97eaab5121926fe9ea7acdfe650", "Url": "https://api.github.com/repos/BP2014W1/BPMConverter", "Date": "2015-05-10T21:28:26Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (genre.equals(\"--Choose your Genres--\")) { genre = \"All Genres\"; android.util.Log.e(\"Default\", \"changed to All genres\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/260/buggy-version/java.com.example.alexthomas.myapplication.randomQuote.java", "BodyUseAPI": [], "Fixed commit": "88dc717b90aa29e664eba191335a723cfa7fc6ae", "Url": "https://api.github.com/repos/kevindhu/getwoke", "Date": "2017-01-06T05:51:55Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.grayzlp.ggithub.data.model.repo.Starred>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(starred.language))) { viewHolder.tag.setVisibility(View.VISIBLE); viewHolder.tag.setText(starred.language); }else { viewHolder.tag.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1911/buggy-version/app.src.main.java.com.grayzlp.ggithub.core.module.star.StarAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(starred.language)"], "Fixed commit": "968df9b1cf286f4c3558378b203f9fd0e1d6b740", "Url": "https://api.github.com/repos/grayzlp/GGithub", "Date": "2017-12-03T14:14:07Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.overlord.sramp.common.ArtifactType.valueOf(java.lang.String,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (artifactType.isExtendedType()) { artifactType = org.overlord.sramp.common.ArtifactType.ExtendedDocument(artifactType.getExtendedType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2804/buggy-version/s-ramp-server.src.main.java.org.overlord.sramp.server.atom.services.ArtifactResource.java", "BodyUseAPI": ["org.overlord.sramp.common.ArtifactType.getExtendedType()", "org.overlord.sramp.common.ArtifactType.ExtendedDocument(artifactType.getExtendedType())"], "Fixed commit": "1678e3910f1d231379b4fab432bf95d2867863b4", "Url": "https://api.github.com/repos/dvirgiln/s-ramp", "Date": "2014-04-01T01:27:21Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jinjiang.hotel.service.ExpoService.getHotels(com.jinjiang.hotel.domain.Expo)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (hotels2 != null) all.removeAll(hotels2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3753/buggy-version/src.com.jinjiang.hotel.mvvm.admin.ExpoDetailsVM.java", "BodyUseAPI": ["java.util.List<com.jinjiang.hotel.domain.Hotel>.removeAll(java.util.List<com.jinjiang.hotel.domain.Hotel>)"], "Fixed commit": "31eafdf19cf3116cb97439541097ff84977edc9c", "Url": "https://api.github.com/repos/davidgjm/hotelbooking", "Date": "2015-12-19T01:16:41Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((notification.getBody()) != null) { viewComponent.setAmbientColor(notification.getBody()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1005/buggy-version/overlap2d.src.com.uwsoft.editor.view.ui.properties.panels.UIScenePropertiesMediator.java", "BodyUseAPI": ["com.uwsoft.editor.view.ui.properties.panels.UIScenePropertiesMediator.setAmbientColor(notification.getBody())", "com.puremvc.patterns.observer.Notification.getBody()"], "Fixed commit": "5efe80be40d7eb29f2e692d75d7847a0de5752e0", "Url": "https://api.github.com/repos/simoarpe/overlap2d", "Date": "2016-11-21T19:12:58Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cohenadair.anglerslog.model.Logbook.getBaitCategory(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (baitCategory == null) { com.cohenadair.anglerslog.model.Logbook.addBaitCategory(new com.cohenadair.anglerslog.model.user_defines.BaitCategory(\"Lure\")); baitCategory = com.cohenadair.anglerslog.model.Logbook.getBaitCategory(\"Lure\"); if (baitCategory == null) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4350/buggy-version/android.app.src.main.java.com.cohenadair.anglerslog.model.Logbook.java", "BodyUseAPI": [], "Fixed commit": "f6629991347aa8e0230664991c8f22fc3d6f4442", "Url": "https://api.github.com/repos/cohenadair/anglers-log", "Date": "2016-09-27T00:57:36Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tModel.getColumnClass((i++))) != (java.lang.Boolean.class)) { table.getColumn(columnname).setCellRenderer(new gui.models.tablemodels.MyTableCellRenderer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5359/buggy-version/src.gui.buchungszeilen.RechnungenDialog.java", "BodyUseAPI": [], "Fixed commit": "20a11ad6b29bf84e9bfe672ac553cba1cfa28836", "Url": "https://api.github.com/repos/magicpat/BackOffice", "Date": "2012-04-14T14:16:29Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this._timeLabel.getText().trim().isEmpty()) { this._nameLabel.setTranslateY(8.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7493/buggy-version/src.main.java.ui.view.TaskListItem.java", "BodyUseAPI": [], "Fixed commit": "69a8c7c1bf93cb4ad725b9eb3564614d91de1a06", "Url": "https://api.github.com/repos/cs2103jan2016-f13-4j/main", "Date": "2016-04-11T15:41:15Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.martiansoftware.jsap.JSAPResult.getFile(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (out == null) { java.lang.System.err.println(\"--watch requires an output file\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8798/buggy-version/src.com.silentmatt.dss.Main.java", "BodyUseAPI": [], "Fixed commit": "b92607e8026a9c175578ff86327e5a2efa32dd0f", "Url": "https://api.github.com/repos/silentmatt/dss", "Date": "2015-02-04T04:38:16Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ffenergy.getParams().params.solvationForcefield) != (edu.duke.cs.osprey.energy.forcefield.ForcefieldParams.SolvationForcefield.EEF1)) { throw new java.lang.UnsupportedOperationException(\"Configurable solvation forcefields not yet supported on GPUs\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3402/buggy-version/src.edu.duke.cs.osprey.gpu.cuda.kernels.ForcefieldKernelCuda.java", "BodyUseAPI": [], "Fixed commit": "6582f85549f86fc582974c74bc3f9d1adca9cabb", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2017-02-21T20:06:01Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ffenergy.getParams().params.solvationForcefield) != (edu.duke.cs.osprey.energy.forcefield.ForcefieldParams.SolvationForcefield.EEF1)) { throw new java.lang.UnsupportedOperationException(\"Configurable solvation forcefields not yet supported on GPUs\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3402/buggy-version/src.edu.duke.cs.osprey.gpu.opencl.kernels.ForcefieldKernelOpenCL.java", "BodyUseAPI": [], "Fixed commit": "6582f85549f86fc582974c74bc3f9d1adca9cabb", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2017-02-21T20:06:01Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ffenergy.getParams().params.solvationForcefield) != (edu.duke.cs.osprey.energy.forcefield.ForcefieldParams.SolvationForcefield.EEF1)) { throw new java.lang.UnsupportedOperationException(\"Configurable solvation forcefields not yet supported on GPUs\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3402/buggy-version/src.edu.duke.cs.osprey.gpu.cuda.kernels.CCDKernelCuda.java", "BodyUseAPI": [], "Fixed commit": "6582f85549f86fc582974c74bc3f9d1adca9cabb", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2017-02-21T20:06:01Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.has(\"album_images\")) { com.google.gson.JsonArray obj = result.getAsJsonObject(\"data\").getAsJsonObject(\"image\").getAsJsonObject(\"album_images\").get(\"images\").getAsJsonArray(); if (((obj != null) && (!(obj.isJsonNull()))) && ((obj.size()) > 0)) { for (com.google.gson.JsonElement o : obj) { jsons.add(o); } doWithData(jsons); } }else if (result.get(\"data\").getAsJsonObject().has(\"image\")) { jsons.add(result.get(\"data\").getAsJsonObject().get(\"image\")); doWithData(jsons); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/297/buggy-version/app.src.main.java.me.ccrama.redditslide.util.AlbumUtils.java", "BodyUseAPI": ["result.get(\"data\").getAsJsonObject().get(java.lang.String)", "com.google.gson.JsonObject.get(java.lang.String)", "result.get(\"data\").getAsJsonObject().has(java.lang.String)", "result.getAsJsonObject(\"data\").getAsJsonObject(\"image\").getAsJsonObject(\"album_images\").get(java.lang.String)", "com.google.gson.JsonObject.getAsJsonObject(java.lang.String)", "result.getAsJsonObject(\"data\").getAsJsonObject(\"image\").getAsJsonObject(\"album_images\").get(\"images\").getAsJsonArray()", "result.getAsJsonObject(\"data\").getAsJsonObject(\"image\").getAsJsonObject(java.lang.String)", "result.getAsJsonObject(\"data\").getAsJsonObject(java.lang.String)", "com.google.gson.JsonObject.get(java.lang.String)", "result.get(\"data\").getAsJsonObject()", "result.get(\"data\").getAsJsonObject()", "java.util.ArrayList<com.google.gson.JsonElement>.add(result.get(\"data\").getAsJsonObject().get(\"image\"))"], "Fixed commit": "55675e2d53c8e4cf8a1b9160b82aa86e896e5a41", "Url": "https://api.github.com/repos/Alexendoo/Slide", "Date": "2016-02-09T06:24:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (plugin.getConfig().getBoolean(\"creation.default_world\")) { exit = !(to.getWorld().getName().equals(plugin.getConfig().getString(\"creation.default_world_name\"))); }else { exit = !(to.getWorld().getName().contains(\"TARDIS\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/113/buggy-version/src.main.java.me.eccentric_nz.TARDIS.move.TARDISMoveListener.java", "BodyUseAPI": ["to.getWorld().getName().equals(plugin.getConfig().getString(\"creation.default_world_name\"))", "plugin.getConfig().getString(java.lang.String)", "me.eccentric_nz.TARDIS.TARDIS.getConfig()"], "Fixed commit": "49c5beff135459525cba6a84af71db5681eb907c", "Url": "https://api.github.com/repos/eccentricdevotion/TARDIS", "Date": "2014-06-15T22:12:12Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) != 0) { heap[1] = lastChild; sink(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4855/buggy-version/src.main.java.com.bpham.domain.AbstractHeap.java", "BodyUseAPI": [], "Fixed commit": "7ff238291ed5ce081ce9a6a4bd3b076598319f30", "Url": "https://api.github.com/repos/bpham-work/cs_practice", "Date": "2016-03-19T22:28:59Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (payload.toString().contains(payloadParamName)) { replaceInPayload(payloadParamName, payload, payloadParamName, property.getValue()); }else { addToPayload(payload, payloadParamName, property.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1424/buggy-version/components.org.apache.stratos.cloud.controller.src.main.java.org.apache.stratos.cloud.controller.services.impl.CloudControllerServiceImpl.java", "BodyUseAPI": ["org.apache.stratos.cloud.controller.services.impl.CloudControllerServiceImpl.addToPayload(java.lang.StringBuilder,java.lang.String,property.getValue())", "org.apache.stratos.cloud.controller.services.impl.CloudControllerServiceImpl.replaceInPayload(java.lang.String,java.lang.StringBuilder,java.lang.String,property.getValue())"], "Fixed commit": "86c2e17537a71ad1b36802104c66b5814bea4c1f", "Url": "https://api.github.com/repos/Pranavan135/stratos", "Date": "2015-06-02T16:30:06Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (audioInputStream != null) audioInputStream.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1436/buggy-version/motech-cmslite-api.src.main.java.org.motechproject.cmslite.api.web.ResourceServlet.java", "BodyUseAPI": ["javax.sound.sampled.AudioInputStream.close()"], "Fixed commit": "f618aaa982d49cea5c4e8c8505c0c551d6293e11", "Url": "https://api.github.com/repos/motech/motech", "Date": "2011-09-16T04:58:42Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((platform.body.getLinearVelocity().y) == 0) { player.position.y = ((platform.position.y) - (player.bounds.height)) - 0.001F; }else if ((platform.body.getLinearVelocity().y) < 0) { player.position.y = ((platform.position.y) - (player.bounds.height)) - 0.1F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8637/buggy-version/core.src.com.douge.gdx.game.playerstate.JumpRisingState.java", "BodyUseAPI": ["platform.body.getLinearVelocity()"], "Fixed commit": "7f83c0339df0e570e756db9762c6991112e1e5ad", "Url": "https://api.github.com/repos/emmdouge/GemHunter", "Date": "2016-11-10T16:01:22Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((platform.body.getLinearVelocity().y) == 0) { player.position.y = ((platform.position.y) - (player.bounds.height)) - 0.001F; }else if ((platform.body.getLinearVelocity().y) < 0) { player.position.y = ((platform.position.y) - (player.bounds.height)) - 0.1F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8637/buggy-version/core.src.com.douge.gdx.game.playerstate.FallingState.java", "BodyUseAPI": ["platform.body.getLinearVelocity()"], "Fixed commit": "7f83c0339df0e570e756db9762c6991112e1e5ad", "Url": "https://api.github.com/repos/emmdouge/GemHunter", "Date": "2016-11-10T16:01:22Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((platform.body.getLinearVelocity().y) == 0) { player.position.y = ((platform.position.y) - (player.bounds.height)) - 0.001F; }else if ((platform.body.getLinearVelocity().y) < 0) { player.position.y = ((platform.position.y) - (player.bounds.height)) - 0.1F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8637/buggy-version/core.src.com.douge.gdx.game.playerstate.JumpFallingState.java", "BodyUseAPI": ["platform.body.getLinearVelocity()"], "Fixed commit": "7f83c0339df0e570e756db9762c6991112e1e5ad", "Url": "https://api.github.com/repos/emmdouge/GemHunter", "Date": "2016-11-10T16:01:22Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ast.visitor.CyclicDependencyChecker<T>.getAllDependencies(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dependencies == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7271/buggy-version/wstikkelorum.src.ast.visitor.CyclicDependencyChecker.java", "BodyUseAPI": [], "Fixed commit": "36246592738b29bb80afd4905eb7529dda1b29ff", "Url": "https://api.github.com/repos/software-engineering-amsterdam/multi-ql", "Date": "2016-03-03T10:31:42Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (label.equalsIgnoreCase(\"musee\")) { fixedFormatString = \"MuSee\"; }else if (label.equalsIgnoreCase(\"Kwakawaka'Wakw House\")) { fixedFormatString = \"Kwakawaka'Wakw House\"; }else { java.lang.String[] parts = label.split(\" \"); fixedFormatString = \"\"; for (int i = 0; i < (parts.length); i++) { java.lang.String first = \"\" + (parts[i].charAt(0)); fixedFormatString += (\" \" + (first.toUpperCase())) + (parts[i].substring(1).toLowerCase()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/222/buggy-version/app.src.main.java.edu.uw.prathh.musee.info.FavoritesActivity.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "cf654b693d9efcd15779a0bb5a57661843db7ff5", "Url": "https://api.github.com/repos/HillaryP/MuSee", "Date": "2015-06-04T05:19:08Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.nbt.NBTTagCompound.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (n.isEmpty()) latmod.latblocks.item.InvUtils.removeDisplayName(is); else is.setStackDisplayName(n);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4347/buggy-version/src.main.java.latmod.latblocks.item.ItemQuartzBag.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.setStackDisplayName(java.lang.String)"], "Fixed commit": "fec4d12053cc4160b425369e211b7b8cc8e18c85", "Url": "https://api.github.com/repos/LatvianModder/LatBlocks", "Date": "2015-07-16T21:56:46Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fifth == 0) { score.addPenalty(PenaltyType.OMITTED_FIFTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4768/buggy-version/src.scorer.Doubling.java", "BodyUseAPI": [], "Fixed commit": "bc38d8168a652ca08ddd9d154805101b4e2aaa3a", "Url": "https://api.github.com/repos/bricehuang/voiceLeadingSolver", "Date": "2016-12-25T04:44:50Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (props != null) { if (props.containsKey(\"MDWSUserId\")) { java.lang.String propPass = props.getProperty(\"MDWSUserId\"); if ((propPass.compareTo(serviceInstance.userId)) != 0) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8143/buggy-version/src.main.java.org.socraticgrid.mdwslib.GetNhinDataSource.java", "BodyUseAPI": ["java.util.Properties.containsKey(java.lang.String)", "java.util.Properties.getProperty(java.lang.String)"], "Fixed commit": "de9a8f899086484588bda75af289c4e6e721561b", "Url": "https://api.github.com/repos/SocraticGrid/MDWSLib", "Date": "2013-07-08T21:24:16Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configurationManager) != null) { configurationManager.setConfiguration(c); configurationManager.read(); }else { configurationManager = de.ovgu.featureide.fm.core.io.manager.ConfigurationManager.getInstance(c, file.getLocation().toOSString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5808/buggy-version/plugins.de.ovgu.featureide.fm.ui.src.de.ovgu.featureide.fm.ui.editors.configuration.ConfigurationEditor.java", "BodyUseAPI": [], "Fixed commit": "2e02b85f75b63b929927fe0026328f646733c403", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-01-27T12:34:27Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pPalette.get(subject.getName()).get(subject.getInventory().getHeldItemSlot())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((bTarget.getType()) == (set.getItemType())) && ((bTarget.getData()) == (set.getData()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9216/buggy-version/src.com.github.peter200lx.toolbelt.tool.Paint.java", "BodyUseAPI": [], "Fixed commit": "5f691360ff3541077a9af76a69ec07e9e4461e99", "Url": "https://api.github.com/repos/Peter200lx/ToolBelt", "Date": "2012-04-16T02:43:37Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(zoom)) { mMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(latLng, 18)); zoom = true; }else { mMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLng(latLng)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5002/buggy-version/app.src.main.java.at.fhooe.mc.android.fragment_car.java", "BodyUseAPI": [], "Fixed commit": "f220601d4485c36fd94ea5725988f0d3ac343e55", "Url": "https://api.github.com/repos/jordanpichler/WhereDidIPark", "Date": "2016-06-15T15:16:15Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getY()) < ((PortalConstants.PROFILE_BAR_HEIGHT) / 2)) java.lang.System.exit(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2492/buggy-version/src.fileportal.gui.ProfileBar.java", "BodyUseAPI": [], "Fixed commit": "c479af5b9ab260ba5f82f4ad7cbbd41618df4b9d", "Url": "https://api.github.com/repos/pfrommerd/fileportal", "Date": "2015-02-20T18:02:14Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strKey.equals(\"puffPointer\")) { objIntercepter.broadcast(this.outbound, \"puffPointer\", message); }else { if (com.glines.socketio.sample.pointers.PointersShareServlet.LOGGER.isLoggable(java.util.logging.Level.FINE)) com.glines.socketio.sample.pointers.PointersShareServlet.LOGGER.log(java.util.logging.Level.FINE, (((this) + \"cannot parse with gson: \") + message)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1558/buggy-version/samples.pointers.src.main.java.com.glines.socketio.sample.pointers.PointersShareServlet.java", "BodyUseAPI": [], "Fixed commit": "721ae3fa9608c6eb0e2602de08c23cdea8fe2532", "Url": "https://api.github.com/repos/tf0054/Socket.IO-Java", "Date": "2012-10-20T15:44:30Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(unpackedExportDirectory.exists())) { unpackedExportDirectory.mkdir(); unpackedExportDirectory.setWritable(true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8159/buggy-version/app.integration.ae-integration.src.main.java.uk.ac.ebi.fg.annotare2.integration.AeIntegrationWatchdog.java", "BodyUseAPI": ["java.io.File.mkdir()", "java.io.File.setWritable(boolean,boolean)"], "Fixed commit": "d9f20ba4620655a65ed944e2289d629b927e6c3b", "Url": "https://api.github.com/repos/arrayexpress/annotare2", "Date": "2017-07-12T11:38:16Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCommand(args, r, \"settings\", \"dump\")) { org.reflections.Reflections reflections = new org.reflections.Reflections(\"viggo.omniscient\"); plugin.logger.logInfo(((plugin.settings.maximumUnknownBlocksToProcessPerTick) + \"\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6987/buggy-version/src.main.java.viggo.omniscient.CommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "288919970fd45b2b23d0be103c8e451e8c52cd41", "Url": "https://api.github.com/repos/cviggo/omniscient", "Date": "2014-05-02T22:46:01Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((userCommandString.length) == 1) { return \"\"; }else { return userCommandString[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2119/buggy-version/src.AnyTask.java", "BodyUseAPI": [], "Fixed commit": "a5c178de8ab24b0425f6ccc35bed5f9a9a806cfb", "Url": "https://api.github.com/repos/cs2103jan2015-t16-4j/main", "Date": "2015-03-12T05:29:38Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { value = field.getForeignConstraintDetails().getTargetEntityDetails().getIdField().getValue(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/233/buggy-version/yukthi-data.src.main.java.com.yukthi.persistence.repository.executors.UpdateQueryExecutor.java", "BodyUseAPI": ["field.getForeignConstraintDetails().getTargetEntityDetails().getIdField().getValue(java.lang.Object)"], "Fixed commit": "51e5c6745fed0a128be32487e016283a392c3de7", "Url": "https://api.github.com/repos/yukthitech/utils", "Date": "2015-12-04T09:47:20Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { value = field.getForeignConstraintDetails().getTargetEntityDetails().getIdField().getValue(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/233/buggy-version/yukthi-data.src.main.java.com.yukthi.persistence.repository.executors.UpdateQueryExecutor.java", "BodyUseAPI": ["field.getForeignConstraintDetails().getTargetEntityDetails().getIdField().getValue(java.lang.Object)"], "Fixed commit": "51e5c6745fed0a128be32487e016283a392c3de7", "Url": "https://api.github.com/repos/yukthitech/utils", "Date": "2015-12-04T09:47:20Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d == (org.netbeans.spi.lexer.LexerInput.EOF)) { return TwigTokenId.T_TWIG_OTHER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6904/buggy-version/src.org.netbeans.modules.php.twig.editor.lexer.TwigLexer.java", "BodyUseAPI": [], "Fixed commit": "df555132edaa1eee2c2eead08e1dd9487781e554", "Url": "https://api.github.com/repos/sebhoerl/Twig-netbeans", "Date": "2011-07-22T17:42:03Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.event.TableModelEvent.getColumn()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (col != (jp.crwdev.app.gui.BatWorkDialog.TABLE_INDEX_OUTPUT_FIXED_SIZE)) { java.lang.String value = ((java.lang.String) (mTableModel.getValueAt(row, col))); onTableCellChanged(row, col, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7105/buggy-version/ComicEPUB.src.jp.crwdev.app.gui.BatWorkDialog.java", "BodyUseAPI": ["jp.crwdev.app.gui.BatWorkDialog.5.onTableCellChanged(int,int,java.lang.String)", "javax.swing.table.DefaultTableModel.getValueAt(int,int)"], "Fixed commit": "7107868a6956bcc9f28b56d663f3041f3a76b24c", "Url": "https://api.github.com/repos/crw-dev/ComicEPUB", "Date": "2013-10-15T12:46:50Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.game.isDebug()) { g.fillRect(this.getCoordsInFront(this.attackRange)[0], this.getCoordsInFront(this.attackRange)[1], 2, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/78/buggy-version/the_legend_of_zelda_hamlet.src.entities.Player.java", "BodyUseAPI": [], "Fixed commit": "cf598492296b129c85c11df9a3770a10bbbf59fb", "Url": "https://api.github.com/repos/josefwaller/TheLegendOfZeldaHamlet", "Date": "2016-12-14T23:45:25Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (predicate.contains(elementData[((cursor) - 1)])) { return next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8311/buggy-version/src.main.java.ru.archi.ArrayListWithPredicate.java", "BodyUseAPI": [], "Fixed commit": "fe1ae928c07654428f2ac8f160c5d922684a1f90", "Url": "https://api.github.com/repos/ArchiXIII/MyCollection", "Date": "2017-10-11T17:07:37Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message.startsWith(\"/channelLeave\")) { return message.replace(\"/channelLeave\", (userName + \" has left the channel\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3528/buggy-version/android-app.src.main.java.com.afzaln.mi_chat.utils.BbToHtml.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "38cfd2bc61d9cd34f5f8f6c1a88170d92bc197aa", "Url": "https://api.github.com/repos/AfzalivE/MI-Chat", "Date": "2013-07-31T09:00:56Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(successSent)) { successSent = true; success(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2668/buggy-version/src.main.java.io.relayr.java.helper.observer.BooleanObserver.java", "BodyUseAPI": [], "Fixed commit": "34a83f1a0477d0444837bc8ba5d673af0f6de539", "Url": "https://api.github.com/repos/relayr/java-sdk", "Date": "2016-07-22T13:58:27Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.minemaarten.signals.tileentity.TileEntityPathSignal.getStoredPath(routingMinecarts.get(0))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (path != null) updateSwitches(path, routingMinecarts.get(0), true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4922/buggy-version/src.com.minemaarten.signals.tileentity.TileEntityPathSignal.java", "BodyUseAPI": ["com.minemaarten.signals.tileentity.TileEntityPathSignal.updateSwitches(com.minemaarten.signals.rail.DestinationPathFinder.AStarRailNode,routingMinecarts.get(0),boolean)"], "Fixed commit": "9f9576b4d0d9e9c30f8ec32c6a6d9878775fcb59", "Url": "https://api.github.com/repos/MineMaarten/Signals", "Date": "2017-11-11T15:32:01Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orderByElementKey == null) || ((orderByElementKey.length) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4459/buggy-version/androidlibrary_lib.src.main.java.org.opendatakit.database.utilities.OdkDbQueryUtil.java", "BodyUseAPI": [], "Fixed commit": "d1d9240555a6cc4e2bba123c635d297dc9fd8d89", "Url": "https://api.github.com/repos/opendatakit/androidlibrary", "Date": "2016-08-02T22:42:35Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileManager.currentFile) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7274/buggy-version/javabite-compiler.src.main.java.swp_compiler_ss13.javabite.gui.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "7eb69d27aa392163afff09b1ed650c35ccea72a5", "Url": "https://api.github.com/repos/swp-uebersetzerbau-ss13/javabite", "Date": "2013-07-11T12:58:01Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.tileentity.TileEntityChest.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((iis.getItemDamage()) != (is.getItemDamage())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1189/buggy-version/java.iceandshadow2.nyx.blocks.utility.NyxBlockDistiller.java", "BodyUseAPI": [], "Fixed commit": "711c3db973388a44adcf61cb4a69691941441e7a", "Url": "https://api.github.com/repos/TheDaemoness/IceAndShadow2", "Date": "2015-01-26T04:03:05Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.tileentity.TileEntityChest.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((iis.getItemDamage()) != (is.getItemDamage())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1189/buggy-version/java.iceandshadow2.nyx.blocks.utility.NyxBlockDistiller.java", "BodyUseAPI": [], "Fixed commit": "711c3db973388a44adcf61cb4a69691941441e7a", "Url": "https://api.github.com/repos/TheDaemoness/IceAndShadow2", "Date": "2015-01-26T04:03:05Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (s > (-1)) { int e = key.indexOf(\"}\", (s + 1)); if ((e > (-1)) && (e != (s + 1))) { key = key.substring((s + 1), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2859/buggy-version/src.main.java.io.vertx.redis.impl.RedisClusterCRC16.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String,int)"], "Fixed commit": "e641fcc3ba80bb9ff48f3996fa9ba78808c9d069", "Url": "https://api.github.com/repos/Junety-C/vertx-redis-cluster", "Date": "2017-08-25T07:30:48Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nc.isAttached()) { ((to.etc.domui.state.IPolledForUpdate) (nc)).checkForChanges(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5656/buggy-version/to.etc.domui.src.main.java.to.etc.domui.state.DelayedActivitiesManager.java", "BodyUseAPI": [], "Fixed commit": "e385ba95dda8e4fe019e6b5de1fe9b6c1daca6b4", "Url": "https://api.github.com/repos/fjalvingh/domui", "Date": "2017-04-26T15:07:40Z"},
{"Line": "=>4011", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5836/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "1d9d095eedd4a31a5a4b8d5e268b686dcbb08c97", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-09-21T15:41:27Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (delete) { try { org.headsupdev.agile.runtime.Main.delete(bundle); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/542/buggy-version/agile-runtime.src.main.java.org.headsupdev.agile.runtime.Main.java", "BodyUseAPI": [], "Fixed commit": "76eff0165daf3f5b2ca22110dca97b4c460a4438", "Url": "https://api.github.com/repos/headsupdev/agile", "Date": "2012-06-10T15:05:59Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.collections4.CollectionUtils.isNotEmpty(assetNames)) { filterTypes.add(new eu.europa.ec.fisheries.uvms.activity.model.schemas.ListValueTypeFilter(eu.europa.ec.fisheries.uvms.activity.model.schemas.SearchFilter.VESSEL_NAME, assetNames)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3347/buggy-version/service.src.main.java.eu.europa.ec.fisheries.uvms.reporting.service.bean.impl.ReportExecutionServiceBean.java", "BodyUseAPI": ["java.util.List<eu.europa.ec.fisheries.uvms.activity.model.schemas.ListValueTypeFilter>.add(eu.europa.ec.fisheries.uvms.activity.model.schemas.ListValueTypeFilter)"], "Fixed commit": "461ec6e63ef5a2de29bde8905e9689217a94208b", "Url": "https://api.github.com/repos/UnionVMS/UVMS-ReportingModule-APP", "Date": "2017-10-10T13:45:12Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.team1540.quasarhelios.QuasarHelios.faultClears.get((i - 2))) == null) { entries[i] = ccre.rconf.RConf.string(str); }else { entries[i] = ccre.rconf.RConf.button(str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6805/buggy-version/QuasarHelios2015.src.org.team1540.quasarhelios.QuasarHelios.java", "BodyUseAPI": [], "Fixed commit": "0ff7625c4f1b0d19447c4b20b0f051fe885dc250", "Url": "https://api.github.com/repos/flamingchickens1540/quasar-helios-2015", "Date": "2015-02-15T00:37:43Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdMobView) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1867/buggy-version/mopub-sdk.src.main.java.com.mopub.mobileads.GoogleAdMobBanner.java", "BodyUseAPI": [], "Fixed commit": "86289ef14885119ce23d552fe7f40eb219eccf33", "Url": "https://api.github.com/repos/Newscron/mopub-android-sdk", "Date": "2014-03-12T12:53:49Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(intentAction)) { context.startActivity(intent); }else { android.support.v4.content.LocalBroadcastManager.getInstance(context).sendBroadcast(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1867/buggy-version/mopub-sdk.src.main.java.com.mopub.mobileads.HtmlWebViewClient.java", "BodyUseAPI": [], "Fixed commit": "86289ef14885119ce23d552fe7f40eb219eccf33", "Url": "https://api.github.com/repos/Newscron/mopub-android-sdk", "Date": "2014-03-12T12:53:49Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentPosition) > (mTabCount)) { mCurrentPosition = mTabCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2690/buggy-version/libary.src.main.java.com.coolerfall.uiart.PagerSlidingTabStrip.java", "BodyUseAPI": [], "Fixed commit": "f432bb17140e2608a24d36287843b90ef36babee", "Url": "https://api.github.com/repos/Coolerfall/Android-UIArt", "Date": "2015-04-11T07:52:46Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newCountDownInterface) != null) newCountDownInterface.onTick(time);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5609/buggy-version/easycountdowntimer.src.main.java.ir.samanjafari.easycountdowntimer.EasyCountDownTextview.java", "BodyUseAPI": [], "Fixed commit": "da0b4bce69bd527cf2dfd8405ae461d9ce979fc9", "Url": "https://api.github.com/repos/jsaman19/easyCountDownTimer", "Date": "2017-09-08T23:00:42Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newCountDownInterface) != null) newCountDownInterface.onFinish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5609/buggy-version/easycountdowntimer.src.main.java.ir.samanjafari.easycountdowntimer.EasyCountDownTextview.java", "BodyUseAPI": [], "Fixed commit": "da0b4bce69bd527cf2dfd8405ae461d9ce979fc9", "Url": "https://api.github.com/repos/jsaman19/easyCountDownTimer", "Date": "2017-09-08T23:00:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.tomclaw.mandarin.molecus.AccountRoot.isOffline()) { errorCause = \"YOU_ARE_OFFLINE\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2451/buggy-version/src.com.tomclaw.mandarin.main.ChatFrame.java", "BodyUseAPI": [], "Fixed commit": "1a9cd23a57a4953ce79c7b2f5d3039f8a18eb47f", "Url": "https://api.github.com/repos/solkin/mandarin-j2me", "Date": "2012-09-29T22:26:32Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (errorCause == null) { textBox.setTitle(chatTab.title); com.tomclaw.mandarin.main.Display.getDisplay(MidletMain.midletMain).setCurrent(textBox); }else { com.tomclaw.mandarin.core.Handler.showError(errorCause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2451/buggy-version/src.com.tomclaw.mandarin.main.ChatFrame.java", "BodyUseAPI": ["com.tomclaw.mandarin.core.Handler.showError(java.lang.String)"], "Fixed commit": "1a9cd23a57a4953ce79c7b2f5d3039f8a18eb47f", "Url": "https://api.github.com/repos/solkin/mandarin-j2me", "Date": "2012-09-29T22:26:32Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(parts[3].equals(ApplicationId.DEFAULT_VERSION))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3328/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.internal.app.runtime.schedule.AbstractSchedulerService.java", "BodyUseAPI": [], "Fixed commit": "ee29e842481d28375712440b2191e0e14fb4e129", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2017-04-06T19:51:00Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { if (ownList) currentUser.setFaveList(results); buildWidgets(results); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6792/buggy-version/src.com.fave100.client.pages.lists.widgets.favelist.FavelistPresenter.java", "BodyUseAPI": [], "Fixed commit": "1343995dea43a03a48a35c0d7687997dcf55db19", "Url": "https://api.github.com/repos/yissachar/fave100", "Date": "2013-10-03T17:25:04Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) == null) buildWidgets(results);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6792/buggy-version/src.com.fave100.client.pages.lists.widgets.favelist.FavelistPresenter.java", "BodyUseAPI": [], "Fixed commit": "1343995dea43a03a48a35c0d7687997dcf55db19", "Url": "https://api.github.com/repos/yissachar/fave100", "Date": "2013-10-03T17:25:04Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["femr.data.daos.IRepository<femr.common.models.IPatient>.findAll(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((patients.size()) > 0) { response.setResponseObject(patients); }else { response.addError(\"patients\", \"No patients available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6052/buggy-version/app.femr.business.services.ResearchService.java", "BodyUseAPI": ["femr.business.dtos.ServiceResponse<java.util.List<? extends femr.common.models.IPatient>>.setResponseObject(java.util.List<? extends femr.common.models.IPatient>)"], "Fixed commit": "0e0b04a8c8191fd94ed53fff747445f9ace43638", "Url": "https://api.github.com/repos/codeitandloadit/femr", "Date": "2014-03-09T04:02:22Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset >= (plaintext.length)) { packet.lossyMessages.clear(); return origOffset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6515/buggy-version/src.freenet.node.NPFPacket.java", "BodyUseAPI": [], "Fixed commit": "1c62b04448576a1f8438e30c5117e40f9ec29ffd", "Url": "https://api.github.com/repos/nextgens/fred", "Date": "2011-01-08T18:46:20Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((playerName) == null) || (playerName.equals(\"\"))) java.lang.System.exit(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6741/buggy-version/DistributedCAHClient.src.ui.ClientGUI.java", "BodyUseAPI": [], "Fixed commit": "3b4124cc864bbdae0a124bce3155a4a87de5e682", "Url": "https://api.github.com/repos/SilasBerger/distributed-cards-against-humanity", "Date": "2015-06-09T21:17:46Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOutputSurface.get()) == null) { java.io.IOException e = new java.io.IOException(\"Surface can't be null\"); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4467/buggy-version/videolibrary.src.main.java.com.tanosys.videolibrary.VideoDecoder.java", "BodyUseAPI": [], "Fixed commit": "02d14fc9d7470f274dfdef96ccd5adc94f4a174e", "Url": "https://api.github.com/repos/Tai-Kimura/VideoApplication", "Date": "2017-04-26T10:47:02Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((int) (probSum / 100000000)) != 1) { java.lang.System.out.print(\"ERROR: Invalid Probability Setup\\n\\n\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9070/buggy-version/StoryGenerator.src.storygenerator.ProbabilityTree.java", "BodyUseAPI": [], "Fixed commit": "2b9b5395bc04de75582ef64bc8f3da99410b416b", "Url": "https://api.github.com/repos/lbh0006/HON499", "Date": "2016-05-06T16:27:18Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bottomNavigationMenuView.isShiftingMode()) { this.colors = colors; setBackgroundColor(colors[bottomNavigationMenuView.getSelectPosition()]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3291/buggy-version/library.src.main.java.com.whitelife.library.BottomNavigationView.java", "BodyUseAPI": ["com.whitelife.library.BottomNavigationMenuView.getSelectPosition()", "com.whitelife.library.BottomNavigationView.setBackgroundColor(int)"], "Fixed commit": "17b3d8d9e5222296ee6b8908a3d4a60ed1ada290", "Url": "https://api.github.com/repos/earthWo/AndroidBottomNavigation", "Date": "2017-07-14T02:59:44Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scale < 1) scale = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2229/buggy-version/app.src.main.java.com.kivsw.forjoggers.ui.map.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "1987d64897ae89984590058029822b4c770511a7", "Url": "https://api.github.com/repos/IvanKovalchuk/forJoggers", "Date": "2016-11-01T09:33:00Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.lucene.util.Constants.JRE_IS_MINIMUM_JAVA9) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5100/buggy-version/lucene.core.src.java.org.apache.lucene.store.MMapDirectory.java", "BodyUseAPI": [], "Fixed commit": "8164272e07454ea8ff7a0db348639b6a777311f1", "Url": "https://api.github.com/repos/apache/lucene-solr", "Date": "2016-02-16T07:49:30Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (m <= 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8186/buggy-version/src.java.cd4017be.indlog.item.ItemPortableCrafter.java", "BodyUseAPI": [], "Fixed commit": "db1362b845bf5de71b18b9b087043acbd5a033fd", "Url": "https://api.github.com/repos/CD4017BE/InductiveLogistics", "Date": "2017-10-10T14:21:33Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.items.IItemHandler.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((item.getCount()) <= 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8186/buggy-version/src.java.cd4017be.indlog.util.PipeFilterItem.java", "BodyUseAPI": [], "Fixed commit": "db1362b845bf5de71b18b9b087043acbd5a033fd", "Url": "https://api.github.com/repos/CD4017BE/InductiveLogistics", "Date": "2017-10-10T14:21:33Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newInstanceTile) == null) { newInstanceTile = ((javafx.scene.layout.StackPane) (instancePane.getChildren().get(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2223/buggy-version/src.main.java.com.hearthproject.oneclient.fx.contentpane.InstancesPane.java", "BodyUseAPI": [], "Fixed commit": "e823a35363f4ff526b511485dea881fec29e3277", "Url": "https://api.github.com/repos/HearthProject/OneClient", "Date": "2017-08-18T16:55:37Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) dir.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1333/buggy-version/library.src.main.java.pl.aprilapps.easyphotopicker.EasyImageFiles.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "10e216aab4bad4c14f80f39bf2c3b386a06daea4", "Url": "https://api.github.com/repos/jkwiecien/EasyImage", "Date": "2016-01-18T09:07:52Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selected.getEquippedArmor()) != null) { java.lang.System.out.println((((((\"Currently have: \" + (selected.getEquippedArmor().getName())) + \" Equipped, with Attack Bonus: \") + (selected.getEquippedArmor().getBonusAtk())) + \" And Defense Bonus: \") + (selected.getEquippedArmor().getBonusDef()))); }else { java.lang.System.out.println(\"Currently have: no armor\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5060/buggy-version/GenericRPG.src.ver0.Party.java", "BodyUseAPI": ["java.io.PrintStream.println((((((\"Currently have: \" + (selected.getEquippedArmor().getName())) + \" Equipped, with Attack Bonus: \") + (selected.getEquippedArmor().getBonusAtk())) + \" And Defense Bonus: \") + (selected.getEquippedArmor().getBonusDef())))", "selected.getEquippedArmor().getBonusDef()", "ver0.PlayerActor.getEquippedArmor()", "ver0.PlayerActor.getEquippedArmor()", "selected.getEquippedArmor().getName()", "selected.getEquippedArmor().getBonusAtk()", "ver0.PlayerActor.getEquippedArmor()"], "Fixed commit": "4af43352b5d487550f54069bdca7b9a783dde34a", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-17T19:46:38Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selected.getEquippedHelmet()) != null) { java.lang.System.out.println((((((\"Currently have: \" + (selected.getEquippedHelmet().getName())) + \" Equipped, with Attack Bonus: \") + (selected.getEquippedHelmet().getBonusAtk())) + \" And Defense Bonus: \") + (selected.getEquippedHelmet().getBonusDef()))); }else { java.lang.System.out.println(\"Currently have: no helmet\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5060/buggy-version/GenericRPG.src.ver0.Party.java", "BodyUseAPI": ["selected.getEquippedHelmet().getName()", "ver0.PlayerActor.getEquippedHelmet()", "ver0.PlayerActor.getEquippedHelmet()", "ver0.PlayerActor.getEquippedHelmet()", "selected.getEquippedHelmet().getBonusDef()", "java.io.PrintStream.println((((((\"Currently have: \" + (selected.getEquippedHelmet().getName())) + \" Equipped, with Attack Bonus: \") + (selected.getEquippedHelmet().getBonusAtk())) + \" And Defense Bonus: \") + (selected.getEquippedHelmet().getBonusDef())))", "selected.getEquippedHelmet().getBonusAtk()"], "Fixed commit": "4af43352b5d487550f54069bdca7b9a783dde34a", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-17T19:46:38Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selected.getEquippedSword()) != null) { java.lang.System.out.println((((((\"Currently have: \" + (selected.getEquippedSword().getName())) + \" Equipped, with Attack Bonus: \") + (selected.getEquippedSword().getBonusAtk())) + \" And Defense Bonus: \") + (selected.getEquippedSword().getBonusDef()))); }else { java.lang.System.out.println(\"Currently have: no sword\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5060/buggy-version/GenericRPG.src.ver0.Party.java", "BodyUseAPI": ["selected.getEquippedSword().getBonusDef()", "selected.getEquippedSword().getBonusAtk()", "selected.getEquippedSword().getName()", "java.io.PrintStream.println((((((\"Currently have: \" + (selected.getEquippedSword().getName())) + \" Equipped, with Attack Bonus: \") + (selected.getEquippedSword().getBonusAtk())) + \" And Defense Bonus: \") + (selected.getEquippedSword().getBonusDef())))", "ver0.PlayerActor.getEquippedSword()", "ver0.PlayerActor.getEquippedSword()", "ver0.PlayerActor.getEquippedSword()"], "Fixed commit": "4af43352b5d487550f54069bdca7b9a783dde34a", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-17T19:46:38Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selected.getEquippedShield()) != null) { java.lang.System.out.println((((((\"Currently have: \" + (selected.getEquippedShield().getName())) + \" Equipped, with Attack Bonus: \") + (selected.getEquippedShield().getBonusAtk())) + \" And Defense Bonus: \") + (selected.getEquippedShield().getBonusDef()))); }else { java.lang.System.out.println(\"Currently have: no shield\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5060/buggy-version/GenericRPG.src.ver0.Party.java", "BodyUseAPI": ["selected.getEquippedShield().getName()", "selected.getEquippedShield().getBonusDef()", "java.io.PrintStream.println((((((\"Currently have: \" + (selected.getEquippedShield().getName())) + \" Equipped, with Attack Bonus: \") + (selected.getEquippedShield().getBonusAtk())) + \" And Defense Bonus: \") + (selected.getEquippedShield().getBonusDef())))", "ver0.PlayerActor.getEquippedShield()", "ver0.PlayerActor.getEquippedShield()", "selected.getEquippedShield().getBonusAtk()", "ver0.PlayerActor.getEquippedShield()"], "Fixed commit": "4af43352b5d487550f54069bdca7b9a783dde34a", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-17T19:46:38Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.BoardPos.vecToPos(game.Vector)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sandbox[tmp.ypos][tmp.xpos]) == (game.Board.BoardState.EMPTY)) sandbox[tmp.ypos][tmp.xpos] = game.Board.BoardState.BALL;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3646/buggy-version/src.game.Board.java", "BodyUseAPI": [], "Fixed commit": "c4282e2523571f19eb96e8d090342bd27aaf9cc4", "Url": "https://api.github.com/repos/martinekvili/BounceClone", "Date": "2013-12-08T20:53:39Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (userView != null) { java.util.Set<net.sourceforge.fenixedu.domain.AcademicProgram> programs = net.sourceforge.fenixedu.domain.accessControl.academicAdministration.AcademicAuthorizationGroup.getProgramsForOperation(userView.getPerson(), AcademicOperationType.MANAGE_PHD_PROCESSES); return programs.contains(this.getPhdProgram()); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6224/buggy-version/src.main.java.net.sourceforge.fenixedu.domain.phd.PhdIndividualProgramProcess.java", "BodyUseAPI": ["org.fenixedu.bennu.core.domain.User.getPerson()", "net.sourceforge.fenixedu.domain.accessControl.academicAdministration.AcademicAuthorizationGroup.getProgramsForOperation(userView.getPerson(),AcademicOperationType.MANAGE_PHD_PROCESSES)"], "Fixed commit": "c06be8b0b4a5b5ea7c077a990bfad9d7494d094b", "Url": "https://api.github.com/repos/jcarvalho/fenix", "Date": "2014-01-15T21:32:01Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (odt.isNoLocal()) { odt.setId(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8700/buggy-version/BackGestionTextilLevel.src.ar.com.textillevel.gui.modulos.odt.acciones.AccionDarSalidaPiezasODT.java", "BodyUseAPI": ["ar.com.textillevel.modulos.odt.entidades.OrdenDeTrabajo.setId(<nulltype>)"], "Fixed commit": "c8739ebcb4e658a4e0b7fc869920b39d9ca86630", "Url": "https://api.github.com/repos/nacho270/GTL", "Date": "2016-10-22T13:08:59Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { if ((this.fragmentWeakRef.get()) != null) { done = ((java.lang.Boolean) (result)); if (done) { Setup(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7463/buggy-version/udacitySunNewsApp.src.main.java.com.nectar.thesun.OtherPagesFragment.java", "BodyUseAPI": [], "Fixed commit": "65917124c5fe022e42693151b9209e0f31d0a7b1", "Url": "https://api.github.com/repos/Viktour19/UdacityTheSunNewsApp", "Date": "2015-03-25T20:23:41Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (syns.containsKey(clue.hashCode())) { for (int j = 0; j < (syns.get(clue.hashCode()).getSynonyms().size()); j++) { synToAdd = syns.get(clue.hashCode()).getSynonyms().get(j); returnArray.add(synToAdd); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8526/buggy-version/solver.src.FindAnswer.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, Word>.get(int)", "syns.get(clue.hashCode()).getSynonyms()", "java.util.HashMap<java.lang.Integer, Word>.get(int)", "syns.get(clue.hashCode()).getSynonyms().size()", "syns.get(clue.hashCode()).getSynonyms().get(int)", "syns.get(clue.hashCode()).getSynonyms()", "java.lang.String.hashCode()", "java.lang.String.hashCode()"], "Fixed commit": "927991c2be50474b9344387f6eec000677c7b5f0", "Url": "https://api.github.com/repos/jrcaldwellui/Crossathon", "Date": "2017-09-17T15:17:53Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lines.size()) < 1) lines.add(\"null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8551/buggy-version/src.java.mondo.engine.Parser.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "d3da7cf2d3557411c898b83e892d3ba6a3e0d034", "Url": "https://api.github.com/repos/oprogramador/plezuro_js", "Date": "2015-10-22T19:33:33Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tokens.size()) < 1) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8551/buggy-version/src.java.mondo.engine.Tokenizer.java", "BodyUseAPI": [], "Fixed commit": "d3da7cf2d3557411c898b83e892d3ba6a3e0d034", "Url": "https://api.github.com/repos/oprogramador/plezuro_js", "Date": "2015-10-22T19:33:33Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tokens.size()) < 1) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8551/buggy-version/src.java.mondo.engine.Tokenizer.java", "BodyUseAPI": [], "Fixed commit": "d3da7cf2d3557411c898b83e892d3ba6a3e0d034", "Url": "https://api.github.com/repos/oprogramador/plezuro_js", "Date": "2015-10-22T19:33:33Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.parser.JSONLexer.token()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (token == (com.alibaba.fastjson.parser.JSONToken.NULL)) { lexer.nextToken(); list = null; }else if ((token == (com.alibaba.fastjson.parser.JSONToken.EOF)) && (lexer.isBlankInput())) { list = null; }else { list = new java.util.ArrayList<T>(); parser.parseArray(clazz, list); parser.handleResovleTask(list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7992/buggy-version/src.main.java.com.alibaba.fastjson.JSON.java", "BodyUseAPI": [], "Fixed commit": "d38c088984748baacbc406125f08e3acfdc14aa9", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-10T12:03:53Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4002/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "aef8b6df04921e9e901b410c28f113820a9f5586", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(symbol)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8219/buggy-version/src.main.java.org.stocker.services.StockDBClientImpl.java", "BodyUseAPI": [], "Fixed commit": "f3f3e0340741932f6f4f2a5db707f9efa8cbcc88", "Url": "https://api.github.com/repos/shahmharsh/msmwServer", "Date": "2015-11-01T20:40:23Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (requestContext != null) { request = requestContext.getRequest(); response = requestContext.getResponse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4767/buggy-version/webx.framework.src.main.java.com.alibaba.citrus.webx.support.AbstractWebxRootController.java", "BodyUseAPI": ["com.alibaba.citrus.service.requestcontext.RequestContext.getRequest()", "com.alibaba.citrus.service.requestcontext.RequestContext.getResponse()"], "Fixed commit": "e415677dec611813ff44598cb73f122e19927fa5", "Url": "https://api.github.com/repos/webx/citrus", "Date": "2012-12-29T08:03:07Z"},
{"Line": "=>738", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (javax.xml.XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) { element.setAttribute(ns, nsMap.get(ns)); }else { element.setAttribute((((javax.xml.XMLConstants.XMLNS_ATTRIBUTE) + \":\") + ns), nsMap.get(ns)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1316/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.DefaultCxfBinding.java", "BodyUseAPI": ["org.w3c.dom.Element.setAttribute(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "org.w3c.dom.Element.setAttribute(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "d62f5120f41ffcf9815451457b184c61ee3fdbba", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-08-29T09:19:20Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (javax.xml.XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) { element.setAttribute(ns, nsMap.get(ns)); }else { element.setAttribute((((javax.xml.XMLConstants.XMLNS_ATTRIBUTE) + \":\") + ns), nsMap.get(ns)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1316/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.CxfPayload.java", "BodyUseAPI": ["org.w3c.dom.Element.setAttribute(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "org.w3c.dom.Element.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "d62f5120f41ffcf9815451457b184c61ee3fdbba", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-08-29T09:19:20Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.rice.cs.hpc.traceviewer.summary.SummaryTimeCanvas.getBuffer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (img == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5317/buggy-version/edu.rice.cs.hpc.traceviewer.src.edu.rice.cs.hpc.traceviewer.summary.SummaryTimeCanvas.java", "BodyUseAPI": [], "Fixed commit": "b251bc8a54883b1e4168ae3178af7a9b8351c7c3", "Url": "https://api.github.com/repos/HPCToolkit/hpcviewer", "Date": "2016-04-01T21:02:02Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.graphics.Image.getImageData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (imgData == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5317/buggy-version/edu.rice.cs.hpc.traceviewer.src.edu.rice.cs.hpc.traceviewer.summary.SummaryTimeCanvas.java", "BodyUseAPI": [], "Fixed commit": "b251bc8a54883b1e4168ae3178af7a9b8351c7c3", "Url": "https://api.github.com/repos/HPCToolkit/hpcviewer", "Date": "2016-04-01T21:02:02Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getView().getSupportFragmentManager().isDestroyed()) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2404/buggy-version/common-ui.src.main.java.org.opensilk.common.ui.mortarfragment.FragmentManagerOwner.java", "BodyUseAPI": [], "Fixed commit": "f6c6c003b1ffe957981a853567cea520f32fe8b9", "Url": "https://api.github.com/repos/Zillode/syncthing-silk", "Date": "2015-07-24T07:22:07Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (co.uk.flansmods.client.FlansModClient.flipControlMode()) player.addChatMessage((\"Mouse Control mode is now set to \" + (FlansModClient.controlModeMouse)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6137/buggy-version/src.minecraft.co.uk.flansmods.client.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "9df2049494047960bfef0f2ded15b6ad3011c133", "Url": "https://api.github.com/repos/FlansMods/FlansMod", "Date": "2013-07-01T10:00:07Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (classifications.containsKey(null)) { outputNodes--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1609/buggy-version/src.main.groovy.net.zomis.machlearn.images.ImageNetworkBuilder.java", "BodyUseAPI": [], "Fixed commit": "20d4d6f76136a17a0a167f76a8f40fd2c5792afd", "Url": "https://api.github.com/repos/Zomis/Machine-Learning", "Date": "2016-01-30T17:15:59Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((readDeprecated) && (ignoreDeprecated)) && (field.isAnnotationPresent(java.lang.Deprecated.class))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8852/buggy-version/gdx.src.com.badlogic.gdx.utils.Json.java", "BodyUseAPI": [], "Fixed commit": "43dbb54eeb08f6ea572299bc63689223921a1e6d", "Url": "https://api.github.com/repos/Leejjon/libgdx", "Date": "2017-10-21T09:51:16Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movableAction) == (jsettlers.common.movable.EAction.NO_ACTION)) { animationDuration = jsettlers.logic.constants.Constants.MOVABLE_INTERRUPT_PERIOD; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2523/buggy-version/jsettlers.logic.src.jsettlers.logic.movable.Movable.java", "BodyUseAPI": [], "Fixed commit": "18c280dfdd65de401402d6d0c0b0a398d61dc27d", "Url": "https://api.github.com/repos/jsettlers/settlers-remake", "Date": "2015-05-11T15:19:04Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCardNumber) != null) { if ((mCardNumber.length()) > 12) { cardNumber.setText(checkCardNumberFormat(addSpaceToCardNumber(mCardNumber))); if ((mType) == (com.vinaygaba.creditcardview.CardType.AUTO)) { type.setBackgroundResource(getLogo(mType)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/892/buggy-version/library.src.main.java.com.vinaygaba.creditcardview.CreditCardView.java", "BodyUseAPI": [], "Fixed commit": "18c354c7a52dc52fc9b2b72bef2600a2c4de8b34", "Url": "https://api.github.com/repos/vinaygaba/CreditCardView", "Date": "2015-06-30T06:33:02Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.backup.sftp.APIAddSftpBackupStorageMsg.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((dir.startsWith(\"/proc\")) || (dir.startsWith(\"/dev\"))) || (dir.startsWith(\"/sys\"))) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(argerr(\" the url contains an invalid folder[/dev or /proc or /sys]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6352/buggy-version/plugin.sftpBackupStorage.src.main.java.org.zstack.storage.backup.sftp.SftpBackupStorageApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "ba80755318a009fd7b05e35b3b36a7c69dc3fb21", "Url": "https://api.github.com/repos/AlanJager/zstack", "Date": "2017-04-08T13:37:32Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (offlinePlayer != null) { java.lang.String version = com.Ben12345rocks.AdvancedCore.NMSManager.NMSManager.getInstance().getVersion(); if (!(version.contains(\"1_8\"))) { try { org.bukkit.inventory.meta.SkullMeta im = ((org.bukkit.inventory.meta.SkullMeta) (is.getItemMeta())); im.setOwningPlayer(offlinePlayer); is.setItemMeta(im); } catch (java.lang.Exception expected) { setSkullOwner(offlinePlayer.getName()); } }else { setSkullOwner(offlinePlayer.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9061/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Item.ItemBuilder.java", "BodyUseAPI": ["com.Ben12345rocks.AdvancedCore.Util.Item.ItemBuilder.setSkullOwner(offlinePlayer.getName())", "org.bukkit.OfflinePlayer.getName()", "org.bukkit.inventory.meta.SkullMeta.setOwningPlayer(org.bukkit.OfflinePlayer)", "org.bukkit.OfflinePlayer.getName()", "com.Ben12345rocks.AdvancedCore.Util.Item.ItemBuilder.setSkullOwner(offlinePlayer.getName())"], "Fixed commit": "c5c697dcf709c13f6ba6ed10eab09f84020ff40b", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-11-30T23:50:34Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStaticLayout) != null) { mHeight += mStaticLayout.getHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9205/buggy-version/src.edu.mit.mitmobile2.TruncatingTextView.java", "BodyUseAPI": [], "Fixed commit": "6c3bd07997f592f418ff4223e77fbad3dac0b1e8", "Url": "https://api.github.com/repos/MIT-Mobile/MIT-Mobile-for-Android", "Date": "2012-05-24T14:46:27Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.contextInfo.getExecution().getOrganization()) != null) { organization = this.contextInfo.getExecution().getOrganization().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/130/buggy-version/backend.src.main.java.cz.cuni.mff.xrg.odcs.backend.context.Context.java", "BodyUseAPI": ["this.contextInfo.getExecution().getOrganization().getName()", "cz.cuni.mff.xrg.odcs.commons.app.execution.context.ExecutionContextInfo.getExecution()", "this.contextInfo.getExecution().getOrganization()"], "Fixed commit": "b72f8b4c9a481fd555b3ec452c27f27a93953d19", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2015-04-01T08:59:25Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cardinfo != null) { this.makeSavedCardDialog(((java.lang.String) (cardinfo.get(\"cardnumber\")))); }else { this.makeAddCardDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2307/buggy-version/app.src.main.java.com.example.cory.feedthekitty.ContributeToExpense.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "com.example.cory.feedthekitty.ContributeToExpense.makeSavedCardDialog(java.lang.Object)"], "Fixed commit": "da05663ab050c894a0c76189100c99db220abef4", "Url": "https://api.github.com/repos/csh1579/436", "Date": "2017-12-05T05:08:31Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fridgeItem.getpurchasedDate()) != null) && ((fridgeItem.getExpirationDate()) != null)) { fridgeItem.calculateLevel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1982/buggy-version/src.main.java.com.goforcode.grocerygallery.controllers.FridgeController.java", "BodyUseAPI": ["com.goforcode.grocerygallery.models.Item.calculateLevel()"], "Fixed commit": "4c892e6d93594a3b8439ad312e8cf112bca5317f", "Url": "https://api.github.com/repos/nickpoolea/grocery-gallery", "Date": "2017-10-11T17:12:03Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getpurchasedDate()) != null) { purchDate.setTime(getpurchasedDate()); }else { purchDate.setTime(new java.util.Date()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1982/buggy-version/src.main.java.com.goforcode.grocerygallery.models.Item.java", "BodyUseAPI": [], "Fixed commit": "4c892e6d93594a3b8439ad312e8cf112bca5317f", "Url": "https://api.github.com/repos/nickpoolea/grocery-gallery", "Date": "2017-10-11T17:12:03Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getExpirationDate()) != null) { expiryDate.setTime(getExpirationDate()); }else { expiryDate.add(java.util.Calendar.DATE, 7); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1982/buggy-version/src.main.java.com.goforcode.grocerygallery.models.Item.java", "BodyUseAPI": [], "Fixed commit": "4c892e6d93594a3b8439ad312e8cf112bca5317f", "Url": "https://api.github.com/repos/nickpoolea/grocery-gallery", "Date": "2017-10-11T17:12:03Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tumorType != null) { tumorType = tumorType.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/533/buggy-version/web.src.main.java.org.mskcc.cbio.oncokb.controller.VariantAnnotationXMLController.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "e05ba98a84799cc6738ffc2c0230266f56258c61", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2015-08-26T16:21:09Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (alteration != null) { alteration = org.mskcc.cbio.oncokb.controller.AlterationUtils.trimAlterationName(alteration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/533/buggy-version/web.src.main.java.org.mskcc.cbio.oncokb.controller.VariantAnnotationXMLController.java", "BodyUseAPI": ["org.mskcc.cbio.oncokb.controller.AlterationUtils.trimAlterationName(java.lang.String)"], "Fixed commit": "e05ba98a84799cc6738ffc2c0230266f56258c61", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2015-08-26T16:21:09Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (alteration != null) { alteration = org.mskcc.cbio.oncokb.util.AlterationUtils.trimAlterationName(alteration); alt.setAlteration(alteration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/533/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.AlterationUtils.java", "BodyUseAPI": ["org.mskcc.cbio.oncokb.util.AlterationUtils.trimAlterationName(java.lang.String)"], "Fixed commit": "e05ba98a84799cc6738ffc2c0230266f56258c61", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2015-08-26T16:21:09Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.asteria.game.character.npc.Npc.getOriginalPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(position.withinDistance(npc.getPosition(), com.asteria.game.character.npc.NpcAggression.TARGET_DISTANCE))) || ((!(position.withinDistance(player.getPosition(), com.asteria.game.character.npc.NpcAggression.TARGET_DISTANCE))) && (npc.getDefinition().isRetreats()))) { npc.getMovementQueue().walk(position); npc.getCombatBuilder().reset(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6448/buggy-version/src.com.asteria.game.character.npc.NpcAggression.java", "BodyUseAPI": ["com.asteria.game.character.npc.Npc.getMovementQueue()", "com.asteria.game.character.npc.Npc.getCombatBuilder()", "npc.getCombatBuilder().reset()", "npc.getMovementQueue().walk(com.asteria.game.location.Position)"], "Fixed commit": "c60e44a92c7c9d1b4fea7f6804ec25f10bc6f31c", "Url": "https://api.github.com/repos/lare96/asteria-3.0", "Date": "2015-06-09T14:11:09Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.getOperator().equals(QueryParser.ASSIGN)) { subQueries.add(new edu.berkeley.nwbqueryengine.query.Query(node.getParent())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6668/buggy-version/src.main.java.edu.berkeley.nwbqueryengine.query.Query.java", "BodyUseAPI": ["java.util.List<edu.berkeley.nwbqueryengine.query.Query>.add(edu.berkeley.nwbqueryengine.query.Query)", "edu.berkeley.nwbqueryengine.query.Expression.getParent()"], "Fixed commit": "6189802a789c260d6371682d616ce0a09240ae0d", "Url": "https://api.github.com/repos/jezekp/NwbQueryEngine", "Date": "2017-10-05T22:39:50Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metricInfos[metricIndex].type) == (org.apache.kylin.storage.hbase.coprocessor.endpoint.EndpointAggregators.MetricType.DimensionAsMetric)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4221/buggy-version/storage.src.main.java.org.apache.kylin.storage.hbase.coprocessor.endpoint.EndpointAggregators.java", "BodyUseAPI": [], "Fixed commit": "2957e7e9c8ba48bb9e7d08e1e48c52ebf2fd8087", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-02-12T05:02:57Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((metricInfos[metricIndex].type) == (org.apache.kylin.storage.hbase.coprocessor.endpoint.EndpointAggregators.MetricType.Count)) { measureAggrs[metricIndex].aggregate(ONE); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4221/buggy-version/storage.src.main.java.org.apache.kylin.storage.hbase.coprocessor.endpoint.EndpointAggregators.java", "BodyUseAPI": ["measureAggrs[metricIndex].aggregate(org.apache.hadoop.io.LongWritable)"], "Fixed commit": "2957e7e9c8ba48bb9e7d08e1e48c52ebf2fd8087", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-02-12T05:02:57Z"},
{"Line": "=>859", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (position == (-1)) { req.setValue(baseUrl.concat(reqUri)); }else { req.setValue(baseUrl.concat(reqUri.substring(reqUri.indexOf(\"?\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6949/buggy-version/src.main.java.org.fcrepo.oai.service.OAIProviderService.java", "BodyUseAPI": [], "Fixed commit": "6f91c8a68393bad4464d85954b9e581b232cd44c", "Url": "https://api.github.com/repos/ualbertalib/fcrepo4-oaiprovider", "Date": "2017-03-15T15:23:02Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<se.sdmapeg.serverworker.TaskId, se.sdmapeg.common.tasks.Task<?>>.get(se.sdmapeg.serverworker.TaskId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (task != null) { se.sdmapeg.server.workers.models.WorkerCoordinatorModel.LOG.info(\"Reassigning task {}\", taskId); cancelTask(taskId); handleTask(taskId, task); }else { se.sdmapeg.server.workers.models.WorkerCoordinatorModel.LOG.warn(\"Attempted to reassign unassigned task {}\", taskId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1034/buggy-version/project.server.src.main.java.se.sdmapeg.server.workers.models.WorkerCoordinatorModel.java", "BodyUseAPI": ["se.sdmapeg.server.workers.models.WorkerCoordinatorModel.handleTask(se.sdmapeg.serverworker.TaskId,se.sdmapeg.common.tasks.Task<?>)"], "Fixed commit": "0011a91f471734b7f53be1d8b64c93189009e4d6", "Url": "https://api.github.com/repos/golvmopp/sdmapeg", "Date": "2013-05-26T09:57:06Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.hawkular.btm.api.model.btxn.Node>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((n.getFault()) != null) && ((n.getFault().trim().length()) > 0)) { rt.setFault(n.getFault()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7167/buggy-version/processors.metrics-deriver.src.main.java.org.hawkular.btm.processor.metrics.ResponseTimeDeriver.java", "BodyUseAPI": ["org.hawkular.btm.api.model.btxn.Node.getFault()", "org.hawkular.btm.api.model.analytics.ResponseTime.setFault(n.getFault())"], "Fixed commit": "c431a6e3f2cedd2c3a379dd0af16b0eeb14650dc", "Url": "https://api.github.com/repos/objectiser/hawkular-apm", "Date": "2015-10-05T15:37:18Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game) == null) { game = new framework.Game(); }else { game.RestartGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2661/buggy-version/Projet-Info.src.framework.Framework.java", "BodyUseAPI": [], "Fixed commit": "266c0fdc3c0e3d72c66b7fac11518b797b41f3cc", "Url": "https://api.github.com/repos/tnodet/Projet-Info", "Date": "2015-05-19T20:12:08Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prevDir) != null) prevDir.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/9203/buggy-version/app.src.main.java.com.teamoptimal.cse110project.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "490fc0140becbc14ab65b2f731156b2d3c9a25d1", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110W240T2", "Date": "2016-03-09T02:07:26Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((individuals.size()) == 0) return ((F[]) (new java.lang.Object[0]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3261/buggy-version/src.main.java.org.jnsgaii.cluster.computations.JPPFJobComputation.java", "BodyUseAPI": [], "Fixed commit": "f4828a01909eb4385713e1eb7b74572f7b16cfaf", "Url": "https://api.github.com/repos/magneticflux-/JNSGA-II", "Date": "2016-12-20T02:30:28Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((frames) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4660/buggy-version/src.main.java.org.zeromq.ZMsg.java", "BodyUseAPI": [], "Fixed commit": "0fe1355dfc5811c73ab47597c404290553f2a34c", "Url": "https://api.github.com/repos/conflictpredictor/jeromq", "Date": "2015-07-15T17:25:04Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (texCoordList.isSetTextureCoordinates()) { int coordinateListSize = texCoordList.getTextureCoordinates().size(); if (coordinateListSize > 1) return new java.util.HashMap<java.lang.String, java.lang.Object>(); else { java.util.HashSet<java.lang.String> rings = new java.util.HashSet<java.lang.String>(texCoordList.getTextureCoordinates().size()); for (org.citygml4j.model.citygml.appearance.TextureCoordinates texCoord : texCoordList.getTextureCoordinates()) { java.lang.String ring = texCoord.getRing(); if (((ring != null) && ((ring.length()) != 0)) && (texCoord.isSetValue())) { java.lang.String coords = org.citydb.util.Util.collection2string(texCoord.getValue(), \" \"); _SurfaceAppearranceData.put(\"target\", targetURI); _SurfaceAppearranceData.put(\"coord\", coords); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9111/buggy-version/src.org.citydb.plugins.CityGMLConverter.content.SurfaceAppearance.java", "BodyUseAPI": ["texCoordList.getTextureCoordinates().size()", "org.citygml4j.model.citygml.appearance.TexCoordList.getTextureCoordinates()", "org.citygml4j.model.citygml.appearance.TexCoordList.getTextureCoordinates()", "texCoordList.getTextureCoordinates().size()", "org.citygml4j.model.citygml.appearance.TexCoordList.getTextureCoordinates()"], "Fixed commit": "8881816d64f4f2ff1d9d135e850cd3d01a42905d", "Url": "https://api.github.com/repos/shahinsharifi/CityGMLConverterPlugin", "Date": "2015-02-01T21:16:55Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((looker.getNext()) != null) && (i != 0)) { looker.getNext().setBackward(looker.getLast()); looker.getLast().setForward(looker.getNext()); }else if (((looker.getNext()) != null) && (i == 0)) { tete = looker.getNext(); tete.setBackward(null); }else { looker.getLast().setForward(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8120/buggy-version/Lab2.src.lab2.ListeChaine.java", "BodyUseAPI": ["lab2.Noeud.getLast()", "looker.getLast().setForward(looker.getNext())", "lab2.Noeud.getNext()", "lab2.Noeud.getNext()", "lab2.Noeud.getLast()", "looker.getLast().setForward(<nulltype>)", "lab2.Noeud.getLast()", "looker.getNext().setBackward(looker.getLast())", "lab2.Noeud.getNext()", "lab2.Noeud.getNext()"], "Fixed commit": "8f554dce77b6f0712c95b6b0d75b98cbe709d7b4", "Url": "https://api.github.com/repos/Repede/LOG121-01-LABS", "Date": "2013-10-11T20:43:20Z"},
{"Line": "=>2809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((boatPath.getAreaType()) == (com.platypus.android.tablet.Path.AreaType.LAWNMOWER)) { boatPath = new com.platypus.android.tablet.Path.Region(touchpointList, com.platypus.android.tablet.Path.AreaType.LAWNMOWER); }else { boatPath = new com.platypus.android.tablet.Path.Region(touchpointList, com.platypus.android.tablet.Path.AreaType.SPIRAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/914/buggy-version/app.src.main.java.com.platypus.android.tablet.TeleOpPanel.java", "BodyUseAPI": [], "Fixed commit": "9b8851c91fa7d4e8b6e28469a174bbea9185ecb3", "Url": "https://api.github.com/repos/platypusllc/tablet", "Date": "2016-08-25T17:35:53Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (def.getName().toLowerCase().startsWith(\"stratio\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5745/buggy-version/meta-core.src.main.java.com.stratio.meta.core.utils.CoreUtils.java", "BodyUseAPI": [], "Fixed commit": "d376a303d443f75acd76da5c30393ec23036744e", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-06-30T14:48:34Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.ecm.core.transientstore.api.TransientStoreService.getStore(java.lang.String)", "org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.buildRenditionKey(org.nuxeo.ecm.core.api.DocumentModel,org.nuxeo.ecm.platform.rendition.service.RenditionDefinition)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ts.isCompleted(key)) { ts.release(key); }else { org.nuxeo.ecm.core.work.api.Work work = getRenditionWork(key, doc, def); java.lang.String workId = work.getId(); org.nuxeo.ecm.core.work.api.WorkManager wm = org.nuxeo.runtime.api.Framework.getService(org.nuxeo.ecm.core.work.api.WorkManager.class); if ((wm.find(workId, null)) == null) { wm.schedule(work, Scheduling.IF_NOT_SCHEDULED); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6383/buggy-version/nuxeo-features.nuxeo-platform-rendition.nuxeo-platform-rendition-core.src.main.java.org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.java", "BodyUseAPI": ["org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.getRenditionWork(java.lang.String,org.nuxeo.ecm.core.api.DocumentModel,org.nuxeo.ecm.platform.rendition.service.RenditionDefinition)", "org.nuxeo.ecm.core.transientstore.api.TransientStore.release(java.lang.String)"], "Fixed commit": "6814e9870bd4d909f2995d9855355041d228278f", "Url": "https://api.github.com/repos/ron1/nuxeo", "Date": "2016-10-30T21:28:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (is == null) { return javax.ws.rs.core.Response.status(Response.Status.NOT_FOUND).entity(new org.zanata.mt.api.dto.APIResponse(Response.Status.NOT_FOUND, (\"attribution image can not be found:\" + imageResource))).type(MediaType.APPLICATION_JSON_TYPE).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4945/buggy-version/server.src.main.java.org.zanata.mt.api.service.impl.BackendResourceImpl.java", "BodyUseAPI": [], "Fixed commit": "10fbbcd503834332febb8607c2dcea59fef4ca2c", "Url": "https://api.github.com/repos/zanata/zanata-mt", "Date": "2017-08-07T03:39:27Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first) { result = this.solver.findSolution(); first = false; }else result = this.solver.nextSolution();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6703/buggy-version/vig-cpsolver.src.main.java.abstract_constraint_program.ChocoConstraintProgram.java", "BodyUseAPI": [], "Fixed commit": "7e40473be3896767e1ee95abe64174c1a4e4a936", "Url": "https://api.github.com/repos/ontop/vig", "Date": "2017-03-28T12:24:15Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(t.toString().contains(\"{\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6703/buggy-version/vig-mappings-analyzer-2.src.main.java.it.unibz.inf.vig_mappings_analyzer.core.JoinableColumnsFinder.java", "BodyUseAPI": [], "Fixed commit": "7e40473be3896767e1ee95abe64174c1a4e4a936", "Url": "https://api.github.com/repos/ontop/vig", "Date": "2017-03-28T12:24:15Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(t.toString().contains(\"{\"))) java.lang.System.err.println(\"DEBUG!!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6703/buggy-version/vig-mappings-analyzer-2.src.main.java.it.unibz.inf.vig_mappings_analyzer.core.JoinableColumnsFinder.java", "BodyUseAPI": [], "Fixed commit": "7e40473be3896767e1ee95abe64174c1a4e4a936", "Url": "https://api.github.com/repos/ontop/vig", "Date": "2017-03-28T12:24:15Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["database.getMetadata().getSchema().getClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(unsafe)) && (cls.isSubClassOf(\"E\"))) throw new com.orientechnologies.orient.core.exception.OCommandExecutionException(((\"Cannot alter class '\" + (className)) + \"' because is an Edge class and could break vertices. Use UNSAFE if you want to force it\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7546/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLAlterClass.java", "BodyUseAPI": [], "Fixed commit": "aeb86ddb9b375659d68fa23ee14a457285737180", "Url": "https://api.github.com/repos/micha-nerdlichter/orientdb", "Date": "2015-04-20T14:18:03Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parserTextUpperCase.endsWith(\"UNSAFE\")) unsafe = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7546/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLAlterClass.java", "BodyUseAPI": [], "Fixed commit": "aeb86ddb9b375659d68fa23ee14a457285737180", "Url": "https://api.github.com/repos/micha-nerdlichter/orientdb", "Date": "2015-04-20T14:18:03Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token == null) { progressDialog.dismiss(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/690/buggy-version/src.com.khevents.CreateEventActivity.java", "BodyUseAPI": [], "Fixed commit": "0c28b020cddbe46926ec9300d32fdac40da3d7a8", "Url": "https://api.github.com/repos/tiksem/Events", "Date": "2015-06-24T10:13:59Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state == (SCROLL_STATE_IDLE)) { post(new java.lang.Runnable() { @java.lang.Override public void run() { if (((mLastScrollOffset) != scrollOffset) && ((mOnScrollEndListener) != null)) { if ((scrollOffset == 0) && (com.angcyo.uiview.utils.UI.canChildScrollDown(com.angcyo.uiview.recycler.RRecyclerView.this))) { mOnScrollEndListener.onScrollTopEnd(getLastVelocity()); } } mLastScrollOffset = -1; } }); }else { mLastScrollOffset = scrollOffset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2038/buggy-version/uiview.src.main.java.com.angcyo.uiview.recycler.RRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "9f76bddc3195147115962814598280da4453fc99", "Url": "https://api.github.com/repos/angcyo/RLibrary", "Date": "2017-04-19T02:50:07Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.view.GestureDetectorCompat.onTouchEvent(android.view.MotionEvent)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (event) { ev.setAction(MotionEvent.ACTION_CANCEL); return super.dispatchTouchEvent(ev); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2038/buggy-version/uiview.src.main.java.com.angcyo.uiview.design.StickLayout2.java", "BodyUseAPI": [], "Fixed commit": "9f76bddc3195147115962814598280da4453fc99", "Url": "https://api.github.com/repos/angcyo/RLibrary", "Date": "2017-04-19T02:50:07Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((token3 == null) || ((token3.getToken().length()) < 2)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3600/buggy-version/languagetool-language-modules.de.src.main.java.org.languagetool.rules.de.AgreementRule.java", "BodyUseAPI": [], "Fixed commit": "242898356fc4ed77921c2a13c02c457a1dfcf4e8", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2017-10-06T18:32:54Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.isChip()) || (item.isProgram())) { rand.Bytes.writeUInt8(((short) (item.subValue())), bytes, 4); }else { rand.Bytes.writeUInt8(((short) (255)), bytes, 4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6656/buggy-version/src.mmbn.bn6.BN6ShopItemProducer.java", "BodyUseAPI": ["mmbn.ShopItem.subValue()", "rand.Bytes.writeUInt8(((short) (item.subValue())),byte[],int)"], "Fixed commit": "b7a538d5f8aa000dad58690fcc3311ab1d3c7440", "Url": "https://api.github.com/repos/Prof9/mmbn-randomizer", "Date": "2014-07-24T09:35:34Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(word.equals(\"\"))) camelCaseWordConstruct += (word.substring(0, 1).toUpperCase()) + (word.substring(1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1947/buggy-version/eu.scasefp7.eclipse.core.src.eu.scasefp7.eclipse.core.ontologytoyamltools.StringHelpers.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.toUpperCase()", "java.lang.String.substring(int,int)"], "Fixed commit": "89334249db9964187328722bac81d504049f5eb3", "Url": "https://api.github.com/repos/s-case/s-case-core", "Date": "2016-03-21T14:55:30Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zzxhdzj.ctsync.service.account.AccountService.getUser(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (user != null) { org.springframework.beans.BeanUtils.copyProperties(user, userDto); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7451/buggy-version/ctsyncAPI.src.main.java.com.zzxhdzj.ctsync.rest.AccountRestController.java", "BodyUseAPI": ["org.springframework.beans.BeanUtils.copyProperties(com.zzxhdzj.ctsync.entity.User,com.zzxhdzj.ctsync.dto.UserDto)"], "Fixed commit": "4378b9b90f2358dff3e88a8dd93f7fe8a88874ea", "Url": "https://api.github.com/repos/ampm/ctsync", "Date": "2013-11-15T06:11:43Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.marklogic.clientutil.modulesloader.Modules.getPropertiesFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((modulesManager) != null) & (!(modulesManager.hasFileBeenModifiedSinceLastInstalled(f)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/524/buggy-version/src.main.java.com.marklogic.clientutil.modulesloader.impl.DefaultModulesLoader.java", "BodyUseAPI": [], "Fixed commit": "e8545b78e0de9bed0f28fa6c7176e17b3c53e84e", "Url": "https://api.github.com/repos/marklogic-community/ml-javaclient-util", "Date": "2015-07-07T13:36:37Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modulesManager) != null) { modulesManager.saveLastInstalledTimestamp(f, new java.util.Date()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/524/buggy-version/src.main.java.com.marklogic.clientutil.modulesloader.impl.DefaultModulesLoader.java", "BodyUseAPI": [], "Fixed commit": "e8545b78e0de9bed0f28fa6c7176e17b3c53e84e", "Url": "https://api.github.com/repos/marklogic-community/ml-javaclient-util", "Date": "2015-07-07T13:36:37Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((shareloc) != null) && ((shareTime) != 0)) { if ((((java.lang.System.currentTimeMillis()) - (shareTime)) > 10000000) || (((java.lang.Math.abs(((com.cs440.capstone.MainActivity.myLocation.latitude) - (shareloc.latitude)))) - (java.lang.Math.abs(((com.cs440.capstone.MainActivity.myLocation.longitude) - (shareloc.longitude))))) > 0.001)) { com.parse.ParseUser user = com.parse.ParseUser.getCurrentUser(); if ((com.parse.ParseUser.getCurrentUser()) != null) { user.put(\"shareLocation\", false); user.saveInBackground(new com.parse.SaveCallback() { public void done(com.parse.ParseException e) { if (e == null) { android.util.Log.d(\"parse\", \"upload location and text\"); }else { android.util.Log.d(\"parse\", \"failed to upload location\"); } } }); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3238/buggy-version/Capstone.src.com.cs440.capstone.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a5b5fd7f48784a23b698c13ef7b67ab6a67e5610", "Url": "https://api.github.com/repos/patrickg2014/Capstone", "Date": "2014-04-25T00:48:24Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.contains(\"|\")) { nameParts = name.split(\"\\\\|\"); name = nameParts[0]; meta = java.lang.Integer.parseInt(nameParts[1]); }else if ((values.length) > 2) { meta = values[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2957/buggy-version/src.main.java.xreliquary.handler.config.AlkahestConfiguration.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "f681a9700ffb3137963787840eea86368a8d75bf", "Url": "https://api.github.com/repos/P3pp3rF1y/Reliquary", "Date": "2016-09-02T20:25:13Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.contains(\"|\")) { nameParts = name.split(\"\\\\|\"); name = nameParts[0]; meta = java.lang.Integer.parseInt(nameParts[1]); }else if ((values.length) > 1) { meta = values[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2957/buggy-version/src.main.java.xreliquary.handler.config.AlkahestConfiguration.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "f681a9700ffb3137963787840eea86368a8d75bf", "Url": "https://api.github.com/repos/P3pp3rF1y/Reliquary", "Date": "2016-09-02T20:25:13Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message) == null) { return new java.lang.String[]{ java.lang.String.valueOf(_type.getId()), java.lang.String.valueOf(id) }; }else { return new java.lang.String[]{ java.lang.String.valueOf(_type.getId()), java.lang.String.valueOf(id), message }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/900/buggy-version/src.main.java.de.uniko.sebschlicht.socialnet.requests.RequestPost.java", "BodyUseAPI": [], "Fixed commit": "c5f4e6cd4803b975b39e29b970908f83c7932281", "Url": "https://api.github.com/repos/sebschlicht/graphity-socialnet", "Date": "2015-03-05T12:35:15Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.uniko.sebschlicht.graphity.bootstrap.load.BootstrapFileLoader.getEntry()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((entry.length) > 2) { message = entry[2]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/900/buggy-version/src.main.java.de.uniko.sebschlicht.graphity.bootstrap.load.BootstrapFileLoader.java", "BodyUseAPI": [], "Fixed commit": "c5f4e6cd4803b975b39e29b970908f83c7932281", "Url": "https://api.github.com/repos/sebschlicht/graphity-socialnet", "Date": "2015-03-05T12:35:15Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((temp.length()) > 0) { temp = temp.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8876/buggy-version/src.morphinas.Stemmer.Stemmer.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "2ada781a9ab660d7597306b5d3f11ad85b9629e6", "Url": "https://api.github.com/repos/mgmalana/NGramChecker", "Date": "2017-06-06T07:46:55Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((temp.length()) > 0) { temp = temp.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8876/buggy-version/src.v4.grammarchecking.threaded.GrammarChecker.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "2ada781a9ab660d7597306b5d3f11ad85b9629e6", "Url": "https://api.github.com/repos/mgmalana/NGramChecker", "Date": "2017-06-06T07:46:55Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((temp.length()) > 0) { temp = temp.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8876/buggy-version/src.v4.grammarchecking.threaded.GrammarChecker.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "2ada781a9ab660d7597306b5d3f11ad85b9629e6", "Url": "https://api.github.com/repos/mgmalana/NGramChecker", "Date": "2017-06-06T07:46:55Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().getBackStackEntryCount()) == 0) { if (MainActivity.mTwoPane) { com.example.android.bakingtime.RecipeDetailFragment recipeDetailFragment = new com.example.android.bakingtime.RecipeDetailFragment(); android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager(); fragmentManager.beginTransaction().replace(R.id.recipe_detail_container_tablet, recipeDetailFragment).commit(); }else { com.example.android.bakingtime.RecipeDetailFragment recipeDetailFragment = new com.example.android.bakingtime.RecipeDetailFragment(); android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager(); fragmentManager.beginTransaction().add(R.id.recipe_detail_container_phone, recipeDetailFragment).commit(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6003/buggy-version/app.src.main.java.com.example.android.bakingtime.RecipeDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "5bf7ce43c111800598fcbfaa7f42a6706b00cb1f", "Url": "https://api.github.com/repos/DKolev/BakingTime", "Date": "2017-08-31T10:59:01Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasWhitespace) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/894/buggy-version/ProgrammingPraxis.src.main.java.net.ahjota.praxis.markvshaney.EqualProbabilitiesShaney.java", "BodyUseAPI": [], "Fixed commit": "ac494d2e432c53ae42dacabaf60b39809b209f6b", "Url": "https://api.github.com/repos/ahjota/codekata", "Date": "2014-07-24T18:44:53Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((args[0].equalsIgnoreCase(\"y\")) || (args[0].equalsIgnoreCase(\"yaw\"))) || (args[0].equalsIgnoreCase(\"r\"))) || (args[0].equalsIgnoreCase(\"rotate\"))) || (args[0].equalsIgnoreCase(\"rotation\"))) { if (!(sender.hasPermission(\"editarmorstands.command.pose\"))) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"You don't have the permission editarmorstands.command.pose\")); return true; } }else if ((args[0].equalsIgnoreCase(\"name\")) || (de.themoep.EditArmorStands.EditArmorStands.toggleOptions.contains(args[0].toLowerCase()))) { if (!(sender.hasPermission((\"editarmorstands.command.\" + (args[0].toLowerCase()))))) { sender.sendMessage((((org.bukkit.ChatColor.RED) + \"You don't have the permission editarmorstands.command.\") + (args[0].toLowerCase()))); return true; } }else { sender.sendMessage(((((((((((org.bukkit.ChatColor.RED) + \"The argument \") + (org.bukkit.ChatColor.YELLOW)) + (args[0].toLowerCase())) + (org.bukkit.ChatColor.RED)) + \" doesn't exist. Use \") + (org.bukkit.ChatColor.YELLOW)) + \"/eas help\") + (org.bukkit.ChatColor.RED)) + \" to get all available toggleOptions!\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3616/buggy-version/src.main.java.de.themoep.EditArmorStands.EditArmorStands.java", "BodyUseAPI": ["java.util.List<java.lang.String>.contains(java.lang.String)", "org.bukkit.command.CommandSender.sendMessage((((org.bukkit.ChatColor.RED) + \"You don't have the permission editarmorstands.command.\") + (args[0].toLowerCase())))", "org.bukkit.command.CommandSender.hasPermission(java.lang.String)", "java.lang.String.toLowerCase()", "org.bukkit.command.CommandSender.sendMessage(((((((((((org.bukkit.ChatColor.RED) + \"The argument \") + (org.bukkit.ChatColor.YELLOW)) + (args[0].toLowerCase())) + (org.bukkit.ChatColor.RED)) + \" doesn't exist. Use \") + (org.bukkit.ChatColor.YELLOW)) + \"/eas help\") + (org.bukkit.ChatColor.RED)) + \" to get all available toggleOptions!\"))", "java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "b4be50376ff7087be6a077dad83a1c514d6cfd75", "Url": "https://api.github.com/repos/Phoenix616/EditArmorStands", "Date": "2015-03-22T17:08:33Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((outputRotation) == 0) || ((outputRotation) == 180)) { size(outputWidth, outputHeight, PGLGraphics.ID); }else { size(outputHeight, outputWidth, PGLGraphics.ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/632/buggy-version/praxis.video.pgl.src.net.neilcsmith.praxis.video.pgl.PGLPlayer.java", "BodyUseAPI": [], "Fixed commit": "d400b45b48ed3422f77f12e289321d5fd9195e18", "Url": "https://api.github.com/repos/praxis-live/praxis", "Date": "2017-08-17T13:33:29Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof net.sf.memoranda.HistoryItem)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4958/buggy-version/src.net.sf.memoranda.HistoryItem.java", "BodyUseAPI": [], "Fixed commit": "4fd46fb258dcff332f884f8cbf430d914d44d155", "Url": "https://api.github.com/repos/ser316asu/Neukoelln_SER316", "Date": "2017-04-24T06:40:34Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == (this)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4958/buggy-version/src.net.sf.memoranda.HistoryItem.java", "BodyUseAPI": [], "Fixed commit": "4fd46fb258dcff332f884f8cbf430d914d44d155", "Url": "https://api.github.com/repos/ser316asu/Neukoelln_SER316", "Date": "2017-04-24T06:40:34Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.sorescu.java.selenium.easy.SeleniumWrapper.url()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentUrl.substring(0, 4).equals(\"http\")) if (currentUrl != null) try { url = new java.net.URL(new java.net.URL(currentUrl), url).toString(); } catch (java.net.MalformedURLException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6158/buggy-version/src.main.java.eu.sorescu.java.selenium.easy.Browser.java", "BodyUseAPI": ["java.net.URL.toString()"], "Fixed commit": "e319365d1df40f72c71018f5c339414d32f3f26a", "Url": "https://api.github.com/repos/dragosmateis/eu.sorescu.java.selenium.easy", "Date": "2014-05-14T19:17:47Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathParam.startsWith(java.lang.String.valueOf(IVirtualDisk.PATH_SEPARATOR))) { commandRoot = new ch.se.inf.ethz.jcd.batman.io.VDiskFile(pathParam, currentLocation.getDisk()); }else { commandRoot = new ch.se.inf.ethz.jcd.batman.io.VDiskFile(currentLocation, pathParam); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7895/buggy-version/src.ch.se.inf.ethz.jcd.batman.cli.command.SizeCommand.java", "BodyUseAPI": [], "Fixed commit": "9b0f7758c5aa018c5cb4e2f0f82e1a496bb980ed", "Url": "https://api.github.com/repos/groggi/eth-jcd", "Date": "2013-04-05T15:43:23Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathParam.startsWith(java.lang.String.valueOf(IVirtualDisk.PATH_SEPARATOR))) { listRoot = new ch.se.inf.ethz.jcd.batman.io.VDiskFile(pathParam, currentLocation.getDisk()); }else { listRoot = new ch.se.inf.ethz.jcd.batman.io.VDiskFile(currentLocation, pathParam); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7895/buggy-version/src.ch.se.inf.ethz.jcd.batman.cli.command.ListMembersCommand.java", "BodyUseAPI": [], "Fixed commit": "9b0f7758c5aa018c5cb4e2f0f82e1a496bb980ed", "Url": "https://api.github.com/repos/groggi/eth-jcd", "Date": "2013-04-05T15:43:23Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.length()) > 1) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9270/buggy-version/app.src.main.java.edu.nd.darts.cimon.CpuService.java", "BodyUseAPI": [], "Fixed commit": "d0505c60d85367251d1c0c394cb20671d01e9432", "Url": "https://api.github.com/repos/ningPATH/NDroidAdmin", "Date": "2015-09-02T19:39:00Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fieldType.isArray()) { fieldType = fieldType.getComponentType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9034/buggy-version/src.main.java.org.tsg.siftxml.Index.java", "BodyUseAPI": ["java.lang.Class.getComponentType()"], "Fixed commit": "556b73d681a3736864f774aa640e68a5a8a9a612", "Url": "https://api.github.com/repos/thesmythgroup/SiftXml", "Date": "2015-02-26T20:53:07Z"},
{"Line": "=>646", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((submitVoteButton) != null)) { submitVoteButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2964/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetcw.modules.planningpoker.view.session.VotePanel.java", "BodyUseAPI": [], "Fixed commit": "5b22e1513c8f8491099beeeaa8598f091bc165bc", "Url": "https://api.github.com/repos/Team-Combat-Wombat/wpi-suite-tcw", "Date": "2014-05-02T20:59:23Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((submitVoteButton) != null)) { submitVoteButton.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2964/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetcw.modules.planningpoker.view.session.VotePanel.java", "BodyUseAPI": [], "Fixed commit": "5b22e1513c8f8491099beeeaa8598f091bc165bc", "Url": "https://api.github.com/repos/Team-Combat-Wombat/wpi-suite-tcw", "Date": "2014-05-02T20:59:23Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currState) == \"fourup\") { this.currState = \"single\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8490/buggy-version/src.medicalimaging.DisplayState.java", "BodyUseAPI": [], "Fixed commit": "a428a087782cd5fe8daa9ac61e6a52b5603b097f", "Url": "https://api.github.com/repos/cra5370/swen262-project", "Date": "2014-03-01T22:46:32Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((ex != null) && (!(ex.toString().startsWith(\"java.net.SocketException\")))) { jaddon.controller.StaticStandard.logErr((\"[CLIENT] Error while receiving: \" + ex)); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5799/buggy-version/src.jaddon.net.Client.java", "BodyUseAPI": ["jaddon.controller.StaticStandard.logErr(java.lang.String)"], "Fixed commit": "4167210b90b510eb2b11f53069f1f7bf3b69025a", "Url": "https://api.github.com/repos/Panzer1119/JAddOn", "Date": "2017-01-16T20:05:58Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((org.apache.camel.commands.AbstractContextCommand.class.isAssignableFrom(clazz)) && (null == (commandArgs[0]))) { commandArgs[0] = getFirstCamelContextName(); ops.println((\"Context name is not provided. Using the first : \" + (commandArgs[0]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2123/buggy-version/platforms.commands.commands-spring-boot.src.main.java.org.apache.camel.springboot.commands.crsh.CamelCommandsFacade.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "9cac2aab3dd915fb8c461fe977dbf3c56b52638d", "Url": "https://api.github.com/repos/evmin/camel", "Date": "2015-11-10T02:14:05Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (k > 0) { solver.set(solver.getStrategy(), greedySearch(inputOrderLBSearch(java.util.Arrays.copyOf(ovars, k)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1521/buggy-version/src.main.java.org.chocosolver.parser.RegParser.java", "BodyUseAPI": ["org.chocosolver.parser.RegParser.inputOrderLBSearch(byte[])", "org.chocosolver.solver.Solver.set(solver.getStrategy(),greedySearch(inputOrderLBSearch(java.util.Arrays.copyOf(ovars, k))))", "java.util.Arrays.copyOf(org.chocosolver.solver.variables.IntVar[],int)", "org.chocosolver.parser.RegParser.greedySearch(inputOrderLBSearch(java.util.Arrays.copyOf(ovars, k)))"], "Fixed commit": "c3df7ce5272f27fc6a1475aa61f6eab958e29c59", "Url": "https://api.github.com/repos/chocoteam/choco-parsers", "Date": "2016-04-22T09:13:45Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.bukkit.Material.getMaterial(SSConfig.lavawalkID)) != null) { player.sendBlockChange(block.getLocation(), org.bukkit.Material.getMaterial(SSConfig.lavawalkID), ((byte) (0))); revertSet.get(player).add(block); revertCheck(player, Material.LAVA); }else { player.sendBlockChange(block.getLocation(), Material.GLASS, ((byte) (0))); revertSet.get(player).add(block); revertCheck(player, Material.LAVA); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/861/buggy-version/src.main.java.com.acyrid.SunSteel.listeners.SSPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "8b623d8f454d6bc451aee473cf66a5ac96ef1e66", "Url": "https://api.github.com/repos/acyrid/SunSteel", "Date": "2012-03-26T18:01:56Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.bukkit.Material.getMaterial(SSConfig.waterwalkID)) != null) { player.sendBlockChange(block.getLocation(), org.bukkit.Material.getMaterial(SSConfig.waterwalkID), ((byte) (0))); revertSet.get(player).add(block); revertCheck(player, Material.WATER); }else { player.sendBlockChange(block.getLocation(), Material.GLASS, ((byte) (0))); revertSet.get(player).add(block); revertCheck(player, Material.WATER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/861/buggy-version/src.main.java.com.acyrid.SunSteel.listeners.SSPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "8b623d8f454d6bc451aee473cf66a5ac96ef1e66", "Url": "https://api.github.com/repos/acyrid/SunSteel", "Date": "2012-03-26T18:01:56Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((Main.visited.get(vertex)) == null) || (!(Main.visited.get(vertex)))) { Main.visited.put(vertex, java.lang.Boolean.TRUE); for (java.lang.String neighbor : g.getNeighbors(vertex)) { Main.dfs(g, neighbor); } Main.alphabet[Main.counter] = vertex; (Main.counter)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1736/buggy-version/Minglish.src.Main.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.String, java.lang.Boolean>.put(java.lang.String,java.lang.Boolean)", "Graph.getNeighbors(java.lang.String)"], "Fixed commit": "6108cacef8bedda4e39bf72e3f18a961b952cb5d", "Url": "https://api.github.com/repos/Edmeral/foo.bar", "Date": "2015-08-25T18:19:15Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) entity.setVelocity(0, 0, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1357/buggy-version/src.main.java.toops.tsteelworks.common.blocks.CementFluidBlock.java", "BodyUseAPI": [], "Fixed commit": "41bb024459313cc1ae4a9d3b63c2b3fd3e7a025b", "Url": "https://api.github.com/repos/Ephys/TinkersSteelworks", "Date": "2015-01-26T20:31:10Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.sana.android.plugin.application.CommManager.getInstance().getUri()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5730/buggy-version/PluginAndroidLibrary.plugin_android_library.src.main.java.com.sana.android.plugin.hardware.BluetoothAudioDevice.java", "BodyUseAPI": [], "Fixed commit": "75e3ff8a3631e0c8106f6c9fb3e06b63aedad7b4", "Url": "https://api.github.com/repos/DIdiHL/plugin_android_library", "Date": "2014-10-31T10:38:29Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.sana.android.plugin.application.CommManager.getInstance().getUri()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5730/buggy-version/PluginAndroidLibrary.plugin_android_library.src.main.java.com.sana.android.plugin.hardware.AudioRecordDevice.java", "BodyUseAPI": [], "Fixed commit": "75e3ff8a3631e0c8106f6c9fb3e06b63aedad7b4", "Url": "https://api.github.com/repos/DIdiHL/plugin_android_library", "Date": "2014-10-31T10:38:29Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.niccholaspage.nSpleef.nSpleefPlayerListener.plugin.nSpleefArenas.get(k).getPlayers().size()) == 1) { event.setFrom(player.getWorld().getSpawnLocation()); event.setTo(player.getWorld().getSpawnLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7919/buggy-version/src.com.niccholaspage.nSpleef.nSpleefPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "2b23cf7a55aa24b9e66e1528b9b0b3f6ee6be8d0", "Url": "https://api.github.com/repos/niccholaspage/nSpleef", "Date": "2011-03-10T22:46:34Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.ihmc.quadrupedRobotics.supportPolygon.QuadrupedSupportPolygon.getFootstep(us.ihmc.robotics.robotSide.RobotQuadrant)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (footPosition == null) { footPosition = new us.ihmc.robotics.geometry.FramePoint(us.ihmc.robotics.referenceFrames.ReferenceFrame.getWorldFrame()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8666/buggy-version/IHMCQuadrupedRobotics.src.us.ihmc.quadrupedRobotics.footstepChooser.MidFootZUpSwingTargetGenerator.java", "BodyUseAPI": [], "Fixed commit": "b1c2b7e135d72545a4c60b9b9c86204528a9f65a", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2015-10-27T19:45:56Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (listOfFiles != null) { for (int i = 0; i < (listOfFiles.length); i++) { if (listOfFiles[i].isFile()) { reports.add(listOfFiles[i].getName()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5159/buggy-version/ViewController.src.com.dbms.csmq.view.reports.ReportDownloadBean.java", "BodyUseAPI": ["java.io.File.isFile()", "java.io.File.getName()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "249caecb393404c890b69b939abe15c1a42ade8b", "Url": "https://api.github.com/repos/hpothuri/WHOD_MED_CQT", "Date": "2015-09-07T08:29:36Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (listOfFiles != null) { for (int i = 0; i < (listOfFiles.length); i++) { if (listOfFiles[i].isFile()) { reports.add(listOfFiles[i].getName()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5159/buggy-version/ViewController.src.com.dbms.csmq.view.reports.WhodReportDownloadBean.java", "BodyUseAPI": ["java.io.File.isFile()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "249caecb393404c890b69b939abe15c1a42ade8b", "Url": "https://api.github.com/repos/hpothuri/WHOD_MED_CQT", "Date": "2015-09-07T08:29:36Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Dialog.findViewById(R.id.dynamicVelocityInput)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(dynamicVelocityInputEditText.getText().toString())) { dynamicVelocityInputEditText.setError(getString(R.string.dynamic_velocity_required)); dynamicVelocityInputEditText.requestFocus(); }else { dynamicPressureArrayList.add(java.lang.Double.valueOf(dynamicVelocityInputEditText.getText().toString())); dynamicVelocityInputEditText.setText(\"\"); java.lang.String currentString = \"\"; for (java.lang.Double dynamicVelocity : dynamicPressureArrayList) { currentString += (java.lang.String.valueOf(dynamicVelocity)) + \" , \"; } dynamicVelocityTextView.setText(currentString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5776/buggy-version/app.src.main.java.com.jco.pitonew.Activities.DisplayActivity.java", "BodyUseAPI": ["dynamicVelocityInputEditText.getText().toString()", "android.widget.EditText.getText()", "android.widget.EditText.requestFocus()", "java.util.ArrayList<java.lang.Double>.add(java.lang.Double)", "java.lang.Double.valueOf(dynamicVelocityInputEditText.getText().toString())", "android.widget.EditText.setText(java.lang.String)", "android.widget.EditText.setError(getString(R.string.dynamic_velocity_required))"], "Fixed commit": "8e91d378c07b56e438324ae9ce4145cafe609ced", "Url": "https://api.github.com/repos/josephcorbin91/Android-Pitonew", "Date": "2017-03-20T22:40:58Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.includeProximityCheck) && (!(this.isProxime()))) { this.log.add(\"Device is not proxime.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3063/buggy-version/app.src.main.java.com.medziku.motoresponder.logic.UserRide.java", "BodyUseAPI": [], "Fixed commit": "c4b92f52f3a128f7f4f0817b2c3452c60965afce", "Url": "https://api.github.com/repos/orzechowskikamil/motoresponder", "Date": "2016-04-21T21:04:51Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.medziku.motoresponder.logic.UserRide.getQuickCheckCurrentSpeedKmh()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(this.isSpeedForSureRiding(quickCheckSpeedKmh))) { this.log.add(\"First check is speed less than sure riding speed, but not timeouted - checking again, using longer check.\"); java.lang.Float longCheckSpeedKmh = this.getLongCheckCurrentSpeedKmh(); if (this.isLocationTimeouted(longCheckSpeedKmh)) { this.log.add(\"Second check of location timeouted - user is in building, or not moving fast enough to assume ride.\"); return false; } if (!(this.isSpeedForSureRiding(longCheckSpeedKmh))) { this.log.add(\"After second check app isn't sure that user is riding - assuming that he is not riding.\"); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3063/buggy-version/app.src.main.java.com.medziku.motoresponder.logic.UserRide.java", "BodyUseAPI": [], "Fixed commit": "c4b92f52f3a128f7f4f0817b2c3452c60965afce", "Url": "https://api.github.com/repos/orzechowskikamil/motoresponder", "Date": "2016-04-21T21:04:51Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.medziku.motoresponder.logic.UserRide.getQuickCheckCurrentSpeedKmh()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (this.isLocationTimeouted(quickCheckSpeedKmh)) { this.log.add(\"First check speed timeouted - user probably in building, not riding.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3063/buggy-version/app.src.main.java.com.medziku.motoresponder.logic.UserRide.java", "BodyUseAPI": [], "Fixed commit": "c4b92f52f3a128f7f4f0817b2c3452c60965afce", "Url": "https://api.github.com/repos/orzechowskikamil/motoresponder", "Date": "2016-04-21T21:04:51Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentMenu.getItem(index).isEmpty()) inAction = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7477/buggy-version/IWAPP.src.weatherstation.menu.fallback.Menu.java", "BodyUseAPI": [], "Fixed commit": "eac1d5d45fad5b0b5cdc221aa5ae16ac65dc5b71", "Url": "https://api.github.com/repos/CoenB95/weatherstation", "Date": "2016-10-13T11:32:04Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osgl.inject.BeanSpec.rawType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rawType.isArray()) { rawType0 = rawType.getComponentType(); }else { java.util.List<java.lang.reflect.Type> typeParams = typeParams(); java.lang.reflect.Type theType = typeParams.get((isMap ? 1 : 0)); rawType0 = org.osgl.inject.BeanSpec.rawTypeOf(theType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3788/buggy-version/src.main.java.org.osgl.inject.BeanSpec.java", "BodyUseAPI": ["java.lang.Class<?>.getComponentType()"], "Fixed commit": "43985614281c27696775b2402ab6fb9b96b3f300", "Url": "https://api.github.com/repos/osglworks/java-di", "Date": "2016-12-11T23:00:38Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(attacker.isDead())) { cfvbaibai.cardfantasy.engine.OnAttackBlockingResult onAttackBlockingResult = resolver.resolveAttackBlockingSkills(defender, attacker, skill, damage); if (!(onAttackBlockingResult.isAttackable())) { return; } damage = onAttackBlockingResult.getDamage(); resolver.getStage().getUI().attackCard(defender, attacker, skill, damage); resolver.resolveDeathSkills(defender, attacker, skill, resolver.applyDamage(defender, attacker, skill, damage)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5233/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.skill.LifeDrain.java", "BodyUseAPI": ["cfvbaibai.cardfantasy.engine.SkillResolver.resolveDeathSkills(cfvbaibai.cardfantasy.engine.CardInfo,cfvbaibai.cardfantasy.engine.CardInfo,cfvbaibai.cardfantasy.data.Skill,resolver.applyDamage(defender, attacker, skill, damage))", "cfvbaibai.cardfantasy.engine.SkillResolver.resolveAttackBlockingSkills(cfvbaibai.cardfantasy.engine.CardInfo,cfvbaibai.cardfantasy.engine.CardInfo,cfvbaibai.cardfantasy.data.Skill,int)", "cfvbaibai.cardfantasy.engine.SkillResolver.applyDamage(cfvbaibai.cardfantasy.engine.CardInfo,cfvbaibai.cardfantasy.engine.CardInfo,cfvbaibai.cardfantasy.data.Skill,int)", "resolver.getStage().getUI().attackCard(cfvbaibai.cardfantasy.engine.CardInfo,cfvbaibai.cardfantasy.engine.CardInfo,cfvbaibai.cardfantasy.data.Skill,int)"], "Fixed commit": "8c722a49c7a26a0a24f91fe2e086aa9f3728fb24", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2016-06-12T08:32:13Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList.get(int)", "java.util.ArrayList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(tempThresholds.contains(((value1 + value2) / 2)))) { tempThresholds.add(((value1 + value2) / 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6776/buggy-version/id3.src.id3.id3.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Double>.add(double)"], "Fixed commit": "5f9e41c068d6fcf96aa5ecf26113d483bb211a54", "Url": "https://api.github.com/repos/alexwareb9/proyecto-id3", "Date": "2016-02-09T19:50:07Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pairings.keySet().isEmpty())) { for (edu.washington.ischool.commoncents.commoncents.Models.User u : pairings.keySet()) { if (pairings.get(u).contains(thisLineItem)) { pairings.get(u).remove(thisLineItem); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5177/buggy-version/app.src.main.java.edu.washington.ischool.commoncents.commoncents.Adapters.SplitByItemsLineAdapter.java", "BodyUseAPI": ["pairings.get(u).remove(edu.washington.ischool.commoncents.commoncents.Models.LineItem)", "java.util.Map<edu.washington.ischool.commoncents.commoncents.Models.User, java.util.List<edu.washington.ischool.commoncents.commoncents.Models.LineItem>>.keySet()", "java.util.Map<edu.washington.ischool.commoncents.commoncents.Models.User, java.util.List<edu.washington.ischool.commoncents.commoncents.Models.LineItem>>.get(edu.washington.ischool.commoncents.commoncents.Models.User)", "java.util.Map<edu.washington.ischool.commoncents.commoncents.Models.User, java.util.List<edu.washington.ischool.commoncents.commoncents.Models.LineItem>>.get(edu.washington.ischool.commoncents.commoncents.Models.User)", "pairings.get(u).contains(edu.washington.ischool.commoncents.commoncents.Models.LineItem)"], "Fixed commit": "d3c468e4c972eee18092340185f3700919ed0f42", "Url": "https://api.github.com/repos/yulongtan/commoncents", "Date": "2017-03-08T13:11:39Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.nbt.NBTTagCompound.getTagList(java.lang.String,tags.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (items == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7533/buggy-version/src.main.java.com.lothrazar.cyclicmagic.util.UtilNBT.java", "BodyUseAPI": [], "Fixed commit": "74d076ae0150b3216af42aa7d81fc3c604fdca86", "Url": "https://api.github.com/repos/PrinceOfAmber/Cyclic", "Date": "2016-07-01T06:01:29Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tags == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7533/buggy-version/src.main.java.com.lothrazar.cyclicmagic.util.UtilNBT.java", "BodyUseAPI": [], "Fixed commit": "74d076ae0150b3216af42aa7d81fc3c604fdca86", "Url": "https://api.github.com/repos/PrinceOfAmber/Cyclic", "Date": "2016-07-01T06:01:29Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FirePitRegistry.INSTANCE.getResultFromInput(net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (result != null) { this.setCooking(result.getResult()); this.worldObj.spawnEntityInWorld(new net.minecraft.entity.item.EntityXPOrb(worldObj, this.pos.getX(), this.pos.getY(), this.pos.getZ(), result.getXp())); cookTimeLeft = -1; ProgressionPacketHandler.INSTANCE.sendToAll(new com.theprogrammingturkey.progressiontweaks.network.PacketUdateFirePit(getItemCooking(), getBurnTimeLeft(), getCookTimeLeft(), getPos().getX(), getPos().getY(), getPos().getZ())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6764/buggy-version/src.main.java.com.theprogrammingturkey.progressiontweaks.blocks.tileentities.TileFirePit.java", "BodyUseAPI": ["com.theprogrammingturkey.progressiontweaks.registries.FirePitRegistry.CookingResult.getResult()", "com.theprogrammingturkey.progressiontweaks.registries.FirePitRegistry.CookingResult.getXp()", "com.theprogrammingturkey.progressiontweaks.blocks.tileentities.TileFirePit.setCooking(result.getResult())", "this.worldObj.spawnEntityInWorld(net.minecraft.entity.item.EntityXPOrb)"], "Fixed commit": "493804a7f51e4cad17ec9d8b6b0dc136b931388d", "Url": "https://api.github.com/repos/Turkey2349/Progression-Tweaks", "Date": "2017-05-28T00:12:48Z"},
{"Line": "=>1312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((absences.size()) == 0) || ((events.size()) == 0)) { return studentAbsMap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5576/buggy-version/src.main.edu.iastate.music.marching.attendance.servlets.DirectorServlet.java", "BodyUseAPI": [], "Fixed commit": "bce2a20dbdaa181899ceceaca50996b262ab45f4", "Url": "https://api.github.com/repos/danstiner/attendance", "Date": "2012-08-27T03:00:06Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((children.size()) != 1) { if (strategy == (HW1.waterFlow.BFS)) { java.util.Collections.sort(children); }else if (strategy == (HW1.waterFlow.DFS)) { java.util.Collections.sort(children, java.util.Collections.reverseOrder()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1098/buggy-version/src.HW1.waterFlow.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<java.lang.String>,java.util.Comparator<java.lang.String>)", "java.util.Collections.sort(java.util.List<java.lang.String>)"], "Fixed commit": "1aeb6d34a6dd2fabaa1b24d0b638df0afaac6485", "Url": "https://api.github.com/repos/felicitia/CS561_HW", "Date": "2015-09-22T06:08:44Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strategy == (HW1.waterFlow.BFS)) { frontier.addLast(currentNode); }else if (strategy == (HW1.waterFlow.DFS)) { frontier.addFirst(currentNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1098/buggy-version/src.HW1.waterFlow.java", "BodyUseAPI": [], "Fixed commit": "1aeb6d34a6dd2fabaa1b24d0b638df0afaac6485", "Url": "https://api.github.com/repos/felicitia/CS561_HW", "Date": "2015-09-22T06:08:44Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getJdbcTemplate().queryForObject(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (existingMax == null) { existingMax = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/731/buggy-version/libresonic-main.src.main.java.org.libresonic.player.dao.TranscodingDao.java", "BodyUseAPI": [], "Fixed commit": "38015364c920f800bf2ebf75ab922e6137bbbbda", "Url": "https://api.github.com/repos/biconou/libresonic", "Date": "2016-05-17T04:32:48Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getJdbcTemplate().queryForObject(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (existingMax == null) { existingMax = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/731/buggy-version/libresonic-main.src.main.java.org.libresonic.player.dao.PlayerDao.java", "BodyUseAPI": [], "Fixed commit": "38015364c920f800bf2ebf75ab922e6137bbbbda", "Url": "https://api.github.com/repos/biconou/libresonic", "Date": "2016-05-17T04:32:48Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Vehicle.getIncomingJunction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((incomingJunction.getSize()) == 1) { if ((orientation) == (Vehicle.VehicleOrientation.VO_NORTH)) orientation = Vehicle.VehicleOrientation.VO_SOUTH; else if ((orientation) == (Vehicle.VehicleOrientation.VO_SOUTH)) orientation = Vehicle.VehicleOrientation.VO_NORTH; else if ((orientation) == (Vehicle.VehicleOrientation.VO_WEST)) orientation = Vehicle.VehicleOrientation.VO_EAST; else if ((orientation) == (Vehicle.VehicleOrientation.VO_EAST)) orientation = Vehicle.VehicleOrientation.VO_WEST; randomizeIntention(); }else if (((incomingJunction.getSize()) == 2) || ((incomingJunction.getSize()) == 3)) { if ((incomingJunction.getLeft(currentRoad)) != null) { intention = Vehicle.Intention.LEFT; makeTurn(); }else if ((incomingJunction.getRight(currentRoad)) != null) { intention = Vehicle.Intention.RIGHT; makeTurn(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5083/buggy-version/src.Vehicle.java", "BodyUseAPI": ["Junction.getSize()", "Junction.getRight(Road)", "Junction.getSize()", "Junction.getLeft(Road)"], "Fixed commit": "1d69f220807073795e3d59d776669b291c0d70f2", "Url": "https://api.github.com/repos/TomaszMichalski/traffic-sim", "Date": "2017-12-28T10:30:39Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.cloud.backend.spi.DeviceSubscription.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (deviceEntity == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2022/buggy-version/src.com.google.cloud.backend.spi.ProspectiveSearchServlet.java", "BodyUseAPI": [], "Fixed commit": "28f4371483b271e2810586b5d338884a30791439", "Url": "https://api.github.com/repos/GoogleCloudPlatform/solutions-mobile-backend-starter-java", "Date": "2014-04-04T04:21:45Z"},
{"Line": "=>704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Hashtable<java.lang.String, condor.classad.Expr>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (expr != null) { java.lang.String value = expr.toString(); if ((value.length()) > 0) { if ((value.charAt(0)) == '\"') { value = value.substring(1, ((value.length()) - 1)); } } return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9048/buggy-version/src.main.java.org.glite.ce.creamapi.jobmanagement.jdl.JDL.java", "BodyUseAPI": ["condor.classad.Expr.toString()"], "Fixed commit": "cb40b7eb81942449bb39532e8e4658c3c43ab8bf", "Url": "https://api.github.com/repos/italiangrid/cream-api-java", "Date": "2014-06-16T15:04:26Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.projectforge.plugins.skillmatrix.AttendeeEditForm.getTraining()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((training.getCertificateArray()) != null) { certificateChoiceRenderer.clear().setValueArray(training.getCertificateArray()); certificateFs.setVisible(true); }else certificateFs.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8289/buggy-version/src.main.java.org.projectforge.plugins.skillmatrix.AttendeeEditForm.java", "BodyUseAPI": ["certificateChoiceRenderer.clear().setValueArray(training.getCertificateArray())", "org.projectforge.plugins.skillmatrix.TrainingDO.getCertificateArray()"], "Fixed commit": "30601bee827127670ae6e72bba9aba419b82d244", "Url": "https://api.github.com/repos/micromata/projectforge-webapp", "Date": "2014-04-01T12:50:33Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((thiz.children) != null) { java.util.Iterator<org.omnifaces.model.tree.AbstractTreeModel> thisChildren = thiz.children.iterator(); java.util.Iterator<org.omnifaces.model.tree.AbstractTreeModel> otherChildren = other.children.iterator(); while ((thisChildren.hasNext()) && (otherChildren.hasNext())) { if (!(org.omnifaces.model.tree.AbstractTreeModel.equals(thisChildren.next(), otherChildren.next()))) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8039/buggy-version/src.main.java.org.omnifaces.model.tree.AbstractTreeModel.java", "BodyUseAPI": ["java.util.Collection.iterator()"], "Fixed commit": "383094a958bc3f35645eedd92d2bfad9123c6c7b", "Url": "https://api.github.com/repos/omnifaces/omnifaces", "Date": "2017-09-17T07:54:27Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(closed)) { closeImmediately(executor); closed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3818/buggy-version/torod.connection.src.main.java.com.toro.torod.connection.cursors.DefaultToroCursor.java", "BodyUseAPI": [], "Fixed commit": "196f8aa8140c96309793bdec84dd8afb1e076efe", "Url": "https://api.github.com/repos/jerolba/torodb", "Date": "2015-07-08T16:04:50Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.plus.OsmandSettings.getApplicationMode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((m.getParent()) != null) { m = m.getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6557/buggy-version/OsmAnd.src.net.osmand.plus.voice.AbstractPrologCommandPlayer.java", "BodyUseAPI": ["net.osmand.plus.ApplicationMode.getParent()"], "Fixed commit": "681f6a27e0afd26a68c38e3f909ff8313c3b3e60", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-03-26T11:55:43Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cellSegmentMap.get(component).size()) > 1) { ca_segments = cellUtils.getSegmentsInGroup(species.getSegmentGroup()); }else { ca_segments = cell.getMorphology().getSegment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1808/buggy-version/src.main.java.org.geppetto.model.neuroml.modelInterpreterUtils.PopulateTypes.java", "BodyUseAPI": [], "Fixed commit": "56adcef1dd49ec35d999d173d8d2323f3c50a1c9", "Url": "https://api.github.com/repos/openworm/org.geppetto.model.neuroml", "Date": "2017-05-03T12:50:59Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((exception != null) && (exception instanceof javax.net.ssl.SSLHandshakeException)) { com.magnet.mmx.client.common.Log.e(com.magnet.mmx.client.api.MMXUser.TAG, (\"register: SSLHandshake exception. This is most likely because SecurityLevel \" + (\"is configured RELAXED or STRICT but the RESTport is configured as the non-SSL-enabled \" + \"port. Typically the non-SSL RESTport is 5220 and the SSL-enabled RESTport is 5221.\"))); }else { com.magnet.mmx.client.common.Log.d(com.magnet.mmx.client.api.MMXUser.TAG, \"register(): exception caught\", exception); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2947/buggy-version/android.src.main.java.com.magnet.mmx.client.api.MMXUser.java", "BodyUseAPI": ["com.magnet.mmx.client.common.Log.d(java.lang.String,java.lang.String,java.lang.Throwable)"], "Fixed commit": "d1cb041e19114259f3e654049c096807f7357a1e", "Url": "https://api.github.com/repos/magnetsystems/message-sdk-java-android", "Date": "2015-08-18T20:18:29Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.type) != null) { texture = getBaseTexture(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8723/buggy-version/src.snorri.world.Tile.java", "BodyUseAPI": [], "Fixed commit": "14509abe7eea7788a03a3fe8b2ab97924e10addc", "Url": "https://api.github.com/repos/SnorriDev/thoth", "Date": "2017-06-22T22:23:32Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((var.updateLowerBound(((int) (lowerbound)), this)) & (var.updateUpperBound(((int) (upperbound)), this))) { notifyPropagators(EventType.BOUND, cause); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3720/buggy-version/choco-solver.src.main.java.solver.variables.view.RealView.java", "BodyUseAPI": [], "Fixed commit": "36b59a4604f4cd0a4f37a8be148a07d332092392", "Url": "https://api.github.com/repos/chocoteam/choco3", "Date": "2013-06-06T11:53:09Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.Menu.findItem(R.id.menu_accept_desire)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (acceptDesireMitem != null) { acceptDesireMitem.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5781/buggy-version/app.src.main.java.wanthavers.mad.cs.fau.de.wanthavers_android.desiredetail.DesireDetailFragment.java", "BodyUseAPI": ["android.view.MenuItem.setVisible(boolean)"], "Fixed commit": "697defe33216dd5cb4cd3d60ade653f9ff32d5de", "Url": "https://api.github.com/repos/FAU-Inf2/wanthavers-android", "Date": "2016-06-26T16:31:53Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.vfs.FileSystemExtPoint.getFS()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(fs instanceof jetbrains.mps.ide.vfs.IdeaFileSystem)) { jetbrains.mps.ide.vfs.VirtualFileUtils.LOG.warn((((\"Current file system is not base on the IDEA VFS \" + fs) + \". Requested file is \") + f)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4734/buggy-version/workbench.mps-platform.source.jetbrains.mps.ide.vfs.VirtualFileUtils.java", "BodyUseAPI": ["org.apache.log4j.Logger.warn((((\"Current file system is not base on the IDEA VFS \" + fs) + \". Requested file is \") + f))"], "Fixed commit": "5a43fb545bcf39beb5ffecfbb6a0b22df0b1ca73", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2016-08-14T17:02:06Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tlinkDatum.getTLink().getTarget().getTokenSpan()) == null) return new ark.data.annotation.nlp.TokenSpan[0]; else return new ark.data.annotation.nlp.TokenSpan[]{ tlinkDatum.getTLink().getTarget().getTokenSpan() };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5909/buggy-version/src.temp.data.annotation.TLinkDatum.java", "BodyUseAPI": ["temp.data.annotation.timeml.TLink.getTarget()", "tlinkDatum.getTLink().getTarget().getTokenSpan()", "temp.data.annotation.TLinkDatum<L>.getTLink()"], "Fixed commit": "c7db297bd0cc06f67f62cd7306a1700eb238ff8f", "Url": "https://api.github.com/repos/forkunited/TemporalOrdering", "Date": "2014-04-04T22:19:26Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tlinkDatum.getTLink().getSource().getTokenSpan()) == null) return new ark.data.annotation.nlp.TokenSpan[0]; else return new ark.data.annotation.nlp.TokenSpan[]{ tlinkDatum.getTLink().getSource().getTokenSpan() };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5909/buggy-version/src.temp.data.annotation.TLinkDatum.java", "BodyUseAPI": ["temp.data.annotation.timeml.TLink.getSource()", "temp.data.annotation.TLinkDatum<L>.getTLink()", "tlinkDatum.getTLink().getSource().getTokenSpan()"], "Fixed commit": "c7db297bd0cc06f67f62cd7306a1700eb238ff8f", "Url": "https://api.github.com/repos/forkunited/TemporalOrdering", "Date": "2014-04-04T22:19:26Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (b.alive()) { java.lang.System.out.println(((((b.name) + \" wins! (in \") + roundCount) + \" rounds)\")); }else { java.lang.System.out.println(((\"Mutual Annihilation, both contenders are dead after \" + roundCount) + \" rounds)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4615/buggy-version/RoboGame.src.com.eatthatgame.robo.League.java", "BodyUseAPI": [], "Fixed commit": "7a28b04ba053a1dc386a0f569e05ec8b45ced6fa", "Url": "https://api.github.com/repos/Duderz/Robo", "Date": "2013-01-05T03:33:36Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.utu.xtrememorning.GameState.getPlayers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((plrs.size()) == 0) { Render(\"No player found!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3562/buggy-version/src.fi.utu.xtrememorning.TextView.java", "BodyUseAPI": [], "Fixed commit": "b0946e9e883d05a33d3eea9410064bc42e5ffed9", "Url": "https://api.github.com/repos/utu/xtrememorning", "Date": "2014-06-11T10:56:32Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.utu.xtrememorning.Player.getRoom()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (room == null) { Render(\"You are currently in the void!\"); }else { Render((\"You are currently in \" + (plr.getRoom().description))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3562/buggy-version/src.fi.utu.xtrememorning.TextView.java", "BodyUseAPI": [], "Fixed commit": "b0946e9e883d05a33d3eea9410064bc42e5ffed9", "Url": "https://api.github.com/repos/utu/xtrememorning", "Date": "2014-06-11T10:56:32Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data == null) || (data.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4146/buggy-version/src.efruchter.tp.learning.GeneVector.java", "BodyUseAPI": [], "Fixed commit": "3b44b98e79dcb23b27f35e90b464385c7a7904f6", "Url": "https://api.github.com/repos/efruchter/Trait", "Date": "2012-12-25T06:10:20Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((((lat1 != null) && (lon1 != null)) && (lat2 != null)) && (lon2 != null)) { distance = distance(java.lang.Double.valueOf(lat1), java.lang.Double.valueOf(lon1), java.lang.Double.valueOf(lat2), java.lang.Double.valueOf(lon2), unit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2500/buggy-version/src.main.java.com.tagdish.service.impl.LocationService.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)", "com.tagdish.service.impl.LocationService.distance(java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.String)", "java.lang.Double.valueOf(java.lang.String)", "java.lang.Double.valueOf(java.lang.String)", "java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "972901420d7cb47b67ec20c948765980e6c0fe1d", "Url": "https://api.github.com/repos/TagDish/TagDishServing", "Date": "2015-10-21T01:28:00Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((lat2 != null) && (lon2 != null)) { distance = distance(lat1, lon1, java.lang.Double.valueOf(lat2), java.lang.Double.valueOf(lon2), unit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2500/buggy-version/src.main.java.com.tagdish.service.impl.LocationService.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)", "java.lang.Double.valueOf(java.lang.String)", "com.tagdish.service.impl.LocationService.distance(double,double,java.lang.Double,java.lang.Double,java.lang.String)"], "Fixed commit": "972901420d7cb47b67ec20c948765980e6c0fe1d", "Url": "https://api.github.com/repos/TagDish/TagDishServing", "Date": "2015-10-21T01:28:00Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tectonicus.configuration.ImageFormat.hasAlpha()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!hasAlpha) { g.setColor(state.backgroundColor); g.fillRect(0, 0, state.tileWidth, state.tileHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1735/buggy-version/Source.tectonicus.Downsampler.java", "BodyUseAPI": [], "Fixed commit": "8278300bb05cfa765e8482a5f68372bc3ad17621", "Url": "https://api.github.com/repos/tectonicus/tectonicus", "Date": "2017-12-30T09:26:43Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((str.length()) > 2) { return java.lang.Integer.parseInt(str.substring(0, 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8770/buggy-version/src.SpecialNumberFormatter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "b15e0cbcb74e91ab987e51164828f24e181530c6", "Url": "https://api.github.com/repos/RohitBagda/Lights-Out", "Date": "2017-12-14T23:47:32Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mClosed)) { mClosed = true; mLock.readLock().unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9199/buggy-version/app.src.main.java.ch.bfh.anuto.util.container.DeferredCollectionMap.java", "BodyUseAPI": [], "Fixed commit": "3557701c65e637b9bc0ed8f5083f3f39bc34fd5e", "Url": "https://api.github.com/repos/reloZid/android-anuto", "Date": "2015-04-07T20:38:02Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((candidateDataDto.getUserInternaturDetailDto().getInternaturFlag()) != null) { dynamicValidation(candidateDataDto, err, ExternalUserTabTypesEnum.USER_INTERNATUR_FORM, formId, false, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5158/buggy-version/gde-webapp.src.main.java.com.nagarro.gde.validator.UserInternaturValidator.java", "BodyUseAPI": ["com.nagarro.gde.validator.UserInternaturValidator.dynamicValidation(com.nagarro.gde.dto.CandidateDataDto,org.springframework.validation.Errors,ExternalUserTabTypesEnum.USER_INTERNATUR_FORM,java.lang.Long,boolean,boolean)"], "Fixed commit": "77bf7c8b688c0b14c9455a478854b0c22d7cab20", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-04-02T04:47:28Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNetworkManager) != null) { int networkType = mNetworkManager.getConnectionState().getLastType(); int networkStatus = mNetworkManager.getConnectionState().getLastStateByFast(); onNetworkChanged(networkType, networkStatus); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2639/buggy-version/source.apps.ivyshare.src.com.ivyshare.ui.setting.NetworkSettingActivity.java", "BodyUseAPI": [], "Fixed commit": "97d5ea91dd1573066ee8c70ed02e13f1282e6a21", "Url": "https://api.github.com/repos/ivygroup/ivyshare", "Date": "2013-11-15T07:25:45Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.metaData) == null) { this.metaData = new java.util.ArrayList<java.lang.Object>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1469/buggy-version/src.main.java.org.jpokemon.api.PokemonTrainer.java", "BodyUseAPI": [], "Fixed commit": "20834868041f3cb17af4cc4c50a2cfcfcffc019c", "Url": "https://api.github.com/repos/JPokemon/jpokemon-api", "Date": "2014-06-22T09:08:42Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isIgnored(description))) && (!(isPending(description)))) net.thucydides.core.steps.StepEventBus.getEventBus().exampleStarted(parametersTable.row(parameterSetNumber).toStringMap());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5846/buggy-version/thucydides-junit.src.main.java.net.thucydides.junit.runners.ParameterizedJUnitStepListener.java", "BodyUseAPI": [], "Fixed commit": "2640e2457ddb7fce3af6450bc6941bf6f6805fd9", "Url": "https://api.github.com/repos/thucydides-webtests/thucydides", "Date": "2013-01-21T14:13:16Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.thucydides.core.model.TestOutcome.getTestSteps()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(testSteps.isEmpty())) { net.thucydides.core.model.TestStep nextStep = testSteps.get(0); nextStep.setDescription(normalizeTestStepDescription(nextStep.getDescription(), ((scenarioOutcomes.get(normalizedMethodName).getTestSteps().size()) + 1))); scenarioOutcomes.get(normalizedMethodName).recordStep(nextStep); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5846/buggy-version/thucydides-junit.src.main.java.net.thucydides.junit.runners.ThucydidesParameterizedRunner.java", "BodyUseAPI": ["java.util.List<net.thucydides.core.model.TestStep>.get(int)"], "Fixed commit": "2640e2457ddb7fce3af6450bc6941bf6f6805fd9", "Url": "https://api.github.com/repos/thucydides-webtests/thucydides", "Date": "2013-01-21T14:13:16Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.flyway.core.dbsupport.SqlStatementBuilder.removeEscapedQuotes(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cleanToken.startsWith(\"\\\"\")) && (cleanToken.endsWith(\"'\"))) { delimitingTokens.add(com.googlecode.flyway.core.dbsupport.SqlStatementBuilder.TokenType.QUOTE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1452/buggy-version/flyway-core.src.main.java.com.googlecode.flyway.core.dbsupport.SqlStatementBuilder.java", "BodyUseAPI": [], "Fixed commit": "b60f09f7a76dc611794b84f6ac20b76733861ce7", "Url": "https://api.github.com/repos/alkamo/flyway", "Date": "2013-09-24T01:00:01Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIsDestroyed)) { progressDialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3501/buggy-version/app.src.main.java.com.sqbnet.expressassistant.loginActivity.java", "BodyUseAPI": [], "Fixed commit": "904277a75f6ffe97c0b74deab0a9d56e1840dd07", "Url": "https://api.github.com/repos/strawhatboy/SQBExpressAssistant", "Date": "2015-08-08T04:01:22Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIsDestroyed)) { locationDialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3501/buggy-version/app.src.main.java.com.sqbnet.expressassistant.loginActivity.java", "BodyUseAPI": [], "Fixed commit": "904277a75f6ffe97c0b74deab0a9d56e1840dd07", "Url": "https://api.github.com/repos/strawhatboy/SQBExpressAssistant", "Date": "2015-08-08T04:01:22Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.Message.getHeader(HttpHeaders.Names.CONNECTION,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (connection == null) { connection = message.getExchange().getProperty(HttpHeaders.Names.CONNECTION, java.lang.String.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3141/buggy-version/components.camel-netty-http.src.main.java.org.apache.camel.component.netty.http.DefaultNettyHttpBinding.java", "BodyUseAPI": [], "Fixed commit": "edfe515a970b40b3563bb499ea3b067772ff1a99", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-03-09T10:07:53Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.handler.codec.http.HttpHeaders.isKeepAlive(org.jboss.netty.handler.codec.http.HttpRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!keepAlive) { exchange.setProperty(HttpHeaders.Names.CONNECTION, HttpHeaders.Values.CLOSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3141/buggy-version/components.camel-netty-http.src.main.java.org.apache.camel.component.netty.http.handlers.HttpServerChannelHandler.java", "BodyUseAPI": [], "Fixed commit": "edfe515a970b40b3563bb499ea3b067772ff1a99", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-03-09T10:07:53Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mInnerBoundaryCoordinates) != null) { coordinates.addAll(mInnerBoundaryCoordinates); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4395/buggy-version/library.src.com.google.maps.android.kml.KmlPolygon.java", "BodyUseAPI": [], "Fixed commit": "9a564d1137af13d3db726c699086c81a902556ed", "Url": "https://api.github.com/repos/juliawong/android-maps-utils", "Date": "2015-01-27T00:14:30Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tmp.length) != 1) { imageURL = tmp[1].split(\"\\\" style=\\\"\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3417/buggy-version/src.hokekyo1210.dojindb.crawler.SearchResult.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "675c2985b81a027c6cfb635113867e5ada5e26b0", "Url": "https://api.github.com/repos/hokekyo1210/doujinDB", "Date": "2016-04-05T04:12:31Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(k instanceof java.lang.Integer)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5717/buggy-version/src.haven.IntMap.java", "BodyUseAPI": [], "Fixed commit": "bc8e9416bd9002d7a74f00eea897e94cdee4664b", "Url": "https://api.github.com/repos/dolda2000/hafen-client", "Date": "2017-08-21T23:18:16Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (infinity.resource.bcs.Decompiler.generateErrors) { infinity.resource.bcs.Decompiler.resourcesUsed.add(entry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7097/buggy-version/src.infinity.resource.bcs.Decompiler.java", "BodyUseAPI": [], "Fixed commit": "05747bd39cd13dfba3c842b59193742bb2268b83", "Url": "https://api.github.com/repos/Argent77/NearInfinity", "Date": "2014-04-11T10:02:46Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.lvmaster3000.gui.fragments.AddTaskFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bundle != null) { this.lectureId = bundle.getLong(\"lectureId\"); this.dbLogic = new at.lvmaster3000.database.IDBlogic(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2249/buggy-version/LVMaster3000.src.at.lvmaster3000.gui.fragments.AddTaskFragment.java", "BodyUseAPI": ["android.os.Bundle.getLong(java.lang.String)"], "Fixed commit": "04967f4d2593db7445db65999a91c33c9d7464f0", "Url": "https://api.github.com/repos/pi13/sw14_free_07", "Date": "2014-06-09T10:34:27Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.lvmaster3000.gui.fragments.AddExamFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bundle != null) { this.lectureId = bundle.getLong(\"lectureId\"); this.dbLogic = new at.lvmaster3000.database.IDBlogic(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2249/buggy-version/LVMaster3000.src.at.lvmaster3000.gui.fragments.AddExamFragment.java", "BodyUseAPI": ["android.os.Bundle.getLong(java.lang.String)"], "Fixed commit": "04967f4d2593db7445db65999a91c33c9d7464f0", "Url": "https://api.github.com/repos/pi13/sw14_free_07", "Date": "2014-06-09T10:34:27Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.lvmaster3000.gui.fragments.AddResourceFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bundle != null) { this.lectureId = bundle.getLong(\"lectureId\"); this.dbLogic = new at.lvmaster3000.database.IDBlogic(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2249/buggy-version/LVMaster3000.src.at.lvmaster3000.gui.fragments.AddResourceFragment.java", "BodyUseAPI": ["android.os.Bundle.getLong(java.lang.String)"], "Fixed commit": "04967f4d2593db7445db65999a91c33c9d7464f0", "Url": "https://api.github.com/repos/pi13/sw14_free_07", "Date": "2014-06-09T10:34:27Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ref.length()) == 0) { nStart -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/36/buggy-version/annotator.src.main.java.org.cbioportal.annotator.internal.GenomeNexusImpl.java", "BodyUseAPI": [], "Fixed commit": "57246bdf68f607bf5324789267aee1de6d8c9ec2", "Url": "https://api.github.com/repos/genome-nexus/genome-nexus-annotation-pipeline", "Date": "2017-03-08T20:00:53Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.charAt(0)) == '@') { item.setLocation(msg.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5820/buggy-version/src.todo.library.NLP.java", "BodyUseAPI": ["todo.model.Item.setLocation(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "abf55b0c67071a759b136830c89199c170fb7bd5", "Url": "https://api.github.com/repos/cs2103aug2014-t15-2j/todo", "Date": "2014-09-29T15:14:39Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { java.lang.System.err.println(\"No args provided exiting!...\"); java.lang.System.exit(1); }else if ((args.length) > 1) { id = args[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4080/buggy-version/src.main.java.com.idt.JsonApplication.java", "BodyUseAPI": [], "Fixed commit": "72ca6e164b3e6f241308ed1abb0d8343e7f0ffe7", "Url": "https://api.github.com/repos/ericsantosnascimento/Simple-Json-Parser", "Date": "2016-11-27T00:07:03Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args[0].equals(\"0\")) || (args[0].equals(\"1\"))) { json = (args[0].equals(\"0\")) ? com.idt.JsonApplication.BUSINESS_JSON : com.idt.JsonApplication.SHOPS_JSON; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4080/buggy-version/src.main.java.com.idt.JsonApplication.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "72ca6e164b3e6f241308ed1abb0d8343e7f0ffe7", "Url": "https://api.github.com/repos/ericsantosnascimento/Simple-Json-Parser", "Date": "2016-11-27T00:07:03Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isSIM2Ready) && (i == 1)) { SubId[i] = subInfo.getSubscriptionId(); i++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6127/buggy-version/app.src.main.java.com.android.systemui.smartnet.SmartNetCoreDualSim.java", "BodyUseAPI": [], "Fixed commit": "edb2e729b6fd2505af95e6c0c4257578f983410c", "Url": "https://api.github.com/repos/unix3dgforce/SmartNet2", "Date": "2017-07-28T11:45:00Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSIM2Ready) { SubId[(i + 1)] = subInfo.getSubscriptionId(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6127/buggy-version/app.src.main.java.com.android.systemui.smartnet.SmartNetCoreDualSim.java", "BodyUseAPI": [], "Fixed commit": "edb2e729b6fd2505af95e6c0c4257578f983410c", "Url": "https://api.github.com/repos/unix3dgforce/SmartNet2", "Date": "2017-07-28T11:45:00Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isSIM1Ready) && (i == 0)) { SubId[i] = subInfo.getSubscriptionId(); i++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6127/buggy-version/app.src.main.java.com.android.systemui.smartnet.SmartNetCoreDualSim.java", "BodyUseAPI": [], "Fixed commit": "edb2e729b6fd2505af95e6c0c4257578f983410c", "Url": "https://api.github.com/repos/unix3dgforce/SmartNet2", "Date": "2017-07-28T11:45:00Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chunk.getWorld().getHighestBlockAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((block.getState()) instanceof org.bukkit.block.Chest) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7948/buggy-version/src.com.modcrafting.diablodrops.listeners.ChunkListener.java", "BodyUseAPI": [], "Fixed commit": "d06e8069295a730027306a918fe438e852e30e8c", "Url": "https://api.github.com/repos/deathmarine/DiabloDrops", "Date": "2012-12-01T04:23:00Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.wintastic.wincremental.tiles.Board.getTile(net.wintastic.lwjgl.Pair<java.lang.Integer>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((t.getCategory()) == (Tile.TileCategory.RESOURCE)) { switch (t) { case WOOD : GameManager.player.changeResource(Player.ResourceType.WOOD, java.math.BigInteger.ONE); break; case GOLD : GameManager.player.changeResource(Player.ResourceType.GOLD, java.math.BigInteger.ONE); break; } (resourceQuantities[p.first][p.second])--; if ((resourceQuantities[p.first][p.second]) == 0) tiles[p.first][p.second] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7398/buggy-version/src.net.wintastic.wincremental.tiles.Board.java", "BodyUseAPI": [], "Fixed commit": "0bc8c32d6d8a09317f64502282743d1866dc62cb", "Url": "https://api.github.com/repos/Nick359/wincremental", "Date": "2015-02-20T00:08:22Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pause) { pressedPausePlay(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9221/buggy-version/ProjectFiles.core.src.edu.chl.proximity.Models.ButtonsPanel.ButtonPanel.java", "BodyUseAPI": [], "Fixed commit": "160c69d0bf887e6517eb2a99a222bfb9a30a0b47", "Url": "https://api.github.com/repos/nahojjjen/OOP-Project-TowerDefence", "Date": "2015-04-23T09:30:28Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mipdata != null) { final int id = getId(); if ((mipdata.length) >= 2) { net.minecraft.client.renderer.texture.TextureUtil.allocateTextureImpl(id, this.miplevel, this.width, this.height, Client.mc.gameSettings.anisotropicFiltering); net.minecraft.client.renderer.texture.TextureUtil.uploadTextureMipmap(this.mipdata, this.width, this.height, 0, 0, false, false); }else if ((mipdata.length) >= 1) { net.minecraft.client.renderer.texture.TextureUtil.allocateTexture(id, this.width, this.height); net.minecraft.client.renderer.texture.TextureUtil.uploadTexture(id, mipdata[0], this.width, this.height); } this.mipdata = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4341/buggy-version/src.main.java.com.kamesuta.mc.signpic.image.DynamicImageTexture.java", "BodyUseAPI": ["net.minecraft.client.renderer.texture.TextureUtil.uploadTexture(int,int[],int,int)"], "Fixed commit": "4f7b8be24c980ded18ea64d1d6734431dd4d728b", "Url": "https://api.github.com/repos/Team-Fruit/SignPicture", "Date": "2017-01-28T17:14:08Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { return getSmartReceiptsApplication().getFlex().getString(getActivity(), id); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9049/buggy-version/SmartReceiptsLibrary.src.co.smartreceipts.android.fragments.WBListFragment.java", "BodyUseAPI": [], "Fixed commit": "1b7c6d184fb8bf70cd94c958359eb8b58920364b", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2014-07-26T15:31:10Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { return getSmartReceiptsApplication().getFlex().getString(getActivity(), id); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9049/buggy-version/SmartReceiptsLibrary.src.co.smartreceipts.android.fragments.WBFragment.java", "BodyUseAPI": [], "Fixed commit": "1b7c6d184fb8bf70cd94c958359eb8b58920364b", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2014-07-26T15:31:10Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(complete)) && (target.equals(position))) { complete = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1275/buggy-version/src.ru.spbau.opeykin.drunkard.game.objects.Policeman.java", "BodyUseAPI": [], "Fixed commit": "dad63f74d142aadd48bba7dd39818eb11cb2c79e", "Url": "https://api.github.com/repos/opeykin/Drunkard", "Date": "2012-05-19T14:41:39Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.gsonformat.intellij.config.Config.getInstant().getAnnotationStr().equals(Strings.autoValueAnnotation)) { filedSb.append(java.lang.String.format(\"public abstract %s %s() ; \", getClassFieldType(), filedName)); prentClass.add(mFactory.createMethodFromText(filedSb.toString(), prentClass)); }else { if (org.gsonformat.intellij.config.Config.getInstant().isFieldPrivateMode()) { filedSb.append(\"private \"); }else { filedSb.append(\"public \"); } filedSb.append(getClassFieldType()).append(\" \").append(filedName).append(\" ; \"); prentClass.add(mFactory.createFieldFromText(filedSb.toString(), prentClass)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7299/buggy-version/src.main.java.org.gsonformat.intellij.entity.InnerClassEntity.java", "BodyUseAPI": [], "Fixed commit": "bfe9662d0e1e40c42cc79c476d9c7f192a9000cf", "Url": "https://api.github.com/repos/gengjiawen/GsonFormat", "Date": "2016-10-28T08:37:47Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paramEntry.getKey().equals(InboundEndpointConstants.CONTENT_TYPE)) { if (paramEntry.getValue().equals(InboundEndpointConstants.APPLICATION_XML)) { executeSetValueCommand(org.wso2.developerstudio.eclipse.gmf.esb.diagram.custom.deserializer.INBOUND_ENDPOINT__CONTENT_TYPE, ContentType.XML); }else { executeSetValueCommand(org.wso2.developerstudio.eclipse.gmf.esb.diagram.custom.deserializer.INBOUND_ENDPOINT__CONTENT_TYPE, ContentType.JSON); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3801/buggy-version/plugins.org.wso2.developerstudio.eclipse.gmf.esb.diagram.src.org.wso2.developerstudio.eclipse.gmf.esb.diagram.custom.deserializer.InboundEndpointDeserializer.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.lang.String.equals(InboundEndpointConstants.APPLICATION_XML)"], "Fixed commit": "d0a52225647d58851fe3ccdaf43754c0160e1957", "Url": "https://api.github.com/repos/ThishaniLucas/devstudio-tooling-esb", "Date": "2017-11-27T09:56:39Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errorCallBack) != null) { errorCallBack.onError(response.message()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1651/buggy-version/app.src.main.java.com.lhc.nfc.network.HttpUtil.java", "BodyUseAPI": [], "Fixed commit": "1e01573607e6f31e905273dacb58cae1b9506976", "Url": "https://api.github.com/repos/lhc20040808/NfcDemo", "Date": "2017-09-10T10:47:01Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (theme != null) { this.inflater = android.view.LayoutInflater.from(new android.support.v7.view.ContextThemeWrapper(context, theme)); }else { this.inflater = android.view.LayoutInflater.from(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/387/buggy-version/src.main.java.org.fs.core.AbstractListAdapter.java", "BodyUseAPI": [], "Fixed commit": "9264acc508a92d1f500969e2d9cbf5ee7cf4dc93", "Url": "https://api.github.com/repos/droideveloper/MVPAndroid", "Date": "2016-07-13T11:51:42Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.util.Map.Entry<java.lang.String, com.fasterxml.jackson.databind.JsonNode>>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((inOutNode.getValue().getClass()) == (com.fasterxml.jackson.databind.node.ObjectNode.class)) { inputOutput.setDefaultVal(extractDefault(inOutNode.getValue())); }else if ((inOutNode.getValue().getClass()) == (com.fasterxml.jackson.databind.node.ArrayNode.class)) { for (com.fasterxml.jackson.databind.JsonNode key : inOutNode.getValue()) { inputOutput.addSourceID(stepIDFromSource(key.asText())); } }else { inputOutput.addSourceID(stepIDFromSource(inOutNode.getValue().asText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6794/buggy-version/src.main.java.org.commonwl.viewer.domain.CWLCollection.java", "BodyUseAPI": ["org.commonwl.viewer.domain.CWLElement.setDefaultVal(java.lang.String)", "inOutNode.getValue().getClass()", "org.commonwl.viewer.domain.CWLCollection.stepIDFromSource(inOutNode.getValue().asText())", "java.util.Map.Entry<java.lang.String, com.fasterxml.jackson.databind.JsonNode>.getValue()", "java.util.Map.Entry<java.lang.String, com.fasterxml.jackson.databind.JsonNode>.getValue()", "java.util.Map.Entry<java.lang.String, com.fasterxml.jackson.databind.JsonNode>.getValue()", "org.commonwl.viewer.domain.CWLCollection.extractDefault(inOutNode.getValue())", "java.util.Map.Entry<java.lang.String, com.fasterxml.jackson.databind.JsonNode>.getValue()", "org.commonwl.viewer.domain.CWLElement.addSourceID(java.lang.String)", "inOutNode.getValue().asText()"], "Fixed commit": "b508ff8217a6463436e60d4d640cba633203bca8", "Url": "https://api.github.com/repos/common-workflow-language/cwlviewer", "Date": "2017-02-02T13:20:55Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuffer.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((open > 0) && (java.lang.Character.isDigit(x.charAt((open - 1))))) { x.insert(open, '*'); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1602/buggy-version/src.hall.collin.christopher.dicexp.DiceXp.java", "BodyUseAPI": ["java.lang.StringBuffer.insert(int,char)"], "Fixed commit": "30ec4b8d7667e1f580d9f887b7a05081a4e82329", "Url": "https://api.github.com/repos/cyanobacteruim/DiceXp", "Date": "2013-07-29T12:54:27Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (1 == true) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2940/buggy-version/stadler_seibezeder_android.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "952dd792df648f960f7ef1ca92da73c75e56c5be", "Url": "https://api.github.com/repos/anikaseibezeder/Tools2017stadlerseibezeder", "Date": "2017-04-28T06:38:49Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (in != null) in.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1776/buggy-version/http.src.main.java.org.unfoldingword.tools.http.Request.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "416bc5ec6496fd7300b8b588b67e668f527440f8", "Url": "https://api.github.com/repos/unfoldingWord-dev/android-http", "Date": "2016-09-21T20:29:01Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.getValue()) == null) { throw new java.lang.RuntimeException(\"Dolphin Platform internal error: No model defined\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2371/buggy-version/java-core.src.main.java.com.canoo.dolphin.impl.InternalAttributesBean.java", "BodyUseAPI": [], "Fixed commit": "0f8f63602b05ccf2f255debf013f7fcb9fef8cfc", "Url": "https://api.github.com/repos/canoo/dolphin-platform", "Date": "2015-12-11T21:06:56Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPage) != null) { java.util.HashMap<java.lang.String, java.lang.Object> pageVariables = currentPage.getVariables(this); if (pageVariables != null) combinedVariables.putAll(pageVariables); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4353/buggy-version/src.com.oreilly.common.interaction.text.Interaction.java", "BodyUseAPI": [], "Fixed commit": "f4d83ceb6b642d0ce8756a3150f977180b6b0e9f", "Url": "https://api.github.com/repos/paul-oreilly/BukkitTools", "Date": "2012-08-27T15:08:57Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((runner.isSender()) && (!(runner.isSendThrough()))) { if ((file) != null) { try { runner.setOriginalSize(file.length()); } catch (org.waarp.common.command.exception.CommandAbstractException e) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8239/buggy-version/src.main.java.org.waarp.openr66.context.R66Session.java", "BodyUseAPI": ["org.waarp.openr66.database.data.DbTaskRunner.setOriginalSize(file.length())"], "Fixed commit": "c538d0370034265761b8dad52dce5df80a0e9d21", "Url": "https://api.github.com/repos/waarp/WaarpR66", "Date": "2013-10-05T18:25:53Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.dataObjectServiceProvider) == null) { this.dataObjectServiceProvider = com.catify.processengine.core.data.dataobjects.DataObjectSPI.getDataObjectServiceProvider(this.dataObjectServiceProviderIdSetting); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1244/buggy-version/src.main.java.com.catify.processengine.core.data.dataobjects.DataObjectService.java", "BodyUseAPI": [], "Fixed commit": "b43271878584080c0bcc22cd4c9ef1db349caddd", "Url": "https://api.github.com/repos/catify/bpmn-engine", "Date": "2013-01-22T09:43:33Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["es.eucm.ead.editor.view.widgets.layouts.LinearLayout.getChildren()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index < (children.size)) { com.badlogic.gdx.scenes.scene2d.Actor actor = children.get(index); centerScrollAt(actor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3798/buggy-version/editor.core.src.main.java.es.eucm.ead.editor.view.widgets.dragndrop.DraggableLinearLayout.java", "BodyUseAPI": ["com.badlogic.gdx.utils.SnapshotArray<com.badlogic.gdx.scenes.scene2d.Actor>.get(int)"], "Fixed commit": "063999e8976e53577c8f7e009074d99bb3524132", "Url": "https://api.github.com/repos/e-ucm/ead", "Date": "2014-07-17T13:15:17Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (piece == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8006/buggy-version/src.com.github.snnappie.armorhider.ArmorHider.java", "BodyUseAPI": [], "Fixed commit": "de099743aa501b63ab60be2215570cebfdf57f06", "Url": "https://api.github.com/repos/Snnappie/ArmorHider", "Date": "2013-03-29T22:17:51Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 0) { piece = com.github.snnappie.armorhider.ArmorHider.ArmorPiece.ALL; }else if ((args.length) == 1) { piece = com.github.snnappie.armorhider.commands.HideCommand.getArmorPieceFromString(args[0]); if (piece == null) { player.sendMessage((((org.bukkit.ChatColor.RED) + \"Invalid argument: \") + (args[0]))); return false; } if (!(checkHidePerms(player, piece, command))) { return true; } }else if ((args.length) == 2) { if ((args[0].equalsIgnoreCase(\"all\")) && (args[1].startsWith(\"-\"))) { piece = com.github.snnappie.armorhider.commands.HideCommand.getArmorPieceFromString(args[1].substring(1)); if (piece == null) { player.sendMessage((((org.bukkit.ChatColor.RED) + \"Invalid argument: \") + (args[1]))); return false; } if (!(checkHidePerms(player, ArmorPiece.ALL, command))) { return true; } switch (command) { case HIDEARMOR : plugin.hideArmor(player, ArmorPiece.ALL); plugin.showArmor(player, piece); break; case SHOWARMOR : plugin.showArmor(player, ArmorPiece.ALL); plugin.hideArmor(player, piece); break; case HIDEENCHANT : plugin.hideEnchantments(player, ArmorPiece.ALL); plugin.showEnchantments(player, piece); break; case SHOWENCHANT : plugin.showEnchantments(player, ArmorPiece.ALL); plugin.hideEnchantments(player, piece); break; } com.github.snnappie.armorhider.commands.HideCommand.informPlayer(player, command); return true; } if (args[1].startsWith(\"-\")) { return false; } if (!(player.hasPermission(ArmorHider.PERM_OTHER))) { player.sendMessage(((org.bukkit.ChatColor.RED) + \"You do not have permission to hide other players armor!\")); return true; } player = org.bukkit.Bukkit.getPlayer(args[0]); if (player == null) { sender.sendMessage((((org.bukkit.ChatColor.RED) + (args[0])) + \" is not online\")); return true; } piece = com.github.snnappie.armorhider.commands.HideCommand.getArmorPieceFromString(args[1]); if (piece == null) { sender.sendMessage((((org.bukkit.ChatColor.RED) + \"Invalid argument: \") + (args[1]))); return false; } if (!(checkHidePerms(player, piece, command))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8006/buggy-version/src.com.github.snnappie.armorhider.commands.HideCommand.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.startsWith(java.lang.String)", "org.bukkit.entity.Player.sendMessage((((org.bukkit.ChatColor.RED) + \"Invalid argument: \") + (args[1])))", "com.github.snnappie.armorhider.commands.HideCommand.getArmorPieceFromString(java.lang.String)", "com.github.snnappie.armorhider.commands.HideCommand.getArmorPieceFromString(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "org.bukkit.command.CommandSender.sendMessage((((org.bukkit.ChatColor.RED) + (args[0])) + \" is not online\"))", "com.github.snnappie.armorhider.commands.HideCommand.getArmorPieceFromString(java.lang.String)", "org.bukkit.command.CommandSender.sendMessage((((org.bukkit.ChatColor.RED) + \"Invalid argument: \") + (args[1])))", "java.lang.String.startsWith(java.lang.String)", "org.bukkit.entity.Player.sendMessage((((org.bukkit.ChatColor.RED) + \"Invalid argument: \") + (args[0])))", "org.bukkit.Bukkit.getPlayer(java.lang.String)"], "Fixed commit": "de099743aa501b63ab60be2215570cebfdf57f06", "Url": "https://api.github.com/repos/Snnappie/ArmorHider", "Date": "2013-03-29T22:17:51Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == null) return newCollection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/33/buggy-version/lang.src.main.java.net.openhft.lang.io.serialization.impl.CollectionMarshaller.java", "BodyUseAPI": [], "Fixed commit": "46118248ca8ec6c98f251796914115e7cf703b8d", "Url": "https://api.github.com/repos/OpenHFT/Java-Lang", "Date": "2014-12-24T20:32:55Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hashCode < (this.getFirstPreDecessor())) && (hashCode <= (this.getName()))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9007/buggy-version/Assignment1.src.Peer.java", "BodyUseAPI": [], "Fixed commit": "08cbc49708d7e1f6858a0ea1c646008c5f89080b", "Url": "https://api.github.com/repos/sphan/COMP3331", "Date": "2013-05-02T01:52:23Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.getName()) < (this.getFirstPreDecessor())) && ((this.getName()) < (this.getFirstSuccessor()))) { if (hashCode > (this.getName())) { if (hashCode < (this.getFirstPreDecessor())) return false; return true; }else if ((hashCode < (this.getFirstPreDecessor())) && (hashCode <= (this.getName()))) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9007/buggy-version/Assignment1.src.Peer.java", "BodyUseAPI": [], "Fixed commit": "08cbc49708d7e1f6858a0ea1c646008c5f89080b", "Url": "https://api.github.com/repos/sphan/COMP3331", "Date": "2013-05-02T01:52:23Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((previousCalendar.get(java.util.Calendar.YEAR)) != (currentCalendar.get(java.util.Calendar.YEAR))) { return true; }else { if ((previousCalendar.get(java.util.Calendar.MONTH)) != (currentCalendar.get(java.util.Calendar.MONTH))) { return true; }else { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2883/buggy-version/app.src.main.java.com.kiminonawa.mydiary.entries.entries.EntriesAdapter.java", "BodyUseAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Fixed commit": "6214c50466aa0f33f911d2c517fbed059c0c05db", "Url": "https://api.github.com/repos/DaPATHK/MyDiary", "Date": "2016-11-29T02:20:11Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (checkpoint != null) { for (int i = 0; i < (checkpoints.size()); i++) { if (checkpoints.get(i).getName().equals(checkpoint.getName())) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3991/buggy-version/app.src.main.java.nl.hs_hague.urbangame.model.Room.java", "BodyUseAPI": ["nl.hs_hague.urbangame.model.Checkpoint.getName()", "checkpoints.get(i).getName().equals(checkpoint.getName())"], "Fixed commit": "6d0251090a120650a356ce96ad293a057c153fa4", "Url": "https://api.github.com/repos/Vural-xx/UrbanGame", "Date": "2016-10-30T11:40:20Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (args != null) { java.util.Arrays.stream(args).forEach(( a) -> arguments.add(io.vertx.core.json.Json.encode(a))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2266/buggy-version/src.main.java.com.rapatao.vertx.eventbus.proxyhelper.EventBusPublishInvocationHandler.java", "BodyUseAPI": ["java.util.Arrays.stream(java.lang.Object[])", "java.util.stream.Stream<java.lang.Object>.forEach(java.util.function.Consumer<? super java.lang.Object>)"], "Fixed commit": "a8b0c34b29bfa3b37212c9c7f1d1cf3574b144e8", "Url": "https://api.github.com/repos/rapatao/vertx-eventbus-proxyhelper-java", "Date": "2016-11-23T00:40:35Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeType) != null) { ch.bfh.projekt1.sokoban.GameElementView gameElementView = ((ch.bfh.projekt1.sokoban.GameElementView) (e.getSource())); gameElementView.changeType(getActiveType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5500/buggy-version/src.main.java.ch.bfh.projekt1.sokoban.ProblemDesignArea.java", "BodyUseAPI": [], "Fixed commit": "8cb1c534b9d7a87d2d7dbde0af0d2bb87ee56765", "Url": "https://api.github.com/repos/schne5/ch.bfh.projekt1.sokoban", "Date": "2016-12-09T07:58:04Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedFriends.size()) > 0) { showGroupCreateDialog(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3780/buggy-version/app.src.main.java.com.CSC436.team_bubble_sort.lunchroll.FriendsListActivity.java", "BodyUseAPI": [], "Fixed commit": "c50f8a7581c1e1b14113836c9a4dec050d3de11c", "Url": "https://api.github.com/repos/CSC436-TeamBubbleSort/LunchRoll", "Date": "2015-11-05T08:58:24Z"},
{"Line": "=>728", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerSettings != null) && (!(playerSettings[playerId].isAvailable()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8600/buggy-version/jsettlers.logic.src.main.java.jsettlers.logic.map.loading.original.OriginalMapFileContentReader.java", "BodyUseAPI": [], "Fixed commit": "a4bdd6623b66d1f92da5026e050d664d103b07f6", "Url": "https://api.github.com/repos/gollum1001/settlers-remake", "Date": "2017-07-07T17:55:51Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.biojava3.structure.StructureIO.getStructure(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (structure.isCrystallographic()) { int foldType = sg.getAxisFoldType(transf2.getTransformId()); javax.vecmath.AxisAngle4d axisAngle = sg.getRotAxisAngle(transf2.getTransformId()); java.lang.System.out.println(((((\" \" + foldType) + \"-fold on axis \") + (java.lang.String.format(\"(%5.2f,%5.2f,%5.2f)\", axisAngle.x, axisAngle.y, axisAngle.z))) + screwStr)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4448/buggy-version/biojava3-structure.src.main.java.demo.DemoCrystalInterfaces.java", "BodyUseAPI": [], "Fixed commit": "da84e51f9de783ee472d9a0e88f1b46aa11b8acb", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2014-12-05T13:53:08Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapUI) != null) { mapUI.getMapView().postInvalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4308/buggy-version/Raddargruppen.src.raddar.controllers.MapCont.java", "BodyUseAPI": [], "Fixed commit": "cb8cb048760bd6dd48be9d2629694658861effd3", "Url": "https://api.github.com/repos/Grupp1/Raddargruppen", "Date": "2011-11-23T13:15:38Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Character.isDigit(typedChar)) || (java.lang.Character.isISOControl(typedChar))) { this.argument2.textboxKeyTyped(typedChar, keyCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9124/buggy-version/src.main.java.com.jlgm.pgen.client.gui.GuiParticleGenerator.java", "BodyUseAPI": ["net.minecraft.client.gui.GuiTextField.textboxKeyTyped(char,int)"], "Fixed commit": "eb6c71ddbe5d53a7b853f971988ca7aa5b6e0961", "Url": "https://api.github.com/repos/JoseluGames/ParticleGenerator", "Date": "2017-09-21T20:55:26Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<int[]>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((forbiddenListSize == 1) || ((forbiddenListSize > 1) && ((currDirection) != (alexsong.com.snake.GameActivity.DIRECTION.DOWN)))) { currDirection = alexsong.com.snake.GameActivity.DIRECTION.UP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2358/buggy-version/app.src.main.java.alexsong.com.snake.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "582fe1e390293c2196e5b558733fb6d440e147c5", "Url": "https://api.github.com/repos/alexsong93/Snake", "Date": "2016-09-23T00:05:30Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<int[]>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((forbiddenListSize == 1) || ((forbiddenListSize > 1) && ((currDirection) != (alexsong.com.snake.GameActivity.DIRECTION.RIGHT)))) { currDirection = alexsong.com.snake.GameActivity.DIRECTION.LEFT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2358/buggy-version/app.src.main.java.alexsong.com.snake.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "582fe1e390293c2196e5b558733fb6d440e147c5", "Url": "https://api.github.com/repos/alexsong93/Snake", "Date": "2016-09-23T00:05:30Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<int[]>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((forbiddenListSize == 1) || ((forbiddenListSize > 1) && ((currDirection) != (alexsong.com.snake.GameActivity.DIRECTION.UP)))) { currDirection = alexsong.com.snake.GameActivity.DIRECTION.DOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2358/buggy-version/app.src.main.java.alexsong.com.snake.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "582fe1e390293c2196e5b558733fb6d440e147c5", "Url": "https://api.github.com/repos/alexsong93/Snake", "Date": "2016-09-23T00:05:30Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<int[]>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((forbiddenListSize == 1) || ((forbiddenListSize > 1) && ((currDirection) != (alexsong.com.snake.GameActivity.DIRECTION.LEFT)))) { currDirection = alexsong.com.snake.GameActivity.DIRECTION.RIGHT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2358/buggy-version/app.src.main.java.alexsong.com.snake.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "582fe1e390293c2196e5b558733fb6d440e147c5", "Url": "https://api.github.com/repos/alexsong93/Snake", "Date": "2016-09-23T00:05:30Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mMainActivityView.get().getContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (my.home.lehome.helper.LocalMsgHelper.canUseLocalMessageService(context)) { if ((!old_local_msg_state) || (!(old_subscribe_address.equals(my.home.lehome.helper.MessageHelper.getLocalServerSubscribeURL(context))))) { android.content.Intent i = new android.content.Intent(\"my.home.lehome.service.LocalMessageService\"); context.bindService(i, mConnection, Context.BIND_AUTO_CREATE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1717/buggy-version/app.src.main.java.my.home.lehome.mvp.presenters.MainActivityPresenter.java", "BodyUseAPI": ["my.home.lehome.helper.MessageHelper.getLocalServerSubscribeURL(android.content.Context)", "java.lang.String.equals(my.home.lehome.helper.MessageHelper.getLocalServerSubscribeURL(context))", "android.content.Context.bindService(android.content.Intent,android.content.ServiceConnection,Context.BIND_AUTO_CREATE)"], "Fixed commit": "a2b65da84ca033446a9bf011b6f7d5747d3db995", "Url": "https://api.github.com/repos/legendmohe/LEHomeMobile_android", "Date": "2015-04-16T07:21:43Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage()) != null) { errMsg = e.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1069/buggy-version/src.main.java.ledger.user_interface.ui_controllers.IUIController.java", "BodyUseAPI": ["java.lang.Exception.getMessage()"], "Fixed commit": "aa78ffa0308c545c418ef1d32c781eb448bed124", "Url": "https://api.github.com/repos/Ledger-Software/Ledger", "Date": "2016-10-30T17:46:03Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3904/buggy-version/kenin-java.src.main.java.net.kikuchy.kenin.result.ErrorReason.java", "BodyUseAPI": [], "Fixed commit": "0b235b5efa0d3cc296a11ae1fd62d92e6c96074a", "Url": "https://api.github.com/repos/kikuchy/kenin", "Date": "2016-02-11T16:23:56Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof net.kikuchy.kenin.result.ErrorReason) { net.kikuchy.kenin.result.ErrorReason reason = ((net.kikuchy.kenin.result.ErrorReason) (obj)); return reason.getReason().equals(getReason()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3904/buggy-version/kenin-java.src.main.java.net.kikuchy.kenin.result.ErrorReason.java", "BodyUseAPI": [], "Fixed commit": "0b235b5efa0d3cc296a11ae1fd62d92e6c96074a", "Url": "https://api.github.com/repos/kikuchy/kenin", "Date": "2016-02-11T16:23:56Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == obj) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3904/buggy-version/kenin-java.src.main.java.net.kikuchy.kenin.result.ErrorReason.java", "BodyUseAPI": [], "Fixed commit": "0b235b5efa0d3cc296a11ae1fd62d92e6c96074a", "Url": "https://api.github.com/repos/kikuchy/kenin", "Date": "2016-02-11T16:23:56Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((placeholder) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1976/buggy-version/src.main.java.com.amadornes.framez.movement.MovingBlock.java", "BodyUseAPI": [], "Fixed commit": "3939ff3d23f5d9a59358ee527e64801e03699048", "Url": "https://api.github.com/repos/amadornes/Framez", "Date": "2014-10-27T21:19:18Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nolane.stacks.ui.Stacks.uriToStack(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (1 == (getContext().getContentResolver().update(uriToStack, values, null, null))) { com.nolane.stacks.utils.PreferencesUtils.notifyDeleted(getActivity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/491/buggy-version/app.src.main.java.com.nolane.stacks.ui.AllCardsFragment.java", "BodyUseAPI": [], "Fixed commit": "c458e91ef5a6b979d4d26ac8105d07301cb1b553", "Url": "https://api.github.com/repos/NolanRus/stacks", "Date": "2015-07-24T17:43:32Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hierarchy) != null) hierarchy.actionClear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6488/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.define.ViewAttributeTransformation.java", "BodyUseAPI": [], "Fixed commit": "160229e22e027d66bc62e0fe61c1684b3808152d", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-12-04T10:55:29Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((s.getBiddingDeadline()) == null) || ((s.getServiceDeadline()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5149/buggy-version/src.main.java.etu.upmc.fr.annotations.ServiceValidator.java", "BodyUseAPI": [], "Fixed commit": "48fcc460bc632d123573bd16e8c86949d54a4132", "Url": "https://api.github.com/repos/dsiragusa/dar_project", "Date": "2015-11-14T21:27:07Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((games.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8717/buggy-version/app.src.main.java.polymorphs.a301.f17.cs414.thexgame.AppBackend.Driver.java", "BodyUseAPI": [], "Fixed commit": "c9ac11b91a89f4eb745c4e5f21a93f5864c4672b", "Url": "https://api.github.com/repos/Stevenc0211/cs414-f17-301-Polymorphs", "Date": "2017-11-13T09:58:51Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Arrays.asList(getListValues(\"NPCS\", de.alphahelix.npcaddon.files.LocationFile.RankingNPC[].class)).contains(new de.alphahelix.npcaddon.files.LocationFile.RankingNPC(loc, rank))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2984/buggy-version/src.main.java.de.alphahelix.npcaddon.files.LocationFile.java", "BodyUseAPI": [], "Fixed commit": "b52ca1b4d6f865228cf6b3ead249efb579844f8d", "Url": "https://api.github.com/repos/AlphaHelixDev/UHCNPCAddon", "Date": "2017-06-18T20:15:33Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.errai.marshalling.server.JSONStreamDecoder.decode(request.getInputStream())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.isNull()) { return java.util.Collections.<org.jboss.errai.bus.client.api.messaging.Message>emptyList(); }else { throw new java.lang.RuntimeException(\"bad payload\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8488/buggy-version/errai-bus.src.main.java.org.jboss.errai.bus.server.io.MessageFactory.java", "BodyUseAPI": [], "Fixed commit": "373904fe0cab50894e89da49e451ab8f265e9be2", "Url": "https://api.github.com/repos/edewit/errai", "Date": "2013-06-07T17:38:06Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.Item.getItemFromBlock(net.minecraft.block.Block)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(item.getHasSubtypes())) { meta = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6658/buggy-version/src.main.java.mcjty.theoneprobe.apiimpl.DefaultProbeInfoProvider.java", "BodyUseAPI": [], "Fixed commit": "866e7f65f2e163994187348298737ff2a537f5f1", "Url": "https://api.github.com/repos/McJtyMods/TheOneProbe", "Date": "2016-05-18T11:52:17Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((time.equals(java.util.concurrent.TimeUnit.MINUTES)) && (publisherId)) && (advertiserId)) && (adUnit)) { com.datatorrent.demos.dimensions.ads.AdInfo.logger.debug(\"Has desired dimensional computation\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5748/buggy-version/demos.dimensions.src.main.java.com.datatorrent.demos.dimensions.ads.AdInfo.java", "BodyUseAPI": [], "Fixed commit": "5cb97609a9bb4ba63fff9cc689962f9fe9554d83", "Url": "https://api.github.com/repos/apache/apex-malhar", "Date": "2015-03-05T18:47:15Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (section.contains(\"r/\")) { tempResponse = imgurPaginationApi.getImgurPage(section, sortReddit, currentPage); }else { tempResponse = imgurPaginationApi.getImgurPage(section, sortImgur, currentPage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1064/buggy-version/jimgur.src.main.java.worker8.com.github.jimgur.imgur.paging_api.ImgurPaginator.java", "BodyUseAPI": ["worker8.com.github.jimgur.imgur.paging_api.ImgurPaginationApi.getImgurPage(java.lang.String,java.lang.String,int)", "worker8.com.github.jimgur.imgur.paging_api.ImgurPaginationApi.getImgurPage(java.lang.String,java.lang.String,int)"], "Fixed commit": "beea3ee35aefbacd58b0682575e2ec11f69972da", "Url": "https://api.github.com/repos/worker8/Blue-unofficial-Imgur-reader", "Date": "2016-01-15T02:52:13Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object instanceof com.github.jotask.tusk.engine.online.util.Network.Character) { client.receivedCharacter(((com.github.jotask.tusk.engine.online.util.Network.Character) (object))); }else if (object instanceof com.github.jotask.tusk.engine.online.util.Network.Disconnected) { client.disconnected(((com.github.jotask.tusk.engine.online.util.Network.Disconnected) (object))); }else if (object instanceof com.github.jotask.tusk.engine.online.util.Network.Characters) { client.receivedCharacters(((com.github.jotask.tusk.engine.online.util.Network.Characters) (object)).characters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4587/buggy-version/core.src.com.github.jotask.tusk.engine.online.client.ClientListener.java", "BodyUseAPI": [], "Fixed commit": "ffdfb3bbca5fe36db68852921f14f0cd364919d2", "Url": "https://api.github.com/repos/jotask/Tusk", "Date": "2016-05-27T20:59:50Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(getNode(initialPos).pass)) || (!(getNode(finalPos).pass))) return shortestPath;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2963/buggy-version/src.PathFinder.java", "BodyUseAPI": [], "Fixed commit": "4d0c8889ae9f44be54419eed5901bdf3f5f81ea0", "Url": "https://api.github.com/repos/UdevCommunity/URivals-RunMouseRun", "Date": "2017-07-06T12:27:11Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bindingResult.hasErrors()) { return \"addNote\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1936/buggy-version/src.main.java.app.controller.NoteBookController.java", "BodyUseAPI": [], "Fixed commit": "10baa8f312d90c47dcf0d1aba44c7fdc617dbf58", "Url": "https://api.github.com/repos/fadeevao/NoteManager", "Date": "2016-02-21T22:02:31Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((info_split == null) || ((info_split.length) != 2)) throw new java.lang.RuntimeException(\"md5 checksum file not found or written incorrectly\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4475/buggy-version/src.main.java.water.api.RPackage.java", "BodyUseAPI": [], "Fixed commit": "642c7c66a4cd94d33bf7dac8bf3dac46238e233e", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-01-24T00:47:31Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (interceptorNames == null) { interceptorNames = madvocConfig.getDefaultInterceptors(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7090/buggy-version/jodd-madvoc.src.main.java.jodd.madvoc.component.ActionMethodParser.java", "BodyUseAPI": [], "Fixed commit": "969a1a10dd545ae4b2303fab5725fb9c6aeda94a", "Url": "https://api.github.com/repos/oblac/jodd", "Date": "2013-12-01T22:28:11Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nextToken.isScalarValue()) { result.add(new org.apache.avro.io.JsonElement(nextToken, traverse.getText())); }else { result.add(new org.apache.avro.io.JsonElement(nextToken)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8705/buggy-version/lang.java.avro.src.main.java.org.apache.avro.io.ExtendedJsonDecoder.java", "BodyUseAPI": ["java.util.List<org.apache.avro.io.JsonElement>.add(org.apache.avro.io.JsonElement)", "java.util.List<org.apache.avro.io.JsonElement>.add(org.apache.avro.io.JsonElement)"], "Fixed commit": "f2c3e5df5b01d0322bea6d21395f6e7b018800a8", "Url": "https://api.github.com/repos/zolyfarkas/avro", "Date": "2015-05-07T19:10:02Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getUserByEmail(visitante.getEmail())) != null) { return getUserByEmail(visitante.getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7511/buggy-version/src.java.encontreoferta.api.facade.VoucherFacade.java", "BodyUseAPI": ["encontreoferta.api.model.Visitante.getEmail()", "encontreoferta.api.facade.VoucherFacade.getUserByEmail(visitante.getEmail())"], "Fixed commit": "6726c995c955ebd66ae8f1a1edae4c844ac0a367", "Url": "https://api.github.com/repos/LeonardoLpds/api-encontreoferta", "Date": "2015-06-13T01:10:50Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (h.internalEconomy()) { housesToRemove.add(h); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1626/buggy-version/org.game.org.game.Model.java", "BodyUseAPI": [], "Fixed commit": "7b6a8ca3fcd2085c6e6e91d4d25ffa5551e68db0", "Url": "https://api.github.com/repos/NathanHull/CIS350Game", "Date": "2016-10-13T19:54:40Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<io.netty.channel.Channel, java.util.Set<java.lang.String>>.remove(io.netty.channel.Channel)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (topicSet != null) { for (java.lang.String topic : topicSet) { com.mqtt.io.tool.ChannelPool.removeTopic(chn, topic); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5114/buggy-version/src.main.java.com.mqtt.io.tool.ChannelPool.java", "BodyUseAPI": [], "Fixed commit": "57a364feed1f199a7d41926acd1843493db334ea", "Url": "https://api.github.com/repos/yongboy/mqtt.io", "Date": "2014-05-04T02:15:50Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((status) == (STATUS.OPEN)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5788/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.OLocalPaginatedStorage.java", "BodyUseAPI": [], "Fixed commit": "876254d91ee0d3b1909aa1a3c281f73bfccd2c5e", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-07-30T20:12:16Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((year.length()) > 4) year = year.substring(0, 4);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2983/buggy-version/src.main.java.edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "29b022d2f9823596447c6e0f984ea536b830e724", "Url": "https://api.github.com/repos/forkunited/micro-mid", "Date": "2016-02-09T18:18:51Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dateYear.length()) > 4) dateYear = dateYear.substring(0, 4);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2983/buggy-version/src.main.java.edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "29b022d2f9823596447c6e0f984ea536b830e724", "Url": "https://api.github.com/repos/forkunited/micro-mid", "Date": "2016-02-09T18:18:51Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["input.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.sleepingdragon.joko4nen.nosmoke.custom.InputTextCheck.inputTextCheck(text))) { android.widget.Toast.makeText(this, \"\u6587\u5b57\u3092\u304d\u3061\u3093\u3068\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\uff01\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8101/buggy-version/app.src.main.java.com.sleepingdragon.joko4nen.nosmoke.team_create.TeamCreateActivity.java", "BodyUseAPI": [], "Fixed commit": "7a290b61d26eb6d68e425dd1ccf9dcd4e353c5f3", "Url": "https://api.github.com/repos/SleepingDragon-joukou4/kinendan-android", "Date": "2015-07-08T07:00:41Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.sleepingdragon.joko4nen.nosmoke.custom.InputTextCheck.inputTextCheck(teamname)) && (com.sleepingdragon.joko4nen.nosmoke.custom.InputTextCheck.inputTextCheck(batsugame))) { TeamIdCreate(); TeamInsert(); }else { android.widget.Toast.makeText(this, \"\u6587\u5b57\u3092\u304d\u3061\u3093\u3068\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\uff01\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8101/buggy-version/app.src.main.java.com.sleepingdragon.joko4nen.nosmoke.teamsetting.TeamSettingActivity.java", "BodyUseAPI": [], "Fixed commit": "7a290b61d26eb6d68e425dd1ccf9dcd4e353c5f3", "Url": "https://api.github.com/repos/SleepingDragon-joukou4/kinendan-android", "Date": "2015-07-08T07:00:41Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (kafkaConfiguration.isKerberos()) { javax.security.auth.login.LoginContext lc = new javax.security.auth.login.LoginContext(\"Client\"); lc.login(); subject = lc.getSubject(); }else { javax.security.auth.Subject.getSubject(java.security.AccessController.getContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5737/buggy-version/src.main.java.com.symantec.cpe.analytics.kafka.KafkaConsumerOffsetUtil.java", "BodyUseAPI": [], "Fixed commit": "30bd88320ad3f4bf3cb95210fd18626ce5c298e3", "Url": "https://api.github.com/repos/srotya/kafka-lag-monitor", "Date": "2017-02-20T18:29:28Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((users.getProperty(user)) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3468/buggy-version/Eclipse.src.protocol.UserTools.java", "BodyUseAPI": [], "Fixed commit": "eecf6955c7046212771c7edc94e5d1ee3e57fbb1", "Url": "https://api.github.com/repos/dwildmark/bArduino", "Date": "2015-04-16T13:22:05Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (skuSalePrice == null) { skuSalePrice = getSku().getSalePrice(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7538/buggy-version/core.broadleaf-framework.src.main.java.org.broadleafcommerce.core.order.domain.DiscreteOrderItemImpl.java", "BodyUseAPI": [], "Fixed commit": "944d8c5274ac9b5f46abb09e9d3e9aca65cd000d", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2015-04-24T19:21:11Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gem.indo.dooit.helpers.Persisted.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4749/buggy-version/app.src.main.java.org.gem.indo.dooit.views.onboarding.ProfileImageActivity.java", "BodyUseAPI": [], "Fixed commit": "dace3e53914279a5ffe2a5e667eb0621e87027af", "Url": "https://api.github.com/repos/praekeltfoundation/gem-bbb-indo", "Date": "2017-09-04T13:55:23Z"},
{"Line": "=>1175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((split.length) > 1) { if (split[0].equals(\"org.apache.cassandra.db.marshal.TimestampType\")) { keyType = org.apache.cassandra.cql.jdbc.TypesMap.getTypeForComparator(\"org.apache.cassandra.db.marshal.DateType\"); }else { keyType = org.apache.cassandra.cql.jdbc.TypesMap.getTypeForComparator(split[0]); } if (split[1].equals(\"org.apache.cassandra.db.marshal.TimestampType\")) { validator = org.apache.cassandra.cql.jdbc.TypesMap.getTypeForComparator(\"org.apache.cassandra.db.marshal.DateType\"); }else { validator = org.apache.cassandra.cql.jdbc.TypesMap.getTypeForComparator(split[1]); } }else { if (split[0].equals(\"org.apache.cassandra.db.marshal.TimestampType\")) { validator = org.apache.cassandra.cql.jdbc.TypesMap.getTypeForComparator(\"org.apache.cassandra.db.marshal.DateType\"); }else { validator = org.apache.cassandra.cql.jdbc.TypesMap.getTypeForComparator(split[0]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2075/buggy-version/src.main.java.org.apache.cassandra.cql.jdbc.CassandraResultSet.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.apache.cassandra.cql.jdbc.TypesMap.getTypeForComparator(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.apache.cassandra.cql.jdbc.TypesMap.getTypeForComparator(java.lang.String)", "org.apache.cassandra.cql.jdbc.TypesMap.getTypeForComparator(java.lang.String)"], "Fixed commit": "eff6bbd2586ce7e1f4f330b4328d40c9dd602993", "Url": "https://api.github.com/repos/esarjeant/twig", "Date": "2015-01-19T14:10:24Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (succ()) { hasNextCalled = true; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8320/buggy-version/quasar-core.src.main.java.co.paralleluniverse.strands.queues.SingleConsumerLinkedArrayQueue.java", "BodyUseAPI": [], "Fixed commit": "e59dab01ff76aa284349cd073be73f3a3f6b6791", "Url": "https://api.github.com/repos/puniverse/quasar", "Date": "2015-03-17T15:35:24Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((it.alcacoop.backgammon.logic.MatchState.matchType) == 0) GnuBackgammon.Instance.rec.saveJson(((GnuBackgammon.Instance.fname) + \"json\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5528/buggy-version/core.src.it.alcacoop.backgammon.fsm.GameFSM.java", "BodyUseAPI": [], "Fixed commit": "2243ac7ef2c5b99f27f3d53d098c3d04c1520074", "Url": "https://api.github.com/repos/alcacoop/it.alcacoop.backgammon", "Date": "2015-07-09T10:08:51Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leapDelayCur) > 0) { (leapDelayCur)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7812/buggy-version/src.main.java.com.corosus.monsters.ai.tasks.TaskAntiAir.java", "BodyUseAPI": [], "Fixed commit": "fca8bb5b2334b6148dff55dcc1291552da715d8b", "Url": "https://api.github.com/repos/Corosauce/HostileWorlds_Monsters", "Date": "2016-03-09T03:37:20Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.juls.persist.HibernateUtil.sessionFactory) == null) return com.juls.persist.HibernateUtil.createSessionFactory();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7148/buggy-version/juls-parent.juls-persist.src.main.java.com.juls.persist.HibernateUtil.java", "BodyUseAPI": [], "Fixed commit": "60de5933a7fb9b34d53b0e499e5b52c58f0c3431", "Url": "https://api.github.com/repos/maxml/JULS", "Date": "2014-10-08T22:00:08Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentDegree) < (-(degrees))) || ((currentDegree) > (degrees))) { currentDegree = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7792/buggy-version/src.main.view.RotationAnimation.java", "BodyUseAPI": [], "Fixed commit": "87be5c3c38bf33d1c49356dd0df4ce9cfa9ebe7c", "Url": "https://api.github.com/repos/COP4331-OOP-Project/Pandamonium", "Date": "2017-03-02T19:58:55Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (foundMethod != null) { java.lang.reflect.Type[] parameterTypes = foundMethod.getGenericParameterTypes(); boolean valid = true; for (int i = 0; (i < (parameterTypes.length)) && valid; i++) { if ((parameterTypes[i]) instanceof java.lang.Class) { valid = args[i].getClazz().getName().equals(((java.lang.Class) (parameterTypes[i])).getName()); } } if (!valid) { foundMethod = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6460/buggy-version/src.main.java.org.walkmod.override.visitors.OverrideVisitor.java", "BodyUseAPI": ["java.lang.reflect.Method.getGenericParameterTypes()"], "Fixed commit": "0830e6e6d32620c873372b8cf2ba2c8ba8750696", "Url": "https://api.github.com/repos/walkmod/walkmod-override-plugin", "Date": "2016-03-13T16:56:35Z"},
{"Line": "=>820", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mConfigurationLocked.isInMemoryDb())) { io.requery.android.database.sqlite.SQLiteDatabase.ensureFile(mConfigurationLocked.path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1054/buggy-version/sqlite-android.src.main.java.io.requery.android.database.sqlite.SQLiteDatabase.java", "BodyUseAPI": ["io.requery.android.database.sqlite.SQLiteDatabase.ensureFile(mConfigurationLocked.path)"], "Fixed commit": "c80782664bb57120d331f626f87a7e1972cbf403", "Url": "https://api.github.com/repos/requery/sqlite-android", "Date": "2016-04-20T02:59:20Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((it.angelic.soulissclient.model.SoulissTag) (toRename)).getTagId()) < 2) { android.widget.Toast.makeText(cont, \"Can't remove default Favourite Tag\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4306/buggy-version/SoulissApp.src.main.java.it.angelic.soulissclient.helpers.AlertDialogHelper.java", "BodyUseAPI": [], "Fixed commit": "5b357f98c82130faca4f3a76eeb972ea415bd518", "Url": "https://api.github.com/repos/souliss/soulissapp", "Date": "2015-08-26T14:52:15Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.dao.DataIntegrityViolationException.getMostSpecificCause()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (realCause.getMessage().contains(\"account_no_UNIQUE\")) { final java.lang.String accountNo = command.stringValueOfParameterNamed(\"accountNo\"); throw new org.mifosplatform.infrastructure.core.exception.PlatformDataIntegrityException(\"error.msg.client.duplicate.accountNo\", ((\"Client with accountNo `\" + accountNo) + \"` already exists\"), \"accountNo\", accountNo); }else if (realCause.getMessage().contains(\"mobile_no\")) { final java.lang.String mobileNo = command.stringValueOfParameterNamed(\"mobileNo\"); throw new org.mifosplatform.infrastructure.core.exception.PlatformDataIntegrityException(\"error.msg.client.duplicate.mobileNo\", ((\"Client with mobileNo `\" + mobileNo) + \"` already exists\"), \"mobileNo\", mobileNo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5305/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.client.service.ClientWritePlatformServiceJpaRepositoryImpl.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.Throwable.getMessage()"], "Fixed commit": "f523339ca0c08e07b5ada8dde6b3757737959548", "Url": "https://api.github.com/repos/lingalamadhukar/mifosx", "Date": "2014-01-27T08:06:14Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tern.server.nodejs.NodejsTernServer.getText(jsonObject.get(\"file\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tern.utils.StringUtils.isEmpty(file)) { file = getText(jsonObject.get(\"origin\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3240/buggy-version/core.tern.server.nodejs.src.tern.server.nodejs.NodejsTernServer.java", "BodyUseAPI": [], "Fixed commit": "5852e01afd678569ca4c9a93cd9b603ef37ee292", "Url": "https://api.github.com/repos/piotrtomiak/tern.java", "Date": "2014-12-03T21:05:55Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((normal.lengthSquared()) > 1.0E-5) { while (b.collidesWith(collidingFaces)) b.increasePosition(normal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7688/buggy-version/src.physics.engine.PhysicsEngine.java", "BodyUseAPI": ["entities.playable.Ball.increasePosition(org.lwjgl.util.vector.Vector3f)"], "Fixed commit": "3f546cc900739c3bde986fdfb219cd83ce20ef2d", "Url": "https://api.github.com/repos/swengeler/MarksMarvelousMinigolf", "Date": "2016-06-21T15:40:02Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.fenixframework.dml.Slot.getSlotType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (vt.isEnum()) { print(out, \"JSONConverter.getEnumFromJSON(\"); print(out, vt.getDomainName()); print(out, \".class, json);\"); }else if (vt.isBuiltin()) { print(out, ((\"JSONConverter.get\" + (capitalize(vt.getDomainName()))) + \"FromJSON(json);\")); }else { print(out, ValueTypeSerializationGenerator.SERIALIZER_CLASS_FULL_NAME); print(out, \".\"); print(out, ValueTypeSerializationGenerator.DESERIALIZATION_METHOD_PREFIX); print(out, vt.getDomainName()); print(out, \"(\"); print(out, ((\"JSONConverter.get\" + (capitalize(vt.getExternalizationElements().get(0).getType().getDomainName()))) + \"FromJSON(json));\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3532/buggy-version/backend.jvstm-common.code-generator.src.main.java.pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.java", "BodyUseAPI": ["vt.getExternalizationElements().get(int)", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,vt.getDomainName())", "pt.ist.fenixframework.dml.ValueType.getDomainName()", "pt.ist.fenixframework.dml.ValueType.getExternalizationElements()", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,vt.getDomainName())", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.capitalize(vt.getExternalizationElements().get(0).getType().getDomainName())", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,((\"JSONConverter.get\" + (capitalize(vt.getExternalizationElements().get(0).getType().getDomainName()))) + \"FromJSON(json));\"))", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,((\"JSONConverter.get\" + (capitalize(vt.getDomainName()))) + \"FromJSON(json);\"))", "vt.getExternalizationElements().get(0).getType().getDomainName()", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.capitalize(vt.getDomainName())", "pt.ist.fenixframework.dml.ValueType.isBuiltin()", "pt.ist.fenixframework.dml.ValueType.getDomainName()", "pt.ist.fenixframework.dml.ValueType.getDomainName()", "vt.getExternalizationElements().get(0).getType()"], "Fixed commit": "e2806aa498e53db6168fd1d851fc319452975b6e", "Url": "https://api.github.com/repos/jcarvalho/fenix-framework", "Date": "2013-06-17T14:14:19Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.kubatatami.richedittext.utils.ComposingSpanFactory.1.findComposing(java.lang.CharSequence)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (span != null) { int flags = ((android.text.Spannable) (tb)).getSpanFlags(span); removeSpan(span); boolean modified = replaceInternal((start + offset), end, tb, (tbstart + offset), tbend); if (!modified) { setSpan(span, start, (start + tbend), flags); } }else { replaceInternal((start + offset), end, tb, (tbstart + offset), tbend); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7826/buggy-version/lib.src.main.java.com.github.kubatatami.richedittext.utils.ComposingSpanFactory.java", "BodyUseAPI": ["com.github.kubatatami.richedittext.utils.ComposingSpanFactory.1.setSpan(java.lang.Object,int,int,int)", "com.github.kubatatami.richedittext.utils.ComposingSpanFactory.1.removeSpan(java.lang.Object)", "java.lang.CharSequence.getSpanFlags(java.lang.Object)"], "Fixed commit": "cf4ae7902fda92bae6697a1573374a11f7123efc", "Url": "https://api.github.com/repos/kubatatami/RichEditText", "Date": "2017-03-13T13:07:54Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCompleteSolution()) { Solutions.add(solution); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1547/buggy-version/src.dlx.DLX.java", "BodyUseAPI": [], "Fixed commit": "99ec5ef168c73652f6071ffbd506786e9f322bc8", "Url": "https://api.github.com/repos/Deyuan/TilingPuzzle", "Date": "2014-11-28T20:37:20Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((input.getTagCompound()) == null) && ((output.getTagCompound()) == null)) { return input.isItemEqual(output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1576/buggy-version/src.main.java.getfluxed.fluxedcrystals.util.NBTHelper.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.isItemEqual(net.minecraft.item.ItemStack)"], "Fixed commit": "7661f4dcf8b827b5c15a4934ce9ac3ad16f13a6f", "Url": "https://api.github.com/repos/jaredlll08/Fluxed-Crystals-3", "Date": "2016-08-03T14:25:55Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) { com.google.android.gms.maps.CameraUpdate showAllJobs = com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(bounds, (height / 2), (width / 2), 10); map.animateCamera(showAllJobs); }else { android.widget.Toast.makeText(this, \"No reminders to view.\", Toast.LENGTH_SHORT).show(); getLocationButton(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/285/buggy-version/app.src.main.java.aniruddhabera.com.locationbasedreminder.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "29214e18a4bea1a6d0a57bc5db5352d0b42e3fab", "Url": "https://api.github.com/repos/oni96/Remember", "Date": "2017-09-05T11:23:41Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (emailList == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/220/buggy-version/Shared.src.com.google.paco.shared.model.ExperimentDAO.java", "BodyUseAPI": [], "Fixed commit": "c39354b2f9d255927591a580b8d2d9b45a105137", "Url": "https://api.github.com/repos/google/paco", "Date": "2013-08-05T19:48:04Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler) != null) { handler.removeCallbacksAndMessages(null); handler = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6483/buggy-version/multipleimageselect.src.main.java.com.darsh.multipleimageselect.activities.ImageSelectActivity.java", "BodyUseAPI": [], "Fixed commit": "06909443f68e942df203d7880a24fc6bea93a1ff", "Url": "https://api.github.com/repos/BassDay/MultipleImageSelect", "Date": "2016-04-08T01:51:36Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message instanceof org.kurator.akka.messages.EndOfStream) { org.kurator.akka.Contract.requires(state, org.kurator.akka.KuratorActor.ActorFSM.INITIALIZED, org.kurator.akka.KuratorActor.ActorFSM.STARTED); onEndOfStream(((org.kurator.akka.messages.EndOfStream) (message))); }else if (message instanceof org.kurator.akka.messages.FutureComplete) { org.kurator.akka.Contract.requires(state, org.kurator.akka.KuratorActor.ActorFSM.INITIALIZED, org.kurator.akka.KuratorActor.ActorFSM.STARTED); onFutureComplete(((org.kurator.akka.messages.FutureComplete) (message))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7542/buggy-version/src.main.java.org.kurator.akka.KuratorActor.java", "BodyUseAPI": [], "Fixed commit": "d9e85e155fbca75c66118972e157f1a238280e48", "Url": "https://api.github.com/repos/chicoreus/kurator-akka", "Date": "2016-03-25T11:09:32Z"},
{"Line": "=>881", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kie.remote.common.rest.KieRemoteHttpRequest.getRequestInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((requestInfo.body) != null) { contentLength = requestInfo.body.toString().getBytes().length; connection.setFixedLengthStreamingMode(contentLength); java.util.List<java.lang.String> contentTypeList = requestInfo.getHeader(org.kie.remote.common.rest.ACCEPT); if ((contentTypeList != null) && (!(contentTypeList.isEmpty()))) { requestInfo.setHeader(org.kie.remote.common.rest.CONTENT_TYPE, contentTypeList.get(0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6532/buggy-version/kie-remote.kie-remote-common.src.main.java.org.kie.remote.common.rest.KieRemoteHttpRequest.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.String.getBytes()", "org.kie.remote.common.rest.KieRemoteHttpRequest.RequestInfo.setHeader(org.kie.remote.common.rest.CONTENT_TYPE,java.lang.String)", "org.kie.remote.common.rest.KieRemoteHttpRequest.RequestInfo.getHeader(org.kie.remote.common.rest.ACCEPT)"], "Fixed commit": "b1803ba2588f566ca5f0b655f4fa44604853332a", "Url": "https://api.github.com/repos/droolsjbpm/droolsjbpm-integration", "Date": "2014-10-04T04:18:51Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["state.getBaseUrl().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (base.endsWith(\"/\")) base = base.substring(0, ((base.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8999/buggy-version/src.org.openqa.runner.Commands.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "8abe60a03867d046806d4659ed8d6df455e93b2f", "Url": "https://api.github.com/repos/Toseter/SeleniumRunner", "Date": "2011-08-09T12:29:44Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (statType == (com.ryansteckler.nlpunbounce.models.UnbounceStatsCollection.STAT_PUSH)) { if ((mSincePushStats) != null) { mSincePushStats.clear(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4447/buggy-version/app.src.main.java.com.ryansteckler.nlpunbounce.models.UnbounceStatsCollection.java", "BodyUseAPI": [], "Fixed commit": "2ab62eef43cf4103fd6ebc2bc93fc3a1f3dd5107", "Url": "https://api.github.com/repos/chhapil/unbounce-android", "Date": "2014-11-01T21:16:47Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentStats) != null) { mCurrentStats.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4447/buggy-version/app.src.main.java.com.ryansteckler.nlpunbounce.models.UnbounceStatsCollection.java", "BodyUseAPI": [], "Fixed commit": "2ab62eef43cf4103fd6ebc2bc93fc3a1f3dd5107", "Url": "https://api.github.com/repos/chhapil/unbounce-android", "Date": "2014-11-01T21:16:47Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (connectionHandle.isExpired()) { connectionHandle.internalClose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4964/buggy-version/bonecp.src.main.java.com.jolbox.bonecp.BoneCP.java", "BodyUseAPI": ["com.jolbox.bonecp.ConnectionHandle.internalClose()"], "Fixed commit": "37a6a139ef29cde49594b13a009cd72b14155453", "Url": "https://api.github.com/repos/markwoon/bonecp", "Date": "2012-08-06T09:47:02Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ref) != null) { return ref.getPath().toString(); }else { return super.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8930/buggy-version/src.main.java.edu.scf.labsignin.db.FirebaseObject.java", "BodyUseAPI": [], "Fixed commit": "c122d2bfde52c174b3ab828c2ba761158c007587", "Url": "https://api.github.com/repos/gunthergb/SCFSign-in", "Date": "2017-03-27T18:47:47Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pl.betoncraft.betonquest.BetonQuest.getInstance().getObjective(objective)) == null) { pl.betoncraft.betonquest.utils.Debug.error(((\"Objective '\" + (objective)) + \"' is not defined, cannot run objective event\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3859/buggy-version/src.main.java.pl.betoncraft.betonquest.events.ObjectiveEvent.java", "BodyUseAPI": [], "Fixed commit": "347b2df887e544257a62bee66ceecb5cf37e1fae", "Url": "https://api.github.com/repos/Co0sh/BetonQuest", "Date": "2016-04-26T11:40:51Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player instanceof net.minecraft.entity.player.EntityPlayerMP) { ((net.minecraft.entity.player.EntityPlayerMP) (player)).playerNetServerHandler.ticksForFloatKick = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3312/buggy-version/src.minecraft.net.machinemuse.api.MusePlayerUtils.java", "BodyUseAPI": [], "Fixed commit": "f8ddad0a6a548342ff18220e48d0405ec71a557a", "Url": "https://api.github.com/repos/MachineMuse/MachineMusePowersuits", "Date": "2013-04-23T00:48:06Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.GetMinionCount(b.GetPieceColor())) > 0) { if (this.IsBuilt) { java.lang.System.out.println(\"Each Area can only hold one building.This area already has one\"); }else { this.Building = b; this.IsBuilt = true; } }else { java.lang.System.out.println(\"you do not have a minion in the area, cannnot build building\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8695/buggy-version/Area.java", "BodyUseAPI": [], "Fixed commit": "c5a5856e39fd25111a1fa79a2625c6098f1e4cce", "Url": "https://api.github.com/repos/larrynet/diskworld", "Date": "2015-03-12T23:27:04Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, org.apache.struts2.dispatcher.Parameter>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value.isMultiple()) { newStack.setParameter(name, value.getMultipleValues()); }else { newStack.setParameter(name, value.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/629/buggy-version/core.src.main.java.com.opensymphony.xwork2.interceptor.ParametersInterceptor.java", "BodyUseAPI": ["org.apache.struts2.dispatcher.Parameter.getMultipleValues()", "com.opensymphony.xwork2.interceptor.ValueStack.setParameter(java.lang.String,value.getMultipleValues())", "org.apache.struts2.dispatcher.Parameter.getValue()", "com.opensymphony.xwork2.interceptor.ValueStack.setParameter(java.lang.String,value.getValue())"], "Fixed commit": "0b24437ed6fb8bf4b655a680a42eb4fd41cdd66c", "Url": "https://api.github.com/repos/apache/struts", "Date": "2016-07-31T11:39:22Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l.startsWith(\"endcollision\")) { state = main.ImageData.ParserState.DEFAULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/426/buggy-version/SpriteTool.src.main.ImageData.java", "BodyUseAPI": [], "Fixed commit": "c2a2c7b1efc2cd01dfc7a268a4ef2d870c41de53", "Url": "https://api.github.com/repos/Schmavery/pttg-sprite-tool", "Date": "2014-11-25T05:28:47Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sb.length()) == 0) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8018/buggy-version/src.main.java.atg.tools.ant.util.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "53c43d7a2a9e1792be7704a594556435d19246bd", "Url": "https://api.github.com/repos/jvz/atg-ant-plugin", "Date": "2014-03-28T18:12:03Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((((((((altHouseNum.equals(houseNum)) && (altStreet.equals(street))) && (altUnitNum.equals(unitNum))) && (altCity.equals(city))) && (altZipCode.equals(zipCode))) || (altHouseNum.isEmpty())) || (altStreet.isEmpty())) || (altCity.isEmpty())) this.substituteDeliveryAddress = \"\"; else this.substituteDeliveryAddress = (((((((altHouseNum + \"_\") + altStreet) + \"_\") + altUnitNum) + \"_\") + altCity) + \"_\") + altZipCode;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7130/buggy-version/src.ourneighborschild.ONCFamily.java", "BodyUseAPI": [], "Fixed commit": "bb68c77db2eae27e5463a30f7c0f1b4c683a1b4e", "Url": "https://api.github.com/repos/oneilljw/ONC-Client", "Date": "2015-08-11T02:47:42Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (error.equals(\"OK\")) { link = ((java.lang.String) (result.get(\"link\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/277/buggy-version/src.soapServiceUtill.CreateSubmissionResult.java", "BodyUseAPI": [], "Fixed commit": "7689510ff8cfa7b0b8a8d777e108f06ea9a443d8", "Url": "https://api.github.com/repos/arpit92k/Codedrill", "Date": "2015-03-22T11:48:44Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (error.equals(\"OK\")) { langs = ((java.util.HashMap<java.lang.Integer, java.lang.String>) (result.get(\"languages\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/277/buggy-version/src.soapServiceUtill.GetLanguagesResult.java", "BodyUseAPI": [], "Fixed commit": "7689510ff8cfa7b0b8a8d777e108f06ea9a443d8", "Url": "https://api.github.com/repos/arpit92k/Codedrill", "Date": "2015-03-22T11:48:44Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (error.equals(\"OK\")) { status = ((java.lang.Integer) (result.get(\"status\"))); this.result = ((java.lang.Integer) (result.get(\"result\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/277/buggy-version/src.soapServiceUtill.GetSubmissionStatusResult.java", "BodyUseAPI": [], "Fixed commit": "7689510ff8cfa7b0b8a8d777e108f06ea9a443d8", "Url": "https://api.github.com/repos/arpit92k/Codedrill", "Date": "2015-03-22T11:48:44Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.avro.generic.GenericRecord.get(fld.name())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (record == null) { record = new org.apache.avro.generic.GenericData.Record(fld.schema()); target.put(fld.name(), record); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/587/buggy-version/camus-sweeper.src.main.java.com.linkedin.camus.sweeper.mapreduce.AvroKeyMapper.java", "BodyUseAPI": [], "Fixed commit": "c87b3b4175bd7c5e24a135ac9c33ce2cf128f0cd", "Url": "https://api.github.com/repos/strongh/camus", "Date": "2014-01-17T20:47:33Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (map == null) return null; else return new se.chalmers.tda367.std.core.GameBoard(map);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7902/buggy-version/src.se.chalmers.tda367.std.core.factories.GameBoardFactory.java", "BodyUseAPI": [], "Fixed commit": "b48cd266a481aeb7bc9346ce56e2e80bcb6cc8da", "Url": "https://api.github.com/repos/emij/TDA367-ShroomDefence", "Date": "2012-05-21T14:25:39Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.getTicketDao().getTicket(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ticket.getId_parking()) == 0) throw new java.lang.RuntimeException(\"Taki mandat nie istnieje.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4151/buggy-version/src.DataBaseView.java", "BodyUseAPI": [], "Fixed commit": "016588825289112212caf4d25d390c53d4785321", "Url": "https://api.github.com/repos/marcinSuw/BD2-Parkings", "Date": "2017-01-22T20:12:17Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.getMeterDao().get_meter(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((meter.getId_parking()) == 0) throw new java.lang.RuntimeException(\"Taki parkomat nie istnieje\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4151/buggy-version/src.DataBaseView.java", "BodyUseAPI": [], "Fixed commit": "016588825289112212caf4d25d390c53d4785321", "Url": "https://api.github.com/repos/marcinSuw/BD2-Parkings", "Date": "2017-01-22T20:12:17Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.github.hakko.musiccabinet.dao.util.URIUtil.isSubsonic(artistUri))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4124/buggy-version/musiccabinet-server.src.main.java.com.github.hakko.musiccabinet.dao.jdbc.JdbcWebserviceHistoryDao.java", "BodyUseAPI": [], "Fixed commit": "3e121b3c7272d80406a9c25a15cc99e7c35b7244", "Url": "https://api.github.com/repos/tthomas48/musiccabinet", "Date": "2014-05-08T03:33:54Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.continuation) != \"\") { this.request.query(\"sync\", this.continuation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3776/buggy-version/src.main.java.com.asana.iterator.EventsPageIterator.java", "BodyUseAPI": [], "Fixed commit": "8d3dc2effe7b06974c8c8b2a505e9545a4249fd3", "Url": "https://api.github.com/repos/Asana/java-asana", "Date": "2015-04-08T22:34:30Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shtrih.jpos.fiscalprinter.receipt.ReceiptTemplate.getDiscountLines(com.shtrih.jpos.fiscalprinter.receipt.FSDiscount)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((lines.length) > 1) || ((lines[0].length()) > 0)) { for (int i = 0; i < (lines.length); i++) { getDevice().printLine(PrinterConst.SMFP_STATION_REC, lines[i], getParams().discountFont); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5851/buggy-version/Source.Core.src.com.shtrih.jpos.fiscalprinter.receipt.FSSalesReceipt.java", "BodyUseAPI": ["com.shtrih.fiscalprinter.SMFiscalPrinter.printLine(PrinterConst.SMFP_STATION_REC,java.lang.String,getParams().discountFont)"], "Fixed commit": "2bc2b3fbae905e0cce5c93268363858926d37a4c", "Url": "https://api.github.com/repos/shtrih-m/javapos_shtrih", "Date": "2017-03-21T20:30:08Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.bukkit.Bukkit.getOnlinePlayers().size()) == 1) { p.sendMessage(\"Es wurde kein Autrag f\ufffdr dich gefunden!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5076/buggy-version/KMA.src.com.posi.Events.OnMissionStart.java", "BodyUseAPI": [], "Fixed commit": "83d565b1548469828f6159c9c8f32c490c89e4db", "Url": "https://api.github.com/repos/polycry/KMA", "Date": "2017-02-16T18:38:40Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((selectedFilters.get(filterKey)) != null) && (selectedFilters.get(filterKey).contains(filterValue))) { ch.setChecked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6310/buggy-version/src.com.example.ordernowandroid.FilterMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "835886cf549980108e713a6cdf0e70b7a5c3adac", "Url": "https://api.github.com/repos/brajesh659/OrderNowAndroid", "Date": "2014-02-13T00:08:22Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (nextVarBinding.has(org.openrdf.query.resultio.sparqljson.SPARQLJSONParserBase.DATATYPE)) { datatype = nextVarBinding.getString(org.openrdf.query.resultio.sparqljson.SPARQLJSONParserBase.DATATYPE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3917/buggy-version/core.queryresultio.sparqljson.src.main.java.org.openrdf.query.resultio.sparqljson.SPARQLJSONParserBase.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "7e6d93f5d4ecf555ce1861b7603c4151a5ed2413", "Url": "https://api.github.com/repos/ansell/openrdf-sesame", "Date": "2013-02-13T00:10:50Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((permitNumText.isEditable()) && (!(permitNumText.getText().trim().isEmpty()))) && (applicantBtn.isSelected())) { permitNum = java.lang.Integer.parseInt(permitNumText.getText()); }else if (((permitNumText.isEditable()) && (permitNumText.getText().trim().isEmpty())) && (applicantBtn.isSelected())) { permitNumError.setText(\"Enter a valid permit number\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7388/buggy-version/src.main.java.com.emeraldElves.alcohollabelproject.UserInterface.NewUserController.java", "BodyUseAPI": ["permitNumText.getText().trim()", "com.emeraldElves.alcohollabelproject.UserInterface.TextField.getText()", "com.emeraldElves.alcohollabelproject.UserInterface.RadioButton.isSelected()", "permitNumText.getText().trim().isEmpty()", "com.emeraldElves.alcohollabelproject.UserInterface.TextField.isEditable()", "com.emeraldElves.alcohollabelproject.UserInterface.TextField.getText()", "java.lang.Integer.parseInt(permitNumText.getText())"], "Fixed commit": "eb76e8baa2c940b329cf8efdf69b71f3dece62e8", "Url": "https://api.github.com/repos/CS3733/AlcoholLabelProject", "Date": "2017-04-28T18:46:12Z"},
{"Line": "=>668", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cls == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7949/buggy-version/de.marw.cmake.src.main.java.org.eclipse.jetty.util.ajax.JSON.java", "BodyUseAPI": [], "Fixed commit": "6bb3225596b6e1874b49d1e7a1c69ecc5da77f9e", "Url": "https://api.github.com/repos/15knots/cmake4eclipse", "Date": "2016-05-11T18:54:12Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(iScriptObject.hasMember(\"type\"))) { throw new com.fasterxml.jackson.databind.JsonMappingException(\"Type is undefined\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/749/buggy-version/maohifx.client.src.main.java.com.maohi.software.maohifx.client.URLHandler.java", "BodyUseAPI": [], "Fixed commit": "ad79ed89fa88bf8081dd0e39472be1481a04aa3a", "Url": "https://api.github.com/repos/Heifara/maohifx", "Date": "2015-12-31T06:14:51Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iScriptObject.hasMember(\"dataType\")) && (iScriptObject.hasMember(\"data\"))) { iEntity = this.getEntity(((java.lang.String) (iScriptObject.getMember(\"dataType\"))), iScriptObject.getMember(\"data\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/749/buggy-version/maohifx.client.src.main.java.com.maohi.software.maohifx.client.URLHandler.java", "BodyUseAPI": ["jdk.nashorn.api.scripting.ScriptObjectMirror.getMember(java.lang.String)", "jdk.nashorn.api.scripting.ScriptObjectMirror.getMember(java.lang.String)", "com.maohi.software.maohifx.client.URLHandler.getEntity(java.lang.Object,java.lang.Object)"], "Fixed commit": "ad79ed89fa88bf8081dd0e39472be1481a04aa3a", "Url": "https://api.github.com/repos/Heifara/maohifx", "Date": "2015-12-31T06:14:51Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recording) { mRecorder.stop(); mRecorder.reset(); mRecorder.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3006/buggy-version/app.src.main.java.com.legitdevs.legitnotes.AudioNoteDialog.java", "BodyUseAPI": [], "Fixed commit": "9b85e87d5994c5b93f75a6943a653006f7f1bb98", "Url": "https://api.github.com/repos/mcontin/LegitNotes", "Date": "2016-05-22T13:49:31Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["subscriptionJson.get(\"notificationType\").toString().replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (notificationType.trim().equals(\"MAIL\")) { com.ericsson.ei.subscriptionhandler.InformSubscription.log.info(\"Notification through EMAIL\"); sendMail.sendMail(notificationMeta, aggregatedObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2882/buggy-version/src.main.java.com.ericsson.ei.subscriptionhandler.InformSubscription.java", "BodyUseAPI": [], "Fixed commit": "232723e3705fcc8dbf852b5e16e6e88eab30588d", "Url": "https://api.github.com/repos/tobiasake/eiffel-intelligence", "Date": "2017-12-19T16:29:16Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFirstDrillSent) { mRoboterHelper.sendPauseCommand(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8452/buggy-version/app.src.main.java.de.lin_engel.robopongcontroller.ui.PlayResultDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "75b0bb9da3997abcd6bca78d06c964f9cd0f9e94", "Url": "https://api.github.com/repos/engelchrisi/RoboPongController", "Date": "2016-05-02T20:21:45Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((date) != null ? !(date.equals(event.date)) : (event.date) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4343/buggy-version/src.main.java.se.cygni.expenses.api.Event.java", "BodyUseAPI": [], "Fixed commit": "fe7379efc621a8925b5243a1d421429c23e4e0d8", "Url": "https://api.github.com/repos/emilb/expenses", "Date": "2013-01-09T06:06:15Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Tree.Primary.getDeclaration()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (d == (declaration)) { if (d instanceof com.redhat.ceylon.compiler.typechecker.model.Value) { ((com.redhat.ceylon.compiler.typechecker.model.Value) (d)).setCaptured(true); }else if (d instanceof com.redhat.ceylon.compiler.typechecker.model.Parameter) { if (!(d.getContainer().equals(that.getScope()))) { ((com.redhat.ceylon.compiler.typechecker.model.Parameter) (d)).setCaptured(true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9130/buggy-version/src.com.redhat.ceylon.compiler.typechecker.analyzer.ValueVisitor.java", "BodyUseAPI": ["d.getContainer().equals(that.getScope())", "com.redhat.ceylon.compiler.typechecker.model.TypedDeclaration.getContainer()"], "Fixed commit": "5fc6a88097ee209c3064bb00aa10162a53b1b206", "Url": "https://api.github.com/repos/ceylon/ceylon-spec", "Date": "2012-05-21T11:01:27Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(jabberId.startsWith(\"xmpp://\"))) jabberId = \"xmpp://\" + jabberId;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3874/buggy-version/src.main.java.socio.xmpp.XmppClient.java", "BodyUseAPI": [], "Fixed commit": "5006ec10514e130559e6f6fcd9911518e89038cb", "Url": "https://api.github.com/repos/heussd/socio", "Date": "2011-09-07T09:16:22Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(from.startsWith(\"xmpp://\"))) from = \"xmpp://\" + (from.split(\"/\")[0]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3874/buggy-version/src.main.java.socio.semantic.SemanticCore.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "5006ec10514e130559e6f6fcd9911518e89038cb", "Url": "https://api.github.com/repos/heussd/socio", "Date": "2011-09-07T09:16:22Z"},
{"Line": "=>1243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e instanceof com.treasure_data.client.HttpClientException) { com.treasure_data.client.HttpClientException ex = ((com.treasure_data.client.HttpClientException) (e)); int statusCode = ex.getResponseCode(); if (statusCode == 401) { com.treasure_data.client.DefaultClientAdaptorImpl.LOG.log(java.util.logging.Level.WARNING, e.getMessage(), e); throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/608/buggy-version/src.main.java.com.treasure_data.client.DefaultClientAdaptorImpl.java", "BodyUseAPI": ["com.treasure_data.client.ClientException.getMessage()", "java.util.logging.Logger.log(java.util.logging.Level,e.getMessage(),com.treasure_data.client.ClientException)"], "Fixed commit": "58977467b4c66d7956439416f983b80b9a78ec65", "Url": "https://api.github.com/repos/treasure-data/td-client-java", "Date": "2014-07-29T17:56:09Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((manager.findFragmentByTag(tag)) == null) { return show(manager, tag, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6492/buggy-version/onehookinclibrary.src.main.java.com.onehook.app.OHCompactAlertDialogFragment.java", "BodyUseAPI": ["com.onehook.app.OHCompactAlertDialogFragment.OHCompactAlertDialogFragmentBuilder.show(android.support.v4.app.FragmentManager,java.lang.String,boolean)"], "Fixed commit": "28cf5800b51ea48e46580922d1703b4b44c99616", "Url": "https://api.github.com/repos/oneHook/oneHookLibraryAndroid", "Date": "2016-09-12T21:43:53Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((manager.findFragmentByTag(tag)) == null) { return show(manager, tag, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6492/buggy-version/onehookinclibrary.src.main.java.com.onehook.app.OHCompactAlertDialogFragment.java", "BodyUseAPI": ["com.onehook.app.OHCompactAlertDialogFragment.OHCompactAlertDialogFragmentBuilder.show(android.support.v4.app.FragmentManager,java.lang.String,boolean)"], "Fixed commit": "28cf5800b51ea48e46580922d1703b4b44c99616", "Url": "https://api.github.com/repos/oneHook/oneHookLibraryAndroid", "Date": "2016-09-12T21:43:53Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (convertView == null) { convertView = android.view.LayoutInflater.from(this).inflate(R.layout.view_list_item, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/977/buggy-version/WaterDropDemo.src.com.view.drop.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bf90c53f061e173acf8fc76a0d7e589f1a8da95d", "Url": "https://api.github.com/repos/andforce/Bubble-Notification", "Date": "2015-02-02T14:18:59Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.backup.sftp.APIAddSftpBackupStorageMsg.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((dir.startsWith(\"/proc\")) || (dir.startsWith(\"/dev\"))) || (dir.startsWith(\"/sys\"))) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(argerr(\" the url contains an invalid folder[/dev or /proc or /sys]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/613/buggy-version/plugin.sftpBackupStorage.src.main.java.org.zstack.storage.backup.sftp.SftpBackupStorageApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "499d7b130cf6e19a6345ddc734983194a95bff32", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-08T13:37:32Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.commons.io.FilenameUtils.isExtension(file.getName(), \"csv\"))) { throw new java.lang.IllegalStateException(\"Please add the '.csv' extension to the filename\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5456/buggy-version/components.writers.src.main.java.org.datacleaner.extension.output.CreateCsvFileAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "35cd32348e0bdc185a395ce7490d36aef60442ec", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-03-23T12:07:09Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!foundJobName) { jobsNames.add(job.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6701/buggy-version/pentaho-kettle.src.main.java.org.pentaho.di.www.GetHealthServlet.java", "BodyUseAPI": [], "Fixed commit": "59af033b1df4cc7613fdf98fb4c98b284db44cd9", "Url": "https://api.github.com/repos/zhicwu/pdi-cluster", "Date": "2016-09-22T04:36:32Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (print) { output.setOutput(sb.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1494/buggy-version/plugins.org.eclipse.recommenders.livedoc.taglets.overrides.src.org.eclipse.recommenders.livedoc.taglets.overrides.OverrideMethods.java", "BodyUseAPI": [], "Fixed commit": "cc0ce27789b18e7725f599efd2628a802cddac98", "Url": "https://api.github.com/repos/philomatic/recommenders-jdoc", "Date": "2013-09-11T07:48:41Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.janrain.backplane2.server.dao.redis.BackplaneMessage.getDateFromId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (d == null) { com.janrain.backplane2.server.dao.redis.RedisBackplaneMessageDAO.logger.warn(((\"cannot retrieve date from \" + id) + \": aborting delete\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5373/buggy-version/src.main.java.com.janrain.backplane2.server.dao.redis.RedisBackplaneMessageDAO.java", "BodyUseAPI": [], "Fixed commit": "5082e006669e56afd7d88de64051b534835409fc", "Url": "https://api.github.com/repos/janrain/janrain-backplane-2", "Date": "2012-07-23T16:19:12Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOperation(stack.peek().charAt(0))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7808/buggy-version/course1.semester2.hw5.task2.src.spbu.hw5.task2.StackCalculator.java", "BodyUseAPI": [], "Fixed commit": "aec69b134c34b7cf6adb04386c75c640983323df", "Url": "https://api.github.com/repos/Victor-Y-Fadeev/SPbSU", "Date": "2017-03-29T17:56:15Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.isEmpty()) { e.getChannel().sendMessage(((Resource.Emoji.error) + \" No results.\")).queue(); return; }else if ((result.size()) == 1) possibleword = (\"__** Found \" + (result.size())) + \" Possible Word: **__\\n\"; else possibleword = (\"__** Found \" + (result.size())) + \" Possible Words: **__\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6997/buggy-version/src.main.java.Command.FunModule.HangManCheaterCommand.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "ee230c4110d6d95eae50c90e8b77c1265d8530ae", "Url": "https://api.github.com/repos/AlienIdeology/AIBot", "Date": "2017-04-09T03:02:18Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) != null) { mAdapter.registerDataSetObserver(mDataSetObserver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8758/buggy-version/library.src.main.java.com.github.onlynight.bottomnavbar.library.BottomNavBar.java", "BodyUseAPI": [], "Fixed commit": "037716f514fc879a0f5ea19915f4138f2cf2d6cf", "Url": "https://api.github.com/repos/onlynight/BottomNavBar", "Date": "2017-11-25T09:45:10Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) == null) { user = ((com.polymtl.georun.OrganizerActivity) (getActivity())).loadUser(dataSnapshot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6289/buggy-version/app.src.main.java.com.polymtl.georun.MapViewFragment.java", "BodyUseAPI": [], "Fixed commit": "cd866b96bb7466cd31de46e9ea5dedc952554c2c", "Url": "https://api.github.com/repos/Fraise/GEORun", "Date": "2017-04-25T04:33:56Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentTagName.equalsIgnoreCase(\"R3\")) { cSFastQEntry.setReadStartPosition((1 + (processingOptions.getMatePairBarCodeLength()))); }else { cSFastQEntry.setReadStartPosition(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4121/buggy-version/src.xsqconvertergit.OutPutWriter.java", "BodyUseAPI": [], "Fixed commit": "18a077409e673e0fbe4a1c150f7a218b4a90a22a", "Url": "https://api.github.com/repos/WimS83/XSQConverter", "Date": "2013-04-08T09:19:44Z"},
{"Line": "=>1115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!match) { if (outputValueNode.isObject()) { throw new com.eucalyptus.cloudformation.ValidationErrorException(\"The Value field of every Outputs member must evaluate to a String and not a Map.\"); } if (outputValueNode.isArray()) { throw new com.eucalyptus.cloudformation.ValidationErrorException(\"The Value field of every Outputs member must evaluate to a String and not a List.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9288/buggy-version/clc.modules.cloudformation.src.main.java.com.eucalyptus.cloudformation.template.TemplateParser.java", "BodyUseAPI": [], "Fixed commit": "991b7c3931c489cd5e2f28d3a0bd0fd84ccf18cb", "Url": "https://api.github.com/repos/sjones4/eucalyptus", "Date": "2014-04-24T01:26:36Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (raises > 1) run();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4833/buggy-version/src.holdem.HoldemGame.java", "BodyUseAPI": [], "Fixed commit": "14fba0d8e5d8105ad5a13a082217ad43d3d286ef", "Url": "https://api.github.com/repos/MrGSHS/apcs-final-project-noparthi", "Date": "2016-05-20T19:59:02Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCondition) instanceof edu.mit.compilers.IR.IrLiteral) { return ((\"jmp \" + (mCondition.toString())) + \", \") + (mJumpTarget); }else { return ((\"jmp (\" + (mCondition.getResultAddress())) + \"), \") + (mJumpTarget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8672/buggy-version/src.edu.mit.compilers.IR.IrJmp.java", "BodyUseAPI": [], "Fixed commit": "f51ca24c716e9c8076d02d81a60f700b5620701b", "Url": "https://api.github.com/repos/pvatterott/software-cert", "Date": "2013-04-03T15:24:42Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((question.getChoice()) > 0) { btn = btnChoices.get(((question.getChoice()) - 1)); btn.setTextColor(getResources().getColor(R.color.WHITE)); btn.setBackgroundResource(R.drawable.circle_number_black); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/141/buggy-version/tplt.src.com.hanaone.tplt.QuestionSlideFragment.java", "BodyUseAPI": ["java.util.List<android.widget.Button>.get(((question.getChoice()) - 1))", "com.hanaone.tplt.db.QuestionDataSet.getChoice()"], "Fixed commit": "fa83d5ce6ee0a7880cce924f9dff2e1ed7b1ee44", "Url": "https://api.github.com/repos/racroi3010/tplt", "Date": "2016-06-20T01:21:38Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cl == null) cl = java.lang.Thread.currentThread().getContextClassLoader();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6191/buggy-version/src.main.java.hudson.plugins.emailext.plugins.content.ScriptContent.java", "BodyUseAPI": [], "Fixed commit": "52ab044f4b9b9cda10aa5041326488d43a64f51c", "Url": "https://api.github.com/repos/jenkinsci/email-ext-plugin", "Date": "2012-05-25T00:46:52Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.talend.components.salesforce.SalesforceConnectionProperties.LoginType.OAuth.equals(loginType.getValue())) && ((oauth2FlowType.getValue()) == null)) { oauth2FlowType.setValue(org.talend.components.salesforce.JWT_Flow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/688/buggy-version/components.components-salesforce.components-salesforce-definition.src.main.java.org.talend.components.salesforce.SalesforceConnectionProperties.java", "BodyUseAPI": ["org.talend.daikon.properties.property.Property<org.talend.components.common.oauth.OAuth2FlowType>.setValue(org.talend.components.salesforce.JWT_Flow)"], "Fixed commit": "0b3962131fdba9e338e30886e28af5e7127c82a2", "Url": "https://api.github.com/repos/Talend/components", "Date": "2017-12-11T13:01:33Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endIndex == (-1)) { endIndex = 40; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6849/buggy-version/src.java.com.vtlocator.managers.ItemManager.java", "BodyUseAPI": [], "Fixed commit": "07132d61f3d4757fda2565d1253c11dbff1b0e90", "Url": "https://api.github.com/repos/tunaonder/VTLocator", "Date": "2016-05-02T19:36:38Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (img == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3091/buggy-version/src.main.java.spim.process.fusion.export.DisplayImage.java", "BodyUseAPI": [], "Fixed commit": "ed1896abf7e74577d83173f0277945b32b5fab0f", "Url": "https://api.github.com/repos/fiji/spimreconstruction", "Date": "2014-04-18T09:16:54Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((gridVert != null) && (gridVert != (this.Parent))) { succ.add(gridVert); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3179/buggy-version/src.com.gridworld.algorithm.Vertex.java", "BodyUseAPI": ["java.util.LinkedList<com.gridworld.algorithm.Vertex>.add(com.gridworld.algorithm.Vertex)"], "Fixed commit": "cfb3c00ab74bd1f46e2ad2274ee6be50f5fb6b29", "Url": "https://api.github.com/repos/jkotzker/GridWorld", "Date": "2017-02-15T16:32:28Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gc.get(java.util.Calendar.MONTH)) < 10) { month += \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7718/buggy-version/src.main.java.org.arkanos.aaa.data.Training.java", "BodyUseAPI": [], "Fixed commit": "4377147b87972cc231385df54059046b7c6f10e2", "Url": "https://api.github.com/repos/matheuscodes/aaa", "Date": "2015-10-22T02:44:50Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.kmelia.control.ejb.KmeliaBm.getPublicationDetail(com.stratelia.webactiv.util.publication.model.PublicationPK)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pub != null) { getKmeliaBm().externalElementsOfPublicationHaveChanged(pubPK, null, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9220/buggy-version/kmelia.kmelia-ejb.src.main.java.com.stratelia.webactiv.kmelia.control.AttachmentKmeliaListener.java", "BodyUseAPI": [], "Fixed commit": "d5c07e3d72ad6ba188f678d99c853994c3cf6e12", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Components", "Date": "2014-09-09T14:15:42Z"},
{"Line": "=>1217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jToggleButton3.isSelected()) { jToggleButton3.doClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5313/buggy-version/src.Game1.Game1.java", "BodyUseAPI": ["javax.swing.JToggleButton.doClick()"], "Fixed commit": "f47eab3dad6b519df417f71bd2563bc6356ba9e7", "Url": "https://api.github.com/repos/oskuzz/Casino-Prototyyppi", "Date": "2017-05-08T20:09:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spongepowered.api.command.args.CommandContext.getOne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(optionalPlayer.isPresent())) { if (src instanceof org.spongepowered.api.entity.living.player.Player) { org.spongepowered.api.entity.living.player.Player player = ((org.spongepowered.api.entity.living.player.Player) (src)); if (io.github.hsyyid.essentialcmds.utils.Utils.isWarpInConfig(warpName)) { if (player.hasPermission((\"essentialcmds.warp.\" + warpName))) { if (!(java.util.Objects.equals(player.getWorld().getUniqueId(), io.github.hsyyid.essentialcmds.utils.Utils.getWarpWorldUUID(warpName)))) { com.flowpowered.math.vector.Vector3d position = new com.flowpowered.math.vector.Vector3d(io.github.hsyyid.essentialcmds.utils.Utils.getWarpX(warpName), io.github.hsyyid.essentialcmds.utils.Utils.getWarpY(warpName), io.github.hsyyid.essentialcmds.utils.Utils.getWarpZ(warpName)); player.transferToWorld(io.github.hsyyid.essentialcmds.utils.Utils.getWarpWorldUUID(warpName), position); src.sendMessage(org.spongepowered.api.text.Texts.of(TextColors.GREEN, \"Success! \", TextColors.YELLOW, (\"Teleported to Warp \" + warpName))); return org.spongepowered.api.command.CommandResult.success(); }else { org.spongepowered.api.world.Location<org.spongepowered.api.world.World> warp = new org.spongepowered.api.world.Location(player.getWorld(), io.github.hsyyid.essentialcmds.utils.Utils.getWarpX(warpName), io.github.hsyyid.essentialcmds.utils.Utils.getWarpY(warpName), io.github.hsyyid.essentialcmds.utils.Utils.getWarpZ(warpName)); player.setLocation(warp); } }else { src.sendMessage(org.spongepowered.api.text.Texts.of(TextColors.DARK_RED, \"Error! \", TextColors.RED, \"You do not have permission to use this warp!\")); return org.spongepowered.api.command.CommandResult.success(); } }else { src.sendMessage(org.spongepowered.api.text.Texts.of(TextColors.DARK_RED, \"Error! \", TextColors.RED, ((\"Warp \" + warpName) + \" does not exist!\"))); } }else if (src instanceof org.spongepowered.api.command.source.ConsoleSource) { src.sendMessage(org.spongepowered.api.text.Texts.of(TextColors.DARK_RED, \"Error! \", TextColors.RED, \"Must be an in-game player to use /warp!\")); }else if (src instanceof org.spongepowered.api.command.source.CommandBlockSource) { src.sendMessage(org.spongepowered.api.text.Texts.of(TextColors.DARK_RED, \"Error! \", TextColors.RED, \"Must be an in-game player to use /warp!\")); } }else { org.spongepowered.api.entity.living.player.Player player = optionalPlayer.get(); if (io.github.hsyyid.essentialcmds.utils.Utils.isWarpInConfig(warpName)) { if (src.hasPermission((\"essentialcmds.warp.\" + warpName))) { if (!(java.util.Objects.equals(player.getWorld().getUniqueId(), io.github.hsyyid.essentialcmds.utils.Utils.getWarpWorldUUID(warpName)))) { com.flowpowered.math.vector.Vector3d position = new com.flowpowered.math.vector.Vector3d(io.github.hsyyid.essentialcmds.utils.Utils.getWarpX(warpName), io.github.hsyyid.essentialcmds.utils.Utils.getWarpY(warpName), io.github.hsyyid.essentialcmds.utils.Utils.getWarpZ(warpName)); player.transferToWorld(io.github.hsyyid.essentialcmds.utils.Utils.getWarpWorldUUID(warpName), position); src.sendMessage(org.spongepowered.api.text.Texts.of(TextColors.GREEN, \"Success! \", TextColors.YELLOW, (\"Teleported to Warp \" + warpName))); return org.spongepowered.api.command.CommandResult.success(); }else { org.spongepowered.api.world.Location<org.spongepowered.api.world.World> warp = new org.spongepowered.api.world.Location(player.getWorld(), io.github.hsyyid.essentialcmds.utils.Utils.getWarpX(warpName), io.github.hsyyid.essentialcmds.utils.Utils.getWarpY(warpName), io.github.hsyyid.essentialcmds.utils.Utils.getWarpZ(warpName)); player.setLocation(warp); } }else { src.sendMessage(org.spongepowered.api.text.Texts.of(TextColors.DARK_RED, \"Error! \", TextColors.RED, \"You do not have permission to use this warp!\")); return org.spongepowered.api.command.CommandResult.success(); } }else { src.sendMessage(org.spongepowered.api.text.Texts.of(TextColors.DARK_RED, \"Error! \", TextColors.RED, ((\"Warp \" + warpName) + \" does not exist!\"))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9230/buggy-version/src.main.java.io.github.hsyyid.essentialcmds.cmdexecutors.WarpExecutor.java", "BodyUseAPI": ["java.util.Optional<org.spongepowered.api.entity.living.player.Player>.get()"], "Fixed commit": "216afcba646833f606eb071b41075a78c61d8758", "Url": "https://api.github.com/repos/hsyyid/EssentialCmds", "Date": "2015-12-06T19:34:15Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { startPostponedEnterTransition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/136/buggy-version/src.main.java.com.example.xyzreader.ui.ArticleDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "221b8d6ce4d98fd12dda7e077b18208a82555aa1", "Url": "https://api.github.com/repos/fbartnitzek/XYZReader", "Date": "2016-02-21T17:48:01Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { startPostponedEnterTransition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/136/buggy-version/src.main.java.com.example.xyzreader.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "221b8d6ce4d98fd12dda7e077b18208a82555aa1", "Url": "https://api.github.com/repos/fbartnitzek/XYZReader", "Date": "2016-02-21T17:48:01Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { supportPostponeEnterTransition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/136/buggy-version/src.main.java.com.example.xyzreader.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "221b8d6ce4d98fd12dda7e077b18208a82555aa1", "Url": "https://api.github.com/repos/fbartnitzek/XYZReader", "Date": "2016-02-21T17:48:01Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { ((com.example.xyzreader.ui.ArticleDetailActivity) (getActivity())).scheduleStartPostponedTransition(mPhotoView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/136/buggy-version/src.main.java.com.example.xyzreader.ui.ArticleDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "221b8d6ce4d98fd12dda7e077b18208a82555aa1", "Url": "https://api.github.com/repos/fbartnitzek/XYZReader", "Date": "2016-02-21T17:48:01Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((branchRateModelInput.get()) != null) && (!((branchRateModelInput.get()) instanceof beast.evolution.branchratemodel.StrictClockModel))) throw new java.lang.IllegalArgumentException((\"ACGLikelihood currently only\" + \"supports strict clock models.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1294/buggy-version/src.bacter.model.ACGLikelihood.java", "BodyUseAPI": [], "Fixed commit": "d45772983999475a6d6574de7f3ca1b5633db2b3", "Url": "https://api.github.com/repos/tgvaughan/bacter", "Date": "2015-06-20T10:04:33Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencloudb.mysql.nio.handler.MultiNodeHandler.decrementCountBy(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (canClose) { setFail((\"backend connect: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9043/buggy-version/src.main.java.org.opencloudb.mysql.nio.handler.MultiNodeHandler.java", "BodyUseAPI": [], "Fixed commit": "6ce0728d273e93513c6760adeaa8acd7e32b6d1f", "Url": "https://api.github.com/repos/MyCATApache/Mycat-Server", "Date": "2016-03-26T09:24:26Z"},
{"Line": "=>2206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(orderNumberUnique(java.lang.Integer.parseInt(orderId), orders))) { javax.swing.JOptionPane.showMessageDialog(null, \"Order Number is not Unique\", \"Order Info\", javax.swing.JOptionPane.WARNING_MESSAGE); }else { createOrderOrderIdTextField.setEnabled(false); createOrderSupplierIdComboBox.setEnabled(false); retail.Product p = invoice.returnProductObject(productCode, products); int quantity1 = java.lang.Integer.parseInt(quantity); if (p != null) { retail.OrderProduct orderProduct = new retail.OrderProduct(p, quantity1); addMoreProducts.add(orderProduct); for (retail.OrderProduct prod : addMoreProducts) { result += (((\"Product No: \" + (prod.getProduct().getProductCode())) + \"\\nQuantity: \") + (prod.getQuantity())) + \"\\n\\n\"; } createOrderScrollPaneTextArea.setText(result); createOrderScrollPaneTextArea.setCaretPosition(0); result = \"\"; }else { javax.swing.JOptionPane.showMessageDialog(null, \"No Product Record exist with that Input\", \"Product Info\", javax.swing.JOptionPane.WARNING_MESSAGE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5867/buggy-version/RetailSystem.src.retail.RetailGUI.java", "BodyUseAPI": [], "Fixed commit": "ba6ecaae501c1d1d6925fc3c1d25fb8c4c82c2ec", "Url": "https://api.github.com/repos/FCPDIT/TeamProject", "Date": "2014-09-04T15:09:22Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((competitors.size()) == 0) { nextIntent = new android.content.Intent(this, com.gamefinder.TvSetupActivity.class); }else { nextIntent = new android.content.Intent(this, com.gamefinder.TeamInterestActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8573/buggy-version/GameFinder.app.src.main.java.com.gamefinder.LeagueInterestActivity.java", "BodyUseAPI": [], "Fixed commit": "e742227f0682818960c871df7126cbffc7b23269", "Url": "https://api.github.com/repos/rburns31/GameFinder", "Date": "2016-03-30T01:56:47Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.startsWith(\"http://www.weibo.com\")) { url = url.replace(\"http://www.weibo.com\", \"http://weibo.com\"); }else if (url.startsWith(\"http://www.weibo.cn\")) { url = url.replace(\"http://www.weibo.cn\", \"http://weibo.com\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8383/buggy-version/src.org.qii.weiciyuan.support.utils.Utility.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "cd341668ec026d63802ffb167ab56f8319041c61", "Url": "https://api.github.com/repos/Max-Sum/weiciyuan", "Date": "2014-01-04T05:35:42Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) > 22) { if (((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) == (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)) == (android.content.pm.PackageManager.PERMISSION_GRANTED))) { locationClient.requestLocationUpdates(locationRequest, mLocationCallback, null); } }else locationClient.requestLocationUpdates(locationRequest, mLocationCallback, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3949/buggy-version/app.src.main.java.kg.kloop.android.redbutton.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b107167088817c5f48a2b150f2c27030cfa718d7", "Url": "https://api.github.com/repos/AlexWalker28/REDbutton", "Date": "2017-08-09T12:26:22Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.declaringType) != null) { this.declaringPackageName = this.declaringType.getPackageFragment().getElementName().toCharArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8611/buggy-version/org.eclipse.jdt.core.search.org.eclipse.jdt.internal.core.search.matching.MethodPattern.java", "BodyUseAPI": [], "Fixed commit": "352a6b3632e783ec973d0eb1934de53298ffaf7d", "Url": "https://api.github.com/repos/amelentev/eclipse.jdt-oo", "Date": "2012-05-04T16:00:16Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getPlayer().hasPermission(\"oresomenotes.staff\")) { event.getPlayer().sendMessage(((org.bukkit.ChatColor.RED) + \"A note was automatically added to the player!\")); com.oresomecraft.oresomenotes.Utility.addAnonymousNote(argToTarget(event.getMessage()), argBuilderReason(event.getMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5312/buggy-version/src.com.oresomecraft.oresomenotes.OresomeListener.java", "BodyUseAPI": ["event.getPlayer().sendMessage(((org.bukkit.ChatColor.RED) + \"A note was automatically added to the player!\"))", "org.bukkit.event.player.PlayerCommandPreprocessEvent.getMessage()", "com.oresomecraft.oresomenotes.Utility.addAnonymousNote(java.lang.String,java.lang.String)", "com.oresomecraft.oresomenotes.OresomeListener.argToTarget(event.getMessage())", "com.oresomecraft.oresomenotes.OresomeListener.argBuilderReason(event.getMessage())", "org.bukkit.event.player.PlayerCommandPreprocessEvent.getMessage()", "org.bukkit.event.player.PlayerCommandPreprocessEvent.getPlayer()"], "Fixed commit": "74941952c1a7a74f169e7bb48ccd341d4f0a2c9b", "Url": "https://api.github.com/repos/OresomeCraft/OresomeNotes", "Date": "2014-05-02T10:44:15Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.yourAnswerLabel) != null) this.yourAnswerPanel.remove(this.yourAnswerLabel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6682/buggy-version/src.edu.ucsb.cs56.projects.utilities.flashcards.QuizFrame.java", "BodyUseAPI": [], "Fixed commit": "0e38827aa9be363a7d9f3c7c897868f3e45de04f", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-utilities-flashcards", "Date": "2017-11-09T22:58:50Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.questdb.cairo.TableWriter.getSecondaryColumn(int)", "com.questdb.misc.Unsafe.malloc(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.questdb.misc.Files.read(mem2.getFd(), pSz, 8, (((transientRowCount) - 1) * 8))) != 8) { throw new java.lang.RuntimeException(\"cannot read offset\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4305/buggy-version/core.src.main.java.com.questdb.cairo.TableWriter.java", "BodyUseAPI": [], "Fixed commit": "87e8c0949463e7355f32fc72a2631c07dd37825f", "Url": "https://api.github.com/repos/bluestreak01/questdb", "Date": "2017-06-15T12:00:50Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message) != \"YOU LOSE!\") { message = \"YOU LOSE!\"; new java.lang.Thread(new edu.ucsb.cs56.projects.games.treasure_hunter.MessageThread(this)).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7383/buggy-version/src.edu.ucsb.cs56.projects.games.treasure_hunter.GameComponent.java", "BodyUseAPI": [], "Fixed commit": "06961a5b738a998fea54bc18c40bfa7637700cbc", "Url": "https://api.github.com/repos/Nawakhtha/cs56-games-treasure-hunter", "Date": "2017-11-28T03:48:38Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teiid.designer.query.proc.ITeiidXmlFileInfo.getParameterMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parameters.isEmpty()) { sb.append(\"''\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4153/buggy-version/plugins.teiid.org.teiid.runtime.client.src.org.teiid.runtime.client.proc.ProcedureService.java", "BodyUseAPI": [], "Fixed commit": "e5432f5c3fdde8017841cee4116244012b175e0f", "Url": "https://api.github.com/repos/tejones/teiid-designer", "Date": "2014-08-27T21:43:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onError) != null) onError.accept(error);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9213/buggy-version/src.main.java.at.lolst.api.request.Request.java", "BodyUseAPI": [], "Fixed commit": "406398816cf3aa71106a9b2d95cd7d3cd8292b70", "Url": "https://api.github.com/repos/jonathanedgecombe/vel-koz", "Date": "2015-12-09T23:24:40Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.navercorp.cubridqa.ha_repl.Context.getCubridPackageUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(com.navercorp.cubridqa.common.CommonUtils.isAvailableURL(cubridPackageUrl))) { java.lang.System.out.println(); java.lang.System.out.println(((\"[ERROR]: Please confirm \" + cubridPackageUrl) + \" url is available!\")); java.lang.System.out.println(\"QUIT\"); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/739/buggy-version/CTP.ha_repl.src.com.navercorp.cubridqa.ha_repl.Main.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "6e95093765cb23cf8a2924d43699a93684f464a4", "Url": "https://api.github.com/repos/supler/cubrid-testtools", "Date": "2016-10-20T08:47:39Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.navercorp.cubridqa.shell.common.CommonUtils.getBuildVersionInfo(com.navercorp.cubridqa.shell.common.SSHConnect)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.navercorp.cubridqa.common.CommonUtils.isEmpty(buildInfo)) { java.lang.System.out.println(\"[ERROR]: Please confirm your build installation for local test!\"); java.lang.System.out.println(\"QUIT\"); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/739/buggy-version/CTP.ha_repl.src.com.navercorp.cubridqa.ha_repl.Main.java", "BodyUseAPI": [], "Fixed commit": "6e95093765cb23cf8a2924d43699a93684f464a4", "Url": "https://api.github.com/repos/supler/cubrid-testtools", "Date": "2016-10-20T08:47:39Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scanCallback) != null) { bluetoothAdapter.getBluetoothLeScanner().stopScan(scanCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/47/buggy-version/grandroid-ble.src.main.java.com.grasea.grandroid.ble.scanner.DeviceScanner.java", "BodyUseAPI": [], "Fixed commit": "abd6cade40743219c8ee12e471bdb4383fc88d52", "Url": "https://api.github.com/repos/Grasea/Grandroid2", "Date": "2017-06-19T09:48:16Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(row.isDisposed())) { row.setText(colnr, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/480/buggy-version/ui.src.org.pentaho.di.ui.core.widget.TableView.java", "BodyUseAPI": ["org.eclipse.swt.widgets.TableItem.setText(int,java.lang.String)"], "Fixed commit": "459773f6485be7e26df1229984c22b20c4b5bf34", "Url": "https://api.github.com/repos/mdamour1976/pentaho-kettle", "Date": "2015-05-18T14:42:31Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (answer == 2) charClass = \"Wizard\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1330/buggy-version/Stuyablo.1.1-Group.Character.java", "BodyUseAPI": [], "Fixed commit": "528fc86bf9415086a168c0768c607e963b26d821", "Url": "https://api.github.com/repos/stuycs-apcs-z/classwork", "Date": "2013-11-05T12:56:26Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (answer == 4) charClass = \"Theif\"; else { java.lang.System.out.println(\"That is not a valid key.\\n\"); java.lang.System.out.println(\"Press 1 to be a WARRIOR\"); java.lang.System.out.println(\"Press 2 to be a WIZARD\"); java.lang.System.out.println(\"Press 3 to be an OGRE \"); java.lang.System.out.println(\"Press 4 to be a THEIF\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1330/buggy-version/Stuyablo.1.1-Group.Character.java", "BodyUseAPI": [], "Fixed commit": "528fc86bf9415086a168c0768c607e963b26d821", "Url": "https://api.github.com/repos/stuycs-apcs-z/classwork", "Date": "2013-11-05T12:56:26Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (answer == 2) { if (this.flee(other)) return 1; else answer = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1330/buggy-version/Stuyablo.1.1-Group.Character.java", "BodyUseAPI": [], "Fixed commit": "528fc86bf9415086a168c0768c607e963b26d821", "Url": "https://api.github.com/repos/stuycs-apcs-z/classwork", "Date": "2013-11-05T12:56:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (answer == 1) charClass = \"Warrior\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1330/buggy-version/Stuyablo.1.1-Group.Character.java", "BodyUseAPI": [], "Fixed commit": "528fc86bf9415086a168c0768c607e963b26d821", "Url": "https://api.github.com/repos/stuycs-apcs-z/classwork", "Date": "2013-11-05T12:56:26Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (answer == 3) charClass = \"Ogre\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1330/buggy-version/Stuyablo.1.1-Group.Character.java", "BodyUseAPI": [], "Fixed commit": "528fc86bf9415086a168c0768c607e963b26d821", "Url": "https://api.github.com/repos/stuycs-apcs-z/classwork", "Date": "2013-11-05T12:56:26Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (answer == 3) { int i = attack(other); if (i == 0) return 1; if (i == 1) return 0; if (i == 2) { experience = (experience) + 1; return 2; }else return i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1330/buggy-version/Stuyablo.1.1-Group.Character.java", "BodyUseAPI": [], "Fixed commit": "528fc86bf9415086a168c0768c607e963b26d821", "Url": "https://api.github.com/repos/stuycs-apcs-z/classwork", "Date": "2013-11-05T12:56:26Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (answer == 1) this.talk(other);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1330/buggy-version/Stuyablo.1.1-Group.Character.java", "BodyUseAPI": [], "Fixed commit": "528fc86bf9415086a168c0768c607e963b26d821", "Url": "https://api.github.com/repos/stuycs-apcs-z/classwork", "Date": "2013-11-05T12:56:26Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference<android.app.Activity>.get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (a != null) { a.setIntent(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8559/buggy-version/KyoroTextViewer.src.info.kyorohiro.helloworld.textviewer.appparts.MainActivityOpenFileAction.java", "BodyUseAPI": ["android.app.Activity.setIntent(<nulltype>)"], "Fixed commit": "24d333a6fec7f0fe99c0b62ac3bd5a201ce21678", "Url": "https://api.github.com/repos/kyorohiro/KyoroHelloAndroid", "Date": "2012-07-08T19:18:57Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUniqueTable()) { if (getDatabaseInfo().createIndex(tableName)) { com.aries.view.extension.util.LogUtil.info(((\"Index \\\"\" + tableName) + \"\\\" is created!\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1623/buggy-version/src.batch.handler.CommonHandler.java", "BodyUseAPI": [], "Fixed commit": "30cb533877dfa595c57a0fc823d7e92dc30e5e50", "Url": "https://api.github.com/repos/jennifersoft/jennifer-view-batch-rdb", "Date": "2017-11-24T02:38:51Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (values != null) { writer.write(values[(forindex % (values.length))]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9060/buggy-version/core.au.com.codeka.carrot.lib.tag.CycleTag.java", "BodyUseAPI": ["java.io.Writer.write(java.lang.String)"], "Fixed commit": "2a8ba1582e76ad7a0fb1b51cc653bd73ca396c33", "Url": "https://api.github.com/repos/codeka/carrot", "Date": "2014-11-01T22:42:41Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.runningracehisotry.adapters.RaceDetailSortAdapter.getGroupKey(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((headerStr.length()) > 7) { headerStr = headerStr.substring(0, 10); com.runningracehisotry.utilities.LogUtil.e(Constants.LOG_TAG, (\"HEADER FOR TIME/LENGTH: \" + headerStr)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8173/buggy-version/runningRaceHisotry.src.main.java.com.runningracehisotry.adapters.RaceDetailSortAdapter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "706bfc0c7e66c82fb712edb1c204527e949b7c41", "Url": "https://api.github.com/repos/nvhaiwork/RunningRaceHisotry", "Date": "2015-05-16T11:59:55Z"}]}
