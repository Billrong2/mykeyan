{"UNKNOWN to If":[{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((application.util.NpcList.npcHealth[i]) < 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2979/buggy-version/src.application.npc.NpcRareDropTable.java", "BodyUseAPI": [], "Fixed commit": "6e1d1b0310ff8cd6f11ffb33e0cd131028874681", "Url": "https://api.github.com/repos/OptimumLTD/RS-Drop-Tool", "Date": "2015-01-01T21:19:24Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reference.length()) < (alternate.length())) { start = (end) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5240/buggy-version/biodata-models.src.main.java.org.opencb.biodata.models.variant.Variant.java", "BodyUseAPI": [], "Fixed commit": "ab156211cf4ca54ad6bfbca30584cc3108df611e", "Url": "https://api.github.com/repos/jmmut/biodata", "Date": "2016-01-29T16:47:30Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((right) == true) p.setX(((p.getX()) + 1)); else if ((left) == true) p.setX(((p.getX()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3901/buggy-version/src.ie.itcarlow.CastleHell.Main.java", "BodyUseAPI": [], "Fixed commit": "3c7f9066745da8354fce6ede46a0c507b19fe8f6", "Url": "https://api.github.com/repos/Redbeard2794/Escape-From-Castle-Hellfire", "Date": "2014-11-21T12:02:59Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(rs.first())) throw new daointerfaces01917.DALException(\"Ingen elementer in Rolle tabel\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7718/buggy-version/02327_Lektion07.src.daoimpl01917.MySQLRolleDAO.java", "BodyUseAPI": [], "Fixed commit": "eae9dc4954d45aef34f5518b0b9e260140fc1d03", "Url": "https://api.github.com/repos/TheDaneSimon/33_02327_Project", "Date": "2017-04-25T09:22:59Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!link2Conn) { org.talend.metadata.managment.model.MetadataFillFactory.getDBInstance(dataProvider).setLinked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5584/buggy-version/main.plugins.org.talend.metadata.managment.src.main.java.org.talend.core.model.metadata.builder.database.DqRepositoryViewService.java", "BodyUseAPI": [], "Fixed commit": "b1d2c4c8f15e023dd67d3c7935a594359777ac3d", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-12-06T06:46:48Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.core.model.metadata.builder.database.DqRepositoryViewService.iteration2FindReferenceProject(org.eclipse.emf.common.util.EList<org.talend.core.model.properties.impl.ProjectReferenceImpl>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isFromReferenceProject) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5584/buggy-version/main.plugins.org.talend.metadata.managment.src.main.java.org.talend.core.model.metadata.builder.database.DqRepositoryViewService.java", "BodyUseAPI": [], "Fixed commit": "b1d2c4c8f15e023dd67d3c7935a594359777ac3d", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-12-06T06:46:48Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prevList.size()) == (currentList.size())) { return -1; }else { return currentList.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7716/buggy-version/taskey.src.taskey.ui.content.formatters.UiDefaultFormatter.java", "BodyUseAPI": ["java.util.ArrayList<taskey.messenger.Task>.size()"], "Fixed commit": "290080e45aab0a6ffd8ab7173786da401be52fbe", "Url": "https://api.github.com/repos/cs2103jan2016-f14-4j/main", "Date": "2016-04-01T14:44:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index == (-1)) { }else { myTaskView.getView().selectInPage((index / (taskey.constants.UiConstants.ENTRIES_PER_PAGE_DEFAULT)), (index % (taskey.constants.UiConstants.ENTRIES_PER_PAGE_DEFAULT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7716/buggy-version/taskey.src.taskey.ui.content.formatters.UiDefaultFormatter.java", "BodyUseAPI": ["myTaskView.getView().selectInPage((index / (taskey.constants.UiConstants.ENTRIES_PER_PAGE_DEFAULT)),(index % (taskey.constants.UiConstants.ENTRIES_PER_PAGE_DEFAULT)))"], "Fixed commit": "290080e45aab0a6ffd8ab7173786da401be52fbe", "Url": "https://api.github.com/repos/cs2103jan2016-f14-4j/main", "Date": "2016-04-01T14:44:26Z"},
{"Line": "=>1596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((cartridgeInfo.getMetadataKeys()) != null) && ((cartridgeInfo.getMetadataKeys()[0]) != null)) { cartridge.setMetadataKeys(cartridgeInfo.getMetadataKeys()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6055/buggy-version/components.org.apache.stratos.rest.endpoint.src.main.java.org.apache.stratos.rest.endpoint.util.converter.ObjectConverter.java", "BodyUseAPI": ["org.apache.stratos.rest.endpoint.util.converter.CartridgeBean.setMetadataKeys(cartridgeInfo.getMetadataKeys())", "org.apache.stratos.rest.endpoint.util.converter.Cartridge.getMetadataKeys()"], "Fixed commit": "f6ef5fff9d603b0f4d4538d009f6e5567182b76a", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2015-05-18T07:01:43Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tempLeft instanceof org.json.JSONObject) && (tempRight instanceof org.json.JSONObject)) { mergedResult = edu.isi.karma.mapreduce.driver.JSONReducer.mergeJSONObjects(((org.json.JSONObject) (tempLeft)), ((org.json.JSONObject) (tempRight))); }else { if (tempLeft instanceof java.lang.String) { mergedResult = tempRight.toString(); }else { mergedResult = tempLeft.toString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/571/buggy-version/karma-mr.src.main.java.edu.isi.karma.mapreduce.driver.JSONReducer.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.Object.toString()"], "Fixed commit": "d44fdc768257091b3381817b915ca84540aff653", "Url": "https://api.github.com/repos/usc-isi-i2/Web-Karma", "Date": "2014-11-21T20:48:50Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getConsole().getMainSystem()) != null) if (!(message.getSourceName().equals(getConsole().getMainSystem()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7737/buggy-version/plugins-dev.planning.pt.up.fe.dceg.neptus.plugins.planning.MapPanel.java", "BodyUseAPI": [], "Fixed commit": "bcd1b9c285365feae1947510c8f9dc95a130a14c", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2013-03-27T17:56:17Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.engagepoint.university.admincentre.synchronization.SynchMaster.getInstance().info().isSingle())) { com.engagepoint.university.admincentre.synchronization.SynchMaster.getInstance().pull(); com.engagepoint.university.admincentre.synchronization.SynchMaster.getInstance().push(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6371/buggy-version/admincentre-console.src.main.java.com.engagepoint.university.admincentre.Main.java", "BodyUseAPI": [], "Fixed commit": "2ab04762794524da1077ea234c5f01b28c7821c3", "Url": "https://api.github.com/repos/engagepoint/labs-admin-center", "Date": "2014-03-11T15:59:39Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.engagepoint.university.admincentre.synchronization.SynchMaster.getInstance().isConnected()) { com.engagepoint.university.admincentre.ConsoleController.LOGGER.info((\"You are already connected to \" + (com.engagepoint.university.admincentre.synchronization.SynchMaster.getInstance().getClusterName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6371/buggy-version/admincentre-console.src.main.java.com.engagepoint.university.admincentre.ConsoleController.java", "BodyUseAPI": [], "Fixed commit": "2ab04762794524da1077ea234c5f01b28c7821c3", "Url": "https://api.github.com/repos/engagepoint/labs-admin-center", "Date": "2014-03-11T15:59:39Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["image.getPersons().get(0).getPersonRelation()", "existedImage.getPersons().get(0).getPersonRelation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((existedRelation != null) && (existedRelation.equals(imageRelation))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5548/buggy-version/HRHRP.src.kr.ac.kaist.hrhrp.quiz.GetQuizImages.java", "BodyUseAPI": [], "Fixed commit": "fab42bae0c837808417659389b10448eea901042", "Url": "https://api.github.com/repos/ghsdh3409/hrhrp-server", "Date": "2015-04-08T06:51:50Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["image.getPersons().get(0).getPersonRelation()", "existedImage.getPersons().get(0).getPersonRelation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((existedRelation != null) && (existedRelation.equals(imageRelation))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5548/buggy-version/HRHRP.src.kr.ac.kaist.hrhrp.quiz.GetQuizImages.java", "BodyUseAPI": [], "Fixed commit": "fab42bae0c837808417659389b10448eea901042", "Url": "https://api.github.com/repos/ghsdh3409/hrhrp-server", "Date": "2015-04-08T06:51:50Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(((friend.getName()) + \"History\"),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(messages.equals(\"\"))) { messages = messages + \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3551/buggy-version/app.src.main.java.com.tesfaye.lolchat.ChatService.java", "BodyUseAPI": [], "Fixed commit": "b22e3e62bea70d6d5f63197300391cdd6322594c", "Url": "https://api.github.com/repos/abelDev/LOL-Chat", "Date": "2014-09-03T01:01:38Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldLogControlOids()) { builder.ldapResponseControls(operation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6481/buggy-version/opendj-server-legacy.src.main.java.org.opends.server.loggers.CommonAuditAccessLogPublisher.java", "BodyUseAPI": [], "Fixed commit": "4cba8fe7c5bfd75fc8334a4e887fba8c71526b4e", "Url": "https://api.github.com/repos/OpenRock/OpenDJ", "Date": "2016-10-17T11:34:29Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.length) < (that.length)) { return false; }else if ((this.length) > (that.length)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2285/buggy-version/HugeInteger-master.src.main.java.assignment.HugeInteger.java", "BodyUseAPI": [], "Fixed commit": "f038c301ec93d274b0abea0fafccb8b27d85fba1", "Url": "https://api.github.com/repos/ekanshmittal/Assignment2", "Date": "2015-08-14T07:26:11Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (network != null) storage.connectionManager.release(network);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6770/buggy-version/client.src.main.java.com.orientechnologies.orient.client.remote.OServerAdmin.java", "BodyUseAPI": ["storage.connectionManager.release(com.orientechnologies.orient.client.binary.OChannelBinaryAsynchClient)"], "Fixed commit": "4725cf6f262699d62345afc3d0e3b199837db437", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-06-21T10:15:46Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shuttingDown) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5339/buggy-version/src.main.java.net.t7seven7t.swornmarket.io.ShopDataCache.java", "BodyUseAPI": [], "Fixed commit": "7f31047a44aac9f505218fd817bc1da5cc8adc25", "Url": "https://api.github.com/repos/MineSworn/SwornMarket", "Date": "2013-07-02T22:42:04Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.length()) > 0) java.lang.System.out.println(msg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/432/buggy-version/src.com.homelearning.view.DeveloperView.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "0ebea0502b556ed887c0ac53bea5a20234989f2b", "Url": "https://api.github.com/repos/soul33d/Homework04.1", "Date": "2017-06-21T10:51:11Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((params.zonesXmlFile) != null) && ((params.zonesShpFile) != null)) { zones = playground.michalm.taxi.run.Zones.readZones(scenario, params.zonesXmlFile, params.zonesShpFile); java.lang.System.err.println(\"No conversion of SRS is done\"); }else { zones = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3233/buggy-version/playgrounds.michalm.src.main.java.playground.michalm.taxi.run.TaxiLauncher.java", "BodyUseAPI": [], "Fixed commit": "20d2b2d52073f5a6f6318b406ff72b5d25db01cb", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2015-08-04T21:20:19Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(idPName)) { idPName = \"Undefined\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2965/buggy-version/components.idp-mgt.org.wso2.carbon.idp.mgt.src.main.java.org.wso2.carbon.idp.mgt.listener.IDPMgtAuditLogger.java", "BodyUseAPI": [], "Fixed commit": "597d5a98cb8adc6047792151707ea64a451a76e1", "Url": "https://api.github.com/repos/wso2-attic/carbon-identity", "Date": "2015-12-02T09:36:10Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(identityProvider.getDisplayName())) { displayName = identityProvider.getDisplayName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2965/buggy-version/components.idp-mgt.org.wso2.carbon.idp.mgt.src.main.java.org.wso2.carbon.idp.mgt.listener.IDPMgtAuditLogger.java", "BodyUseAPI": ["org.wso2.carbon.identity.application.common.model.IdentityProvider.getDisplayName()"], "Fixed commit": "597d5a98cb8adc6047792151707ea64a451a76e1", "Url": "https://api.github.com/repos/wso2-attic/carbon-identity", "Date": "2015-12-02T09:36:10Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.confluent.kafkarest.MetadataObserver.getTopicPartitions(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((partitions.size()) == 0) { throw io.confluent.kafkarest.Errors.topicNotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1671/buggy-version/src.main.java.io.confluent.kafkarest.MetadataObserver.java", "BodyUseAPI": [], "Fixed commit": "bcb65b2ec837749b74355a61e9e7403c650ff80b", "Url": "https://api.github.com/repos/HenriJ/kafka-rest", "Date": "2015-03-08T21:58:27Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == (ArgumentType.FLOAT)) { out.writeFloat(java.lang.Float.valueOf(value.toString())); }else if ((type) == (ArgumentType.DOUBLE)) { out.writeDouble(java.lang.Double.valueOf(value.toString())); }else if (((type) == (ArgumentType.CHAR)) && ((value) instanceof java.lang.Character)) { char c = ((java.lang.Character) (value)); out.writeChar(c); }else { throw new java.io.IOException((\"cannot write the object type: \" + (type.name()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2671/buggy-version/bus-commons.device-bus-commons.src.main.java.com.ani.bus.device.commons.dto.device.ArgumentDto.java", "BodyUseAPI": [], "Fixed commit": "f83f404f0d177b420e039430efa3cea57b25259f", "Url": "https://api.github.com/repos/anicloud/anicel-commons", "Date": "2016-11-24T09:32:20Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.javaparser.JavaParser.parse(java.io.FileInputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (((null != cu) && (null != (cu.getPackage()))) && (!(cu.getPackage().getName().getName().isEmpty()))) return ((cu.getPackage().getName()) + \".\") + (org.apache.commons.io.FilenameUtils.getBaseName(fileName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7833/buggy-version/src.main.java.org.codedefenders.UploadManager.java", "BodyUseAPI": ["cu.getPackage().getName()", "com.github.javaparser.ast.CompilationUnit.getPackage()"], "Fixed commit": "365b95901036012783998b600c5d3a2a1ceeb5a6", "Url": "https://api.github.com/repos/CodeDefenders/CodeDefenders", "Date": "2016-07-29T17:24:10Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.modifyType) != (com.elmakers.mine.bukkit.api.block.ModifyType.FAST)) { this.modifyType = com.elmakers.mine.bukkit.api.block.ModifyType.NO_PHYSICS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/793/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.block.UndoList.java", "BodyUseAPI": [], "Fixed commit": "408a5b002741f133b005e23ff3fe95b89b3dd7d8", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-07-25T19:10:48Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((effect.getGeneName()) != null) && (!(effect.getGeneName().equals(\"\")))) { geneNames.add(effect.getGeneName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4561/buggy-version/bioformats.src.main.java.org.opencb.commons.bioformats.variant.vcf4.annotators.VcfGeneNameAnnotator.java", "BodyUseAPI": ["org.opencb.commons.bioformats.variant.utils.effect.VariantEffect.getGeneName()", "java.util.Set<java.lang.String>.add(effect.getGeneName())"], "Fixed commit": "53ebca104f892a4ea7366c158faebfa72faa7c14", "Url": "https://api.github.com/repos/pabarcgar/java-common-libs", "Date": "2013-11-21T13:16:06Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (texture == null) throw new java.lang.IllegalArgumentException(\"No particle texture specified!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1001/buggy-version/src.main.java.thebetweenlands.client.render.model.baked.ModelBlank.java", "BodyUseAPI": [], "Fixed commit": "7040ae4ab965de98974bb121dc215f79516da105", "Url": "https://api.github.com/repos/Angry-Pixel/The-Betweenlands", "Date": "2016-07-27T18:39:29Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result != null) && (result instanceof java.lang.Boolean)) { succeeded = ((java.lang.Boolean) (result)); }else { succeeded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5133/buggy-version/src.main.java.io.jsync.impl.DefaultFutureResult.java", "BodyUseAPI": [], "Fixed commit": "20e75e2e135fab1a9776515a0feec8714b428dd4", "Url": "https://api.github.com/repos/BestellenSoftware/jsync.io", "Date": "2017-08-21T18:17:07Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS); getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8997/buggy-version/app.src.main.java.com.drizzle.drizzledaily.ui.GildeActivity.java", "BodyUseAPI": [], "Fixed commit": "b1aa8fb8d7cc9d264361833946d05cfabc761323", "Url": "https://api.github.com/repos/Drizzlezhang/DrizzleDaily", "Date": "2015-12-22T12:44:56Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userIP == null) || (userIP.equals(\"\"))) { userIP = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8665/buggy-version/src.library.UserHistoryUtil.java", "BodyUseAPI": [], "Fixed commit": "95082ac6bd11cc601bd73698a9364a25f8ee9935", "Url": "https://api.github.com/repos/drakonoved/library", "Date": "2017-03-21T12:03:37Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userId == null) || (userId.equals(\"\"))) { userId = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8665/buggy-version/src.library.UserHistoryUtil.java", "BodyUseAPI": [], "Fixed commit": "95082ac6bd11cc601bd73698a9364a25f8ee9935", "Url": "https://api.github.com/repos/drakonoved/library", "Date": "2017-03-21T12:03:37Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDataType) == (ca.josephroque.bowlingcompanion.adapter.NameAverageAdapter.DATA_LEAGUES_EVENTS)) nameToDelete = nameToDelete.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2379/buggy-version/BC-Free.app.src.main.java.ca.josephroque.bowlingcompanion.adapter.NameAverageAdapter.java", "BodyUseAPI": [], "Fixed commit": "acc8e6a48a26969923c97528d31c81d68fee903e", "Url": "https://api.github.com/repos/josephroqueca/bowling-companion", "Date": "2015-08-02T21:25:31Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sbar.smsnenado.MainActivity.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (activity != null) { activity.updateItemStatus(msgId, code); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7034/buggy-version/src.com.sbar.smsnenado.BootService.java", "BodyUseAPI": ["com.sbar.smsnenado.MainActivity.updateItemStatus(java.lang.String,int)"], "Fixed commit": "c6273ae5602441c224521f56fec92ec446ca188c", "Url": "https://api.github.com/repos/sbar/smsnenado", "Date": "2013-10-06T22:11:44Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hp.hpl.jena.graph.Node.getLiteralValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj instanceof com.hp.hpl.jena.datatypes.BaseDatatype.TypedValue) { com.hp.hpl.jena.datatypes.BaseDatatype.TypedValue val = ((com.hp.hpl.jena.datatypes.BaseDatatype.TypedValue) (obj)); objectValue = valueFactory.createLiteral(val.lexicalValue); }else if (obj instanceof com.hp.hpl.jena.datatypes.xsd.XSDDateTime) { com.hp.hpl.jena.datatypes.xsd.XSDDateTime date = ((com.hp.hpl.jena.datatypes.xsd.XSDDateTime) (obj)); objectValue = valueFactory.createLiteral(date.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7867/buggy-version/gsoc-freebase-graph-importer.src.main.java.com.gsoc.freebase.importer.impl.AbstractFreebaseImporterStep.java", "BodyUseAPI": [], "Fixed commit": "ae7d12107cce7495376fe3db7c3d73cdd313b2cf", "Url": "https://api.github.com/repos/adperezmorales/gsoc-freebase-graph-importer", "Date": "2013-08-27T11:23:51Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.up.cs301.catan.CatanGameState.getTiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tiles[tileAdjList[j]].getResource()) != 0) { if (!(resourcesHave[((tiles[tileAdjList[j]].getResource()) - 1)])) { score += 10; } score += 6 - (java.lang.Math.abs(((tiles[tileAdjList[j]].getRollNumber()) - 7))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4781/buggy-version/app.src.main.java.edu.up.cs301.catan.CatanSmartComputerPlayer.java", "BodyUseAPI": ["java.lang.Math.abs(((tiles[tileAdjList[j]].getRollNumber()) - 7))", "tiles[tileAdjList[j]].getRollNumber()", "tiles[tileAdjList[j]].getResource()"], "Fixed commit": "3ea043d16caca6fc424a83aa66463b0bbd8908d4", "Url": "https://api.github.com/repos/schneidm17/SettlersOfCatan", "Date": "2015-12-02T01:19:07Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.up.cs301.catan.CatanGameState.getTiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tiles[tileAdjList[j]].getResource()) != 0) { if (!(resourcesHave[((tiles[tileAdjList[j]].getResource()) - 1)])) { score += 10; } score += 6 - (java.lang.Math.abs(((tiles[tileAdjList[j]].getRollNumber()) - 7))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4781/buggy-version/app.src.main.java.edu.up.cs301.catan.CatanComputerPlayer.java", "BodyUseAPI": ["tiles[tileAdjList[j]].getResource()", "java.lang.Math.abs(((tiles[tileAdjList[j]].getRollNumber()) - 7))", "tiles[tileAdjList[j]].getRollNumber()"], "Fixed commit": "3ea043d16caca6fc424a83aa66463b0bbd8908d4", "Url": "https://api.github.com/repos/schneidm17/SettlersOfCatan", "Date": "2015-12-02T01:19:07Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.ql.exec.FileSinkOperator.getDestTableId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((id != 0) && (id <= (org.apache.hadoop.hive.ql.exec.FileSinkOperator.TableIdEnum.values().length))) { java.lang.String enumName = (\"TABLE_ID_\" + (java.lang.String.valueOf(id))) + \"_ROWCOUNT\"; tabIdEnum = org.apache.hadoop.hive.ql.exec.FileSinkOperator.TableIdEnum.valueOf(enumName); row_count = new org.apache.hadoop.io.LongWritable(); statsMap.put(tabIdEnum, row_count); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1566/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.exec.FileSinkOperator.java", "BodyUseAPI": ["java.lang.String.valueOf(int)"], "Fixed commit": "6a9a08d77225eaf59dc22c854659e522dcb82c0a", "Url": "https://api.github.com/repos/vipshop/hive", "Date": "2014-07-22T02:09:55Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values.length) == 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8814/buggy-version/src.dna.series.data.DistributionInt.java", "BodyUseAPI": [], "Fixed commit": "d198ce57a6d2126ce7233e63fb8dd3ff4f3fe4bb", "Url": "https://api.github.com/repos/BJahn/DNA", "Date": "2014-06-11T20:06:56Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y == (values.length)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8814/buggy-version/src.dna.series.data.DistributionInt.java", "BodyUseAPI": [], "Fixed commit": "d198ce57a6d2126ce7233e63fb8dd3ff4f3fe4bb", "Url": "https://api.github.com/repos/BJahn/DNA", "Date": "2014-06-11T20:06:56Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastModified != null) { queryStr.append(\" AND last_modified > :last_modified\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8595/buggy-version/dspace-api.src.main.java.org.dspace.content.dao.impl.ItemDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "1e8fa3f0636de944afd3e70248ee0adef8516ef3", "Url": "https://api.github.com/repos/aucompbiker/DSpace", "Date": "2015-10-12T17:44:11Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (lastModified != null) { query.setTimestamp(\"last_modified\", lastModified); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8595/buggy-version/dspace-api.src.main.java.org.dspace.content.dao.impl.ItemDAOImpl.java", "BodyUseAPI": ["org.hibernate.Query.setTimestamp(java.lang.String,java.util.Date)"], "Fixed commit": "1e8fa3f0636de944afd3e70248ee0adef8516ef3", "Url": "https://api.github.com/repos/aucompbiker/DSpace", "Date": "2015-10-12T17:44:11Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((history) != null) { for (java.lang.String string : history) { if (string.toLowerCase().startsWith(constraint.toString().toLowerCase())) { dataMap.put(string, com.miguelcatalan.materialsearchview.SearchAdapter.SearchTypes.HISTORY_TYPE); searchData.add(string); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6841/buggy-version/library.src.main.java.com.miguelcatalan.materialsearchview.SearchAdapter.java", "BodyUseAPI": [], "Fixed commit": "d18914cf3f52a53827eb8c368d6646b2e5882c88", "Url": "https://api.github.com/repos/Julie-R/MaterialSearchView", "Date": "2016-03-03T16:18:38Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((suggestions) != null) { for (java.lang.String string : suggestions) { if ((string.toLowerCase().startsWith(constraint.toString().toLowerCase())) && (!(dataMap.containsKey(string)))) { dataMap.put(string, com.miguelcatalan.materialsearchview.SearchAdapter.SearchTypes.SUGGESTION_TYPE); searchData.add(string); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6841/buggy-version/library.src.main.java.com.miguelcatalan.materialsearchview.SearchAdapter.java", "BodyUseAPI": [], "Fixed commit": "d18914cf3f52a53827eb8c368d6646b2e5882c88", "Url": "https://api.github.com/repos/Julie-R/MaterialSearchView", "Date": "2016-03-03T16:18:38Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((history) != null) { for (java.lang.String string : history) { searchData.add(string); dataMap.put(string, com.miguelcatalan.materialsearchview.SearchAdapter.SearchTypes.HISTORY_TYPE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6841/buggy-version/library.src.main.java.com.miguelcatalan.materialsearchview.SearchAdapter.java", "BodyUseAPI": [], "Fixed commit": "d18914cf3f52a53827eb8c368d6646b2e5882c88", "Url": "https://api.github.com/repos/Julie-R/MaterialSearchView", "Date": "2016-03-03T16:18:38Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state.flipTexture) setUV(icon, (1 - (minUDiv[ix])), minVDiv[iy], (1 - (maxUDiv[ix])), maxVDiv[iy]); else setUV(icon, minUDiv[ix], minVDiv[iy], maxUDiv[ix], maxVDiv[iy]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1932/buggy-version/src.com.jaquadro.minecraft.gardencore.util.RenderHelperLL.java", "BodyUseAPI": [], "Fixed commit": "934a71b08bbfb7f5cb29c2f6400e4de221ad4a2a", "Url": "https://api.github.com/repos/jaquadro/GardenCollection", "Date": "2015-05-15T02:10:41Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isFirstRoom) { exits = (random.nextInt(2)) + 2; }else { exits = (random.nextInt(3)) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1108/buggy-version/src.reconditty.Room.java", "BodyUseAPI": [], "Fixed commit": "a545d15434343e27c2c92765277a7d86210e713a", "Url": "https://api.github.com/repos/reconditestudios/Recondite", "Date": "2012-04-14T02:30:30Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (nombreRival != (nombreJugador)) { conexion.aceptaPartida(nombreJugador, nombreRival); }else { java.lang.System.out.println(\"No se puede realizar partidas con uno mismo\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3423/buggy-version/Practica3.src.client.ClienteFlotaRMI.java", "BodyUseAPI": ["common.IntServidorJuegoRMI.aceptaPartida(java.lang.String,java.lang.String)"], "Fixed commit": "7bcbf77fc9e35cfd5d95f6aea5a1104b4b56a5d5", "Url": "https://api.github.com/repos/Riukken87/Sistemas_Distribuidos", "Date": "2017-11-13T10:18:10Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (replaced) { org.netbeans.gradle.project.model.GradleModelLoader.getCache().replaceEntry(model); }else { org.netbeans.gradle.project.model.GradleModelLoader.getCache().updateEntry(model); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7651/buggy-version/netbeans-gradle-plugin.src.main.java.org.netbeans.gradle.project.model.GradleModelLoader.java", "BodyUseAPI": [], "Fixed commit": "409c2c3a98dc348b511db32e77e42c8f3ddd71e0", "Url": "https://api.github.com/repos/kelemen/netbeans-gradle-project", "Date": "2013-12-04T21:30:45Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kylin.storage.hbase.ii.coprocessor.endpoint.LocalDictionary.getDictionary(org.apache.kylin.metadata.model.TblColRef)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dict == null) { int idx = type.getColIndexByTblColRef(col); int len = recordInfo.length(idx); result = new org.apache.kylin.dimension.FixedLenDimEnc(len); }else { result = new org.apache.kylin.dimension.DictionaryDimEnc(dict); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3127/buggy-version/storage-hbase.src.main.java.org.apache.kylin.storage.hbase.ii.coprocessor.endpoint.LocalDictionary.java", "BodyUseAPI": [], "Fixed commit": "697c83778cff8c9afacc186e715f8fa509296b21", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-03-15T10:03:07Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scanner.readWhile(org.codehaus.mojo.servicedocgen.JavaDocHelper.NO_COMMA_OR_CLOSING_BRACE).trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (argType.isEmpty()) { if (elementSeparator == ')') { anchorBuffer.append('-'); break; } }else { if (argType.contains(\".\")) { anchorBuffer.append(argType); titleBuffer.append(getSimpleName(argType)); }else { anchorBuffer.append(getQualifiedName(parentSource, argType)); titleBuffer.append(argType); } anchorBuffer.append('-'); comma = \", \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5057/buggy-version/src.main.java.org.codehaus.mojo.servicedocgen.JavaDocHelper.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "org.codehaus.mojo.servicedocgen.JavaDocHelper.getSimpleName(java.lang.String)", "org.codehaus.mojo.servicedocgen.JavaDocHelper.getQualifiedName(com.thoughtworks.qdox.model.JavaSource,java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "e252efc76689162fdde97364239048dd009a2b90", "Url": "https://api.github.com/repos/mojohaus/servicedocgen-maven-plugin", "Date": "2015-10-18T01:27:26Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vampirehemophile.ghosts.gamestates.MainGameState.hoveredSquare()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (loc == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7834/buggy-version/src.main.java.com.vampirehemophile.ghosts.gamestates.MainGameState.java", "BodyUseAPI": [], "Fixed commit": "d4f0692f396c0cbb3f9b425656afca2621e6460e", "Url": "https://api.github.com/repos/VampireHemophile/Ghosts", "Date": "2016-01-12T12:08:59Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mouseX) > ((bm.size()) * (com.vampirehemophile.ghosts.assets.ImageLoader.SQUARE_SIZE))) || ((mouseY) > ((bm.size()) * (com.vampirehemophile.ghosts.assets.ImageLoader.SQUARE_SIZE)))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7834/buggy-version/src.main.java.com.vampirehemophile.ghosts.gamestates.GameState.java", "BodyUseAPI": [], "Fixed commit": "d4f0692f396c0cbb3f9b425656afca2621e6460e", "Url": "https://api.github.com/repos/VampireHemophile/Ghosts", "Date": "2016-01-12T12:08:59Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vampirehemophile.ghosts.gamestates.SetupState.hoveredSquare()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (loc == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7834/buggy-version/src.main.java.com.vampirehemophile.ghosts.gamestates.SetupState.java", "BodyUseAPI": [], "Fixed commit": "d4f0692f396c0cbb3f9b425656afca2621e6460e", "Url": "https://api.github.com/repos/VampireHemophile/Ghosts", "Date": "2016-01-12T12:08:59Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((plant.getString(\"waterTime\")) != null) && (!(plant.getString(\"waterTime\").equals(\"\")))) { waterTime = plant.getString(\"waterTime\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/9067/buggy-version/app.src.main.java.mx.com.magoo.waterme.PlantActivity.java", "BodyUseAPI": ["com.parse.ParseObject.getString(java.lang.String)"], "Fixed commit": "a845544c1a4d9d8fb1dbcb6d116b077c665a1b8b", "Url": "https://api.github.com/repos/juliannieb/WaterMe", "Date": "2016-11-12T23:46:07Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((variableSnapshot.name) != null) { variableSnapshotText = ((variableSnapshot.name) + \"=\") + (variableSnapshot.value.trim()); }else { variableSnapshotText = variableSnapshot.value.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4978/buggy-version/scott.src.main.java.hu.advancedweb.scott.runtime.report.FailureRenderer.java", "BodyUseAPI": ["variableSnapshot.value.trim()", "variableSnapshot.value.trim()"], "Fixed commit": "1880666cf211bd493408b95a8618e2d866f64d37", "Url": "https://api.github.com/repos/dodie/scott", "Date": "2016-10-03T06:17:14Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.GINGERBREAD)) { editor.apply(); }else { editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/537/buggy-version/src.com.boombuler.piraten.map.PirateMap.java", "BodyUseAPI": [], "Fixed commit": "4284279292a3278c2bac15694207da7c142309ea", "Url": "https://api.github.com/repos/boombuler/piraten_map_app", "Date": "2013-07-07T19:34:49Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lu.fisch.canze.activities.MainActivity.isZOE()) { addListener(lu.fisch.canze.activities.ChargingTechActivity.SID_AvChargingPower); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5697/buggy-version/app.src.main.java.lu.fisch.canze.activities.ChargingTechActivity.java", "BodyUseAPI": [], "Fixed commit": "81de067fb097e840e9833b30c1025c16a3ae7b90", "Url": "https://api.github.com/repos/fesch/CanZE", "Date": "2016-12-22T20:12:25Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lu.fisch.canze.activities.MainActivity.isZOE()) sid = (lu.fisch.canze.activities.ChargingTechActivity.SID_Preamble_BalancingBytes) + (16 + (i * 8));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5697/buggy-version/app.src.main.java.lu.fisch.canze.activities.ChargingTechActivity.java", "BodyUseAPI": [], "Fixed commit": "81de067fb097e840e9833b30c1025c16a3ae7b90", "Url": "https://api.github.com/repos/fesch/CanZE", "Date": "2016-12-22T20:12:25Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(followed.get(followerEmail).contains(userEmail))) model.db.UserDAO.getInstance().followUser(userEmail, followerEmail);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/274/buggy-version/src.model.pojo.UsersManager.java", "BodyUseAPI": ["model.db.UserDAO.getInstance().followUser(java.lang.String,java.lang.String)"], "Fixed commit": "4dccd83176b6cf411f7cc3e731a09cd6c809c50d", "Url": "https://api.github.com/repos/beloslava/WIFRepo", "Date": "2016-10-02T09:33:16Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.nio.file.Files.notExists(filePath.getParent())) java.nio.file.Files.createDirectory(filePath.getParent());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/9171/buggy-version/src.IO.java", "BodyUseAPI": ["java.nio.file.Files.createDirectory(java.nio.file.Path)", "java.nio.file.Path.getParent()"], "Fixed commit": "c1e6eeb6c82e1ce3882bdf63bc649f3d01af711f", "Url": "https://api.github.com/repos/yasithmilinda/product-cipher", "Date": "2017-04-10T17:05:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasLooperNull) { android.os.Looper.loop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2003/buggy-version/dexter.src.main.java.com.karumi.dexter.WorkerThread.java", "BodyUseAPI": [], "Fixed commit": "6bd698c46dbd9d52ddbd070eb531fe67be4ef2fc", "Url": "https://api.github.com/repos/Coppernic/Dexter", "Date": "2017-05-12T13:11:42Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((string.length()) >= initialIndex) { stringBuilder.append(string.substring(initialIndex)).append(com.lordofthejars.asciidoctorfy.IOUtils.NEW_LINE); }else { stringBuilder.append(string.trim()).append(com.lordofthejars.asciidoctorfy.IOUtils.NEW_LINE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/62/buggy-version/src.main.java.com.lordofthejars.asciidoctorfy.IOUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.substring(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "21de7352e01ca76adf1cd33c9f6785c506caf97e", "Url": "https://api.github.com/repos/lordofthejars/asciidoctorfy", "Date": "2014-04-06T18:10:24Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evaluated) == null) { evaluated = Cons.nil; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8060/buggy-version/lazylisp.types.ThunkCons.java", "BodyUseAPI": [], "Fixed commit": "cfcdaa756074a6e3d736c691d9ea6419b18921e6", "Url": "https://api.github.com/repos/Lucus16/LazyLisp", "Date": "2015-03-20T13:27:17Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n instanceof il.org.spartan.refactoring.engine.InfixExpression) { final java.util.List<il.org.spartan.refactoring.engine.ASTNode> $ = new java.util.ArrayList<>(); $.addAll(extract.allOperands(((il.org.spartan.refactoring.engine.InfixExpression) (n)))); return $; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4975/buggy-version/src.main.java.il.org.spartan.refactoring.engine.Recurser.java", "BodyUseAPI": [], "Fixed commit": "495323181f94cc3338dbc75b538075e122d9e197", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2016-09-04T20:13:20Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, javax.persistence.criteria.Predicate>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (predicate != null) { countCriteria = countCriteria.select(builder.count(root)).where(predicate); resultsCount = this.em.createQuery(countCriteria).getSingleResult(); if (resultsCount >= 1) { predicatesList.add(predicate); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8967/buggy-version/tm-tkt.src.main.java.it.unipv.se2.tmtkt.controller.PriceSchemeController.java", "BodyUseAPI": ["countCriteria.select(builder.count(root)).where(javax.persistence.criteria.Predicate)", "java.util.List<javax.persistence.criteria.Predicate>.add(javax.persistence.criteria.Predicate)"], "Fixed commit": "074ae19ac5350ca6cf938f7fbb889b188e4c1848", "Url": "https://api.github.com/repos/glgerard/tm-tkt", "Date": "2014-01-23T19:58:35Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNode) == null) { android.util.Log.e(com.cscao.libs.gmswear.connectivity.FileTransfer.TAG, \"target node can't be null \"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8621/buggy-version/gmswear.src.main.java.com.cscao.libs.gmswear.connectivity.FileTransfer.java", "BodyUseAPI": [], "Fixed commit": "be00dd0b7275278fc0acbf360f0b93073f5485ff", "Url": "https://api.github.com/repos/csarron/GmsWear", "Date": "2016-11-14T07:16:31Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ref.isAbsolute()) { result = new java.lang.StringBuilder(subpath); }else { result = new java.lang.StringBuilder(service); if (service.endsWith(\"/\")) { if (subpath.startsWith(\"/\")) { result.append(subpath.substring(1)); }else { result.append(subpath); } }else { if (subpath.startsWith(\"/\")) { result.append(subpath); }else { result.append(\"/\").append(subpath); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5573/buggy-version/modules.org.restlet.ext.odata.src.org.restlet.ext.odata.Query.java", "BodyUseAPI": [], "Fixed commit": "09ed413fea1e9b82ca6b7f0edd46e2fade2d34d8", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2014-12-08T17:03:15Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.command.CommandSender.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (playerLocation == null) { sender.sendMessage(\"Sorry there but your location seams to not exist\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6736/buggy-version/src.main.java.io.github.dridenbukkitplugin.pvp_maze_bukkit.Commands.BoxIn.java", "BodyUseAPI": [], "Fixed commit": "a9c86650cda7284c21f06378aeefd07a0e101661", "Url": "https://api.github.com/repos/DridenBukkitPlugin/PVP-Maze_Bukkit", "Date": "2015-11-30T23:31:37Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((num) == 0) { cart.removeItem(did); }else { lineSum = cart.updateItem(did, num); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8520/buggy-version/javaeeHomeworkWeb.src.action.CartAction.java", "BodyUseAPI": [], "Fixed commit": "cc59f4135adf343d5529b474a337f9e9015b7202", "Url": "https://api.github.com/repos/zzt93/hci_hw", "Date": "2016-06-23T12:44:20Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["timer.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timerTime.isEmpty()) timerTime = \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5316/buggy-version/src.com.sam.hex.PreferencesActivity.java", "BodyUseAPI": [], "Fixed commit": "900be6bc8201035b3035b244ce0ab1a2d9a3a148", "Url": "https://api.github.com/repos/Xlythe/HexGame_Android", "Date": "2013-06-22T16:50:07Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isFirstTime) { new com.admazing.Logic.categoryObserver(this); isFirstTime = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/9071/buggy-version/src.main.java.com.admazing.Logic.PromotionUseServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ab866709521dc7d7d056b345c2531c6e894ef82f", "Url": "https://api.github.com/repos/dianalu01/WebWS", "Date": "2016-09-23T23:49:03Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (appType.equals(\"care\")) { callSettings(); }else if (appType.equals(\"senior\")) { android.widget.Toast.makeText(getApplicationContext(), \"Sign in as Care Giver to edit settings First!\", Toast.LENGTH_LONG).show(); }else { callAuth(); android.util.Log.i(com.slothnull.android.medox.Splash.TAG, \"2\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1949/buggy-version/app.src.main.java.com.slothnull.android.medox.Splash.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "9c4dfded424d084ffe49f5be63d7e8f17e519760", "Url": "https://api.github.com/repos/mahmoudShaheen/Medox", "Date": "2017-07-15T21:54:57Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/899/buggy-version/voicePlusPlus-sphinx4.src.main.java.voicePlusPlus.voicePlusPlus_sphinx4.TaskManager.java", "BodyUseAPI": [], "Fixed commit": "8d3c5e0f79521bad12272b8ea38cdbc572513bc9", "Url": "https://api.github.com/repos/pkhachatrian/voicePlusPlus", "Date": "2015-03-06T19:43:30Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((team.equals(\"WarZone\")) || (team.equals(\"SafeZone\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4179/buggy-version/src.main.java.io.github.hsyyid.polis.utils.ConfigManager.java", "BodyUseAPI": [], "Fixed commit": "41c0445d4e330dc68aea4fa6d1b5387b4ae9b057", "Url": "https://api.github.com/repos/hsyyid/Polis", "Date": "2016-03-28T17:20:00Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["connectfour.model.GameField.dropCoin(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (row >= (connectfour.model.GameField.DEFAULT_ROWS)) { success = false; useState(previousState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/547/buggy-version/src.connectfour.controller.GameController.java", "BodyUseAPI": [], "Fixed commit": "3142b1df76f497e504263100fafe4c8f597aff2f", "Url": "https://api.github.com/repos/jack10/connect4plus", "Date": "2012-06-25T14:53:32Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scount == 0) { java.lang.System.out.println(((\"Building \" + sid) + \" doesn\ufffd\ufffdt exist\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8494/buggy-version/src.tazo.Application.java", "BodyUseAPI": [], "Fixed commit": "4e2130544456594f0e5acb4b5ae6958699e72fa9", "Url": "https://api.github.com/repos/crazymi/SimpleTicketDatabase", "Date": "2017-12-20T12:23:09Z"},
{"Line": "=>931", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ccount == 0) { java.lang.System.out.println(((\"Performance \" + cid) + \" doesn\ufffd\ufffdt exist\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8494/buggy-version/src.tazo.Application.java", "BodyUseAPI": [], "Fixed commit": "4e2130544456594f0e5acb4b5ae6958699e72fa9", "Url": "https://api.github.com/repos/crazymi/SimpleTicketDatabase", "Date": "2017-12-20T12:23:09Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (drawer.isDrawerOpen(GravityCompat.START)) { drawer.closeDrawer(GravityCompat.START); }else if ((getSupportFragmentManager().getBackStackEntryCount()) == 1) { finish(); }else { super.onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/169/buggy-version/app.src.main.java.com.example.sani4.moneytracker.MainActivity.java", "BodyUseAPI": ["android.support.v4.widget.DrawerLayout.closeDrawer(GravityCompat.START)"], "Fixed commit": "855afbde73c2733e4c4b9b9f0375ebff56d21743", "Url": "https://api.github.com/repos/alekssolovev/moneyTracker", "Date": "2016-09-22T03:28:28Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.bl.monitrix.database.cassandra.ingest.CassandraCrawlStatsImporter.getStatsForTimestamp(long,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (unitToModify == null) { prepareNewCrawlStatsLine(); insertNewCrawlStatsLine(crawl_id, timeslot, entry); }else { unitToModify.setCompletedHosts(((unitToModify.countCompletedHosts()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3235/buggy-version/monitrix-webapp.app.uk.bl.monitrix.database.cassandra.ingest.CassandraCrawlStatsImporter.java", "BodyUseAPI": ["uk.bl.monitrix.database.cassandra.model.CassandraCrawlStatsUnit.setCompletedHosts(((unitToModify.countCompletedHosts()) - 1))", "uk.bl.monitrix.database.cassandra.model.CassandraCrawlStatsUnit.countCompletedHosts()"], "Fixed commit": "e3c03d5a8aaaa03961ec54c59d4553371777f276", "Url": "https://api.github.com/repos/shsdev/monitrix", "Date": "2014-10-10T14:54:32Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aSrc.getClass()) == (aDst.getClass())) { return !(aSrc.equals(aDst)); }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8456/buggy-version/src.main.java.org.azkfw.web.tags.logic.IfNotEqualTag.java", "BodyUseAPI": ["java.lang.Object.equals(java.lang.Object)"], "Fixed commit": "307dc9bc32de99a4ac20656db4017fb5624b27bf", "Url": "https://api.github.com/repos/azuki-framework/azuki-web", "Date": "2014-05-30T05:46:55Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aSrc.getClass()) == (aDst.getClass())) { return aSrc.equals(aDst); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8456/buggy-version/src.main.java.org.azkfw.web.tags.logic.IfEqualTag.java", "BodyUseAPI": ["java.lang.Object.equals(java.lang.Object)"], "Fixed commit": "307dc9bc32de99a4ac20656db4017fb5624b27bf", "Url": "https://api.github.com/repos/azuki-framework/azuki-web", "Date": "2014-05-30T05:46:55Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"session\".equals(scp.toLowerCase())) { if (org.azkfw.core.util.StringUtility.isNotEmpty(aKey)) { value = getSessionAttribute(aName, aKey); }else { value = getSessionAttribute(aName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8456/buggy-version/src.main.java.org.azkfw.web.tags.AbstractTag.java", "BodyUseAPI": [], "Fixed commit": "307dc9bc32de99a4ac20656db4017fb5624b27bf", "Url": "https://api.github.com/repos/azuki-framework/azuki-web", "Date": "2014-05-30T05:46:55Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targettime <= 0) { targettime = 10 + unixTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1614/buggy-version/app.src.main.java.de.jamsk.mrxserver.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fde3edbf8b2f6e9630a8ab4392e6e64738d32548", "Url": "https://api.github.com/repos/Steav005/MrXServer", "Date": "2017-01-29T22:48:01Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.ON)) { lexer.nextToken(); item.setValue(new com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr(\"ON\")); }else { item.setValue(this.expr()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6697/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.mysql.parser.MySqlExprParser.nextToken()"], "Fixed commit": "a2284e151f62cd5234c6e1327ce292629a58710c", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2016-08-03T07:44:02Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((current.GetChild().GetSyllables()) <= 7) current = current.GetChild();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5135/buggy-version/HaikuGenerator.src.haikugenerator.DFSB_Generator.java", "BodyUseAPI": ["haikugenerator.DFSB_Generator.DFSB_Node.GetChild()"], "Fixed commit": "344e7439a1e772e41a70c95076bb75f9d76e857b", "Url": "https://api.github.com/repos/MaxMagnuson/HaikuGenerator", "Date": "2016-12-06T20:53:00Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((current.GetChild().GetSyllables()) <= 5) current = current.GetChild();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5135/buggy-version/HaikuGenerator.src.haikugenerator.DFSB_Generator.java", "BodyUseAPI": ["haikugenerator.DFSB_Generator.DFSB_Node.GetChild()"], "Fixed commit": "344e7439a1e772e41a70c95076bb75f9d76e857b", "Url": "https://api.github.com/repos/MaxMagnuson/HaikuGenerator", "Date": "2016-12-06T20:53:00Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de.geithonline.systemlwp.utils.IntendHelper.isAvailable(getApplicationContext(), i)) { startActivityForResult(i, de.geithonline.systemlwp.PreferencesActivity.REQUEST); }else { de.geithonline.systemlwp.utils.Toaster.showErrorToast(this, (\"Intend not available on your device/rom: \" + i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/9075/buggy-version/src.de.geithonline.systemlwp.PreferencesActivity.java", "BodyUseAPI": ["de.geithonline.systemlwp.PreferencesActivity.startActivityForResult(android.content.Intent,int)", "de.geithonline.systemlwp.utils.Toaster.showErrorToast(de.geithonline.systemlwp.PreferencesActivity,(\"Intend not available on your device/rom: \" + i))"], "Fixed commit": "72b38dd1ae832e6b9934e55a5aba6da68e17e208", "Url": "https://api.github.com/repos/olivergeith/android_systemLWP", "Date": "2014-03-25T18:18:16Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.management.MonitorInfo.getLockedStackDepth()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lockedStackDepth >= 0) { stackTraceElements.get(lockedStackDepth).addMonitorInfo(ThreadDump.LockInfo.newBuilder().setClassName(lockedMonitor.getClassName()).setIdentityHashCode(lockedMonitor.getIdentityHashCode())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3794/buggy-version/agent.core.src.main.java.org.glowroot.agent.live.ThreadDumpService.java", "BodyUseAPI": ["java.util.List<ThreadDump.StackTraceElement.Builder>.get(int)", "stackTraceElements.get(lockedStackDepth).addMonitorInfo(ThreadDump.LockInfo.newBuilder().setClassName(lockedMonitor.getClassName()).setIdentityHashCode(lockedMonitor.getIdentityHashCode()))"], "Fixed commit": "2055e453d2963ee47d0e10104c56d809809cdfce", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2016-09-24T02:37:38Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<cc.warlock.core.client.ICompass.DirectionType, org.eclipse.swt.graphics.Image>.get(cc.warlock.core.client.ICompass.DirectionType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (dirImage != null) gc.drawImage(dirImage, ((int) ((point.x) * (scale))), ((int) ((point.y) * (scale))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6538/buggy-version/core.cc.warlock.rcp.src.cc.warlock.rcp.ui.WarlockCompass.java", "BodyUseAPI": ["org.eclipse.swt.graphics.GC.drawImage(org.eclipse.swt.graphics.Image,((int) ((point.x) * (scale))),((int) ((point.y) * (scale))))"], "Fixed commit": "d87752e6a31218890ce32a8e93019cf9c275d6b3", "Url": "https://api.github.com/repos/sproctor/warlock2", "Date": "2013-02-27T16:57:03Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.isEmpty()) result.add(getResolver().getDefaultGroup());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4078/buggy-version/src.main.java.org.tyrannyofheaven.bukkit.zPermissions.service.ZPermissionsServiceImpl.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(getResolver().getDefaultGroup())"], "Fixed commit": "3d5e4e5087e4f44766c618d167c9004a1bb80913", "Url": "https://api.github.com/repos/ZerothAngel/zPermissions", "Date": "2013-01-29T22:23:24Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) { }else { throw new java.lang.Exception(\"User account not found in database.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1917/buggy-version/AdviseMe.src.webapp.checkServlets.changeLoginStatus.java", "BodyUseAPI": [], "Fixed commit": "6a5b6e244be583705b9b3095ce9cc143fe850495", "Url": "https://api.github.com/repos/dsands12/AdviseMe", "Date": "2014-03-04T08:20:25Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playbackStarted) findTime(result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4679/buggy-version/app.src.main.java.com.subscreen.SubtitlePlayer.java", "BodyUseAPI": [], "Fixed commit": "227a335d2c0b4e805d1e3e21f475374eb48ec09d", "Url": "https://api.github.com/repos/smitnich/Subscreen", "Date": "2015-05-22T22:30:00Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerInstance.playbackStarted) { if ((FrameBlock.frameRateMultipliers[i]) == currentModifier) continue; long currentFrame = currentBlock.checkFramerate(FrameBlock.frameRateMultipliers[i], i); if (currentFrame > maxFrame) continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4679/buggy-version/app.src.main.java.com.subscreen.ShowText.java", "BodyUseAPI": [], "Fixed commit": "227a335d2c0b4e805d1e3e21f475374eb48ec09d", "Url": "https://api.github.com/repos/smitnich/Subscreen", "Date": "2015-05-22T22:30:00Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kafka.clients.consumer.KafkaConsumer<byte[], byte[]>.poll(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(records.isEmpty())) { consumer.commitAsync(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/756/buggy-version/src.main.java.org.wso2.carbon.inbound.kafka.KafkaMessageConsumer.java", "BodyUseAPI": [], "Fixed commit": "3216d71214d5bce88d3dc6cc9cc980c217823f52", "Url": "https://api.github.com/repos/hariss63/esb-inbound-kafka", "Date": "2017-08-07T03:33:19Z"},
{"Line": "=>1733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.dom.client.Element.getOffsetParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((\"body\".equalsIgnoreCase(offsetParent.getNodeName())) || (\"html\".equalsIgnoreCase(offsetParent.getNodeName()))) { parentOffset = new com.google.gwt.query.client.GQuery.Offset(0, 0); }else { parentOffset = com.google.gwt.query.client.GQuery.$(offsetParent).offset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4169/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.client.GQuery.java", "BodyUseAPI": ["com.google.gwt.query.client.GQuery.offset()", "com.google.gwt.query.client.GQuery.$(com.google.gwt.dom.client.Element)"], "Fixed commit": "9251bdbfa822a7e17af7a27291b84b68a3d6da45", "Url": "https://api.github.com/repos/manolo/gquery", "Date": "2011-01-11T17:37:29Z"},
{"Line": "=>1725", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.query.client.GQuery.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (element == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4169/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.client.GQuery.java", "BodyUseAPI": [], "Fixed commit": "9251bdbfa822a7e17af7a27291b84b68a3d6da45", "Url": "https://api.github.com/repos/manolo/gquery", "Date": "2011-01-11T17:37:29Z"},
{"Line": "=>1746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.query.client.GQuery.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"auto\".equals(element.getStyle().getMarginLeft()))) { leftMargin = ((int) (com.google.gwt.query.client.GQUtils.cur(element, \"marginLeft\", true))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4169/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.client.GQuery.java", "BodyUseAPI": ["com.google.gwt.query.client.GQUtils.cur(com.google.gwt.dom.client.Element,java.lang.String,boolean)"], "Fixed commit": "9251bdbfa822a7e17af7a27291b84b68a3d6da45", "Url": "https://api.github.com/repos/manolo/gquery", "Date": "2011-01-11T17:37:29Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cz.startnet.utils.pgdiff.loader.PgDumpLoader.isCorrectTag(tag))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3399/buggy-version/src.main.java.cz.startnet.utils.pgdiff.loader.PgDumpLoader.java", "BodyUseAPI": [], "Fixed commit": "1c1ddcbc268b0516b7435c61a4e21d6ae3bb6819", "Url": "https://api.github.com/repos/fordfrog/apgdiff", "Date": "2016-01-16T09:30:42Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cIndex < 0) { cIndex = 0; }else if (cIndex > (ed.candle)) { cIndex = ed.candle; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8240/buggy-version/app.src.main.java.com.alex.develop.ui.CandleView.java", "BodyUseAPI": [], "Fixed commit": "5b523f625186ef7aa1d3dfb0102d01310bde60fd", "Url": "https://api.github.com/repos/zxfhacker/StocksAnalyzer", "Date": "2015-08-06T15:44:06Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiElement.getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((com.intellij.psi.util.PsiUtilCore.getElementType(element)) == (LP_STRING_QW)) { element = element.getFirstChild(); if (element == null) { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6092/buggy-version/src.com.perl5.lang.perl.util.PerlArrayUtil.java", "BodyUseAPI": ["com.intellij.psi.PsiElement.getFirstChild()"], "Fixed commit": "b8414ebad809a145c92a1ae69b3af6a2def82b40", "Url": "https://api.github.com/repos/Camelcade/Perl5-IDEA", "Date": "2017-06-16T08:05:35Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) { itba.ss.TP5_GranularEnvironment.Particle p = new itba.ss.TP5_GranularEnvironment.Particle((id++), (diameter / 2), x, y, 0, 0, itba.ss.TP5_GranularEnvironment.GranularEnvironment.MASS); this.particles.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4396/buggy-version/TP5-GranularEnvironment.src.main.java.itba.ss.TP5_GranularEnvironment.GranularEnvironment.java", "BodyUseAPI": [], "Fixed commit": "1ebcb9c7d4409cd6fa4286082f9017dd7b4f761d", "Url": "https://api.github.com/repos/iitzco/SystemSimulations", "Date": "2016-10-12T18:40:10Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getPanelNode().findElement(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (dataListNode != null) { result = dataListNode.getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4785/buggy-version/tz-commons.tz-commons-web.src.main.java.com.thruzero.common.web.model.container.builder.xml.XmlFaqPanelBuilder.java", "BodyUseAPI": ["com.thruzero.common.core.infonode.InfoNodeElement.getText()"], "Fixed commit": "c29e3ac7e8f9cb1160c582f18d7260ce0398a167", "Url": "https://api.github.com/repos/georgenorman/tz-commons", "Date": "2013-11-16T22:27:53Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codinjutsu.tools.jenkins.view.action.UploadPathToJob.prepareFile(com.intellij.openapi.fileChooser.FileChooser.chooseFile(browserPanel, new com.intellij.openapi.fileChooser.FileChooserDescriptor(true, false, false, false, false, false)),org.codinjutsu.tools.jenkins.JenkinsAppSettings)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != virtualFile) { if (virtualFile.exists()) { java.util.Map<java.lang.String, com.intellij.openapi.vfs.VirtualFile> files = new java.util.HashMap<java.lang.String, com.intellij.openapi.vfs.VirtualFile>(); files.put(org.codinjutsu.tools.jenkins.view.action.UploadPathToJob.PARAMETER_NAME, virtualFile); requestManager.runBuild(job, settings, files); notifyOnGoingMessage(job); browserPanel.loadSelectedJob(); }else { message = java.lang.String.format(\"File \\\"%s\\\" not exists\", virtualFile.getPath()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3993/buggy-version/src.main.java.org.codinjutsu.tools.jenkins.view.action.UploadPathToJob.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.intellij.openapi.vfs.VirtualFile>.put(java.lang.String,com.intellij.openapi.vfs.VirtualFile)", "java.lang.String.format(java.lang.String,virtualFile.getPath())", "com.intellij.openapi.vfs.VirtualFile.exists()", "com.intellij.openapi.vfs.VirtualFile.getPath()"], "Fixed commit": "221c0624b64d7230473259f1a58b01cb96ebdac8", "Url": "https://api.github.com/repos/nyver/jenkins-control-plugin", "Date": "2013-05-28T13:23:03Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(afterAdd)) canvas.setFont(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/468/buggy-version/Whiteboard.java", "BodyUseAPI": [], "Fixed commit": "d035223d29952265bfcca2df127de265f6c169fe", "Url": "https://api.github.com/repos/rhong612/whiteboard", "Date": "2016-05-21T23:18:51Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(afterAdd)) canvas.updateTextShape(textInput.getText());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/468/buggy-version/Whiteboard.java", "BodyUseAPI": [], "Fixed commit": "d035223d29952265bfcca2df127de265f6c169fe", "Url": "https://api.github.com/repos/rhong612/whiteboard", "Date": "2016-05-21T23:18:51Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model instanceof DTextModel) { afterAdd = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/468/buggy-version/Whiteboard.java", "BodyUseAPI": [], "Fixed commit": "d035223d29952265bfcca2df127de265f6c169fe", "Url": "https://api.github.com/repos/rhong612/whiteboard", "Date": "2016-05-21T23:18:51Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (thriftClientInfo.isStatsPublisherEnabled()) { java.util.ArrayList<org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder> dataPublisherHolders = new java.util.ArrayList<org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder>(); org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder aNode = new org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder(null, buildUrl(thriftClientInfo), thriftClientInfo.getUsername(), thriftClientInfo.getPassword()); dataPublisherHolders.add(aNode); org.wso2.carbon.databridge.agent.thrift.lb.ReceiverGroup group = new org.wso2.carbon.databridge.agent.thrift.lb.ReceiverGroup(dataPublisherHolders); receiverGroups.add(group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6472/buggy-version/components.org.apache.stratos.common.src.main.java.org.apache.stratos.common.statistics.publisher.ThriftStatisticsPublisher.java", "BodyUseAPI": ["org.apache.stratos.common.statistics.publisher.ThriftClientInfo.getUsername()", "org.apache.stratos.common.statistics.publisher.ThriftStatisticsPublisher.buildUrl(org.apache.stratos.common.statistics.publisher.ThriftClientInfo)", "org.apache.stratos.common.statistics.publisher.ThriftClientInfo.getPassword()"], "Fixed commit": "1fc8e4c8741f019ed703077b17bae7e9cf03eb0c", "Url": "https://api.github.com/repos/Thanu/stratos", "Date": "2015-11-29T18:44:30Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wineTable) != null) { wineTable.setCurrentPageFirstItemId(selectedWine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/9047/buggy-version/src.com.thomas.winecellar.ui.desktop.WineTablePanel.java", "BodyUseAPI": [], "Fixed commit": "1937fe28637fb84a8998d3f9359235e7184b6a0d", "Url": "https://api.github.com/repos/tmattsso/VineCellar", "Date": "2015-03-22T09:38:32Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.List<play.data.validation.ValidationError>>.getKey()", "MyUsernamePasswordAuthProvider.SIGNUP_FORM.bindFromRequest()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((((string.equals(\"password\")) || (string.equals(\"repeatPassword\"))) && ((filledForm.field(\"password\").value()) != (filledForm.field(\"RepeatPassword\").value()))) && ((filledForm.field(\"password\").value()) != \"\")) && ((filledForm.field(\"RepeatPassword\").value()) != \"\")) flash().put(\"passwordMismatch\", \"error\"); else if (!(string.equals(\"repeatPassword\"))) flash().put(string, \"error\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6632/buggy-version/app.controllers.Signup.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "flash().put(java.lang.String,java.lang.String)"], "Fixed commit": "2bcde397cb8586f9e0e60533c00c1b31423f6422", "Url": "https://api.github.com/repos/pasinipolimi/Sketchness", "Date": "2014-08-06T14:52:46Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (theText == null) return processedText;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4858/buggy-version/src.net.aufdemrand.denizen.ScriptEngine.java", "BodyUseAPI": [], "Fixed commit": "ebedcead1e9f3f3bf13e26307067284cd438082b", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2012-06-13T20:19:44Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Denizen.scriptEngine.getMultilineText(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(bystanderText.isEmpty())) { for (java.lang.String text : bystanderText) { Denizen.getDenizen.talkToPlayer(theDenizen, thePlayer, null, text, commandArgs[0]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4858/buggy-version/src.net.aufdemrand.denizen.CommandExecuter.java", "BodyUseAPI": [], "Fixed commit": "ebedcead1e9f3f3bf13e26307067284cd438082b", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2012-06-13T20:19:44Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tail.ServerThread.parseRequest(java.io.BufferedReader)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (request.equals(\"favicon.ico\")) { }else if (request.equals(\"file\")) { writeLatestFilename(in, stream, headers); }else { writeLatestStream(in, stream, headers, request); java.lang.System.out.println((((\"Stats: sent: \" + (client.getSize())) + \", average speed: \") + (client.getAverageSpeed()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6782/buggy-version/src.tail.ServerThread.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "tail.ServerThread.writeLatestStream(java.io.BufferedReader,java.io.BufferedOutputStream,java.util.List<java.lang.String>,java.lang.String)"], "Fixed commit": "d3c239cefd864315e00122c8444252b2fe5377e6", "Url": "https://api.github.com/repos/tobiasschulz/tailserver", "Date": "2013-07-26T00:03:38Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getSource().getFile()", "org.eclipse.core.resources.IFile.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (filename2.endsWith(filename1)) { java.lang.System.out.println(e); de.peeeq.eclipsewurstplugin.builder.WurstNature.addErrorMarker(file, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6427/buggy-version/EclipseWurstPlugin.src.de.peeeq.eclipsewurstplugin.builder.WurstBuilder.java", "BodyUseAPI": [], "Fixed commit": "a6361873335bc32aa1258b278eedf72237b7eed7", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2012-08-09T08:57:21Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack2.isEmpty()) shiftStacks();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/572/buggy-version/src.chapter03.MyQueue.java", "BodyUseAPI": [], "Fixed commit": "18e876f1e2813bd7c6c9e7a32451958209e5bf5d", "Url": "https://api.github.com/repos/RodneyShag/Cracking-the-Coding-Interview_solutions", "Date": "2017-02-03T11:00:15Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/572/buggy-version/src.chapter03.MyQueue.java", "BodyUseAPI": [], "Fixed commit": "18e876f1e2813bd7c6c9e7a32451958209e5bf5d", "Url": "https://api.github.com/repos/RodneyShag/Cracking-the-Coding-Interview_solutions", "Date": "2017-02-03T11:00:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stack2.isEmpty()) { while (!(stack1.isEmpty())) { T temp = stack1.pop(); stack2.push(temp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/572/buggy-version/src.chapter03.MyQueue.java", "BodyUseAPI": ["java.util.Stack<T>.push(T)"], "Fixed commit": "18e876f1e2813bd7c6c9e7a32451958209e5bf5d", "Url": "https://api.github.com/repos/RodneyShag/Cracking-the-Coding-Interview_solutions", "Date": "2017-02-03T11:00:15Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 0) { }else if (j == 0) { }else if (i == ((MapEditor.n) - 1)) { }else if (j == ((MapEditor.n) - 1)) { }else { MapEditor.feld[i][j].addActionListener(list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7891/buggy-version/src.MapEditor.java", "BodyUseAPI": ["javax.swing.JButton.addActionListener(java.awt.event.ActionListener)"], "Fixed commit": "92e4f6fa86647639ec6df73bf604b1dad1e10d2d", "Url": "https://api.github.com/repos/propra12-orga/gruppe23", "Date": "2012-07-05T20:50:43Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jwsmv.wsman.operation.CreateOperation.dispatch0(jwsmv.wsman.Port)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj instanceof java.util.List) { for (java.lang.Object elt : ((java.util.List) (obj))) { if (elt instanceof org.xmlsoap.ws.transfer.ResourceCreated) { obj = elt; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5949/buggy-version/src.jwsmv.wsman.operation.CreateOperation.java", "BodyUseAPI": [], "Fixed commit": "964eba448f38aa59117871aa031f96fc23930099", "Url": "https://api.github.com/repos/joval/jWSMV", "Date": "2013-03-27T17:21:56Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWidget().getNumberOfSeries()) == 0) { seriesAndDataLabelsRendered = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/9029/buggy-version/addon.src.main.java.com.vaadin.addon.charts.shared.ChartConnector.java", "BodyUseAPI": [], "Fixed commit": "2b800481ad49271dcc9d1438f44a3472d758328b", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsOverlay.getSeries()) != null) { return jsOverlay.getSeries().length(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/9029/buggy-version/addon.src.main.java.com.vaadin.addon.charts.client.ui.HighchartWidget.java", "BodyUseAPI": ["com.vaadin.addon.charts.client.ui.HighchartJsOverlay.getSeries()", "jsOverlay.getSeries().length()"], "Fixed commit": "2b800481ad49271dcc9d1438f44a3472d758328b", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rs.next()) { ex.showHomeworkMenu(rs, id); }else { rs = bean.Student.qr.selectQueries(((\"select * from courses where course_id='\" + option) + \"'\")); if (rs.next()) { java.lang.System.out.println((\"No homework exists for \" + option)); }else { java.lang.System.out.println(\"Invalid Course ID, Check formatting!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6506/buggy-version/src.bean.Student.java", "BodyUseAPI": ["bean.Exercise.showHomeworkMenu(java.sql.ResultSet,java.lang.Integer)"], "Fixed commit": "a5ea3cd742609b18d56187a9aa77e1abaa906148", "Url": "https://api.github.com/repos/sahildorwat/OnlineTestSoftware", "Date": "2017-10-27T00:11:09Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts.length) == 5) return new org.javacs.Artifact(parts[0], parts[1], parts[3]); else if ((parts.length) == 6) return new org.javacs.Artifact(parts[0], parts[1], parts[4]); else throw new java.lang.IllegalArgumentException((id + \" is not properly formatted artifact\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7818/buggy-version/src.main.java.org.javacs.Artifact.java", "BodyUseAPI": [], "Fixed commit": "b56c08dca9299a41ada74c8d56f41c97ee95f0b2", "Url": "https://api.github.com/repos/hejack0207/vscode-javac", "Date": "2017-08-30T07:57:05Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ex instanceof org.restfulwhois.rdap.exception.DecodeException) { responseEntity = org.restfulwhois.rdap.common.util.RestResponseUtil.createResponse400(); }else if ((ex instanceof org.springframework.http.InvalidMediaTypeException) || (ex instanceof org.springframework.web.HttpMediaTypeNotAcceptableException)) { responseEntity = org.restfulwhois.rdap.common.util.RestResponseUtil.createResponse415(); }else { responseEntity = org.restfulwhois.rdap.common.util.RestResponseUtil.createResponse500(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6759/buggy-version/rdap-webapp.src.main.java.org.restfulwhois.rdap.controller.support.MappingExceptionResolver.java", "BodyUseAPI": [], "Fixed commit": "bff375c858fe513a13e341726bb66556a186e94d", "Url": "https://api.github.com/repos/forumbyr/rdap", "Date": "2014-09-15T04:02:34Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.robv.android.xposed.XposedHelpers.getObjectField(param.thisObject,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((context == null) || ((display.getDisplayId()) != (android.view.Display.DEFAULT_DISPLAY))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4894/buggy-version/src.com.gzplanet.xposed.xperianavbarbuttons.XperiaNavBarButtons.java", "BodyUseAPI": [], "Fixed commit": "2635fb6b25cafa7d1eb82e7687b787b44923ade1", "Url": "https://api.github.com/repos/itandy/XperiaAOSPNavBarButtons", "Date": "2015-01-28T15:46:19Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scope instanceof de.peeeq.wurstscript.ast.ModuleDef) { }else { for (de.peeeq.wurstscript.attributes.names.NameLink n : scope.attrNameLinks().get(name)) { if ((((n.getType()) == (NameLinkType.FUNCTION)) && ((n.getReceiverType()) != null)) && (n.getReceiverType().isSupertypeOf(receiverType, node))) { result.add(n.hidingPrivateAndProtected()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8669/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.attributes.names.NameResolution.java", "BodyUseAPI": ["de.peeeq.wurstscript.ast.WScope.attrNameLinks()", "scope.attrNameLinks().get(java.lang.String)"], "Fixed commit": "41f65fa013612883d6c11a1f600139747872e1b6", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2013-05-09T11:56:38Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((findPreference(\"nfc_search\")) != null) { findPreference(\"nfc_search\").setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5487/buggy-version/opacclient.opacapp.src.main.java.de.geeksfactory.opacclient.frontend.MainPreferenceFragment.java", "BodyUseAPI": [], "Fixed commit": "c5f55c55148415c154c041a4d01a706dd8633d66", "Url": "https://api.github.com/repos/opacapp/opacclient", "Date": "2015-10-30T13:57:49Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.brics.jwig.util.Method.getLocalVariableTable()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (table != null) { for (int i = 0; i < (types.length); i++) { int offset = i; if (!(parsedMethod.isStatic())) { offset++; } dk.brics.jwig.util.LocalVariable localVariable = table.getLocalVariable(offset, 0); names.add(localVariable.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3721/buggy-version/src.dk.brics.jwig.util.ParameterNamer.java", "BodyUseAPI": ["dk.brics.jwig.util.LocalVariableTable.getLocalVariable(int,int)"], "Fixed commit": "8e1ce0ee710469c2b06a2ecaa75d0b17775d7e78", "Url": "https://api.github.com/repos/cs-au-dk/JWIG", "Date": "2015-11-27T22:25:53Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (requestSupportedCurrencyPairs()) { _supportedCurrencyPairs = _registeredCurrencyPairNames.keySet().toArray(new de.andreas_rueckert.trade.CurrencyPair[_registeredCurrencyPairNames.size()]); }else { de.andreas_rueckert.util.LogUtils.getInstance().getLogger().error((\"Cannot fetch the supported currency pairs from \" + (_name))); _supportedCurrencyPairs = new de.andreas_rueckert.trade.CurrencyPair[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5728/buggy-version/modules.kraken.src.de.andreas_rueckert.trade.site.kraken.client.KrakenClient.java", "BodyUseAPI": [], "Fixed commit": "fb513f7070a9c564682f7da383d38fbcf289a8fa", "Url": "https://api.github.com/repos/ReAzem/cryptocoin-tradelib", "Date": "2014-05-16T21:29:10Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.utils.media.MediaTool.isVideo(fi.getPath())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2133/buggy-version/photoweb.src.com.backend.facer.FaceRecService.java", "BodyUseAPI": [], "Fixed commit": "4128d7dae7b369d9492c09bbf37a9a5aceef1073", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-02-26T11:20:16Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shopbilling.services.AppLicenseServices.getAppSecurityData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (lastRun != null) { java.util.Date prevDate = com.shopbilling.services.AppLicenseServices.sdf.parse(lastRun); if ((currentTime.compareTo(prevDate)) < 0) { isSystemDateChanged = true; } }else { com.shopbilling.services.AppLicenseServices.logger.error(\"## Configuration Missing ## :: Database Entry Missing for APP_SECURITY_DATA\"); isSystemDateChanged = true; return isSystemDateChanged; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8354/buggy-version/src.com.shopbilling.services.AppLicenseServices.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "5c08daeb426bcc4a8a817000031133aeb612210a", "Url": "https://api.github.com/repos/kumbharvish/MysStore-Base", "Date": "2017-12-21T17:13:18Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.refInventory) != null) this.refInventory.substractFromWgt((((float) (transferCount)) * (type.getWeight())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/575/buggy-version/core.src.com.esbjon.inventories.Tracker.java", "BodyUseAPI": [], "Fixed commit": "5abbb44570448bb6c339d15d9e5638d2fd98c4cb", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2017-12-05T14:19:05Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.refInventory) != null) this.refInventory.substractFromWgt((((float) (substractCount)) * (type.getWeight())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/575/buggy-version/core.src.com.esbjon.inventories.Tracker.java", "BodyUseAPI": [], "Fixed commit": "5abbb44570448bb6c339d15d9e5638d2fd98c4cb", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2017-12-05T14:19:05Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(AlexandriaContract.BookEntry.TITLE))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (bookTitle != null) { viewHolder.bookTitle.setText(bookTitle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7460/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.api.BookListAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "87d7226ab07ca4ea055c5664591d08b6d3f1648b", "Url": "https://api.github.com/repos/pablo-johnson/Super-Duo-", "Date": "2016-02-18T07:29:50Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(AlexandriaContract.BookEntry.SUBTITLE))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (bookSubTitle != null) { viewHolder.bookSubTitle.setText(bookSubTitle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7460/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.api.BookListAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "87d7226ab07ca4ea055c5664591d08b6d3f1648b", "Url": "https://api.github.com/repos/pablo-johnson/Super-Duo-", "Date": "2016-02-18T07:29:50Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liamfruzyna.android.lister.Data.Data.getCurrentList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (list.auto) { com.liamfruzyna.android.lister.Data.IO.save(); }else { if (WLActivity.settings.getBoolean(com.liamfruzyna.android.lister.Data.IO.SAVE_REMOTE_PREF, false)) { new com.liamfruzyna.android.lister.Data.IO.RemoteWriteListTask().execute(list.name); }else { com.liamfruzyna.android.lister.Data.IO.writeToFile(list.name, com.liamfruzyna.android.lister.Data.IO.getListString(list)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4658/buggy-version/app.src.main.java.com.liamfruzyna.android.lister.Data.IO.java", "BodyUseAPI": ["com.liamfruzyna.android.lister.Data.IO.RemoteWriteListTask.execute(list.name)", "com.liamfruzyna.android.lister.Data.IO.writeToFile(list.name,java.lang.String)", "com.liamfruzyna.android.lister.Data.IO.getListString(com.liamfruzyna.android.lister.Data.WishList)"], "Fixed commit": "e7a771108d57f8b51d6ac055f38902ad7f8a322f", "Url": "https://api.github.com/repos/mail929/Lister", "Date": "2016-04-12T20:17:26Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tp.playlist.preferences.get(Keys.EXIT_PLAY_TIME)) != null) { tp.player.goToMillis(tp.playlist.preferences.get(Keys.EXIT_PLAY_TIME)); }else { tp.player.goToMillis(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3778/buggy-version/src.turtle.player.Player.java", "BodyUseAPI": ["tp.player.goToMillis(tp.playlist.preferences.get(Keys.EXIT_PLAY_TIME))", "tp.player.goToMillis(int)", "tp.playlist.preferences.get(Keys.EXIT_PLAY_TIME)"], "Fixed commit": "ff6e3356486d64123e2ecc9555488437941d3b31", "Url": "https://api.github.com/repos/eddturtle/TurtlePlayer", "Date": "2013-02-18T16:40:27Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (end < 10) { java.util.Set<T> remainingSourceEntities = new java.util.HashSet<T>(sourceEntities); org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.Result result = new org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.Result(); results.add(result); executorService.submit(new org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.ScoringTask<T>(context, _duplicateScoringStrategy, targetEntities, remainingSourceEntities, 0, targetEntities.size(), _minElementsInCommonScoreForAutoDetect, result)); }else { for (int i = 0; i < cpus; i++) { java.util.Collection<T> t_targetEntities = ((java.util.Collection<T>) (target.getAllEntitiesForType(_entityType))); java.util.Collection<T> t_sourceEntities = ((java.util.Collection<T>) (source.getAllEntitiesForType(_entityType))); java.util.Set<T> t_remainingSourceEntities = new java.util.HashSet<T>(t_sourceEntities); org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.Result result = new org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.Result(); results.add(result); executorService.submit(new org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.ScoringTask<T>(context, _duplicateScoringStrategy, t_targetEntities, t_remainingSourceEntities, start, end, _minElementsInCommonScoreForAutoDetect, result)); start = end + 1; end = end + increment; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3182/buggy-version/onebusaway-gtfs-merge.src.main.java.org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.submit(org.onebusaway.gtfs_merge.strategies.AbstractIdentifiableSingleEntityMergeStrategy.ScoringTask<T>)"], "Fixed commit": "ce590476fdac0801b051b3480442d030d63929a3", "Url": "https://api.github.com/repos/camsys/onebusaway-gtfs-modules", "Date": "2015-06-05T14:12:54Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.equals(curUser.belongings.weapon)) { curUser.belongings.weapon = null; }else { item.detachAll(curUser.belongings.backpack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8709/buggy-version/src.com.watabou.pixeldungeon.items.potions.Potion.java", "BodyUseAPI": ["com.watabou.pixeldungeon.items.Item.detachAll(curUser.belongings.backpack)"], "Fixed commit": "ecf45a86da7043ec91e27491090c13ed69c39588", "Url": "https://api.github.com/repos/NYRDS/pixel-dungeon-remix", "Date": "2015-06-12T22:17:15Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(alreadyCounted.contains(p))) { tempBalance -= p.getAmount().AMOUNT(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1636/buggy-version/src.applicationLogic.Manager.java", "BodyUseAPI": ["p.getAmount().AMOUNT()", "rawData.BeanPlan.getAmount()"], "Fixed commit": "886887fdf67afe423b4960a6660fc064a7d48e51", "Url": "https://api.github.com/repos/Bohne69/KontoMan", "Date": "2017-01-28T08:52:11Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.ver) < ver) { res = null; haven.Resource.cache.remove(name); }else if ((res.ver) > ver) { throw new java.lang.RuntimeException(java.lang.String.format(\"Weird version number on %s (%d > %d), loaded from %s\", res.name, res.ver, ver, res.source)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4883/buggy-version/src.haven.Resource.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,int,int,haven.Resource.ResSource)"], "Fixed commit": "52ed4925e453a1d7ebf617cbac4b3d0c06e8a1a4", "Url": "https://api.github.com/repos/EnderWiggin/Haven-and-Hearth-client-modified-by-Ender", "Date": "2011-04-08T09:47:25Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(imageFile.exists())) || (!(imageFile.isFile()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4336/buggy-version/imagepicker.src.main.java.com.lzy.imagepicker.ImageDataSource.java", "BodyUseAPI": [], "Fixed commit": "6298d94bab2524af739f74f3555cd6fc7bce7c16", "Url": "https://api.github.com/repos/angcyo/RLibrary", "Date": "2017-05-27T16:15:58Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.timeStand) != null) { this.timeStand.setCustomName(time); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5262/buggy-version/src.com.decimatepvp.functions.crate.Crate.java", "BodyUseAPI": [], "Fixed commit": "d60bbd10af33aec11bfe85d65d8fcbffb1d8f8e0", "Url": "https://api.github.com/repos/project40015/core", "Date": "2017-06-25T15:00:39Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (black > white) { return 1; }else if (white == black) { return 2; }else { return 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3875/buggy-version/app.src.main.java.com.example.mega.othello.OthelloGame.java", "BodyUseAPI": [], "Fixed commit": "d7f33461ff17979fabd95d5ec84b433e86fe2123", "Url": "https://api.github.com/repos/jsgalaska/Othello", "Date": "2016-05-13T23:47:49Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEmptySquare(position))) { keepGoing = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3875/buggy-version/app.src.main.java.com.example.mega.othello.OthelloGame.java", "BodyUseAPI": [], "Fixed commit": "d7f33461ff17979fabd95d5ec84b433e86fe2123", "Url": "https://api.github.com/repos/jsgalaska/Othello", "Date": "2016-05-13T23:47:49Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { sb.setLength(((sb.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7288/buggy-version/src.main.java.co.cask.http.PatternPathRouterWithGroups.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.setLength(int)"], "Fixed commit": "48b65f712946412959979bf0c21855e7d3daa634", "Url": "https://api.github.com/repos/zhiPATHngli/netty-http", "Date": "2016-12-23T16:23:25Z"},
{"Line": "=>1326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.laytonsmith.core.arguments.ArgList.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ml != null) { l = ml.getMCLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3867/buggy-version/src.main.java.com.laytonsmith.core.functions.EntityManagement.java", "BodyUseAPI": ["com.laytonsmith.core.natives.MLocation.getMCLocation()"], "Fixed commit": "36bee039df9b1a1baed0dd1bf51c0f2eb35a0911", "Url": "https://api.github.com/repos/sk89q/commandhelper", "Date": "2013-04-02T17:51:27Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(v.valueType().matches(ValueTypes.Int))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1981/buggy-version/src.main.java.com.noctarius.borabora.Predicates.java", "BodyUseAPI": [], "Fixed commit": "c2e4f18cae56eedb11bcb90bd5bdba87001861e1", "Url": "https://api.github.com/repos/noctarius/borabora", "Date": "2016-07-02T17:35:23Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(v.valueType().matches(ValueTypes.String))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1981/buggy-version/src.main.java.com.noctarius.borabora.Predicates.java", "BodyUseAPI": [], "Fixed commit": "c2e4f18cae56eedb11bcb90bd5bdba87001861e1", "Url": "https://api.github.com/repos/noctarius/borabora", "Date": "2016-07-02T17:35:23Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(v.valueType().matches(ValueTypes.Float))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1981/buggy-version/src.main.java.com.noctarius.borabora.Predicates.java", "BodyUseAPI": [], "Fixed commit": "c2e4f18cae56eedb11bcb90bd5bdba87001861e1", "Url": "https://api.github.com/repos/noctarius/borabora", "Date": "2016-07-02T17:35:23Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (isText && (icon != null)) { textPrefix = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/698/buggy-version/OsmAnd.src.net.osmand.plus.mapcontextmenu.builders.AmenityMenuBuilder.java", "BodyUseAPI": [], "Fixed commit": "422734405f7b6877ecbc58779d0311ea355841b6", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-01-16T09:56:23Z"},
{"Line": "=>1184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mModeChanged) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/973/buggy-version/src.com.android.gallery3d.ui.PhotoView.java", "BodyUseAPI": [], "Fixed commit": "52f667aa7ef36e991d91e16c1a7a30369e81bc1a", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Gallery2", "Date": "2015-10-27T22:50:56Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.commons.lang3.time.DateUtils.getFragmentInMilliseconds(date, java.util.Calendar.HOUR_OF_DAY)) == 0) { return com.stratelia.webactiv.util.DateUtil.getOutputDate(date, language); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3473/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.util.DateUtil.java", "BodyUseAPI": ["com.stratelia.webactiv.util.DateUtil.getOutputDate(java.util.Date,java.lang.String)"], "Fixed commit": "d70178ca70325f73eb5ad851bece4289cd3ff407", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Core", "Date": "2013-04-18T15:14:53Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isConnected())) { drop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1142/buggy-version/src.core.server.Client.java", "BodyUseAPI": [], "Fixed commit": "5112edb86f47f0f5b21b83ecfc3edb24cc71018d", "Url": "https://api.github.com/repos/aioc/phais", "Date": "2013-11-20T11:14:06Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (date == null) { throw new java.lang.NullPointerException(); }else { this.id = id; this.date = date; this.contacts = contacts; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5572/buggy-version/MeetingImpl.java", "BodyUseAPI": [], "Fixed commit": "5eb2298c0c59e6b365ec37ad8538222a4ae02d5e", "Url": "https://api.github.com/repos/BBK-PiJ-2015-56/cw-cm", "Date": "2016-01-22T21:26:01Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (notes == null) { throw new java.lang.NullPointerException(); }else { this.notes = notes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5572/buggy-version/PastMeetingImpl.java", "BodyUseAPI": [], "Fixed commit": "5eb2298c0c59e6b365ec37ad8538222a4ae02d5e", "Url": "https://api.github.com/repos/BBK-PiJ-2015-56/cw-cm", "Date": "2016-01-22T21:26:01Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.jet.lang.resolve.scopes.JetScope.getProperties(org.jetbrains.jet.lang.resolve.lazy.ResolveSessionUtils.safeNameForLazyResolve(property))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (properties.isEmpty()) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5132/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.resolve.lazy.ResolveSession.java", "BodyUseAPI": [], "Fixed commit": "c60ca026d9f7fff822ba815ba8e3554cba2968c8", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2013-07-15T11:23:48Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tickCount) < 2) { tickCount = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/143/buggy-version/app.src.main.java.de.petermoesenthin.alarming.AlarmSoundEditActivity.java", "BodyUseAPI": [], "Fixed commit": "c61bef948aea5acb66523d9867fd2a20d2d76e59", "Url": "https://api.github.com/repos/PeterVonOz/alarming", "Date": "2014-09-24T15:59:53Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.argo.qpush.gateway.handler.MobileMessageHandler.logger.isDebugEnabled()) { com.argo.qpush.gateway.handler.MobileMessageHandler.logger.debug(\"bytes: {}\", bytes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/103/buggy-version/Gateway.src.main.java.com.argo.qpush.gateway.handler.MobileMessageHandler.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,byte[])"], "Fixed commit": "54dee7c9f3f7fc4d505cbbcaf2e11180f1f581c5", "Url": "https://api.github.com/repos/yamingd/QPush", "Date": "2015-01-22T11:37:47Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (url != null) com.bumptech.glide.Glide.with(getContext()).load(android.net.Uri.parse(url)).placeholder(R.drawable.photo_msg).into(uiPic);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7545/buggy-version/Messengerv2.magnetchatsdk.src.main.java.com.magnet.magnetchat.ui.views.chatlist.list.DefaultMMXPictureMessageView.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(getContext()).load(android.net.Uri.parse(url)).placeholder(R.drawable.photo_msg).into(android.widget.ImageView)", "android.net.Uri.parse(java.lang.String)", "com.bumptech.glide.Glide.with(getContext()).load(android.net.Uri.parse(url)).placeholder(R.drawable.photo_msg)", "com.bumptech.glide.Glide.with(getContext()).load(android.net.Uri.parse(url))"], "Fixed commit": "086c0dd5617c2667b3002ff0b3c87eacb86a4ca0", "Url": "https://api.github.com/repos/magnetsystems/message-samples-android", "Date": "2016-06-08T11:56:47Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isStartElement(event, org.restlet.ext.odata.xml.ATOM_FEED)) { javax.xml.stream.events.Attribute attributeByName = event.asStartElement().getAttributeByName(org.restlet.ext.odata.xml.XML_BASE); if (attributeByName != null) { baseURL = attributeByName.getValue(); } }else if (isEndElement(event, org.restlet.ext.odata.xml.ATOM_FEED)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8493/buggy-version/modules.org.restlet.ext.odata.src.org.restlet.ext.odata.xml.AtomFeedHandler.java", "BodyUseAPI": ["org.restlet.ext.odata.xml.AtomFeedHandler<T>.isEndElement(javax.xml.stream.events.XMLEvent,org.restlet.ext.odata.xml.ATOM_FEED)", "javax.xml.stream.events.StartElement.getAttributeByName(org.restlet.ext.odata.xml.XML_BASE)", "javax.xml.stream.events.XMLEvent.asStartElement()"], "Fixed commit": "7550c29f959da43f554a58a756f14872942a2790", "Url": "https://api.github.com/repos/shantanud/restlet-framework-java", "Date": "2014-05-07T09:04:03Z"},
{"Line": "=>1568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attrValue == null) { return attrValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8534/buggy-version/src.de.uni_koblenz.edl.GraphBuilderBaseImpl.java", "BodyUseAPI": [], "Fixed commit": "48a8340c123a92c9185e8b929feab0110694cfe6", "Url": "https://api.github.com/repos/jgralab/edl", "Date": "2013-08-06T15:14:03Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (algo.equals(Algo.RSRMAP)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2309/buggy-version/src.SensorProjectMain.java", "BodyUseAPI": [], "Fixed commit": "f5f3619707101463f4608ea76d95510034efcd32", "Url": "https://api.github.com/repos/dkirillov/sensor-project", "Date": "2012-11-27T18:42:27Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (algo.equals(Algo.ARA)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2309/buggy-version/src.SensorProjectMain.java", "BodyUseAPI": [], "Fixed commit": "f5f3619707101463f4608ea76d95510034efcd32", "Url": "https://api.github.com/repos/dkirillov/sensor-project", "Date": "2012-11-27T18:42:27Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isUncheckedException(throwable))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7307/buggy-version/org.dsource.ddt.dtool.src-util.melnorme.utilbox.concurrency.ExecutorAgent.java", "BodyUseAPI": [], "Fixed commit": "0284fc6fc7f3ab6bc3ed006a889dd3419c62006b", "Url": "https://api.github.com/repos/bruno-medeiros/DDT", "Date": "2014-02-27T12:52:12Z"},
{"Line": "=>1302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.drools.workbench.models.datamodel.oracle.OperatorsOracle.operatorRequiresList(operator)) { buf.append(\" \"); constraintValueBuilder.buildLHSFieldValue(buf, type, DataType.TYPE_COLLECTION, ((\"@{makeValueList(\" + value) + \")}\")); buf.append(\" \"); }else { buf.append(\" \"); constraintValueBuilder.buildLHSFieldValue(buf, type, fieldType, ((\"@{removeDelimitingQuotes(\" + value) + \")}\")); buf.append(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6730/buggy-version/drools-workbench-models.drools-workbench-models-commons.src.main.java.org.drools.workbench.models.commons.backend.rule.RuleModelDRLPersistenceImpl.java", "BodyUseAPI": [], "Fixed commit": "75277efaa569658abe0cfd5f76c256f00f465198", "Url": "https://api.github.com/repos/amitkhanchi/drools", "Date": "2015-03-23T20:26:49Z"},
{"Line": "=>4385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt((((transformedBounds.getWidth()) * (transformedBounds.getWidth())) + ((transformedBounds.getHeight()) * (transformedBounds.getHeight()))))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (h2 < 1) h2 = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3766/buggy-version/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java", "BodyUseAPI": [], "Fixed commit": "d114ce622595943f446eb1a0773a5cc160f8e3a5", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-08-22T19:14:46Z"},
{"Line": "=>4386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt((((origBounds.getWidth()) * (origBounds.getWidth())) + ((origBounds.getHeight()) * (origBounds.getHeight()))))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (h1 < 1) h1 = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3766/buggy-version/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java", "BodyUseAPI": [], "Fixed commit": "d114ce622595943f446eb1a0773a5cc160f8e3a5", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-08-22T19:14:46Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((objects.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1447/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayerStandard.java", "BodyUseAPI": [], "Fixed commit": "f28943fca3aa0c5412a9218e297a68c0ecfc0498", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2016-05-04T08:42:48Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.object.ObjectManager.findAny(java.lang.Class,HOST.AGENT_ID,agent.getId(),HOST.REMOVED,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (host == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/508/buggy-version/code.iaas.service-discovery.server.src.main.java.io.cattle.platform.servicediscovery.service.impl.SkipServiceLookup.java", "BodyUseAPI": [], "Fixed commit": "dc88d6188bedbcdd1d512c4c9eff4b18aeba0c3c", "Url": "https://api.github.com/repos/rancher/cattle", "Date": "2017-01-12T05:06:31Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.projectx.data.repository.completeregister.CustomerDetailsCustomRepository.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fetchedEntity != null) return fetchedEntity; else return new com.projectx.data.domain.completeregister.CustomerDetails();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/279/buggy-version/src.main.java.com.projectx.data.controller.completeregister.CustomerDetailsController.java", "BodyUseAPI": [], "Fixed commit": "11dd80e34a79bd6b9c0528536a4fc5929c4aad7d", "Url": "https://api.github.com/repos/DineshShende/ProjectXDataJPA", "Date": "2014-12-27T10:53:27Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.getParameter(\"user\").contains(\".\")) return \"Please enter a username with '.'.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6872/buggy-version/src.java.LGDEditTool.SiteHandling.RequestHandling.java", "BodyUseAPI": [], "Fixed commit": "5587b79c783e4ab5899726fa744eb7eb92e28690", "Url": "https://api.github.com/repos/jnphilipp/LGDEditTool", "Date": "2012-05-10T08:18:05Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((SimulationNetwork.PayloadMessage) (msg)).getPayloadSourceAdress()) == (this.id)) { java.lang.System.out.println((((((\"Node: \" + (this.id)) + \" send msg to node \") + (((SimulationNetwork.PayloadMessage) (msg)).getPayloadDestinationAdress())) + \". Distance: \") + (entry.getMetric()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2009/buggy-version/src.DSDV.DsdvNetworkNode.java", "BodyUseAPI": ["SimulationNetwork.Message.getPayloadDestinationAdress()", "java.io.PrintStream.println((((((\"Node: \" + (this.id)) + \" send msg to node \") + (((SimulationNetwork.PayloadMessage) (msg)).getPayloadDestinationAdress())) + \". Distance: \") + (entry.getMetric())))"], "Fixed commit": "0c53136c32112c8aeb89f1d870608f099688ecee", "Url": "https://api.github.com/repos/cBergmann2/NetworkSimulator", "Date": "2017-06-19T12:56:09Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type != null) { switch (type) { case \"completed\" : toDoListService.cleanup(true); break; case \"all\" : toDoListService.cleanup(false); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/722/buggy-version/todolist-backend-war.src.main.java.com.lotaris.todo.rest.ToDoListResource.java", "BodyUseAPI": [], "Fixed commit": "ccab36090c2ea061b8bcdd61de0718fdcc31f1a1", "Url": "https://api.github.com/repos/lotaris/docker-todo-list-backend", "Date": "2014-11-20T13:08:55Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (onlyCompleted) { toDoEntityManager.deleteCompleted(); }else { toDoEntityManager.deleteAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/722/buggy-version/todolist-backend-ejb.src.main.java.com.lotaris.todo.service.ToDoListService.java", "BodyUseAPI": [], "Fixed commit": "ccab36090c2ea061b8bcdd61de0718fdcc31f1a1", "Url": "https://api.github.com/repos/lotaris/docker-todo-list-backend", "Date": "2014-11-20T13:08:55Z"},
{"Line": "=>1725", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.util.StringUtil.trimLeading(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((line.startsWith(\"// \")) || (trimmedPreviousLine.startsWith(\"// \"))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3268/buggy-version/portal-impl.src.com.liferay.portal.tools.sourceformatter.JavaSourceProcessor.java", "BodyUseAPI": [], "Fixed commit": "feffd169b6c208ef9bb6841a3802dbbb6f0dbd53", "Url": "https://api.github.com/repos/shuyangzhou/liferay-portal", "Date": "2013-06-24T18:39:41Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result > 0.0) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7248/buggy-version/src.com.ncheema.Point.java", "BodyUseAPI": [], "Fixed commit": "7cdb2333e834502839bb47ef0d91136d0c90a48e", "Url": "https://api.github.com/repos/ncheema/algsPart1", "Date": "2014-12-01T03:40:08Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result < 0.0) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7248/buggy-version/src.com.ncheema.Point.java", "BodyUseAPI": [], "Fixed commit": "7cdb2333e834502839bb47ef0d91136d0c90a48e", "Url": "https://api.github.com/repos/ncheema/algsPart1", "Date": "2014-12-01T03:40:08Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flagShape.contains(marioShape.getCenterX(), marioShape.getCenterY())) finish = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6064/buggy-version/src.EnemiesIncluded.Intersection.java", "BodyUseAPI": [], "Fixed commit": "b84ea6c6226d237482d3a60883291eb676da024c", "Url": "https://api.github.com/repos/GroupProjectMiniProject/Super-mario-project", "Date": "2015-05-07T13:25:27Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.fenixframework.dml.Slot.getSlotType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (vt.isEnum()) { print(out, \"JSONConverter.getEnumFromJSON(\"); print(out, vt.getFullname()); print(out, \".class, json);\"); }else if (vt.isBuiltin()) { print(out, ((\"JSONConverter.get\" + (capitalize(vt.getDomainName()))) + \"FromJSON(json);\")); }else { print(out, ValueTypeSerializationGenerator.SERIALIZER_CLASS_FULL_NAME); print(out, \".\"); print(out, ValueTypeSerializationGenerator.DESERIALIZATION_METHOD_PREFIX); print(out, vt.getDomainName()); print(out, \"(\"); print(out, ((\"JSONConverter.get\" + (capitalize(vt.getExternalizationElements().get(0).getType().getDomainName()))) + \"FromJSON(json));\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4776/buggy-version/backend.jvstm-common.code-generator.src.main.java.pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.java", "BodyUseAPI": ["pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.capitalize(vt.getExternalizationElements().get(0).getType().getDomainName())", "pt.ist.fenixframework.dml.ValueType.getExternalizationElements()", "vt.getExternalizationElements().get(0).getType().getDomainName()", "pt.ist.fenixframework.dml.ValueType.getFullname()", "pt.ist.fenixframework.dml.ValueType.isBuiltin()", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.capitalize(vt.getDomainName())", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,vt.getFullname())", "pt.ist.fenixframework.dml.ValueType.getDomainName()", "vt.getExternalizationElements().get(int)", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,((\"JSONConverter.get\" + (capitalize(vt.getExternalizationElements().get(0).getType().getDomainName()))) + \"FromJSON(json));\"))", "vt.getExternalizationElements().get(0).getType()", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,((\"JSONConverter.get\" + (capitalize(vt.getDomainName()))) + \"FromJSON(json);\"))", "pt.ist.fenixframework.dml.ValueType.getDomainName()", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,vt.getDomainName())"], "Fixed commit": "876e12087022ae605933f6265f671fa1fecc92eb", "Url": "https://api.github.com/repos/jcarvalho/fenix-framework", "Date": "2013-06-17T14:14:19Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.equals(\"U bent de haven uitgetrapt omdat u te lang bleef treuzelen. U wordt teruggestuurd naar kampen.\")) wybren_erik.hanzespel.model.Boat.getInstance().goToCity(wybren_erik.hanzespel.RoadMap.getInstance().getCity(Location.KAMPEN));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6278/buggy-version/app.src.main.java.wybren_erik.hanzespel.dialog.InterventionDialog.java", "BodyUseAPI": [], "Fixed commit": "60b9104f67dafeaceed9babd8f2925fb04163cf3", "Url": "https://api.github.com/repos/wybrenoppedijk/Hanzespel", "Date": "2017-09-08T11:54:47Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["genlab.core.usermachineinteraction.ITextMessage.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((msg.length()) > 10000) { pw.print(message.getMessage().substring(0, 10000)); pw.println(\"[...]\"); }else { pw.println(message.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1518/buggy-version/genlab.gui.src.genlab.gui.views.MessagesViewAbstract.java", "BodyUseAPI": [], "Fixed commit": "c24b0f3fcd9b07d517f8de2a68a7a1076592912f", "Url": "https://api.github.com/repos/samthiriot/genlab", "Date": "2015-05-19T13:40:54Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDrawingCacheEnabled()) { canvas.drawBitmap(currentCanvas, getMatrix(), canvasPaint); path.reset(); destroyDrawingCache(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8504/buggy-version/app.src.main.java.com.jordanbray.btdraw.ArtistView.java", "BodyUseAPI": [], "Fixed commit": "fba04c922f75f16fc723611fe06f553dfe56f071", "Url": "https://api.github.com/repos/badgerbaj/BTDraw", "Date": "2017-03-28T15:56:47Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.giiwa.core.bean.Helper.V.value(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.giiwa.framework.bean.X.isEmpty(o))) { v.remove(\"load\"); v.set(\"load1\", o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3210/buggy-version/src.main.java.org.giiwa.framework.bean.Menu.java", "BodyUseAPI": ["org.giiwa.core.bean.Helper.V.set(java.lang.String,java.lang.Object)"], "Fixed commit": "bad8c64c725b1c13591db22e3398263154d3c3d4", "Url": "https://api.github.com/repos/giiwa/giiwa", "Date": "2016-11-07T10:27:39Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fenixedu.academic.servlet.taglib.sop.v3.TimeTable.getDayIndex(infoShowOccupation.getDiaSemana())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dayIndex < 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8699/buggy-version/src.main.java.org.fenixedu.academic.servlet.taglib.sop.v3.TimeTable.java", "BodyUseAPI": [], "Fixed commit": "58bc8b162828c83b2706b8f38e2067e711f8e542", "Url": "https://api.github.com/repos/FenixEdu/fenixedu-academic", "Date": "2016-01-25T15:46:05Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((urn) == null) { urn = buildUrn(); io.vertigo.lang.Assertion.checkArgument(io.vertigo.dynamo.domain.model.DtListURI.REGEX_URN.matcher(urn).matches(), \"urn {0} doit matcher le pattern {1}\", urn, io.vertigo.dynamo.domain.model.DtListURI.REGEX_URN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6444/buggy-version/vertigo-dynamo-api.src.main.java.io.vertigo.dynamo.domain.model.DtListURI.java", "BodyUseAPI": [], "Fixed commit": "d999c6489b8337ff2f200ccfe4322baa7c6f6828", "Url": "https://api.github.com/repos/KleeGroup/vertigo", "Date": "2016-10-24T15:05:08Z"},
{"Line": "=>1175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readOnly) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6921/buggy-version/src.org.nschmidt.ldparteditor.data.DatFile.java", "BodyUseAPI": [], "Fixed commit": "aff27badec045956e8537e0319caa92fcdbb56c3", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-12-30T10:54:01Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.totrit.livemonitor.util.CameraManager.getInstance().getPreviewSize(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (previewSize == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3378/buggy-version/app.src.main.java.com.totrit.livemonitor.core.MotionDetector.java", "BodyUseAPI": [], "Fixed commit": "626f025a5cb38add94ee3da99bf3d738470a8574", "Url": "https://api.github.com/repos/totrit/live-monitor", "Date": "2014-12-12T06:00:39Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.totrit.livemonitor.util.CameraManager.getInstance().getPreviewSize(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (previewSize == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3378/buggy-version/app.src.main.java.com.totrit.livemonitor.DecorationView.java", "BodyUseAPI": [], "Fixed commit": "626f025a5cb38add94ee3da99bf3d738470a8574", "Url": "https://api.github.com/repos/totrit/live-monitor", "Date": "2014-12-12T06:00:39Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((webPath) != null) { root = (webPath) + (root); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1167/buggy-version/beetl-core.src.main.java.org.beetl.ext.spring.BeetlGroupUtilConfiguration.java", "BodyUseAPI": [], "Fixed commit": "091d2de15eb7c87c8cbd1e367593df51357d67df", "Url": "https://api.github.com/repos/javamonkey/beetl2.0", "Date": "2016-11-27T10:41:25Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ru.casak.whiteboard.DrawView.instance) != null) ru.casak.whiteboard.DrawView.instance.invalidate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1124/buggy-version/app.src.main.java.ru.casak.whiteboard.DrawView.java", "BodyUseAPI": [], "Fixed commit": "074fb08873cc834bd8cb67219593638a73a00f21", "Url": "https://api.github.com/repos/Casak/Whiteboard", "Date": "2016-10-10T15:19:15Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ru.casak.whiteboard.DrawView.canvasDraw) != null) ru.casak.whiteboard.DrawView.canvasDraw.drawRGB(255, 255, 255);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1124/buggy-version/app.src.main.java.ru.casak.whiteboard.DrawView.java", "BodyUseAPI": [], "Fixed commit": "074fb08873cc834bd8cb67219593638a73a00f21", "Url": "https://api.github.com/repos/Casak/Whiteboard", "Date": "2016-10-10T15:19:15Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.illustrationfinder.process.post.IPostProcessor.generateKeywords()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (keywords == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4899/buggy-version/src.main.java.com.illustrationfinder.IllustrationFinder.java", "BodyUseAPI": [], "Fixed commit": "f1c995bffcf8d4f8cfc5082959850a549b5b8a78", "Url": "https://api.github.com/repos/XealRedan/IllustrationFinder", "Date": "2015-11-24T18:08:56Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((turnDirection) == 1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5921/buggy-version/Robot_2016.src.org.usfirst.frc.team2374.robot.controllers.AutonomousController.java", "BodyUseAPI": [], "Fixed commit": "a13e5f1b2bfdaf27f936825fad34e311588cefe0", "Url": "https://api.github.com/repos/2374/2016_Season", "Date": "2016-02-02T23:17:52Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task.findParameter(\"command\")) == null) { java.lang.System.out.println(\"Removing command parameter\"); result.task.removeParameter(result.task.command); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8633/buggy-version/src.main.java.uk.co.nickthecoder.wrkfoo.tool.Terminal.java", "BodyUseAPI": [], "Fixed commit": "89b94c9673b485d66f49a171ea921b439bbfef2b", "Url": "https://api.github.com/repos/nickthecoder/wrkfoo", "Date": "2017-04-10T20:04:16Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.nwmogk.bukkit.loans.Conf.config.contains(path)) && (com.nwmogk.bukkit.loans.Conf.config.isString(path))) return java.lang.Math.min(java.lang.Math.max(min, com.nwmogk.bukkit.loans.Conf.parseTime(com.nwmogk.bukkit.loans.Conf.config.getString(path))), max);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1380/buggy-version/Loans.src.main.java.com.nwmogk.bukkit.loans.Conf.java", "BodyUseAPI": ["com.nwmogk.bukkit.loans.Conf.parseTime(com.nwmogk.bukkit.loans.Conf.config.getString(path))", "java.lang.Math.max(double,long)", "java.lang.Math.min(double,double)", "org.bukkit.configuration.file.FileConfiguration.getString(java.lang.String)"], "Fixed commit": "60eff02d2f01e330cc489752c199bfd7eea1899c", "Url": "https://api.github.com/repos/nmogk/SerenityLoans", "Date": "2014-07-16T18:38:39Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (animating) { delegate.onAnimationEnded(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5408/buggy-version/app.src.main.java.com.yorshahar.locker.ui.widget.Key.java", "BodyUseAPI": [], "Fixed commit": "0c0fb5b38985e116cdd500ebd22129d07e997f54", "Url": "https://api.github.com/repos/orshahar/locker", "Date": "2015-08-12T11:37:10Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter((\"productFeatureGroup_\" + (productFeatureCatGrpAppl.getString(\"productFeatureGroupId\"))))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.ofbiz.base.util.UtilValidate.isNotEmpty(productFeatureId)) { description = (((description + (ProductFeatureGroup.get(\"description\"))) + \":\") + (productFeature.get(\"description\"))) + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1005/buggy-version/hot-deploy.zuczugcommon.src.com.zuczug.product.ProductEvents.java", "BodyUseAPI": [], "Fixed commit": "9f67b7b2bc093a7980ada45b38299c02d4d113c3", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-06-17T03:09:19Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allClassListModel) != null) allClassListModel.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5412/buggy-version/ObjectLabSoftware.src.ObjectLabEnterpriseSoftware.ClassOptionsView.java", "BodyUseAPI": [], "Fixed commit": "87ec194cdeeef56cceadf9fdd8d310d1633ab161", "Url": "https://api.github.com/repos/JalIrani/tomsoft", "Date": "2015-04-25T19:31:13Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentClassListModel) != null) currentClassListModel.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5412/buggy-version/ObjectLabSoftware.src.ObjectLabEnterpriseSoftware.ClassOptionsView.java", "BodyUseAPI": [], "Fixed commit": "87ec194cdeeef56cceadf9fdd8d310d1633ab161", "Url": "https://api.github.com/repos/JalIrani/tomsoft", "Date": "2015-04-25T19:31:13Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (studentRecords.containsKey(userId)) { if ((studentRecords.get(userId).getNotes()) == null) { studentRecords.get(userId).setNotes(new java.util.ArrayList<java.lang.String>()); } studentRecords.get(userId).getNotes().add(note); updateDatabase(); }else { throw new edu.umn.csci5801.model.InvalidUserException(((\"UserId: \" + userId) + \" does not exist in the database\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2813/buggy-version/src.edu.umn.csci5801.model.GRADS.java", "BodyUseAPI": ["studentRecords.get(userId).getNotes().add(java.lang.String)", "studentRecords.get(userId).getNotes()", "studentRecords.get(userId).setNotes(java.util.ArrayList<java.lang.String>)", "java.util.HashMap<java.lang.String, edu.umn.csci5801.model.StudentRecord>.get(java.lang.String)", "studentRecords.get(userId).getNotes()", "java.util.HashMap<java.lang.String, edu.umn.csci5801.model.StudentRecord>.get(java.lang.String)", "java.util.HashMap<java.lang.String, edu.umn.csci5801.model.StudentRecord>.get(java.lang.String)"], "Fixed commit": "4e158c10f364bd6e989df3f82722b2ab7f00f3c1", "Url": "https://api.github.com/repos/kewle003/GRADS", "Date": "2013-11-27T07:28:46Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((transcript.getCoursesTaken()) != null) { validateCSCourses(transcript.getCoursesTaken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2813/buggy-version/src.edu.umn.csci5801.model.GRADS.java", "BodyUseAPI": ["edu.umn.csci5801.model.GRADS.validateCSCourses(transcript.getCoursesTaken())", "edu.umn.csci5801.model.StudentRecord.getCoursesTaken()"], "Fixed commit": "4e158c10f364bd6e989df3f82722b2ab7f00f3c1", "Url": "https://api.github.com/repos/kewle003/GRADS", "Date": "2013-11-27T07:28:46Z"},
{"Line": "=>1548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((metadata != null) && ((metadata.getContentType()) != null)) { contentType = org.apache.http.entity.ContentType.create(metadata.getContentType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5612/buggy-version/src.main.java.com.PATHomi.infra.galaxy.fds.client.GalaxyFDSClient.java", "BodyUseAPI": ["com.PATHomi.infra.galaxy.fds.model.FDSObjectMetadata.getContentType()", "org.apache.http.entity.ContentType.create(metadata.getContentType())"], "Fixed commit": "7e6fff78ae8e4f674bc079e5bb5dc07364837f04", "Url": "https://api.github.com/repos/XiaoMi/galaxy-fds-sdk-java", "Date": "2017-07-27T02:58:30Z"},
{"Line": "=>845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.filesRadioButton.isSelected()) { this.extensionRadioButton.setEnabled(true); }else if (!(this.filesRadioButton.isVisible())) { this.extensionRadioButton.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1448/buggy-version/Core.src.org.sleuthkit.autopsy.modules.interestingitems.FilesSetRulePanel.java", "BodyUseAPI": ["javax.swing.JRadioButton.isVisible()"], "Fixed commit": "a6f0766c0a70053c0a0d020e6683a91794a08493", "Url": "https://api.github.com/repos/wschaeferB/autopsy", "Date": "2017-01-31T16:21:01Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.filesRadioButton.isVisible()) { this.extensionRadioButton.setEnabled(false); }else { this.extensionRadioButton.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1448/buggy-version/Core.src.org.sleuthkit.autopsy.modules.interestingitems.FilesSetRulePanel.java", "BodyUseAPI": [], "Fixed commit": "a6f0766c0a70053c0a0d020e6683a91794a08493", "Url": "https://api.github.com/repos/wschaeferB/autopsy", "Date": "2017-01-31T16:21:01Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rect.contains(x.p)) { KdTree.Log.info(((((\"Point \" + (x.p)) + \"is inside rectangle \") + (getRectStr(rect))) + \"\\n\")); pointsInside.add(x.p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8569/buggy-version/misc.src.KdTree.java", "BodyUseAPI": ["java.util.Stack<Point2D>.add(Point2D)", "java.util.logging.Logger.info(((((\"Point \" + (x.p)) + \"is inside rectangle \") + (getRectStr(rect))) + \"\\n\"))", "KdTree.getRectStr(RectHV)"], "Fixed commit": "91db0b8ebb0f2dd1e92d671ef6fb4bd9c34d0dd2", "Url": "https://api.github.com/repos/danny314/comp_sci", "Date": "2015-07-23T21:19:35Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (mainGroup == null) { if (!(bp.getPermissionsManager().getDefaultGroups().isEmpty())) { mainGroup = bp.getPermissionsManager().getDefaultGroups().get(0); for (int i = 1; i < (bp.getPermissionsManager().getDefaultGroups().size()); ++i) { if ((bp.getPermissionsManager().getDefaultGroups().get(i).getWeight()) < (mainGroup.getWeight())) { mainGroup = bp.getPermissionsManager().getDefaultGroups().get(i); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6095/buggy-version/src.main.java.codecrafter47.bungeetablistplus.managers.PermissionManager.java", "BodyUseAPI": [], "Fixed commit": "d5d5ec9154a2d3c79dad662db770377eaacf819d", "Url": "https://api.github.com/repos/CodeCrafter47/BungeeTabListPlus", "Date": "2015-01-20T14:09:11Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bp.getPermissionsManager().getUser(player.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (user != null) { mainGroup = bp.getPermissionsManager().getMainGroup(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6095/buggy-version/src.main.java.codecrafter47.bungeetablistplus.managers.PermissionManager.java", "BodyUseAPI": ["bp.getPermissionsManager().getMainGroup(net.alpenblock.bungeeperms.User)"], "Fixed commit": "d5d5ec9154a2d3c79dad662db770377eaacf819d", "Url": "https://api.github.com/repos/CodeCrafter47/BungeeTabListPlus", "Date": "2015-01-20T14:09:11Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,new com.google.gson.reflect.TypeToken<com.ak.uobtimetable.API.Models.SessionResponse>() {}.getType())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (response.error) return response;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2687/buggy-version/app.uob-timetable.src.main.java.com.ak.uobtimetable.API.Service.java", "BodyUseAPI": [], "Fixed commit": "6b96d8eb06b11e1112bfce74ee389dc190b37a44", "Url": "https://api.github.com/repos/adriankeenan/uob-timetable-android", "Date": "2017-09-24T19:23:26Z"},
{"Line": "=>847", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((voltRootPath != null) && (!(voltRootPath.trim().isEmpty()))) { java.io.File voltRootFile = new java.io.File(voltRootPath); if (voltRootFile.exists()) { if (!(voltRootFile.isDirectory())) { throw new java.lang.RuntimeException(((\"voltdbroot \\\"\" + voltRootPath) + \"\\\" for test exists but is not a directory\")); } if (!(voltRootFile.canRead())) { throw new java.lang.RuntimeException(((\"voltdbroot \\\"\" + voltRootPath) + \"\\\" for test exists but is not readable\")); } if (!(voltRootFile.canWrite())) { throw new java.lang.RuntimeException(((\"voltdbroot \\\"\" + voltRootPath) + \"\\\" for test exists but is not writable\")); } if (!(voltRootFile.canExecute())) { throw new java.lang.RuntimeException(((\"voltdbroot \\\"\" + voltRootPath) + \"\\\" for test exists but is not writable\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4593/buggy-version/src.frontend.org.voltdb.compiler.VoltProjectBuilder.java", "BodyUseAPI": [], "Fixed commit": "a6211ed66ccdef952b029a857bb40997b64f26be", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2017-04-11T17:05:52Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((indexXmlVersion) < (CacheWolf.Profile.CURRENTFILEFORMAT)) && (!convertWarningDisplayed)) { if ((indexXmlVersion) < (CacheWolf.Profile.CURRENTFILEFORMAT)) { convertWarningDisplayed = true; new ewe.ui.MessageBox(CacheWolf.MyLocale.getMsg(144, \"Warning\"), CacheWolf.MyLocale.getMsg(4407, \"The profile files are not in the current format.%0aTherefore they are now converted to the current format. Depending of the size of the profile and the computer involved this may take some minutes. Please bear with us until the conversion is done.\"), ewe.ui.FormBase.OKB).execute(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4546/buggy-version/src.CacheWolf.Profile.java", "BodyUseAPI": [], "Fixed commit": "8adb48ee211e20cb2f66492846badc91e35182b8", "Url": "https://api.github.com/repos/cachewolf/cachewolf", "Date": "2009-05-26T19:19:57Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (value != null) { return this.getAnyType(value, field.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/373/buggy-version/java.binary.src.main.java.br.com.insanitech.javabinary.ObjectEncoder.java", "BodyUseAPI": ["br.com.insanitech.javabinary.ObjectEncoder.getAnyType(java.lang.Object,java.lang.String)"], "Fixed commit": "608527e7ac5ac27f8086cb4edfcf68eae209fe32", "Url": "https://api.github.com/repos/andersonlucasg3/Java.Binary", "Date": "2017-06-29T03:18:31Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.insanitech.javabinary.ObjectEncoder.getType(java.lang.reflect.Field,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (token != null) { tokens.add(token); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/373/buggy-version/java.binary.src.main.java.br.com.insanitech.javabinary.ObjectEncoder.java", "BodyUseAPI": ["java.util.List<br.com.insanitech.javabinary.tokenizing.Token>.add(br.com.insanitech.javabinary.tokenizing.Token)"], "Fixed commit": "608527e7ac5ac27f8086cb4edfcf68eae209fe32", "Url": "https://api.github.com/repos/andersonlucasg3/Java.Binary", "Date": "2017-06-29T03:18:31Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.corefacility.bioinformatics.irida.repositories.joins.sample.SampleSequencingObjectJoinRepository.getSampleForSequencingObject(ca.corefacility.bioinformatics.irida.model.sequenceFile.SequencingObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (sequencingObjectJoin != null) { return samplePermission.isAllowed(authentication, sequencingObjectJoin.getSubject()); }else { ca.corefacility.bioinformatics.irida.security.permissions.files.ReadSequencingObjectPermission.logger.trace(((((\"Permission denied for reading sequencing object id=\" + (sf.getId())) + \" by user=\") + (authentication.getName())) + \", no joined sample found.\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2686/buggy-version/src.main.java.ca.corefacility.bioinformatics.irida.security.permissions.files.ReadSequencingObjectPermission.java", "BodyUseAPI": ["ca.corefacility.bioinformatics.irida.model.sample.SampleSequencingObjectJoin.getSubject()", "ca.corefacility.bioinformatics.irida.security.permissions.sample.ReadSamplePermission.isAllowed(org.springframework.security.core.Authentication,sequencingObjectJoin.getSubject())"], "Fixed commit": "68131da45fa28370b39ffb964333c71c8316f933", "Url": "https://api.github.com/repos/phac-nml/irida", "Date": "2017-09-26T13:57:39Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openhds.mobile.model.FormHelper.getFormTagValue(ProjectFormFields.General.NEEDS_REVIEW,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (needsReview == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4708/buggy-version/application.src.main.java.org.openhds.mobile.model.FormHelper.java", "BodyUseAPI": [], "Fixed commit": "514cdd3f514b8885ca0ae97adf9aa8bf88c04b22", "Url": "https://api.github.com/repos/USM-RCG/openhds-tablet", "Date": "2014-08-13T00:08:11Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.equalsAnyIgnoreCase(\"OPTIONS\", request.getMethod())) { com.fruit.sales.web.interceptor.IntegrationAuthInterceptor.logger.info(\"IntegrationAuthInterceptor request OPTION and PASS it!\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1669/buggy-version/src.main.java.com.fruit.sales.web.interceptor.IntegrationAuthInterceptor.java", "BodyUseAPI": [], "Fixed commit": "b26d7001a3f721f92554d0682d2cc6e88111f7dd", "Url": "https://api.github.com/repos/bran4he/FruitSMSDemo", "Date": "2017-04-12T14:48:34Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pane.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1207/buggy-version/src.client.core.Core.java", "BodyUseAPI": [], "Fixed commit": "8a329ee91351b40eebdcbecfe5b34df2c6e87512", "Url": "https://api.github.com/repos/mammo0/PROJECT", "Date": "2015-01-22T19:58:55Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((in_packet.getCharacter_pressed()) == (Constants.BACKSPACE)) && ((in_packet.getPosition()) == 0)) { ack_broadcast = new serverstorage.AckBroadcast('0', 0, 0, (-1), 0); return ack_broadcast; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2586/buggy-version/serverstorage.DataHandler.java", "BodyUseAPI": [], "Fixed commit": "55c7e49eb31095256ffa484733991ea182cbc614", "Url": "https://api.github.com/repos/Gauthamagr/CollaborativeEditing", "Date": "2012-03-31T08:10:04Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.iconmaster.typhon.types.TemplateUtils.matchTemplateArgs(info.iconmaster.typhon.types.TypeRef,other.getType().getMemberTemplate(),java.util.List<info.iconmaster.typhon.model.TemplateArgument>)", "info.iconmaster.typhon.types.TemplateUtils.matchTemplateArgs(info.iconmaster.typhon.types.TypeRef,getType().getMemberTemplate(),java.util.List<info.iconmaster.typhon.model.TemplateArgument>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(map1.equals(map2))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6695/buggy-version/src.main.java.info.iconmaster.typhon.types.TypeRef.java", "BodyUseAPI": [], "Fixed commit": "e8d75693ea540fbe8e5dd0b48a749a48283604ca", "Url": "https://api.github.com/repos/TyphonLang/Typhon", "Date": "2017-08-22T22:49:18Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (monthTxt.getText().toString().equals(\"\")) { monthTxt.setText(monthsArray[monthArrayPointer]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7946/buggy-version/app.src.org.commcare.views.widgets.GregorianDateWidget.java", "BodyUseAPI": ["android.widget.AutoCompleteTextView.setText(monthsArray[monthArrayPointer])"], "Fixed commit": "32bfa00815de0ff5ee8e61b88bb185214f8508c5", "Url": "https://api.github.com/repos/dimagi/commcare-android", "Date": "2016-06-14T20:56:46Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (yearTxt.getText().toString().equals(\"\")) { yearTxt.setText(java.lang.String.valueOf(myCal.get(java.util.Calendar.YEAR))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7946/buggy-version/app.src.org.commcare.views.widgets.GregorianDateWidget.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "32bfa00815de0ff5ee8e61b88bb185214f8508c5", "Url": "https://api.github.com/repos/dimagi/commcare-android", "Date": "2016-06-14T20:56:46Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dayTxt.getText().toString().equals(\"\")) { dayTxt.setText(java.lang.String.valueOf(myCal.get(java.util.Calendar.DAY_OF_MONTH))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7946/buggy-version/app.src.org.commcare.views.widgets.GregorianDateWidget.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "32bfa00815de0ff5ee8e61b88bb185214f8508c5", "Url": "https://api.github.com/repos/dimagi/commcare-android", "Date": "2016-06-14T20:56:46Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (bitmap == null) { bitmap = android.graphics.Bitmap.createBitmap(((tile.mTileRect.right) - (tile.mTileRect.left)), ((tile.mTileRect.bottom) - (tile.mTileRect.top)), Config.ARGB_8888); android.graphics.Canvas c = new android.graphics.Canvas(bitmap); c.drawColor(Color.BLACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4832/buggy-version/ByakuGallery.src.com.diegocarloslima.byakugallery.lib.TileBitmapDrawable.java", "BodyUseAPI": [], "Fixed commit": "365584ce5681a6f159e0486ef7fbec24c3546429", "Url": "https://api.github.com/repos/yrom/ByakuGallery", "Date": "2014-03-05T01:36:08Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (restaurants.get(position).getRating().equalsIgnoreCase(\"NA\")) { tvRatings.setText(restaurants.get(position).getRating()); }else { tvRatings.setText(((restaurants.get(position).getRating()) + \"/5\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6455/buggy-version/src.com.wheretoeat.adapters.RestaurantsAdpater.java", "BodyUseAPI": ["restaurants.get(position).getRating()", "restaurants.get(position).getRating()", "android.widget.TextView.setText(((restaurants.get(position).getRating()) + \"/5\"))", "android.widget.TextView.setText(restaurants.get(position).getRating())", "java.util.List<com.wheretoeat.models.Restaurant>.get(int)", "java.util.List<com.wheretoeat.models.Restaurant>.get(int)"], "Fixed commit": "58d60feb90e7dc4791823042224992e9475565d1", "Url": "https://api.github.com/repos/wheretoeatorg/WhereToEat", "Date": "2014-06-17T22:52:37Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((new_array.length) == 1) { merge(min, mid, max); }else { mergeSorting(min, mid); mergeSorting((mid + 1), max); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4901/buggy-version/programming.day10.MergeSort.java", "BodyUseAPI": [], "Fixed commit": "7df1ff20904cd53f011ac643762537c62c6741f2", "Url": "https://api.github.com/repos/catgill/CS2", "Date": "2017-12-13T00:19:23Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((prefixes != null) && ((prefixes.length) == 1)) { java.lang.String[] newPrefixes = new java.lang.String[]{ prefixes[0], prefixes[0].toLowerCase(java.util.Locale.US) }; prefixes = newPrefixes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6904/buggy-version/boundbox-library.src.main.java.org.boundbox.processor.BoundBoxProcessor.java", "BodyUseAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Fixed commit": "9db6e9e10180cc148b72e9a7ab562825e75a7578", "Url": "https://api.github.com/repos/stephanenicolas/boundbox", "Date": "2013-10-02T22:08:23Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Gdx.files.internal(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(h.exists())) { java.lang.System.err.println(\"Libgdx promise not fulfilled\"); throw new com.badlogic.gdx.utils.GdxRuntimeException(\"Background not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1491/buggy-version/implementation.project.src.de.croggle.ui.screens.AbstractScreen.java", "BodyUseAPI": [], "Fixed commit": "43413a70784204a8491b70c70fcd107c5f68c0a3", "Url": "https://api.github.com/repos/vincent23/lambda-alligatoren", "Date": "2014-02-04T20:25:05Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((int) (arguments.get(\"numPartition\"))) < number) number = ((int) (arguments.get(\"numPartition\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7425/buggy-version/src.main.java.com.couchbase.bigfun.LoadParametersGenerator.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "213116345a56b17b1c73f312d3f994add2938b83", "Url": "https://api.github.com/repos/huiwangcouchbase/loader", "Date": "2017-10-06T00:59:30Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(contenido instanceof Contenido.Anuncios)) { if (!(catalogo.contains(contenido))) catalogo.add(contenido); }else { if (!(publicidad.contains(contenido))) publicidad.add(contenido); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8311/buggy-version/src.main.java.Servidor.ServLocal.java", "BodyUseAPI": ["java.util.List<Contenido.Contenido>.contains(Contenido.Contenido)", "java.util.List<Contenido.Contenido>.add(Contenido.Contenido)", "java.util.List<Contenido.Contenido>.add(Contenido.Contenido)", "java.util.List<Contenido.Contenido>.contains(Contenido.Contenido)"], "Fixed commit": "65e6e39cf33a962d45125ba117882ac6e67368ca", "Url": "https://api.github.com/repos/jmrio/VVS-Music", "Date": "2015-11-10T11:59:33Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8351/buggy-version/src.main.java.fr.zaral.npcreward.Lang.java", "BodyUseAPI": [], "Fixed commit": "c71fd4b94a48b025aa0fa0b25fd8c12d425e400e", "Url": "https://api.github.com/repos/ZaralDev/NpcReward", "Date": "2016-06-28T14:27:58Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((u.getProParteKey()) != null) && ((u.getProParteKey()) == (-1))) { u.setProParteKey(usageKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1931/buggy-version/checklistbank-mybatis-service.src.main.java.org.gbif.checklistbank.service.mybatis.DatasetImportServiceMyBatis.java", "BodyUseAPI": ["org.gbif.api.model.checklistbank.NameUsage.setProParteKey(int)"], "Fixed commit": "2e541d02865fc6f6bc94a20ab6e83ebf8a54d0db", "Url": "https://api.github.com/repos/gbif/checklistbank", "Date": "2014-10-08T10:39:29Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bounds.width) == 0) bounds.width = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7932/buggy-version/src.org.achartengine.compat.Canvas.java", "BodyUseAPI": [], "Fixed commit": "b0e45a04226cfba38f4617147277ab8ffac1eb0f", "Url": "https://api.github.com/repos/shannah/CN1aChartEngine", "Date": "2014-02-24T18:05:00Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bounds.height) == 0) bounds.height = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7932/buggy-version/src.org.achartengine.compat.Canvas.java", "BodyUseAPI": [], "Fixed commit": "b0e45a04226cfba38f4617147277ab8ffac1eb0f", "Url": "https://api.github.com/repos/shannah/CN1aChartEngine", "Date": "2014-02-24T18:05:00Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((imageSizes.length) == 1) { parameters.add(new com.github.yuyang226.j500px.http.Parameter(\"image_size\", imageSizes[0].getSize())); }else { for (com.github.yuyang226.j500px.photos.ImageSize imageSize : imageSizes) { parameters.add(new com.github.yuyang226.j500px.http.Parameter(\"image_size[]\", imageSize.getSize())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3265/buggy-version/j500px.src.main.java.com.github.yuyang226.j500px.photos.PhotosInterface.java", "BodyUseAPI": ["java.util.List<com.github.yuyang226.j500px.http.Parameter>.add(com.github.yuyang226.j500px.http.Parameter)", "imageSizes[0].getSize()"], "Fixed commit": "cd646ddbe8726ddefce6d41c1113fa1dcfd48784", "Url": "https://api.github.com/repos/yuyang226/j500px", "Date": "2013-03-19T07:41:17Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Gameplay00.pause) == false) { MyGame.world01.stop(); MyGame.world02.stop(); MyGame.world03.stop(); ss.remove(ss.top()); ss.push(new spark.game01.core.character.Scott_char.HomeScreen(ss)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7576/buggy-version/core.src.main.java.spark.game01.core.character.Scott_char.Scott.java", "BodyUseAPI": [], "Fixed commit": "7bcf9e86cff0c942a362c69e558886d7ad07a3aa", "Url": "https://api.github.com/repos/Toonpark333/Scott-Vs", "Date": "2016-06-01T09:49:36Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.zimy.geluid.informatories.ServerInformatory.getMetadata(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (metadata != null) { me.zimy.geluid.scanning.JpaRepositoryMetadataSaver.logger.info((\"Supported content found at \" + (metadata.getPath()))); createOrFindSong(metadata); }else { me.zimy.geluid.scanning.JpaRepositoryMetadataSaver.logger.error((\"SHIT found at \" + (file.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7269/buggy-version/src.main.java.me.zimy.geluid.scanning.JpaRepositoryMetadataSaver.java", "BodyUseAPI": ["org.slf4j.Logger.info((\"Supported content found at \" + (metadata.getPath())))", "me.zimy.geluid.scanning.JpaRepositoryMetadataSaver.createOrFindSong(me.zimy.geluid.informatories.AudioFileMetadata)", "me.zimy.geluid.informatories.AudioFileMetadata.getPath()"], "Fixed commit": "120e43ae7526ed80344398f4f48f5f22a565cbec", "Url": "https://api.github.com/repos/zimy/geluid", "Date": "2014-10-23T09:12:11Z"},
{"Line": "=>1468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRegion) { action = com.turt2live.antishare.util.Action.REGION_BLOCK_PLACE; extra = new java.lang.String[]{ hangingRegion == null ? com.turt2live.antishare.ASListener.plugin.getMessages().getMessage(\"wilderness\") : hangingRegion.getName() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5762/buggy-version/src.main.java.com.turt2live.antishare.ASListener.java", "BodyUseAPI": [], "Fixed commit": "522e5c87f73ec87b0fdcbec80f02c4374c18f73c", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2013-02-22T14:48:07Z"},
{"Line": "=>3316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((loadedSketch.getOption(opt)) != null) { item.setSelected(loadedSketch.getOption(opt).equals(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6747/buggy-version/src.org.uecide.Editor.java", "BodyUseAPI": ["loadedSketch.getOption(opt).equals(java.lang.String)", "javax.swing.JMenuItem.setSelected(loadedSketch.getOption(opt).equals(key))", "org.uecide.Sketch.getOption(java.lang.String)"], "Fixed commit": "0b1261c6690d2e3942488b67e3955f7f0b2a677c", "Url": "https://api.github.com/repos/UECIDE/UECIDE", "Date": "2016-12-21T16:39:35Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(Modele.ConfigurationPartie.getConfigurationPartie().getPartie().estTerminee())) && (Modele.ConfigurationPartie.getConfigurationPartie().getPartie().getJoueurCourant().getEstHumain())) Modele.SuggestionCoup.suggestionCoup();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4459/buggy-version/src.Controleur.hintClicEvent.java", "BodyUseAPI": [], "Fixed commit": "69a148c9e50da501565f0f8c90eed5520c69f072", "Url": "https://api.github.com/repos/geoliak/Penguins", "Date": "2017-05-24T09:10:46Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((fileSuffixFinal) != null) && ((fileSuffixFinal.length()) > 0)) return name.endsWith((\".\" + (fileSuffixFinal))); else return org.apache.commons.lang3.StringUtils.isAlphanumeric(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8222/buggy-version/OWLTools-Runner.src.main.java.owltools.cli.SolrCommandRunner.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "13a9d7c88d7f9f7593986157af135685751573e7", "Url": "https://api.github.com/repos/owlcollab/owltools", "Date": "2016-12-06T17:38:12Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.amygdalum.stringsearchalgorithms.search.WuManber.Finder.removeMatchesBefore(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (last > (chars.current())) { chars.move(last); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5272/buggy-version/src.main.java.net.amygdalum.stringsearchalgorithms.search.WuManber.java", "BodyUseAPI": ["net.amygdalum.stringsearchalgorithms.io.CharProvider.move(long)"], "Fixed commit": "ac7699bc574eb7248fa13542c3efa97674257afb", "Url": "https://api.github.com/repos/almondtools/stringsearchalgorithms", "Date": "2016-10-31T11:32:17Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.boveybrawlers.Adapt.Adapter.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((player.getScoreboard()) != null) && ((player.getScoreboard().getPlayerTeam(player)) != null)) { player.getScoreboard().getPlayerTeam(player).setPrefix((((org.bukkit.ChatColor.GRAY) + \"\") + (org.bukkit.ChatColor.STRIKETHROUGH))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6282/buggy-version/src.main.java.com.boveybrawlers.Adapt.Arena.java", "BodyUseAPI": ["org.bukkit.entity.Player.getScoreboard()", "player.getScoreboard().getPlayerTeam(org.bukkit.entity.Player)", "player.getScoreboard().getPlayerTeam(player).setPrefix((((org.bukkit.ChatColor.GRAY) + \"\") + (org.bukkit.ChatColor.STRIKETHROUGH)))"], "Fixed commit": "45e7476899007c12646cb99afc9fae1bd50e8251", "Url": "https://api.github.com/repos/AbsoluteCraft/Adapt", "Date": "2015-07-01T16:41:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (command.equals(\"Alive?\")) { new java.lang.Thread(this.heartBeat).start(); java.lang.System.out.println(\"heartBeat\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/197/buggy-version/src.Slave.HKSlaveNode.java", "BodyUseAPI": [], "Fixed commit": "94264608f5e402153817ee386ad792def40dcb7a", "Url": "https://api.github.com/repos/amaliujia/ArcherDFS", "Date": "2014-12-21T02:59:29Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (table.getGameType().equals(\"Two Player Duel\")) { canBeRemoved = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5426/buggy-version/Mage.Server.src.main.java.mage.server.TableManager.java", "BodyUseAPI": [], "Fixed commit": "71909e83103681d4275808378103311cd1bef9dc", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-07-14T00:19:04Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gradle.util.CollectionUtils.join(java.lang.String,classpath.getFiles())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.tools.ant.taskdefs.condition.Os.isFamily(Os.FAMILY_WINDOWS)) && ((classpathString.length()) > 10000)) { try { org.apache.tools.ant.taskdefs.Jar pathingJar = new org.apache.tools.ant.taskdefs.Jar(); org.apache.tools.ant.taskdefs.Manifest manifest = new org.apache.tools.ant.taskdefs.Manifest(); java.lang.StringBuilder manifestClasspath = new java.lang.StringBuilder(); java.util.Iterator<java.io.File> iter = classpath.getFiles().iterator(); for (java.io.File entry = iter.next(); iter.hasNext(); entry = iter.next()) { java.lang.String classpathEntry = entry.toURI().toURL().toString().replaceFirst(\"file:/+\", \"/\"); manifestClasspath.append(classpathEntry); if (iter.hasNext()) { manifestClasspath.append(' '); } } manifest.addConfiguredAttribute(new org.apache.tools.ant.taskdefs.Manifest.Attribute(\"Class-Path\", manifestClasspath.toString())); java.io.File file = new java.io.File(((((\"build/javaExec/pathing_\" + (java.lang.System.currentTimeMillis())) + \"_\") + (org.apache.commons.lang.RandomStringUtils.randomAlphanumeric(4))) + \".jar\")); pathingJar.addConfiguredManifest(manifest); pathingJar.setDestFile(file); pathingJar.execute(); classpathString = file.getAbsolutePath(); } catch (org.apache.tools.ant.taskdefs.ManifestException e) { throw new java.lang.IllegalStateException(\"Pathing Jar Manifest not creatable\", e); } catch (java.net.MalformedURLException e) { throw new java.lang.IllegalStateException(\"Pathing Jar Manifest not creatable\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7980/buggy-version/subprojects.core.src.main.groovy.org.gradle.process.internal.JavaExecHandleBuilder.java", "BodyUseAPI": [], "Fixed commit": "e7d036df6ac06b8b52332325d3a27192515dd109", "Url": "https://api.github.com/repos/flofreud/gradle", "Date": "2016-02-02T20:42:58Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["trzpoc.structure.DataDisplayManager.returnRow(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (aRow != null) { for (int columnIndex = 0; columnIndex < (aRow.getCellsCount()); columnIndex++) { tempValue = aRow.getCellByColumnIndex(columnIndex); if ((tempValue.getId()) == id) { retValue = tempValue; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1194/buggy-version/src.main.java.trzpoc.structure.DataDisplayManager.java", "BodyUseAPI": ["trzpoc.structure.CellsRow.getCellsCount()", "trzpoc.structure.CellsRow.getCellByColumnIndex(int)"], "Fixed commit": "150c0dce55668f3f5a9a26c2c6c51a753adccc7e", "Url": "https://api.github.com/repos/TRZ-EI/serial", "Date": "2017-08-01T14:01:54Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (ln == null) { java.lang.System.err.println(\"Unexpected end of file\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4630/buggy-version/src.main.java.cs492.obsecurefinal.builder.TopicBuilder.java", "BodyUseAPI": [], "Fixed commit": "c31add16c2ce1885f42d8de636bc98e8bbfa4f1d", "Url": "https://api.github.com/repos/jmarcinik/srdesign-obsecure-final", "Date": "2014-03-12T00:45:03Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (ln == null) { java.lang.System.err.println(\"Unexpected end of file\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4630/buggy-version/src.main.java.cs492.obsecurefinal.builder.TopicBuilder.java", "BodyUseAPI": [], "Fixed commit": "c31add16c2ce1885f42d8de636bc98e8bbfa4f1d", "Url": "https://api.github.com/repos/jmarcinik/srdesign-obsecure-final", "Date": "2014-03-12T00:45:03Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Support.Answer.getAnswer(entry.getKey())) != null) { java.lang.System.out.println(Support.Answer.getAnswer(entry.getKey())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1250/buggy-version/TechSupport.src.Support.java", "BodyUseAPI": ["java.io.PrintStream.println(Support.Answer)", "Support.Answer.getAnswer(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getKey()"], "Fixed commit": "15741ce0640b13fa7d1a6f2731bd572792311ca7", "Url": "https://api.github.com/repos/Dustland/Java-Application", "Date": "2013-10-13T17:01:06Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.mayo.mprc.utilities.FileUtilities.isWindowsPlatform()) { if (command.get(0).endsWith(\".pl\")) { java.util.List<java.lang.String> newCommand = new java.util.ArrayList<java.lang.String>(((command.size()) + 1)); newCommand.add(\"perl.exe\"); newCommand.addAll(command); builder.command(newCommand); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4351/buggy-version/lib.util.src.main.java.edu.mayo.mprc.utilities.ProcessCaller.java", "BodyUseAPI": [], "Fixed commit": "6430f03dcc3cbc44e88414ee1e64e38d6082f055", "Url": "https://api.github.com/repos/raymond301/swift", "Date": "2014-11-06T21:44:31Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getWhitespaceFollowedNode(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((whitespaceFollowedAst.getNextSibling()) == null) || ((whitespaceFollowedAst.getNextSibling().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS))) { final int whitespaceColumnNo = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(whitespaceFollowedAst); final int whitespaceLineNo = whitespaceFollowedAst.getLineNo(); if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) { log(whitespaceLineNo, whitespaceColumnNo, com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.MSG_KEY, whitespaceFollowedAst.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2597/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.log(int,int,java.lang.String,whitespaceFollowedAst.getText())", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(com.puppycrawl.tools.checkstyle.api.DetailAST)", "com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getText()"], "Fixed commit": "60cc9ae59488737f982e21cdc94037d3257ccbc5", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-09-05T11:43:02Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParmInt(request, \"reload\")) != 1) { bot = bots.get(userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/4703/buggy-version/server.src.com.eyespeak.ChatServlet.java", "BodyUseAPI": [], "Fixed commit": "1b82055d949034fbec5269156c6c9330194dfdf0", "Url": "https://api.github.com/repos/skiluk/eyespeak", "Date": "2015-09-13T02:18:10Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((writerType) != null) { facade.setWriter(chain, writerType.get(0), path, recursive, params); }else { facade.setWriter(chain, null, path, recursive, params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7992/buggy-version/src.main.java.org.walkmod.commands.SetWriterCommand.java", "BodyUseAPI": [], "Fixed commit": "7674df0a3041188f2daa564a75d14f6c5a9bb42f", "Url": "https://api.github.com/repos/cal101/walkmod-core", "Date": "2016-03-29T10:59:11Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((readerType) != null) { facade.setReader(chain, readerType.get(0), path, recursive, params); }else { facade.setReader(chain, null, path, recursive, params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7992/buggy-version/src.main.java.org.walkmod.commands.SetReaderCommand.java", "BodyUseAPI": [], "Fixed commit": "7674df0a3041188f2daa564a75d14f6c5a9bb42f", "Url": "https://api.github.com/repos/cal101/walkmod-core", "Date": "2016-03-29T10:59:11Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rhs.actual.clazz) == (void.class)) { throw createError(new java.lang.IllegalArgumentException(\"Right-hand side cannot be a [void] type for assignment.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8894/buggy-version/modules.lang-painless.src.main.java.org.elasticsearch.painless.node.EAssignment.java", "BodyUseAPI": [], "Fixed commit": "2d927fababd58459db1d89d743618399ef175461", "Url": "https://api.github.com/repos/tbrooks8/elasticsearch", "Date": "2017-11-28T21:44:52Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.elasticsearch.painless.node.AExpression>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((expression.actual.clazz) == (void.class)) { throw createError(new java.lang.IllegalArgumentException(((\"Argument(s) cannot be of [void] type when calling method [\" + (name)) + \"].\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8894/buggy-version/modules.lang-painless.src.main.java.org.elasticsearch.painless.node.PSubDefCall.java", "BodyUseAPI": [], "Fixed commit": "2d927fababd58459db1d89d743618399ef175461", "Url": "https://api.github.com/repos/tbrooks8/elasticsearch", "Date": "2017-11-28T21:44:52Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ch) == '|') { scanChar(); token = com.alibaba.druid.sql.parser.Token.Token.QUESBAR; }else { token = com.alibaba.druid.sql.parser.Token.Token.QUESQUES; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1652/buggy-version/src.main.java.com.alibaba.druid.sql.parser.Lexer.java", "BodyUseAPI": [], "Fixed commit": "c0f436ea41869c34856ea6d269c450d9c2040844", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2017-10-02T04:28:08Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JFileChooser.getSelectedFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (saveTo == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8572/buggy-version/src.codeu.chat.client.maingui.MessagePanel.java", "BodyUseAPI": [], "Fixed commit": "211ad81bfe351b71baea7800fd79f3146aed47ed", "Url": "https://api.github.com/repos/arturogonzalezp/codeu_project_2017", "Date": "2017-06-05T12:14:00Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getActiveItem()) == null) { player.setActiveItem(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/194/buggy-version/space-server.src.main.java.com.space.server.engine.impl.WorldEventProcessorImpl.java", "BodyUseAPI": ["com.space.server.engine.impl.SpacePlayer.setActiveItem(int)"], "Fixed commit": "c2c674f1138e4ba932da45b3333cd769cc11155e", "Url": "https://api.github.com/repos/basst314/space", "Date": "2016-12-31T15:52:13Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unsuccess == 0) unsuccess = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5518/buggy-version/src.main.java.com.jaoafa.PeriodMatch.PeriodClass.PeriodSecEnd.java", "BodyUseAPI": [], "Fixed commit": "140271b91cfbae72a3ec7090d62286c57aa2c494", "Url": "https://api.github.com/repos/jaoafa/PeriodMatch", "Date": "2017-11-07T13:57:57Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success == 0) success = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5518/buggy-version/src.main.java.com.jaoafa.PeriodMatch.PeriodClass.PeriodSecEnd.java", "BodyUseAPI": [], "Fixed commit": "140271b91cfbae72a3ec7090d62286c57aa2c494", "Url": "https://api.github.com/repos/jaoafa/PeriodMatch", "Date": "2017-11-07T13:57:57Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((child.spec.mode) == (Supervisor.ChildMode.TEMPORARY)) { supervisor.tryRestart(child, cause, supervisor.now(), null, true); return true; }else if ((child.spec.mode) == (Supervisor.ChildMode.TRANSIENT)) { return (cause != null) || (supervisor.tryRestart(child, cause, supervisor.now(), null, true)); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2826/buggy-version/quasar-actors.src.main.java.co.paralleluniverse.actors.behaviors.SupervisorActor.java", "BodyUseAPI": ["co.paralleluniverse.actors.behaviors.SupervisorActor.tryRestart(co.paralleluniverse.actors.behaviors.SupervisorActor.ChildEntry,java.lang.Throwable,long,<nulltype>,boolean)", "co.paralleluniverse.actors.behaviors.SupervisorActor.tryRestart(co.paralleluniverse.actors.behaviors.SupervisorActor.ChildEntry,java.lang.Throwable,long,<nulltype>,boolean)"], "Fixed commit": "be01288090eac8f4bef22f47f72ad53424154b0c", "Url": "https://api.github.com/repos/voidstarstar/quasar", "Date": "2015-09-24T17:37:39Z"},
{"Line": "=>1133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((deviceCache.getType(dev)) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6406/buggy-version/src.de.dmarcini.submatix.pclogger.comm.BTCommunication.java", "BodyUseAPI": [], "Fixed commit": "d9fe143343c472f5a9bfcbfe0667e84516df858f", "Url": "https://api.github.com/repos/dmarc0001/submatixBTPC", "Date": "2012-10-10T22:17:22Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.zip.ZipInputStream.getNextEntry()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entry == null) { throw new java.io.IOException((\"zip file has no entries: \" + (report.getSourceFile()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3870/buggy-version/app.src.main.java.mil.nga.dice.report.UnzipReportSourceFile.java", "BodyUseAPI": [], "Fixed commit": "647a5540857200c7e0a1a46674ce913025e74454", "Url": "https://api.github.com/repos/restjohn/disconnected-content-explorer-android", "Date": "2015-03-23T21:38:53Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!valid) { valid = isValidDate(value.getValue(), YYYYformat); if (!(org.apache.commons.lang.StringUtils.isNumeric(value.getValue()))) { valid = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5483/buggy-version/src.main.java.edu.harvard.iq.dataverse.DatasetFieldValueValidator.java", "BodyUseAPI": [], "Fixed commit": "538b5ce2098ee673e379b78d850a91466878c7cf", "Url": "https://api.github.com/repos/IQSS/dataverse", "Date": "2015-03-05T15:49:42Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (structure.getType().equals(\"root\")) { writeLayerToDOM(structure, doc.getDocumentElement(), doc); }else { org.w3c.dom.Element root = doc.createElement(structure.getType()); doc.appendChild(root); writeLayerToDOM(structure, root, doc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/991/buggy-version/src.com.eakjb.EakjbData.DataAdapters.XMLAdapter.java", "BodyUseAPI": ["com.eakjb.EakjbData.DataAdapters.XMLAdapter.writeLayerToDOM(com.eakjb.EakjbData.IDataStructure,org.w3c.dom.Element,org.w3c.dom.Document)", "org.w3c.dom.Document.createElement(structure.getType())", "com.eakjb.EakjbData.IDataStructure.getType()", "com.eakjb.EakjbData.DataAdapters.XMLAdapter.writeLayerToDOM(com.eakjb.EakjbData.IDataStructure,org.w3c.dom.Element,org.w3c.dom.Document)"], "Fixed commit": "d13cdefe11f001f3fd7b77e28118f97f2c39f7b3", "Url": "https://api.github.com/repos/eakjb/EakjbData", "Date": "2013-01-10T01:04:51Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((events != null) && ((events.size()) > 0)) { com.tywholland.poeevents.PoEEventsDataSource db = new com.tywholland.poeevents.PoEEventsDataSource(context); db.insertEventsAndClean(events); db.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/3989/buggy-version/src.com.tywholland.poeevents.EventRequestTask.java", "BodyUseAPI": ["com.tywholland.poeevents.PoEEventsDataSource.insertEventsAndClean(java.util.List<com.tywholland.poeevents.PoEEvent>)"], "Fixed commit": "7a3edae086ca97bfd6cd87ebad7bc3e164a3414a", "Url": "https://api.github.com/repos/Tywholland/PoEEvents", "Date": "2013-07-15T17:16:10Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapterCF) != null) { adapterCF.addAll(items); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5724/buggy-version/library.src.main.java.it.bsdsoftware.bsdcustomfontwidget.SpinnerCF.java", "BodyUseAPI": [], "Fixed commit": "105e3b6f47b7109cbde8a2b61e6b0451d3866426", "Url": "https://api.github.com/repos/bsdsoftware/BSDCustomFontWidget", "Date": "2016-04-19T10:15:46Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileName.endsWith(\"xml\")) { return \"application/xml\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5176/buggy-version/GPSLogger.src.com.mendhak.gpslogger.senders.gdocs.GDocsHelper.java", "BodyUseAPI": [], "Fixed commit": "a3149fa42858362985a44b0a091ac91b7d427cc9", "Url": "https://api.github.com/repos/codeling/gpslogger", "Date": "2014-03-30T00:48:54Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (mCategoryList.get(1))) && (null != ((java.util.Collection<? extends com.xgf.winecome.entity.Goods>) (mShowMsgMap.get(mCategoryList.get(1).getPpid()))))) { com.xgf.winecome.ui.activity.CategoryActivity.mGoodsList.addAll(((java.util.Collection<? extends com.xgf.winecome.entity.Goods>) (mShowMsgMap.get(mCategoryList.get(1).getPpid())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2159/buggy-version/src.com.xgf.winecome.ui.activity.CategoryActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.xgf.winecome.entity.Goods>.addAll(java.lang.Object)", "java.util.ArrayList<com.xgf.winecome.entity.Category>.get(int)", "java.util.HashMap<java.lang.String, java.lang.Object>.get(mCategoryList.get(1).getPpid())", "mCategoryList.get(1).getPpid()"], "Fixed commit": "82915e22598f5bb0e2460f35bcdb0811bc84d2e7", "Url": "https://api.github.com/repos/xiguofeng/WineCome", "Date": "2015-10-20T02:13:41Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (intent.getAction().equals(AppWidgetManager.ACTION_APPWIDGET_OPTIONS_CHANGED)) { Utilities.AppLog.d(com.yogee.widgets.CurrentLocationWidget.widget.LocationWidgetProvider.TAG, \">>>>> widget resized\"); }else if (intent.getAction().equals(AppWidgetManager.ACTION_APPWIDGET_UPDATE)) { Utilities.AppLog.d(com.yogee.widgets.CurrentLocationWidget.widget.LocationWidgetProvider.TAG, \">>>>> widget clicked\"); context.startService(new android.content.Intent(context, com.yogee.widgets.CurrentLocationWidget.services.LocationService.class)); }else if (intent.getAction().equals(AppWidgetManager.ACTION_APPWIDGET_DISABLED)) { Utilities.AppLog.d(com.yogee.widgets.CurrentLocationWidget.widget.LocationWidgetProvider.TAG, \">>>>> last widget removed stopping the service\"); context.stopService(new android.content.Intent(context, com.yogee.widgets.CurrentLocationWidget.services.LocationService.class)); com.yogee.widgets.CurrentLocationWidget.utils.Utilities.cancelStatusBarNotification(context); }else if (intent.getAction().equals(Constants.INTENT_ACTION_SHARE_LOCATION)) { Utilities.AppLog.d(com.yogee.widgets.CurrentLocationWidget.widget.LocationWidgetProvider.TAG, \">>>>> share location event received\"); if (!(addressToSend.equals(\"\"))) { addressToSend += (((((\"\\n\" + (context.getString(R.string.map_link))) + \" \") + (context.getString(R.string.google_map_web_link))) + latitude) + \",\") + longitude; com.yogee.widgets.CurrentLocationWidget.utils.Utilities.shareText(context, (((context.getString(R.string.msg_i_am_are_nearby)) + \", \") + addressToSend)); } }else if (intent.getAction().equals(Constants.INTENT_ACTION_SHOW_LOCATION_ON_MAP)) { Utilities.AppLog.d(com.yogee.widgets.CurrentLocationWidget.widget.LocationWidgetProvider.TAG, \">>>>> location show on map event received\"); if ((((latitude != null) && (!(latitude.equals(\"\")))) && (longitude != null)) && (!(longitude.equals(\"\")))) { com.yogee.widgets.CurrentLocationWidget.utils.Utilities.showOnMap(context, latitude, longitude, addressToSend); } }else if (intent.getAction().equals(Constants.INTENT_ACTION_SHOW_STATUS_BAR_NOTIFICATION)) { Utilities.AppLog.d(com.yogee.widgets.CurrentLocationWidget.widget.LocationWidgetProvider.TAG, \">>>>> status bar notification event received\"); if ((((((latitude != null) && (!(latitude.equals(\"\")))) && (longitude != null)) && (!(longitude.equals(\"\")))) && (addressToSend != null)) && (!(addressToSend.equals(\"\")))) { com.yogee.widgets.CurrentLocationWidget.utils.Utilities.showStatusBarNotification(context, latitude, longitude, addressToSend); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/58/buggy-version/src.com.yogee.widgets.CurrentLocationWidget.widget.LocationWidgetProvider.java", "BodyUseAPI": ["android.content.Intent.getAction()", "android.content.Intent.getAction()", "intent.getAction().equals(Constants.INTENT_ACTION_SHOW_LOCATION_ON_MAP)", "intent.getAction().equals(AppWidgetManager.ACTION_APPWIDGET_UPDATE)", "android.content.Intent.getAction()", "intent.getAction().equals(Constants.INTENT_ACTION_SHOW_STATUS_BAR_NOTIFICATION)", "intent.getAction().equals(AppWidgetManager.ACTION_APPWIDGET_DISABLED)", "android.content.Intent.getAction()", "android.content.Intent.getAction()", "intent.getAction().equals(Constants.INTENT_ACTION_SHARE_LOCATION)"], "Fixed commit": "d59776869c9efb27b0e6c459d4be35e0fda48509", "Url": "https://api.github.com/repos/yogendra1/currentLocationWidget", "Date": "2014-06-15T14:27:15Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mController) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1676/buggy-version/browser.src.main.java.com.liskovsoft.browser.BrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "79c92cf4f3f8a84b690fe0aa14e7dc898003a0e8", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2017-01-13T04:00:47Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mController) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1676/buggy-version/browser.src.main.java.com.liskovsoft.browser.BrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "79c92cf4f3f8a84b690fe0aa14e7dc898003a0e8", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2017-01-13T04:00:47Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mController) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1676/buggy-version/browser.src.main.java.com.liskovsoft.browser.BrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "79c92cf4f3f8a84b690fe0aa14e7dc898003a0e8", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2017-01-13T04:00:47Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"null\".equals(value)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1062/buggy-version/src.main.java.de.cimt.talendcomp.json.streaming.JsonStreamParser.java", "BodyUseAPI": [], "Fixed commit": "aa43d9208a0e6b57381eb874d2fa7da4c51537c9", "Url": "https://api.github.com/repos/jlolling/talendcomp_tJSONDoc", "Date": "2016-09-13T15:43:53Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (col instanceof org.caleydo.vis.lineup.model.CategoricalRankColumnModel<?>) r = new demo.project.model.CategoricalRankColumnSpec(); else if (col instanceof org.caleydo.vis.lineup.model.ACompositeRankColumnModel) r = demo.project.model.RankTableSpec.saveComposite(((org.caleydo.vis.lineup.model.ACompositeRankColumnModel) (col)), dataCreator);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/533/buggy-version/src.main.java.demo.project.model.RankTableSpec.java", "BodyUseAPI": [], "Fixed commit": "40c99a7823f943bba7c4877dfe3487c0d026a0d7", "Url": "https://api.github.com/repos/Caleydo/org.caleydo.vis.lineup.demos", "Date": "2014-03-18T13:46:27Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hop.getOriginalHopLength()) > 0) { this.startIndex = (hop.getStartIndex()) / (hop.getOriginalHopLength()); this.endIndex = (hop.getEndIndex()) / (hop.getOriginalHopLength()); }else { this.startIndex = 0.0; this.endIndex = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/6479/buggy-version/src.main.java.org.opentripplanner.routing.edgetype.flex.FlexTransitBoardAlight.java", "BodyUseAPI": ["org.opentripplanner.routing.edgetype.flex.PartialPatternHop.getStartIndex()", "org.opentripplanner.routing.edgetype.flex.PartialPatternHop.getOriginalHopLength()", "org.opentripplanner.routing.edgetype.flex.PartialPatternHop.getEndIndex()", "org.opentripplanner.routing.edgetype.flex.PartialPatternHop.getOriginalHopLength()"], "Fixed commit": "e7f3c06e0c06e04b9fa7e2cda41ae3ba240fcb56", "Url": "https://api.github.com/repos/camsys/OpenTripPlanner", "Date": "2017-08-14T16:56:56Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxPage == 1) { setCurrPage(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8658/buggy-version/pagescroller.src.main.java.com.makaji.aleksej.pagescroller.PageScrollerView.java", "BodyUseAPI": [], "Fixed commit": "1ab75d834cbeb567ff91ca8835fc27f292e8532c", "Url": "https://api.github.com/repos/dzoli/PageScroll", "Date": "2017-09-06T14:42:09Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPage) < (itemList.size())) { setCurrPage(currentPage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/8658/buggy-version/pagescroller.src.main.java.com.makaji.aleksej.pagescroller.PageScrollerView.java", "BodyUseAPI": [], "Fixed commit": "1ab75d834cbeb567ff91ca8835fc27f292e8532c", "Url": "https://api.github.com/repos/dzoli/PageScroll", "Date": "2017-09-06T14:42:09Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((mSubtitle) != null) && (!(mSubtitle.equals(\"\")))) && (!(mSubtitle.equals(\" \")))) { ((android.widget.TextView) (v.findViewById(R.id.subtitle))).setText(android.text.Html.fromHtml(mSubtitle)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2289/buggy-version/zeiterfassung.src.main.java.de.mohoff.zeiterfassung.ui.intro.IntroSlide.java", "BodyUseAPI": ["((android.widget.TextView) (v.findViewById(R.id.subtitle))).setText(android.text.Html.fromHtml(mSubtitle))", "android.text.Html.fromHtml(java.lang.String)"], "Fixed commit": "d8535f5d3b974cbb54de6012f9250a89f9ee44ce", "Url": "https://api.github.com/repos/mohoff/Zeiterfassung", "Date": "2016-01-06T01:08:53Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(foldercheck.exists())) { foldercheck.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/1463/buggy-version/src.com.httpclient_save_cookies.CookieHelper.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "4f80ad66fd989ebf68e05e771d77a698a2cf0a84", "Url": "https://api.github.com/repos/augustopicciani/HttpClient-save-cookies-to-file", "Date": "2014-04-10T11:30:23Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.education.school.business.CourseCategoryBusiness.searchCourseCategory(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (courseCategory != null) { return new org.springframework.http.ResponseEntity<org.education.school.beans.CourseCategory>(courseCategory, org.springframework.http.HttpStatus.FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/5453/buggy-version/src.main.java.org.education.school.rest.CourseCategoryHandler.java", "BodyUseAPI": [], "Fixed commit": "c7456a129fc9140daa27149bc39a096d9b5198df", "Url": "https://api.github.com/repos/bhokumar/rest", "Date": "2016-11-21T12:55:33Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["meta.partitionsMetadata().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (number <= 0) { com.asiainfo.ocmanager.service.client.KafkaClient.LOG.error((\"Partition number is negtive: \" + topic)); throw new java.lang.RuntimeException((\"Partition number is negtive: \" + topic)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/7377/buggy-version/src.com.asiainfo.ocmanager.service.client.KafkaClient.java", "BodyUseAPI": [], "Fixed commit": "e7a5f5c27ce7eab03dc10fe938b10a61b0297f62", "Url": "https://api.github.com/repos/zhaoyim/RestServer", "Date": "2017-07-26T10:03:08Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getMembers()) == null) { pool.setMax_members(4); }else { pool.setMax_members(user.getMembers()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2661/buggy-version/src.dao.DaoImpl.java", "BodyUseAPI": ["pojos.User.getMembers()", "pojos.Pool.setMax_members(user.getMembers())"], "Fixed commit": "65fe887fcbbdcb8818e3967657196ce7720f19a9", "Url": "https://api.github.com/repos/sahilajmani/RideShareApp", "Date": "2015-12-13T16:03:04Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dao.DaoImpl.getPoolDetails(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pool.getMax_members()) != null) { if ((pool.getMax_members()) == (noOfMembers + 1)) pool.setIsAvailable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V126/2661/buggy-version/src.dao.DaoImpl.java", "BodyUseAPI": ["pojos.Pool.getMax_members()", "pojos.Pool.setIsAvailable(boolean)"], "Fixed commit": "65fe887fcbbdcb8818e3967657196ce7720f19a9", "Url": "https://api.github.com/repos/sahilajmani/RideShareApp", "Date": "2015-12-13T16:03:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.api.mvc.Session.get(Constants.SESSION_ID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sessionId.isDefined()) { value = org.pac4j.play.StorageHelper.get(sessionId.get(), key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2083/buggy-version/play-pac4j_java.src.main.java.org.pac4j.play.scala.ScalaWebContext.java", "BodyUseAPI": ["scala.Option<java.lang.String>.get()", "org.pac4j.play.StorageHelper.get(sessionId.get(),java.lang.String)"], "Fixed commit": "e1ee0ca1e67fb1c5cbcbde1ab28472ba374b721e", "Url": "https://api.github.com/repos/leleuj/play-pac4j", "Date": "2014-01-01T12:28:43Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (size())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8778/buggy-version/core.interpreter.src.main.java.org.overture.interpreter.traces.CallSequence.java", "BodyUseAPI": [], "Fixed commit": "f0a3030a83d880e7be718ca52f40a19adcdc50d8", "Url": "https://api.github.com/repos/overturetool/overture", "Date": "2015-01-31T18:53:14Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (co.cask.cdap.etl.batch.StructuredRecordWritable.schemaCache.containsKey(schemaBytes)) { schema = co.cask.cdap.etl.batch.StructuredRecordWritable.schemaCache.get(schemaBytes); }else { java.lang.String schemaStr = co.cask.cdap.api.common.Bytes.toString(schemaBytes); schema = co.cask.cdap.api.data.schema.Schema.parseJson(schemaStr); co.cask.cdap.etl.batch.StructuredRecordWritable.schemaCache.put(schemaBytes, schema); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8794/buggy-version/cdap-app-templates.cdap-etl.cdap-etl-batch.src.main.java.co.cask.cdap.etl.batch.StructuredRecordWritable.java", "BodyUseAPI": ["java.util.Map<byte[], co.cask.cdap.api.data.schema.Schema>.get(byte[])", "co.cask.cdap.api.common.Bytes.toString(byte[])", "java.util.Map<byte[], co.cask.cdap.api.data.schema.Schema>.put(byte[],co.cask.cdap.api.data.schema.Schema)"], "Fixed commit": "f27d52c8d679c068dcf3e947cecc6ac2b92d88e0", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2017-09-02T00:41:49Z"},
{"Line": "=>2094", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (revHistory != null) { historyCount = revHistory.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5984/buggy-version/CouchbaseLiteProject.CBLite.src.main.java.com.couchbase.cblite.CBLDatabase.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()"], "Fixed commit": "c62c1dc086812f3ee36291d9e05cd47553e7b275", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android", "Date": "2013-07-10T22:56:40Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.isSetValue()) { cvpvpt.setValue(encodeValue(value.getValue())); }else { cvpvpt.addNewValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1281/buggy-version/coding.cv-gml.src.main.java.org.n52.svalbard.cv.v02.encode.AbstractCVDiscretePointCoverageTypeEncoder.java", "BodyUseAPI": ["org.n52.sos.ogc.om.PointValuePair.getValue()", "net.opengis.cv.x02.gml32.CVPointValuePairType.setValue(org.apache.xmlbeans.XmlObject)", "org.n52.svalbard.cv.v02.encode.AbstractCVDiscretePointCoverageTypeEncoder<T>.encodeValue(value.getValue())"], "Fixed commit": "26748e8c901ba1c5e114e6e3c13969ec29f869cb", "Url": "https://api.github.com/repos/52North/SOS", "Date": "2017-05-22T11:46:04Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pages == 0) pages = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3985/buggy-version/src.main.java.org.dainst.gazetteer.controller.UserManagementController.java", "BodyUseAPI": [], "Fixed commit": "91e6402896bc47e69e51d6ebf806cd81f67dbd0f", "Url": "https://api.github.com/repos/dainst/gazetteer", "Date": "2015-07-20T12:21:49Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pages == 0) pages = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3985/buggy-version/src.main.java.org.dainst.gazetteer.controller.RecordGroupController.java", "BodyUseAPI": [], "Fixed commit": "91e6402896bc47e69e51d6ebf806cd81f67dbd0f", "Url": "https://api.github.com/repos/dainst/gazetteer", "Date": "2015-07-20T12:21:49Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.jackyoustra.kautoload.MainApp.isMac()) { f = new java.io.File(\"/Volumes\").listFiles(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5436/buggy-version/src.com.jackyoustra.kautoload.MainApp.java", "BodyUseAPI": [], "Fixed commit": "433bf8d7e75c97043eb311452ec87853c553d986", "Url": "https://api.github.com/repos/JackYoustra/kindle-autoloader-java", "Date": "2015-02-18T00:20:51Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textOut) != null) { try { textOut.append((str + \"\\n\")); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(net.strawberrystudios.noskwl.client.Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3491/buggy-version/src.net.strawberrystudios.noskwl.client.Client.java", "BodyUseAPI": [], "Fixed commit": "8c2c29cac67a010211e161a174cdebc35e05680f", "Url": "https://api.github.com/repos/TheCallSign/noskwl", "Date": "2015-03-03T12:12:17Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(message.equals(\"\"))) { this.sendPacket(pf.getRawPacket(Packet.MESSAGE, message.getBytes())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3491/buggy-version/src.net.strawberrystudios.noskwl.client.Client.java", "BodyUseAPI": ["net.strawberrystudios.noskwl.client.Client.sendPacket(pf.getRawPacket(Packet.MESSAGE, message.getBytes()))", "java.lang.String.getBytes()", "net.strawberrystudios.noskwl.packet.PacketFactory.getRawPacket(Packet.MESSAGE,byte[])"], "Fixed commit": "8c2c29cac67a010211e161a174cdebc35e05680f", "Url": "https://api.github.com/repos/TheCallSign/noskwl", "Date": "2015-03-03T12:12:17Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isApplicable(event.getTargetEntity()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/419/buggy-version/src.main.java.com.skelril.skree.content.world.build.BuildWorldWrapper.java", "BodyUseAPI": [], "Fixed commit": "0aea978c1e5d85e5ce7fdaf82db78a689c34bf35", "Url": "https://api.github.com/repos/Skelril/Skree", "Date": "2016-01-09T00:42:08Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.fml.common.FMLCommonHandler.instance().getSide()) == (net.minecraftforge.fml.relauncher.Side.CLIENT)) WayofTime.bloodmagic.compat.guideapi.GuideBloodMagic.initCategories();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3092/buggy-version/src.main.java.WayofTime.bloodmagic.compat.guideapi.CompatibilityGuideAPI.java", "BodyUseAPI": [], "Fixed commit": "087982eb9d8138ab8cfe3ec66b2fae0eab8764ba", "Url": "https://api.github.com/repos/WayofTime/BloodMagic", "Date": "2016-07-21T14:36:16Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAutonomous()) { autoTurn(adjustValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6703/buggy-version/src.org.usfirst.frc.team4338.robot.Robot.java", "BodyUseAPI": [], "Fixed commit": "72ecf016ab43cd090aeeb5809b4082521bc7c92f", "Url": "https://api.github.com/repos/wbaisrobotics/Wattson", "Date": "2017-03-03T16:25:11Z"},
{"Line": "=>872", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((factory.getVersion().compareTo(OFVersion.OF_13)) >= 0) { java.util.List<org.projectfloodlight.openflow.protocol.OFHelloElem> he = new java.util.ArrayList<org.projectfloodlight.openflow.protocol.OFHelloElem>(); he.add(factory.buildHelloElemVersionbitmap().setBitmaps(ofBitmaps).build()); builder.setElements(he); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1185/buggy-version/src.main.java.net.floodlightcontroller.core.internal.OFChannelHandler.java", "BodyUseAPI": ["java.util.List<org.projectfloodlight.openflow.protocol.OFHelloElem>.add(factory.buildHelloElemVersionbitmap().setBitmaps(ofBitmaps).build())", "factory.buildHelloElemVersionbitmap().setBitmaps(ofBitmaps).build()", "org.projectfloodlight.openflow.protocol.OFFactory.buildHelloElemVersionbitmap()", "factory.buildHelloElemVersionbitmap().setBitmaps(java.util.List<org.projectfloodlight.openflow.types.U32>)"], "Fixed commit": "1b66bb2eaecbe0e0f1a033130170419666950695", "Url": "https://api.github.com/repos/Pengfei-Lu/floodlight", "Date": "2015-08-12T13:24:15Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editTextPassword.getText().toString()", "editTextEmail.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(email.isEmpty())) && (!(password.isEmpty()))) { signIn(email, password); }else { android.widget.Toast.makeText(getBaseContext(), \"You have to give an email and password!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3238/buggy-version/WaterApp.app.src.main.java.com.nasasurvivors.water.app.waterapp.controller.LoginActivity.java", "BodyUseAPI": ["com.nasasurvivors.water.app.waterapp.controller.LoginActivity.2.signIn(java.lang.String,java.lang.String)"], "Fixed commit": "4870fa70474d15fc1563620fc781d1aab5e9cd7c", "Url": "https://api.github.com/repos/TommasoPieroncini/NASASurvivors", "Date": "2017-04-02T19:40:40Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_facetCountCollector) != null) { collectTotalGrous(); _facetCountCollector = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/9020/buggy-version/bobo-browse.src.com.browseengine.bobo.sort.SortCollectorImpl.java", "BodyUseAPI": [], "Fixed commit": "5448c6c8f83a5ad29a4b8ea1fc4d1d3de4070959", "Url": "https://api.github.com/repos/sguo/bobo", "Date": "2011-08-29T17:21:15Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((i == ((origNumArgs) - 1)) && ((origNumArgs) != 0)) && (edu.columbia.cs.psl.phosphor.Configuration.IMPLICIT_TRACKING)) { remappedLocals[newIdx] = edu.columbia.cs.psl.phosphor.org.objectweb.asm.Type.getInternalName(edu.columbia.cs.psl.phosphor.struct.ControlTaintTagStack.class); newIdx++; nLocal++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5469/buggy-version/Phosphor.src.edu.columbia.cs.psl.phosphor.instrumenter.MethodArgReindexer.java", "BodyUseAPI": [], "Fixed commit": "70a591d6be237b38ee91bef660288118bce85671", "Url": "https://api.github.com/repos/gmu-swe/phosphor", "Date": "2015-10-03T00:54:27Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getEntity()) instanceof net.minecraft.entity.projectile.EntityThrowable) { if ((((net.minecraft.entity.projectile.EntityThrowable) (event.getEntity())).getThrower()) instanceof net.minecraft.entity.player.EntityPlayer) { net.minecraft.entity.player.EntityPlayer player = ((net.minecraft.entity.player.EntityPlayer) (((net.minecraft.entity.projectile.EntityThrowable) (event.getEntity())).getThrower())); if (player != null) { gerhard2202.culinaromancy.handler.PlayerDataHandler.PlayerData data = gerhard2202.culinaromancy.handler.PlayerDataHandler.get(player); if ((data.permanentBuffs.containsKey(IPermanentBuff.BuffType.SAVORY)) && ((data.permanentBuffs.get(IPermanentBuff.BuffType.SAVORY)) instanceof gerhard2202.culinaromancy.handler.BuffStrongboli)) { event.getEntity().setVelocity(((event.getEntity().motionX) * 2), ((event.getEntity().motionY) * 2), ((event.getEntity().motionZ) * 2)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6079/buggy-version/src.main.java.gerhard2202.culinaromancy.handler.EventHandler.java", "BodyUseAPI": ["((net.minecraft.entity.projectile.EntityThrowable) (event.getEntity())).getThrower()", "net.minecraftforge.event.entity.EntityJoinWorldEvent.getEntity()", "event.getEntity().setVelocity(((event.getEntity().motionX) * 2),((event.getEntity().motionY) * 2),((event.getEntity().motionZ) * 2))", "net.minecraftforge.event.entity.EntityJoinWorldEvent.getEntity()", "((net.minecraft.entity.projectile.EntityThrowable) (event.getEntity())).getThrower()", "net.minecraftforge.event.entity.EntityJoinWorldEvent.getEntity()", "net.minecraftforge.event.entity.EntityJoinWorldEvent.getEntity()", "net.minecraftforge.event.entity.EntityJoinWorldEvent.getEntity()", "net.minecraftforge.event.entity.EntityJoinWorldEvent.getEntity()"], "Fixed commit": "c49d9271d582915db36674c9acb0f3ddbb9818bf", "Url": "https://api.github.com/repos/gerhard2202/Culinaromancy", "Date": "2017-02-01T02:56:01Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IProject.getFolder(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (srcGenFolder.exists()) { folders.add(srcGenFolder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1685/buggy-version/org.xtext.example.mydsl.ui.src.org.xtext.example.mydsl.ui.windows.MenuCommandWindow.java", "BodyUseAPI": ["java.util.ArrayList<org.eclipse.core.resources.IFolder>.add(org.eclipse.core.resources.IFolder)"], "Fixed commit": "ce24767ee976ab420af919fab781e0502ae612b4", "Url": "https://api.github.com/repos/apribeiro/RSLingo4Privacy-Studio", "Date": "2016-02-11T10:53:35Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.potenzadomenico.hiddenroot.SuRequest.CanRunRootCommand(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (su) { done = com.potenzadomenico.hiddenroot.SuRequest.suIntoSi(); com.potenzadomenico.hiddenroot.SuRequest.CanRunRootCommand(\"si\"); }else { done = com.potenzadomenico.hiddenroot.SuRequest.CanRunRootCommand(\"si\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6306/buggy-version/app.src.main.java.com.potenzadomenico.hiddenroot.ExecutingApps.java", "BodyUseAPI": [], "Fixed commit": "6f911655806275288cd120b81f9d1d02cb5d2241", "Url": "https://api.github.com/repos/dome99/Hidden-Root", "Date": "2017-06-09T19:48:02Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/778/buggy-version/src.main.java.com.zendesk.maxwell.MaxwellFilter.java", "BodyUseAPI": [], "Fixed commit": "12d1d603609091aa6dff12e3fe521c10bd7c5434", "Url": "https://api.github.com/repos/copart-sujit/maxwell", "Date": "2017-07-15T05:32:31Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prefix.length()) > 0) { identifier.append(java.lang.Character.toLowerCase(prefix.charAt(0))); identifier.append(prefix.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1963/buggy-version/c-xml-client.src.main.java.com.webcohesion.enunciate.modules.c_client.XmlFunctionIdentifierMethod.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.Character.toLowerCase(char)", "java.lang.String.substring(int)", "java.lang.String.charAt(int)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "218d6434a80831f480b0b41fb63d5f382c78aae2", "Url": "https://api.github.com/repos/GomoreTec/enunciate", "Date": "2016-05-10T10:24:52Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sbar.smsnenado.SettingsActivity.getUserPhoneNumbers(com.sbar.smsnenado.EditUserPhoneNumbersActivity)", "mUserPhoneNumberEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((pnSet.size()) > 0) && (phoneNumberText.isEmpty())) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3621/buggy-version/src.com.sbar.smsnenado.EditUserPhoneNumbersActivity.java", "BodyUseAPI": [], "Fixed commit": "6460a075c80d937b00deadf7485d3f46f1369162", "Url": "https://api.github.com/repos/sbar/smsnenado", "Date": "2013-09-11T19:53:27Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dataSnapshot.child(\"beacons\").hasChild(instance))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8315/buggy-version/CalmStop.app.src.citizen.java.com.policestrategies.calm_stop.citizen.beacon_detection.BeaconDetectionActivity.java", "BodyUseAPI": [], "Fixed commit": "7f741ed2ee78dd63daaa4390aa72b93b7e61847c", "Url": "https://api.github.com/repos/Calm-Stop/android", "Date": "2017-04-07T20:38:08Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.Dbmeta_mgr().Ns__get_or_load(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ns_mgr.Ids_len()) == 0) ns_mgr = gplx.xowa.wikis.Xow_ns_mgr_.default_(lang.Case_mgr());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8049/buggy-version/400_xowa.src.gplx.xowa.wikis.Xoae_wiki_mgr.java", "BodyUseAPI": [], "Fixed commit": "6867cc23b49ff223b72e52d741dc99294dacedcf", "Url": "https://api.github.com/repos/gnosygnu/xowa", "Date": "2017-01-26T06:14:21Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((difference == 0) && (!(methodName.equals(c.methodName)))) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6158/buggy-version/autocompletion.SuggestionEngine.java", "BodyUseAPI": [], "Fixed commit": "3f9421ec294cf32fdd2b99249165923ad7f7fa59", "Url": "https://api.github.com/repos/cagdasgerede/assignments", "Date": "2017-03-06T15:05:13Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.shiro.SecurityUtils.getSubject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentUser.isAuthenticated()) { result = com.oracle.sp.common.util.Response.RESPONSE_RESULT_SUCCESS; errorMsg = \"Already login\"; }else { errorMsg = \"User info invalid\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1513/buggy-version/src.main.java.com.oracle.sp.security.controller.AccountHandler.java", "BodyUseAPI": [], "Fixed commit": "e51b4aaf7c4d8d8daa2fd17e367a73c078f05f78", "Url": "https://api.github.com/repos/alexwang318/sysmanage", "Date": "2017-12-20T09:40:56Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.gmail.halfik.btcprice.model.DataStorage.getStoredHigh(context).equals(\"-\")) { alarmManager.setInexactRepeating(AlarmManager.RTC_WAKEUP, android.os.SystemClock.elapsedRealtime(), (2 * 1000), pi); }else { alarmManager.setInexactRepeating(AlarmManager.RTC_WAKEUP, android.os.SystemClock.elapsedRealtime(), com.gmail.halfik.btcprice.service.PollService.getInterval(context), pi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3064/buggy-version/app.src.main.java.com.gmail.halfik.btcprice.service.PollService.java", "BodyUseAPI": ["com.gmail.halfik.btcprice.service.PollService.getInterval(android.content.Context)", "android.app.AlarmManager.setInexactRepeating(AlarmManager.RTC_WAKEUP,android.os.SystemClock.elapsedRealtime(),long,android.app.PendingIntent)"], "Fixed commit": "94bf731952c7b7fc558a1965886058828b9ce2d8", "Url": "https://api.github.com/repos/halfik/com.gmail.halfik.btcprice.widget", "Date": "2016-02-14T12:45:14Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { sb.deleteCharAt(((sb.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4513/buggy-version/ingest.util.src.main.java.org.renci.databridge.contrib.ingest.utils.IngestUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)", "java.lang.StringBuilder.length()"], "Fixed commit": "82b4e91059db71466718f08ab7e26d3b81c8c1c3", "Url": "https://api.github.com/repos/HowardLander/DataBridge-contrib", "Date": "2016-06-08T20:02:12Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((theArray.length) == 0) { return new java.lang.String(\"\"); }else { for (int i = 0; i < (theArray.length); i++) { if (i > 0) { sb.append(theSeparator); } sb.append(theArray[i]); } if (stop) { try { return org.renci.databridge.contrib.ingest.clinicaltrials.IngestUtils.removeStopWords(sb.toString()); } catch (java.lang.Exception e) { logger.log(java.util.logging.Level.SEVERE, ((((\"Caught in format processing \" + \":\") + (sb.toString())) + \": \") + (e.getMessage())), e); return new java.lang.String(\"\"); } }else { return sb.toString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4513/buggy-version/ingest.clinicaltrials.src.main.java.org.renci.databridge.contrib.ingest.clinicaltrials.ClinicalTrialJson.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "82b4e91059db71466718f08ab7e26d3b81c8c1c3", "Url": "https://api.github.com/repos/HowardLander/DataBridge-contrib", "Date": "2016-06-08T20:02:12Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((versionB.getNodes()) != null) && ((versionB.getNodes().size()) > currentIndex)) { return (org.fujaba.graphengine.graph.Graph.hasIsomorphicSubGraph(graph, subGraph, (currentIndex + 1))) || (org.fujaba.graphengine.graph.Graph.hasIsomorphicSubGraph(versionB, subGraph, currentIndex)); }else { return org.fujaba.graphengine.graph.Graph.hasIsomorphicSubGraph(graph, subGraph, (currentIndex + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7895/buggy-version/src.main.java.org.fujaba.graphengine.graph.Graph.java", "BodyUseAPI": ["org.fujaba.graphengine.graph.Graph.hasIsomorphicSubGraph(org.fujaba.graphengine.graph.Graph,org.fujaba.graphengine.graph.Graph,int)", "org.fujaba.graphengine.graph.Graph.hasIsomorphicSubGraph(org.fujaba.graphengine.graph.Graph,org.fujaba.graphengine.graph.Graph,int)", "org.fujaba.graphengine.graph.Graph.hasIsomorphicSubGraph(org.fujaba.graphengine.graph.Graph,org.fujaba.graphengine.graph.Graph,int)"], "Fixed commit": "aa6b5d1bb441eed99d2674df6b301e73bdc51f2e", "Url": "https://api.github.com/repos/fujaba/org.fujaba.graphengine", "Date": "2016-11-27T19:54:52Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((versionB.getNodes()) != null) && ((versionB.getNodes().size()) == currentIndex)) { return ((graph.getNodes().size()) == (subGraph.getNodes().size())) && ((org.fujaba.graphengine.graph.Graph.advancedIsomorphicSubGraphCheck(graph, subGraph)) != null); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7895/buggy-version/src.main.java.org.fujaba.graphengine.graph.Graph.java", "BodyUseAPI": [], "Fixed commit": "aa6b5d1bb441eed99d2674df6b301e73bdc51f2e", "Url": "https://api.github.com/repos/fujaba/org.fujaba.graphengine", "Date": "2016-11-27T19:54:52Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isNaN) good++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/105/buggy-version/h2o-core.src.main.java.hex.Model.java", "BodyUseAPI": [], "Fixed commit": "25e52eaa985b52e9b96d6bbb0c447524a60b2e57", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-03-16T20:11:21Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isNaN) good++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/105/buggy-version/h2o-core.src.main.java.hex.Model.java", "BodyUseAPI": [], "Fixed commit": "25e52eaa985b52e9b96d6bbb0c447524a60b2e57", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-03-16T20:11:21Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6210/buggy-version/core.src.main.java.hudson.util.XStream2.java", "BodyUseAPI": [], "Fixed commit": "50ecfb420f03b63de9f57689685eb691a10aa680", "Url": "https://api.github.com/repos/oleg-nenashev/jenkins", "Date": "2016-08-19T21:36:17Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultImage) != (-1)) { imageView.setImageResource(defaultImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/49/buggy-version/library.src.at.diamonddogs.service.processor.ImageLoader.java", "BodyUseAPI": [], "Fixed commit": "9f57eceb63620d02ca4f03b204a6319392f1157a", "Url": "https://api.github.com/repos/SphericalElephant/android-http", "Date": "2014-09-04T09:15:15Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((RankClus.k) > (RankClus.s.c)) { java.lang.System.out.println(\"\\nERROR: Number of clusters cannot exceed target objects\\n\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7579/buggy-version/src.RankClus.java", "BodyUseAPI": [], "Fixed commit": "32536335c702f757adfaf0fc39878fa2f52d048e", "Url": "https://api.github.com/repos/pksunkara/rankclus", "Date": "2012-05-08T04:17:24Z"},
{"Line": "=>1866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_perso.get_isTalkingWith()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2618/buggy-version/src.game.GameClient.java", "BodyUseAPI": [], "Fixed commit": "35ca2abdd1fc5d833e04b646dde6dfdecf8215d3", "Url": "https://api.github.com/repos/F-Locos/Ancestra-Evolutive", "Date": "2014-03-30T16:15:30Z"},
{"Line": "=>1869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["_perso.get_curCarte().getNPC(_perso.get_isTalkingWith())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (npc == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2618/buggy-version/src.game.GameClient.java", "BodyUseAPI": [], "Fixed commit": "35ca2abdd1fc5d833e04b646dde6dfdecf8215d3", "Url": "https://api.github.com/repos/F-Locos/Ancestra-Evolutive", "Date": "2014-03-30T16:15:30Z"},
{"Line": "=>1833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (RBrrembankmentsexist) { if (checkRBrrembankments(status, result, hexsides)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8061/buggy-version/src.VASL.LOS.Map.Map.java", "BodyUseAPI": [], "Fixed commit": "4429abb07aabfa93f08d2df213b1fa6c9a5675ce", "Url": "https://api.github.com/repos/vasl-developers/vasl", "Date": "2017-08-29T14:49:42Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin.InnerShellExecutor.getMajorAndMinorNumber(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != majorMinorNumber) { java.lang.String[] mmn = majorMinorNumber.split(\":\"); this.aliasMap.put(majorMinorNumber, aliasName); list.add(new org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.fpga.FpgaResourceAllocator.FpgaDevice(getFpgaType(), java.lang.Integer.parseInt(mmn[0]), java.lang.Integer.parseInt(mmn[1]), null, fields[0], aliasName, fields[1], fields[2], fields[3])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4602/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-nodemanager.src.main.java.org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "17c07c5859fdc3678f9c286033f38aa4cffe2620", "Url": "https://api.github.com/repos/tangzhankun/hadoop", "Date": "2017-11-22T12:40:36Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((level.getTiles().length) >= p3x) && (p3x >= 0)) && ((level.getTiles()[p3x].length) >= p3y)) && (p3y >= 0)) tile3 = level.getTiles()[p3x][p3y];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7848/buggy-version/roomforchange.roomforchange.src.com.sturdyhelmetgames.roomforchange.entity.Entity.java", "BodyUseAPI": ["com.sturdyhelmetgames.roomforchange.level.Level.getTiles()"], "Fixed commit": "09f8bdcb5dfc2a80dbb2da315101c03cccf9b140", "Url": "https://api.github.com/repos/antionio/game-off-2013", "Date": "2013-11-30T17:38:18Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.floor(bounds.y)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((((level.getTiles().length) >= p1x) && (p1x >= 0)) && ((level.getTiles()[p1x].length) >= p1y)) && (p1y >= 0)) tile1 = level.getTiles()[p1x][p1y];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7848/buggy-version/roomforchange.roomforchange.src.com.sturdyhelmetgames.roomforchange.entity.Entity.java", "BodyUseAPI": ["com.sturdyhelmetgames.roomforchange.level.Level.getTiles()"], "Fixed commit": "09f8bdcb5dfc2a80dbb2da315101c03cccf9b140", "Url": "https://api.github.com/repos/antionio/game-off-2013", "Date": "2013-11-30T17:38:18Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((level.getTiles().length) >= p4x) && (p4x >= 0)) && ((level.getTiles()[p4x].length) >= p4y)) && (p4y >= 0)) tile4 = level.getTiles()[p4x][p4y];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7848/buggy-version/roomforchange.roomforchange.src.com.sturdyhelmetgames.roomforchange.entity.Entity.java", "BodyUseAPI": ["com.sturdyhelmetgames.roomforchange.level.Level.getTiles()"], "Fixed commit": "09f8bdcb5dfc2a80dbb2da315101c03cccf9b140", "Url": "https://api.github.com/repos/antionio/game-off-2013", "Date": "2013-11-30T17:38:18Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.floor(bounds.y)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((((level.getTiles().length) >= p2x) && (p1x >= 0)) && ((level.getTiles()[p2x].length) >= p2y)) && (p2y >= 0)) tile2 = level.getTiles()[p2x][p2y];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7848/buggy-version/roomforchange.roomforchange.src.com.sturdyhelmetgames.roomforchange.entity.Entity.java", "BodyUseAPI": ["com.sturdyhelmetgames.roomforchange.level.Level.getTiles()"], "Fixed commit": "09f8bdcb5dfc2a80dbb2da315101c03cccf9b140", "Url": "https://api.github.com/repos/antionio/game-off-2013", "Date": "2013-11-30T17:38:18Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fc.matches(\"[A-Z]\")) { actualTitle = title.replaceFirst(fc, fc.toUpperCase()); }else { actualTitle = title; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6031/buggy-version/snapshots.cloud9-contrib.src.main.edu.umd.cloud9.collection.wikipedia.ExtractRedirect.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "33adced2035ea9cd2d33098223a0f18fc054118f", "Url": "https://api.github.com/repos/antoine-tran/maven-repo", "Date": "2015-06-29T10:52:39Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((app.config.fontArabic) == (com.grafian.bquran.prefs.Config.FONT_HAFS)) { arabic.setText(((\"((\" + (intToArabic(mark.aya))) + \")\")); }else { arabic.setText(((\"\\ufd3f\" + (intToArabic(mark.aya))) + \"\\ufd3e\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8263/buggy-version/src.com.grafian.bquran.QuranFragment.java", "BodyUseAPI": [], "Fixed commit": "2776a28fb77cc0fa0a00a64153fcd91a274ee7cb", "Url": "https://api.github.com/repos/arkusuma/quran-android", "Date": "2014-05-26T07:42:56Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cell.isLive())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6144/buggy-version/plugin.src.main.java.com.stratio.cassandra.lucene.service.RegularCellsMapper.java", "BodyUseAPI": [], "Fixed commit": "06abdd9b5a6d9ee20daf545b825361869305654f", "Url": "https://api.github.com/repos/Stratio/cassandra-lucene-index", "Date": "2016-02-16T21:04:14Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.di.trans.TransMeta.findDatabase(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (databaseMeta != null) { dbName = databaseMeta.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/164/buggy-version/ui.src.org.pentaho.di.ui.spoon.delegates.SpoonTreeDelegate.java", "BodyUseAPI": ["org.pentaho.di.core.database.DatabaseMeta.getName()"], "Fixed commit": "1952eb0dc213854a0167e5636f7098cb56f11fc8", "Url": "https://api.github.com/repos/pentaho-skarmali/pentaho-kettle", "Date": "2014-03-31T19:06:37Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.tracecompass.lttng2.kernel.ui.MemoryUsageViewer.getXAxis(long,long,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((xvalues.length) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5583/buggy-version/lttng.org.eclipse.tracecompass.lttng2.kernel.ui.src.org.eclipse.tracecompass.lttng2.kernel.ui.MemoryUsageViewer.java", "BodyUseAPI": [], "Fixed commit": "fdc72c8d77d3fedefb756f52af6105a5ec40d516", "Url": "https://api.github.com/repos/inf4990-equipe01/tracecompass", "Date": "2016-01-30T01:43:40Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.HistoryGraphXMLReader.getString(org.w3c.dom.Element)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (revisions.containsKey(parentCommitID)) { parent = revisions.get(parentCommitID); }else { parent = new common.Revision(parentCommitID, new java.util.HashMap<common.Revision, java.util.List<common.DiffFile>>(), common.Revision.Compilable.UNKNOWN, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4637/buggy-version/src.util.HistoryGraphXMLReader.java", "BodyUseAPI": ["java.util.Map<java.lang.String, common.Revision>.get(java.lang.String)"], "Fixed commit": "a9fd45eaa638dffee08b758dcc263046a4cf26f2", "Url": "https://api.github.com/repos/rsukkerd/Histaroach", "Date": "2012-04-23T19:48:02Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(shell.isDisposed())) shell.redraw();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7136/buggy-version/src.de.proskor.graph.util.Main.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Shell.redraw()"], "Fixed commit": "525e060db06f3802c023b133c7b5b81ad558cdd8", "Url": "https://api.github.com/repos/proskor/graph", "Date": "2013-02-22T16:21:32Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(context, Manifest.permission.WRITE_CALENDAR)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2072/buggy-version/myExpenses.src.main.java.org.totschnig.myexpenses.util.PlanInfoCursorWrapper.java", "BodyUseAPI": [], "Fixed commit": "6294c234025590b95bbdc2af9ca7b0a1d02e58fc", "Url": "https://api.github.com/repos/mtotschnig/MyExpenses", "Date": "2016-06-21T21:43:08Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(oc.isOrbotInstalled())) { oc.promptToInstall(this); }else if (!(oc.isOrbotRunning())) { oc.requestOrbotStart(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6333/buggy-version/app.src.main.java.org.thoughtcrime.securesms.RoutingActivity.java", "BodyUseAPI": ["info.guardianproject.onionkit.ui.OrbotHelper.isOrbotRunning()", "info.guardianproject.onionkit.ui.OrbotHelper.promptToInstall(org.thoughtcrime.securesms.RoutingActivity)", "info.guardianproject.onionkit.ui.OrbotHelper.requestOrbotStart(org.thoughtcrime.securesms.RoutingActivity)"], "Fixed commit": "eb4c84793d7a85b3f11ce92dee559b858266284e", "Url": "https://api.github.com/repos/unixninja92/Div-III-Client", "Date": "2015-03-23T13:12:19Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(view.getViewClassName().equals(description.getComponentClassName()))) { final org.jboss.as.ee.component.EEModuleClassDescription viewClass = applicationClasses.getClassByName(view.getViewClassName()); if (viewClass != null) { final org.jboss.as.ee.metadata.ClassAnnotationInformation<javax.ejb.Asynchronous, java.lang.Boolean> annotations = viewClass.getAnnotationInformation(javax.ejb.Asynchronous.class); if (annotations != null) { if (!(annotations.getClassLevelAnnotations().isEmpty())) { description.addAsynchronousView(view.getViewClassName()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2145/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.deployment.processors.merging.AsynchronousMergingProcessor.java", "BodyUseAPI": ["org.jboss.as.ee.component.EEApplicationClasses.getClassByName(view.getViewClassName())", "org.jboss.as.ejb3.component.session.SessionBeanComponentDescription.addAsynchronousView(view.getViewClassName())", "org.jboss.as.ee.component.ViewDescription.getViewClassName()", "org.jboss.as.ee.component.ViewDescription.getViewClassName()"], "Fixed commit": "f575957779ce9c24b47513ce59c0aa2c261a6f39", "Url": "https://api.github.com/repos/emuckenhuber/wildfly", "Date": "2011-10-04T03:02:44Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tg.getCollaborative()) { list = br.unifor.iadapter.threadGroup.workload.WorkLoadThreadGroup.returnListAlgorithmGeneticWorkLoadsForAllNewGeneration(tg); }else { list = br.unifor.iadapter.threadGroup.workload.WorkLoadThreadGroup.returnListAlgorithmGeneticWorkLoadsForNewGeneration(tg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/9186/buggy-version/IAdapter.src.main.java.br.unifor.iadapter.threadGroup.workload.WorkLoadThreadGroup.java", "BodyUseAPI": ["br.unifor.iadapter.threadGroup.workload.WorkLoadThreadGroup.returnListAlgorithmGeneticWorkLoadsForNewGeneration(br.unifor.iadapter.threadGroup.workload.WorkLoadThreadGroup)", "br.unifor.iadapter.threadGroup.workload.WorkLoadThreadGroup.returnListAlgorithmGeneticWorkLoadsForAllNewGeneration(br.unifor.iadapter.threadGroup.workload.WorkLoadThreadGroup)"], "Fixed commit": "5ba02917eb819566bf04b5bb9e2e28de8e4c3b9c", "Url": "https://api.github.com/repos/naubergois/newiadapter", "Date": "2015-05-21T03:11:16Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.hasPath(org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL))) { throw new org.apache.drill.exec.exception.DrillbitStartupException(java.lang.String.format(\"BOOT option '%s' is missing in config.\", org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1992/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.rpc.user.security.UserAuthenticatorFactory.java", "BodyUseAPI": [], "Fixed commit": "b0cbbbd9312b67352c9117cd5e15f727faaa2cfb", "Url": "https://api.github.com/repos/sohami/drill", "Date": "2017-02-28T07:28:14Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list(org.lodder.subtools.sublibrary.util.FilenameExtensionFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (contents == null) contents = new java.lang.String[]{ };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1042/buggy-version/MultiSubDownloader.src.main.java.org.lodder.subtools.multisubdownloader.actions.FileListAction.java", "BodyUseAPI": [], "Fixed commit": "88ac5960bdcc47a5ca3ce26d7516e4568aabe905", "Url": "https://api.github.com/repos/phdelodder/SubTools", "Date": "2015-02-17T07:47:11Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fieldValue == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6764/buggy-version/dynamic-values.src.main.java.org.dynamicvalues.Type.java", "BodyUseAPI": [], "Fixed commit": "772899fd7a37cf44c03149f9b8de69dc7c35d665", "Url": "https://api.github.com/repos/fabiosimeoni/dynamic-values", "Date": "2013-08-14T09:56:13Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(con.contains(\"chat.format.group\"))) { preconfig.put(\"chat.format.group.somegroup.prefix\", \"&2[somegroup]&f\"); preconfig.put(\"chat.format.group.somegroup.suffix\", \"&7\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7646/buggy-version/src.tv.mineinthebox.essentials.configurations.ChatConfig.java", "BodyUseAPI": [], "Fixed commit": "a5c0a45d542c2d3c942276266bd740778117879c", "Url": "https://api.github.com/repos/xEssentials/xEssentials-deprecated-bukkit", "Date": "2015-03-29T14:15:21Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tempKey.equals(\"\"))) { sp.edit().putString(com.ofcat.whereboardgame.report.issue.IssueReportActivity.KEY_SP_ISSUE_MESSAGE, tempKey).apply(); }else { tempKey = sp.getString(com.ofcat.whereboardgame.report.issue.IssueReportActivity.KEY_SP_ISSUE_MESSAGE, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4950/buggy-version/app.src.main.java.com.ofcat.whereboardgame.report.issue.IssueReportActivity.java", "BodyUseAPI": ["sp.edit().putString(java.lang.String,java.lang.String)", "sp.edit().putString(com.ofcat.whereboardgame.report.issue.IssueReportActivity.KEY_SP_ISSUE_MESSAGE, tempKey).apply()"], "Fixed commit": "04c0b20d469f993ef067d0dc3e90254f2249707b", "Url": "https://api.github.com/repos/orangefallers/WhereBoardGame", "Date": "2017-08-17T17:54:46Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(activeTriggers.contains(rule))) activeTriggers.add(rule);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1313/buggy-version/src.no.runsafe.dog.cortex.language.ChatResponder.java", "BodyUseAPI": ["java.util.ArrayList<no.runsafe.framework.api.ai.IChatResponseTrigger>.add(no.runsafe.framework.api.ai.IChatResponseTrigger)"], "Fixed commit": "9aed2e31371c1b9438d072e7450fac3a319ddca0", "Url": "https://api.github.com/repos/Runsafe/AI-DOG", "Date": "2013-07-12T21:43:08Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pos > 0) && (pos < (com.watabou.pixeldungeon.actors.Actor.chars.length))) { return com.watabou.pixeldungeon.actors.Actor.chars[pos]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4761/buggy-version/src.com.watabou.pixeldungeon.actors.Actor.java", "BodyUseAPI": [], "Fixed commit": "f0d7f29f40bb72495f6a78c7f215b557cb62dbaa", "Url": "https://api.github.com/repos/NYRDS/pixel-dungeon-remix", "Date": "2015-03-21T14:17:39Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diff > 0) return 1; else if (diff == 0) return 0; else return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7490/buggy-version/ThreeDGraphViewer.src.viewer.DepthComparator.java", "BodyUseAPI": [], "Fixed commit": "f6b0fea183371e5e4302992f1aea87db1c0219cf", "Url": "https://api.github.com/repos/FumihikoKouno/Tools", "Date": "2014-11-22T08:31:37Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (integrationType.isDirectory()) { for (java.io.File integrationFolder : integrationType.listFiles()) { files.add(integrationFolder.getAbsolutePath()); } }else { com.opsgenie.tools.backup.BackupUtils.logger.warn(((integrationType.getAbsolutePath()) + \" is invalid. There should be folders only in this path.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2864/buggy-version/src.main.java.com.opsgenie.tools.backup.BackupUtils.java", "BodyUseAPI": ["java.io.File.listFiles()", "java.io.File.getAbsolutePath()", "org.apache.logging.log4j.Logger.warn(java.lang.String)"], "Fixed commit": "1d7704c846896fedbaef5346759f6b983980bbd1", "Url": "https://api.github.com/repos/opsgenie/opsgenie-configuration-backup", "Date": "2017-02-17T13:52:40Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((systemSelectId) != null) { for (java.lang.Long hostSystemId : systemSelectId) { com.keybox.manage.db.ProfileSystemsDB.addSystemToProfile(profile.getId(), hostSystemId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3542/buggy-version/src.main.java.com.keybox.manage.action.ProfileSystemsAction.java", "BodyUseAPI": [], "Fixed commit": "0809375a0512751f10eed8ecf781cd6328de5955", "Url": "https://api.github.com/repos/skavanagh/KeyBox", "Date": "2013-02-23T16:13:51Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rb.getVisual().getFilename()) != null) drawMeshSTL(rb.getVisual(), rb.getPose());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3298/buggy-version/src.com.dimarobotics.simulator.view.lwjgl.OpenGLDrawer.java", "BodyUseAPI": ["com.dimarobotics.simulator.RigidBody.getPose()", "com.dimarobotics.simulator.view.lwjgl.OpenGLDrawer.drawMeshSTL(rb.getVisual(),rb.getPose())", "com.dimarobotics.simulator.RigidBody.getVisual()"], "Fixed commit": "e67dbcb0736af50beb9fa6c6c43158cc7ef1532b", "Url": "https://api.github.com/repos/DimaSim/Simulator", "Date": "2016-04-21T11:44:34Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1265/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "b40c054533c35a38f5858f63120799e625261fa3", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.config.getRequest().getCookies()) != null) { for (final javax.servlet.http.Cookie cookie : this.config.getRequest().getCookies()) { if (this.config.getSessionName().equals(cookie.getName())) { sessionCookie = cookie; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1122/buggy-version/src.main.java.com.ctlok.web.session.StatelessSession.java", "BodyUseAPI": ["this.config.getRequest().getCookies()", "this.config.getSessionName().equals(cookie.getName())", "com.ctlok.web.session.StatelessSessionConfig.getRequest()", "com.ctlok.web.session.StatelessSessionConfig.getSessionName()"], "Fixed commit": "1ee99339f6d6b66a0cded49197b1fc5607c1c9ce", "Url": "https://api.github.com/repos/lawrence0819/java-stateless-http-session", "Date": "2014-02-07T04:40:00Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (me.beastman3226.bc.BusinessCore.Information.managerFile.exists()) { me.beastman3226.bc.BusinessCore.Information.managerYml.save(me.beastman3226.bc.BusinessCore.Information.managerFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4082/buggy-version/src.main.java.me.beastman3226.bc.BusinessCore.java", "BodyUseAPI": ["org.bukkit.configuration.file.FileConfiguration.save(java.io.File)"], "Fixed commit": "aa82d6d24791340e76f88456139fd46024bd183c", "Url": "https://api.github.com/repos/beastman3226/BusinessCore", "Date": "2014-02-26T12:25:22Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (me.beastman3226.bc.BusinessCore.Information.managerFile.exists()) { me.beastman3226.bc.BusinessCore.Information.managerYml.load(me.beastman3226.bc.BusinessCore.Information.managerFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4082/buggy-version/src.main.java.me.beastman3226.bc.BusinessCore.java", "BodyUseAPI": ["org.bukkit.configuration.file.FileConfiguration.load(java.io.File)"], "Fixed commit": "aa82d6d24791340e76f88456139fd46024bd183c", "Url": "https://api.github.com/repos/beastman3226/BusinessCore", "Date": "2014-02-26T12:25:22Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rdbtnPingPongSimulation.isSelected()) { simulateCallBack(1, 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6435/buggy-version/CupCarbon.src.cupcarbon.WsnSimulationWindow.java", "BodyUseAPI": [], "Fixed commit": "e8342a94a525db674d028447ce395bc27243cd7d", "Url": "https://api.github.com/repos/bounceur/CupCarbon", "Date": "2014-04-07T15:53:48Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == other) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8723/buggy-version/components.patient-access-rules.api.src.main.java.org.phenotips.data.permissions.internal.DefaultOwner.java", "BodyUseAPI": [], "Fixed commit": "d76fcbc9f8eea9779185ace72111a575c6cc7b9a", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2017-09-28T18:35:15Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.molgenis.data.RepositoryCollection.getRepositoryByEntityName(entityMetaData.getSimpleName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileEntityRepository == null) { fileEntityRepository = source.getRepositoryByEntityName(entityMetaData.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4734/buggy-version/molgenis-data-mysql.src.main.java.org.molgenis.data.importer.EmxImportWriter.java", "BodyUseAPI": [], "Fixed commit": "ab4df1743a3b3fde943f679af81869ff3ef105eb", "Url": "https://api.github.com/repos/jjettenn/molgenis", "Date": "2014-11-14T13:32:07Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["transform.getNumShards()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (numShards > 0) { dataSink.setParallelism(numShards); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/272/buggy-version/runners.flink.src.main.java.com.dataartisans.flink.dataflow.translation.FlinkTransformTranslators.java", "BodyUseAPI": ["org.apache.flink.api.java.operators.DataSink<T>.setParallelism(int)"], "Fixed commit": "af48a2aa4fe0a031062128a16d7955078ef016e2", "Url": "https://api.github.com/repos/apache/beam", "Date": "2015-02-19T14:03:55Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jaudiotagger.tag.Tag.getFirst(FieldKey.YEAR)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(year))) { try { track.setYear(java.lang.Integer.valueOf(year)); } catch (java.lang.NumberFormatException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5368/buggy-version/music-core.src.main.java.com.sismics.music.core.service.CollectionService.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "com.sismics.music.core.model.jpa.Track.setYear(java.lang.Integer)"], "Fixed commit": "2b73da0a483acc10db3b19fd03af4ee5016bed5b", "Url": "https://api.github.com/repos/sismics/music", "Date": "2014-01-29T23:05:36Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getNextSibling()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (elseStmt == null) { isTerminated = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/9063/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck.java", "BodyUseAPI": [], "Fixed commit": "9043227408fd265d133339f33e1db669bbfce637", "Url": "https://api.github.com/repos/MEZk/checkstyle", "Date": "2015-07-18T09:10:35Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tileX < 0) tileX = 0; else if (tileX >= (me.WIDTH)) tileX = (me.WIDTH) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4673/buggy-version/src.fart.dungeoncrawler.mapeditor.MEPanel.java", "BodyUseAPI": [], "Fixed commit": "e2cb22e35d954149e8826e26b666710fa754adaf", "Url": "https://api.github.com/repos/propra13-orga/gruppe72", "Date": "2013-07-09T14:59:19Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphsVLayout) != null) { graphsVLayout.addMember(graphView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6870/buggy-version/modules.enterprise.gui.coregui.src.main.java.org.rhq.enterprise.gui.coregui.client.inventory.groups.detail.D3GroupGraphListView.java", "BodyUseAPI": [], "Fixed commit": "c627c8860626eb7bfbcf2f314191ac92f02bc472", "Url": "https://api.github.com/repos/Jiri-Kremser/RHQ", "Date": "2013-03-18T19:24:14Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((layers.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4006/buggy-version/src.de.dakror.gamesetup.GameFrame.java", "BodyUseAPI": [], "Fixed commit": "ccf3aba18a254d81d2e47aa93d784932a5501762", "Url": "https://api.github.com/repos/Dakror/GameSetup", "Date": "2013-11-30T11:43:37Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (platform == null) return \"Platform - Not Defined\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/705/buggy-version/plotter.src.main.java.org.md2k.plotter.PrefsFragmentDataSources.java", "BodyUseAPI": [], "Fixed commit": "1081b4689c0849e881fa47c5f2984cf353065b99", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-Plotter", "Date": "2016-02-11T05:17:36Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.volterra.Engine.Tribe.getX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (x <= 0) xd = random.nextInt(2); else xd = (random.nextInt(3)) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4138/buggy-version/src.com.volterra.Engine.Simulation.java", "BodyUseAPI": [], "Fixed commit": "d3b53f1d833696b89ec76af8a4f424d48a926a48", "Url": "https://api.github.com/repos/Koroeskohr/volterra", "Date": "2016-04-28T22:17:08Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (erroredMods.add(mod)) { ElecCore.logger.error(((\"Mod: \" + mod) + \" does not have a module controller!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3074/buggy-version/src.main.java.elec332.core.module.ModuleHandler.java", "BodyUseAPI": ["ElecCore.logger.error(java.lang.String)"], "Fixed commit": "53c3664011f2a94f9f6044f5744294c354078f19", "Url": "https://api.github.com/repos/Elecs-Mods/ElecCore", "Date": "2016-10-08T15:49:45Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!exist) { players.add(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8403/buggy-version/src.com.company.Main.java", "BodyUseAPI": [], "Fixed commit": "71d65613519a44881b318e87fa9eba62e2630166", "Url": "https://api.github.com/repos/21las21/TrollInvasion", "Date": "2017-11-01T13:02:53Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (read.startsWith(\"Ready\")) { name = read.substring(6); for (com.company.Player player1 : players) { if (player1.Name.equals(name)) { player = player1; exist = true; break; } } if (exist && ((player.Ready) == false)) { player.Ready = true; readyPlayers++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8403/buggy-version/src.com.company.Main.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "71d65613519a44881b318e87fa9eba62e2630166", "Url": "https://api.github.com/repos/21las21/TrollInvasion", "Date": "2017-11-01T13:02:53Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((load.getMixName()) != null) { if (((load.getMixName().length()) > 0) && (!(mixes.contains(load.getMixName())))) { radlab.rain.load.LoadManager.logger.info((\"Invalid load profile. mixname not in track's mixmap. Profile details: \" + (load.toString()))); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4070/buggy-version/src.radlab.rain.load.LoadManager.java", "BodyUseAPI": ["org.slf4j.Logger.info((\"Invalid load profile. mixname not in track's mixmap. Profile details: \" + (load.toString())))", "java.util.Set<java.lang.String>.contains(load.getMixName())", "radlab.rain.load.LoadDefinition.toString()", "load.getMixName().length()", "radlab.rain.load.LoadDefinition.getMixName()", "radlab.rain.load.LoadDefinition.getMixName()"], "Fixed commit": "ee3036f2e2f4169e04938d58ce1ea7a13c0c7e56", "Url": "https://api.github.com/repos/jacksonicson/rain", "Date": "2013-04-06T14:16:40Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grabFiles(false)) != null) { statusManager.advanceHWMTimestamp(facility, timestamp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3275/buggy-version/paul.src.main.java.au.edu.uq.cmm.paul.grabber.WorkEntry.java", "BodyUseAPI": [], "Fixed commit": "5c960f967007ff1cd3cd26d996bd94f9f2503d43", "Url": "https://api.github.com/repos/UQ-CMM-Mirage/CMM-data-grabber", "Date": "2013-05-10T05:26:13Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backgroundTask) != null) { backgroundTask.cancel(mayInterruptIfRunning); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6863/buggy-version/TumCampusApp.src.de.tum.in.tumcampusapp.tumonline.TUMOnlineRequest.java", "BodyUseAPI": [], "Fixed commit": "f6516329ec423681ff1e014c14fe9a58c4783815", "Url": "https://api.github.com/repos/TCA-Team/TumCampusApp", "Date": "2013-05-14T22:44:58Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eoc.studio.voicecard.handwriting.HandWritingView.isClearMode) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2483/buggy-version/src.eoc.studio.voicecard.handwriting.HandWritingView.java", "BodyUseAPI": [], "Fixed commit": "e279a884855e06b7bc327f4efa282840c93e6cff", "Url": "https://api.github.com/repos/eoc-studio/VoiceCard", "Date": "2014-02-07T16:42:18Z"},
{"Line": "=>1081", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.REMOTE_AS()) != null) { batfish.representation.cisco.BgpPeerGroup pg = proc.getPeerGroup(ip.toString()); pg.setRemoteAS(batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.toInteger(ctx.asnum)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5520/buggy-version/projects.batfish.src.batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.java", "BodyUseAPI": ["batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.toInteger(ctx.asnum)", "batfish.representation.cisco.BgpPeerGroup.setRemoteAS(int)"], "Fixed commit": "7ee41537d7bfcba5f0052d0c20fd601563a915ab", "Url": "https://api.github.com/repos/arifogel/batfish", "Date": "2014-09-09T23:52:07Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sharkfw.asip.engine.PeerSemanticTag.getAddresses()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((addresses.length) > 0) { for (java.lang.String addr : addresses) { addrArray.put(addr); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4474/buggy-version/src.main.java.net.sharkfw.asip.engine.ASIPSerializer.java", "BodyUseAPI": [], "Fixed commit": "62773879a1de76c7535f13294271c89855c3e159", "Url": "https://api.github.com/repos/SharedKnowledge/SharkFW", "Date": "2016-08-23T12:29:41Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(identifier.startsWith(\"http\"))) { if (com.eduworks.ontology.Ontology.defaultURI.endsWith(\"/\")) { identifier = (com.eduworks.ontology.Ontology.defaultURI) + identifier; }else { identifier = ((com.eduworks.ontology.Ontology.defaultURI) + \"/\") + identifier; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5933/buggy-version/eduworks-common.src.java.com.eduworks.ontology.Ontology.java", "BodyUseAPI": [], "Fixed commit": "afa64cc52b4b79d381487f7bf866c65f880f32b6", "Url": "https://api.github.com/repos/Eduworks/eduworks-common", "Date": "2014-12-19T19:22:15Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o.getURI().endsWith(\"#\")) { tempUri = (o.getURI()) + classId; }else { tempUri = ((o.getURI()) + \"#\") + classId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5933/buggy-version/eduworks-common.src.java.com.eduworks.ontology.Ontology.java", "BodyUseAPI": ["com.hp.hpl.jena.ontology.Ontology.getURI()", "com.hp.hpl.jena.ontology.Ontology.getURI()"], "Fixed commit": "afa64cc52b4b79d381487f7bf866c65f880f32b6", "Url": "https://api.github.com/repos/Eduworks/eduworks-common", "Date": "2014-12-19T19:22:15Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5299/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "585090363a084260b27a377eee5ef1780291339e", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (peerProperties != null) { android.util.Log.w(org.thaliproject.p2p.btconnectorlib.ConnectionManager.TAG, (\"onConnectionTimeout: \" + (peerProperties.toString()))); }else { android.util.Log.w(org.thaliproject.p2p.btconnectorlib.ConnectionManager.TAG, \"onConnectionTimeout\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/891/buggy-version/BtConnectorLib.btconnectorlib2.src.main.java.org.thaliproject.p2p.btconnectorlib.ConnectionManager.java", "BodyUseAPI": ["org.thaliproject.p2p.btconnectorlib.PeerProperties.toString()", "android.util.Log.w(java.lang.String,(\"onConnectionTimeout: \" + (peerProperties.toString())))"], "Fixed commit": "d432b6cd4e00429746d99d8bee83efc30c6ef93d", "Url": "https://api.github.com/repos/thaliproject/Thali_CordovaPlugin_BtLibrary", "Date": "2015-12-15T13:21:09Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ListView.getCheckedItemPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (checked != (android.widget.AdapterView.INVALID_POSITION)) tunnelListView.setItemChecked(checked, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3883/buggy-version/IPv6Droid.src.main.java.de.flyingsnail.ipv6droid.android.MainActivity.java", "BodyUseAPI": ["android.widget.ListView.setItemChecked(int,boolean)"], "Fixed commit": "b00e7cf0df69ee102ffb2a4c965b19067ea3da7f", "Url": "https://api.github.com/repos/pelzvieh/IPv6Droid", "Date": "2016-03-24T22:24:17Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").toLowerCase().contains(\"mac\")) { O_NONBLOCK = 4; }else { O_NONBLOCK = 2048; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3530/buggy-version/src.main.java.org.nuprocess.internal.LibC.java", "BodyUseAPI": [], "Fixed commit": "2bef27c0f5336e0f4984ae7fd6616f643a44728b", "Url": "https://api.github.com/repos/brettwooldridge/NuProcess", "Date": "2013-09-13T07:35:44Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(followers.containsKey(userEmail))) { followers.put(userEmail, new java.util.HashSet<>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4080/buggy-version/MyWif.src.main.java.com.mywif.model.pojo.UsersManager.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.Set<java.lang.String>>.put(java.lang.String,java.util.HashSet<>)"], "Fixed commit": "e48d69e8b589fc09e3e9f776707e7cb41d5f4118", "Url": "https://api.github.com/repos/beloslava/WIFRepo", "Date": "2016-10-12T11:46:50Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filename) != null) { sb.append(filename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5889/buggy-version/solr-search.src.main.java.edu.unc.lib.dl.search.solr.model.Datastream.java", "BodyUseAPI": [], "Fixed commit": "94557f3e4bde4422e2902cb58e11ff442a6a6292", "Url": "https://api.github.com/repos/UNC-Libraries/Carolina-Digital-Repository", "Date": "2017-06-22T14:43:13Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(update.getSid().equals(this.getSid()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1875/buggy-version/vim-adaptor.adaptor.src.main.java.sonata.kernel.vimadaptor.RemoveServiceCallProcessor.java", "BodyUseAPI": [], "Fixed commit": "d1bc5d8e01a99c1af04efa80b2a58dd79f910075", "Url": "https://api.github.com/repos/sonata-nfv/son-sp-infrabstract", "Date": "2017-05-26T14:07:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((edge.getAntNodes()) != null) { for (joshua.decoder.hypergraph.HGNode tailNode : edge.getAntNodes()) { joshua.decoder.hypergraph.ForestWalker.walk(tailNode, walker); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/362/buggy-version/src.joshua.decoder.hypergraph.ForestWalker.java", "BodyUseAPI": ["joshua.decoder.hypergraph.HyperEdge.getAntNodes()"], "Fixed commit": "4d168790c23006fd2eff3ca25e7dd9e12f964a67", "Url": "https://api.github.com/repos/jganitkevitch/joshua", "Date": "2011-11-23T18:11:32Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getHyperEdges()) != null) { for (joshua.decoder.hypergraph.HyperEdge edge : node.getHyperEdges()) { if ((edge.getAntNodes()) != null) { for (joshua.decoder.hypergraph.HGNode tailNode : edge.getAntNodes()) { joshua.decoder.hypergraph.ForestWalker.walk(tailNode, walker); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/362/buggy-version/src.joshua.decoder.hypergraph.ForestWalker.java", "BodyUseAPI": ["joshua.decoder.hypergraph.HGNode.getHyperEdges()"], "Fixed commit": "4d168790c23006fd2eff3ca25e7dd9e12f964a67", "Url": "https://api.github.com/repos/jganitkevitch/joshua", "Date": "2011-11-23T18:11:32Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((classifiedDatum.first().getLabelPath()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4718/buggy-version/src.corp.model.evaluation.AccuracyValidation.java", "BodyUseAPI": [], "Fixed commit": "dbfbec35e7df36cdf4a549905763ea8361bcff44", "Url": "https://api.github.com/repos/forkunited/CorporateRelationExtraction", "Date": "2013-09-13T17:32:18Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["classifiedDatum.first().getLabelPath().getLongestValidPrefix(this.model.getValidLabelPaths())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (actual == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4718/buggy-version/src.corp.model.evaluation.AccuracyValidation.java", "BodyUseAPI": [], "Fixed commit": "dbfbec35e7df36cdf4a549905763ea8361bcff44", "Url": "https://api.github.com/repos/forkunited/CorporateRelationExtraction", "Date": "2013-09-13T17:32:18Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ibatis.reflection.MetaObject.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rowBounds instanceof com.baomidou.mybatisplus.plugins.pagination.Pagination) { com.baomidou.mybatisplus.plugins.pagination.Pagination page = ((com.baomidou.mybatisplus.plugins.pagination.Pagination) (rowBounds)); originalSql = dialect.buildPaginationSql(originalSql, page.getOffsetCurrent(), page.getSize()); }else { originalSql = dialect.buildPaginationSql(originalSql, rowBounds.getOffset(), rowBounds.getLimit()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8554/buggy-version/src.main.java.com.github.yuPATHobin.mybatis.gm.intcpt.GeneralPaginationInterceptor.java", "BodyUseAPI": ["com.baomidou.mybatisplus.plugins.pagination.IDialect.buildPaginationSql(java.lang.String,rowBounds.getOffset(),rowBounds.getLimit())", "org.apache.ibatis.session.RowBounds.getLimit()", "org.apache.ibatis.session.RowBounds.getOffset()"], "Fixed commit": "1d7f36e9b24c2e7325f4b89772f3d81aab69ff2e", "Url": "https://api.github.com/repos/yuPATHobin/mybatis-generalmapper", "Date": "2017-03-02T06:58:34Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cell.getLifeTime()) > 5) { searchForMate(cell); }else { if ((cell.gene.fightFlightPrio) > 0) { searchForCell(cell); }else { searchForFood(cell); wonderAround(cell); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5012/buggy-version/src.Brain.java", "BodyUseAPI": ["Brain.wonderAround(Cell)", "Brain.searchForMate(Cell)", "Brain.searchForFood(Cell)", "Brain.searchForCell(Cell)"], "Fixed commit": "3495a5e2a4023be544b620a97b8ae1df02667b7e", "Url": "https://api.github.com/repos/wilpel/ANNCells", "Date": "2017-11-03T23:14:51Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Class.class.isInstance(pojo)) { java.util.Map<java.lang.String, java.lang.Object> fieldMap = new java.util.HashMap<java.lang.String, java.lang.Object>(2); fieldMap.put(u14.reflect.JxClass.CLASS_NAME, ((java.lang.Class<?>) (pojo)).getCanonicalName()); fieldMap.put(u14.reflect.JxClass.CLASS_STATIC, true); return fieldMap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1247/buggy-version/src.main.java.u14.reflect.JxClass.java", "BodyUseAPI": [], "Fixed commit": "e0a7e03545cf820c4f213742a2c280197b61ea11", "Url": "https://api.github.com/repos/lhkzh/msgpack-netty", "Date": "2015-01-30T11:55:38Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((map.containsKey(u14.reflect.JxClass.CLASS_STATIC)) && ((map.size()) == 2)) { java.lang.Object st = map.get(u14.reflect.JxClass.CLASS_STATIC); if (((st instanceof java.lang.Boolean) && (((java.lang.Boolean) (st)) == true)) || ((st instanceof java.lang.Number) && ((((java.lang.Number) (st)).intValue()) != 0))) return clazz; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1247/buggy-version/src.main.java.u14.reflect.JxClass.java", "BodyUseAPI": ["java.util.Map.get(java.lang.String)"], "Fixed commit": "e0a7e03545cf820c4f213742a2c280197b61ea11", "Url": "https://api.github.com/repos/lhkzh/msgpack-netty", "Date": "2015-01-30T11:55:38Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.UseStatisticalHandler) == null) { useStatisticHandler = false; context.sendMessage(MessageType.WARNING, \"Missing configuration for 'UseStatisticalHandler' using 'false' as default.\"); }else { useStatisticHandler = config.UseStatisticalHandler; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7012/buggy-version/module.RDF_extractor.src.main.java.cz.cuni.mff.xrg.intlib.extractor.rdf.RDFExtractor.java", "BodyUseAPI": [], "Fixed commit": "f74d37023d54c4677a4bb21c0491a1c351f44b18", "Url": "https://api.github.com/repos/mff-uk/intlib", "Date": "2013-07-09T14:49:43Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["city.City.findShortestWay(places.Place[],places.Place)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (way == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/9221/buggy-version/src.city.City.java", "BodyUseAPI": [], "Fixed commit": "d20ea27caedba4598bb47c8a8481fc872d06ad22", "Url": "https://api.github.com/repos/daniellllll/detective", "Date": "2015-01-03T17:15:28Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.phase) == (net.minecraftforge.fml.common.gameevent.TickEvent.Phase.START)) || ((this.mcInstance.theWorld) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5968/buggy-version/java.com.dingcraft.ding.entitylighting.EntityLighting.java", "BodyUseAPI": [], "Fixed commit": "467514136c5c036aae4b22f498c1ed4eb8c78d6f", "Url": "https://api.github.com/repos/yehzhang/Dingcraft", "Date": "2015-04-17T04:37:51Z"},
{"Line": "=>878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mysql.jdbc.SQLError.createSQLException(java.lang.String,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sqlEx.getCause()) == null) { sqlEx.initCause(cause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1459/buggy-version/src.com.mysql.jdbc.SQLError.java", "BodyUseAPI": ["java.sql.SQLException.initCause(java.lang.Throwable)"], "Fixed commit": "9b65bb8ada1aab1e143dfb0a17589684d7505171", "Url": "https://api.github.com/repos/mysql/mysql-connector-j", "Date": "2016-07-05T14:44:43Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.db.DB.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (connection != null) { connection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/40/buggy-version/app.controllers.Post.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "4abb7e591bbc3a9d343ddcc2e787e8b7de09d6be", "Url": "https://api.github.com/repos/jiangecho/maopao_server", "Date": "2015-08-01T09:05:37Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Connection.createStatement()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (statement != null) { statement.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/40/buggy-version/app.controllers.Post.java", "BodyUseAPI": ["java.sql.Statement.close()"], "Fixed commit": "4abb7e591bbc3a9d343ddcc2e787e8b7de09d6be", "Url": "https://api.github.com/repos/jiangecho/maopao_server", "Date": "2015-08-01T09:05:37Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mFavoritesAdapter) != null) && ((mFavoritesAdapter.getCount()) == (stories.size()))) { for (int i = 0; i < (stories.size()); i++) { android.util.Log.d(TAG, new java.lang.Integer(mFavoritesAdapter.getCount()).toString()); final com.code4fun.dare.Story insertedStory = ((com.code4fun.dare.StoryAdapter) (mFavoritesAdapter)).getItem(i); android.util.Log.d(TAG, new java.lang.Integer(mFavoritesAdapter.getCount()).toString()); if (!(insertedStory.imageUrl.equals(stories.get(i).imageUrl))) { ((com.code4fun.dare.StoryAdapter) (mFavoritesAdapter)).insert(stories.get(i), i); } android.util.Log.d(TAG, insertedStory.imageUrl); android.util.Log.d(TAG, stories.get(i).imageUrl); android.util.Log.d(TAG, new java.lang.Boolean(insertedStory.imageUrl.equals(stories.get(i).imageUrl)).toString()); android.util.Log.d(TAG, new java.lang.Integer(mFavoritesAdapter.getCount()).toString()); } }else { mFavoritesAdapter = new com.code4fun.dare.StoryAdapter(getApplicationContext(), stories); mListView.setAdapter(mFavoritesAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8142/buggy-version/src.com.code4fun.dare.MainMenuActivity.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "java.util.ArrayList<com.code4fun.dare.Story>.size()", "android.widget.BaseAdapter.getCount()", "java.util.ArrayList<com.code4fun.dare.Story>.get(int)", "insertedStory.imageUrl.equals(stories.get(i).imageUrl)", "insertedStory.imageUrl.equals(stories.get(i).imageUrl)", "java.util.ArrayList<com.code4fun.dare.Story>.get(int)", "java.lang.Integer.toString()", "android.util.Log.d(java.lang.String,java.lang.String)", "java.util.ArrayList<com.code4fun.dare.Story>.get(int)", "java.lang.Integer.toString()", "android.widget.BaseAdapter.getCount()", "java.lang.Integer.toString()", "android.util.Log.d(java.lang.String,java.lang.String)", "java.lang.Boolean.toString()", "android.widget.BaseAdapter.getCount()", "android.widget.BaseAdapter.insert(stories.get(i),int)", "android.util.Log.d(java.lang.String,stories.get(i).imageUrl)", "java.util.ArrayList<com.code4fun.dare.Story>.get(int)"], "Fixed commit": "7c7f5bcb5b1f24312ff7974db77fa1160ce69114", "Url": "https://api.github.com/repos/ungureanuvladvictor/dare-android", "Date": "2013-11-24T11:22:53Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mFeedAdapter) != null) && ((mFeedAdapter.getCount()) == (stories.size()))) { for (int i = 0; i < (stories.size()); i++) { final com.code4fun.dare.Story insertedStory = ((com.code4fun.dare.StoryAdapter) (mFeedAdapter)).getItem(i); if (!(insertedStory.imageUrl.equals(stories.get(i).imageUrl))) { ((com.code4fun.dare.StoryAdapter) (mFeedAdapter)).insert(stories.get(i), i); } } }else { mFeedAdapter = new com.code4fun.dare.StoryAdapter(getApplicationContext(), stories); mListView.setAdapter(mFeedAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8142/buggy-version/src.com.code4fun.dare.MainMenuActivity.java", "BodyUseAPI": ["insertedStory.imageUrl.equals(stories.get(i).imageUrl)", "java.util.ArrayList<com.code4fun.dare.Story>.size()", "java.util.ArrayList<com.code4fun.dare.Story>.get(int)", "android.widget.BaseAdapter.insert(stories.get(i),int)", "java.util.ArrayList<com.code4fun.dare.Story>.get(int)"], "Fixed commit": "7c7f5bcb5b1f24312ff7974db77fa1160ce69114", "Url": "https://api.github.com/repos/ungureanuvladvictor/dare-android", "Date": "2013-11-24T11:22:53Z"},
{"Line": "=>1216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6794/buggy-version/src.main.java.hex.DGLM.java", "BodyUseAPI": [], "Fixed commit": "fdfcff2b6539ae058f905ef269922ce68c0d5eca", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2013-09-06T18:27:13Z"},
{"Line": "=>812", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wikipediacleaner.utils.Configuration.getString(getWiki(),ConfigurationValueString.LAST_REPLACEMENTS_DIRECTORY)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (directory != null) { fc.setCurrentDirectory(new java.io.File(directory)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7449/buggy-version/WikipediaCleaner.src.org.wikipediacleaner.gui.swing.AutomaticFixingWindow.java", "BodyUseAPI": ["javax.swing.JFileChooser.setCurrentDirectory(java.io.File)"], "Fixed commit": "ab9170445df2eee5f11adb49c1655f3e39f23780", "Url": "https://api.github.com/repos/WPCleaner/wpcleaner", "Date": "2017-10-04T06:46:41Z"},
{"Line": "=>841", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wikipediacleaner.utils.Configuration.getString(getWiki(),ConfigurationValueString.LAST_REPLACEMENTS_DIRECTORY)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (directory != null) { fc.setCurrentDirectory(new java.io.File(directory)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7449/buggy-version/WikipediaCleaner.src.org.wikipediacleaner.gui.swing.AutomaticFixingWindow.java", "BodyUseAPI": ["javax.swing.JFileChooser.setCurrentDirectory(java.io.File)"], "Fixed commit": "ab9170445df2eee5f11adb49c1655f3e39f23780", "Url": "https://api.github.com/repos/WPCleaner/wpcleaner", "Date": "2017-10-04T06:46:41Z"},
{"Line": "=>1527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((underlineColor) != (-1)) { paint.setColor(underlineColor); }else { paint.setColor((((baseColor) & 16777215) | 503316480)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5593/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialEditText.java", "BodyUseAPI": [], "Fixed commit": "825685a8b1518f95f005d0f3c8f7c7cfe1280a49", "Url": "https://api.github.com/repos/labkcv/MaterialEditText", "Date": "2016-10-06T11:45:37Z"},
{"Line": "=>1547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCharactersCountValid()) { textPaint.setColor((((baseColor) & 16777215) | (com.rengwuPATHn.materialedittext.MaterialEditText.GREY_ALPHA_600))); }else { textPaint.setColor(errorColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5593/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialEditText.java", "BodyUseAPI": [], "Fixed commit": "825685a8b1518f95f005d0f3c8f7c7cfe1280a49", "Url": "https://api.github.com/repos/labkcv/MaterialEditText", "Date": "2016-10-06T11:45:37Z"},
{"Line": "=>1564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempErrorText) != null) { textPaint.setColor(errorColor); }else { if ((helperTextColor) != (-1)) { textPaint.setColor(helperTextColor); }else { textPaint.setColor((((baseColor) & 16777215) | (com.rengwuPATHn.materialedittext.MaterialEditText.GREY_ALPHA_600))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5593/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialEditText.java", "BodyUseAPI": [], "Fixed commit": "825685a8b1518f95f005d0f3c8f7c7cfe1280a49", "Url": "https://api.github.com/repos/labkcv/MaterialEditText", "Date": "2016-10-06T11:45:37Z"},
{"Line": "=>1506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((underlineColor) != (-1)) { paint.setColor(underlineColor); }else { paint.setColor((((baseColor) & 16777215) | (com.rengwuPATHn.materialedittext.MaterialEditText.GREY_ALPHA_600))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5593/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialEditText.java", "BodyUseAPI": [], "Fixed commit": "825685a8b1518f95f005d0f3c8f7c7cfe1280a49", "Url": "https://api.github.com/repos/labkcv/MaterialEditText", "Date": "2016-10-06T11:45:37Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((swipeLayout.getOpenStatus()) == (SwipeLayout.Status.Close)) swipeLayout.open(SwipeLayout.DragEdge.Left); else swipeLayout.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6062/buggy-version/Vibernate-2.src.main.java.com.napontaratan.vibernate.vAdapter.java", "BodyUseAPI": ["com.daimajia.swipe.SwipeLayout.open(SwipeLayout.DragEdge.Left)", "com.daimajia.swipe.SwipeLayout.close()"], "Fixed commit": "8b3ac84f603667f2701072f3ef58d5446c8ea184", "Url": "https://api.github.com/repos/D-PLAN/Vibernate-2", "Date": "2015-05-24T22:36:27Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (map != null) { java.lang.String supplier = article.getSupplier().toLowerCase(); java.lang.String short_supplier = \"\"; for (java.lang.String p : Constants.doctorPreferences.keySet()) { if (supplier.contains(p)) short_supplier = p; } float value = 0.0F; if (!(short_supplier.isEmpty())) if (map.containsKey(short_supplier)) value = map.get(short_supplier); return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/895/buggy-version/app.models.ShoppingRose.java", "BodyUseAPI": ["java.util.LinkedHashMap<java.lang.String, java.lang.Float>.containsKey(java.lang.String)", "java.util.LinkedHashMap<java.lang.String, java.lang.Float>.get(java.lang.String)"], "Fixed commit": "7e3fcedee7a9e9d7c7fc158d5319475989ac9aa2", "Url": "https://api.github.com/repos/zdavatz/smart-order", "Date": "2016-07-07T18:58:10Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) { timer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8229/buggy-version/app.src.main.java.com.Arnold.LiftLog.NewLogActivity.java", "BodyUseAPI": [], "Fixed commit": "414893dc23d280ed50edbe51f95be20c5f56528f", "Url": "https://api.github.com/repos/mikefeilbach/LiftLog", "Date": "2015-04-21T13:31:50Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Arnold.LiftLog.NewLogActivity.2.findViewById(R.id.timer_textview)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((timerView.getVisibility()) == (android.view.View.VISIBLE)) { timerView.setVisibility(View.GONE); resetButton.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8229/buggy-version/app.src.main.java.com.Arnold.LiftLog.NewLogActivity.java", "BodyUseAPI": ["android.widget.TextView.setVisibility(View.GONE)"], "Fixed commit": "414893dc23d280ed50edbe51f95be20c5f56528f", "Url": "https://api.github.com/repos/mikefeilbach/LiftLog", "Date": "2015-04-21T13:31:50Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (typesEmpty && ((namespacesEmpty = (candidateNameSpaces != null) ? candidateNameSpaces.isEmpty() : true) == false)) { symbolTable.namespace.Namespace firstNamespace = candidateNameSpaces.get(0); this.lines_errors.add(((((((((firstNamespace.getFileName()) + \" line \") + (firstNamespace.getLine())) + \":\") + (firstNamespace.getPos())) + \" error: candidates are: \") + firstNamespace) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2599/buggy-version/src.errorHandling.AmbiguousReference.java", "BodyUseAPI": [], "Fixed commit": "4d956d3d26a205512cef9a1be33c88bce34c107b", "Url": "https://api.github.com/repos/kferles/Cpm", "Date": "2012-12-03T15:45:40Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((typeResSize + fldResSize) + namespaceResSize) > 1) { throw new symbolTable.namespace.AmbiguousReference(candidatesTypes, candidateNamespaces, candidateFields, name); }else { if (typeResSize == 1) { rv = candidatesTypes.get(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2599/buggy-version/src.symbolTable.namespace.Namespace.java", "BodyUseAPI": [], "Fixed commit": "4d956d3d26a205512cef9a1be33c88bce34c107b", "Url": "https://api.github.com/repos/kferles/Cpm", "Date": "2012-12-03T15:45:40Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.ExifInterface.getAttributeInt(ExifInterface.TAG_ORIENTATION,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (orientation == 6) { android.graphics.Matrix matrix = new android.graphics.Matrix(); matrix.postRotate(90); android.graphics.Bitmap rotatedBitmap = android.graphics.Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true); imageView.setImageBitmap(rotatedBitmap); }else if (orientation == 3) { android.graphics.Matrix matrix = new android.graphics.Matrix(); matrix.postRotate(180); android.graphics.Bitmap rotatedBitmap = android.graphics.Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true); imageView.setImageBitmap(rotatedBitmap); }else { imageView.setImageBitmap(bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4353/buggy-version/app.src.main.java.com.kcdev.android.localfileshare.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "18673ea8f6b7be6df8a13be3945398b20d86ebf3", "Url": "https://api.github.com/repos/anthony-zhu/LocalFileShare", "Date": "2014-12-06T20:41:58Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((service) != null) && (service.isGIT())) viewer.getTree().addListener(SWT.Resize, new org.eclipse.swt.widgets.Listener() { @java.lang.Override public void handleEvent(org.eclipse.swt.widgets.Event event) { org.eclipse.swt.graphics.Point point = parent.getSize(); viewer.getTree().setSize(point.x, ((point.y) - 42)); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1236/buggy-version/main.plugins.org.talend.repository.view.src.org.talend.repository.navigator.RepoViewCommonNavigator.java", "BodyUseAPI": [], "Fixed commit": "2fb6af9057387a600ff509af93eb6b7e5323ef73", "Url": "https://api.github.com/repos/ggu-talend/tcommon-studio-se", "Date": "2016-03-15T08:10:51Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hbase.client.HTable.get(org.apache.hadoop.hbase.client.Get)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (result != null) for (org.apache.hadoop.hbase.KeyValue kv : result.raw()) { urlCount = org.apache.hadoop.hbase.util.Bytes.toInt(kv.getValue()); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1758/buggy-version/LoadUidUrl.src.main.java.com.elex.bigdata.loaduidurl.LoadUidUrlCountReducer.java", "BodyUseAPI": ["org.apache.hadoop.hbase.client.Result.raw()"], "Fixed commit": "2055ca18a088ac381b2f92332e8627fd34bd3231", "Url": "https://api.github.com/repos/elex-bigdata/Url_Count", "Date": "2014-03-13T09:30:40Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client.level) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6896/buggy-version/src.engine.network.packet.Packet43MobInteract.java", "BodyUseAPI": [], "Fixed commit": "1ddc2be04fe251028796d0e6ada4bb75b78d3a9b", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-12-16T11:34:28Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.cdt.core.dom.ast.IASTNodeSelector.findEnclosingName(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((name.isDeclaration()) && (name.isDefinition())) { flags |= org.eclipse.cdt.core.index.IIndex.FIND_REFERENCES; }else if ((!(name.isDeclaration())) && (!(name.isDefinition()))) { flags |= org.eclipse.cdt.core.index.IIndex.FIND_DEFINITIONS; }else { flags |= (name.isDefinition()) ? org.eclipse.cdt.core.index.IIndex.FIND_DECLARATIONS : org.eclipse.cdt.core.index.IIndex.FIND_DEFINITIONS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3395/buggy-version/src.java.org.eclim.plugin.cdt.command.search.SearchCommand.java", "BodyUseAPI": ["org.eclipse.cdt.core.dom.ast.IASTName.isDefinition()", "org.eclipse.cdt.core.dom.ast.IASTName.isDeclaration()", "org.eclipse.cdt.core.dom.ast.IASTName.isDefinition()"], "Fixed commit": "bf01fe32d94b4241f857367216a7d41e6bff5535", "Url": "https://api.github.com/repos/ervandew/eclim", "Date": "2011-06-17T14:56:25Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context == null) { return dflt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3395/buggy-version/src.java.org.eclim.plugin.cdt.command.search.SearchCommand.java", "BodyUseAPI": [], "Fixed commit": "bf01fe32d94b4241f857367216a7d41e6bff5535", "Url": "https://api.github.com/repos/ervandew/eclim", "Date": "2011-06-17T14:56:25Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flags & (org.eclipse.cdt.core.index.IIndex.FIND_REFERENCES)) != 0) { org.eclim.util.CollectionUtils.addAll(names, ast.getReferences(binding)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3395/buggy-version/src.java.org.eclim.plugin.cdt.command.search.SearchCommand.java", "BodyUseAPI": [], "Fixed commit": "bf01fe32d94b4241f857367216a7d41e6bff5535", "Url": "https://api.github.com/repos/ervandew/eclim", "Date": "2011-06-17T14:56:25Z"},
{"Line": "=>1191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentlyItem) sb.append(li[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5417/buggy-version/cda.plugins.org.openhealthtools.mdht.uml.cda.core.src.org.openhealthtools.mdht.uml.cda.core.util.CDAModelUtil.java", "BodyUseAPI": [], "Fixed commit": "67ef28d84ec7386950ea62f876f74359bf84ec24", "Url": "https://api.github.com/repos/mdht/mdht", "Date": "2015-09-17T02:01:12Z"},
{"Line": "=>1188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentlyItem) sb.append(li[0]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5417/buggy-version/cda.plugins.org.openhealthtools.mdht.uml.cda.core.src.org.openhealthtools.mdht.uml.cda.core.util.CDAModelUtil.java", "BodyUseAPI": [], "Fixed commit": "67ef28d84ec7386950ea62f876f74359bf84ec24", "Url": "https://api.github.com/repos/mdht/mdht", "Date": "2015-09-17T02:01:12Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.server.issue.DefaultIssueFinder.find(org.sonar.api.issue.IssueQuery)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result.issues().size()) != 1) { throw new java.lang.IllegalStateException((\"Issue not found: \" + issueKey)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6824/buggy-version/sonar-server.src.main.java.org.sonar.server.issue.IssueChangeService.java", "BodyUseAPI": [], "Fixed commit": "1f41283751271d5fc4eeac4149830800437431dd", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-06-02T22:46:58Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.api.notifications.Notification.getFieldValue(java.lang.String)", "org.sonar.api.notifications.Notification.getFieldValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((projectKey != null) && (dateString != null)) { java.util.Date date = org.sonar.api.utils.DateUtils.parseDateTime(dateString); java.lang.String url = java.lang.String.format(\"%s/issues/search?componentRoots=%s&createdAfter=%s\", settings.getServerBaseURL(), java.net.URLEncoder.encode(projectKey), org.sonar.api.utils.DateUtils.formatDate(date)); sb.append(\"\\n\").append(\"See it in SonarQube: \").append(url).append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6824/buggy-version/plugins.sonar-core-plugin.src.main.java.org.sonar.plugins.core.issue.notification.NewIssuesEmailTemplate.java", "BodyUseAPI": ["org.sonar.api.utils.DateUtils.parseDateTime(java.lang.String)", "java.lang.String.format(java.lang.String,settings.getServerBaseURL(),java.lang.String,org.sonar.api.utils.DateUtils.formatDate(date))", "java.net.URLEncoder.encode(java.lang.String)"], "Fixed commit": "1f41283751271d5fc4eeac4149830800437431dd", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-06-02T22:46:58Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Enumeration<?>.nextElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entry.isDirectory()) { java.io.File folder = new java.io.File(out, entryName); folder.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8293/buggy-version/src.com.atlauncher.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "7d53a46a61c20f49aaf416a44bc385b1234c5245", "Url": "https://api.github.com/repos/RyanTheAllmighty/ATLauncher", "Date": "2013-11-30T10:38:03Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (store.get(i).getRedistribute()) { store.get(i).setRedistribute(false); for (int k = 0; k < (store.size()); k++) { if ((store.get(k).getKey()) == key) { store.remove(k); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5926/buggy-version/MyKV.src.KeyValueController.java", "BodyUseAPI": ["store.get(i).setRedistribute(boolean)", "store.get(k).getKey()", "java.util.ArrayList<KVEntry<T>>.remove(int)", "java.util.ArrayList<KVEntry<T>>.get(int)", "java.util.ArrayList<KVEntry<T>>.size()", "java.util.ArrayList<KVEntry<T>>.get(int)"], "Fixed commit": "db2f6bc960dc9401306473a5c49f6abba3ac05ac", "Url": "https://api.github.com/repos/christian-com-techniques/MyKV", "Date": "2013-12-04T09:25:00Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (values != null) { if ((values.optJSONObject(value)) != null) { return values.optJSONObject(value).getString(\"description\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/492/buggy-version/src.main.java.nl.tudelft.pixelperfect.event.EventReader.java", "BodyUseAPI": ["values.optJSONObject(value).getString(java.lang.String)", "org.json.JSONArray.optJSONObject(int)", "org.json.JSONArray.optJSONObject(int)"], "Fixed commit": "470a97c79e1bdc56a4f29a009f799bca02079505", "Url": "https://api.github.com/repos/jessetilro/pixelperfect", "Date": "2016-06-15T11:38:11Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tasknum) == 1) { minTravelingT = 0; finalDaySchedule.add(TaskList.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8577/buggy-version/src.Greedy.java", "BodyUseAPI": [], "Fixed commit": "9ad3be42d9af0814c3313756ae23364ba873daf7", "Url": "https://api.github.com/repos/sharonWU0505/SMART", "Date": "2016-11-22T18:30:39Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPMList) != null) { mPMList.setBackgroundColor(mPrefs.postBackgroundColor); mPMList.setCacheColorHint(mPrefs.postBackgroundColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5852/buggy-version/src.com.ferg.awful.PrivateMessageListFragment.java", "BodyUseAPI": [], "Fixed commit": "9b29e058716c01c69dc9e3338ef4cab476e68139", "Url": "https://api.github.com/repos/Awful/Awful.apk", "Date": "2011-10-08T00:56:07Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEditReply) != null) { saved_reply = mEditReply.getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5852/buggy-version/src.com.ferg.awful.MessageFragment.java", "BodyUseAPI": [], "Fixed commit": "9b29e058716c01c69dc9e3338ef4cab476e68139", "Url": "https://api.github.com/repos/Awful/Awful.apk", "Date": "2011-10-08T00:56:07Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pmId) > 0) { mServConn.fetchPrivateMessage(pmId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5852/buggy-version/src.com.ferg.awful.MessageFragment.java", "BodyUseAPI": [], "Fixed commit": "9b29e058716c01c69dc9e3338ef4cab476e68139", "Url": "https://api.github.com/repos/Awful/Awful.apk", "Date": "2011-10-08T00:56:07Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPrefs) != null) { mPrefs.unRegisterListener(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5852/buggy-version/src.com.ferg.awful.MessageFragment.java", "BodyUseAPI": [], "Fixed commit": "9b29e058716c01c69dc9e3338ef4cab476e68139", "Url": "https://api.github.com/repos/Awful/Awful.apk", "Date": "2011-10-08T00:56:07Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.expressionFilter) == null) { if ((other.expressionFilter) != null) { return false; } }else if (!(this.expressionFilter.equals(other.expressionFilter))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/836/buggy-version/main.plugins.org.talend.designer.mapper.src.main.java.org.talend.designer.mapper.model.emf.mapper.impl.AbstractInOutTableImpl.java", "BodyUseAPI": [], "Fixed commit": "5239831a5f1edcf6bec27bea09753dc0f03eac5c", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2017-05-24T06:14:32Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.activateCondensedTool) != (other.activateCondensedTool)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/836/buggy-version/main.plugins.org.talend.designer.mapper.src.main.java.org.talend.designer.mapper.model.emf.mapper.impl.AbstractInOutTableImpl.java", "BodyUseAPI": [], "Fixed commit": "5239831a5f1edcf6bec27bea09753dc0f03eac5c", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2017-05-24T06:14:32Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.activateExpressionFilter) != (other.activateExpressionFilter)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/836/buggy-version/main.plugins.org.talend.designer.mapper.src.main.java.org.talend.designer.mapper.model.emf.mapper.impl.AbstractInOutTableImpl.java", "BodyUseAPI": [], "Fixed commit": "5239831a5f1edcf6bec27bea09753dc0f03eac5c", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2017-05-24T06:14:32Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((new java.math.BigInteger(_base).compareTo(new java.math.BigInteger((\"\" + (1 << 16))))) > (-1)) { throw new java.lang.RuntimeException(((((\"Mmm, \" + _base) + \" is too large number to be a base and I cannot be sure that it's prime. Enter a prime number that is less than \") + (1 << 16)) + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3228/buggy-version/p-adic.src.main.java.vvk.numbers.Application.java", "BodyUseAPI": [], "Fixed commit": "43d0dc475606c16e6ef1d331ad568fac4a5bb679", "Url": "https://api.github.com/repos/Estraaanged/P-adic-numbers", "Date": "2014-05-03T18:58:27Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(base < (vvk.numbers.PAdic.precalculatedPrimes))) { throw new java.lang.RuntimeException(((((\"Sorry, \" + base) + \" is too large number to be a base and I cannot be sure that it's prime. Enter a prime number that is less than \") + (vvk.numbers.PAdic.precalculatedPrimes)) + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3228/buggy-version/p-adic.src.main.java.vvk.numbers.PAdic.java", "BodyUseAPI": [], "Fixed commit": "43d0dc475606c16e6ef1d331ad568fac4a5bb679", "Url": "https://api.github.com/repos/Estraaanged/P-adic-numbers", "Date": "2014-05-03T18:58:27Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (base > 7) { throw new java.lang.RuntimeException(\"Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \\n Use rational fraction or sequence representation.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3228/buggy-version/p-adic.src.main.java.vvk.numbers.PAdic.java", "BodyUseAPI": [], "Fixed commit": "43d0dc475606c16e6ef1d331ad568fac4a5bb679", "Url": "https://api.github.com/repos/Estraaanged/P-adic-numbers", "Date": "2014-05-03T18:58:27Z"},
{"Line": "=>1868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wyjc.io.Type.intersect(from, to).equals(from)) { }else if (from == (Type.T_INT)) { buildCoercion(((wyjc.io.Type.Int) (from)), to, freeSlot, bytecodes); }else if ((from == (Type.T_STRING)) && (to instanceof wyjc.io.Type.List)) { buildCoercion(((wyjc.io.Type.Strung) (from)), ((wyjc.io.Type.List) (to)), freeSlot, bytecodes); }else { int id = wyjc.io.ClassFileBuilder.Coercion.get(from, to, constants); java.lang.String name = \"coercion$\" + id; wyjc.io.JvmType.Function ft = new wyjc.io.JvmType.Function(wyjc.io.ClassFileBuilder.convertType(to), wyjc.io.ClassFileBuilder.convertType(from)); bytecodes.add(new wyjc.io.Bytecode.Invoke(owner, name, ft, Bytecode.STATIC)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4946/buggy-version/src.wyjc.io.ClassFileBuilder.java", "BodyUseAPI": ["wyjc.io.ClassFileBuilder.convertType(wyjc.io.Type)", "wyjc.io.ClassFileBuilder.Coercion.get(wyjc.io.Type,wyjc.io.Type,java.util.HashMap<wyjc.io.ClassFileBuilder.Constant, java.lang.Integer>)", "wyjc.io.ClassFileBuilder.buildCoercion(wyjc.io.Type,wyjc.io.Type,int,java.util.ArrayList<wyjc.io.Bytecode>)", "wyjc.io.ClassFileBuilder.convertType(wyjc.io.Type)"], "Fixed commit": "de9bbc6de6bc22c7c9a8516af34528307a899a42", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-09-20T07:29:35Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item1.levelupRequirements) == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3025/buggy-version/AndorsTrail.src.com.gpl.rpg.AndorsTrail.view.SkillListAdapter.java", "BodyUseAPI": [], "Fixed commit": "707fbde1e1d2359805d84fa60322b20caf8c4e6f", "Url": "https://api.github.com/repos/HummusSamurai/andors-trail", "Date": "2017-03-01T14:27:02Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item2.levelupRequirements) == null) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3025/buggy-version/AndorsTrail.src.com.gpl.rpg.AndorsTrail.view.SkillListAdapter.java", "BodyUseAPI": [], "Fixed commit": "707fbde1e1d2359805d84fa60322b20caf8c4e6f", "Url": "https://api.github.com/repos/HummusSamurai/andors-trail", "Date": "2017-03-01T14:27:02Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tempRandNo < 0) { tempRandNo = tempRandNo * (-1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8405/buggy-version/DescriptiveStatisticsWebServices.src.main.java.org.web.app.models.RandomGenerator.java", "BodyUseAPI": [], "Fixed commit": "e3fbe4fc803e2df97bbd5e531b6268f6ab256059", "Url": "https://api.github.com/repos/parasdhawan21/Software-Measurement", "Date": "2017-06-07T23:03:04Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.WeeklyTimeData.get(a.getEmployeeNickname())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (edatamap == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6626/buggy-version/src.managers.EmployeeDataManager.java", "BodyUseAPI": [], "Fixed commit": "2b8e9856aeea1e88ac7d9e55f77dc84989137d88", "Url": "https://api.github.com/repos/jaspertomas/fingerprintfilereader", "Date": "2014-01-04T06:33:59Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args != null) { for (int i = 0; i < (args.length); i++) { java.lang.Object value = args[i]; com.facebook.swift.service.ThriftMethodHandler.ParameterHandler parameter = parameterCodecs.get(i); writer.writeField(parameter.getName(), parameter.getId(), parameter.getCodec(), value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5942/buggy-version/swift-service.src.main.java.com.facebook.swift.service.ThriftMethodHandler.java", "BodyUseAPI": [], "Fixed commit": "d84cf4044a1e99244fbba2f6041a3ff667f3b9b0", "Url": "https://api.github.com/repos/stuz5000/swift", "Date": "2015-02-06T22:04:10Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (socketFactories.containsKey(k)) { java.net.Socket socket = socketFactories.get(k).createSocket(); socket.connect(new java.net.InetSocketAddress(gateways.get(k), ports.get(k)), 2000); net.sheehantech.cherry.pool.PooledPushSocket pushSocket = new net.sheehantech.cherry.pool.PooledPushSocket(socket); pushSocket.prepare(); logger.info(\"Initialised new socket {}\", pushSocket); return pushSocket; }else throw new net.sheehantech.cherry.InitializationFailedException((\"Could not create pushSocket, no key found matching \" + k));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4598/buggy-version/pool.src.main.java.net.sheehantech.cherry.pool.KeyedPooledPushSocketFactory.java", "BodyUseAPI": ["java.util.Map<K, java.lang.String>.get(K)", "java.util.Map<K, javax.net.ssl.SSLSocketFactory>.get(K)", "javax.net.ssl.SSLSocketFactory.createSocket()", "java.net.Socket.connect(java.net.InetSocketAddress,int)", "java.util.Map<K, java.lang.Integer>.get(K)"], "Fixed commit": "0e46d0fac5cb8547407172b78d994d2a2193a78a", "Url": "https://api.github.com/repos/jlsheehan/cherry", "Date": "2017-08-27T13:14:54Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.isClosed()) { org.eclipse.moquette.spi.impl.ProtocolProcessor.LOG.warn(\"channel was closed. client <{}>\", msg.getClientID()); session.close(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6665/buggy-version/broker.src.main.java.org.eclipse.moquette.spi.impl.ProtocolProcessor.java", "BodyUseAPI": ["org.eclipse.moquette.server.ServerChannel.close(boolean)"], "Fixed commit": "c69c3fd8cc97cfe1e8b8a460e681b7e94c87716f", "Url": "https://api.github.com/repos/runafter/moquette", "Date": "2015-09-21T12:24:34Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecyclerView) != null) mRecyclerView.setAdapter(mCursorAdapter);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2791/buggy-version/app.src.main.java.com.studio08.ronen.Zivug.ContactsRVFragment.java", "BodyUseAPI": [], "Fixed commit": "24e0a61e2fb962dd4de150086aec5b3c43c47852", "Url": "https://api.github.com/repos/ronenlh/Shidduchim", "Date": "2016-08-12T07:08:44Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.runsafe.framework.minecraft.entity.RunsafeProjectile.getShooter()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(shooterSource instanceof no.runsafe.framework.minecraft.entity.RunsafeLivingEntity)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4509/buggy-version/src.no.runsafe.framework.minecraft.entity.RunsafeProjectile.java", "BodyUseAPI": [], "Fixed commit": "690b21093bb2e1517f677e7c964d7d208dbcfcf4", "Url": "https://api.github.com/repos/Njs41/Framework", "Date": "2017-03-08T00:50:05Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fieldbot.OOAICallback.getResourceByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (metal == null) sendTextMsg(\"Resource Metal not found on this mod for initMetalData()!\", fieldbot.FieldBOT.MSG_ERR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4418/buggy-version/src.fieldbot.FieldBOT.java", "BodyUseAPI": [], "Fixed commit": "2e75b46ca33d86d5880be08ed1d1e7f3f982802d", "Url": "https://api.github.com/repos/playerO1/FieldBOT", "Date": "2014-11-16T10:57:52Z"},
{"Line": "=>3972", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["core.RobotRun.getRobot(int)", "java.util.HashMap<java.lang.Integer, robot.RoboticArm>.get(procExec.getProcRID())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (curR != nextR) { activeRobot.set(nextR); screens.getActiveScreen().getContents().setColumnIdx(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4995/buggy-version/RobotRun.src.core.RobotRun.java", "BodyUseAPI": ["core.Pointer<robot.RoboticArm>.set(robot.RoboticArm)"], "Fixed commit": "9ee32730a7fb7506357b7993116267db72145a25", "Url": "https://api.github.com/repos/skuhl/RobotRun", "Date": "2017-08-18T19:12:00Z"},
{"Line": "=>1096", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.elegit.RepoHelper.getCommit(branch.getHeadId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (headCommit != null) headCommit.removeAsHead(branch);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6658/buggy-version/src.main.java.elegit.RepoHelper.java", "BodyUseAPI": ["main.java.elegit.CommitHelper.removeAsHead(main.java.elegit.BranchHelper)"], "Fixed commit": "e251640666a2135150ba141e265eaba01c4e5685", "Url": "https://api.github.com/repos/dmusican/Elegit", "Date": "2016-04-04T20:00:25Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["curResult.getStatus().isAnyError()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!needRetry) { reply(curResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2402/buggy-version/src.main.java.org.lightj.task.AsyncPollTaskWorker.java", "BodyUseAPI": [], "Fixed commit": "caa4b65703f7d4b80168dbd071d0062912b69c9f", "Url": "https://api.github.com/repos/yubin154/lightflow", "Date": "2014-09-20T07:43:32Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(langName.contains(\"\\\\\"))) && (!(langName.contains(\"\\'\")))) { boolean langAvail = DatabaseInterface.DB_Interface.langAvailable(langName); if (langAvail) { returnList.addAll(DataManagement.LanguageManager.setupLanguages(DatabaseInterface.DB_Interface.request(langName), langName)); java.util.Collections.sort(((java.util.List<Utils.Language>) ((java.lang.Object) (returnList)))); returnList.add(0, \"sub_menu_list\"); }else { returnList.add(Utils.ErrorHandler.getError(3)); } }else { returnList.add(Utils.ErrorHandler.getError(3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3292/buggy-version/DataManager.src.DataManagement.RequestManager.java", "BodyUseAPI": ["DatabaseInterface.DB_Interface.langAvailable(java.lang.String)", "DataManagement.LanguageManager.setupLanguages(DatabaseInterface.DB_Interface.request(langName),java.lang.String)", "DatabaseInterface.DB_Interface.request(java.lang.String)", "java.util.List<java.lang.Object>.addAll(DataManagement.LanguageManager.setupLanguages(DatabaseInterface.DB_Interface.request(langName), langName))"], "Fixed commit": "54786ccec7e121a05ae5e469d0fd5e962625eff4", "Url": "https://api.github.com/repos/wjpmclawrence/TechComparisonProject", "Date": "2017-06-22T09:50:13Z"},
{"Line": "=>1084", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mekanism.common.block.BlockMachine.MachineType.get(mekanism.common.block.BlockMachine.MachineBlock,world.getBlockMetadata(x, y, z))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6026/buggy-version/src.main.java.mekanism.common.block.BlockMachine.java", "BodyUseAPI": [], "Fixed commit": "38490db21dd267781ff38c5d3186f13ef5f4e5fe", "Url": "https://api.github.com/repos/karakufire/Mekanism", "Date": "2016-05-28T06:01:21Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.util.List) { packed = new java.util.ArrayList<>(list.size()); }else { packed = new org.normandra.util.ArraySet(list.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6462/buggy-version/src.main.java.org.normandra.orientdb.OrientUtils.java", "BodyUseAPI": [], "Fixed commit": "ff74d6cae6d9b61ba3706b8856bec39f85073ab9", "Url": "https://api.github.com/repos/trajar/normandra", "Date": "2015-03-30T01:35:59Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu_data) == null) { if (go_home) { android.content.Intent to_home = new android.content.Intent(main_context, com.greenjacket.greenjacket.Home.class); startActivity(to_home); } }else if (received_intent.getBooleanExtra(\"item_added\", false)) { android.view.View this_view = this.findViewById(R.id.fab); android.support.design.widget.Snackbar.make(this_view, \"Item added to cart\", Snackbar.LENGTH_LONG).setAction(\"Action\", null).show(); org.json.JSONObject temp_order = new org.json.JSONObject(); try { temp_order.put(\"category_id\", received_intent.getStringExtra(\"category_id\")); temp_order.put(\"category_name\", received_intent.getStringExtra(\"category_name\")); temp_order.put(\"main_opt_id\", received_intent.getStringExtra(\"main_opt_id\")); temp_order.put(\"main_opt_name\", received_intent.getStringExtra(\"main_opt_name\")); temp_order.put(\"container_id\", received_intent.getStringExtra(\"container_id\")); temp_order.put(\"container_name\", received_intent.getStringExtra(\"container_name\")); temp_order.put(\"size_id\", received_intent.getStringExtra(\"size_id\")); temp_order.put(\"size_name\", received_intent.getStringExtra(\"size_name\")); temp_order.put(\"chosen_option_ids\", received_intent.getStringArrayListExtra(\"chosen_option_ids\")); temp_order.put(\"chosen_option_names\", received_intent.getStringArrayListExtra(\"chosen_option_names\")); } catch (org.json.JSONException e) { android.util.Log.e(\"Receiving Intent\", (\"JSON error: \" + e)); } orders.put(temp_order); java.lang.System.out.println((\"orders are now \" + (orders))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2026/buggy-version/GreenJacket.app.src.main.java.com.greenjacket.greenjacket.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6f3fe18de8ff5fc3b48c4d0142314bbfb2dd0752", "Url": "https://api.github.com/repos/samvictor/GreenJacket_android", "Date": "2016-04-06T15:26:56Z"},
{"Line": "=>1141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Sirius.navigator.connection.SessionManager.getProxy().executeTask(java.lang.String,java.lang.String,<nulltype>,de.cismet.cids.server.actions.ServerActionParameter,de.cismet.cids.server.actions.ServerActionParameter,de.cismet.cids.server.actions.ServerActionParameter,de.cismet.cids.server.actions.ServerActionParameter,de.cismet.cids.server.actions.ServerActionParameter,de.cismet.cids.server.actions.ServerActionParameter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((result != null) && (!(result.isSuccessfull()))) { res.setSuccessful(false); res.setProtokoll(result.getProtokoll()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2652/buggy-version/src.main.java.de.cismet.cids.custom.nas.PointNumberDialog.java", "BodyUseAPI": ["de.cismet.cids.custom.utils.pointnumberreservation.PointNumberReservationRequest.setProtokoll(result.getProtokoll())", "de.cismet.cids.custom.utils.pointnumberreservation.PointNumberReservationRequest.getProtokoll()"], "Fixed commit": "790e63afd5003b9391511442a846e5c1248b621a", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2013-11-18T13:23:33Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (vGoto.target instanceof regalloc.VAddr.Var) { use.add(vGoto.target.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8858/buggy-version/regalloc.RegAllocHelper.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(vGoto.target.toString())", "vGoto.target.toString()"], "Fixed commit": "29879cbed4bbc4a8a97b3241cdec508dd8c77af3", "Url": "https://api.github.com/repos/wrand001/CS179E-Senior-Design", "Date": "2017-05-30T23:24:01Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParameters().getDomains()) != null) { java.util.Iterator<java.lang.String> domainsIterator = getParameters().getDomains().iterator(); java.util.List<java.lang.String> failedDomains = new java.util.LinkedList<>(); while (domainsIterator.hasNext()) { java.lang.String domain = domainsIterator.next(); if (!(verifiedDomains.contains(domain))) { failedDomains.add(domain); } } if ((failedDomains.size()) > 0) { com.google.gson.JsonElement failedDomainsJsonElement = getGson().toJsonTree(failedDomains, new com.google.gson.reflect.TypeToken<java.util.List<java.lang.String>>() {}.getType()); result.add(\"failed_domains\", failedDomainsJsonElement); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4485/buggy-version/src.main.java.com.jblur.acme_client.command.authorization.VerifyDomainsCommand.java", "BodyUseAPI": [], "Fixed commit": "883ffbe5882285c0a1174c7b720c037209707858", "Url": "https://api.github.com/repos/porunov/acme_client", "Date": "2016-12-14T15:11:40Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) < (android.os.Build.VERSION_CODES.LOLLIPOP)) { findPreference(preferenceKey).setEnabled(false); }else { findPreference(preferenceKey).setOnPreferenceChangeListener(new android.preference.Preference.OnPreferenceChangeListener() { @java.lang.Override public boolean onPreferenceChange(android.preference.Preference preference, java.lang.Object newValue) { boolean periodicChange = ((java.lang.Boolean) (newValue)); if (periodicChange) { br.com.dgimenes.nasapic.service.PeriodicWallpaperChangeService.setupIfNeededPeriodicWallpaperChange(getActivity()); }else { br.com.dgimenes.nasapic.service.PeriodicWallpaperChangeService.unschedulePeriodicWallpaperChange(getActivity()); } return true; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5114/buggy-version/app.src.main.java.br.com.dgimenes.nasapic.control.activity.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "ffbccd692f04f34a3b3021046cf9aea1ba6fd110", "Url": "https://api.github.com/repos/danielgimenes/NasaPic", "Date": "2015-11-02T02:54:10Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.isEmpty()) text = org.pescuma.buildhealth.computer.tasks.CodeTasksComputer.NO_MESSAGE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2271/buggy-version/buildhealth.extractors.src.org.pescuma.buildhealth.computer.tasks.CodeTasksComputer.java", "BodyUseAPI": [], "Fixed commit": "4faada551170c869a6e735937469b3b7a4aba940", "Url": "https://api.github.com/repos/pescuma/buildhealth", "Date": "2014-03-12T17:16:56Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (keywordsWeights == null) { keywordsAVG = 0; keywordsDev = 0; }else { keywordsAVG = eu.socialsensor.sfc.builder.solrQueryBuilder.Calculator.computeAverage(keywordsWeights); keywordsDev = java.lang.Math.sqrt(eu.socialsensor.sfc.builder.solrQueryBuilder.Calculator.computeVariance(keywordsWeights, keywordsAVG)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8977/buggy-version/src.main.java.eu.socialsensor.sfc.builder.solrQueryBuilder.KeywordsExtractor.java", "BodyUseAPI": ["java.lang.Math.sqrt(eu.socialsensor.sfc.builder.solrQueryBuilder.Calculator.computeVariance(keywordsWeights, keywordsAVG))", "eu.socialsensor.sfc.builder.solrQueryBuilder.Calculator.computeVariance(int[],double)", "eu.socialsensor.sfc.builder.solrQueryBuilder.Calculator.computeAverage(int[])"], "Fixed commit": "ef2ac6b86b781d02b2997194a10fec630636c0c0", "Url": "https://api.github.com/repos/socialsensor/socialsensor-query-builder", "Date": "2014-05-14T14:20:58Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (hashtagsWeights == null) { hashtagsAVG = 0; hashtagsDev = 0; }else { hashtagsAVG = eu.socialsensor.sfc.builder.solrQueryBuilder.Calculator.computeAverage(hashtagsWeights); hashtagsDev = java.lang.Math.sqrt(eu.socialsensor.sfc.builder.solrQueryBuilder.Calculator.computeVariance(hashtagsWeights, hashtagsAVG)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8977/buggy-version/src.main.java.eu.socialsensor.sfc.builder.solrQueryBuilder.KeywordsExtractor.java", "BodyUseAPI": ["eu.socialsensor.sfc.builder.solrQueryBuilder.Calculator.computeAverage(int[])", "eu.socialsensor.sfc.builder.solrQueryBuilder.Calculator.computeVariance(int[],double)", "java.lang.Math.sqrt(eu.socialsensor.sfc.builder.solrQueryBuilder.Calculator.computeVariance(hashtagsWeights, hashtagsAVG))"], "Fixed commit": "ef2ac6b86b781d02b2997194a10fec630636c0c0", "Url": "https://api.github.com/repos/socialsensor/socialsensor-query-builder", "Date": "2014-05-14T14:20:58Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.hadoop.hive.shims.ShimLoader.jettyShims) == null) { synchronized(org.apache.hadoop.hive.shims.ShimLoader.class) { if ((org.apache.hadoop.hive.shims.ShimLoader.jettyShims) == null) { org.apache.hadoop.hive.shims.ShimLoader.jettyShims = org.apache.hadoop.hive.shims.ShimLoader.loadShims(org.apache.hadoop.hive.shims.ShimLoader.JETTY_SHIM_CLASSES, org.apache.hadoop.hive.shims.JettyShims.class); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/9066/buggy-version/shims.src.common.java.org.apache.hadoop.hive.shims.ShimLoader.java", "BodyUseAPI": [], "Fixed commit": "f20fc2426063c81cb3416db530dd17ee504ee701", "Url": "https://api.github.com/repos/chenghao-intel/hive", "Date": "2013-04-23T03:18:28Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.hadoop.hive.shims.ShimLoader.hadoopShims) == null) { synchronized(org.apache.hadoop.hive.shims.ShimLoader.class) { if ((org.apache.hadoop.hive.shims.ShimLoader.hadoopShims) == null) { org.apache.hadoop.hive.shims.ShimLoader.hadoopShims = org.apache.hadoop.hive.shims.ShimLoader.loadShims(org.apache.hadoop.hive.shims.ShimLoader.HADOOP_SHIM_CLASSES, org.apache.hadoop.hive.shims.HadoopShims.class); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/9066/buggy-version/shims.src.common.java.org.apache.hadoop.hive.shims.ShimLoader.java", "BodyUseAPI": [], "Fixed commit": "f20fc2426063c81cb3416db530dd17ee504ee701", "Url": "https://api.github.com/repos/chenghao-intel/hive", "Date": "2013-04-23T03:18:28Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getSelectedAssemblyId()) > 0) com.google.gwt.user.client.History.newItem((((\"interfaces/\" + (ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getPdbInfo().getPdbCode())) + \"/\") + (ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getSelectedAssemblyId()))); else com.google.gwt.user.client.History.newItem((\"interfaces/\" + (ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getPdbInfo().getPdbCode())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7557/buggy-version/eppic-wui.src.main.java.ch.systemsx.sybit.crkwebui.client.results.gui.panels.ResultsGridPanel.java", "BodyUseAPI": [], "Fixed commit": "f732b70798c325f975c34e83855872eb23a32780", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2015-11-03T10:14:43Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getSelectedAssemblyId()) > 0) com.google.gwt.user.client.History.newItem((((\"clusters/\" + (ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getPdbInfo().getPdbCode())) + \"/\") + (ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getSelectedAssemblyId()))); else com.google.gwt.user.client.History.newItem((\"clusters/\" + (ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getPdbInfo().getPdbCode())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7557/buggy-version/eppic-wui.src.main.java.ch.systemsx.sybit.crkwebui.client.results.gui.panels.ResultsGridPanel.java", "BodyUseAPI": [], "Fixed commit": "f732b70798c325f975c34e83855872eb23a32780", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2015-11-03T10:14:43Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.gwt.user.client.History.getToken().contains(\"interfaces\")) { if ((ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getSelectedAssemblyId()) > 0) ResultsPanel.informationPanel.assemblyInfoPanel.assembly_info.setHTML(((((((((((((((\"<table cellpadding=0 cellspacing=0><tr><td width='150px'><span class='eppic-general-info-label-new'>Assemblies</span></td><td><span class='eppic-general-info-label-value-new'><a href='\" + (com.google.gwt.core.client.GWT.getHostPageBaseURL())) + \"#id/\") + (ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getPdbInfo().getPdbCode())) + \"'>\") + (ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getPdbInfo().getAssemblies().size())) + \"</a></span></td></tr><tr><td><span class='eppic-general-info-label-new'>Interfaces</span></td><td><span class='eppic-general-info-label-value-new'>\") + num_interfaces) + \"</span></td></tr><tr><td><span class='eppic-general-info-label-new'>Interface clusters</span></td><td><span class='eppic-general-info-label-value-new'><a href='\") + (com.google.gwt.core.client.GWT.getHostPageBaseURL())) + \"#clusters/\") + (ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getPdbInfo().getPdbCode())) + \"'>\") + (ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getPdbInfo().getInterfaceClusters().size())) + \"</a></span></td></tr></table>\")); else ResultsPanel.informationPanel.assemblyInfoPanel.assembly_info.setHTML(((((((((((((((((\"<table cellpadding=0 cellspacing=0><tr><td width='150px'><span class='eppic-general-info-label-new'>Assemblies</span></td><td><span class='eppic-general-info-label-value-new'><a href='\" + (com.google.gwt.core.client.GWT.getHostPageBaseURL())) + \"#id/\") + (ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getPdbInfo().getPdbCode())) + \"'>\") + (ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getPdbInfo().getAssemblies().size())) + \"</a></span></td></tr><tr><td><span class='eppic-general-info-label-new'>Interfaces</span></td><td><span class='eppic-general-info-label-value-new'>\") + num_interfaces) + \"</span></td></tr><tr><td><span class='eppic-general-info-label-new'>Interface clusters</span></td><td><span class='eppic-general-info-label-value-new'><a href='\") + (com.google.gwt.core.client.GWT.getHostPageBaseURL())) + \"#clusters/\") + (ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getPdbInfo().getPdbCode())) + \"/\") + (ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getSelectedAssemblyId())) + \"/'>\") + (ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getPdbInfo().getInterfaceClusters().size())) + \"</a></span></td></tr></table>\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7557/buggy-version/eppic-wui.src.main.java.ch.systemsx.sybit.crkwebui.client.main.controllers.MainController.java", "BodyUseAPI": [], "Fixed commit": "f732b70798c325f975c34e83855872eb23a32780", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2015-11-03T10:14:43Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((downloader) != null) { downloader.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/934/buggy-version/src.com.elgavi.michael.perlib.AddBook.java", "BodyUseAPI": [], "Fixed commit": "29403c4d2e56e3734e0d55b427ffcb5b47339da7", "Url": "https://api.github.com/repos/michael-elgavi/Perlib", "Date": "2014-03-02T05:10:56Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((enemyType) == (com.majalis.battle.BattleFactory.EnemyEnum.GOBLIN)) && (((climaxCounter) % 5) == 0)) { lust = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7590/buggy-version/core.src.com.majalis.character.EnemyCharacter.java", "BodyUseAPI": [], "Fixed commit": "c5c759d63d66fe034a73c5c30358460e19f339a2", "Url": "https://api.github.com/repos/majalistic/tales-of-androgyny", "Date": "2017-03-19T23:59:11Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((className != null) || (!(className.startsWith(\"org/eclipse\")))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7360/buggy-version/src.main.java.net.jonbell.dacapo.Premain.java", "BodyUseAPI": [], "Fixed commit": "a4cfd67d70f6b10483be6f2291ad90b216bc9ead", "Url": "https://api.github.com/repos/jon-bell/dacapo-eclipse-hacker", "Date": "2017-12-12T01:29:42Z"},
{"Line": "=>1089", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["classDeclaration.getSuperTypeDeclaration().getQualifiedNameStr()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"Error\".equals(superClassQName)) { superClassQName = \"joo.Error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8740/buggy-version/jangaroo.jangaroo-compiler.src.main.java.net.jangaroo.jooc.backend.JsCodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "f902d154f8bff8e6c9b2f4f8333b8ac74710c04b", "Url": "https://api.github.com/repos/CoreMedia/jangaroo-tools", "Date": "2011-07-11T22:06:42Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.swagger) == null) { java.lang.String swaggerSource = org.apache.commons.io.IOUtils.toString(this.getRouter().getResolverMap().resolve(this.swaggerJson)); this.swagger = new io.swagger.parser.SwaggerParser().parse(swaggerSource); this.swaggerUrl = this.swaggerJson; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1803/buggy-version/core.src.main.java.com.predic8.membrane.core.interceptor.swagger.SwaggerRewriterInterceptor.java", "BodyUseAPI": [], "Fixed commit": "50e701b9bafd97e7ceb894953f598da558c1951b", "Url": "https://api.github.com/repos/membrane/service-proxy", "Date": "2015-12-23T11:09:23Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(unescaped)) { output.appender.append(quote); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7109/buggy-version/src.main.java.com.univocity.parsers.csv.CsvParser.java", "BodyUseAPI": [], "Fixed commit": "c884f5357fca8503a3bde761355a9d23d1d55516", "Url": "https://api.github.com/repos/mosoft521/univocity-parsers", "Date": "2017-08-31T22:09:12Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prev) == (quote)) { if (handleUnescapedQuote()) { if ((quoteHandling) == (SKIP_VALUE)) { break; }else { return; } }else { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7109/buggy-version/src.main.java.com.univocity.parsers.csv.CsvParser.java", "BodyUseAPI": [], "Fixed commit": "c884f5357fca8503a3bde761355a9d23d1d55516", "Url": "https://api.github.com/repos/mosoft521/univocity-parsers", "Date": "2017-08-31T22:09:12Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["citu.teknoybuyandselluser.RentItemActivity.findViewById(R.id.txtQuantity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"\".equals(txtQuantity.getText().toString()))) quantity = java.lang.Integer.parseInt(txtQuantity.getText().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3386/buggy-version/app.src.main.java.citu.teknoybuyandselluser.RentItemActivity.java", "BodyUseAPI": ["txtQuantity.getText().toString()", "android.widget.EditText.getText()", "java.lang.Integer.parseInt(txtQuantity.getText().toString())"], "Fixed commit": "7d92920f63a199cb41061f04044b2bcf4b8aed01", "Url": "https://api.github.com/repos/jacqueamaya/tbs_user", "Date": "2016-03-01T03:01:22Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chkAgreeTerms.isChecked()) { android.app.AlertDialog.Builder termsAndConditions = new android.app.AlertDialog.Builder(this); termsAndConditions.setTitle(\"TBS Terms and Conditions\"); termsAndConditions.setMessage((\"USER\" + ((((((((((((((((\"\\n\" + \"1.\\tUser should be a bona fide student of Cebu Institute of Technology University.\\n\") + \"2.\\tUser should register an account in order to use the mobile application.\\n\") + \"3.\\tA user can be a seller, a buyer, a renter, and a donor depending on the transaction he is going to make. \\n\") + \"4.\\tA user receives a certain number of stars as incentive for making a transaction. \") + \"When an item has been bought, the stars that will be given to the owner will be 10% of the price of the item. The stars that will be given to the buyer will also be 10% of the price of the item.\") + \"When an item has been rented, the stars that will be given to the owner will be 10% of the price of the item. The stars that will be given to the renter will also be 10% of the price of the item.\") + \"When a buyer buys an item with discount, he will not be awarded with stars. \") + \"These stars can also be used to get an award which will be coming from the donated items. When a user donates an item, the stars he will receive will be 20% of the stars set by the administrator.\\n\") + \"5.\\tIn every transaction, TBS developers will get a 10% share and the remaining 90% will be for the users. When an item has been bought or rented, 10% of the money will go to the TBS developers and 90% will go to the users. \") + \"In case of unreturned rented items on the set expiration date, penalties will be fined to the renters. The penalty will be 10% of the total payment per day. 10% of the penalty will go to the TBS developers and 90% will go to the user. If the user cannot \") + \"return the rented item 14 days after its expiration date, the user's account will be blocked. This means that the user cannot make any transactions may it be selling, buying, renting or donating. The user's account\") + \"will only be unblocked if he has returned the rented item with its corresponding penalty.\\n\") + \"\\nADMINISTRATOR\\n\") + \"1.\\tThe administrator takes control of the transactions made by the users.\\n\") + \"2.\\tThe administrator has the right to approve or deny requested items for sale, for rent and for donation. \") + \"An item will be approved if it is of good condition and if the information you have entered about the item is true and correct.\\n \"))).setCancelable(false).setPositiveButton(\"Close\", new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int id) { } }); android.app.AlertDialog alert = termsAndConditions.create(); alert.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3386/buggy-version/app.src.main.java.citu.teknoybuyandselluser.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7d92920f63a199cb41061f04044b2bcf4b8aed01", "Url": "https://api.github.com/repos/jacqueamaya/tbs_user", "Date": "2016-03-01T03:01:22Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (holes.isEmpty()) { currentState = th.or.nectec.marlo.PolygonData.State.BOUNDARY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8720/buggy-version/marlo.src.main.java.th.or.nectec.marlo.PolygonData.java", "BodyUseAPI": [], "Fixed commit": "b074b4c50d645549578a11fedf077a3b295633e0", "Url": "https://api.github.com/repos/nectec-opensource/marlo", "Date": "2017-05-16T06:57:18Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (show) panel.add(textPanel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6597/buggy-version/src.dna.visualization.graph.GraphPanel.java", "BodyUseAPI": [], "Fixed commit": "7257eb65a515b0f73fe82597e649f28c9c2d368d", "Url": "https://api.github.com/repos/BenjaminSchiller/DNA", "Date": "2016-08-10T12:04:48Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (show) panel.add(statPanel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6597/buggy-version/src.dna.visualization.graph.GraphPanel.java", "BodyUseAPI": [], "Fixed commit": "7257eb65a515b0f73fe82597e649f28c9c2d368d", "Url": "https://api.github.com/repos/BenjaminSchiller/DNA", "Date": "2016-08-10T12:04:48Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dotIndex == (-1)) { return \"org/sleuthkit/autopsy/images/file-icon.png\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6217/buggy-version/DataModel.src.org.sleuthkit.autopsy.datamodel.FileNode.java", "BodyUseAPI": [], "Fixed commit": "1f6b0b6e7987fd0529c076cd4cf709a890c0ec6b", "Url": "https://api.github.com/repos/Devin148/autopsy", "Date": "2012-07-18T13:51:39Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((token.get(i)) == 'n') && numFlag) { tokenList.addToken(new coffee.project.ValueInt(number)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8365/buggy-version/src.coffee.project.Lexer.java", "BodyUseAPI": [], "Fixed commit": "64201b6babe134121cfca035065a18ad9bb14189", "Url": "https://api.github.com/repos/gurolcay/coffee_lexer", "Date": "2016-11-18T18:48:40Z"},
{"Line": "=>1002", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updatedEntryPosition < 0) { throw new java.lang.IllegalStateException(((\"Page \" + (cacheEntry.getPageIndex())) + \" does not have enough free space to add record content\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4819/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.OPaginatedCluster.java", "BodyUseAPI": [], "Fixed commit": "6a3b53733871af25028c4c5f4fb0baa8412b8139", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2017-02-06T14:22:10Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userToken.getType()) == (TokenType.Session.getId())) { removeUserToken(userToken.getTokenId()); userToken = createUserToken(user, \"\", \"\", \"\", TokenType.Session.getId(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2525/buggy-version/management.server.core.identity-manager.identity-manager-impl.src.main.java.io.subutai.core.identity.impl.IdentityManagerImpl.java", "BodyUseAPI": ["io.subutai.core.identity.impl.IdentityManagerImpl.removeUserToken(userToken.getTokenId())", "io.subutai.core.identity.api.model.UserToken.getTokenId()"], "Fixed commit": "24209b3cb2092465e8cda38cb6293946c6890872", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2016-06-21T13:03:01Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (obj != null) { obj.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1656/buggy-version/src.org.cloudcoder.daemon.IOUtil.java", "BodyUseAPI": ["java.io.Closeable.close()"], "Fixed commit": "8dba4eff3d4b544c207f15a837a1e5fac1c5cb34", "Url": "https://api.github.com/repos/daveho/Daemon", "Date": "2014-04-07T13:33:37Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["message.getContent().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (command[0].equals(\"!unmute\")) { if (mute.contains(message.getGuild().getId())) { mute.remove(message.getGuild().getId()); } return \"I can talk again!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3729/buggy-version/Command.java", "BodyUseAPI": [], "Fixed commit": "d362e41c2cc02d0ee594c601cb10726a35c9df77", "Url": "https://api.github.com/repos/omnicons/ye-olde-botte", "Date": "2017-12-28T03:20:56Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.glowstone.block.ItemTable.getBlock(org.bukkit.Material)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (type != null) type.onGoingToChange(this, oldType, oldData, newType, newData);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7777/buggy-version/src.main.java.net.glowstone.block.GlowBlock.java", "BodyUseAPI": ["net.glowstone.block.blocktype.BlockType.onGoingToChange(net.glowstone.block.GlowBlock,org.bukkit.Material,byte,org.bukkit.Material,byte)"], "Fixed commit": "365cbc1fa248afd53b97aafc4af47409324e11f9", "Url": "https://api.github.com/repos/Tonodus/Glowstone", "Date": "2014-09-13T10:58:58Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (drawable != null) { java.awt.Graphics2D graphics = context.getGraphics(); java.awt.geom.Point2D pos = point.position.getPoint2D(); java.awt.geom.AffineTransform txOrig = graphics.getTransform(); graphics.translate(pos.getX(), pos.getY()); drawable.draw(context); graphics.setTransform(txOrig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/827/buggy-version/gral-core.src.main.java.de.erichseifert.gral.plots.BarPlot.java", "BodyUseAPI": ["de.erichseifert.gral.graphics.Drawable.draw(de.erichseifert.gral.graphics.DrawingContext)"], "Fixed commit": "6b49dfac591884641f41cd6a4eb3fc8a775e0e10", "Url": "https://api.github.com/repos/eseifert/gral", "Date": "2015-04-11T19:52:39Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.seniordesign.wolfpack.quizinator.wifiDirect.ConnectionService.getInstance().mWorkHandler) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1546/buggy-version/app.src.main.java.com.seniordesign.wolfpack.quizinator.wifiDirect.WiFiDirectBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "126ccd17a364a89ed86ac6313c3f91ff702ff1e9", "Url": "https://api.github.com/repos/TeamWolfpack/Quizinator", "Date": "2017-04-13T15:59:32Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.catrobat.catroid.ProjectManager.getInstance().getCurrentProject().getSceneByName(sceneName)) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/9167/buggy-version/catroid.src.org.catrobat.catroid.stage.StageListener.java", "BodyUseAPI": [], "Fixed commit": "ddf17236f54754860a619ab5da5e9d48fe7ad2ac", "Url": "https://api.github.com/repos/loibi93/Catroid", "Date": "2016-06-08T16:15:43Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.vermilion.vcn.app.VCNConfiguration.getGradientSelectionColor()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (sc != null) { addOption(rootElement, VCNConstants.TREE_SELECTION_COLOR, (((((sc.getRed()) + \"-\") + (sc.getGreen())) + \"-\") + (sc.getBlue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6142/buggy-version/vcn.src.ru.vermilion.vcn.app.XmlHandler.java", "BodyUseAPI": ["org.eclipse.swt.graphics.Color.getRed()", "ru.vermilion.vcn.app.XmlHandler.addOption(org.w3c.dom.Element,VCNConstants.TREE_SELECTION_COLOR,(((((sc.getRed()) + \"-\") + (sc.getGreen())) + \"-\") + (sc.getBlue())))", "org.eclipse.swt.graphics.Color.getGreen()", "org.eclipse.swt.graphics.Color.getBlue()"], "Fixed commit": "191e6215b7d656b9c66fcf414610d678b18a32ad", "Url": "https://api.github.com/repos/AlexanderDrobyshevsky/vcn-project", "Date": "2014-05-16T18:59:49Z"},
{"Line": "=>1601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.getNode(container.getNodeId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (node == null) { org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.LOG.info(((((((((\"Container=\" + container) + \" of application=\") + appId) + \" completed with event=\") + event) + \" on a node=\") + (container.getNodeId())) + \". However the node might be already removed by RM.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1783/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.java", "BodyUseAPI": [], "Fixed commit": "f794adde3bb3488d876ebc8de3796956de503e0d", "Url": "https://api.github.com/repos/apache/hadoop", "Date": "2017-09-26T14:07:04Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((null != resultUrl) && (resultUrl.startsWith(\"/\"))) result.setUrl((baseUri + resultUrl));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/807/buggy-version/integ-search-service.src.main.java.org.exoplatform.commons.search.service.UnifiedSearchService.java", "BodyUseAPI": ["org.exoplatform.commons.api.search.data.SearchResult.setUrl(java.lang.String)"], "Fixed commit": "475ec1a5de9c90c09d81153fbd8975cc7d136116", "Url": "https://api.github.com/repos/exodev/integration", "Date": "2013-03-11T04:09:21Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.isClosed()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7442/buggy-version/src.main.java.org.baobab.foodcoapp.fragments.AccountListFragment.java", "BodyUseAPI": [], "Fixed commit": "c89e5f64ba869cdf38affabcfc49d1e850fca863", "Url": "https://api.github.com/repos/Kornkammer/foodcoapp", "Date": "2016-05-17T18:08:38Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hand0 == (Hand.UNKNOWN)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4455/buggy-version/src.me.kukkii.janken.Judge.java", "BodyUseAPI": [], "Fixed commit": "9aeb8191fe217f7d0a72c27917b134172cb3cb52", "Url": "https://api.github.com/repos/cookieahaha/JankenAndroid", "Date": "2012-07-24T04:17:06Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.insertWithOnConflict(java.lang.String,<nulltype>,android.content.ContentValues,SQLiteDatabase.CONFLICT_IGNORE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ret < 0) { LogUtil.avlog.e((\"failed to insert Message table. values=\" + (values.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3992/buggy-version/avoscloud-push.src.main.java.com.avos.avoscloud.im.v2.AVIMMessageStorage.java", "BodyUseAPI": [], "Fixed commit": "2cb4c22ad9bfc9c237ebad521458375dfdce6ebf", "Url": "https://api.github.com/repos/jwfing/android-sdk-all", "Date": "2017-11-14T14:22:12Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tikal.share.MyListFragment.VideoListAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((video.getThumbnailBmp()) != null) { imageView.setImageBitmap(video.getThumbnailBmp()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4685/buggy-version/TikalShare.src.com.tikal.share.MyListFragment.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(video.getThumbnailBmp())", "com.tikal.share.youtube.YoutubeVideoInfo.getThumbnailBmp()"], "Fixed commit": "72dafe9892eabac20bbb9aa3f17b5ce792785032", "Url": "https://api.github.com/repos/mhant/tikal_share_android", "Date": "2013-06-30T15:05:24Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opengis.feature.simple.SimpleFeatureType.getGeometryDescriptor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (geometryDescriptor.getCoordinateReferenceSystem().getCoordinateSystem().getAxis(0).getDirection().equals(AxisDirection.NORTH)) { coordinate = new com.vividsolutions.jts.geom.Coordinate(lng, lat); }else { coordinate = new com.vividsolutions.jts.geom.Coordinate(lat, lng); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3465/buggy-version/modules.unsupported.csv.src.main.java.org.geotools.data.csv.parse.CSVLatLonStrategy.java", "BodyUseAPI": [], "Fixed commit": "885c53f369bbed29e3ad2f56968b0e06da8f5246", "Url": "https://api.github.com/repos/ianturton/geotools", "Date": "2017-08-03T10:02:44Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.wb.nextgenlibrary.util.utils.StringHelper.isEmpty(thisExtra.getPosterImgUrl()))) com.wb.nextgenlibrary.util.utils.NextGenGlide.load(getActivity(), thisExtra.getPosterImgUrl()).fitCenter().into(thumbnailImg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7359/buggy-version/src.com.wb.nextgenlibrary.fragment.NextGenExtraMainTableFragment.java", "BodyUseAPI": ["com.wb.nextgenlibrary.util.utils.NextGenGlide.load(getActivity(), thisExtra.getPosterImgUrl()).fitCenter()", "com.wb.nextgenlibrary.util.utils.NextGenGlide.load(getActivity(),thisExtra.getPosterImgUrl())", "com.wb.nextgenlibrary.data.MovieMetaData.ExperienceData.getPosterImgUrl()", "com.wb.nextgenlibrary.util.utils.NextGenGlide.load(getActivity(), thisExtra.getPosterImgUrl()).fitCenter().into(android.widget.ImageView)"], "Fixed commit": "be7f11fa5790e7e4752b4bc8084845fbcbd7b24c", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2017-02-07T18:06:56Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ast.getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.METHOD_CALL)) { resultHandler = createMethodCallHandler(indentCheck, ast, parent); }else { final java.lang.reflect.Constructor<?> handlerCtor = typeHandlers.get(ast.getType()); resultHandler = ((com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler) (com.puppycrawl.tools.checkstyle.utils.CommonUtils.invokeConstructor(handlerCtor, indentCheck, ast, parent))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1836/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.reflect.Constructor<?>>.get(ast.getType())", "com.puppycrawl.tools.checkstyle.utils.CommonUtils.invokeConstructor(java.lang.reflect.Constructor<?>,com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck,com.puppycrawl.tools.checkstyle.api.DetailAST,com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler)", "com.puppycrawl.tools.checkstyle.api.DetailAST.getType()", "com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory.createMethodCallHandler(com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck,com.puppycrawl.tools.checkstyle.api.DetailAST,com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler)"], "Fixed commit": "5478613082bac0329d25cffcfae5fab219d25118", "Url": "https://api.github.com/repos/alex-zuy/checkstyle", "Date": "2015-08-26T21:42:10Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.chancorp.tabactivity.ServerComms.fd.isRegistered()) sendGET(\"Parse Family Data\"); else android.util.Log.d(\"Familink\", \"ServerComms>refreshData() called, but it's not registered - ignoring request.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2240/buggy-version/app.src.main.java.com.chancorp.tabactivity.ServerComms.java", "BodyUseAPI": [], "Fixed commit": "50ea3124fc372a6ead78b3c92f42432c82e2239f", "Url": "https://api.github.com/repos/CSNE/FamiLink", "Date": "2015-10-18T16:25:56Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(org.apache.commons.lang.exception.ExceptionUtils.getStackTrace(ex))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wstxExMatcher.find()) { consumeInputOnOmException(synCtx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8598/buggy-version/modules.core.src.main.java.org.apache.synapse.mediators.AbstractListMediator.java", "BodyUseAPI": [], "Fixed commit": "968baa03f804d329a78cdee75a9fc12b2fcafff5", "Url": "https://api.github.com/repos/wso2/wso2-synapse", "Date": "2016-07-13T10:00:29Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ti) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6831/buggy-version/src.hk.org.ha.fmk.promotionhelper.ui.serverlog.view.widget.AccessLogFileTreePanel.java", "BodyUseAPI": [], "Fixed commit": "140e0d58f75d867197debf09195affa666290343", "Url": "https://api.github.com/repos/headmo/PromotionHelper", "Date": "2015-04-02T07:56:16Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (memo.isEmpty()) { android.widget.Toast.makeText(context, \"Empty Memo\", Toast.LENGTH_SHORT).show(); return; }else { android.content.Intent sendEmailSummary = new android.content.Intent(android.content.Intent.ACTION_SENDTO); sendEmailSummary.setData(android.net.Uri.parse(\"mailto:\")); sendEmailSummary.putExtra(Intent.EXTRA_SUBJECT, \"MEMO- To-Do List App\"); sendEmailSummary.putExtra(Intent.EXTRA_TEXT, memo); if ((sendEmailSummary.resolveActivity(context.getPackageManager())) != null) { context.startActivity(sendEmailSummary); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6066/buggy-version/app.src.main.java.com.example.android.todolistgh.Connectivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(Intent.EXTRA_TEXT,java.lang.String)"], "Fixed commit": "644d8ff4eab2e391f5abed7b25dba858a10cc95c", "Url": "https://api.github.com/repos/sidgvpta/ToDoList", "Date": "2015-12-04T14:47:12Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statement2) != null) { i = statement2.printWithLabels(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1747/buggy-version/program_analysis.src.ast.statement.SeqStatement.java", "BodyUseAPI": [], "Fixed commit": "f1b9ae4f76ba6868de9018211486c9d3a20656c0", "Url": "https://api.github.com/repos/NikitaMartynov/ProgramAnalysis", "Date": "2013-12-01T22:15:34Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeE < (java.lang.Long.MAX_VALUE)) { timeE -= ((closure.equals(Petri.PNMLreader.OPEN)) || (closure.equals(Petri.PNMLreader.CLOSEDOPEN))) ? 1 : 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2897/buggy-version/src.Petri.PNMLreader.java", "BodyUseAPI": [], "Fixed commit": "474103512e42474a7dba975873048250ab52edfd", "Url": "https://api.github.com/repos/airabinovich/java_petri_concurrency_monitor", "Date": "2016-10-06T14:42:05Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enemy.getShipTarget()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2189/buggy-version/jars.src.data.shipsystems.scripts.ai.ilk_MinelayerAI.java", "BodyUseAPI": [], "Fixed commit": "b6c9e400e4b4f97fa45f0ba5bb43558c3432226c", "Url": "https://api.github.com/repos/jstaf/mayorate", "Date": "2015-08-09T09:58:14Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sortedArray.size()) == 0) return (-1) - 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3679/buggy-version/diqube-data.src.main.java.org.diqube.data.types.lng.array.CompressedLongArrayUtil.java", "BodyUseAPI": [], "Fixed commit": "c6c4a24228413fb35a230a2b233a2e4bec6a18c0", "Url": "https://api.github.com/repos/diqube/diqube", "Date": "2015-11-04T21:34:01Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getInventory().getItem(event.getSlot())) != null) { onInventoryClick(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3248/buggy-version/src.main.java.co.insou.gui.page.GUIPage.java", "BodyUseAPI": ["co.insou.gui.page.GUIPage<P>.onInventoryClick(org.bukkit.event.inventory.InventoryClickEvent)"], "Fixed commit": "a1a5eb935c5364ffb3f9c9a18f1f087ed3420fc3", "Url": "https://api.github.com/repos/insou22/gui", "Date": "2016-07-16T06:23:23Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.SkinPair.find(\"attachedSkin = ? AND name = ?\", this, key).first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (s == null) { addParam(key, \"\"); s = models.SkinPair.find(\"attachedSkin = ? AND name = ?\", this, key).first(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8194/buggy-version/app.models.Skin.java", "BodyUseAPI": [], "Fixed commit": "f1bbaa85a798f7e25aea68c84e8222fef9d90c99", "Url": "https://api.github.com/repos/kschloss/OpenBook", "Date": "2012-04-11T15:55:39Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text == null) text = java.util.Calendar.getInstance().getTime().toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4124/buggy-version/app.src.main.java.pt.lsts.alvii.ImcLocation.java", "BodyUseAPI": [], "Fixed commit": "fb9d7b274546efb9f1cdd115b6487a45431db757", "Url": "https://api.github.com/repos/pmfg/ALVIi", "Date": "2017-09-01T14:55:16Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.esa.beam.framework.dataio.ProductIO.readProduct(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((product.getStartTime()) == null) { final java.lang.String productName = product.getName(); try { final org.esa.beam.framework.datamodel.ProductData[] utcs = org.esa.beam.glob.core.timeseries.datamodel.DateRangeParser.tryToGetDateRange(productName); product.setStartTime(utcs[0]); product.setEndTime(utcs[1]); return product; } catch (java.lang.IllegalArgumentException e) { org.esa.beam.util.logging.BeamLogManager.getSystemLogger().log(java.util.logging.Level.WARNING, ((\"Product '\" + productName) + \"' does not contain readable time information.\"), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4233/buggy-version/glob-core.src.main.java.org.esa.beam.glob.core.timeseries.datamodel.ProductLocationType.java", "BodyUseAPI": ["org.esa.beam.framework.datamodel.Product.setStartTime(utcs[0])", "org.esa.beam.framework.datamodel.Product.getName()", "org.esa.beam.framework.datamodel.Product.setEndTime(utcs[1])"], "Fixed commit": "15871527db4fb92230b48165d15fc61fd895eaf7", "Url": "https://api.github.com/repos/bcdev/glob-box", "Date": "2011-11-10T14:36:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prevSet == null) { throw new com.tmarsteel.jcli.RuleNotMetException(((errorMessage) != null ? errorMessage : \"Either one of these options/flags must be set.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6022/buggy-version/src.com.tmarsteel.jcli.rule.XorOptionsRule.java", "BodyUseAPI": [], "Fixed commit": "33e8bfb5bcc0b102a0facb47eb1092c2e0daeaa1", "Url": "https://api.github.com/repos/tmarsteel/jcli", "Date": "2015-09-09T22:26:41Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(option2)) { add(option2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4949/buggy-version/src.main.java.se.trixon.jota.shared.task.ExcludeSection.java", "BodyUseAPI": ["se.trixon.jota.shared.task.ExcludeSection.add(java.lang.String)"], "Fixed commit": "861a7ad49292c6d44ea48ba3662e7b96eca7aeb4", "Url": "https://api.github.com/repos/trixon/java-jotasync", "Date": "2016-10-23T06:33:54Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (parent == null) { return java.nio.file.Paths.get(newName); }else { return parent.resolve(newName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5454/buggy-version/src.org.sugarj.common.FileCommands.java", "BodyUseAPI": ["java.nio.file.Path.resolve(java.lang.String)"], "Fixed commit": "2408b62dbff7383fd0cfd551a89d209565fff925", "Url": "https://api.github.com/repos/sugar-lang/common", "Date": "2015-06-18T16:39:04Z"},
{"Line": "=>630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getParent()) == null) { return java.nio.file.Paths.get(newName); }else { return p.getParent().resolve(newName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5454/buggy-version/src.org.sugarj.common.FileCommands.java", "BodyUseAPI": ["java.nio.file.Path.getParent()", "java.nio.file.Path.resolve(java.lang.String)"], "Fixed commit": "2408b62dbff7383fd0cfd551a89d209565fff925", "Url": "https://api.github.com/repos/sugar-lang/common", "Date": "2015-06-18T16:39:04Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressList) != null) { progressList.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/64/buggy-version/app.src.main.java.com.willnjames.android.morgbook.ProgressActivity.java", "BodyUseAPI": [], "Fixed commit": "ac14fc140c38beee7fe8b4a1308d0c1a7f8e6916", "Url": "https://api.github.com/repos/wsoehendra/MorgBook", "Date": "2016-10-24T11:39:29Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index.containsKey(position)) { duplicates.add(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6077/buggy-version/genepi-io.src.genepi.io.legend.LegendFileReader.java", "BodyUseAPI": ["java.util.Set<java.lang.Integer>.add(int)"], "Fixed commit": "357bd4894d7e905f92d860566bee4a340f795cf7", "Url": "https://api.github.com/repos/genepi/genepi-libs", "Date": "2014-10-18T20:50:41Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (duplicates.contains(position)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6077/buggy-version/genepi-io.src.genepi.io.legend.LegendFileReader.java", "BodyUseAPI": [], "Fixed commit": "357bd4894d7e905f92d860566bee4a340f795cf7", "Url": "https://api.github.com/repos/genepi/genepi-libs", "Date": "2014-10-18T20:50:41Z"},
{"Line": "=>1138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i == ((str.length()) - 1)) && (start >= 0)) { list.add(java.lang.Integer.valueOf(str.substring(start))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6367/buggy-version/src.java.org.datanucleus.util.TypeConversionHelper.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "java.lang.String.substring(int)", "java.util.ArrayList.add(java.lang.Integer)"], "Fixed commit": "e5a165a14b0380c99c0ab1ac205076790059ef3f", "Url": "https://api.github.com/repos/datanucleus/datanucleus-core", "Date": "2014-03-14T15:06:58Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["processing.data.FloatDict.maxIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == (-1)) { return java.lang.Float.NaN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8694/buggy-version/core.src.processing.data.FloatDict.java", "BodyUseAPI": [], "Fixed commit": "fb41ce492e60f38e00070eb765bc07fa14283fb1", "Url": "https://api.github.com/repos/joelmoniz/processing", "Date": "2014-07-25T14:21:08Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["processing.data.FloatDict.minIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == (-1)) { return java.lang.Float.NaN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8694/buggy-version/core.src.processing.data.FloatDict.java", "BodyUseAPI": [], "Fixed commit": "fb41ce492e60f38e00070eb765bc07fa14283fb1", "Url": "https://api.github.com/repos/joelmoniz/processing", "Date": "2014-07-25T14:21:08Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["processing.data.FloatDict.minIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == (-1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8694/buggy-version/core.src.processing.data.FloatDict.java", "BodyUseAPI": [], "Fixed commit": "fb41ce492e60f38e00070eb765bc07fa14283fb1", "Url": "https://api.github.com/repos/joelmoniz/processing", "Date": "2014-07-25T14:21:08Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["processing.data.FloatDict.maxIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == (-1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8694/buggy-version/core.src.processing.data.FloatDict.java", "BodyUseAPI": [], "Fixed commit": "fb41ce492e60f38e00070eb765bc07fa14283fb1", "Url": "https://api.github.com/repos/joelmoniz/processing", "Date": "2014-07-25T14:21:08Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((find.equals(\"c\")) && ((args.length) == 2)) find = args[1].toLowerCase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3377/buggy-version/src.us.talabrek.ultimateskyblock.ChallengesCommand.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "83c5814bf75a85ee98aa296e17fc935e03360668", "Url": "https://api.github.com/repos/confuser/uSkyBlock", "Date": "2013-10-22T19:33:24Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activity instanceof com.israelferrer.effectiveandroid.ui.activities.TopImagesListActivity) { navigationView.getMenu().getItem(1).setChecked(true); }else if (activity instanceof com.israelferrer.effectiveandroid.ui.activities.TopTestListActivity) { navigationView.getMenu().getItem(2).setChecked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2656/buggy-version/app.src.main.java.com.israelferrer.effectiveandroid.ui.ScreenContainerImpl.java", "BodyUseAPI": [], "Fixed commit": "3ad1ce84af4c6560e9f14b7851cda6926e3f7719", "Url": "https://api.github.com/repos/Tikitoo/EffectiveAndroid", "Date": "2016-02-25T08:23:59Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(activity instanceof com.israelferrer.effectiveandroid.ui.activities.TopTestListActivity)) { intent = new android.content.Intent(activity, com.israelferrer.effectiveandroid.ui.activities.TopTestListActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2656/buggy-version/app.src.main.java.com.israelferrer.effectiveandroid.ui.ScreenContainerImpl.java", "BodyUseAPI": [], "Fixed commit": "3ad1ce84af4c6560e9f14b7851cda6926e3f7719", "Url": "https://api.github.com/repos/Tikitoo/EffectiveAndroid", "Date": "2016-02-25T08:23:59Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gift.getGiftId()) != (-1)) { android.util.Log.i(com.honu.giftwise.EditGiftFragment.LOG_TAG, (\"Saving image to cache for giftId: \" + (gift.getGiftId()))); mImageCache.updateBitmapToMemoryCache(((gift.getGiftId()) + \"\"), new android.graphics.drawable.BitmapDrawable(imageView.getResources(), resizedBitmap)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5072/buggy-version/app.src.main.java.com.honu.giftwise.EditGiftFragment.java", "BodyUseAPI": ["com.honu.giftwise.data.GiftImageCache.updateBitmapToMemoryCache(((gift.getGiftId()) + \"\"),android.graphics.drawable.BitmapDrawable)", "com.honu.giftwise.data.Gift.getGiftId()", "com.honu.giftwise.data.Gift.getGiftId()", "android.util.Log.i(java.lang.String,(\"Saving image to cache for giftId: \" + (gift.getGiftId())))"], "Fixed commit": "d554e3ec146aa2e7966781c7041f24765d9ed64f", "Url": "https://api.github.com/repos/bdiegel/android-giftwise", "Date": "2015-04-07T01:05:03Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.equals(\"-1\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5072/buggy-version/app.src.main.java.com.honu.giftwise.data.GiftImageCache.java", "BodyUseAPI": [], "Fixed commit": "d554e3ec146aa2e7966781c7041f24765d9ed64f", "Url": "https://api.github.com/repos/bdiegel/android-giftwise", "Date": "2015-04-07T01:05:03Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == h) { x = (w / 2) - (s / 2); }else { y = (h / 2) - (s / 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/977/buggy-version/src.gui.ScriptDisplayFrame.java", "BodyUseAPI": [], "Fixed commit": "7d7f87cc0be5a85dd09c3ed1e842559e711753db", "Url": "https://api.github.com/repos/funkiben/RoboScripter", "Date": "2015-10-30T20:14:01Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (rs.getString(\"gender\"))) && (!(rs.getString(\"gender\").isEmpty()))) { cOwner.setGender((rs.getString(\"gender\").equals(\"1\") ? \"Male\" : \"Female\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2252/buggy-version/wcms.wcms-connection.src.main.java.org.egov.wcms.transaction.repository.rowmapper.WaterConnectionRowMapper.java", "BodyUseAPI": ["org.egov.wcms.transaction.model.ConnectionOwner.setGender((rs.getString(\"gender\").equals(\"1\") ? \"Male\" : \"Female\"))", "java.sql.ResultSet.getString(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "2436fc2ce5d7e3d028aa1b4c3bafd0aa76f54ba2", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-08-28T11:14:08Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((distarr[k][i]) == 999) && ((maparray[k][i]) > 1)) && ((maparray[k][i]) < 9999)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7290/buggy-version/src.MapModel.java", "BodyUseAPI": [], "Fixed commit": "87573c4c81e4b8fc0aade0bd430c91476665b4e1", "Url": "https://api.github.com/repos/umerkk/TD-MapMaker", "Date": "2016-03-16T07:15:36Z"},
{"Line": "=>803", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.plus.ContextMenuAdapter.getItemId(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (standardId == (R.string.context_menu_item_intermediate_point)) { targets.navigateToPoint(new net.osmand.data.LatLon(latitude, longitude), true, targets.getIntermediatePoints().size()); net.osmand.plus.activities.IntermediatePointsDialog.openIntermediatePointsDialog(mapActivity); }else if (standardId == (R.string.context_menu_item_destination_point)) { getMyApplication().getTargetPointsHelper().navigateToPoint(new net.osmand.data.LatLon(latitude, longitude), true, (-1)); if ((!(routingHelper.isRouteBeingCalculated())) && (!(routingHelper.isRouteCalculated()))) { getDirections(null, new net.osmand.data.LatLon(latitude, longitude), true); } }else if (standardId == (R.string.context_menu_item_share_location)) { shareLocation(latitude, longitude, mapActivity.getMapView().getZoom()); }else if (standardId == (R.string.context_menu_item_add_favorite)) { addFavouritePoint(latitude, longitude); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6156/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivityActions.java", "BodyUseAPI": [], "Fixed commit": "9b37143f4a896d1c75c54db1f60f2c525141f069", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2013-06-09T17:36:40Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vulnerableComponents > 0) { ratio = ((double) (vulnerabilities)) / vulnerableComponents; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8242/buggy-version/sonar-dependency-check-plugin.src.main.java.org.sonar.dependencycheck.base.DependencyCheckMetrics.java", "BodyUseAPI": [], "Fixed commit": "943bec204906708a504e495bdd7c1f4eaa5783cb", "Url": "https://api.github.com/repos/stevespringett/dependency-check-sonar-plugin", "Date": "2015-06-19T14:57:02Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view_id == null) data = new org.jgroups.protocols.PingData(local_addr, null, false, java.util.UUID.get(local_addr), java.util.Arrays.asList(physical_addr));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/247/buggy-version/src.org.jgroups.protocols.TCPGOSSIP.java", "BodyUseAPI": [], "Fixed commit": "02f83c762ab2af0215ba1b12cd48b5b323409942", "Url": "https://api.github.com/repos/belaban/JGroups", "Date": "2013-01-23T12:10:03Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!val) javax.swing.JOptionPane.showMessageDialog(null, \"No hay informacion\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5596/buggy-version/src.mysql.LoadDriver.java", "BodyUseAPI": [], "Fixed commit": "3705ec0df6bb9cc0f64deb5733af757445446a7a", "Url": "https://api.github.com/repos/afcajamarcar/FormulariosUAPA", "Date": "2017-09-26T20:44:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!val) javax.swing.JOptionPane.showMessageDialog(null, \"No hay informacion\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5596/buggy-version/src.mysql.LoadDriver.java", "BodyUseAPI": [], "Fixed commit": "3705ec0df6bb9cc0f64deb5733af757445446a7a", "Url": "https://api.github.com/repos/afcajamarcar/FormulariosUAPA", "Date": "2017-09-26T20:44:47Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((min) && (countAcum > (limit))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4473/buggy-version/src.core.termination.MultiSpriteCounter.java", "BodyUseAPI": [], "Fixed commit": "8e37f4b51787d72573fa1c880361a24abbfef142", "Url": "https://api.github.com/repos/EssexUniversityMCTS/gvgai", "Date": "2016-02-24T22:40:18Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (log.isDebugEnabled()) { log.debug(\"No JWT token found in '{}' {} header\", ((jwtUrlParameter) == null ? jwtHeaderName : jwtUrlParameter), ((jwtUrlParameter) == null ? \"header\" : \"url parameter\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4055/buggy-version/src.main.java.com.floragunn.dlic.auth.http.jwt.HTTPJwtAuthenticator.java", "BodyUseAPI": ["org.elasticsearch.common.logging.ESLogger.debug(java.lang.String,((jwtUrlParameter) == null ? jwtHeaderName : jwtUrlParameter),((jwtUrlParameter) == null ? \"header\" : \"url parameter\"))"], "Fixed commit": "9180a3f5a59963f8975ecb04e566e2ca81a89a95", "Url": "https://api.github.com/repos/floragunncom/search-guard-authbackend-jwt", "Date": "2017-02-19T17:07:38Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currItems) != 4) { menu.setSelected(gui.right_side.ViewsPanel.TEXT_VIEW, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/489/buggy-version/src.gui.right_side.ViewsPanel.java", "BodyUseAPI": [], "Fixed commit": "cdc176bbabbe26acc0d2960846664292874141c7", "Url": "https://api.github.com/repos/nbzor/XMLmanager", "Date": "2014-05-17T11:31:44Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currItems) != 1) { menu.setSelected(gui.right_side.ViewsPanel.TREE_VIEW, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/489/buggy-version/src.gui.right_side.ViewsPanel.java", "BodyUseAPI": [], "Fixed commit": "cdc176bbabbe26acc0d2960846664292874141c7", "Url": "https://api.github.com/repos/nbzor/XMLmanager", "Date": "2014-05-17T11:31:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currItems) != 2) { menu.setSelected(gui.right_side.ViewsPanel.XML_VIEW, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/489/buggy-version/src.gui.right_side.ViewsPanel.java", "BodyUseAPI": [], "Fixed commit": "cdc176bbabbe26acc0d2960846664292874141c7", "Url": "https://api.github.com/repos/nbzor/XMLmanager", "Date": "2014-05-17T11:31:44Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isTeacherButtonAvailable) == true) asyncTeacherlisttask.AddtoList(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6860/buggy-version/src.org.wmt.StudentActivity.java", "BodyUseAPI": [], "Fixed commit": "6582723883737089da4805eebb434f69e6280f24", "Url": "https://api.github.com/repos/WheresMyTeacher/WheresMyTeacher", "Date": "2014-05-22T10:57:15Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["webapp.datastoreObjects.User.getLoginStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status) { user.setLoginStatus(false); ofy().save().entity(user).now(); }else { user.setLoginStatus(true); ofy().save().entity(user).now(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/679/buggy-version/AdviseMe.src.webapp.checkServlets.changeLoginStatus.java", "BodyUseAPI": [], "Fixed commit": "68b7058a38071e72cfe3e60064918c7a3aae919a", "Url": "https://api.github.com/repos/dsands12/AdviseMe", "Date": "2014-03-01T09:29:53Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4733/buggy-version/app.src.main.java.com.mda.school.activities.DashboardActivity.java", "BodyUseAPI": [], "Fixed commit": "293492e81366b9fd618e03066da0408ed10253f8", "Url": "https://api.github.com/repos/mda06/Where-is-my-car", "Date": "2017-11-23T13:14:40Z"},
{"Line": "=>1211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dashbuilder.dataprovider.sql.SQLDataSetProvider.LookupProcessor.calculateDateInterval(org.dashbuilder.dataset.group.ColumnGroup)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (DateIntervalType.DAY_OF_WEEK.equals(intervalType)) { throw new java.lang.IllegalArgumentException(\"Group by DAY_OF_WEEK not supported in SQL data sets\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7030/buggy-version/dashbuilder-backend.dashbuilder-dataset-sql.src.main.java.org.dashbuilder.dataprovider.sql.SQLDataSetProvider.java", "BodyUseAPI": [], "Fixed commit": "2c954adbedaba8eea9bed693a3e8e900896077a8", "Url": "https://api.github.com/repos/dashbuilder/dashbuilder", "Date": "2017-04-26T14:02:52Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.isAlive) { e.x = arrayinput.ArrayInput.checkEnemyPosition(arrayinput.ArrayInput.player.x, e.x); e.y = arrayinput.ArrayInput.checkEnemyPosition(arrayinput.ArrayInput.player.y, e.y); }else { e.x = 0; e.y = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6719/buggy-version/src.arrayinput.ArrayInput.java", "BodyUseAPI": ["arrayinput.ArrayInput.checkEnemyPosition(arrayinput.ArrayInput.player.x,e.x)"], "Fixed commit": "205bceac52f20c6a47209948ea1692746d3a552b", "Url": "https://api.github.com/repos/ShadowX74/Shen_7_ArrayGame", "Date": "2016-05-19T20:33:31Z"},
{"Line": "=>1222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ch >= 127) && (ch <= 160)) { specialCount++; lastSpecialIndex = i; lastSpecial = ch; newcount += 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4605/buggy-version/src.main.java.com.alibaba.fastjson.serializer.SerializeWriter.java", "BodyUseAPI": [], "Fixed commit": "1c19710590a8bfd2729a49435195fe2394fac9fa", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2013-12-30T12:26:12Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchQuery) != null) { intent.putExtra(\"searchQuery\", searchQuery); }else { intent.putExtra(\"searchQuery\", searchString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7207/buggy-version/app.src.main.java.com.arnastofnun.idordabanki.ResultsScreen.java", "BodyUseAPI": [], "Fixed commit": "ea1c1418a35f65f10e189f8c81790056039290cb", "Url": "https://api.github.com/repos/arnastofnun/Ordabanki_for_android", "Date": "2015-03-09T23:10:24Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.Exchange.getProperty(CxfConstants.DATA_FORMAT_PROPERTY,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(DataFormat.CXF_MESSAGE.equals(dataFormat))) { for (java.util.Map.Entry<java.lang.String, javax.activation.DataHandler> entry : camelExchange.getIn().getAttachments().entrySet()) { if (attachments == null) { attachments = new java.util.HashSet<org.apache.cxf.message.Attachment>(); } org.apache.cxf.attachment.AttachmentImpl attachment = new org.apache.cxf.attachment.AttachmentImpl(entry.getKey(), entry.getValue()); attachment.setXOP(isXop); attachments.add(attachment); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3209/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.DefaultCxfBinding.java", "BodyUseAPI": [], "Fixed commit": "1ddb0d34e3124ec7deadd6ffbd8c393d359c5247", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-05-29T13:25:11Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.available()) == 0) { if (image.exists()) { image.delete(); java.io.File avatarDirectory = new java.io.File(com.stratelia.webactiv.util.FileRepositoryManager.getAvatarPath()); avatarDirectory.delete(); } }else { image.getParentFile().mkdir(); com.silverpeas.util.FileUtil.writeFile(image, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2811/buggy-version/war-core.src.main.java.com.silverpeas.directory.servlets.ImageProfil.java", "BodyUseAPI": ["com.silverpeas.util.FileUtil.writeFile(java.io.File,java.io.InputStream)"], "Fixed commit": "2f7b10652c491c760449edafbeb4d23d9661b13b", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Core", "Date": "2013-06-17T15:16:02Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5345/buggy-version/app.src.main.java.prada.lab.android.pingo.fragment.TabsFragment.java", "BodyUseAPI": [], "Fixed commit": "2024e9575e5f4fe851f38f2be141f0f9612d8300", "Url": "https://api.github.com/repos/bearprada/Pingo-Android", "Date": "2017-07-19T15:28:25Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getHeader().getPosition()) > 0) { this.currentPosition = event.getHeader().getPosition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1082/buggy-version/src.main.java.com.google.code.or.binlog.impl.AbstractBinlogParser.java", "BodyUseAPI": ["com.google.code.or.binlog.BinlogEventV4.getHeader()", "event.getHeader().getPosition()"], "Fixed commit": "79a41722272288e61a7299bffdb08c39728d9dcd", "Url": "https://api.github.com/repos/vishalputta/open-replicator", "Date": "2016-01-04T12:16:24Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.opengl.TutorialInfo.getArrow()", "com.example.android.opengl.TutorialInfo.getNumber()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!((number.equals(\"none\")) && (arrow.equals(\"none\")))) { if (!(number.equals(\"none\"))) { if (number.equals(tiles[mTutorialInfo.getActiveTile()].getNumber())) { correctNumber = true; } } if (!(arrow.equals(\"none\"))) { if (arrow.equals(tiles[mTutorialInfo.getActiveTile()].getArrow())) { correctArrow = true; } } }else { correctNumber = true; correctArrow = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4212/buggy-version/android.src.com.example.android.opengl.TutorialBoard.java", "BodyUseAPI": ["java.lang.String.equals(tiles[mTutorialInfo.getActiveTile()].getNumber())", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(tiles[mTutorialInfo.getActiveTile()].getArrow())", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "4ff483d112f21985276bdebefdf8ce9b912f6ad8", "Url": "https://api.github.com/repos/liPATHolan/RooksWalkPuzzle", "Date": "2013-09-29T17:22:18Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.Message.getHeader(HttpHeaders.Names.CONNECTION,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (connection == null) { connection = message.getExchange().getProperty(HttpHeaders.Names.CONNECTION, java.lang.String.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2285/buggy-version/components.camel-netty-http.src.main.java.org.apache.camel.component.netty.http.DefaultNettyHttpBinding.java", "BodyUseAPI": [], "Fixed commit": "48653d33f3ace8b509624598f02743ebbdc60704", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-03-09T10:07:53Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.handler.codec.http.HttpHeaders.isKeepAlive(org.jboss.netty.handler.codec.http.HttpRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!keepAlive) { exchange.setProperty(HttpHeaders.Names.CONNECTION, HttpHeaders.Values.CLOSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2285/buggy-version/components.camel-netty-http.src.main.java.org.apache.camel.component.netty.http.handlers.HttpServerChannelHandler.java", "BodyUseAPI": [], "Fixed commit": "48653d33f3ace8b509624598f02743ebbdc60704", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-03-09T10:07:53Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((myDataBase) == null) || (!(myDataBase.isOpen()))) { super.openDataBase(); int old = myDataBase.getVersion(); android.util.Log.d(this.getClass().getName(), (\"Old db version: \" + old)); if (old < (ca.unbc.cpsc472.mynextphone.database.PhoneDataBaseHelper.DATABASE_VERSION)) { onUpgrade(myDataBase, old, ca.unbc.cpsc472.mynextphone.database.PhoneDataBaseHelper.DATABASE_VERSION); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6349/buggy-version/src.ca.unbc.cpsc472.mynextphone.database.PhoneDataBaseHelper.java", "BodyUseAPI": ["ca.unbc.cpsc472.mynextphone.database.PhoneDataBaseHelper.getVersion()", "ca.unbc.cpsc472.mynextphone.database.PhoneDataBaseHelper.onUpgrade(ca.unbc.cpsc472.mynextphone.database.PhoneDataBaseHelper,int,int)"], "Fixed commit": "318fe6c4bee88bdefb705a55c1e921f2193c745e", "Url": "https://api.github.com/repos/danielfinke/cpsc472", "Date": "2014-04-01T17:07:12Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nodeToPathCaseId.containsKey(n)) { java.util.HashSet<java.lang.String> set = nodeToPathCaseId.get(n); if ((set.size()) == 1) { java.util.Iterator<java.lang.String> it = set.iterator(); return it.next(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1106/buggy-version/src.binevi.View.PathCaseViewerMetabolomics.java", "BodyUseAPI": ["java.util.HashMap<binevi.View.Node, java.util.HashSet<java.lang.String>>.get(binevi.View.Node)"], "Fixed commit": "353b54269f9e278623f73a0350d8714c69638ff2", "Url": "https://api.github.com/repos/bxm156/ReconGraphViewer", "Date": "2013-03-10T20:55:44Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.List<voldemort.cluster.Node>>.get(this.clientZone.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (zoneIDNodeList != null) { nodes.addAll(zoneIDNodeList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6005/buggy-version/src.java.voldemort.store.routed.action.GetAllConfigureNodes.java", "BodyUseAPI": ["java.util.List<voldemort.cluster.Node>.addAll(java.util.List<voldemort.cluster.Node>)"], "Fixed commit": "5f796e8c6742ea101dc2d530925dc5e1b629f988", "Url": "https://api.github.com/repos/abh1nay/voldemort", "Date": "2013-06-19T22:56:56Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapla.entities.configuration.Preferences.getEntry(RaplaComponent.PLUGIN_CONFIG)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (pluginConfig != null) { pluginClassConfig = pluginConfig.find(\"class\", className); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2965/buggy-version/src.org.rapla.gui.DefaultPluginOption.java", "BodyUseAPI": ["org.rapla.entities.configuration.RaplaConfiguration.find(java.lang.String,java.lang.String)"], "Fixed commit": "f7c8f8ff6c676dc1ade02696e6d42dd36d1100a4", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2015-02-04T19:31:22Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((recID.equals(\"\")) || (recID == null)) { this.InstID = 0; }else { this.InstID = java.lang.Integer.parseInt(recID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/9119/buggy-version/src.com.amdudda.Instrument.java", "BodyUseAPI": [], "Fixed commit": "7cb119734c8396a92c86d3cd9a327ca95cd7ba4b", "Url": "https://api.github.com/repos/amdudda/java_project_MusicologyInstitute", "Date": "2015-12-13T22:27:17Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.InstID) == 0) { return \"No instrument data available\"; }else { return ((((((((((((((((((((((((((this.InstName) + \"\\n\") + (this.InstType)) + \" \") + (this.Subtype)) + \"\\n\") + \"Acquired \") + (this.AcquiredDate)) + \" from \") + (this.acquisitionInfo.getFullName())) + \"\\n\") + (this.Height)) + \"cm high x \") + (this.Width)) + \"cm wide x \") + (this.Depth)) + \"cm deep\\n\") + \"Originates from \") + (this.Culture)) + \"\\n\") + \"Lowest Note is \") + (this.LowNote)) + \" and highest note is \") + (this.HighNote)) + \"\\n\") + \"Notes:\\n\") + (this.Description); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/9119/buggy-version/src.com.amdudda.Instrument.java", "BodyUseAPI": [], "Fixed commit": "7cb119734c8396a92c86d3cd9a327ca95cd7ba4b", "Url": "https://api.github.com/repos/amdudda/java_project_MusicologyInstitute", "Date": "2015-12-13T22:27:17Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (keyID != id) { duplicates.add(doc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/71/buggy-version/rdflivenews-core.src.main.java.org.aksw.simba.rdflivenews.deduplication.impl.FastDeduplication.java", "BodyUseAPI": [], "Fixed commit": "8b5445e75bdff868de1272225319c13cad43558c", "Url": "https://api.github.com/repos/AKSW/LiveRdfNews", "Date": "2012-08-09T19:58:43Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { textView.setTextDirection(View.TEXT_DIRECTION_FIRST_STRONG_RTL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6501/buggy-version/app.src.main.java.com.ourproject.learningapp.activities.About.java", "BodyUseAPI": [], "Fixed commit": "e796ee6b0cd65cc2e01b7739c1d27fd907c08798", "Url": "https://api.github.com/repos/FacultyProject/YouLearn", "Date": "2017-10-24T17:16:43Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showErrDialog) { showErrors(errors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4028/buggy-version/src.main.java.org.iplantc.core.pipelines.client.presenter.PipelineViewPresenter.java", "BodyUseAPI": [], "Fixed commit": "98eb40cc334f18e74021e08c1dfcd766f0044227", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/ui-pipelines-module", "Date": "2013-09-20T17:12:52Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tabSelector.length) == 2) && (tabSelector[0].equals(\"All\"))) { config.put(tabSelector[0], new java.util.HashMap<>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8050/buggy-version/src.main.java.configuration.Config.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Map>.put(java.lang.String,java.util.HashMap<>)"], "Fixed commit": "e6c2c751fd114a2c48938ef7be8941e7a5800369", "Url": "https://api.github.com/repos/MensObscura/metamutator", "Date": "2015-12-06T11:51:06Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.getCode()) == 2201) { showShortToast(\"\u4f60\u7684\u767b\u5f55\u5931\u6548\uff0c\u8bf7\u91cd\u65b0\u767b\u5f55\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/922/buggy-version/app.src.main.java.com.ps.app.ui.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "20fb8c7c436eb43dbdb169a1c34fd0a2d3284272", "Url": "https://api.github.com/repos/PATHoqi05/App", "Date": "2016-05-12T08:21:05Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (menu != null) { if (menu.equals(whichMenu)) { com.m0pt0pmatt.GUIM.MenuPainter.paintMenu(org.bukkit.Bukkit.getPlayer(pInfo.name)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7186/buggy-version/src.com.m0pt0pmatt.GUIM.GUIM.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "76f1cfe7957723b4011282cc24d3487caa2c6109", "Url": "https://api.github.com/repos/m0pt0pmatt/GUIM", "Date": "2013-03-11T04:52:08Z"},
{"Line": "=>1172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marketSale.getAvailiableUnits()) <= 0) { player.sendMessage(\"This request is complete\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7186/buggy-version/src.com.m0pt0pmatt.GUIM.MarketListener.java", "BodyUseAPI": [], "Fixed commit": "76f1cfe7957723b4011282cc24d3487caa2c6109", "Url": "https://api.github.com/repos/m0pt0pmatt/GUIM", "Date": "2013-03-11T04:52:08Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (stack == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3348/buggy-version/src.main.java.genesis.block.BlockAncientPermafrost.java", "BodyUseAPI": [], "Fixed commit": "6f583ecc4fdb85637672638883e9e4a5c8fcfa86", "Url": "https://api.github.com/repos/Boethie/OldGenesis", "Date": "2015-11-20T08:02:03Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.poweredrails.rails.Main.getEventBus().firePacket(packet))) { this.channel.writeAndFlush(packet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7395/buggy-version/src.main.java.org.poweredrails.rails.net.session.Session.java", "BodyUseAPI": ["io.netty.channel.Channel.writeAndFlush(org.poweredrails.rails.net.packet.Packet<?>)"], "Fixed commit": "232e632c62b15ec3cc12902a12d6e075740490f1", "Url": "https://api.github.com/repos/connorhartley-archive/Rails", "Date": "2015-10-26T21:49:36Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_webservice) != null) { m_webservice.notifyRequestFailed(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1874/buggy-version/doradus-server.src.main.java.com.dell.doradus.service.rest.RESTService.java", "BodyUseAPI": [], "Fixed commit": "9a970a4cf9ca6df8b9c086fbca6f71de790f1603", "Url": "https://api.github.com/repos/QSFT/Doradus", "Date": "2015-08-11T19:28:19Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_webservice) != null) { m_webservice.notifyNewRequest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1874/buggy-version/doradus-server.src.main.java.com.dell.doradus.service.rest.RESTService.java", "BodyUseAPI": [], "Fixed commit": "9a970a4cf9ca6df8b9c086fbca6f71de790f1603", "Url": "https://api.github.com/repos/QSFT/Doradus", "Date": "2015-08-11T19:28:19Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_webservice) != null) { m_webservice.notifyRequestRejected(reason); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1874/buggy-version/doradus-server.src.main.java.com.dell.doradus.service.rest.RESTService.java", "BodyUseAPI": [], "Fixed commit": "9a970a4cf9ca6df8b9c086fbca6f71de790f1603", "Url": "https://api.github.com/repos/QSFT/Doradus", "Date": "2015-08-11T19:28:19Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_webservice) != null) { m_webservice.notifyRequestSuccess(startTimeNanos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1874/buggy-version/doradus-server.src.main.java.com.dell.doradus.service.rest.RESTService.java", "BodyUseAPI": [], "Fixed commit": "9a970a4cf9ca6df8b9c086fbca6f71de790f1603", "Url": "https://api.github.com/repos/QSFT/Doradus", "Date": "2015-08-11T19:28:19Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (errors.isEmpty()) { throw new java.lang.IllegalArgumentException(\"Argument error list cannot be empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1330/buggy-version/src.main.java.org.junit.runners.model.MultipleFailureException.java", "BodyUseAPI": [], "Fixed commit": "d4abf782de51140c47f29e03e5dce9afffade44c", "Url": "https://api.github.com/repos/ShengyuanLu/junit", "Date": "2015-07-03T05:43:44Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hashEntryFound) { java.lang.Integer frameIndex = mgmInfo.getFrameNumber(); bufmgr.Frame frame = frames[frameIndex]; if (!(frame.isReplacementCandidate())) throw new bufmgr.PagePinnedException(null, \"Attempt to free a page that is still pinned\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3923/buggy-version/src.bufmgr.BufMgr.java", "BodyUseAPI": [], "Fixed commit": "22349488078b8826c460c5c6315f2787ccc7ad55", "Url": "https://api.github.com/repos/centauroWaRRIor/OurMinibase", "Date": "2015-03-03T04:25:10Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((xbc.getTriggerAxis()) < 0.1) && ((xbc.getTriggerAxis()) > (-0.1))) { this.triggers[3] = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3306/buggy-version/src.org.usfirst.frc1923.AscentRobot.java", "BodyUseAPI": [], "Fixed commit": "5b50cac38e2911a5bab5056b7b155741c3d3d218", "Url": "https://api.github.com/repos/aaronweiss74/Ultimate-Ascent", "Date": "2013-02-16T15:34:47Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.closeTab) { this.detailPanel.getMainTabController().closeCurrentTab(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8169/buggy-version/RequirementsManager.src.edu.wpi.cs.wpisuitetng.modules.requirementsmanager.observers.UpdateRequirementRequestObserver.java", "BodyUseAPI": [], "Fixed commit": "778fd230170ce985cff86ec9c049ee7f3c91fc77", "Url": "https://api.github.com/repos/333fred/wpi-suite-tng", "Date": "2013-03-25T22:31:54Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((points) > (getHiScore())) storePref(com.codephillip.game.fastswitch.MainActivity.POINTS, points);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5673/buggy-version/app.src.main.java.com.codephillip.game.fastswitch.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e0b2adf03f6a160af751965e7eccd65d083b2a41", "Url": "https://api.github.com/repos/codephillip/FastSwitch", "Date": "2016-07-14T20:21:54Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (param.isPassByRef()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8205/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.suspiciousAssignments.strategy.ParameterImmediateOverrideStrategy.java", "BodyUseAPI": [], "Fixed commit": "9e348d44b130c9447faaf31b20e9e699f0c48dd1", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2016-12-24T10:02:17Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiElement.getParent()", "com.kalessil.phpStorm.phpInspectionsEA.utils.ExpressionSemanticUtil.getGroupStatement(com.kalessil.phpStorm.phpInspectionsEA.inspectors.suspiciousAssignments.strategy.Function)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null != grandParent) && (body != (grandParent.getParent()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8205/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.suspiciousAssignments.strategy.ParameterImmediateOverrideStrategy.java", "BodyUseAPI": [], "Fixed commit": "9e348d44b130c9447faaf31b20e9e699f0c48dd1", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2016-12-24T10:02:17Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<org.raml.parser.builder.NodeBuilder<?>>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(currentBuilder instanceof org.raml.parser.builder.ScalarTupleBuilder)) { java.lang.Object object = ((org.raml.parser.builder.TupleBuilder<?, org.yaml.snakeyaml.nodes.MappingNode>) (currentBuilder)).buildValue(parentObject, mappingNode); documentContext.push(object); }else { documentContext.push(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7158/buggy-version/src.main.java.org.raml.parser.visitor.YamlDocumentBuilder.java", "BodyUseAPI": [], "Fixed commit": "de64427ca8d52506dfd21409f0f7a963bc178180", "Url": "https://api.github.com/repos/petrochenko-pavel-a/raml-java-parser", "Date": "2014-01-17T09:53:02Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sequencer) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3945/buggy-version/src.com.conchordance.sound.ChordPlayer.java", "BodyUseAPI": [], "Fixed commit": "f5efd7ce1d958a75432b85acbd00d0977b226f1e", "Url": "https://api.github.com/repos/jbauschatz/Conchordance", "Date": "2014-07-25T20:58:08Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (failures > 0) { expectedResults2.append(failures).append(\" failed,\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/563/buggy-version/src.main.java.noraui.indus.MavenRunCounter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(int)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "043b5a0a831d8b73e9dd04730435bf6738983c15", "Url": "https://api.github.com/repos/NoraUi/NoraUi", "Date": "2017-10-17T18:56:40Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (failures > 0) { expectedResults1.append(failures).append(\" failed,\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/563/buggy-version/src.main.java.noraui.indus.MavenRunCounter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(int)"], "Fixed commit": "043b5a0a831d8b73e9dd04730435bf6738983c15", "Url": "https://api.github.com/repos/NoraUi/NoraUi", "Date": "2017-10-17T18:56:40Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (skipped > 0) { expectedResults2.append(skipped).append(\" skipped,\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/563/buggy-version/src.main.java.noraui.indus.MavenRunCounter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(int)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "043b5a0a831d8b73e9dd04730435bf6738983c15", "Url": "https://api.github.com/repos/NoraUi/NoraUi", "Date": "2017-10-17T18:56:40Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (passed > 0) { expectedResults2.append(passed).append(\" passed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/563/buggy-version/src.main.java.noraui.indus.MavenRunCounter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(int)"], "Fixed commit": "043b5a0a831d8b73e9dd04730435bf6738983c15", "Url": "https://api.github.com/repos/NoraUi/NoraUi", "Date": "2017-10-17T18:56:40Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (passed > 0) { expectedResults2.append(passed).append(\" passed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/563/buggy-version/src.main.java.noraui.indus.MavenRunCounter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(int)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "043b5a0a831d8b73e9dd04730435bf6738983c15", "Url": "https://api.github.com/repos/NoraUi/NoraUi", "Date": "2017-10-17T18:56:40Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cat_x[cannonDirectionIndex]) != 0) { cat_x[cannonDirectionIndex] = 0; (remainingCats)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8837/buggy-version/core.src.br.cefetmg.games.minigames.CannonCat.java", "BodyUseAPI": [], "Fixed commit": "c492e1bd016a96eb1359930f4a15e730f866bf4a", "Url": "https://api.github.com/repos/fegemo/cefet-games-meow-au", "Date": "2017-10-03T00:43:50Z"},
{"Line": "=>1854", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plugin.globalChatRegex) == null) { this.createChatConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6564/buggy-version/src.main.java.com.minecraftdimensions.bungeesuite.Utilities.java", "BodyUseAPI": [], "Fixed commit": "28b733ea131c38a6baed748adb3eb043a3dbf2e1", "Url": "https://api.github.com/repos/Bloodsplat/BungeeSuite", "Date": "2013-07-29T14:31:38Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.hitomi.aslibrary.ActivityManager.activityStack) == null) { com.hitomi.aslibrary.ActivityManager.activityStack = new java.util.Stack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/873/buggy-version/aslibrary.src.main.java.com.hitomi.aslibrary.ActivityManager.java", "BodyUseAPI": [], "Fixed commit": "6e8c356b0b64c9399dc18bfee9f85fc1e393b8e3", "Url": "https://api.github.com/repos/Hitomis/ActivitySwitcher", "Date": "2016-12-23T03:16:05Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ce.getShoppingItem()) != null) { this.validationInLabel.setVisible(true); this.validationNameLabel.setVisible(true); this.validationNameLabel.setText(ce.getShoppingItem().getProduct().getName()); this.validationInLabel.setText(((ce.isAddEvent() ? \"lades i\" : \"togs bort ut\") + \" kundvagnen.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/847/buggy-version/IMat.CartIconPanel.java", "BodyUseAPI": ["javax.swing.JLabel.setText(ce.getShoppingItem().getProduct().getName())", "se.chalmers.ait.dat215.project.CartEvent.isAddEvent()", "se.chalmers.ait.dat215.project.CartEvent.getShoppingItem()", "ce.getShoppingItem().getProduct().getName()", "javax.swing.JLabel.setText(((ce.isAddEvent() ? \"lades i\" : \"togs bort ut\") + \" kundvagnen.\"))", "ce.getShoppingItem().getProduct()"], "Fixed commit": "819416cea8321dc600f5685aa92a8b3638e560b8", "Url": "https://api.github.com/repos/BeardedGaku/IMatGit", "Date": "2015-03-11T18:20:52Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (userLevelDao.get(userLevelId))) { throw new com.innovaee.eorder.exception.UserLevelNotFoundException(com.innovaee.eorder.support.MessageUtil.getMessage(\"user_level_id\", (\"\" + userLevelId))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/912/buggy-version/02_code.web.eorder-ws.src.main.java.com.innovaee.eorder.service.impl.MemberShipServiceImpl.java", "BodyUseAPI": ["com.innovaee.eorder.support.MessageUtil.getMessage(java.lang.String,java.lang.String)"], "Fixed commit": "2f1df3f5ee9b7b48b1cc819734ffaedd3856d357", "Url": "https://api.github.com/repos/aaronluo/cuoPATHzi", "Date": "2015-03-27T15:29:48Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pageSize <= 0) { throw new com.innovaee.eorder.exception.InvalidPageSizeException(pageSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/912/buggy-version/02_code.web.eorder-ws.src.main.java.com.innovaee.eorder.service.impl.MemberShipServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "2f1df3f5ee9b7b48b1cc819734ffaedd3856d357", "Url": "https://api.github.com/repos/aaronluo/cuoPATHzi", "Date": "2015-03-27T15:29:48Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.widgets.Canvas.getClientArea()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((voiceViewWidth) / ((waveform.getDataSize()) / ((double) (tmpArea.width)))) < (tmpArea.width)) { gcImage.setForeground(e.display.getSystemColor(SWT.COLOR_MAGENTA)); gcImage.drawRectangle(((int) ((-(voiceViewOffset)) / ((waveform.getDataSize()) / ((double) (tmpArea.width))))), 0, ((int) ((voiceViewWidth) / ((waveform.getDataSize()) / ((double) (tmpArea.width))))), ((tmpArea.height) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4382/buggy-version/nak.nakloidGUI.gui.voiceOptionViews.OverView.java", "BodyUseAPI": ["org.eclipse.swt.graphics.GC.drawRectangle(((int) ((-(voiceViewOffset)) / ((waveform.getDataSize()) / ((double) (tmpArea.width))))),int,((int) ((voiceViewWidth) / ((waveform.getDataSize()) / ((double) (tmpArea.width))))),((tmpArea.height) - 1))", "nak.nakloidGUI.models.Waveform.getDataSize()", "nak.nakloidGUI.models.Waveform.getDataSize()"], "Fixed commit": "5bab22d81b2cb09e195b2c7148ad594863fbc838", "Url": "https://api.github.com/repos/acknak/NakloidGUI", "Date": "2016-01-29T14:48:00Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ms2point(((mainViewWidth) * (msByPixel)))) / ((waveform.getDataSize()) / ((double) (tmpArea.width)))) < (tmpArea.width)) { gcImage.setForeground(e.display.getSystemColor(SWT.COLOR_MAGENTA)); gcImage.drawRectangle(((int) ((ms2point(((-(mainViewOffset)) * (msByPixel)))) / ((waveform.getDataSize()) / ((double) (tmpArea.width))))), 0, ((int) ((ms2point(((mainViewWidth) * (msByPixel)))) / ((waveform.getDataSize()) / ((double) (tmpArea.width))))), ((tmpArea.height) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4382/buggy-version/nak.nakloidGUI.gui.mainWindowViews.OverView.java", "BodyUseAPI": ["org.eclipse.swt.graphics.GC.drawRectangle(((int) ((ms2point(((-(mainViewOffset)) * (msByPixel)))) / ((waveform.getDataSize()) / ((double) (tmpArea.width))))),int,((int) ((ms2point(((mainViewWidth) * (msByPixel)))) / ((waveform.getDataSize()) / ((double) (tmpArea.width))))),((tmpArea.height) - 1))", "nak.nakloidGUI.gui.mainWindowViews.OverView.CanvasPaintListener.ms2point(double)", "nak.nakloidGUI.gui.mainWindowViews.OverView.CanvasPaintListener.ms2point(double)", "nak.nakloidGUI.models.Waveform.getDataSize()", "nak.nakloidGUI.models.Waveform.getDataSize()"], "Fixed commit": "5bab22d81b2cb09e195b2c7148ad594863fbc838", "Url": "https://api.github.com/repos/acknak/NakloidGUI", "Date": "2016-01-29T14:48:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((msi.gama.headless.core.AbstractOutputManager) (currentSimulation.getOutputManager())).getOutputWithOriginalName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (output == null) throw msi.gama.runtime.exceptions.GamaRuntimeException.error((\"Output does not exist: \" + parameterName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7551/buggy-version/msi.gama.headless.src.msi.gama.headless.core.Experiment.java", "BodyUseAPI": [], "Fixed commit": "071d785ae3957b6b6b9f2941845865529a9b6872", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2016-05-20T11:37:35Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > (cdata.length())) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5975/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "a94695597f8f418f34fe188f022ba46f22354525", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5975/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "a94695597f8f418f34fe188f022ba46f22354525", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset + count) > length) { return new java.lang.String(document.characters, (inDocOffset + offset), (length - offset)); }else { return new java.lang.String(document.characters, (inDocOffset + offset), length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5975/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "a94695597f8f418f34fe188f022ba46f22354525", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5975/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "a94695597f8f418f34fe188f022ba46f22354525", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONValue.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(parse.get(\"dest\").equals(getThisServer().getName()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2003/buggy-version/Core.src.main.java.net.cogzmc.core.network.bungee.BungeeCordNetworkManager.java", "BodyUseAPI": [], "Fixed commit": "daf34cea6d0876fbfac789c0adbdde92cc7215ed", "Url": "https://api.github.com/repos/Twister915/Core", "Date": "2015-05-17T03:39:12Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.neclab.iotplatform.iotbroker.embeddediotagent.couchdb.HttpRequester.sendPut(java.net.URL,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((respFromCouchDB.getStatusLine().getStatusCode()) > 299) { eu.neclab.iotplatform.iotbroker.embeddediotagent.couchdb.CouchDB.logger.warn((\"CouchDB did not updated correctly the value. Reason: \" + (respFromCouchDB.getStatusLine()))); }else { revision = eu.neclab.iotplatform.iotbroker.embeddediotagent.couchdb.CouchDBUtil.parseRevisionFromCouchdbResponse(respFromCouchDB); cachedRevisionByKey.put(key, revision); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4106/buggy-version/eu.neclab.iotplatform.iotbroker.embeddediotagent.couchdb.src.main.java.eu.neclab.iotplatform.iotbroker.embeddediotagent.couchdb.CouchDB.java", "BodyUseAPI": ["eu.neclab.iotplatform.iotbroker.commons.FullHttpResponse.getStatusLine()", "eu.neclab.iotplatform.iotbroker.embeddediotagent.couchdb.CouchDBUtil.parseRevisionFromCouchdbResponse(eu.neclab.iotplatform.iotbroker.commons.FullHttpResponse)", "org.apache.log4j.Logger.warn((\"CouchDB did not updated correctly the value. Reason: \" + (respFromCouchDB.getStatusLine())))"], "Fixed commit": "53a843c78abcdce7e751a02d46498466077d4cec", "Url": "https://api.github.com/repos/Aeronbroker/Aeron", "Date": "2016-03-08T09:35:58Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSwipeingView) != null) { if ((java.lang.Math.abs(deltaX)) > ((mViewWidth) / 2)) { dismiss = true; dismissRight = deltaX > 0; }else if ((((mMinFlingVelocity) <= velocityX) && (velocityX <= (mMaxFlingVelocity))) && (velocityY < velocityX)) { dismiss = true; dismissRight = (mVelocityTracker.getXVelocity()) > 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/693/buggy-version/src.hu.trio.taskList.SwipeDismissListViewTouchListener.java", "BodyUseAPI": [], "Fixed commit": "213da4c3d9475aa284a58ce750d497bb8a6420b2", "Url": "https://api.github.com/repos/bendaf/TaskManger", "Date": "2015-02-12T16:04:39Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["camelContext.getClassResolver().resolveClass(actualSchema.getFullName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (clazz != null) { classLoader = clazz.getClassLoader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8464/buggy-version/components.camel-avro.src.main.java.org.apache.camel.dataformat.avro.AvroDataFormat.java", "BodyUseAPI": ["java.lang.Class<?>.getClassLoader()"], "Fixed commit": "f55764f19a25fddac14ca45a0a828ad79aa9dff3", "Url": "https://api.github.com/repos/tadayosi/camel", "Date": "2016-09-01T07:36:04Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((todos) == null) { todos = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2012/buggy-version/TodoListManager.src.il.ac.huji.todolist.TodoListManagerActivity.java", "BodyUseAPI": [], "Fixed commit": "b368abae771b0a1de2bc3951565ca1ccc1cc35c5", "Url": "https://api.github.com/repos/lev-kazakov/POSTPC-EX-2", "Date": "2014-03-02T19:09:05Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { todos = savedInstanceState.getStringArrayList(\"todos\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2012/buggy-version/TodoListManager.src.il.ac.huji.todolist.TodoListManagerActivity.java", "BodyUseAPI": ["android.os.Bundle.getStringArrayList(java.lang.String)"], "Fixed commit": "b368abae771b0a1de2bc3951565ca1ccc1cc35c5", "Url": "https://api.github.com/repos/lev-kazakov/POSTPC-EX-2", "Date": "2014-03-02T19:09:05Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.type) == (ccre.rconf.RConf.F_AUTO_REFRESH)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8299/buggy-version/PoultryInspector.src.ccre.supercanvas.components.channels.RConfComponent.java", "BodyUseAPI": [], "Fixed commit": "bd6c84912d021db920d0c3f535c7a90d4924c6b4", "Url": "https://api.github.com/repos/flamingchickens1540/common-chicken-runtime-engine", "Date": "2016-01-20T23:32:49Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((notes) == null) { keyPanel = new setnotesdesktop.ChangeKeyJPanel(this); }else { keyPanel = new setnotesdesktop.ChangeKeyJPanel(this, notes.getPrivateKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/388/buggy-version/SetNotesDesktop.src.setnotesdesktop.MainNotesJFrame.java", "BodyUseAPI": [], "Fixed commit": "66a3b816c7f051eb410bcdb727109d49abda105f", "Url": "https://api.github.com/repos/adam-currie/SetNotes", "Date": "2016-12-05T22:50:49Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xframium.application.ApplicationRegistry.instance().getApplication(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (appDesc != null) webDriver.get(appDesc.getUrl());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3523/buggy-version/framework.src.org.xframium.gesture.device.action.spi.perfecto.CleanApplicationAction.java", "BodyUseAPI": ["org.xframium.application.ApplicationDescriptor.getUrl()", "org.openqa.selenium.WebDriver.get(appDesc.getUrl())"], "Fixed commit": "26ae7c6f4cadc8754b837a29d0f428c8f860bc76", "Url": "https://api.github.com/repos/xframiumAS/xframium-java", "Date": "2016-10-19T10:39:55Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3142/buggy-version/kundera-core.src.main.java.com.impetus.kundera.property.accessor.CharAccessor.java", "BodyUseAPI": [], "Fixed commit": "6170f70f2213ad6422a6f04037d62e791d52ee4f", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-07-06T17:08:39Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(theaterRelease)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6072/buggy-version/app.src.main.java.com.movie.watch.utils.MovieInfoParser.java", "BodyUseAPI": [], "Fixed commit": "c62940d52ee52a963b7b12a0f28d3fadd42832b6", "Url": "https://api.github.com/repos/shanejmurphy/movie_watch_2.0", "Date": "2015-06-08T07:49:06Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cardRemoved == 0) { cols.get(columnNumber).removeTopCard(); (this.score)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5554/buggy-version/src.main.java.models.Game.java", "BodyUseAPI": [], "Fixed commit": "a384084e86bb89d8ab8550c41c8aadfdd37de5e6", "Url": "https://api.github.com/repos/cs361fall2017/team27", "Date": "2017-12-04T01:02:48Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getAttributes()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (attributes != null) { org.w3c.dom.Node nameAttr = attributes.getNamedItem(attribute); if (nameAttr != null) { nameAttr.setNodeValue(value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1694/buggy-version/codecolors-plugin.src.main.java.io.leao.codecolors.plugin.xml.XmlUtils.java", "BodyUseAPI": ["org.w3c.dom.NamedNodeMap.getNamedItem(java.lang.String)"], "Fixed commit": "b078ce4f971493d1f9ccbf6bec07f3208109ed78", "Url": "https://api.github.com/repos/Leao/CodeColors", "Date": "2016-01-26T19:17:12Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tile instanceof forestry.apiculture.gadgets.TileAlveary) { tile = ((forestry.apiculture.gadgets.TileAlveary) (((forestry.apiculture.gadgets.TileAlveary) (tile)).getCentralTE())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6952/buggy-version/src.main.java.forestry.apiculture.trigger.TriggerMissingDrone.java", "BodyUseAPI": [], "Fixed commit": "d31968d190dff57c5a4c322a4f99f7f1ae5428aa", "Url": "https://api.github.com/repos/ForestryMC/ForestryMC", "Date": "2015-07-02T14:08:38Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tile instanceof forestry.apiculture.gadgets.TileAlveary) { tile = ((forestry.apiculture.gadgets.TileAlveary) (((forestry.apiculture.gadgets.TileAlveary) (tile)).getCentralTE())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6952/buggy-version/src.main.java.forestry.apiculture.trigger.TriggerMissingQueen.java", "BodyUseAPI": [], "Fixed commit": "d31968d190dff57c5a4c322a4f99f7f1ae5428aa", "Url": "https://api.github.com/repos/ForestryMC/ForestryMC", "Date": "2015-07-02T14:08:38Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (matched.getValue().toString().contains(\"null\")) { nullCheck = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/659/buggy-version/spec.src.main.java.edu.iastate.cs.design.spec.analysis.ExceptionParseAnalysis.java", "BodyUseAPI": [], "Fixed commit": "c27a2ddacd34f851cc691df6ca7748bb725cc265", "Url": "https://api.github.com/repos/may1620/spec", "Date": "2016-04-25T03:18:15Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((((!(tempType.equals(\"byte\"))) && (!(tempType.equals(\"short\")))) && (!(tempType.equals(\"int\")))) && (!(tempType.equals(\"long\")))) && (!(tempType.equals(\"float\")))) && (!(tempType.equals(\"double\")))) && (!(tempType.equals(\"boolean\")))) && (!(tempType.equals(\"char\")))) { rawSpec = rawSpec.replace(word, paramNames.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/659/buggy-version/spec.src.main.java.edu.iastate.cs.design.spec.analysis.ExceptionParseAnalysis.java", "BodyUseAPI": [], "Fixed commit": "c27a2ddacd34f851cc691df6ca7748bb725cc265", "Url": "https://api.github.com/repos/may1620/spec", "Date": "2016-04-25T03:18:15Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isArmorSlots) button.setHelpMode(((com.phylogeny.extrabitmanipulation.client.gui.armor.GuiInventoryArmorSlots) (gui)).isInHelpMode());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3144/buggy-version/src.main.java.com.phylogeny.extrabitmanipulation.armor.capability.ChiseledArmorSlotsEventHandler.java", "BodyUseAPI": [], "Fixed commit": "eed0dbb24c7bbc78760329f6b65978d3f0900055", "Url": "https://api.github.com/repos/Phylogeny/ExtraBitManipulation", "Date": "2017-08-29T13:38:33Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(userID.equalsIgnoreCase(\"ALL\"))) sql_userID = \" AND userID = \" + userID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2498/buggy-version/GameResult_Web.WebContent.com.dao.GameResultRecords.java", "BodyUseAPI": [], "Fixed commit": "6ac4e19d8f414b8a952d4cc420eefd3fd7f4ea1e", "Url": "https://api.github.com/repos/fanntone/GameResult_Web", "Date": "2017-02-06T10:18:10Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(userID.equalsIgnoreCase(\"ALL\"))) sql_userID = \" AND userID = \" + userID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2498/buggy-version/GameResult_Web.WebContent.com.dao.GameResultRecords.java", "BodyUseAPI": [], "Fixed commit": "6ac4e19d8f414b8a952d4cc420eefd3fd7f4ea1e", "Url": "https://api.github.com/repos/fanntone/GameResult_Web", "Date": "2017-02-06T10:18:10Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Scrabble.allwordsvalid)) Scrabble.p[Scrabble.currentp].recall();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7157/buggy-version/src.Scrabble.java", "BodyUseAPI": [], "Fixed commit": "f7e7af0c07309da3c45b632649fccd83522ab566", "Url": "https://api.github.com/repos/simon-qi/Scrabble", "Date": "2015-04-07T23:06:33Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obf = \"baj\".equals(name)) || (\"net.minecraft.client.renderer.ActiveRenderInfo\".equals(name))) { return writeClass(transformActiveRenderInfo(readClass(classBytes), obf)); }else if ((obf = \"blt\".equals(name)) || (\"net.minecraft.client.renderer.EntityRenderer\".equals(name))) { return writeClass(transformEntityRenderer(readClass(classBytes), obf)); }else if ((obf = \"bnn\".equals(name)) || (\"net.minecraft.client.renderer.entity.RenderManager\".equals(name))) { return writeClass(transformRenderManager(readClass(classBytes), obf)); }else if ((obf = \"sa\".equals(name)) || (\"net.minecraft.entity.Entity\".equals(name))) { return writeClass(transformEntity(readClass(classBytes), obf)); }else if ((\"net.minecraft.command.CommandWeather\".equals(name)) && true) { classBytes[((((((((((((((('J' + 'u') + ('s' * 't')) + ' ') + 'f') + 'o') + 'r') + ' ') - ('t' * 'h')) + 'e') + ' ') + 'l') + 'o') + 'l') + 'z') + '.')] = 29; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2845/buggy-version/java.thebetweenlands.core.TheBetweenlandsClassTransformer.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "6041db4db591784aabb6e625c67f3b06dc87a478", "Url": "https://api.github.com/repos/Angry-Pixel/The-Betweenlands", "Date": "2015-12-17T07:52:49Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((suspendDuration) <= 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3049/buggy-version/src.workloadgen.loadjobs.LoadJobController.java", "BodyUseAPI": [], "Fixed commit": "6f614755cb4c385e90f64746d3661b03936a94d5", "Url": "https://api.github.com/repos/CodingCat/LoadWeaver", "Date": "2012-12-20T20:29:14Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((url == null) || (url.isEmpty())) { previews[i].setOnClickListener(null); }else { previews[i].setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { listener.onViewMedia(url, type); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7763/buggy-version/app.src.main.java.com.keylesspalace.tusky.StatusViewHolder.java", "BodyUseAPI": ["previews[i].setOnClickListener(android.view.View.OnClickListener)", "com.keylesspalace.tusky.StatusActionListener.onViewMedia(java.lang.String,Status.MediaAttachment.Type)"], "Fixed commit": "2434c62d13f06b750f56ff0d01b73ff7741711a3", "Url": "https://api.github.com/repos/tuskyapp/Tusky", "Date": "2017-04-21T05:17:42Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((previewUrl == null) || (previewUrl.isEmpty())) { com.squareup.picasso.Picasso.with(context).load(mediaPreviewUnloadedId).into(previews[i]); }else { com.squareup.picasso.Picasso.with(context).load(previewUrl).placeholder(mediaPreviewUnloadedId).into(previews[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7763/buggy-version/app.src.main.java.com.keylesspalace.tusky.StatusViewHolder.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(context).load(previewUrl).placeholder(mediaPreviewUnloadedId).into(previews[i])", "com.squareup.picasso.Picasso.with(context).load(previewUrl).placeholder(int)", "com.squareup.picasso.Picasso.with(context).load(java.lang.String)"], "Fixed commit": "2434c62d13f06b750f56ff0d01b73ff7741711a3", "Url": "https://api.github.com/repos/tuskyapp/Tusky", "Date": "2017-04-21T05:17:42Z"},
{"Line": "=>3388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preferences.insert_space_before_opening_paren_in_method_invocation) scribe.space();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6708/buggy-version/all.org.eclipse.cdt.core.src.org.eclipse.cdt.internal.formatter.CodeFormatterVisitor.java", "BodyUseAPI": [], "Fixed commit": "d699e111d6b2cbe6e5ec5d9aa700e89e9a5dce4e", "Url": "https://api.github.com/repos/angvoz/SD80", "Date": "2011-03-31T06:33:32Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broadinstitute.sting.gatk.contexts.ReferenceContext.getBases()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (startAfter > (refBases.length)) startAfter = refBases.length;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4778/buggy-version/public.java.src.org.broadinstitute.sting.utils.genotype.Haplotype.java", "BodyUseAPI": [], "Fixed commit": "224574424e90152ffbe4536a4dd6061eb886f9ff", "Url": "https://api.github.com/repos/broadgsa/gatk", "Date": "2011-07-08T16:48:49Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!((ref.eContainer()) instanceof org.eclipse.xtext.xtype.XFunctionTypeRef)) && (!(ref instanceof org.eclipse.xtext.xtype.XFunctionTypeRef))) acceptType(ref.getType());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8456/buggy-version/plugins.org.eclipse.xtext.xtend2.src.org.eclipse.xtext.xtend2.formatting.OrganizeImports.java", "BodyUseAPI": ["org.eclipse.xtext.common.types.JvmTypeReference.getType()", "org.eclipse.xtext.xtend2.formatting.OrganizeImports.ReferenceAcceptor.acceptType(ref.getType())"], "Fixed commit": "87598b78a0bc7f7ff2a13590a30721b21a01eb1d", "Url": "https://api.github.com/repos/knutwannheden/xtext", "Date": "2011-10-19T10:12:07Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.storieswithfriends.data.CurrentUser.getCurrentLoggedInUser().getUsername().equals(story.getWhoseTurn().getUsername())) { yourTurnButtons.setVisibility(View.VISIBLE); addYourTurnEditText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1336/buggy-version/app.src.main.java.com.storieswithfriends.fragment.StoryFragment.java", "BodyUseAPI": [], "Fixed commit": "083365c56fd51b023fb4249fadbf21e44fb75a80", "Url": "https://api.github.com/repos/davidhorton/storieswithfriendsapp", "Date": "2014-08-10T04:45:49Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((toDelete.size()) != 0) { toDelete.remove(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4252/buggy-version/app.src.main.java.radonsoft.firenotes.Fragments.NoteFragment.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.remove(int)"], "Fixed commit": "a152af8f589d5a9fd70fe45334a9b1853811ebee", "Url": "https://api.github.com/repos/RuslanBarcho/FireNotes", "Date": "2017-12-11T12:45:33Z"},
{"Line": "=>814", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.ednovo.gooru.client.gin.AppClientFactory.isAnonymous()) { com.google.gwt.user.client.Window.enableScrolling(true); }else { com.google.gwt.user.client.Window.enableScrolling(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8047/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.home.HeaderUc.java", "BodyUseAPI": [], "Fixed commit": "75bbdae26419be49fb95ec99a317c18bd019e554", "Url": "https://api.github.com/repos/shivalinga/Gooru-Web", "Date": "2014-07-31T14:03:11Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.ednovo.gooru.client.gin.AppClientFactory.isAnonymous()) { com.google.gwt.user.client.Window.enableScrolling(true); }else { com.google.gwt.user.client.Window.enableScrolling(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8047/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.ShelfPresenter.java", "BodyUseAPI": [], "Fixed commit": "75bbdae26419be49fb95ec99a317c18bd019e554", "Url": "https://api.github.com/repos/shivalinga/Gooru-Web", "Date": "2014-07-31T14:03:11Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plateau.GetIndexPlateauActuel()) != (joueur - 1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7798/buggy-version/Modele.Plateau.Partie.java", "BodyUseAPI": [], "Fixed commit": "6321458e4c080b39db4a5cd8c647fb51b00332a6", "Url": "https://api.github.com/repos/vincentriche/HearthStone", "Date": "2015-12-02T13:07:41Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alcatel.contactsaggregation.Providers.HelperProvider.getJSONObjectByPath(org.json.JSONObject,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (id != null) { c.setField(StandardFields.UID, id.toString()); c.setUniqueId(id.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8478/buggy-version/app.src.main.java.com.alcatel.contactsaggregation.Providers.Google.GoogleProvider.java", "BodyUseAPI": ["java.lang.Object.toString()", "com.alcatel.contactsaggregation.Core.Models.Contact.setField(StandardFields.UID,java.lang.String)", "java.lang.Object.toString()", "com.alcatel.contactsaggregation.Core.Models.Contact.setUniqueId(java.lang.String)"], "Fixed commit": "9286440a465943d1341650caad9854471e3395f5", "Url": "https://api.github.com/repos/fnuttens/ContactsAggregation", "Date": "2015-06-08T21:13:42Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (returnmessage != null) response.getWriter().write(returnmessage); else response.getWriter().write(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4160/buggy-version/src.yakitmessenging.TextMessengerServlet.java", "BodyUseAPI": ["response.getWriter().write(java.lang.String)"], "Fixed commit": "dc27700636966d3f122d401863510d1c18f7ac72", "Url": "https://api.github.com/repos/rd37/Yakit", "Date": "2011-04-07T21:58:34Z"},
{"Line": "=>791", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["allItemGroupProperties.iterator().next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((displayProperties.dispayGroupFrame()) && ((displayProperties.getFrameTitle()) != null)) && ((displayProperties.getFrameTitle().length()) > 0)) { org.eclipse.swt.widgets.Group group = new org.eclipse.swt.widgets.Group(_mainPane, org.eclipse.swt.SWT.NONE); group.setLayout(new org.eclipse.swt.layout.FillLayout()); group.setText(displayProperties.getFrameTitle()); group.setLayoutData(new org.eclipse.swt.layout.GridData((((org.eclipse.swt.layout.GridData.FILL_BOTH) | (org.eclipse.swt.layout.GridData.GRAB_HORIZONTAL)) | (org.eclipse.swt.layout.GridData.GRAB_VERTICAL)))); filterTree = new org.entirej.applicationframework.rwt.table.EJRWTAbstractFilteredTree(group, style) { @java.lang.Override public void filter(java.lang.String filter) { if (((filteredContentProvider) != null) && (((filter == null) && ((filteredContentProvider.getFilter()) != null)) || (!(filter.equals(filteredContentProvider.getFilter()))))) { filteredContentProvider.setFilter(filter); refresh(filter); } } }; }else { filterTree = new org.entirej.applicationframework.rwt.table.EJRWTAbstractFilteredTree(_mainPane, style) { @java.lang.Override public void filter(java.lang.String filter) { if (((filteredContentProvider) != null) && (((filter == null) && ((filteredContentProvider.getFilter()) != null)) || (!(filter.equals(filteredContentProvider.getFilter()))))) { filteredContentProvider.setFilter(filter); refresh(filter); } } }; filterTree.setLayoutData(new org.eclipse.swt.layout.GridData((((org.eclipse.swt.layout.GridData.FILL_BOTH) | (org.eclipse.swt.layout.GridData.GRAB_HORIZONTAL)) | (org.eclipse.swt.layout.GridData.GRAB_VERTICAL)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5374/buggy-version/entirej-rwt.src.org.entirej.applicationframework.rwt.renderers.blocks.EJRWTTreeRecordBlockRenderer.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Group.setText(displayProperties.getFrameTitle())", "org.entirej.framework.core.properties.interfaces.EJItemGroupProperties.getFrameTitle()"], "Fixed commit": "b9cbfb5e1907af33f36610c73e15ecc4a7ee7dc1", "Url": "https://api.github.com/repos/entirej/rap", "Date": "2015-10-23T14:21:38Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sangupta.nutz.Parser.parseLine(com.sangupta.nutz.ast.BlockQuoteNode,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!returnValue) && ((this.line) != null)) { temp = this.line; for (int j = 0; j < (this.blockDepth); j++) { temp = \"> \" + temp; } this.line = temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/944/buggy-version/src.main.java.com.sangupta.nutz.Parser.java", "BodyUseAPI": [], "Fixed commit": "1f7aeaa42ce067df3a2a53ad65db0efe884439f4", "Url": "https://api.github.com/repos/sangupta/nutz", "Date": "2012-08-07T12:09:39Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((micdoodle8.mods.galacticraft.core.util.WorldUtil.registeredSpaceStations) != null) for (final java.lang.Integer i : micdoodle8.mods.galacticraft.core.util.WorldUtil.registeredSpaceStations) { temp.add(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4358/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.util.WorldUtil.java", "BodyUseAPI": [], "Fixed commit": "b1f43e224003ef0217d8c86469fd791c39aa6625", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2014-10-20T22:48:41Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.fortsoft.pippo.core.Response.getContentType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ro.fortsoft.pippo.core.util.StringUtils.isNullOrEmpty(contentType)) { if (!(ro.fortsoft.pippo.core.util.StringUtils.isNullOrEmpty(request.getAcceptType()))) { java.lang.String acceptType = request.getAcceptType(); if ((acceptType.startsWith(HttpConstants.ContentType.TEXT_HTML)) || (acceptType.startsWith(HttpConstants.ContentType.TEXT_XHTML))) { contentType = HttpConstants.ContentType.TEXT_HTML; } } if (ro.fortsoft.pippo.core.util.StringUtils.isNullOrEmpty(contentType)) { response.contentType(request); } contentType = response.getContentType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7550/buggy-version/pippo-core.src.main.java.ro.fortsoft.pippo.core.DefaultErrorHandler.java", "BodyUseAPI": [], "Fixed commit": "0473ec8329fecf0cb94dcb7bbd2599a9b2294879", "Url": "https://api.github.com/repos/pippo-java/pippo", "Date": "2015-01-11T22:08:47Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.hibernate.sql.Template.isBoolean(token)) { token = dialect.toBooleanValueString(java.lang.Boolean.parseBoolean(token)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7209/buggy-version/hibernate-core.src.main.java.org.hibernate.sql.Template.java", "BodyUseAPI": ["org.hibernate.dialect.Dialect.toBooleanValueString(boolean)", "java.lang.Boolean.parseBoolean(java.lang.String)"], "Fixed commit": "80f61bdcff71d78d09e3bc47576efb018e770b20", "Url": "https://api.github.com/repos/pplatek/hibernate-orm", "Date": "2015-09-22T15:16:23Z"},
{"Line": "=>750", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.hibernate.sql.Template.isBoolean(token)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7209/buggy-version/hibernate-core.src.main.java.org.hibernate.sql.Template.java", "BodyUseAPI": [], "Fixed commit": "80f61bdcff71d78d09e3bc47576efb018e770b20", "Url": "https://api.github.com/repos/pplatek/hibernate-orm", "Date": "2015-09-22T15:16:23Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((par5EntityPlayer.getCurrentEquippedItem()) == null) || ((par5EntityPlayer.getCurrentEquippedItem().itemID) != (Items.tier1Key.itemID))) { par5EntityPlayer.addChatMessage(\"This Requires a Tier 1 key to open\"); return true; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3282/buggy-version/Blocks.Blocktier1LockedDoorBlock.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.addChatMessage(java.lang.String)"], "Fixed commit": "6a5913b3167d8c4164ad22931cba34dee39455c2", "Url": "https://api.github.com/repos/TreeBek/enchantedwoodlands", "Date": "2013-09-29T03:26:30Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LGDEditTool.Templates.TemplatesUnmappedTags.listAllK(int,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t.equals(\"\")) s = \"<p>Your search returned no results.</p>\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6262/buggy-version/src.java.LGDEditTool.Templates.TemplatesUnmappedTags.java", "BodyUseAPI": [], "Fixed commit": "faf26027d426f993ab87b5346bb10564e61aeaa6", "Url": "https://api.github.com/repos/jnphilipp/LGDEditTool", "Date": "2012-05-25T15:19:31Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LGDEditTool.Templates.TemplatesUnmappedTags.listAllKV(int,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t.equals(\"\")) s = \"<p>Your search returned no results.</p>\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6262/buggy-version/src.java.LGDEditTool.Templates.TemplatesUnmappedTags.java", "BodyUseAPI": [], "Fixed commit": "faf26027d426f993ab87b5346bb10564e61aeaa6", "Url": "https://api.github.com/repos/jnphilipp/LGDEditTool", "Date": "2012-05-25T15:19:31Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hypodiabetic.happ.Receivers.openAPSReceiver.runOpenAPS(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (openAPSSuggest.has(\"deviation\")) { deviation = openAPSSuggest.getDouble(\"deviation\"); openAPSSuggest.remove(\"deviation\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2355/buggy-version/app.src.main.java.com.hypodiabetic.happ.Receivers.openAPSReceiver.java", "BodyUseAPI": ["org.json.JSONObject.remove(java.lang.String)", "org.json.JSONObject.getDouble(java.lang.String)"], "Fixed commit": "4b4420368413c200fceb670490f7dd828b97bc7f", "Url": "https://api.github.com/repos/LadyViktoria/HAPP", "Date": "2015-10-23T13:06:08Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jp.mzw.vtr.classify.pattern.AddTestAnnotationPattern.match(testCaseModification)) { return \"#1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7507/buggy-version/src.main.java.jp.mzw.vtr.classify.Classifier.java", "BodyUseAPI": [], "Fixed commit": "82c7d9df27030050bf61accd5184faf4e10fc500", "Url": "https://api.github.com/repos/mzw/VTR", "Date": "2017-10-27T04:23:42Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stockholm.api.weather.config.WeatherConfig.getCityBeanList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((cityBeanList != null) && ((cityBeanList.size()) > 0)) { cityBeanList.remove(bean); setCities(cityBeanList); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7016/buggy-version/api.src.main.java.com.stockholm.api.weather.config.WeatherConfig.java", "BodyUseAPI": ["java.util.List<com.stockholm.api.weather.config.CityBean>.remove(com.stockholm.api.weather.config.CityBean)", "com.stockholm.api.weather.config.WeatherConfig.setCities(java.util.List<com.stockholm.api.weather.config.CityBean>)"], "Fixed commit": "dcf2dab53c8d64d9026aea4584ad1abccd8240b4", "Url": "https://api.github.com/repos/xidian/stockholm-api", "Date": "2017-12-06T09:42:34Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((endPoint.getX()) == (startPoint.getX())) { if ((endPoint.getY()) > (startPoint.getY())) { startAngle = (java.lang.Math.PI) / 2; }else if ((endPoint.getY()) < (startPoint.getY())) { startAngle = (-(java.lang.Math.PI)) / 2; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/716/buggy-version/LWJGL.src.rpg.game.skills.Skill.java", "BodyUseAPI": ["java.awt.Point.getY()", "java.awt.Point.getY()", "java.awt.Point.getY()", "java.awt.Point.getY()"], "Fixed commit": "843a00e2242cbdf4324c1136b6522efa8c60fbda", "Url": "https://api.github.com/repos/AkoyaP6618/RPG", "Date": "2015-08-21T08:51:44Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((((rotateDegree - (degree)) % 90) == 0) && ((startPoint.getX()) == (endPoint.getX()))) degree += 180;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/716/buggy-version/LWJGL.src.rpg.game.skills.Projectile.java", "BodyUseAPI": [], "Fixed commit": "843a00e2242cbdf4324c1136b6522efa8c60fbda", "Url": "https://api.github.com/repos/AkoyaP6618/RPG", "Date": "2015-08-21T08:51:44Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ulisboa.tecnico.amorphous.requestrouter.utils.SystemShell.executeCommand(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(result.isEmpty())) for (java.lang.String rline : result) pt.ulisboa.tecnico.amorphous.requestrouter.lvs.LVSImplementation.logger.info(rline); else pt.ulisboa.tecnico.amorphous.requestrouter.lvs.LVSImplementation.logger.info(\"(Execution produced no output)\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3787/buggy-version/src.pt.ulisboa.tecnico.amorphous.requestrouter.lvs.LVSImplementation.java", "BodyUseAPI": [], "Fixed commit": "cd21253624f96f4d599a140e31bba5221a675582", "Url": "https://api.github.com/repos/fazevedo86/RequestRouter", "Date": "2015-06-17T16:10:25Z"},
{"Line": "=>685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.aggregateframework.utils.CollectionUtils.isEmpty(needUpdateVersionEntities))) { for (T entity : needUpdateVersionEntities) { org.aggregateframework.utils.DomainObjectUtils.setField(entity, DomainObjectUtils.VERSION, ((entity.getVersion()) + 1L)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7286/buggy-version/aggregate-framework-core.src.main.java.org.aggregateframework.repository.TraversalAggregateRepository.java", "BodyUseAPI": [], "Fixed commit": "f64c140fb96c27b1eb97a93443382a455d10a5fa", "Url": "https://api.github.com/repos/changmingxie/aggregate-framework", "Date": "2016-08-11T05:56:20Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.tuple.Pair<T, T>.getRight()", "org.apache.commons.lang3.tuple.Pair<T, T>.getLeft()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.aggregateframework.utils.DomainObjectUtils.equal(entity, originalEntity))) { needUpdateVersionEntities.add(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7286/buggy-version/aggregate-framework-core.src.main.java.org.aggregateframework.repository.TraversalAggregateRepository.java", "BodyUseAPI": ["java.util.List<T>.add(T)"], "Fixed commit": "f64c140fb96c27b1eb97a93443382a455d10a5fa", "Url": "https://api.github.com/repos/changmingxie/aggregate-framework", "Date": "2016-08-11T05:56:20Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ec.isSingleValue()) { result = org.apache.poi.ss.formula.WorkbookEvaluator.dereferenceResult(value, ec); }else { result = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/893/buggy-version/src.java.org.apache.poi.ss.formula.WorkbookEvaluator.java", "BodyUseAPI": ["org.apache.poi.ss.formula.WorkbookEvaluator.dereferenceResult(org.apache.poi.ss.formula.ValueEval,org.apache.poi.ss.formula.OperationEvaluationContext)"], "Fixed commit": "30df416fc1b5198fd165ba5be4c2d981c3a18e7d", "Url": "https://api.github.com/repos/Bob95132/poi", "Date": "2017-09-12T00:12:30Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.carewebframework.vista.security.base.SecurityDomain.getAuthenticatedUser(org.carewebframework.vista.mbroker.BrokerSession)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (user != null) { user.setLoginName(username); user.setPassword(password); user.setSecurityDomain(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7522/buggy-version/org.carewebframework.vista.security-parent.org.carewebframework.vista.security.base.src.main.java.org.carewebframework.vista.security.base.SecurityDomain.java", "BodyUseAPI": ["org.carewebframework.api.domain.User.setSecurityDomain(org.carewebframework.vista.security.base.SecurityDomain)", "org.carewebframework.api.domain.User.setLoginName(java.lang.String)", "org.carewebframework.api.domain.User.setPassword(java.lang.String)"], "Fixed commit": "709f15291eb34dc101f8f6ad7eb256dd017aee3a", "Url": "https://api.github.com/repos/carewebframework/carewebframework-vista", "Date": "2016-01-12T14:26:12Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (address == (NULL)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/796/buggy-version/modules.core.src.main.java.org.lwjgl.system.MemoryManage.java", "BodyUseAPI": [], "Fixed commit": "e4bbe2db87f2d2d375c37f3f48020d3aa651067e", "Url": "https://api.github.com/repos/LWJGL/lwjgl3", "Date": "2015-09-20T08:27:40Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.constellio.model.entities.records.Record.getRecordDTO()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (recordDTO != null) { if ((recordDTO.getCopyFields()) != null) { for (java.lang.Object object : recordDTO.getCopyFields().values()) { size += com.constellio.model.services.records.RecordUtils.sizeOf(object); } } if ((recordDTO.getFields()) != null) { for (java.lang.Object object : recordDTO.getFields().values()) { size += com.constellio.model.services.records.RecordUtils.sizeOf(object); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/94/buggy-version/model.src.com.constellio.model.services.records.RecordUtils.java", "BodyUseAPI": ["recordDTO.getCopyFields().values()", "recordDTO.getFields().values()", "com.constellio.data.dao.dto.records.RecordDTO.getCopyFields()", "com.constellio.data.dao.dto.records.RecordDTO.getCopyFields()", "com.constellio.data.dao.dto.records.RecordDTO.getFields()", "com.constellio.data.dao.dto.records.RecordDTO.getFields()"], "Fixed commit": "e349acacbff253fc38ee62d0d942a00fa22143c1", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-07-11T20:27:19Z"},
{"Line": "=>1861", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((component != null) && (component.isBlockLead())) { return component; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5643/buggy-version/CodenameOne.src.com.codename1.ui.Container.java", "BodyUseAPI": [], "Fixed commit": "1f16988ba4676ec43b7d96cfe650da9cefccfa18", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-06-06T18:37:54Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (facebook == null) { response.sendRedirect(\"./welcome.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8447/buggy-version/cs313.facebookAccountabilityApp.src.main.java.isaac_netbeans.facebookaccountabilityapp.CreateGoal.java", "BodyUseAPI": [], "Fixed commit": "89682a113eecf7d743d2fdaee237b90fcb4bec69", "Url": "https://api.github.com/repos/immetcalf1225/cs313", "Date": "2015-07-19T02:43:11Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yahoo.ycsb.workloads.ClosedEconomyWorkload.buildKeyName(int)", "com.yahoo.ycsb.workloads.ClosedEconomyWorkload.buildKeyName(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((db.update(com.yahoo.ycsb.workloads.ClosedEconomyWorkload.table, firstkey, firstvalues)) != 0) || ((db.update(com.yahoo.ycsb.workloads.ClosedEconomyWorkload.table, secondkey, secondvalues)) != 0)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5996/buggy-version/core.src.main.java.com.yahoo.ycsb.workloads.ClosedEconomyWorkload.java", "BodyUseAPI": [], "Fixed commit": "ed4676dfbb6893cff81bfd06ecef8120dc1614c6", "Url": "https://api.github.com/repos/benjaminbrent/YCSB", "Date": "2014-12-17T08:30:54Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((postulante.getSector().getSectId()) == 0) { postulante.setSector(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2146/buggy-version/src.main.java.vindbrein.service.impl.PostulanteServiceImpl.java", "BodyUseAPI": ["vindbrein.domain.model.Postulante.setSector(<nulltype>)"], "Fixed commit": "7ebea021c7ec8ade1d32a8d003644fe1944fbe45", "Url": "https://api.github.com/repos/deoxyseia/vindbrein-java", "Date": "2014-06-11T00:38:49Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((postulante.getNivelPuesto().getNipuId()) == 0) { postulante.setNivelPuesto(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2146/buggy-version/src.main.java.vindbrein.service.impl.PostulanteServiceImpl.java", "BodyUseAPI": ["vindbrein.domain.model.Postulante.setNivelPuesto(<nulltype>)"], "Fixed commit": "7ebea021c7ec8ade1d32a8d003644fe1944fbe45", "Url": "https://api.github.com/repos/deoxyseia/vindbrein-java", "Date": "2014-06-11T00:38:49Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((postulante.getEstadoCivil().getEsciId()) == 0) { postulante.setEstadoCivil(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2146/buggy-version/src.main.java.vindbrein.service.impl.PostulanteServiceImpl.java", "BodyUseAPI": ["vindbrein.domain.model.Postulante.setEstadoCivil(<nulltype>)"], "Fixed commit": "7ebea021c7ec8ade1d32a8d003644fe1944fbe45", "Url": "https://api.github.com/repos/deoxyseia/vindbrein-java", "Date": "2014-06-11T00:38:49Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((postulante.getDimensionOrganizacion().getDiorId()) == 0) { postulante.setDimensionOrganizacion(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2146/buggy-version/src.main.java.vindbrein.service.impl.PostulanteServiceImpl.java", "BodyUseAPI": ["vindbrein.domain.model.Postulante.setDimensionOrganizacion(<nulltype>)"], "Fixed commit": "7ebea021c7ec8ade1d32a8d003644fe1944fbe45", "Url": "https://api.github.com/repos/deoxyseia/vindbrein-java", "Date": "2014-06-11T00:38:49Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((postulante.getTipoHorario().getTihoId()) == 0) { postulante.setTipoHorario(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2146/buggy-version/src.main.java.vindbrein.service.impl.PostulanteServiceImpl.java", "BodyUseAPI": ["vindbrein.domain.model.Postulante.setTipoHorario(<nulltype>)"], "Fixed commit": "7ebea021c7ec8ade1d32a8d003644fe1944fbe45", "Url": "https://api.github.com/repos/deoxyseia/vindbrein-java", "Date": "2014-06-11T00:38:49Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((motionEdge) == (HighlightView.MOVE)) ensureVisible(motionHighlightView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7008/buggy-version/lib.src.main.java.com.soundcloud.android.crop.CropImageView.java", "BodyUseAPI": [], "Fixed commit": "32772d80876e83cb9b11164c27781c19fb42dbed", "Url": "https://api.github.com/repos/kaminomobile/android-crop", "Date": "2015-05-29T07:42:07Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (service.getKind().equalsIgnoreCase(KIND.LOADBALANCERSERVICE.name())) { io.cattle.platform.core.model.Instance instance = null; if (instanceObj != null) { instance = ((io.cattle.platform.core.model.Instance) (instanceObj)); } return new io.cattle.platform.servicediscovery.deployment.impl.unit.LoadBalancerDeploymentUnitInstance(context, uuid, service, instanceName, instance, labels, launchConfigName); }else if (service.getKind().equalsIgnoreCase(KIND.EXTERNALSERVICE.name())) { org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.String> ipHostName = null; if (instanceObj != null) { ipHostName = ((org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.String>) (instanceObj)); } return new io.cattle.platform.servicediscovery.deployment.impl.unit.ExternalDeploymentUnitInstance(context, uuid, service, launchConfigName, ipHostName.getLeft(), ipHostName.getRight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3748/buggy-version/code.iaas.service-discovery.server.src.main.java.io.cattle.platform.servicediscovery.deployment.impl.unit.DeploymentUnitInstanceFactoryImpl.java", "BodyUseAPI": ["service.getKind().equalsIgnoreCase(KIND.EXTERNALSERVICE.name())", "io.cattle.platform.core.model.Service.getKind()"], "Fixed commit": "9236a2574fbc389c662320d26ece64ea33200977", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2016-03-17T23:11:37Z"},
{"Line": "=>3053", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.governance.api.generic.dataobjects.GenericArtifact.getLifecycleState()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(currentStatus.equals(targetStatus))) { apiMgtDAO.recordAPILifeCycleEvent(apiIdentifier, currentStatus.toUpperCase(), targetStatus.toUpperCase(), this.username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8619/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.APIProviderImpl.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "org.wso2.carbon.apimgt.impl.APIProviderImpl.recordAPILifeCycleEvent(org.wso2.carbon.apimgt.api.model.APIIdentifier,java.lang.String,java.lang.String,this.username)", "java.lang.String.toUpperCase()"], "Fixed commit": "fa0f4f9eea6aece2def4bfbaa192b418cc3a21b1", "Url": "https://api.github.com/repos/lakmali/carbon-apimgt", "Date": "2015-11-30T04:50:17Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((value.length()) % 2) > 0) { value = value.concat(\"F\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3478/buggy-version/src.main.java.org.chiknrice.djeng.fin.Track2Codec.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "704d5c2259cde6d270950fb50956252efa63e43b", "Url": "https://api.github.com/repos/chiknrice/djeng", "Date": "2016-07-25T04:59:18Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.chiknrice.djeng.ByteUtil.encodeHex(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (packedTrack2.endsWith(\"F\")) { packedTrack2 = packedTrack2.substring(0, ((packedTrack2.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3478/buggy-version/src.main.java.org.chiknrice.djeng.fin.Track2Codec.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "704d5c2259cde6d270950fb50956252efa63e43b", "Url": "https://api.github.com/repos/chiknrice/djeng", "Date": "2016-07-25T04:59:18Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((queryText == null) || ((queryText.length()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6877/buggy-version/medsearch.src.com.souyibao.search.util.QueryHelper.java", "BodyUseAPI": [], "Fixed commit": "30bf6e62819c209522fa0dca237e271a65635467", "Url": "https://api.github.com/repos/zwhusst/med", "Date": "2011-05-15T10:13:43Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.souyibao.search.ctrl.Controller.getSearchResult(java.lang.String,java.util.Set<com.souyibao.shared.entity.Keyword>,java.util.Set<com.souyibao.shared.entity.Topic>,java.util.Map<com.souyibao.shared.entity.Topic, com.souyibao.shared.entity.TopicCategory>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (searchResult == null) { dataModel = new com.souyibao.freemarker.SearchDataModel(); }else { dataModel = new com.souyibao.freemarker.SearchDataModel(searchResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6877/buggy-version/medweb.src.java.com.souyibao.restlet.SearchRestlet.java", "BodyUseAPI": [], "Fixed commit": "30bf6e62819c209522fa0dca237e271a65635467", "Url": "https://api.github.com/repos/zwhusst/med", "Date": "2011-05-15T10:13:43Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!newGraphNeeded) { java.lang.System.out.println(((((\"Thread [\" + (java.lang.Thread.currentThread().getId())) + \"] Returning same graph because graph [\") + (graph.hashCode())) + \"] is open\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4035/buggy-version/grakn-graph.src.main.java.ai.grakn.factory.AbstractInternalFactory.java", "BodyUseAPI": [], "Fixed commit": "f9f860bfb0a7c0af21f8f79294a304dbcede435a", "Url": "https://api.github.com/repos/fppt/grakn", "Date": "2016-11-23T17:42:14Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newGraphNeeded) { graph = buildTinkerPopGraph(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4035/buggy-version/grakn-graph.src.main.java.ai.grakn.factory.AbstractInternalFactory.java", "BodyUseAPI": [], "Fixed commit": "f9f860bfb0a7c0af21f8f79294a304dbcede435a", "Url": "https://api.github.com/repos/fppt/grakn", "Date": "2016-11-23T17:42:14Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (property.equals(rbinding.getPropertyString())) { throw new java.lang.RuntimeException(((\"Property \\\"\" + property) + \"\\\" is not allowed to be same as the reference expression in reference binding\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/407/buggy-version/zkbind.src.org.zkoss.bind.xel.zel.BindELResolver.java", "BodyUseAPI": [], "Fixed commit": "17341f2477faf3f4d9f33abbf4a69a32d5b54be4", "Url": "https://api.github.com/repos/DevChu/zk", "Date": "2017-07-24T02:13:25Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.avaa.balitidewidget.data.Ports.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (port == null) port = getPorts().get(Common.BENOA_PORT_ID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/9153/buggy-version/app.src.main.java.com.avaa.balitidewidget.widget.TideWidget.java", "BodyUseAPI": [], "Fixed commit": "45addcb8eb1a9d9d275135a095ea970996d05b03", "Url": "https://api.github.com/repos/AlanVerne/AnyTide_AndroidApp", "Date": "2017-02-27T04:29:58Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(r.getUser().equals(session.getUserName()))) connection.send(data, this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1421/buggy-version/src.com.dobby.app.DobbyClient.java", "BodyUseAPI": [], "Fixed commit": "3707aedfbf4816f46de7078959f5b4ef543912cc", "Url": "https://api.github.com/repos/spartango/Dobby", "Date": "2011-05-03T16:22:23Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (code != (io.github.yangxlei.bjnetwork.websocket.BJWebSocketClient.ERROR_CODE_CLIENT_EXCEPTION)) { disconnect(code, reason); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3767/buggy-version/MyApplication.bjnetwork-ws.src.main.java.io.github.yangxlei.bjnetwork.websocket.BJWebSocketClient.java", "BodyUseAPI": ["io.github.yangxlei.bjnetwork.websocket.BJWebSocketClient.WSListener.disconnect(int,java.lang.String)"], "Fixed commit": "d981ca71562092973ebaa624363a843d87b73e98", "Url": "https://api.github.com/repos/yangxlei/bjnetwork", "Date": "2016-07-06T12:38:01Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cnt == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6718/buggy-version/zul.src.org.zkoss.zul.impl.ListboxDataLoader.java", "BodyUseAPI": [], "Fixed commit": "d1b26992be5574c93b22b4f2d46e1553844512ee", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2015-09-22T03:13:58Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cnt == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6718/buggy-version/zul.src.org.zkoss.zul.impl.ListboxDataLoader.java", "BodyUseAPI": [], "Fixed commit": "d1b26992be5574c93b22b4f2d46e1553844512ee", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2015-09-22T03:13:58Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["huji.ac.il.finderskeepers.MainScreenActivity.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((intent != null) && (intent.hasExtra(\"homeLocation\"))) { huji.ac.il.finderskeepers.MainScreenActivity.myHomeLoc = ((com.google.android.gms.maps.model.LatLng) (intent.getParcelableExtra(\"homeLocation\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3605/buggy-version/app.src.main.java.huji.ac.il.finderskeepers.MainScreenActivity.java", "BodyUseAPI": ["android.content.Intent.getParcelableExtra(java.lang.String)"], "Fixed commit": "a3aa19b4451f964d44661d8f61c28254e4903753", "Url": "https://api.github.com/repos/venomouse/FindersKeepers", "Date": "2015-09-05T12:53:08Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<com.ricketts.Link, java.util.Queue<com.ricketts.Packet>>.get(com.ricketts.Node)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (sendingQueue == null) { throw new java.util.EmptyStackException(); }else { sendingQueue.add(packet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7913/buggy-version/src.com.ricketts.Router.java", "BodyUseAPI": ["java.util.Queue<com.ricketts.Packet>.add(com.ricketts.Packet)"], "Fixed commit": "567ce2a6d4007b7591ca9f13e273b5b3921f9f0f", "Url": "https://api.github.com/repos/cnirkhe/networksimulation", "Date": "2015-11-20T02:51:07Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((agent.getHealth()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/224/buggy-version/com.cse431.marsmen.strategy.IncreaseVisibilityRangeStrategy.java", "BodyUseAPI": [], "Fixed commit": "888acd8ff0911583cb1bc0ce6d93fbe52196eba1", "Url": "https://api.github.com/repos/SheynD/431MarsAgent", "Date": "2016-12-13T19:02:34Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((agent.getHealth()) <= 0) && ((agent.getEnergy()) < 3)) || ((agent.getEnergy()) < 2)) { java.lang.System.out.println(\"Not repairing not enough energy\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/224/buggy-version/com.cse431.marsmen.strategy.RepairStrategy.java", "BodyUseAPI": [], "Fixed commit": "888acd8ff0911583cb1bc0ce6d93fbe52196eba1", "Url": "https://api.github.com/repos/SheynD/431MarsAgent", "Date": "2016-12-13T19:02:34Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.Label.findById(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (label == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/924/buggy-version/app.controllers.admin.Items.java", "BodyUseAPI": [], "Fixed commit": "695b68b3a156c84adab1f2a2408ed0d45b0cd49e", "Url": "https://api.github.com/repos/royguo/xhc", "Date": "2013-10-10T09:50:44Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.SearchView.findViewById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((textView.getText().length()) > 0) { android.widget.Toast.makeText(getActivity(), textView.getText().toString(), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8795/buggy-version/app.src.main.java.com.seg2.kcl2d.NavigationDrawerFragment.java", "BodyUseAPI": ["android.widget.TextView.getText()", "android.widget.Toast.makeText(getActivity(),textView.getText().toString(),Toast.LENGTH_LONG)", "android.widget.Toast.makeText(getActivity(), textView.getText().toString(), Toast.LENGTH_LONG).show()", "textView.getText().toString()"], "Fixed commit": "b0c92bb3599d9f06f1f58510aa43373bd4aab38e", "Url": "https://api.github.com/repos/Gilbert09/kcl2d", "Date": "2014-12-05T22:17:04Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.element.TypeElement.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (annotation.genDbFunc()) { if (primaryKeyCount == 0) { processingEnv.getMessager().printMessage(javax.tools.Diagnostic.Kind.ERROR, \"At least one primary key is required. put @Attribute(primaryKey=true) to field of key\", element); }else if (primaryKeyCount > 1) { processingEnv.getMessager().printMessage(javax.tools.Diagnostic.Kind.ERROR, \"Only single primary key is supported.\", element); }else { if ((annotation.autoincrement()) && (!(primaryKey.isNumber))) { processingEnv.getMessager().printMessage(javax.tools.Diagnostic.Kind.ERROR, \"use autoincrement=false, or use number type.\", element); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3182/buggy-version/cathandsgendroid-apt.src.main.java.net.cattaka.util.cathandsgendroid.apt.DataModelProcessor.java", "BodyUseAPI": ["net.cattaka.util.cathandsgendroid.annotation.DataModel.autoincrement()"], "Fixed commit": "154f7270134a0a5b54aa2459516fcd88f1e1e73b", "Url": "https://api.github.com/repos/cattaka/CatHandsGendroid", "Date": "2014-09-03T21:21:37Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editTexts[(index + 1)].getText().toString().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(wordBelow.isEmpty())) { android.util.Log.d(\"Wordbelow\", wordBelow); if (!(neighbours.contains(wordBelow))) valid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6507/buggy-version/WordLadder_starter.app.src.main.java.com.google.engedu.wordladder.SolverActivity.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "java.util.ArrayList<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "5c8957c30d99b5ca46f2ff114f21e68606180622", "Url": "https://api.github.com/repos/amrithm98/Applied_CS_With_Android-Code", "Date": "2017-06-21T07:42:48Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != fileDetail) { poster.setType(fileDetail.getType()); poster.setFileName(fileDetail.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7381/buggy-version/src.main.java.com.sound.service.impl.SoundServiceEndpoint.java", "BodyUseAPI": ["com.sun.jersey.core.header.FormDataContentDisposition.getType()", "com.sun.jersey.core.header.FormDataContentDisposition.getName()", "com.sound.model.file.LocalFile.setFileName(fileDetail.getName())", "com.sound.model.file.LocalFile.setType(fileDetail.getType())"], "Fixed commit": "bdfb3837c6d44d1634e41d3fcf0da873842db10a", "Url": "https://api.github.com/repos/wooice/soundService", "Date": "2013-07-19T08:50:26Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != uploadedInputStream) { soundData = org.apache.commons.io.IOUtils.toByteArray(uploadedInputStream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7381/buggy-version/src.main.java.com.sound.service.impl.SoundServiceEndpoint.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)"], "Fixed commit": "bdfb3837c6d44d1634e41d3fcf0da873842db10a", "Url": "https://api.github.com/repos/wooice/soundService", "Date": "2013-07-19T08:50:26Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (informFinished) { for (int i = 0; i < (listeners.size()); i++) { listeners.get(i).vilExecutionFinished(plp, successful); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6876/buggy-version/Plugins.EASy-Producer.de.uni_hildesheim.sse.EASy-Producer.persistence.src.net.ssehub.easy.producer.core.mgmt.VilExecutionThread.java", "BodyUseAPI": [], "Fixed commit": "ac9b5282d2ad67998360a8fff3ddf1785dfc9348", "Url": "https://api.github.com/repos/SSEHUB/EASyProducer", "Date": "2016-08-03T13:15:52Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(doHitMap.isEmpty())) java.lang.System.out.println(\"Made contact!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3843/buggy-version/core.src.com.tussle.main.LibgdxTussleMain.java", "BodyUseAPI": [], "Fixed commit": "c133a831f8fd0738af1f63a2631b779343b77c5c", "Url": "https://api.github.com/repos/eaglgenes101/libgdx-tussle", "Date": "2017-04-03T19:59:58Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((debug(org.alfresco.extension.bulkimport.impl.BulkImportThreadPoolExecutor.log)) && ((semaphore.availablePermits()) <= 0)) { debug(org.alfresco.extension.bulkimport.impl.BulkImportThreadPoolExecutor.log, \"Queue is saturated, scanning will block.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8974/buggy-version/amp.src.main.java.org.alfresco.extension.bulkimport.impl.BulkImportThreadPoolExecutor.java", "BodyUseAPI": ["org.alfresco.extension.bulkimport.impl.BulkImportThreadPoolExecutor.debug(org.apache.commons.logging.Log,java.lang.String)"], "Fixed commit": "165f416a93d8e5f2b2fee7ac974210144051d575", "Url": "https://api.github.com/repos/drivera73/alfresco-bulk-import", "Date": "2016-07-12T05:23:18Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ir.MegaIndex.rankedSearch(java.util.LinkedList<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pll == null) { java.util.LinkedList<java.lang.String> ans = new java.util.LinkedList<java.lang.String>(); ans.add(\"Word not in index\"); return ans; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6320/buggy-version/TfIdf.ir.MegaIndex.java", "BodyUseAPI": [], "Fixed commit": "cbcaea292e171b5ccb770a1ce1e374b3056abab8", "Url": "https://api.github.com/repos/nlundbo/Ir12", "Date": "2012-04-26T12:04:42Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.born2go.lazzybee.db.impl.LearnApiImplements._getValueFromSystemByKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (queue_list != null) { java.util.List<java.lang.String> cardListId = _getListCardIdFromStringArray(queue_list); if (cardListId.contains(cardId)) { cardListId.remove(cardId); _insertOrUpdateToSystemTable(com.born2go.lazzybee.db.impl.LearnApiImplements.QUEUE_LIST, _listCardTodayToArrayListCardId(null, cardListId)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8032/buggy-version/app.src.main.java.com.born2go.lazzybee.db.impl.LearnApiImplements.java", "BodyUseAPI": ["com.born2go.lazzybee.db.impl.LearnApiImplements._getListCardIdFromStringArray(java.lang.String)"], "Fixed commit": "b67a8aedf2287845f438f1384bf9ae8abd54a414", "Url": "https://api.github.com/repos/hue1992/LazyBee-Android", "Date": "2015-12-17T13:29:10Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (output.getClass().toString().equals(\"class [[[[F\")) { double[] flatArray = java.util.Arrays.stream(((double[][][][]) (output))).flatMapToDouble(java.util.Arrays::stream).toArray(); for (float value : ((float[]) (output))) { if (java.lang.Float.isNaN(value)) { java.lang.System.out.println(\":(\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3875/buggy-version/PlaceRecognizer.app.src.main.java.network.CNNdroid.java", "BodyUseAPI": [], "Fixed commit": "444c6eaec57ee336b51bb308bba8ae16fe1bf669", "Url": "https://api.github.com/repos/HPI-DeepLearning/PlaceRecognizer", "Date": "2017-03-03T17:38:47Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.remotercp.service.connection.session.ISessionService.getRemoteServiceProxies(java.lang.Class,org.eclipse.ecf.core.identity.ID[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((managementServices.size()) > 1) { org.csstudio.ams.remotetool.ApplicationStopper.LOG.warn(\"I've found {} management services. Maybe there is a hanging connection.\", managementServices.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2985/buggy-version/applications.plugins.org.csstudio.ams.remotetool.src.org.csstudio.ams.remotetool.ApplicationStopper.java", "BodyUseAPI": ["java.util.List<org.csstudio.remote.management.IManagementCommandService>.size()", "org.slf4j.Logger.warn(java.lang.String,managementServices.size())"], "Fixed commit": "59e22e46777f9ff388ce9d4b60de3507285e35a2", "Url": "https://api.github.com/repos/Desy-extern/cs-studio", "Date": "2013-06-28T13:05:11Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.remotercp.service.connection.session.ISessionService.getRemoteServiceProxies(java.lang.Class,org.eclipse.ecf.core.identity.ID[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((managementServices.size()) > 1) { org.csstudio.ams.application.monitor.service.XmppRemoteService.LOG.warn(\"I've found {} management services. Maybe there is a hanging connection.\", managementServices.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2985/buggy-version/applications.plugins.org.csstudio.ams.application.monitor.src.org.csstudio.ams.application.monitor.service.XmppRemoteService.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,managementServices.size())", "java.util.List<org.csstudio.remote.management.IManagementCommandService>.size()"], "Fixed commit": "59e22e46777f9ff388ce9d4b60de3507285e35a2", "Url": "https://api.github.com/repos/Desy-extern/cs-studio", "Date": "2013-06-28T13:05:11Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mTransactions.get(key).getmDay()) <= toDay) && ((mTransactions.get(key).getmMonth()) == toMonth)) { toReturn.put(key, mTransactions.get(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/973/buggy-version/Sanity.app.src.main.java.Model.TransactionModel.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, Model.Transaction>.put(java.lang.Long,mTransactions.get(key))", "java.util.Map<java.lang.Long, Model.Transaction>.get(java.lang.Long)"], "Fixed commit": "e80a64af68a417ee5a1ea5a6f1a77271cca8b5a4", "Url": "https://api.github.com/repos/Dontmovedad/Github_Sanity", "Date": "2017-10-31T03:01:56Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (taskCrtDt != null) { java.util.Date taskStartDate = sdf2.parse(taskStDt); sdf2.applyPattern(\"MM/dd/yyyy\"); taskForm.setTaskStartDate(sdf2.format(taskStartDate)); }else { taskForm.setTaskStartDate(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6129/buggy-version/com.acc.tools.ed.com.acc.tools.ed.integration.src.main.java.com.acc.tools.ed.integration.dao.impl.AbstractEdbDao.java", "BodyUseAPI": [], "Fixed commit": "38c81bffdaa6cfd7ba890ac611fa6ce19d0b2157", "Url": "https://api.github.com/repos/OSJD/edboard", "Date": "2015-04-23T13:29:41Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (taskCrtDt != null) { java.util.Date taskEndDate = sdf3.parse(taskEtDt); sdf3.applyPattern(\"MM/dd/yyyy\"); taskForm.setTaskEndDate(sdf3.format(taskEndDate)); }else { taskForm.setTaskEndDate(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6129/buggy-version/com.acc.tools.ed.com.acc.tools.ed.integration.src.main.java.com.acc.tools.ed.integration.dao.impl.AbstractEdbDao.java", "BodyUseAPI": [], "Fixed commit": "38c81bffdaa6cfd7ba890ac611fa6ce19d0b2157", "Url": "https://api.github.com/repos/OSJD/edboard", "Date": "2015-04-23T13:29:41Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (taskCrtDt != null) { java.util.Date taskCreateDate = sdf1.parse(taskCrtDt); sdf1.applyPattern(\"MM/dd/yyyy\"); taskForm.setTaskCreateDate(sdf1.format(taskCreateDate)); }else { taskForm.setTaskCreateDate(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6129/buggy-version/com.acc.tools.ed.com.acc.tools.ed.integration.src.main.java.com.acc.tools.ed.integration.dao.impl.AbstractEdbDao.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "38c81bffdaa6cfd7ba890ac611fa6ce19d0b2157", "Url": "https://api.github.com/repos/OSJD/edboard", "Date": "2015-04-23T13:29:41Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (rs.getDate(\"TASK_ACTIVITI_DT\"))) { ledgerForm.setTaskActivityDate(new org.joda.time.DateTime(rs.getDate(\"TASK_ACTIVITI_DT\").getTime()).toString(\"MM/dd/yyyy\")); }else { ledgerForm.setTaskActivityDate(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6129/buggy-version/com.acc.tools.ed.com.acc.tools.ed.integration.src.main.java.com.acc.tools.ed.integration.dao.impl.AbstractEdbDao.java", "BodyUseAPI": ["java.sql.Date.getTime()", "java.sql.ResultSet.getDate(java.lang.String)", "org.joda.time.DateTime.toString(java.lang.String)", "com.acc.tools.ed.integration.dto.TaskLedgerForm.setTaskActivityDate(new org.joda.time.DateTime(rs.getDate(\"TASK_ACTIVITI_DT\").getTime()).toString(\"MM/dd/yyyy\"))"], "Fixed commit": "38c81bffdaa6cfd7ba890ac611fa6ce19d0b2157", "Url": "https://api.github.com/repos/OSJD/edboard", "Date": "2015-04-23T13:29:41Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.verapdf.tools.TypeConverter.getRealArray(getKey(ASAtom.MATRIX),int,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (matrix == null) { matrix = new double[]{ 1, 0, 0, 1, 0, 0 }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5572/buggy-version/src.main.java.org.verapdf.pd.images.PDXForm.java", "BodyUseAPI": [], "Fixed commit": "faa5fdd77f73df772156bd79c037e56e23f2a747", "Url": "https://api.github.com/repos/shem-sergey/veraPDF-pdflib", "Date": "2017-01-09T09:28:30Z"},
{"Line": "=>1372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resume) br.com.carlosrafaelgn.fplay.playback.Player.audioSinkBeforeFocusLoss = br.com.carlosrafaelgn.fplay.playback.Player.audioSink;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1811/buggy-version/src.br.com.carlosrafaelgn.fplay.playback.Player.java", "BodyUseAPI": [], "Fixed commit": "a5f2e2debbe61b2704148aba42191732238453ca", "Url": "https://api.github.com/repos/carlosrafaelgn/FPlayAndroid", "Date": "2015-09-12T16:01:49Z"},
{"Line": "=>1172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(parentDir.exists())) parentDir.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3839/buggy-version/src.main.java.org.ecocean.media.MediaAsset.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "5c4d9151463b4576a084e1d0d8ad513e8369224e", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2017-04-10T05:06:19Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isValid())) { return com.liferay.portal.kernel.util.StringPool.BLANK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3448/buggy-version/portlets.content-targeting-portlet.docroot.WEB-INF.src.com.liferay.contenttargeting.portlet.util.QueryRule.java", "BodyUseAPI": [], "Fixed commit": "c444b6fb28a8be227bec273eea6820146afb762f", "Url": "https://api.github.com/repos/juliocamarero/temp-wcm-plugins", "Date": "2014-02-24T12:08:14Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it.mat.unical.Helion_Prime.GFX.MainMenuFrame.getInstance().getMainMenuPanel().isStoryModeOn()) { it.mat.unical.Helion_Prime.SavesManager.PlayerSaveState.getInstance().setScore(money); it.mat.unical.Helion_Prime.SavesManager.PlayerSaveState.getInstance().setLastLevelCleared(profile.getLastlevelComplete()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7676/buggy-version/src.it.mat.unical.Helion_Prime.Online.ClientManager.java", "BodyUseAPI": [], "Fixed commit": "3fa20416e150c4300c5379b468a80d1c7d2eaaa4", "Url": "https://api.github.com/repos/edge33/HelionPrime", "Date": "2014-06-04T16:19:59Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it.mat.unical.Helion_Prime.GFX.MainMenuFrame.getInstance().getMainMenuPanel().isStoryModeOn()) { it.mat.unical.Helion_Prime.SavesManager.PlayerSaveState.getInstance().setScore(money); it.mat.unical.Helion_Prime.SavesManager.PlayerSaveState.getInstance().setLastLevelCleared(profile.getLastlevelComplete()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7676/buggy-version/src.it.mat.unical.Helion_Prime.Online.ClientManager.java", "BodyUseAPI": [], "Fixed commit": "3fa20416e150c4300c5379b468a80d1c7d2eaaa4", "Url": "https://api.github.com/repos/edge33/HelionPrime", "Date": "2014-06-04T16:19:59Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.fasterxml.jackson.core.JsonToken.FIELD_NAME) == (_currToken)) { _nameCopied = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/622/buggy-version/src.main.java.io.divolte.server.mincode.MincodeParser.java", "BodyUseAPI": [], "Fixed commit": "f7ff22ffa9859e27aca7f7127f3a8b39ae88d3b0", "Url": "https://api.github.com/repos/divolte/divolte-collector", "Date": "2015-05-11T21:16:02Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mc.getParentPosterURL()) != null) { mpi.setParentPosterURL((baseUrl + (mc.getParentPosterURL().substring(1)))); mpi.setImageURL((baseUrl + (mc.getParentPosterURL().substring(1)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5094/buggy-version/serenity-app.src.main.java.us.nineworlds.serenity.core.services.MusicTrackRetrievalIntentService.java", "BodyUseAPI": ["mc.getParentPosterURL().substring(int)", "us.nineworlds.serenity.core.model.impl.AudioTrackContentInfo.setParentPosterURL((baseUrl + (mc.getParentPosterURL().substring(1))))", "mc.getParentPosterURL().substring(int)", "us.nineworlds.plex.rest.model.impl.MediaContainer.getParentPosterURL()", "us.nineworlds.serenity.core.model.impl.AudioTrackContentInfo.setImageURL((baseUrl + (mc.getParentPosterURL().substring(1))))", "us.nineworlds.plex.rest.model.impl.MediaContainer.getParentPosterURL()"], "Fixed commit": "7bcc18e5916bffa7502ee77c91195391dffa6bb1", "Url": "https://api.github.com/repos/kingargyle/serenity-android", "Date": "2013-06-18T04:17:12Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (zw.org.zvandiri.business.util.DateUtil.getDateFromString(dateOfBirth.getText().toString()).after(today)) { dateOfBirth.setError(this.getString(R.string.date_aftertoday)); isValid = false; }else { dateOfBirth.setError(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8790/buggy-version/app.src.main.java.zw.org.zvandiri.activity.PatientRegStep1Activity.java", "BodyUseAPI": ["zw.org.zvandiri.activity.EditText.setError(<nulltype>)", "zw.org.zvandiri.activity.EditText.setError(this.getString(R.string.date_aftertoday))"], "Fixed commit": "49c7d86764976c76f3841a0004d12e8ad0e6a969", "Url": "https://api.github.com/repos/tasumzinda/zvandiri", "Date": "2017-04-04T09:44:55Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fiat.equals(telegram.CommandResponseBuilder.EUR)) telegram.CommandResponseBuilder.fakeNxtPriceEUR += (telegram.CommandResponseBuilder.fakeNxtPriceEUR) * increment; else telegram.CommandResponseBuilder.fakeNxtPriceUSD += (telegram.CommandResponseBuilder.fakeNxtPriceUSD) * increment;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4245/buggy-version/src.main.java.telegram.CommandResponseBuilder.java", "BodyUseAPI": [], "Fixed commit": "8ed3a78c8e853b621f10e211b529260d5b642285", "Url": "https://api.github.com/repos/FabioCornelli/RiccanzaBot", "Date": "2017-12-27T22:54:07Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fiat.equals(telegram.CommandResponseBuilder.EUR)) coin.setPriceEUR(telegram.CommandResponseBuilder.fakeNxtPriceEUR); else coin.setPriceUSD(telegram.CommandResponseBuilder.fakeNxtPriceUSD);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4245/buggy-version/src.main.java.telegram.CommandResponseBuilder.java", "BodyUseAPI": [], "Fixed commit": "8ed3a78c8e853b621f10e211b529260d5b642285", "Url": "https://api.github.com/repos/FabioCornelli/RiccanzaBot", "Date": "2017-12-27T22:54:07Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fiat.equals(telegram.CommandResponseBuilder.EUR)) telegram.CommandResponseBuilder.fakeNxtPriceEUR = coin.getPriceEUR(); else telegram.CommandResponseBuilder.fakeNxtPriceUSD = coin.getPriceUSD();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4245/buggy-version/src.main.java.telegram.CommandResponseBuilder.java", "BodyUseAPI": [], "Fixed commit": "8ed3a78c8e853b621f10e211b529260d5b642285", "Url": "https://api.github.com/repos/FabioCornelli/RiccanzaBot", "Date": "2017-12-27T22:54:07Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ingredients.containsAll(recipe.getIngredients())) { dishNames.add(recipe.getDishName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3664/buggy-version/src.main.java.com.lazyrecipe.manager.impl.RecipeManager.java", "BodyUseAPI": ["com.lazyrecipe.entity.Recipe.getDishName()", "java.util.List<java.lang.String>.add(recipe.getDishName())"], "Fixed commit": "b76894df4f4500fe5b52a4992c398d3340a7c9bc", "Url": "https://api.github.com/repos/vpkannan/LazyRecipe", "Date": "2016-06-11T03:17:03Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (label.isEmpty()) label = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2774/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientEdge.java", "BodyUseAPI": [], "Fixed commit": "912d82ac98bd6b96410349e86ae0fc331ee7b488", "Url": "https://api.github.com/repos/Bit451/Bit451-Database", "Date": "2014-07-18T11:45:23Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNetworkFilterReset) { int subId = mPhones[index].getSubId(); mNetworkFilter[index].setNetworkSpecifier(java.lang.String.valueOf(subId)); com.android.internal.telephony.dataconnection.DctController.logd((\"Network specifier set with subid: \" + subId)); isNetworkFilterReset = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3407/buggy-version/src.java.com.android.internal.telephony.dataconnection.DctController.java", "BodyUseAPI": [], "Fixed commit": "438f3f8566d8ae6463171c5bdee76abe19f3ac62", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2016-06-20T07:50:52Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index < 0) throw new java.lang.IllegalArgumentException(\"no html end tag\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6673/buggy-version/services.src.main.java.io.spacedog.services.MailResource.java", "BodyUseAPI": [], "Fixed commit": "6e507230a2b04277c3dccfd32529257649df37b8", "Url": "https://api.github.com/repos/spacedog-io/spacedog-server", "Date": "2016-01-05T12:53:53Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (model != null) max = model.getMaximumVertexDims(); else max = new org.apache.commons.math3.geometry.euclidean.threed.Vector3D(org.jtrfp.trcl.core.TR.legacy2Modern(def.getBoundingBoxRadius()), org.jtrfp.trcl.core.TR.legacy2Modern(def.getBoundingBoxRadius()), 0).scalarMultiply((1.0 / 1.5));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6730/buggy-version/src.main.java.org.jtrfp.trcl.obj.DEFObject.java", "BodyUseAPI": [], "Fixed commit": "ceef0327f999cfcf5ebac0d3cdbaaaf44b710495", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-11-01T05:27:15Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.Duration.getStandardDays()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (daysBetween > 0) daysBetween++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2931/buggy-version/AcmeTelecom.src.com.acmetelecom.Call.java", "BodyUseAPI": [], "Fixed commit": "6f7b8ab95906f712534bfbdc844274e2205990a7", "Url": "https://api.github.com/repos/johnflan/Advanced-Topics-in-Software-Engineering---Coursework-2", "Date": "2011-12-07T16:01:15Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlockState(net.minecraft.util.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (state.getProperties().containsKey(BlockLiquid.LEVEL)) { return (world.getBlockState(pos).getValue(BlockLiquid.LEVEL).intValue()) == 0; }else if (state.getProperties().containsKey(BlockFluidBase.LEVEL)) { return (world.getBlockState(pos).getValue(BlockFluidBase.LEVEL).intValue()) == 0; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3817/buggy-version/src.pneumaticCraft.common.util.FluidUtils.java", "BodyUseAPI": ["net.minecraft.block.state.IBlockState.getProperties()", "state.getProperties().containsKey(BlockFluidBase.LEVEL)"], "Fixed commit": "a1ebf90e821bdfb9fcfbd2ca1bfdba0b51add205", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2016-01-02T17:12:16Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.objecthunter.exp4j.function.Function.getNumArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (argsNum == 0) { count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3895/buggy-version/src.main.java.net.objecthunter.exp4j.Expression.java", "BodyUseAPI": [], "Fixed commit": "403989bf0e84c91d40a4697c201a6957a3d87606", "Url": "https://api.github.com/repos/fasseg/exp4j", "Date": "2016-03-18T08:13:10Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totallmatches > 0) { java.util.PriorityQueue<sci2s.mrfingerprint.PartialScoreLSSR.LocalMatch> heap = new java.util.PriorityQueue<sci2s.mrfingerprint.PartialScoreLSSR.LocalMatch>(((psc.lmatches.length) + (lmatches.length)), java.util.Collections.reverseOrder()); for (sci2s.mrfingerprint.PartialScoreLSSR.LocalMatch lm : psc.lmatches) heap.add(lm); for (sci2s.mrfingerprint.PartialScoreLSSR.LocalMatch lm : lmatches) heap.add(lm); result.lmatches = heap.toArray(new sci2s.mrfingerprint.PartialScoreLSSR.LocalMatch[heap.size()]); }else { result.lmatches = new sci2s.mrfingerprint.PartialScoreLSSR.LocalMatch[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7085/buggy-version/src.main.java.sci2s.mrfingerprint.PartialScoreLSSR.java", "BodyUseAPI": [], "Fixed commit": "3a3fb58f7a65f2f4dac59c0c5a6ea07666a464b9", "Url": "https://api.github.com/repos/dperaltac/bigdata-fingerprint", "Date": "2015-12-17T12:22:54Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((item.mailTo) != null) && (!(item.mailTo.equals(\"\")))) { title_base += (\" <font color=\\\"#0000CC\\\">\" + (item.mailTo)) + \"</font>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4741/buggy-version/src.cx.ath.dekosuke.ftbt.FutabaThreadAdapter.java", "BodyUseAPI": [], "Fixed commit": "4f90b7eb081f884f625c7fa620c52b0a70c9599b", "Url": "https://api.github.com/repos/dekosuke/ftbt", "Date": "2011-06-24T18:56:01Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mcTextAttr.find()) { status.datestr = normalize(mcTextAttr.group(1)); status.mailTo = extractMailTo(mcTextAttr.group(1)); if (!(status.mailTo.equals(\"\"))) { cx.ath.dekosuke.ftbt.FLog.d((\"mailto=\" + (status.mailTo))); } status.id = java.lang.Integer.parseInt(mcTextAttr.group(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4741/buggy-version/src.cx.ath.dekosuke.ftbt.FutabaThreadParser.java", "BodyUseAPI": ["cx.ath.dekosuke.ftbt.FutabaThreadParser.normalize(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "cx.ath.dekosuke.ftbt.FutabaThreadParser.extractMailTo(java.lang.String)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "4f90b7eb081f884f625c7fa620c52b0a70c9599b", "Url": "https://api.github.com/repos/dekosuke/ftbt", "Date": "2011-06-24T18:56:01Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((dailyNews.getQuestionTitle()) == null) || (dailyNews.getQuestionTitle().equals(\"\"))) { holder.questionTitle.setText(dailyNews.getDailyTitle()); }else { holder.questionTitle.setText(dailyNews.getQuestionTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/97/buggy-version/app.src.main.java.io.github.izzyleung.zhihudailypurify.adapter.NewsAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(dailyNews.getDailyTitle())", "io.github.izzyleung.zhihudailypurify.bean.DailyNews.getDailyTitle()", "io.github.izzyleung.zhihudailypurify.bean.DailyNews.getQuestionTitle()", "android.widget.TextView.setText(dailyNews.getQuestionTitle())"], "Fixed commit": "56120e4cc7de2ee92e4deb1c45ebe7f39131bfc1", "Url": "https://api.github.com/repos/izzyleung/ZhihuDailyPurify", "Date": "2015-04-15T18:51:57Z"},
{"Line": "=>835", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((host != null) && ((host.getComputeElement()) != null)) { host.setComputeElement(com.emc.storageos.db.client.util.NullColumnValueGetter.getNullURI()); _dbClient.persistObject(host); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3585/buggy-version/controllersvc.src.main.java.com.emc.storageos.computecontroller.impl.ucs.UcsComputeDevice.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.Host.setComputeElement(com.emc.storageos.db.client.util.NullColumnValueGetter.getNullURI())", "com.emc.storageos.db.client.DbClient.persistObject(com.emc.storageos.db.client.model.Host)"], "Fixed commit": "ad97d0eb942b4eebc0d837c86c4978fd724140a5", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-01-24T19:19:29Z"},
{"Line": "=>2140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((name.equals(\"Event\")) || (name.equals(\"MouseEvent\"))) || (name.equals(\"FocusEvent\"))) { if (package1.equals(\"flash.events\")) { return def1; }else { return def2; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3918/buggy-version/compiler.src.main.java.org.apache.flex.compiler.internal.projects.FlexProject.java", "BodyUseAPI": [], "Fixed commit": "057a3fe0c2af564cb7911e3f43509a9fd9f6ad5c", "Url": "https://api.github.com/repos/xjava/flex-falcon", "Date": "2016-10-12T19:58:23Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.loadConfig(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rdbmsConfiguration.getUsername()) != null) { java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(), rdbmsConfiguration.getUsername(), rdbmsConfiguration.getPassword()); }else { java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6381/buggy-version/core.org.wso2.carbon.ndatasource.rdbms.src.main.java.org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.java", "BodyUseAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(),rdbmsConfiguration.getUsername(),rdbmsConfiguration.getPassword())", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUsername()", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl())", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getPassword()"], "Fixed commit": "3238f4234f7355e37d9466dce299b68b548c36ab", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon4-kernel", "Date": "2015-09-02T12:59:21Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arguments.enable_debug) { java.lang.System.out.printf(\"Call for %c vs %c:\\n\", ref.getBase(), current_call.alt_snv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6121/buggy-version/Seurat.src.SomaticMutationAnalysis.java", "BodyUseAPI": [], "Fixed commit": "431a93d94ef031ada5ecb88f304d992841b2074b", "Url": "https://api.github.com/repos/alexischr/seurat", "Date": "2014-04-05T05:28:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((statement.getStartValue()) != null) { list.add(new liquibase.sql.UnparsedSql(java.lang.String.format(liquibase.sqlgenerator.ext.MysqlSequenceGenerator.SET_START_VALUE_STATEMENT, statement.getSequenceName(), statement.getStartValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4442/buggy-version/src.main.java.liquibase.sqlgenerator.ext.MysqlSequenceGenerator.java", "BodyUseAPI": ["java.util.List<liquibase.sql.Sql>.add(liquibase.sql.UnparsedSql)", "liquibase.statement.core.CreateSequenceStatement.getStartValue()", "java.lang.String.format(java.lang.String,statement.getSequenceName(),statement.getStartValue())", "liquibase.statement.core.CreateSequenceStatement.getSequenceName()"], "Fixed commit": "21e53b5c543b7ae207be3d0611fe6a8d968ed9c3", "Url": "https://api.github.com/repos/r351574nc3/lbext", "Date": "2011-09-17T05:57:50Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operatorLine) != null) { line = (line + \" \") + (operatorLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7248/buggy-version/src.main.java.reactor.core.publisher.SignalLogger.java", "BodyUseAPI": [], "Fixed commit": "c8557525dd4d1e1c73608348d50e66a3a257f21b", "Url": "https://api.github.com/repos/reactor/reactor-core", "Date": "2016-08-25T23:13:17Z"},
{"Line": "=>2109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entryLength % 2) != 0) { entryLength++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3270/buggy-version/src.com.dabomstew.pkrandom.romhandlers.Gen2RomHandler.java", "BodyUseAPI": [], "Fixed commit": "3cb988c44de43085e3fa90eca98997d3b71df565", "Url": "https://api.github.com/repos/Dabomstew/universal-pokemon-randomizer", "Date": "2016-04-22T06:17:58Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.startsWith(\"//\")) { path = path.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3557/buggy-version/src.main.java.ar.sgt.resolver.filter.ResolverFilter.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "251513d10ee0242f8bf6148d593359604ce53b80", "Url": "https://api.github.com/repos/codwar/urlresolver", "Date": "2011-10-04T18:33:52Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!flag) || ((this.preventCollapse) == null)) { this.preventCollapse = flag; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3454/buggy-version/src.io.itch.activities.MyGamesActivity.java", "BodyUseAPI": [], "Fixed commit": "d2c9b58956b4f4d88a88842b52132ae1bdce23c8", "Url": "https://api.github.com/repos/gotosleep/ItchDroid", "Date": "2014-05-19T01:39:37Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jayway.jsonpath.JsonPath.read(extractor.extract(request).get())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (content == null) { return absent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5872/buggy-version/moco-core.src.main.java.com.github.dreamhead.moco.extractor.JsonPathRequestExtractor.java", "BodyUseAPI": [], "Fixed commit": "5bfe18a51b1061f11c8b345b08fde146bbf1b823", "Url": "https://api.github.com/repos/dreamhead/moco", "Date": "2014-02-15T00:49:48Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lineIndex < ((mLinesToRemove.size) - 1)) { endRow = ((mLinesToRemove.items[(lineIndex + 1)]) - 1) - lineIndex; }else { endRow = (com.turbogerm.suchyblocks.GameArea.GAME_AREA_ROWS) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3810/buggy-version/suchyblocks.src.com.turbogerm.suchyblocks.GameArea.java", "BodyUseAPI": [], "Fixed commit": "3d159c628bdad1875eac9ac123726d09ea867890", "Url": "https://api.github.com/repos/mrzli/suchyblocks", "Date": "2013-03-25T12:39:28Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6749/buggy-version/app.src.main.java.ca.dal.group5.jukefit.PlaylistAndWorkoutActivity.java", "BodyUseAPI": [], "Fixed commit": "b06eaf99f6509bd71478a48cad507b1cf0f6579e", "Url": "https://api.github.com/repos/csci4126group5/jukebox-app", "Date": "2017-07-18T18:27:33Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (block != null) for (java.lang.Object o : block.statements()) this._statements.add(new edu.rice.cs.caper.bayou.application.dom_driver.DOMStatement(((org.eclipse.jdt.core.dom.Statement) (o))).handleAML());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3909/buggy-version/src.main.java.edu.rice.cs.caper.bayou.application.dom_driver.DOMBlock.java", "BodyUseAPI": [], "Fixed commit": "c20d5ff8fd2818b08c98db2ce29673b64c667226", "Url": "https://api.github.com/repos/capergroup/bayou", "Date": "2017-10-17T22:59:45Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.TIMES()) != null) { context.isTimes = true; }else if ((ctx.WHILE()) != null) { context.isWhile = true; }else { context.isUntil = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7403/buggy-version/plugins.ParserPlugin.src.plugins.quorum.Libraries.Language.Compile.JavaToQuorumListener.java", "BodyUseAPI": ["QuorumParser.Loop_statementContext.WHILE()"], "Fixed commit": "bb3e3743e85d0c32fba1cb979efea05c7629cc06", "Url": "https://api.github.com/repos/rjnienaber/quorum-ci", "Date": "2014-06-14T19:25:54Z"},
{"Line": "=>693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new java.io.File(java.nio.file.Paths.get(pathFixed).toString()).exists()) new java.io.File(java.nio.file.Paths.get(pathFixed).toString()).delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3753/buggy-version/src.main.java.dpfmanager.shell.modules.reporting.ReportGenerator.java", "BodyUseAPI": ["java.nio.file.Path.toString()", "java.nio.file.Paths.get(java.lang.String)", "java.io.File.delete()"], "Fixed commit": "f8a4b905b88a80c8bd641a2fa9589e4bd94c3e9c", "Url": "https://api.github.com/repos/EasyinnovaSL/DPFManager", "Date": "2016-01-28T12:15:29Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (delPosn != 0) { bufferPosn -= delPosn; if ((bufferPosn) < (-1)) { bufferPosn = -1; } delPosn = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5484/buggy-version/hadoop-common-project.hadoop-common.src.main.java.org.apache.hadoop.util.LineReader.java", "BodyUseAPI": [], "Fixed commit": "71afbfcdab32784253e8fbaf4365962ff968e405", "Url": "https://api.github.com/repos/zhudebin/hadoop", "Date": "2016-06-17T03:09:51Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startDate.equals(java.time.LocalDate.MAX)) { startDate = java.time.LocalDate.now(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5/buggy-version/src.parser.DateTimeParser.java", "BodyUseAPI": [], "Fixed commit": "2721843f0084cef94346dd88506f61f82460e576", "Url": "https://api.github.com/repos/cs2103jan2016-t11-3j/main", "Date": "2016-04-06T16:21:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 0) { pandaBot.queuePlay(sender, channel, message, args[0]); }else { pandaBot.queuePlay(sender, channel, message, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4451/buggy-version/src.main.java.io.github.redpanda4552.PandaBot.commands.CommandPlay.java", "BodyUseAPI": ["io.github.redpanda4552.PandaBot.commands.CommandPlay.queuePlay(net.dv8tion.jda.core.entities.User,net.dv8tion.jda.core.entities.MessageChannel,net.dv8tion.jda.core.entities.Message,java.lang.String)"], "Fixed commit": "1fc66496ba4ebb7ea0a3b12cf8caa20cefda4bed", "Url": "https://api.github.com/repos/RedPanda4552/PandaBot", "Date": "2017-03-17T22:20:54Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isInfinite()) { return otherInterval; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1961/buggy-version/dom.src.main.java.org.estatio.dom.valuetypes.LocalDateInterval.java", "BodyUseAPI": [], "Fixed commit": "8ea2ce9707973995041f5928fdcc97eb4eb0124b", "Url": "https://api.github.com/repos/estatio/estatio", "Date": "2014-02-13T16:03:12Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((confidence.getOverridingTransaction()) != null) { com.google.bitcoin.store.Sha256Hash overridingHash = confidence.getOverridingTransaction().getHash(); confidenceBuilder.setOverridingTransaction(com.google.bitcoin.store.WalletProtobufSerializer.hashToByteString(overridingHash)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/970/buggy-version/src.main.java.com.google.bitcoin.store.WalletProtobufSerializer.java", "BodyUseAPI": ["com.google.bitcoin.store.TransactionConfidence.getOverridingTransaction()", "confidence.getOverridingTransaction().getHash()"], "Fixed commit": "aa27c8d054f329945df434dab035c630361f3afe", "Url": "https://api.github.com/repos/jim618/multibit", "Date": "2012-10-15T20:37:22Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osmdroid.bonuspack.location.GeocoderNominatim.buildAndroidAddress(com.google.gson.JsonObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (gAddress != null) list.add(gAddress);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5412/buggy-version/OSMBonusPack.src.main.java.org.osmdroid.bonuspack.location.GeocoderNominatim.java", "BodyUseAPI": ["java.util.List<android.location.Address>.add(android.location.Address)"], "Fixed commit": "8afec7ae6be8f1dff02266679cb6c792989d3f74", "Url": "https://api.github.com/repos/MKergall/osmbonuspack", "Date": "2015-11-22T17:14:25Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osmdroid.bonuspack.location.GeocoderNominatim.buildAndroidAddress(com.google.gson.JsonObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (gAddress != null) list.add(gAddress);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5412/buggy-version/OSMBonusPack.src.main.java.org.osmdroid.bonuspack.location.GeocoderNominatim.java", "BodyUseAPI": ["java.util.List<android.location.Address>.add(android.location.Address)"], "Fixed commit": "8afec7ae6be8f1dff02266679cb6c792989d3f74", "Url": "https://api.github.com/repos/MKergall/osmbonuspack", "Date": "2015-11-22T17:14:25Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(jResult.has(\"lat\"))) || (!(jResult.has(\"lon\")))) || (!(jResult.has(\"address\")))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5412/buggy-version/OSMBonusPack.src.main.java.org.osmdroid.bonuspack.location.GeocoderNominatim.java", "BodyUseAPI": [], "Fixed commit": "8afec7ae6be8f1dff02266679cb6c792989d3f74", "Url": "https://api.github.com/repos/MKergall/osmbonuspack", "Date": "2015-11-22T17:14:25Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSON.parseObject(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(map.containsKey(\"id\"))) { if (map.containsKey(\"message\")) { throw new la.kaike.pm.dto.exception.BranchException(((java.lang.String) (map.get(\"message\")))); }else { throw new la.kaike.pm.dto.exception.BranchException(\"accept mc\u5931\u8d25\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6216/buggy-version/project-manage.src.main.java.la.kaike.pm.service.impl.BranchServiceImpl.java", "BodyUseAPI": ["java.util.Map<?, ?>.containsKey(java.lang.String)", "java.util.Map<?, ?>.get(java.lang.String)"], "Fixed commit": "453acd8447b00c2af4099040a5b8606ec88d4a41", "Url": "https://api.github.com/repos/Justinmad/auto-deploy", "Date": "2017-11-29T09:18:30Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f instanceof com.example.foodcourt.Time) { }else if (f instanceof com.example.foodcourt.Label) { }else { java.lang.System.out.println((\"Unknown category in distance calculation. Exiting for debug: \" + f)); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/73/buggy-version/FoodCourt.src.com.example.foodcourt.Knn.java", "BodyUseAPI": ["java.io.PrintStream.println((\"Unknown category in distance calculation.  Exiting for debug: \" + f))"], "Fixed commit": "987fb61e52e336a4686a734c075ddaf764521262", "Url": "https://api.github.com/repos/isminips/FoodCourt", "Date": "2015-05-08T11:32:39Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (word.equals(\"\\n\")) { width = android.view.ViewGroup.LayoutParams.MATCH_PARENT; }else { width = mChapterPageUtil.getStringWidth(word); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2813/buggy-version/src.me.li2.talkingbook21.ChapterPageFragment.java", "BodyUseAPI": ["me.li2.talkingbook21.ChapterPageUtil.getStringWidth(java.lang.String)"], "Fixed commit": "0117e8f230ea8f1cfbb38be721b12deb35d223e9", "Url": "https://api.github.com/repos/li2/android-talking-book", "Date": "2015-08-19T15:23:15Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (word.equals(\"\\n\")) { wordWidth = pageWidth; }else { wordWidth = pageUtil.getStringWidth(word); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2813/buggy-version/src.me.li2.talkingbook21.ChapterPageFragment.java", "BodyUseAPI": ["me.li2.talkingbook21.ChapterPageUtil.getStringWidth(java.lang.String)"], "Fixed commit": "0117e8f230ea8f1cfbb38be721b12deb35d223e9", "Url": "https://api.github.com/repos/li2/android-talking-book", "Date": "2015-08-19T15:23:15Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (word.equals(\"\\n\")) { wordWidth = pageWidth; }else { wordWidth = pageUtil.getStringWidth(word); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2813/buggy-version/src.me.li2.talkingbook21.ChapterPageAdapter.java", "BodyUseAPI": ["me.li2.talkingbook21.ChapterPageUtil.getStringWidth(java.lang.String)"], "Fixed commit": "0117e8f230ea8f1cfbb38be721b12deb35d223e9", "Url": "https://api.github.com/repos/li2/android-talking-book", "Date": "2015-08-19T15:23:15Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((step) == (gui.SelectionStep.STEP.FOCUS_AREA)) { java.util.ArrayList<common.FocusArea> selectedFA = getSelectedFocusAreas(); for (common.FocusArea fa : availableFocusAreas) { if (!(selectedFA.contains(fa))) { dropdownList.addItem(fa.getName()); } } }else { java.util.ArrayList<java.lang.Module> allModules = frame.getModel().getPreplanModules(); for (java.lang.Module mod : preplanModules) { if (!(selectedModules.contains(mod))) { dropdownList.addItem((((mod.getCode()) + \" \") + (mod.getName()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1006/buggy-version/KBMP.src.gui.SelectionStep.java", "BodyUseAPI": [], "Fixed commit": "415b00cc5625a3ceef038626ac1b0ed858fcc97f", "Url": "https://api.github.com/repos/bsmmoon/KBMP", "Date": "2016-04-15T13:00:19Z"},
{"Line": "=>1864", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (adjustOffsets) offset--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8780/buggy-version/nd4j-api.src.main.java.org.nd4j.linalg.api.ndarray.BaseNDArray.java", "BodyUseAPI": [], "Fixed commit": "0906cec419601bcd2af92c2d5f25cc5b74f3ef51", "Url": "https://api.github.com/repos/deeplearning4j/nd4j", "Date": "2015-05-28T18:40:27Z"},
{"Line": "=>1852", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (adjustOffsets) { for (int i = 1; i < (offsets.length); i++) { if ((offsets[i]) < 1) offsets[i] = 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8780/buggy-version/nd4j-api.src.main.java.org.nd4j.linalg.api.ndarray.BaseNDArray.java", "BodyUseAPI": [], "Fixed commit": "0906cec419601bcd2af92c2d5f25cc5b74f3ef51", "Url": "https://api.github.com/repos/deeplearning4j/nd4j", "Date": "2015-05-28T18:40:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fw != null) { fw.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2197/buggy-version/src.com.doos.webloc_opener.service.gui.WindowFocusRequester.java", "BodyUseAPI": ["java.io.FileWriter.close()"], "Fixed commit": "725ad963e31325030e7326cb3e69ce387a9b275e", "Url": "https://api.github.com/repos/benchdoos/WeblocOpener", "Date": "2016-11-26T14:31:38Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jtext.curses.Driver.getCh()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((readKey.key()) == (org.jtext.curses.ControlKey.RESIZE)) { bus.publish(Scene.REPAINT_EVENT_TOPIC, RepaintEvent.REPAINT_EVENT); }else { try { java.util.concurrent.TimeUnit.MILLISECONDS.sleep(1); } catch (java.lang.InterruptedException e) { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5088/buggy-version/src.main.java.org.jtext.keyboard.KeyboardHandler.java", "BodyUseAPI": [], "Fixed commit": "cca93f58f3b761ab87697979e691d7e7b9241f3f", "Url": "https://api.github.com/repos/rideg/jtext", "Date": "2016-02-17T17:01:12Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(piece.isCaptured())) { board[(8 - (piece.getY()))][((piece.getX()) - 'a')].pieceName = \"W_\" + (piece.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4139/buggy-version/src.chess.ChessGame.java", "BodyUseAPI": ["chess.Piece.getName()", "chess.Piece.getY()", "chess.Piece.getX()"], "Fixed commit": "3a0c40ef2f36921ce1929921bd779d295a80a082", "Url": "https://api.github.com/repos/ekanshmittal/chess", "Date": "2015-07-29T10:38:20Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(piece.isCaptured())) { board[(8 - (piece.getY()))][((piece.getX()) - 'a')].pieceName = \"B_\" + (piece.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4139/buggy-version/src.chess.ChessGame.java", "BodyUseAPI": ["chess.Piece.getX()", "chess.Piece.getName()", "chess.Piece.getY()"], "Fixed commit": "3a0c40ef2f36921ce1929921bd779d295a80a082", "Url": "https://api.github.com/repos/ekanshmittal/chess", "Date": "2015-07-29T10:38:20Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anyAreSet(channelState, ((org.jboss.remoting3.remote.RemoteConnectionHandler.RECEIVED_CLOSE_REQ) | (org.jboss.remoting3.remote.RemoteConnectionHandler.SENT_CLOSE_REQ)))) { pendingChannels.remove(pendingChannel); result.setCancelled(); return org.xnio.IoUtils.nullCancellable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7943/buggy-version/src.main.java.org.jboss.remoting3.remote.RemoteConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "0c72d111bbcddd6c065d67b72d23998140723e36", "Url": "https://api.github.com/repos/iweiss/jboss-remoting", "Date": "2016-01-28T18:13:55Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (newValue != null) { activeLetter = newValue.charAt(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/497/buggy-version/src.ua.kpi.tef.classobserver.controller.ClassObserverController.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "078ec8cb71be14c717edd6fb34a2a03d68684ac1", "Url": "https://api.github.com/repos/solomkinmv/class_observer", "Date": "2015-06-08T19:17:45Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.bither.preference.AppSharedPreference.getInstance().getPasswordSeedString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(net.bither.bitherj.utils.Utils.isEmpty(passwordSeedStr))) { db.execSQL(\"insert into password_seed (password_seed) values (?) \", new java.lang.String[]{ passwordSeedStr }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/412/buggy-version/bither-android.src.net.bither.db.AddressDatabaseHelper.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String,java.lang.String[])"], "Fixed commit": "50c7a55a8a714f70fa11c113f5b950c8581353ce", "Url": "https://api.github.com/repos/bither/bither-android", "Date": "2015-01-27T03:56:28Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mname.equals(\"equals\")) { if ((_origin) != null) { if ((_origin) instanceof org.zkoss.bind.proxy.FormProxyObject) { return method.invoke(((org.zkoss.bind.proxy.FormProxyObject) (_origin)).getOriginObject(), args); }else if (((args.length) == 1) && ((args[0]) instanceof org.zkoss.bind.proxy.FormProxyObject)) { return method.invoke(_origin, new java.lang.Object[]{ ((org.zkoss.bind.proxy.FormProxyObject) (args[0])).getOriginObject() }); }else { return method.invoke(_origin, args); } } return ((args.length) == 1) && ((args[0]) == null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2687/buggy-version/zkbind.src.org.zkoss.bind.proxy.BeanProxyHandler.java", "BodyUseAPI": [], "Fixed commit": "3ce367a7868f14ffdfab1f30da9063ad8caee0bd", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2015-11-24T04:47:29Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getChestManager().getOtherSide(block)) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4593/buggy-version/src.main.java.com.dumptruckman.chestrestock.ChestRestockListener.java", "BodyUseAPI": [], "Fixed commit": "032ab08e813dea25ca1047fe4f5dce933428e2fa", "Url": "https://api.github.com/repos/dumptruckman/ChestRestock", "Date": "2012-07-17T15:43:42Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.bund.bfr.knime.IO.getInt(row.getCell(dataSpec.findColumnIndex(TracingConstants.ID_COLUMN)))", "de.bund.bfr.knime.IO.getInt(row.getCell(dataSpec.findColumnIndex(TracingConstants.NEXT_COLUMN)))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((deliveries.containsKey(id)) && (deliveries.containsKey(next))) { deliveries.get(id).getAllNextIDs().add(next); deliveries.get(next).getAllPreviousIDs().add(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1149/buggy-version/de.bund.bfr.knime.openkrise.src.de.bund.bfr.knime.openkrise.TracingUtils.java", "BodyUseAPI": ["deliveries.get(id).getAllNextIDs()", "java.util.HashMap<java.lang.Integer, de.bund.bfr.knime.openkrise.MyDelivery>.get(int)", "java.util.HashMap<java.lang.Integer, de.bund.bfr.knime.openkrise.MyDelivery>.get(int)", "deliveries.get(next).getAllPreviousIDs()", "deliveries.get(next).getAllPreviousIDs().add(int)", "deliveries.get(id).getAllNextIDs().add(int)"], "Fixed commit": "b851c4a2cd2a2a3301f257fe4a290b73499e0acf", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2014-09-18T14:50:19Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indexName.isEmpty()) { indexName = (attribute.getName()) + \"_index\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3242/buggy-version/requery.src.main.java.io.requery.sql.SchemaModifier.java", "BodyUseAPI": [], "Fixed commit": "b84a958e7f89a7b8ab891c1811eacdf3c94ecb8a", "Url": "https://api.github.com/repos/requery/requery", "Date": "2016-12-29T07:01:09Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCacheAvailable()) { processManifestFile(getCachedFile()); }else { de.greenrobot.event.EventBus.getDefault().post(new com.bakerframework.baker.events.IssueCollectionErrorEvent(new java.lang.Exception(\"No cached file available\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4310/buggy-version/baker.src.main.java.com.bakerframework.baker.model.IssueCollection.java", "BodyUseAPI": [], "Fixed commit": "d8f043f891109562f8e983f997aa72e7263ab8f2", "Url": "https://api.github.com/repos/bakerframework/baker-android-refactor", "Date": "2015-02-10T07:52:43Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCacheAvailable()) { processManifestFile(getCachedFile()); }else { de.greenrobot.event.EventBus.getDefault().post(new com.bakerframework.baker.events.IssueCollectionErrorEvent(new java.lang.Exception(\"No cached file available\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4310/buggy-version/baker.src.main.java.com.bakerframework.baker.model.IssueCollection.java", "BodyUseAPI": [], "Fixed commit": "d8f043f891109562f8e983f997aa72e7263ab8f2", "Url": "https://api.github.com/repos/bakerframework/baker-android-refactor", "Date": "2015-02-10T07:52:43Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.longxi.data.service.FundDetailService.fetchData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!result) { badList.add(codeList.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/13/buggy-version/src.main.java.com.longxi.data.service.FundDetailService.java", "BodyUseAPI": [], "Fixed commit": "4fe492a7b56be11bb09b2e458f926ae8415d0e83", "Url": "https://api.github.com/repos/gcaiwl/fundtest", "Date": "2017-11-25T15:43:21Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.getLocation().getWorld().equals(mms.CreativeWorld)) { pd.CreativeSave.Imprint(player); if (!(player.isOp())) { for (org.bukkit.potion.PotionEffect effect : player.getActivePotionEffects()) { player.removePotionEffect(effect.getType()); } } pd.SurvivalSave.SetImprint(player); return true; }else if (player.getLocation().getWorld().getName().contains(mms.SurvivalWorld.getName())) { pd.SurvivalSave.Imprint(player); pd.CreativeSave.SetImprint(player); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5939/buggy-version/src.main.java.org.bvsd.manhattanplugin.Commands.java", "BodyUseAPI": ["org.bukkit.entity.Player.getLocation()", "org.bukkit.entity.Player.isOp()", "org.bukkit.entity.Player.removePotionEffect(effect.getType())", "pd.CreativeSave.SetImprint(org.bukkit.entity.Player)", "pd.SurvivalSave.SetImprint(org.bukkit.entity.Player)", "pd.SurvivalSave.Imprint(org.bukkit.entity.Player)", "player.getLocation().getWorld()", "player.getLocation().getWorld().getName().contains(mms.SurvivalWorld.getName())", "org.bukkit.entity.Player.getActivePotionEffects()", "player.getLocation().getWorld().getName()", "pd.CreativeSave.Imprint(org.bukkit.entity.Player)"], "Fixed commit": "6eeaee7065bef972325c56fe3ba49ae62ac463e4", "Url": "https://api.github.com/repos/DonoA/Manhattan", "Date": "2014-11-06T03:45:16Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((projectBurndownSprint.getId()) != null) { getSprint(projectBurndownSprint.getId()).setPointsTotal(totalStoryPoints()); }else { projectBurndownSprint.setSprintProject(this); projectBurndownSprints.add(projectBurndownSprint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/375/buggy-version/src.main.java.com.estafet.microservices.api.project.burndown.model.ProjectBurndown.java", "BodyUseAPI": ["com.estafet.microservices.api.project.burndown.model.ProjectBurndown.getSprint(projectBurndownSprint.getId())", "com.estafet.microservices.api.project.burndown.model.ProjectBurndownSprint.setSprintProject(com.estafet.microservices.api.project.burndown.model.ProjectBurndown)", "com.estafet.microservices.api.project.burndown.model.ProjectBurndownSprint.getId()", "java.util.Set<com.estafet.microservices.api.project.burndown.model.ProjectBurndownSprint>.add(com.estafet.microservices.api.project.burndown.model.ProjectBurndownSprint)", "com.estafet.microservices.api.project.burndown.model.ProjectBurndownSprint.setPointsTotal(int)"], "Fixed commit": "c5c5ed5c2a621fdf4d3824d0a6db99dc498949f2", "Url": "https://api.github.com/repos/Estafet-LTD/estafet-microservices-scrum-api-project-burndown", "Date": "2017-10-26T14:30:29Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evalJob.solver) == (de.isse.conf.Solver.GECODE_NAT)) solverCmd = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7819/buggy-version/evaluation.Constraint-Relationships-Evaluation.src.de.isse.ExperimentRunner.java", "BodyUseAPI": [], "Fixed commit": "ad9ac531ac3f116abd9b65e70deec424175359be", "Url": "https://api.github.com/repos/isse-augsburg/minibrass", "Date": "2016-08-22T11:02:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getKillerPlayer().getPlayer().getItemInHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(kills.containsKey(item))) kills.put(item, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7586/buggy-version/src.me.libraryaddict.librarys.Abilities.Barbarian.java", "BodyUseAPI": ["java.util.HashMap<org.bukkit.inventory.ItemStack, java.lang.Integer>.put(org.bukkit.inventory.ItemStack,int)"], "Fixed commit": "c8c11016cd86975528354d8f04509c9454ebcd77", "Url": "https://api.github.com/repos/libraryaddict/LibsMcpvp", "Date": "2013-06-04T14:06:05Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) { java.lang.Object[] toSend = new java.lang.Object[]{ itemstack }; cpw.mods.fml.common.network.PacketDispatcher.sendPacketToServer(micdoodle8.mods.crossbowmod.Util.createPacket(\"CrossbowMod\", 0, toSend)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3534/buggy-version/src.minecraft.micdoodle8.mods.crossbowmod.ItemCrossbow.java", "BodyUseAPI": [], "Fixed commit": "6d3ffde7fd45343a10a961a2767c2a00a87f913b", "Url": "https://api.github.com/repos/micdoodle8/Crossbow_Mod_2", "Date": "2013-01-18T23:26:24Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (projectRepository.findByRepositoryUrl(project.getRepositoryUrl()).isPresent()) throw new com.travelci.projects.project.exceptions.InvalidProjectException(\"Repository Url already exist.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6555/buggy-version/tci-projects.src.main.java.com.travelci.projects.project.ProjectServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "8c09f6cb67e2a4edc1763501fadeec5dcefc1943", "Url": "https://api.github.com/repos/Travel-CI/tci-project", "Date": "2017-07-11T16:15:41Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((description == null) && (identifier == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8458/buggy-version/import_layer.src.main.java.org.isatools.isatab.mapping.MetabolitesMapper.java", "BodyUseAPI": [], "Fixed commit": "2064ff76b87d6af1af05490517c19ef3e554e0f3", "Url": "https://api.github.com/repos/EBI-Metabolights/ISAvalidator-ISAconverter-BIImanager", "Date": "2013-04-19T11:01:57Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.StringUtils.split(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((addresses.length) != 2) { throw new java.lang.RuntimeException(((\"address[\" + text) + \"] is illegal, eg.127.0.0.1:3306\")); }else { setValue(new java.net.InetSocketAddress(addresses[0], java.lang.Integer.valueOf(addresses[1]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/216/buggy-version/instance.spring.src.main.java.com.alibaba.otter.canal.instance.spring.support.SocketAddressEditor.java", "BodyUseAPI": ["com.alibaba.otter.canal.instance.spring.support.SocketAddressEditor.setValue(java.net.InetSocketAddress)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "dbebb2c50d1e7cb7c7824cfe84a722ea82502d5a", "Url": "https://api.github.com/repos/wenzhihong2003/canal", "Date": "2013-08-09T07:42:55Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(src.hasRemaining())) { terminateWrites(); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5393/buggy-version/core.src.main.java.io.undertow.conduits.ChunkedStreamSinkConduit.java", "BodyUseAPI": [], "Fixed commit": "9b19ce6e4cf39739e25b19cd24687ed3a0063edb", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2013-11-21T12:53:33Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.JELLY_BEAN)) throw new java.lang.UnsupportedOperationException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4127/buggy-version/library.src.main.java.org.mariotaku.simplecamera.TexturePreview.java", "BodyUseAPI": [], "Fixed commit": "d24c83e28d5998c3c2971e16e8ff90ae1e9f84b6", "Url": "https://api.github.com/repos/mariotaku/SimpleCameraLibrary", "Date": "2014-09-18T02:10:25Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.JELLY_BEAN)) throw new java.lang.UnsupportedOperationException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4127/buggy-version/library.src.main.java.org.mariotaku.simplecamera.TexturePreview.java", "BodyUseAPI": [], "Fixed commit": "d24c83e28d5998c3c2971e16e8ff90ae1e9f84b6", "Url": "https://api.github.com/repos/mariotaku/SimpleCameraLibrary", "Date": "2014-09-18T02:10:25Z"},
{"Line": "=>790", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((shape.getMagnets()) != null) { shape.getMagnets().onNodeDragEnd(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2499/buggy-version/src.main.java.com.ait.lienzo.client.core.shape.wires.SelectionManager.java", "BodyUseAPI": ["shape.getMagnets().onNodeDragEnd(com.ait.lienzo.client.core.event.NodeDragEndEvent)", "com.ait.lienzo.client.core.shape.wires.WiresShape.getMagnets()"], "Fixed commit": "f70e273960382cb21a073b9e4b5e179ba6ceefd9", "Url": "https://api.github.com/repos/ahome-it/lienzo-core", "Date": "2017-07-10T22:53:01Z"},
{"Line": "=>735", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((shape.getMagnets()) != null) { com.ait.lienzo.client.core.shape.wires.handlers.impl.WiresShapeControlImpl.collectionSpecialConnectors(shape, connectors); shape.getMagnets().onNodeDragStart(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2499/buggy-version/src.main.java.com.ait.lienzo.client.core.shape.wires.SelectionManager.java", "BodyUseAPI": ["com.ait.lienzo.client.core.shape.wires.handlers.impl.WiresShapeControlImpl.collectionSpecialConnectors(com.ait.lienzo.client.core.shape.wires.WiresShape,java.util.Map<java.lang.String, com.ait.lienzo.client.core.shape.wires.WiresConnector>)", "shape.getMagnets().onNodeDragStart(com.ait.lienzo.client.core.event.NodeDragStartEvent)", "com.ait.lienzo.client.core.shape.wires.WiresShape.getMagnets()"], "Fixed commit": "f70e273960382cb21a073b9e4b5e179ba6ceefd9", "Url": "https://api.github.com/repos/ahome-it/lienzo-core", "Date": "2017-07-10T22:53:01Z"},
{"Line": "=>763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((shape.getMagnets()) != null) { shape.getMagnets().onNodeDragMove(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2499/buggy-version/src.main.java.com.ait.lienzo.client.core.shape.wires.SelectionManager.java", "BodyUseAPI": ["shape.getMagnets().onNodeDragMove(com.ait.lienzo.client.core.event.NodeDragMoveEvent)", "com.ait.lienzo.client.core.shape.wires.WiresShape.getMagnets()"], "Fixed commit": "f70e273960382cb21a073b9e4b5e179ba6ceefd9", "Url": "https://api.github.com/repos/ahome-it/lienzo-core", "Date": "2017-07-10T22:53:01Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elements.isEmpty()) && hasNegatedPresent) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2711/buggy-version/src.main.java.io.github.seleniumquery.functions.IsFunction.java", "BodyUseAPI": [], "Fixed commit": "64ea7957d5f41c49d64331d459f5303a659411b9", "Url": "https://api.github.com/repos/seleniumQuery/seleniumQuery", "Date": "2014-05-17T05:20:49Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((d[i]) == null) { d[i] = new int[n + 1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6991/buggy-version/Alkitab.src.main.java.yuku.alkitab.base.util.Levenshtein.java", "BodyUseAPI": [], "Fixed commit": "ceabc3257dd1f6d59910f2a2af0d13f67f3ac95d", "Url": "https://api.github.com/repos/yukuku/androidbible", "Date": "2016-08-30T19:25:32Z"},
{"Line": "=>1258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.transport.newCall(request).execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (response.isSuccessful()) { io.minio.InitiateMultipartUploadResult result = new io.minio.InitiateMultipartUploadResult(); parseXml(response, result); return result.getUploadId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2155/buggy-version/src.main.java.io.minio.MinioClient.java", "BodyUseAPI": ["io.minio.MinioClient.parseXml(com.squareup.okhttp.Response,io.minio.InitiateMultipartUploadResult)"], "Fixed commit": "6314e3d051488f077e89087f35f0bdf404ab738e", "Url": "https://api.github.com/repos/harshavardhana/minio-java", "Date": "2015-08-13T07:51:06Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.json.JsonReader.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jsonObject.containsKey(\"doNotShow\")) { boolean doNotShow = jsonObject.getBoolean(\"doNotShow\"); if (doNotShow) { com.playseeds.android.sdk.inappmessaging.InAppMessageManager.sharedInstance().doNotShow(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3117/buggy-version/sdk.src.main.java.com.playseeds.android.sdk.inappmessaging.RequestGeneralInAppMessage.java", "BodyUseAPI": ["javax.json.JsonObject.getBoolean(java.lang.String)"], "Fixed commit": "8ad2b0b7693812220681a5b92c98bc82a0c08ad9", "Url": "https://api.github.com/repos/therealseeds/seeds-sdk-android", "Date": "2015-08-05T21:38:29Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ucchyocean.ct.ColorTeaming.getPlayerTeam(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (team != null) team.removePlayer(player);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6490/buggy-version/src.main.java.com.github.ucchyocean.ct.ColorTeaming.java", "BodyUseAPI": ["org.bukkit.scoreboard.Team.removePlayer(org.bukkit.entity.Player)"], "Fixed commit": "1379e96f1f891c1d1027af9662a8266ff7ec4113", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2013-04-04T18:19:40Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIsShuttingDown)) { errorMessage = ((\"Failed to connect (tried \" + socketConnectAttemptNo) + \" time(s)): \") + (socketException.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1562/buggy-version/BtConnectorLib.btconnectorlib2.src.main.java.org.thaliproject.p2p.btconnectorlib.internal.bluetooth.BluetoothClientThread.java", "BodyUseAPI": [], "Fixed commit": "ab32f27b599318714894004976f273a0851f9f17", "Url": "https://api.github.com/repos/thaliproject/Thali_CordovaPlugin_BtLibrary", "Date": "2015-12-15T12:03:41Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "request.getResourceRef().getQueryAsForm()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"date\".equals(params.getFirstValue((prefix + (Param.TYPE.value()))))) { value = fr.cnes.sitools.util.DateUtils.parse(((java.lang.String) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6797/buggy-version/workspace.fr.cnes.sitools.core.src.fr.cnes.sitools.dataset.plugins.filters.core.GridFilter.java", "BodyUseAPI": [], "Fixed commit": "5d169f98a0b8a030e2543ab207906076bcc3010d", "Url": "https://api.github.com/repos/SITools2/core-v2", "Date": "2014-01-10T15:24:01Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((j < (p.length())) && ((p.charAt(j)) == '?')) { j++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8791/buggy-version/dynamic.src.WildCast.java", "BodyUseAPI": [], "Fixed commit": "08717e1d0ad44237297c292c57c1a58a6f5bd21c", "Url": "https://api.github.com/repos/supernova106/algorithm", "Date": "2015-11-04T06:52:37Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((((j < ((p.length()) - 1)) && ((p.charAt((j + 1))) == '?')) && ((s.charAt(i)) != (p.charAt(j)))) && ((p.charAt(j)) != '.'))) { i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8791/buggy-version/dynamic.src.WildCast.java", "BodyUseAPI": [], "Fixed commit": "08717e1d0ad44237297c292c57c1a58a6f5bd21c", "Url": "https://api.github.com/repos/supernova106/algorithm", "Date": "2015-11-04T06:52:37Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.jmessage.api.message.MessageListResult.getCursor()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((null != cursor) && (cn.jmessage.api.utils.StringUtils.isNotEmpty(cursor))) { cn.jmessage.api.message.MessageResult[] messages = result.getMessages(); cn.jmessage.api.message.MessageListResult secondResult = client.getMessageListByCursor(cursor); cn.jmessage.api.message.MessageResult[] secondMessages = secondResult.getMessages(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1189/buggy-version/example.main.java.cn.jmessage.api.examples.MessageExample.java", "BodyUseAPI": ["cn.jmessage.api.JMessageClient.getMessageListByCursor(java.lang.String)"], "Fixed commit": "f821f09ef486883888d64691fa4f47eba6f09585", "Url": "https://api.github.com/repos/jpush/jmessage-api-java-client", "Date": "2016-11-14T08:40:29Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(conceptsResponse.finishedIteratingOverRecords)) { numfound++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8269/buggy-version/model.src.com.constellio.model.services.taxonomies.TaxonomiesSearchServices.java", "BodyUseAPI": [], "Fixed commit": "8bccc821edc002179ee4fc36c57c7c55a545fcaf", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-07-26T17:57:46Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numberString.length()) != 1) { numberString += delimiter; delimitedString += numberString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5775/buggy-version/src.CalcEngine.java", "BodyUseAPI": [], "Fixed commit": "3b331ac59caa38c050e36dcac3af1b2b54519a8f", "Url": "https://api.github.com/repos/boldscot/postfixCalculator", "Date": "2016-02-28T19:04:06Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((owner) instanceof kroki.profil.subsystem.BussinesSubsystem)) owner = ((kroki.profil.subsystem.BussinesSubsystem) (projectCb.getSelectedItem()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/630/buggy-version/KrokiMockupTool.src.kroki.app.gui.dialog.NewFileDialog.java", "BodyUseAPI": [], "Fixed commit": "f2ebde8294101459e70ffea41fad0797348fb256", "Url": "https://api.github.com/repos/KROKIteam/KROKI-mockup-tool", "Date": "2015-04-16T05:49:33Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bussinesSubsystem) == null) { java.lang.Object selected = kroki.app.KrokiMockupToolApp.getInstance().getKrokiMockupToolFrame().getTree().getLastSelectedPathComponent(); if (selected instanceof kroki.profil.subsystem.BussinesSubsystem) selectedPack = ((kroki.profil.subsystem.BussinesSubsystem) (selected)); else if (selected instanceof kroki.profil.panel.VisibleClass) { selectedPack = ((kroki.profil.subsystem.BussinesSubsystem) (((kroki.profil.panel.VisibleClass) (selected)).umlPackage())); }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/630/buggy-version/KrokiMockupTool.src.kroki.app.action.NewFileAction.java", "BodyUseAPI": [], "Fixed commit": "f2ebde8294101459e70ffea41fad0797348fb256", "Url": "https://api.github.com/repos/KROKIteam/KROKI-mockup-tool", "Date": "2015-04-16T05:49:33Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bussinesSubsystem) != null) dialog = new kroki.app.gui.dialog.NewFileDialog(kroki.app.KrokiMockupToolApp.getInstance().getKrokiMockupToolFrame(), bussinesSubsystem); else dialog = new kroki.app.gui.dialog.NewFileDialog(kroki.app.KrokiMockupToolApp.getInstance().getKrokiMockupToolFrame(), selectedPack);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/630/buggy-version/KrokiMockupTool.src.kroki.app.action.NewFileAction.java", "BodyUseAPI": [], "Fixed commit": "f2ebde8294101459e70ffea41fad0797348fb256", "Url": "https://api.github.com/repos/KROKIteam/KROKI-mockup-tool", "Date": "2015-04-16T05:49:33Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((kroki.app.KrokiMockupToolApp.getInstance().getWorkspace().getPackageCount()) == 0) { javax.swing.JOptionPane.showMessageDialog(kroki.app.KrokiMockupToolApp.getInstance().getKrokiMockupToolFrame(), \"Please create a project first\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/630/buggy-version/KrokiMockupTool.src.kroki.app.action.NewFileAction.java", "BodyUseAPI": [], "Fixed commit": "f2ebde8294101459e70ffea41fad0797348fb256", "Url": "https://api.github.com/repos/KROKIteam/KROKI-mockup-tool", "Date": "2015-04-16T05:49:33Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getConfiguration().isDeleteAfterRead())) { marker = listObjects.getMarker(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2331/buggy-version/components.camel-aws.src.main.java.org.apache.camel.component.aws.s3.S3Consumer.java", "BodyUseAPI": [], "Fixed commit": "38c3de7f549bf4c651886b8249ebfa406e3df780", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-03-04T12:59:22Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((marker) != null) && (!(getConfiguration().isDeleteAfterRead()))) { listObjectsRequest.setMarker(marker); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2331/buggy-version/components.camel-aws.src.main.java.org.apache.camel.component.aws.s3.S3Consumer.java", "BodyUseAPI": [], "Fixed commit": "38c3de7f549bf4c651886b8249ebfa406e3df780", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-03-04T12:59:22Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextNull) { com.retroMachines.util.lambda.EvaluationExecutioner.delayAndRunNextStepAnim(this.getGameElement()); return; }else { this.setGameelementPosition(start, newPos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1222/buggy-version/core.src.com.retroMachines.util.lambda.Abstraction.java", "BodyUseAPI": [], "Fixed commit": "e7be61497fe327e4e1c0be08511d36b1ccc972c9", "Url": "https://api.github.com/repos/Die-anonymen-PSEler/game", "Date": "2015-03-25T22:57:16Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getInput(transform).getAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allInputs.isEmpty()) { org.apache.flink.api.java.operators.DataSource<java.lang.String> dummySource = context.getExecutionEnvironment().fromElements(\"dummy\"); result = dummySource.flatMap(new org.apache.flink.api.common.functions.FlatMapFunction<java.lang.String, T>() { @java.lang.Override public void flatMap(java.lang.String s, org.apache.flink.util.Collector<T> collector) throws java.lang.Exception { } }).returns(new org.apache.beam.runners.flink.translation.types.CoderTypeInformation(((org.apache.beam.sdk.coders.Coder<T>) (org.apache.beam.sdk.coders.VoidCoder.of())))); }else { for (org.apache.beam.sdk.values.PCollection<T> collection : allInputs) { org.apache.flink.api.java.DataSet<T> current = context.getInputDataSet(collection); if (result == null) { result = current; }else { result = result.union(current); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3124/buggy-version/runners.flink.runner.src.main.java.org.apache.beam.runners.flink.translation.FlinkBatchTransformTranslators.java", "BodyUseAPI": [], "Fixed commit": "b0e59fc96b6c1a25b2cd9f5db0ed66612f888d59", "Url": "https://api.github.com/repos/aljoscha/beam", "Date": "2016-05-13T12:17:50Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { android.widget.Toast.makeText(this, \"Please select a picture!\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2005/buggy-version/app.src.main.java.com.android.yardsale.activities.AddItemActivity.java", "BodyUseAPI": [], "Fixed commit": "ba44438b93a79b72fee1938730e29fc60744d350", "Url": "https://api.github.com/repos/Prajakta-Ashwini/YardSale", "Date": "2015-06-25T00:18:52Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (user != null) { ur.affectURToUser(user); user.checkPacket(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2783/buggy-version/NTR.src.MaxSNR.java", "BodyUseAPI": ["UR.affectURToUser(User)", "User.checkPacket()"], "Fixed commit": "32579d62bbe100b0e2a50a62766601b13624f7c8", "Url": "https://api.github.com/repos/tandriamil/NTR_Project_ARO_into_RMC_5G", "Date": "2016-03-15T11:00:41Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attName.equals(\"proxy\")) { property = \"false\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5907/buggy-version/fr.inria.atlanmod.mogwai.datastore.blueprints.src.fr.inria.atlanmod.mogwai.datastore.blueprints.NeoEMFGraphDatastore.java", "BodyUseAPI": [], "Fixed commit": "ab65bc964f5e452f9e3fa2f628de9cc68a119b96", "Url": "https://api.github.com/repos/atlanmod/Mogwai", "Date": "2017-04-25T11:13:47Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tw.firemaples.onscreenocr.ScreenTranslatorService._instance) == null) { tw.firemaples.onscreenocr.ScreenTranslatorService._instance = this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7459/buggy-version/app.src.main.java.tw.firemaples.onscreenocr.ScreenTranslatorService.java", "BodyUseAPI": [], "Fixed commit": "8a83135cf54c94f88fa9fffee546dd9f4af47a34", "Url": "https://api.github.com/repos/firemaples/EverTranslator", "Date": "2016-12-30T03:00:58Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tw.firemaples.onscreenocr.ScreenTranslatorService._instance) == null) { tw.firemaples.onscreenocr.ScreenTranslatorService._instance = this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7459/buggy-version/app.src.main.java.tw.firemaples.onscreenocr.ScreenTranslatorService.java", "BodyUseAPI": [], "Fixed commit": "8a83135cf54c94f88fa9fffee546dd9f4af47a34", "Url": "https://api.github.com/repos/firemaples/EverTranslator", "Date": "2016-12-30T03:00:58Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(homeNavigationAdapter.setActionBarHandler(actionBarHandler))) actionBarHandler.setHomeViewMenu();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1598/buggy-version/app.src.com.project.gutenberg.Home.java", "BodyUseAPI": ["com.project.gutenberg.layout.action_bar.ActionBarHandler.setHomeViewMenu()"], "Fixed commit": "e9e21b0058a0768ac0e7d6c0c1e61b039eee0791", "Url": "https://api.github.com/repos/AliceCengal/Goot", "Date": "2014-02-16T20:31:14Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.minueto.image.MinuetoImage.getHeight()", "org.minueto.image.MinuetoImage.getWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((imgWidth > (getWidth())) && (imgHeight > (getHeight()))) img = img.crop(0, 0, area.getWidth(), area.getHeight());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/9062/buggy-version/src.mw.client.gui.api.AbstractWindowComponent.java", "BodyUseAPI": [], "Fixed commit": "4d57c87972d521d5dff4c843480647ee278c770a", "Url": "https://api.github.com/repos/EmilyRSager/MedeivalWarfare", "Date": "2015-03-06T23:37:24Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["planner.algorithm.pop.PopAlgorithm.solve(planner.algorithm.pop.model.SolutionGraph)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (finalGraph != null) log(finalGraph, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6741/buggy-version/aiPlanner.planner.src.main.java.planner.algorithm.pop.PopAlgorithm.java", "BodyUseAPI": ["planner.algorithm.pop.PopAlgorithm.log(planner.algorithm.pop.model.SolutionGraph,<nulltype>)"], "Fixed commit": "ff3b114792556d4b7486df35edd4193f5126ff5d", "Url": "https://api.github.com/repos/mikeqcp/ai_planner", "Date": "2014-09-19T11:57:06Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a.getQualifiedName().equals(\"android:layout_gravity\")) { return android.widget.LinearLayout.class.getSimpleName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4542/buggy-version/src.com.excelsecu.axml.Utils.java", "BodyUseAPI": [], "Fixed commit": "4753aad9c6c1cea03f4f687bd5cce4f044283163", "Url": "https://api.github.com/repos/sickworm/AndroidXMLToJava", "Date": "2015-01-21T04:49:14Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmire.repository.AppUserRepository.findOne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((retUser.getMessages()) != null) && (!(retUser.getMessages().isEmpty()))) { java.util.List<com.gmire.model.Message> messages = retUser.getMessages(); java.util.Collections.sort(messages, (com.gmire.model.Message a,com.gmire.model.Message b) -> b.getMessageTime().compareTo(a.getMessageTime())); retUser.setMessages(messages); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4132/buggy-version/src.main.java.com.gmire.service.AppUserService.java", "BodyUseAPI": ["com.gmire.model.AppUser.setMessages(java.util.List<com.gmire.model.Message>)", "com.gmire.model.AppUser.getMessages()"], "Fixed commit": "7676a90affd8b8d2a559aa24d675b39b5a017f27", "Url": "https://api.github.com/repos/ranjanghimire/quickanswer", "Date": "2017-01-19T01:57:45Z"},
{"Line": "=>968", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bytecode) != null) { wyocl.ar.DFGGenerator.clearDFG(bytecode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/345/buggy-version/modules.wyocl.src.wyocl.ar.CFGNode.java", "BodyUseAPI": [], "Fixed commit": "47fdbab858b7434a9d92e4e691a854491693507b", "Url": "https://api.github.com/repos/melbyruarus/Whiley", "Date": "2013-07-22T09:01:59Z"},
{"Line": "=>947", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bytecode) == null) { endRegisterInfo = startRegisterInfo; }else { endRegisterInfo = wyocl.ar.DFGGenerator.propogateDFGThroughBytecode(bytecode, startRegisterInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/345/buggy-version/modules.wyocl.src.wyocl.ar.CFGNode.java", "BodyUseAPI": [], "Fixed commit": "47fdbab858b7434a9d92e4e691a854491693507b", "Url": "https://api.github.com/repos/melbyruarus/Whiley", "Date": "2013-07-22T09:01:59Z"},
{"Line": "=>957", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bytecode) != null) { allDFGNodes.addAll(bytecode.readDFGNodes.values()); allDFGNodes.addAll(bytecode.writtenDFGNodes.values()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/345/buggy-version/modules.wyocl.src.wyocl.ar.CFGNode.java", "BodyUseAPI": [], "Fixed commit": "47fdbab858b7434a9d92e4e691a854491693507b", "Url": "https://api.github.com/repos/melbyruarus/Whiley", "Date": "2013-07-22T09:01:59Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { mSpinnerType = ((android.widget.Spinner) (findViewById(R.id.spinnerTypeTasks))); }else { mSpinnerType = ((android.widget.Spinner) (android.view.LayoutInflater.from(getSupportActionBar().getThemedContext()).inflate(R.layout.toolbar_spinner_layout, null))); mToolbar.addView(mSpinnerType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6182/buggy-version/app.src.main.java.com.applilandia.letmeknow.TaskListActivity.java", "BodyUseAPI": [], "Fixed commit": "0445b9cdd0678d9cb6e96d1319d0739fa24d1b4b", "Url": "https://api.github.com/repos/juancarlospalomo/let-me-know", "Date": "2015-04-22T16:10:14Z"},
{"Line": "=>989", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DEBUG_ROOTS) { org.eclipse.osgi.internal.debug.Debug.println(((\"Resolver: resolved \" + (interimResults.size())) + \" bundles.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7523/buggy-version/bundles.org.eclipse.osgi.container.src.org.eclipse.osgi.container.ModuleResolver.java", "BodyUseAPI": [], "Fixed commit": "3e168c7db68f1b8fd35d50a4cd12cd17ad941296", "Url": "https://api.github.com/repos/rotty3000/rt.equinox.framework", "Date": "2015-02-24T15:04:34Z"},
{"Line": "=>994", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DEBUG_ROOTS) { org.eclipse.osgi.internal.debug.Debug.println((\" Resolved bundle: \" + (interimResultEntry.getKey()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7523/buggy-version/bundles.org.eclipse.osgi.container.src.org.eclipse.osgi.container.ModuleResolver.java", "BodyUseAPI": [], "Fixed commit": "3e168c7db68f1b8fd35d50a4cd12cd17ad941296", "Url": "https://api.github.com/repos/rotty3000/rt.equinox.framework", "Date": "2015-02-24T15:04:34Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUnique) { final java.util.Optional<com.github.ucluster.core.User> user = users.find(new com.github.ucluster.core.User.Property() { @java.lang.Override public java.lang.String key() { return propertyPath; } @java.lang.Override public java.lang.String value() { return ((java.lang.String) (request.get(propertyPath))); } }); return user.isPresent() ? new com.github.ucluster.core.definition.ValidationResult(java.util.Arrays.asList(new com.github.ucluster.core.definition.ValidationResult.ValidateFailure(propertyPath, type()))) : com.github.ucluster.core.definition.ValidationResult.SUCCESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/955/buggy-version/common.src.main.java.com.github.ucluster.common.definition.validator.UniquenessValidator.java", "BodyUseAPI": [], "Fixed commit": "59a57f6720dc9992408d2138568f978ce190660b", "Url": "https://api.github.com/repos/ucluster/ucluster", "Date": "2016-09-28T07:12:42Z"},
{"Line": "=>821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hidden) toolbar.setTitle(getString(R.string.hidden_folder)); else toolbar.setTitle(getString(R.string.local_folder));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7709/buggy-version/app.src.main.java.org.fossasia.phimpme.gallery.activities.LFMainActivity.java", "BodyUseAPI": [], "Fixed commit": "4527535ea03b13936ab2d54a5420770da5e810ee", "Url": "https://api.github.com/repos/fossasia/phimpme-android", "Date": "2017-09-17T15:13:51Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(DefaultActivity.on_screen)) { ctx.startActivity(new android.content.Intent(ctx, org.durka.hallmonitor.DefaultActivity.class).addFlags((((android.content.Intent.FLAG_ACTIVITY_NEW_TASK) | (android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION)) | (WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4491/buggy-version/src.org.durka.hallmonitor.Functions.java", "BodyUseAPI": [], "Fixed commit": "6d1694367c17c097278295145f7ee9449c8f3715", "Url": "https://api.github.com/repos/durka/HallMonitor", "Date": "2013-11-28T17:34:46Z"},
{"Line": "=>1150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (values == null) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5795/buggy-version/modules.runtime.src.main.java.org.shaolin.bmdp.json.JSONObject.java", "BodyUseAPI": [], "Fixed commit": "74cc7e29c48701f086892546ad58f5cb92eaf672", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2017-11-05T06:18:39Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Main.pixelToIndex(Main,boolean)", "Main.pixelToIndex(Main,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((grid.getState(y, x)) == (Grid.BLOCKED)) grid.clearSquare(y, x); else if (((grid.getState(y, x)) != (grid.STARTPOINT)) && ((grid.getState(y, x)) != (grid.ENDPOINT))) grid.set(y, x, Grid.BLOCKED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5162/buggy-version/src.Main.java", "BodyUseAPI": ["Grid.clearSquare(int,int)", "Grid.getState(int,int)", "Grid.set(int,int,Grid.BLOCKED)", "Grid.getState(int,int)"], "Fixed commit": "e134860e7f29eb70d55c2274b5e839931deea1b8", "Url": "https://api.github.com/repos/idanshemy/ShemyCossoulFinal", "Date": "2016-05-19T15:39:52Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size < 7) size++; else break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7941/buggy-version/core.src.ecu.se.map.Map.java", "BodyUseAPI": [], "Fixed commit": "7a386a9010e312252568771eabddcbc531c36168", "Url": "https://api.github.com/repos/jaymcole/DungeonCrawler2", "Date": "2017-11-20T00:53:41Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.bananaco.permissions.Permissions.getWorldPermissionsManager().getPermissionSet(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (set == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/2564/buggy-version/src.de.bananaco.permissions.worlds.HasPermission.java", "BodyUseAPI": [], "Fixed commit": "1ad125bfacfb8cbb9edc6cc53fff07711cb31ab6", "Url": "https://api.github.com/repos/codename-B/bPermissions", "Date": "2011-11-16T18:56:10Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.plugin.Plugin.getDataFolder()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(folder.exists())) if (!(folder.mkdir())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8910/buggy-version/consoles-computers.src.main.java.ca.jarcode.consoles.computer.NativeLoader.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "83ef1a9a84d6cc6db212f887d587f94aba6757b6", "Url": "https://api.github.com/repos/wacossusca34/Consoles", "Date": "2015-10-25T22:56:41Z"},
{"Line": "=>692", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((monsters.get(view.getLevel())) != null) { ((com.cs413.walker.actors.AbstractMonster) (monsters.get(view.getLevel()))).setChasing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8071/buggy-version/Walker.src.com.cs413.walker.main.WalkerActivity.java", "BodyUseAPI": ["com.cs413.walker.view.TerrainView.getLevel()", "((com.cs413.walker.actors.AbstractMonster) (monsters.get(view.getLevel()))).setChasing(boolean)", "java.util.HashMap<java.lang.Integer, com.cs413.walker.actors.Actor>.get(view.getLevel())"], "Fixed commit": "b026a5b42c0bc259850f7bb912e5d63cdd1444fe", "Url": "https://api.github.com/repos/mtk4/project2", "Date": "2012-12-09T00:19:43Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6155/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "a341f80fbb41968a54f27ecb8ac7a06d1cc53107", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Enumeration.nextElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((appender.getName()) != null) { if (appender.getName().equals(appenderName)) { targetAppender = appender; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/6674/buggy-version/components.logging.org.wso2.carbon.logging.service.src.main.java.org.wso2.carbon.logging.service.LoggingAdmin.java", "BodyUseAPI": ["appender.getName().equals(java.lang.String)", "org.apache.log4j.Appender.getName()"], "Fixed commit": "ade18348cc229734e53e15483401457bdd69baa7", "Url": "https://api.github.com/repos/callkalpa/carbon-commons", "Date": "2016-08-31T09:50:48Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hex.equals(this.level.selectedHexomino.get())) { java.lang.System.out.println(\"THIS HEXOMINO IS ALREADY SELECTED\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7230/buggy-version/KabasujiSinon.src.sinon.controllers.HexominoBullpenController.java", "BodyUseAPI": [], "Fixed commit": "ba4dff5022608227869efe1011b50f0dada6f141", "Url": "https://api.github.com/repos/brianmcca1/SinonKabasuji", "Date": "2016-04-27T01:13:55Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((acc_magnitude < 1000) && (acc_magnitude > 1)) { acc_magnitudes.add(acc_magnitude); this.acceleration = acceleration; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7650/buggy-version/app.src.main.java.com.example.lew.indoornavigation.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Double>.add(double)"], "Fixed commit": "ec573a4f9a8243982091cc0abbf414008c5743f3", "Url": "https://api.github.com/repos/w31ha0/AndroidIndoorNavigation", "Date": "2017-04-10T13:59:20Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.get()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4002/buggy-version/maohifx.common.src.main.java.com.maohi.software.maohifx.common.SimpleLocalDateProperty.java", "BodyUseAPI": [], "Fixed commit": "efd968c7624390d4689101cb834df848fe868f6a", "Url": "https://api.github.com/repos/Heifara/maohifx", "Date": "2015-12-23T22:33:30Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.quorum.symbols.SymbolTable.getFileDescriptor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mainFile == null) { int a = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1393/buggy-version/quorum.src.org.quorum.symbols.SymbolTable.java", "BodyUseAPI": [], "Fixed commit": "2b9d4770346b98684e57f8565b71493550c8953b", "Url": "https://api.github.com/repos/rjnienaber/quorum-ci", "Date": "2013-08-29T16:37:46Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["network.getFluidStorage().get(net.minecraftforge.fluids.FluidStack,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (stackInStorage != null) { int toExtract = java.lang.Math.min(Fluid.BUCKET_VOLUME, stackInStorage.amount); net.minecraftforge.fluids.FluidStack took = network.extractFluid(stack, toExtract, compare); if (took != null) { int remainder = toExtract - (tankOut.fillInternal(took, true)); if (remainder > 0) { network.insertFluid(took, remainder, false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5410/buggy-version/src.main.java.refinedstorage.tile.TileFluidInterface.java", "BodyUseAPI": ["java.lang.Math.min(Fluid.BUCKET_VOLUME,stackInStorage.amount)"], "Fixed commit": "6e63cf368e99741b46016146699d987a7ae6d381", "Url": "https://api.github.com/repos/raoulvdberge/refinedstorage", "Date": "2016-09-20T16:09:58Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (releaseVersion == currVersion) { currVersion = new java.lang.Integer(matcherCurrentVersion.group(2)); releaseVersion = new java.lang.Integer(matcherReleaseBranchVersion.group(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3199/buggy-version/src.main.java.com.codegik.gitflow.mojo.util.GitFlow.java", "BodyUseAPI": [], "Fixed commit": "35f2f319b12eb5387dbed939507f797c67993810", "Url": "https://api.github.com/repos/codegik/gitflow", "Date": "2015-10-20T23:57:19Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileChooser.getSelectedFile()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/4649/buggy-version/src.net.jlxip.mermaid.Build.java", "BodyUseAPI": [], "Fixed commit": "ccc885bce91dad5bc9288d272e12eed6bb40e9dd", "Url": "https://api.github.com/repos/jlxip/Mermaid", "Date": "2017-02-19T12:37:08Z"},
{"Line": "=>681", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mysql.jdbc.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(rs.first())) { stmt = ((com.mysql.jdbc.PreparedStatement) (connection.prepareStatement(\"INSERT INTO athlete Values (NULL,?,?,?,?,?)\"))); stmt.setString(1, athlete.getName()); stmt.setInt(2, athlete.getSex().getSex()); stmt.setFloat(3, athlete.getWeight()); stmt.setFloat(4, athlete.getHeight()); stmt.setInt(5, country_id); stmt.executeUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8177/buggy-version/server.src.server.Database.java", "BodyUseAPI": [], "Fixed commit": "240308ed0695dc1cf6c1f63cc5b9081000c2f170", "Url": "https://api.github.com/repos/danyaberezun/olympIS", "Date": "2013-04-12T20:27:54Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (baseURI.endsWith(\"/\")) { baseURI = baseURI.substring(0, ((baseURI.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7227/buggy-version/src.main.java.org.jahia.modules.jcrestapi.URIUtils.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "fc827a9549dd2eef5fcbd17c1030ce436e53b1c6", "Url": "https://api.github.com/repos/Jahia/jcrestapi", "Date": "2014-04-18T11:04:27Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v17.leanback.widget.EnhanceVerticalGridView.findViewHolderForAdapterPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (viewHolder == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1760/buggy-version/src.android.support.v17.leanback.widget.EnhanceVerticalGridView.java", "BodyUseAPI": [], "Fixed commit": "5eabddd572a836285dc66b5c257ebca859e9d3ef", "Url": "https://api.github.com/repos/jarhot1992/android-support-v17", "Date": "2015-12-29T03:15:17Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v17.leanback.widget.EnhanceVerticalGridView.findViewHolderForAdapterPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (viewHolder == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1760/buggy-version/src.android.support.v17.leanback.widget.EnhanceVerticalGridView.java", "BodyUseAPI": [], "Fixed commit": "5eabddd572a836285dc66b5c257ebca859e9d3ef", "Url": "https://api.github.com/repos/jarhot1992/android-support-v17", "Date": "2015-12-29T03:15:17Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v17.leanback.widget.EnhanceHorizontalGridlView.findViewHolderForAdapterPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (viewHolder == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1760/buggy-version/src.android.support.v17.leanback.widget.EnhanceHorizontalGridlView.java", "BodyUseAPI": [], "Fixed commit": "5eabddd572a836285dc66b5c257ebca859e9d3ef", "Url": "https://api.github.com/repos/jarhot1992/android-support-v17", "Date": "2015-12-29T03:15:17Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v17.leanback.widget.EnhanceHorizontalGridlView.findViewHolderForAdapterPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (viewHolder == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1760/buggy-version/src.android.support.v17.leanback.widget.EnhanceHorizontalGridlView.java", "BodyUseAPI": [], "Fixed commit": "5eabddd572a836285dc66b5c257ebca859e9d3ef", "Url": "https://api.github.com/repos/jarhot1992/android-support-v17", "Date": "2015-12-29T03:15:17Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getEditorInput()) instanceof org.eclipse.ui.IFileEditorInput) { org.eclipse.ui.IFileEditorInput input = ((org.eclipse.ui.IFileEditorInput) (getEditorInput())); org.eclipse.core.resources.IFile sourceFile = input.getFile(); model.setSourceFile(sourceFile.getRawLocation().toFile().toPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8080/buggy-version/plugins.de.ovgu.featureide.fm.ui.src.de.ovgu.featureide.fm.ui.editors.FeatureModelEditor.java", "BodyUseAPI": [], "Fixed commit": "c136234800ed2a0599eee029cd247eadff6a676c", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2017-04-06T11:17:54Z"},
{"Line": "=>2202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ichi2.anki.AnkiDroidApp.deck()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (deck != null) { android.util.Log.i(AnkiDroidApp.TAG, (((\"Synchronizing deck \" + (mDeckFilename)) + \", conflict resolution: \") + conflictResolution)); android.util.Log.i(AnkiDroidApp.TAG, java.lang.String.format(Utils.ENGLISH_LOCALE, \"Before syncing - mod: %f, last sync: %f\", deck.getModified(), deck.getLastSync())); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1609/buggy-version/src.com.ichi2.anki.StudyOptions.java", "BodyUseAPI": ["android.util.Log.i(AnkiDroidApp.TAG,java.lang.String)", "java.lang.String.format(Utils.ENGLISH_LOCALE,java.lang.String,deck.getModified(),deck.getLastSync())", "com.ichi2.anki.Deck.getLastSync()", "com.ichi2.anki.Deck.getModified()"], "Fixed commit": "2090afc5689a51b426f2aa24f4cef1a70ab97b43", "Url": "https://api.github.com/repos/trurlo/Anki-Android", "Date": "2011-10-07T20:49:58Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.el.BeanELResolver.toBeanProperty(java.lang.Object,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (beanProperty == null) { java.lang.Object ret = this.onPropertyNotFoundRead(base, property); context.setPropertyResolved(true); return ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5364/buggy-version/modules.api.src.main.java.javax.el.BeanELResolver.java", "BodyUseAPI": [], "Fixed commit": "d40b82dc479c8da9d0414f74b021442dc41cbb1a", "Url": "https://api.github.com/repos/OndraZizka/juel", "Date": "2013-06-18T00:15:21Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (firstCurly == (-1)) { return logLine.substring(0, (newPath - 4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/58/buggy-version/java.src.main.java.com.github.mread.turbulence4j.calculators.MoveAggregator.java", "BodyUseAPI": [], "Fixed commit": "9dec3a7df87abee055426adc91aa47b734747169", "Url": "https://api.github.com/repos/mread/turbulence", "Date": "2011-03-08T18:45:33Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (firstCurly == (-1)) { return logLine.substring(newPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/58/buggy-version/java.src.main.java.com.github.mread.turbulence4j.calculators.MoveAggregator.java", "BodyUseAPI": [], "Fixed commit": "9dec3a7df87abee055426adc91aa47b734747169", "Url": "https://api.github.com/repos/mread/turbulence", "Date": "2011-03-08T18:45:33Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xlythe.view.floating.OpenShortcutActivity.createServiceIntent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((com.xlythe.view.floating.OpenShortcutActivity.ACTION_OPEN.equals(getIntent().getAction())) && ((intent.getAction()) == null)) { intent.setAction(com.xlythe.view.floating.OpenShortcutActivity.ACTION_OPEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3971/buggy-version/floating-view.src.main.java.com.xlythe.view.floating.OpenShortcutActivity.java", "BodyUseAPI": ["android.content.Intent.setAction(java.lang.String)"], "Fixed commit": "57c6bfcdf457b086fe24fffca55b398188430849", "Url": "https://api.github.com/repos/Xlythe/FloatingView", "Date": "2016-12-31T18:06:56Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) { if ((dateChangedListener) != null) { dateChangedListener.onDateChanged(this.date); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5435/buggy-version/app.src.main.java.com.kvest.odessatoday.ui.fragment.FilmsListFragment.java", "BodyUseAPI": [], "Fixed commit": "4bd1be5c7374d54b9a1c11b23ef9122d6d713adc", "Url": "https://api.github.com/repos/Kvest/odessa-today", "Date": "2015-09-27T14:28:19Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (behavior != null) { behavior.setObject(new jumpingalien.model.program.type.Object(this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8867/buggy-version/OGP1415-JumpingAlien.src.jumpingalien.model.Characters.java", "BodyUseAPI": [], "Fixed commit": "955847d7993515f643d2798f479dc682d3eb4703", "Url": "https://api.github.com/repos/Peter-Lacko/Jumping-Alien", "Date": "2015-05-21T12:50:08Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this) instanceof jumpingalien.model.Shark) || ((this) instanceof jumpingalien.model.Buzam)) { try { jumpingalien.model.program.statement.Statement nextStatement = program.getMainIterator().next(); nextStatement.execute(); } catch (java.lang.Exception e) { getProgram().setStatement(new jumpingalien.model.program.statement.Skip(null)); program.setMainIterator(getProgram().iterator()); } }else { jumpingalien.model.program.statement.Statement nextStatement = program.getMainIterator().next(); nextStatement.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8867/buggy-version/OGP1415-JumpingAlien.src.jumpingalien.model.Characters.java", "BodyUseAPI": [], "Fixed commit": "955847d7993515f643d2798f479dc682d3eb4703", "Url": "https://api.github.com/repos/Peter-Lacko/Jumping-Alien", "Date": "2015-05-21T12:50:08Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Renderer.LERP(double,double,double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pZ > (zbuf[scanline][pix])) { zbuf[scanline][pix] = pZ; pixels[scanline][pix][0] = ((int) (LERP(t, nxXL, nxXR))); pixels[scanline][pix][1] = ((int) (LERP(t, nyXL, nyXR))); pixels[scanline][pix][2] = ((int) (LERP(t, nzXL, nzXR))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/509/buggy-version/3d.Renderer.java", "BodyUseAPI": [], "Fixed commit": "e86aa6f62d683839941d6b216e4f3c1bcbb743ba", "Url": "https://api.github.com/repos/emmett9001/graphics", "Date": "2013-03-31T21:48:20Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((path.indexOf(\"/\")) == (-1)) { return folder.containsFile(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3316/buggy-version/src.main.java.org.nalby.yobatis.structure.SpringParser.java", "BodyUseAPI": ["org.nalby.yobatis.structure.Folder.containsFile(java.lang.String)"], "Fixed commit": "69b5b077ab89b8a6500aa3dfbb0be5f0aafcef50", "Url": "https://api.github.com/repos/linbaiye/yobatis", "Date": "2017-11-06T15:29:38Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filename.indexOf(\"/\")) != (-1)) { java.lang.String folderPath = tokens[1].replaceFirst(\"/.*$\", \"\"); filename = tokens[1].replace((folderPath + \"/\"), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3316/buggy-version/src.main.java.org.nalby.yobatis.structure.SpringParser.java", "BodyUseAPI": [], "Fixed commit": "69b5b077ab89b8a6500aa3dfbb0be5f0aafcef50", "Url": "https://api.github.com/repos/linbaiye/yobatis", "Date": "2017-11-06T15:29:38Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (center != null) { this.createAllowed = isAllowed(new edu.ualberta.med.biobank.common.permission.processingEvent.ProcessingEventCreatePermission(center.getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3037/buggy-version/eclipse_ws.biobank2.src.edu.ualberta.med.biobank.treeview.processing.ProcessingEventGroup.java", "BodyUseAPI": [], "Fixed commit": "0378743ded6a87eee7af04616ddc53870dfa9b4a", "Url": "https://api.github.com/repos/cbsrbiobank/biobank", "Date": "2012-09-20T16:23:55Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getStatusCode()) == (org.ednovo.gooru.client.mvp.home.LoginPopupUc.PASSWORDERROR_STATUS_CODE)) { loginButton.setVisible(true); lblPleaseWait.setVisible(false); new org.ednovo.gooru.client.uc.AlertContentUc(i18n.GL1966(), i18n.GL0347()); }else if ((result.getStatusCode()) == (org.ednovo.gooru.client.mvp.home.LoginPopupUc.UNAUTHORISED_STATUS_CODE)) { loginButton.setVisible(true); lblPleaseWait.setVisible(false); new org.ednovo.gooru.client.uc.AlertContentUc(i18n.GL1966(), i18n.GL1938()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/1193/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.home.LoginPopupUc.java", "BodyUseAPI": ["org.ednovo.gooru.shared.model.user.UserDo.getStatusCode()"], "Fixed commit": "dfaf5b20bc385d4508c1a5484119666f94e45890", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2014-11-07T07:19:30Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (def == null) { def = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/9000/buggy-version/src.main.java.com.laytonsmith.core.constructs.Variable.java", "BodyUseAPI": [], "Fixed commit": "c8a3af45d1bb288ca3f7b76ecdbb887708e02f99", "Url": "https://api.github.com/repos/EntityReborn/commandhelper", "Date": "2012-11-16T01:38:18Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location) != null) { this.rect = new javafx.scene.shape.Rectangle(this.location.getX(), this.location.getY(), this.RECTANGLE_WIDTH, this.RECTANGLE_HEIGHT); this.rect.setStroke(this.DEFAULT_STROKE_COLOR); this.rect.setStrokeWidth(this.DEFAULT_STROKE_WIDTH); if (this.getName().equalsIgnoreCase(this.KIOSK_NAME)) { this.rect.setFill(this.KIOSK_COLOR); }else { this.rect.setFill(this.DEFAULT_SHAPE_COLOR); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/5492/buggy-version/src.main.java.entities.Room.java", "BodyUseAPI": [], "Fixed commit": "559293b95145b8d4b175510a03b4b4fb6b2551a0", "Url": "https://api.github.com/repos/linuxboss182/SoftEng-2017", "Date": "2017-04-09T00:36:51Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"PASS\".equalsIgnoreCase(java.lang.String.valueOf(PassFailHashMap.get((300 + i))))) { tvl.setTextColor(getResources().getColor(R.color.black)); }else { tvl.setTextColor(getResources().getColor(R.color.red)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/8838/buggy-version/VALDOC.app.src.main.java.com.project.valdoc.RDFITUserEntryActivity.java", "BodyUseAPI": [], "Fixed commit": "af12b93825afcca4bdb83bf1e37efde4f76ed00c", "Url": "https://api.github.com/repos/avinashtiwari87/HelloAcTest", "Date": "2016-11-04T20:59:26Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.hasPermission(\"rulebook.players\")) || (player.hasPermission(\"rulebook.staff\"))) { plugin.givebook(player, 1); return true; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/7435/buggy-version/RuleBook.src.net.charter.orion_pax.RuleBook.RuleBookCommandExecutor.java", "BodyUseAPI": ["net.charter.orion_pax.RuleBook.RuleBook.givebook(org.bukkit.entity.Player,int)"], "Fixed commit": "449dfbfeda56e44b840cc6490fe801017dc8519e", "Url": "https://api.github.com/repos/Paxination/RuleBook", "Date": "2013-01-12T00:19:39Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index >= (list.length)) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V127/3899/buggy-version/src.main.java.com.minecolonies.coremod.colony.ColonyList.java", "BodyUseAPI": [], "Fixed commit": "edaef8fdf449735f93671909b1e942aaa0d06b17", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2017-02-27T17:25:12Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["card.getCategory().getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.mycommons.lang3.StringUtils.isNotEmpty(currentCategoryName)) { categoryDao.create(card.getCategory()); categoryMap.put(currentCategoryName, card.getCategory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2111/buggy-version/src.org.liberty.android.fantastischmemo.dao.CardDaoImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.liberty.android.fantastischmemo.domain.Category>.put(java.lang.String,card.getCategory())"], "Fixed commit": "14fb0af6015c46908f239ec5a052697f03e02f70", "Url": "https://api.github.com/repos/helloworld1/AnyMemo", "Date": "2012-04-23T18:47:46Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.isBungeeTabListPlusInstalled()) codecrafter47.bungeetablistplus.BungeeTabListPlus.hidePlayer(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/544/buggy-version/src.main.java.de.sabbertran.proxysuite.Events.java", "BodyUseAPI": [], "Fixed commit": "24b88e714bea8773d8149dfbbfac7e133e22fa33", "Url": "https://api.github.com/repos/Sabbertran/ProxySuite", "Date": "2017-08-01T11:06:44Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (text.contains(\"Most of our area is bilingual\")) { text = text.replace(\"Most of our area is bilingual\", \"</p><p>\\\"Most of our area is bilingual\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1105/buggy-version/app.src.main.java.org.disciplestoday.disciplestoday.Article.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "0d5bbacb601df21958b57218bf6e7f326d4bf65f", "Url": "https://api.github.com/repos/neiljaywarner/CapstoneProject", "Date": "2016-05-31T05:00:12Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isLeader) { this.isLeader = false; this.notifyLeaderStatusChanged(true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5956/buggy-version/src.main.java.misc.com.guzzservices.version.impl.ZKLeaderElectionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "4ed7c402f7a7d09c42288892a7a846a8ad19a76d", "Url": "https://api.github.com/repos/liukaixuan/guzz-services-client-java", "Date": "2016-06-06T12:14:41Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tealcube.minecraft.spigot.metashop.MetaShopPlugin.getInstance().getEconomy().getBalance(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (balance < (price)) { java.util.List<java.lang.String> newLore = icon.getLore(); newLore.add(com.tealcube.minecraft.spigot.metashop.utils.TextUtils.color(com.tealcube.minecraft.spigot.metashop.MetaShopPlugin.getInstance().getSettings().getString(\"language.item-too-expensive\"))); icon.setLore(newLore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1787/buggy-version/src.main.java.com.tealcube.minecraft.spigot.metashop.shops.ShopItem.java", "BodyUseAPI": [], "Fixed commit": "8365df202024290737c803153c1bed10002f5cb3", "Url": "https://api.github.com/repos/Nunnery/metashop", "Date": "2015-05-03T02:12:01Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isSplittable == true) && (hardHandValue == 2)) { if (com.mweser.Main.SPLITS_ENABLED) { return com.mweser.Strategy.OptimalActions.ActionType.SP; }else { return com.mweser.Strategy.OptimalActions.ActionType.H; } }else if ((isSplittable == true) && (com.mweser.Main.SPLITS_ENABLED)) { return com.mweser.Strategy.OptimalActions.accessSplitActionArray(hardHandValue, dealerValue); }else if (!hasSoftAce) { return com.mweser.Strategy.OptimalActions.accessHardActionArray(hardHandValue, dealerValue); }else { return com.mweser.Strategy.OptimalActions.accessHardActionArray(hardHandValue, dealerValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2467/buggy-version/src.main.java.com.mweser.Strategy.OptimalActions.java", "BodyUseAPI": ["com.mweser.Strategy.OptimalActions.accessHardActionArray(int,int)", "com.mweser.Strategy.OptimalActions.accessHardActionArray(int,int)", "com.mweser.Strategy.OptimalActions.accessSplitActionArray(int,int)"], "Fixed commit": "bcc2cd0c9afc68477d12c6f70558cc99062ebb79", "Url": "https://api.github.com/repos/mweser/BlackjackSimulator", "Date": "2017-04-03T17:41:47Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (descLang.equals(\"en\")) { jsonOut.put(\"description\", descValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6640/buggy-version/api.src.main.java.v1.utils.retcat.Retcat_HeritageData.java", "BodyUseAPI": [], "Fixed commit": "572416424ce6ac9e7fd3a0e3fd636d57f77abd2f", "Url": "https://api.github.com/repos/mainzed/labelingsystem-server", "Date": "2016-10-19T08:48:23Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.protoclipse.handlers.ToggleNatureContributionItem.getSelectedProjects(org.eclipse.jface.viewers.ISelection)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (projects != null) { int projectsWithNature = countProjectsWithNature(projects); if (projectsWithNature == (projects.length)) { label = com.googlecode.protoclipse.Messages.getString(\"ToggleNatureContributionItem.remove\"); }else if (projectsWithNature == 0) { label = com.googlecode.protoclipse.Messages.getString(\"ToggleNatureContributionItem.add\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4705/buggy-version/protoclipse-compiler.src.com.googlecode.protoclipse.handlers.ToggleNatureContributionItem.java", "BodyUseAPI": ["com.googlecode.protoclipse.handlers.ToggleNatureContributionItem.countProjectsWithNature(org.eclipse.core.resources.IProject[])"], "Fixed commit": "6b57628a1fc0386b511922e1035269e264965a83", "Url": "https://api.github.com/repos/junit/Protoclipse-AS3", "Date": "2014-07-03T18:39:14Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<net.TheDgtl.Tombstone.Tombstone.TombBlock>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tBlock.getSign()) != null) tBlock.getSign().setType(Material.AIR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7468/buggy-version/src.net.TheDgtl.Tombstone.Tombstone.java", "BodyUseAPI": ["net.TheDgtl.Tombstone.Tombstone.TombBlock.getSign()", "org.bukkit.block.Block.setType(Material.AIR)"], "Fixed commit": "44fc4ab788ad08126cb4ce25e7d041a66e210030", "Url": "https://api.github.com/repos/TheDgtl/Tombstone", "Date": "2011-04-19T05:47:22Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (object.has(\"text\")) cardDescription = object.getString(\"text\"); else if (object.has(\"originalText\")) cardDescription = object.getString(\"originalText\"); else cardDescription = \"{NO TEXT FOUND}\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7322/buggy-version/app.src.main.java.com.example.a47989768s.magiccardslist.MagicTGGetAllCardsApi.java", "BodyUseAPI": ["org.json.JSONObject.has(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "b5161a281329fc8b72724e6b11762c5e2b8f8a0f", "Url": "https://api.github.com/repos/GFandos/MagicCardsList", "Date": "2016-11-08T19:21:30Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.System.getProperty(\"javax.net.ssl.trustStore\", \"NULL\").equals(\"NULL\"))) { javax.rmi.ssl.SslRMIClientSocketFactory csf = new javax.rmi.ssl.SslRMIClientSocketFactory(); javax.rmi.ssl.SslRMIServerSocketFactory ssf = new javax.rmi.ssl.SslRMIServerSocketFactory(); ret.put(javax.management.remote.rmi.RMIConnectorServer.RMI_CLIENT_SOCKET_FACTORY_ATTRIBUTE, csf); ret.put(javax.management.remote.rmi.RMIConnectorServer.RMI_SERVER_SOCKET_FACTORY_ATTRIBUTE, ssf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1646/buggy-version/agent.jsr160.src.main.java.org.jolokia.jsr160.Jsr160RequestDispatcher.java", "BodyUseAPI": [], "Fixed commit": "00ec088b03e69e98d3354c8072058b42d32b40c8", "Url": "https://api.github.com/repos/santacruzer/jolokia-jsr160-ssl", "Date": "2014-10-16T00:31:43Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { org.tndata.officehours.model.Course course = data.getParcelableExtra(NewCourseActivity.RESULT_KEY); adapter.addCourse(course); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4828/buggy-version/app.src.main.java.org.tndata.officehours.activity.ScheduleActivity.java", "BodyUseAPI": [], "Fixed commit": "4ca8f52eee1fcd12ac907f3cc11282bb9fc373f9", "Url": "https://api.github.com/repos/tndatacommons/OfficeHours-Android", "Date": "2016-12-02T17:05:51Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name.charAt(i)) == ' ') { countSpaces++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/878/buggy-version/app.src.main.java.gppmds.wikilegis.model.User.java", "BodyUseAPI": [], "Fixed commit": "b0672e80f79d898882b0c1a738ba75c422724a26", "Url": "https://api.github.com/repos/izacristina/2016.2-WikiLegis", "Date": "2016-09-11T22:48:20Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countSpaces != (name.length())) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/878/buggy-version/app.src.main.java.gppmds.wikilegis.model.User.java", "BodyUseAPI": [], "Fixed commit": "b0672e80f79d898882b0c1a738ba75c422724a26", "Url": "https://api.github.com/repos/izacristina/2016.2-WikiLegis", "Date": "2016-09-11T22:48:20Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commMgr.getIdManager()) == null) throw new org.societies.api.comm.xmpp.exceptions.CommunicationException(\"Unable to connect!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/131/buggy-version/platform-infrastructure.comms-frwk.XCCommunicationMgr.src.main.java.org.societies.comm.xmpp.xc.impl.CISCommunicationMgrFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "99e31cddd60e055d07c4747c15c0e310274d9c3b", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2012-04-19T07:47:52Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (onCallback != null) { onCallback.execute(uri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4468/buggy-version/src.main.java.com.mparticle.kits.IterableApi.java", "BodyUseAPI": ["IterableHelper.IterableActionHandler.execute(java.lang.String)"], "Fixed commit": "29e2c1ef091f40e247107d33743a31380e60c7b9", "Url": "https://api.github.com/repos/Iterable/mparticle-android-integration-example", "Date": "2017-05-02T16:09:07Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (onCallback != null) { onCallback.execute(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4468/buggy-version/src.main.java.com.mparticle.kits.IterableApi.java", "BodyUseAPI": ["IterableHelper.IterableActionHandler.execute(<nulltype>)"], "Fixed commit": "29e2c1ef091f40e247107d33743a31380e60c7b9", "Url": "https://api.github.com/repos/Iterable/mparticle-android-integration-example", "Date": "2017-05-02T16:09:07Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.mparticle.kits.KitUtils.isEmpty(result))) { getKitManager().onResult(deepLinkResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4468/buggy-version/src.main.java.com.mparticle.kits.IterableKit.java", "BodyUseAPI": [], "Fixed commit": "29e2c1ef091f40e247107d33743a31380e60c7b9", "Url": "https://api.github.com/repos/Iterable/mparticle-android-integration-example", "Date": "2017-05-02T16:09:07Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1045/buggy-version/src.main.java.ninja.eivind.lenient.numbers.LenientDouble.java", "BodyUseAPI": [], "Fixed commit": "7134556a057a10386d2d667f1dbb3653203e7c58", "Url": "https://api.github.com/repos/eivindveg/lenient", "Date": "2015-12-21T08:54:22Z"},
{"Line": "=>1441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (first != null) pathToNext = getPath(first.getKey()); else pathToNext = new TreePath();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1947/buggy-version/src.cz.cuni.mff.peckam.java.origamist.utils.RedBlackTree.java", "BodyUseAPI": [], "Fixed commit": "6d947a07810bad87fd9910d3eb0ff9ccf92eb52f", "Url": "https://api.github.com/repos/peci1/Origamist", "Date": "2011-02-27T14:41:28Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((copyConversationList.size()) > (mOriginalValues.size())) { mOriginalValues = copyConversationList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/689/buggy-version/easeui.src.main.java.com.hyphenate.easeui.adapter.EaseConversationAdapter.java", "BodyUseAPI": [], "Fixed commit": "05dea90b8e7e1226802a5ddd7f9537b61f322987", "Url": "https://api.github.com/repos/PittyXu/easeui", "Date": "2017-07-21T03:00:01Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((copyUserList.size()) > (mOriginalList.size())) { mOriginalList = copyUserList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/689/buggy-version/easeui.src.main.java.com.hyphenate.easeui.adapter.EaseContactAdapter.java", "BodyUseAPI": [], "Fixed commit": "05dea90b8e7e1226802a5ddd7f9537b61f322987", "Url": "https://api.github.com/repos/PittyXu/easeui", "Date": "2017-07-21T03:00:01Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (lzTaskExecRecord != null) metadata.etl.lhotse.extractor.SparkSubmitLineageExtractor.logger.info(lzTaskExecRecord.toString()); else { metadata.etl.lhotse.extractor.SparkSubmitLineageExtractor.logger.info(\"lzTaskExecRecord is null\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9240/buggy-version/metadata-etl.src.main.java.metadata.etl.lhotse.extractor.SparkSubmitLineageExtractor.java", "BodyUseAPI": ["org.slf4j.Logger.info(lzTaskExecRecord.toString())", "metadata.etl.lhotse.LzTaskExecRecord.toString()"], "Fixed commit": "dabe00bedd15930e9114761c0c9b0dbaa8c7a54a", "Url": "https://api.github.com/repos/YueYeShen/wherehowsX", "Date": "2017-05-12T12:33:04Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.iv_galleryList)) { android.content.Intent intent = new android.content.Intent(activity, me.amasia.chat.chat.ChatGalleryActivity.class); activity.startActivityForResult(intent, ChatActivity.RESULT_GALLERY); }else if (id == (R.id.icon_bomb)) { android.content.Intent intent = new android.content.Intent(activity, me.amasia.chat.chat.ChatBombActivity.class); activity.startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4812/buggy-version/app.src.main.java.me.amasia.chat.chat.ChatListener.java", "BodyUseAPI": [], "Fixed commit": "6faf382e752bab9203f0d493e0313d0a339072c6", "Url": "https://api.github.com/repos/gdfwontae/amasia", "Date": "2017-03-10T08:23:06Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.totschnig.myexpenses.MyApplication.getInstance().isContribEnabled()) { showDialog(R.id.DONATE_DIALOG); }else { android.content.Intent i = new android.content.Intent(this, org.totschnig.myexpenses.activity.ContribInfoDialogActivity.class); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6003/buggy-version/src.org.totschnig.myexpenses.activity.MyPreferenceActivity.java", "BodyUseAPI": [], "Fixed commit": "970548513a48a132cc0909bc90c77d7c98f85ca8", "Url": "https://api.github.com/repos/mtotschnig/MyExpenses", "Date": "2015-01-03T00:00:28Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(zkNode.isLeaf())) { return getChildren(zkNode).size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5555/buggy-version/src.main.java.org.mvnsearch.intellij.plugin.zookeeper.ui.ZkTreeModel.java", "BodyUseAPI": ["java.util.List<org.mvnsearch.intellij.plugin.zookeeper.ui.ZkNode>.size()", "org.mvnsearch.intellij.plugin.zookeeper.ui.ZkTreeModel.getChildren(org.mvnsearch.intellij.plugin.zookeeper.ui.ZkNode)"], "Fixed commit": "3428e899bf37690d35095967eac0d1dddcfdb8f3", "Url": "https://api.github.com/repos/linux-china/zookeeper-intellij", "Date": "2014-01-16T05:32:30Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meta.isInFields()) && (!(meta.isRemoveSourceField()))) { start = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3134/buggy-version/plugins.kettle-json-plugin.src.org.pentaho.di.trans.steps.jsoninput.JsonInput.java", "BodyUseAPI": [], "Fixed commit": "155607094c5de09699207ecc8dabf13c38743cce", "Url": "https://api.github.com/repos/ArtsiomYurhevich/pentaho-kettle", "Date": "2016-05-19T15:11:21Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.util.PrefsPropsUtil.getString(themeDisplay.getCompanyId(),PropsKeys.DEFAULT_LANDING_PAGE_PATH)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(defaultLandingPagePath)) { redirect = defaultLandingPagePath; }else { javax.portlet.PortletURL portletURL = new com.liferay.portlet.PortletURLImpl(request, com.liferay.portal.util.PortletKeys.LOGIN, themeDisplay.getPlid(), javax.portlet.PortletRequest.RENDER_PHASE); redirect = portletURL.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/632/buggy-version/portal-impl.src.com.liferay.portal.action.UpdatePasswordAction.java", "BodyUseAPI": [], "Fixed commit": "27b36086ca96196155831c70ee3b86f78da0c98f", "Url": "https://api.github.com/repos/vilmospapp/liferay-portal", "Date": "2013-04-10T12:06:18Z"},
{"Line": "=>1691", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.metadata.schema.OSchema.getClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (oClass != null) { if (oClass.isSubClassOf(elementOClassName)) { if (includeClassNames) result.add(index.getName()); else result.add(index.getDefinition().getFields().get(0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5090/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.java", "BodyUseAPI": ["com.orientechnologies.orient.core.metadata.schema.OClass.isSubClassOf(java.lang.String)"], "Fixed commit": "aa7289a9eb7e4c84d2b0700d6e894fe14a46c8b4", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2016-12-12T10:57:20Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numChars <= 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/678/buggy-version/src.main.java.net.clonecomputers.lab.util.JConsole.java", "BodyUseAPI": [], "Fixed commit": "cadfd2d7aecb288dd643e30735597805bc940c51", "Url": "https://api.github.com/repos/LAB-Programming/Java-Utility-Library", "Date": "2013-12-03T22:48:04Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (equalsIndex != (-1)) { keys[(i - 1)] = keypairs[i].substring(0, equalsIndex).replace(\"\\n\", \"\"); values[(i - 1)] = keypairs[i].substring((equalsIndex + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4513/buggy-version/src.com.fwumdegames.api.io.INI.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "caea8d363276bb3e8bc9f2ca91ff4becba527e59", "Url": "https://api.github.com/repos/fwumdesoft/FwumDeAPI", "Date": "2015-01-25T15:43:08Z"},
{"Line": "=>901", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkout.getCustomer().getUseOneAddress()) { billing_address = listAddress.get(0); }else { billing_address = listAddress.get(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7845/buggy-version/LibMagestore.src.main.java.com.magestore.app.pos.service.checkout.POSCheckoutService.java", "BodyUseAPI": [], "Fixed commit": "069ea0f47c9880d53169d2a259e34294a9b4bd59", "Url": "https://api.github.com/repos/miketrueplus/MagestorePOSAndroid", "Date": "2017-09-26T01:30:33Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newRename.to) == null) { newRename.to = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3841/buggy-version/src.main.java.net.lahwran.package_renamer.RenameFile.java", "BodyUseAPI": [], "Fixed commit": "dcb85bfde1916bb06cb84f44aca09187f717011a", "Url": "https://api.github.com/repos/lahwran/renamer-maven-plugin", "Date": "2011-12-01T03:52:47Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.starbase.starteam.Item.getModifiedTime()", "repo.getView().getCreatedTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((asOfTime.getDoubleValue()) < (viewCreateTime.getDoubleValue())) asOfTime = viewCreateTime;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2117/buggy-version/src.java.com.aap.gitst.Utils.java", "BodyUseAPI": [], "Fixed commit": "21aea89cb61511f7b5d9e86520dd98051fe32b86", "Url": "https://api.github.com/repos/AndreyPavlenko/git-st", "Date": "2013-03-01T21:21:49Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getUserImageUrl()) != null) com.squareup.picasso.Picasso.with(context).load(model.getUserImageUrl().toString()).into(viewHolder.userimage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7895/buggy-version/app.src.main.java.com.hkapps.shoppie.CircleAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(context).load(model.getUserImageUrl().toString()).into(viewHolder.userimage)", "com.squareup.picasso.Picasso.with(context).load(model.getUserImageUrl().toString())", "model.getUserImageUrl().toString()", "com.hkapps.shoppie.CircleObject.getUserImageUrl()"], "Fixed commit": "b43b297eb866fe140a146782baa043689b8145b2", "Url": "https://api.github.com/repos/hksapp/Shoppie", "Date": "2017-03-19T17:18:47Z"},
{"Line": "=>834", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(techId)) { com.photon.phresco.commons.model.Technology techInDB = getTechnologyById(techId); if (org.apache.commons.collections.CollectionUtils.isNotEmpty(techInDB.getArchetypeFeatures())) { technologies.addAll(techInDB.getArchetypeFeatures()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7577/buggy-version/phresco-service-web.src.main.java.com.photon.phresco.service.rest.api.ComponentService.java", "BodyUseAPI": ["com.photon.phresco.service.rest.api.ComponentService.getTechnologyById(java.lang.String)"], "Fixed commit": "b7166602c6a62f0a707434cad837427ed69f7f18", "Url": "https://api.github.com/repos/phresco/service", "Date": "2013-01-10T15:34:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (soot.toDex.SootToDexUtils.isPrimitiveTypeOrArray(dottedClassName)) return dottedClassName; else { java.lang.String slashedName = dottedClassName.replace('.', '/'); if ((slashedName.startsWith(\"L\")) && (slashedName.endsWith(\";\"))) return slashedName; return (\"L\" + slashedName) + \";\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7846/buggy-version/src.soot.toDex.SootToDexUtils.java", "BodyUseAPI": ["java.lang.String.replace(char,char)"], "Fixed commit": "9c30a988e8861f5212710f686c0ad1e680673b51", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2017-06-06T18:02:03Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndexOrThrow(MediaStore.MediaColumns.DISPLAY_NAME))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (columnValue != null) { filename = new java.io.File(columnValue).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1605/buggy-version/app.src.main.java.net.nitroshare.android.transfer.TransferService.java", "BodyUseAPI": ["java.io.File.getName()"], "Fixed commit": "97e0b566783b326e1b6d7ee7bc9e080834acae36", "Url": "https://api.github.com/repos/nitroshare/nitroshare-android", "Date": "2017-03-08T07:51:13Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (myFeatureToNodes.get(feature).isEmpty()) { myModelRefToFeatures.removeValue(feature.getModelReference(), feature); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9034/buggy-version/plugins.vcs.source_gen.jetbrains.mps.vcs.changesmanager.tree.TreeHighlighter.java", "BodyUseAPI": ["com.intellij.util.containers.MultiMap<jetbrains.mps.smodel.SModelReference, jetbrains.mps.vcs.changesmanager.tree.features.Feature>.removeValue(feature.getModelReference(),jetbrains.mps.vcs.changesmanager.tree.features.Feature)", "jetbrains.mps.vcs.changesmanager.tree.features.Feature.getModelReference()"], "Fixed commit": "bf89b2a412ab504a7b657cea563c19b98222c4ad", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2012-09-05T03:47:19Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isStatic) { for (eu.bryants.anthony.plinth.ast.member.Field field : typeDefinition.getNonStaticFields()) { if (field.getType().hasDefaultValue()) { nativelib.llvm.LLVM.LLVMValueRef[] indices = new nativelib.llvm.LLVM.LLVMValueRef[]{ nativelib.llvm.LLVM.LLVMConstInt(nativelib.llvm.LLVM.LLVMIntType(PrimitiveTypeType.UINT.getBitCount()), 0, false), nativelib.llvm.LLVM.LLVMConstInt(nativelib.llvm.LLVM.LLVMIntType(PrimitiveTypeType.UINT.getBitCount()), field.getMemberIndex(), false) }; nativelib.llvm.LLVM.LLVMValueRef pointer = nativelib.llvm.LLVM.LLVMBuildGEP(builder, thisValue, nativelib.c.C.toNativePointerArray(indices, false, true), indices.length, \"\"); nativelib.llvm.LLVM.LLVMBuildStore(builder, nativelib.llvm.LLVM.LLVMConstNull(typeHelper.findStandardType(field.getType())), pointer); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2334/buggy-version/src.eu.bryants.anthony.plinth.compiler.passes.llvm.CodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "23400ef7db494fab0ad7a0300054df6d0e99d865", "Url": "https://api.github.com/repos/abryant/Plinth", "Date": "2012-10-08T03:52:36Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.fgpt.goci.pussycat.renderlet.DefaultRenderletNexus.getTraitName(uk.ac.ebi.fgpt.goci.pussycat.renderlet.OWLNamedIndividual,uk.ac.ebi.fgpt.goci.pussycat.renderlet.OWLOntology,uk.ac.ebi.fgpt.goci.pussycat.renderlet.OWLNamedIndividual)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (traitName.contains(\"'\")) { traitName = traitName.replace(\"'\", \"\\\\\\'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6588/buggy-version/goci-diagram.goci-pussycat-renderlet.src.main.java.uk.ac.ebi.fgpt.goci.pussycat.renderlet.DefaultRenderletNexus.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "39f31dfa055240a07ed83ca563931e9249e03446", "Url": "https://api.github.com/repos/tburdett/goci", "Date": "2012-08-20T16:21:25Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isShutdown.get())) { super.close(); isShutdown.set(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/307/buggy-version/metron-platform.metron-storm-kafka.src.main.java.org.apache.metron.storm.kafka.flux.StormKafkaSpout.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicBoolean.set(boolean)"], "Fixed commit": "6b4b91c66d6bc5bb7d6fc3c06511fd498e234d07", "Url": "https://api.github.com/repos/ottobackwards/metron", "Date": "2017-06-23T15:19:02Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.jdo.Query.execute()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((list.size()) > 0) siteInfo = list.get(0); else siteInfo = new com.opensajux.entity.SiteInfo();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3813/buggy-version/opensajux.src.com.opensajux.view.SiteInfoManager.java", "BodyUseAPI": ["java.util.List<com.opensajux.entity.SiteInfo>.get(int)"], "Fixed commit": "0de3749e219d87adb253469f4d32d7472217deb6", "Url": "https://api.github.com/repos/opensajux/opensajux", "Date": "2013-02-27T02:13:24Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.net.SocketTimeoutException) { throw new java.net.SocketTimeoutException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8363/buggy-version/src.Host.java", "BodyUseAPI": [], "Fixed commit": "d02190f2fe0b77dfabe0766292dec1124942fe17", "Url": "https://api.github.com/repos/DanGravel/TFTP", "Date": "2016-11-12T23:45:40Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.brain) != null) this.brain.tick();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7842/buggy-version/src.bio.organisms.AbstractOrganism.java", "BodyUseAPI": [], "Fixed commit": "56e85ec2e118573eb78da8f6475b980a319311b2", "Url": "https://api.github.com/repos/wrongu/Evolution", "Date": "2014-03-12T20:42:46Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["networking.general.Packet.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((name.length()) > 20) { this.send(new networking.packets.KickPacket(\"Please make sure that your nickname has less than 20 letters\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/832/buggy-version/TcpChat.src.server.console.ClientThread.java", "BodyUseAPI": [], "Fixed commit": "483973b1b2a1e28974ed10fbb3ce013dbfa1f2e8", "Url": "https://api.github.com/repos/mash1t/tcpchat", "Date": "2015-01-31T22:34:47Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aspectj.lang.JoinPoint.getArgs()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((args.length) == 1) && ((args[0]) instanceof com.meadowhawk.homepi.model.PiProfile)) { com.meadowhawk.homepi.model.PiProfile p = ((com.meadowhawk.homepi.model.PiProfile) (args[0])); piSerialId = p.getPiSerialId(); apiKey = p.getApiKey(); }else { piSerialId = ((java.lang.String) (args[0])); apiKey = ((java.lang.String) (args[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6030/buggy-version/src.main.java.com.meadowhawk.homepi.util.service.ApiKeyValidationAspect.java", "BodyUseAPI": [], "Fixed commit": "bdfdd1556aecd3fe68324be180047bee22b530a0", "Url": "https://api.github.com/repos/leeclarke/homePi", "Date": "2013-07-10T17:55:54Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { setProgressDrawable(resources.getDrawable(com.andrew.apollo.widgets.theme.ThemeableSeekBar.PROGESS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4257/buggy-version/android.apollo.src.com.andrew.apollo.widgets.theme.ThemeableSeekBar.java", "BodyUseAPI": [], "Fixed commit": "c23c47b0f9a362efba9bb8aae9c40388938a38f8", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { setBackground(resources.getDrawable(com.andrew.apollo.widgets.theme.ThemeableFrameLayout.BACKGROUND)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4257/buggy-version/android.apollo.src.com.andrew.apollo.widgets.theme.ThemeableFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "c23c47b0f9a362efba9bb8aae9c40388938a38f8", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInEditMode()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4257/buggy-version/android.apollo.src.com.andrew.apollo.widgets.RepeatingImageButton.java", "BodyUseAPI": [], "Fixed commit": "c23c47b0f9a362efba9bb8aae9c40388938a38f8", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.baidu.jprotobuf.pbrpc.utils.StringUtils.isEmpty(rpcHandler.getServiceName())) { throw new java.lang.IllegalArgumentException(\" serviceName from 'serviceExporter' is empty.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1071/buggy-version/src.main.java.com.baidu.jprotobuf.pbrpc.server.RpcServiceRegistry.java", "BodyUseAPI": [], "Fixed commit": "710fa7dce0c1b877068ee3875adfbfcbc7777fac", "Url": "https://api.github.com/repos/Ruiyun/Jprotobuf-rpc-socket", "Date": "2014-11-13T10:51:41Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.osee.framework.skynet.core.artifact.BranchManager.getBranch(org.eclipse.osee.framework.core.data.BranchId)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (branch.getBranchType().equals(BranchType.MERGE)) { branch = branch.getParentBranch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2387/buggy-version/plugins.org.eclipse.osee.framework.ui.skynet.src.org.eclipse.osee.framework.ui.skynet.render.word.WordTemplateProcessor.java", "BodyUseAPI": ["org.eclipse.osee.framework.core.model.Branch.getParentBranch()"], "Fixed commit": "965b1c0bab0ca45ce6e9470bf51d383f1495f96d", "Url": "https://api.github.com/repos/eclipse/osee", "Date": "2017-10-21T00:14:22Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needsRestructure) { restructureTree(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4637/buggy-version/src.main.java.macrobase.analysis.summary.itemset.StreamingFPGrowth.java", "BodyUseAPI": [], "Fixed commit": "289f204e572ad1d26b6e80de998d4377f090587b", "Url": "https://api.github.com/repos/stanford-futuredata/macrobase", "Date": "2016-02-23T05:01:54Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(Constants.MAPR_VENDOR.equalsIgnoreCase(blueprint.getHadoopStack().getVendor()))) { validateGroupConfig(blueprint, failedMsgList, warningMsgList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7880/buggy-version/server.software-mgmt-plugin-default.src.main.java.com.vmware.bdd.plugin.ironfan.impl.ClusterValidator.java", "BodyUseAPI": ["com.vmware.bdd.plugin.ironfan.impl.ClusterValidator.validateGroupConfig(com.vmware.bdd.software.mgmt.plugin.model.ClusterBlueprint,java.util.List<java.lang.String>,java.util.List<java.lang.String>)"], "Fixed commit": "07c2c91a5b2fffc1a82a72df5b6ab8621a56af36", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-08-11T08:13:46Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.rubberduck.io.GooManager.isLocalTaskUuid(originalTask.getUuid())) { task.setId(com.rubberduck.io.GooManager.constructRemoteTaskId(originalTask.getUuid())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2326/buggy-version/src.com.rubberduck.io.GooManager.java", "BodyUseAPI": ["com.google.api.services.tasks.model.Task.setId(java.lang.String)", "com.rubberduck.io.GooManager.constructRemoteTaskId(originalTask.getUuid())", "com.google.api.services.tasks.model.Task.getUuid()"], "Fixed commit": "d80981670dbde8234dea25e471f8daeaae21b558", "Url": "https://api.github.com/repos/cs2103aug2014-w11-4j/main", "Date": "2014-10-28T08:46:56Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.rubberduck.io.GooManager.isLocalEventUuid(originalTask.getUuid())) { event.setId(com.rubberduck.io.GooManager.constructRemoteEventId(originalTask.getUuid())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2326/buggy-version/src.com.rubberduck.io.GooManager.java", "BodyUseAPI": ["com.rubberduck.io.GooManager.constructRemoteEventId(originalTask.getUuid())", "com.google.api.services.calendar.model.Event.setId(java.lang.String)", "com.google.api.services.tasks.model.Task.getUuid()"], "Fixed commit": "d80981670dbde8234dea25e471f8daeaae21b558", "Url": "https://api.github.com/repos/cs2103aug2014-w11-4j/main", "Date": "2014-10-28T08:46:56Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((p.value) == null) && ((q.value) == null)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6551/buggy-version/src.main.java.org.algohub.engine.collection.LinkedListNode.java", "BodyUseAPI": [], "Fixed commit": "605eae8a64157fff217c980ad3cc2632dd447558", "Url": "https://api.github.com/repos/algohub/judge-engine", "Date": "2017-03-20T09:39:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((p.value) == null) || ((q.value) == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6551/buggy-version/src.main.java.org.algohub.engine.collection.LinkedListNode.java", "BodyUseAPI": [], "Fixed commit": "605eae8a64157fff217c980ad3cc2632dd447558", "Url": "https://api.github.com/repos/algohub/judge-engine", "Date": "2017-03-20T09:39:32Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connected) && ((datasnapshotCounter) != 1)) { if ((snackbar) != null) { snackbar.dismiss(); snackbar = android.support.design.widget.Snackbar.make(parentView, \"Internet Connection Regained\", Snackbar.LENGTH_LONG); snackbar.setAction(\"Okay\", new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { snackbar.dismiss(); } }); snackbar.show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1199/buggy-version/app.src.main.java.com.example.dingu.axicut.Utils.General.NetworkLostDetector.java", "BodyUseAPI": [], "Fixed commit": "19398b7b5f2c52bd19f1b8c93036c12de8f7325e", "Url": "https://api.github.com/repos/dingusagar/axicut", "Date": "2017-08-14T15:33:20Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.javaclasses.chatroom.persistence.entity.ChatRoom.getNicknames()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == chatRoomNicknames) { chatRoomNicknames = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8258/buggy-version/service.src.main.java.com.javaclasses.chatroom.service.impl.ChatRoomServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d159bab514f2a107a2082a96c9953d0acedc9c45", "Url": "https://api.github.com/repos/kalinindenys/separated_chatroom", "Date": "2017-01-05T14:05:22Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.javaclasses.chatroom.persistence.entity.User.getNicknames()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == userNicknames) { userNicknames = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8258/buggy-version/service.src.main.java.com.javaclasses.chatroom.service.impl.ChatRoomServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d159bab514f2a107a2082a96c9953d0acedc9c45", "Url": "https://api.github.com/repos/kalinindenys/separated_chatroom", "Date": "2017-01-05T14:05:22Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (msg instanceof ch.ethz.inf.vs.californium.coap.Response) { msg.accept(); ch.ethz.inf.vs.californium.layers.LOG.info(java.lang.String.format(\"Re-acknowledging duplicate response: %s\", msg.key())); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9092/buggy-version/californium.src.main.java.ch.ethz.inf.vs.californium.layers.TransactionLayer.java", "BodyUseAPI": ["ch.ethz.inf.vs.californium.layers.LOG.info(java.lang.String)", "java.lang.String.format(java.lang.String,msg.key())", "ch.ethz.inf.vs.californium.coap.Message.accept()", "ch.ethz.inf.vs.californium.coap.Message.key()"], "Fixed commit": "5e3c1ac57efb0d1ece76cbf2a02f9e86479d2b38", "Url": "https://api.github.com/repos/morkai/Californium", "Date": "2012-11-01T17:28:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((foodID) != (-1)) TFC.Food.ItemFoodTFC.FoodList[foodID] = this.itemID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5233/buggy-version/TFC_Shared.src.TFC.Food.ItemFoodTFC.java", "BodyUseAPI": [], "Fixed commit": "08839268e5e50511b5c73a83bc21f81d359df97f", "Url": "https://api.github.com/repos/Deadrik/TFCraft", "Date": "2014-02-11T23:27:23Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(stateLink.contains(\"tunnel\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1944/buggy-version/management.server.core.hub-manager.hub-manager-impl.src.main.java.io.subutai.core.hubmanager.impl.tunnel.TunnelProcessor.java", "BodyUseAPI": [], "Fixed commit": "82fab311a8b6438dc22479462ff7327b3ea0ebe6", "Url": "https://api.github.com/repos/asanaliev/base", "Date": "2016-05-01T07:47:46Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5559/buggy-version/src.com.uwsoft.editor.view.ui.box.UILayerBox.java", "BodyUseAPI": [], "Fixed commit": "041e1d94ac389e77a8ad9c61b00550d2fc6089f3", "Url": "https://api.github.com/repos/PkayJava/overlap2d", "Date": "2015-08-12T13:32:34Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((globalConstraint.isFalse()) || (globalConstraint.checkUnsat())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2981/buggy-version/java-backend.src.main.java.org.kframework.backend.java.symbolic.PatternExpander.java", "BodyUseAPI": [], "Fixed commit": "a3295bddc20e498834a94cdc59fcb9158f0bd2b5", "Url": "https://api.github.com/repos/andreistefanescu/k", "Date": "2015-06-25T20:09:05Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((0 < hour) && (hour < 24)) { if (row[4].toString().equals(\"user\")) { hourly_user[java.lang.Integer.parseInt(row[5].toString())] += 1L; } if (row[4].toString().equals(\"spider\")) { hourly_spider[java.lang.Integer.parseInt(row[5].toString())] += 1L; } }else { output.OutputHandlerTSV.logger.error(((\"Hour field \" + hour) + \" is not between 0 and 24.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2806/buggy-version/src.main.java.output.OutputHandlerTSV.java", "BodyUseAPI": ["org.apache.log4j.Logger.error(java.lang.String)"], "Fixed commit": "3f22f05663dc0ae373e3509a5ce5d02fd25b3956", "Url": "https://api.github.com/repos/Wikidata/QueryAnalysis", "Date": "2017-01-05T06:53:40Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((imageCursor.getCount()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6219/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.ObservationPhotosViewer.java", "BodyUseAPI": [], "Fixed commit": "83572e7137acbdcd3b9ac991dfc63e3a75c2572a", "Url": "https://api.github.com/repos/budowski/iNaturalistAndroid", "Date": "2016-05-22T06:18:41Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.charAt((i + 1))) != ' ') { java.lang.String message = \"Encountered end-of-input while reading string beginning at offset \" + savedStartingIndex; throw new parser.ParserException(message, i, input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7233/buggy-version/src.parser.parserengine.Tokenizer.java", "BodyUseAPI": [], "Fixed commit": "13ca35bf24f6d5077b80eec5a7ae4573a21a46ae", "Url": "https://api.github.com/repos/chocolatethunder/Java-Parser", "Date": "2017-03-17T04:17:52Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == ((input.length()) - 1)) { java.lang.String message = \"Encountered end-of-input while reading string beginning at offset \" + savedStartingIndex; throw new parser.ParserException(message, ((input.length()) - 1), input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7233/buggy-version/src.parser.parserengine.Tokenizer.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "13ca35bf24f6d5077b80eec5a7ae4573a21a46ae", "Url": "https://api.github.com/repos/chocolatethunder/Java-Parser", "Date": "2017-03-17T04:17:52Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node instanceof org.eclipse.tcf.internal.debug.ui.model.TCFNodeRegister) { assert !(node.isDisposed()); regs.add(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4910/buggy-version/plugins.org.eclipse.tcf.debug.ui.src.org.eclipse.tcf.internal.debug.ui.model.TCFModel.java", "BodyUseAPI": ["org.eclipse.tcf.internal.debug.ui.model.TCFNode.isDisposed()", "java.util.LinkedList<org.eclipse.tcf.internal.debug.ui.model.TCFNode>.add(org.eclipse.tcf.internal.debug.ui.model.TCFNode)"], "Fixed commit": "5bacb286c7e61ef57cf1af691a2f84be0464760d", "Url": "https://api.github.com/repos/eclipse/tcf", "Date": "2015-06-15T22:30:49Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((0 == reportId) && (com.sun.jna.Platform.isWindows())) { m = new org.hid4java.jna.WideStringBuffer(len); if (len > 1) { java.lang.System.arraycopy(bytes, 0, m.buffer, 0, len); } }else { m = new org.hid4java.jna.WideStringBuffer((len + 1)); m.buffer[0] = reportId; if (len > 1) { java.lang.System.arraycopy(bytes, 0, m.buffer, 1, len); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7318/buggy-version/src.main.java.org.hid4java.jna.HidApi.java", "BodyUseAPI": [], "Fixed commit": "3585fdb001ee479a81b694ffc2ee71e202300cc4", "Url": "https://api.github.com/repos/BWallet/hid4java", "Date": "2014-11-21T06:33:23Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends me.prettyprint.cassandra.service.JmxMonitor>.getClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (loader == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3298/buggy-version/core.src.main.java.me.prettyprint.cassandra.service.JmxMonitor.java", "BodyUseAPI": [], "Fixed commit": "3f1c0d18dec8360b751832a83735e1b09444a5ff", "Url": "https://api.github.com/repos/rantav/hector", "Date": "2011-10-31T08:01:46Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thebat.lib.validutil.ValidUtils.progress) == null) { thebat.lib.validutil.ValidUtils.progress = com.kaopiz.kprogresshud.KProgressHUD.create(a).setCustomView(v).setCancellable(true).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5083/buggy-version/validutils.src.main.java.thebat.lib.validutil.ValidUtils.java", "BodyUseAPI": [], "Fixed commit": "b077f414111b513b7d60a4a4e91a1c84acf962d3", "Url": "https://api.github.com/repos/Anandsoni14/ValidUtil", "Date": "2017-06-03T09:46:44Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((thebat.lib.validutil.ValidUtils.progress) != null) && (thebat.lib.validutil.ValidUtils.progress.isShowing())) { thebat.lib.validutil.ValidUtils.progress.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5083/buggy-version/validutils.src.main.java.thebat.lib.validutil.ValidUtils.java", "BodyUseAPI": ["com.kaopiz.kprogresshud.KProgressHUD.dismiss()"], "Fixed commit": "b077f414111b513b7d60a4a4e91a1c84acf962d3", "Url": "https://api.github.com/repos/Anandsoni14/ValidUtil", "Date": "2017-06-03T09:46:44Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ube.salinlahifour.SalinlahiFour.getCharactersList().clone()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tempcharacters.get(j).getMainName().equals(\"main\")) if ((com.ube.salinlahifour.SalinlahiFour.getLoggedInUser().getGender().equals(\"female\")) && (tempcharacters.get(j).getRawName().equals(\"popoi\"))) { continue; }else if ((com.ube.salinlahifour.SalinlahiFour.getLoggedInUser().getGender().equals(\"male\")) && (tempcharacters.get(j).getRawName().equals(\"pepay\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8252/buggy-version/src.com.ube.salinlahifour.narrativeDialog.NarrativeDialog.java", "BodyUseAPI": ["java.lang.Character.getRawName()", "java.util.ArrayList<java.lang.Character>.get(int)", "tempcharacters.get(j).getRawName().equals(java.lang.String)", "java.util.ArrayList<java.lang.Character>.get(int)", "tempcharacters.get(j).getRawName().equals(java.lang.String)", "java.lang.Character.getRawName()"], "Fixed commit": "d84d1c1c83fd2fff4bdb1f804f5df2448452ac4a", "Url": "https://api.github.com/repos/Zeroh729/SalinlahiFour", "Date": "2015-07-07T11:32:41Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetng.modules.planningpoker.view.voting.VotingOverviewTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(model.getValueAt(row, 3).equals(\"--\"))) { return java.lang.Integer.toString(((int) (model.getValueAt(row, 3)))); }else return \"InvalidEntryNeverEnterThis23492910398290349\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8039/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.voting.VotingOverviewPanel.java", "BodyUseAPI": ["java.lang.Integer.toString(((int) (model.getValueAt(row, 3))))", "edu.wpi.cs.wpisuitetng.modules.planningpoker.view.voting.VotingOverviewTableModel.getValueAt(int,int)"], "Fixed commit": "7b9f5f274e62bc7669f7e88db229c23b5f0ca6fc", "Url": "https://api.github.com/repos/alexbragdon/wpi-suite", "Date": "2014-04-30T02:33:56Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isVertBufferUpdateable)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7265/buggy-version/src.main.java.bdv.jogl.VolumeRenderer.ShaderPrograms.UnitCube.java", "BodyUseAPI": [], "Fixed commit": "d2df367b0e54f6878d4bf61f05ef12966d5bfeb4", "Url": "https://api.github.com/repos/mheyde/bigdataviewer-core", "Date": "2015-10-26T11:37:54Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["utils.PropertiesUtil.getPropertiesValue(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (utils.StringUtil.isNullOrEmpty(outDir)) { utils.PropertiesUtil.writePropertiesVal(AppMain.OUT_DIR, file.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1412/buggy-version/src.main.java.AppMain.java", "BodyUseAPI": [], "Fixed commit": "4aea3756b9a67532cba058c072fa6353128583d3", "Url": "https://api.github.com/repos/Zhaoyy/TinyPNG_JavaClient", "Date": "2017-05-12T07:08:13Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useHibernateConfigUpdateRoutine) { if (configuration.getProperty(\"hibernate.hbm2ddl.auto\").equals(\"create\")) { com.colorado.denver.services.persistance.SessionTools.LOGGER.info(\"\"); com.colorado.denver.services.persistance.SessionTools.LOGGER.info(\"======================================================\"); com.colorado.denver.services.persistance.SessionTools.LOGGER.info(\"\"); com.colorado.denver.services.persistance.SessionTools.LOGGER.info(\"HIBERNATE >CREATE< MODE! ALL DATA WILL BE DROPPED!!!!!\"); com.colorado.denver.services.persistance.SessionTools.LOGGER.info(\"\"); com.colorado.denver.services.persistance.SessionTools.LOGGER.info(\"======================================================\"); com.colorado.denver.services.persistance.SessionTools.LOGGER.info(\"\"); } }else { configuration.setProperty(\"hibernate.hbm2ddl.auto\", \"update\"); com.colorado.denver.services.persistance.SessionTools.LOGGER.info(\"\"); com.colorado.denver.services.persistance.SessionTools.LOGGER.info(\"======================================================\"); com.colorado.denver.services.persistance.SessionTools.LOGGER.info(\"\"); com.colorado.denver.services.persistance.SessionTools.LOGGER.info(\" HIBERNATE >UPDATE< MODE!\"); com.colorado.denver.services.persistance.SessionTools.LOGGER.info(\"\"); com.colorado.denver.services.persistance.SessionTools.LOGGER.info(\"======================================================\"); com.colorado.denver.services.persistance.SessionTools.LOGGER.info(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6435/buggy-version/src.com.colorado.denver.services.persistance.SessionTools.java", "BodyUseAPI": [], "Fixed commit": "bb7a7a0d0ad71d2758d034efe889bbb20a60370f", "Url": "https://api.github.com/repos/yaumo/Denver", "Date": "2017-03-22T16:52:31Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.togglz.core.util.Strings.isBlank(remoteAddr)) { remoteAddr = request.getRemoteAddr(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4512/buggy-version/servlet.src.main.java.org.togglz.servlet.activation.ClientIpActivationStrategy.java", "BodyUseAPI": [], "Fixed commit": "f89ebd05a2e6ef8d06504055464eb6d00d6548e4", "Url": "https://api.github.com/repos/FlakyTestDetection/togglz", "Date": "2017-05-11T16:24:57Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (item != null) { alexaManager.sendPlaybackNearlyFinishedEvent(item, offsetInMilliseconds, requestCallback); android.util.Log.i(com.willblaschko.android.alexavoicelibrary.BaseActivity.TAG, \"Sending PlaybackNearlyFinishedEvent\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4330/buggy-version/app.src.main.java.com.willblaschko.android.alexavoicelibrary.BaseActivity.java", "BodyUseAPI": ["com.willblaschko.android.alexa.AlexaManager.sendPlaybackNearlyFinishedEvent(com.willblaschko.android.alexa.interfaces.AvsItem,long,com.willblaschko.android.alexa.callbacks.AsyncCallback<com.willblaschko.android.alexa.interfaces.AvsResponse, java.lang.Exception>)"], "Fixed commit": "c3e5ac28e749845d200fb5c562bd1ad7e5d14910", "Url": "https://api.github.com/repos/suihansong/AlexaAndroid", "Date": "2016-08-09T06:43:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source) { ast = editorState.getCurrentAst(); }else { try { ast = ((editorState.getCurrentAnalyzedAst()) == null) ? editorState.getAnalyzedAst() : editorState.getCurrentAnalyzedAst(); } catch (org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/371/buggy-version/org.strategoxt.imp.runtime.src.org.strategoxt.imp.runtime.services.views.properties.PropertiesService.java", "BodyUseAPI": [], "Fixed commit": "4ad02078542f83552e136a7b929e92c81529e09c", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2014-02-26T21:10:59Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (convertView.isSelected()) { convertView.setBackgroundColor(1717986918); }else { convertView.setBackgroundColor(16777215); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4338/buggy-version/app.src.main.java.com.freak.videosenfants.elements.preferences.DlnaAdapter.java", "BodyUseAPI": ["android.view.View.setBackgroundColor(int)", "android.view.View.setBackgroundColor(int)"], "Fixed commit": "350668e1f4a8afb2ee96b9093f4464171bfd4e64", "Url": "https://api.github.com/repos/Pilou44/VideosEnfants", "Date": "2016-04-04T09:33:49Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof play.Invoker.Suspend) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8245/buggy-version/app.controllers.hermes.ErrorMailer.java", "BodyUseAPI": [], "Fixed commit": "34969cb07b90d02cc44cc45068f5ea54c469124a", "Url": "https://api.github.com/repos/maklemenz/errorMailer", "Date": "2012-07-25T11:59:55Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message instanceof dungeon.game.PlayerReadyCommand) { this.setPlayerReady(((dungeon.game.PlayerReadyCommand) (message)).getPlayerId()); }else if (message == (dungeon.messages.LifecycleEvent.INITIALIZE)) { this.updatePulseDelta(); }else if (message instanceof dungeon.server.commands.LoadWorld) { this.setWorld(((dungeon.server.commands.LoadWorld) (message)).getWorld()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5474/buggy-version/src.main.java.dungeon.game.LogicHandler.java", "BodyUseAPI": [], "Fixed commit": "39199506b5421c1eb07105f0d28959437edc9782", "Url": "https://api.github.com/repos/CQQL/dungeon-game", "Date": "2013-07-14T17:21:46Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(event.isEmpty())) { java.lang.String[] parsed = event.replace(\"@$\", arg).split(\";\"); for (int i = 0; i < (parsed.length); i++) { if (!(parsed[i].isEmpty())) { server.passCommand(parsed[i]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6110/buggy-version/src.xenxier.minecraft.servermagic.event.Event.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "04ea247ac4bf577adcfa177914e84deeea64837a", "Url": "https://api.github.com/repos/benjamingwynn/mc-servermagic", "Date": "2014-11-30T22:50:44Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getToolType(0)) == (event.TOOL_TYPE_MOUSE)) { synchronized(mouseLock) { android.util.Log.e(\"Service\", \"MOUSE_ACTION_UP\"); mWindowManager.removeViewImmediate(pointingStick); for (int i = 0; i < 1; i++) { android.util.Log.e(\"Service\", \"\uc5c6\uc5b4\uc838\ub77c\uc58d!\"); } android.util.Log.e(\"Service\", \"\ud074\"); clickLeftMouse(); android.util.Log.e(\"Service\", \"\ub9ad\"); for (int i = 0; i < 1; i++) { android.util.Log.e(\"Service\", \"\uc0b4\uc544\ub098\ub77c\uc58d!\"); } mWindowManager.addView(pointingStick, mParams); } break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3704/buggy-version/app.src.main.java.com.example.hellojni.StickTouchListenenr.java", "BodyUseAPI": [], "Fixed commit": "42165c8bfbb1bf4e377482e963f4b163b90411b5", "Url": "https://api.github.com/repos/OfficialDominyellow/SSMCP15-2", "Date": "2016-01-22T07:23:15Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (term instanceof java.lang.Number) { return new jason.asSyntax.NumberTermImpl(((java.lang.Number) (term)).doubleValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3947/buggy-version/jason.src.java.aorta.jason.TermConverter.java", "BodyUseAPI": [], "Fixed commit": "5747d9f65e97bec7c6c1ea3f4966c55560961b16", "Url": "https://api.github.com/repos/andreasschmidtjensen/aorta", "Date": "2014-11-27T14:42:17Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9199/buggy-version/app.src.de.skubware.opentraining.basic.Translatable.java", "BodyUseAPI": [], "Fixed commit": "7433f65e4af2b294747f55d133b984aeeaac25b9", "Url": "https://api.github.com/repos/chaosbastler/opentraining", "Date": "2014-06-30T18:46:27Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getClass()) != (obj.getClass())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9199/buggy-version/app.src.de.skubware.opentraining.basic.Translatable.java", "BodyUseAPI": [], "Fixed commit": "7433f65e4af2b294747f55d133b984aeeaac25b9", "Url": "https://api.github.com/repos/chaosbastler/opentraining", "Date": "2014-06-30T18:46:27Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) == null) { if ((other.name) != null) return false; }else if (!(name.equals(other.name))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9199/buggy-version/app.src.de.skubware.opentraining.basic.Translatable.java", "BodyUseAPI": [], "Fixed commit": "7433f65e4af2b294747f55d133b984aeeaac25b9", "Url": "https://api.github.com/repos/chaosbastler/opentraining", "Date": "2014-06-30T18:46:27Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(keyWord.equals(\"null\"))) { ut += keyWord + \", \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5793/buggy-version/app.src.main.java.com.example.erikkjernlie.tdt4140project.ProcessAiResponse.java", "BodyUseAPI": [], "Fixed commit": "fef12bcbbed9642c237a98cdea3a336891ec6d41", "Url": "https://api.github.com/repos/erikkjernlie/TDT4140project2", "Date": "2017-04-24T10:48:26Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(keyWord.equals(\"null\"))) { ut += keyWord + \", \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5793/buggy-version/app.src.main.java.com.example.erikkjernlie.tdt4140project.ProcessAiResponse.java", "BodyUseAPI": [], "Fixed commit": "fef12bcbbed9642c237a98cdea3a336891ec6d41", "Url": "https://api.github.com/repos/erikkjernlie/TDT4140project2", "Date": "2017-04-24T10:48:26Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(keyWord.equals(\"null\"))) { ut += keyWord + \", \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5793/buggy-version/app.src.main.java.com.example.erikkjernlie.tdt4140project.ProcessAiResponse.java", "BodyUseAPI": [], "Fixed commit": "fef12bcbbed9642c237a98cdea3a336891ec6d41", "Url": "https://api.github.com/repos/erikkjernlie/TDT4140project2", "Date": "2017-04-24T10:48:26Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { if ((player.getComponent(de.hochschuletrier.gdw.ws1415.game.components.PlayerComponent.class)) != null) { player.getComponent(de.hochschuletrier.gdw.ws1415.game.components.PlayerComponent.class).saved_miners += 1; de.hochschuletrier.gdw.ws1415.game.systems.ScoreSystem.logger.info((\"Miners saved: \" + (player.getComponent(de.hochschuletrier.gdw.ws1415.game.components.PlayerComponent.class).saved_miners))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5825/buggy-version/gdx-pneumatic-man.src.main.java.de.hochschuletrier.gdw.ws1415.game.systems.ScoreSystem.java", "BodyUseAPI": [], "Fixed commit": "f9d52b46eaeb646a00b0abe9221d81e311d1e1cd", "Url": "https://api.github.com/repos/GameDevWeek/CodeBase", "Date": "2015-03-20T13:37:15Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 2) { return this.copy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7601/buggy-version/Engine.src.math.matrices.Matrix.java", "BodyUseAPI": [], "Fixed commit": "c7bf732434e977feb85b14aa7c0bb00707146df8", "Url": "https://api.github.com/repos/cookiehunter/Engine", "Date": "2013-05-17T13:40:51Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result) != null) { result.getSliceSpecifier().getUriMap().put(UriFactory.BASE_URL, getAcceptedQuote().getSite()); transitWithPayload(new de.zib.gndms.taskflows.dmsstaging.client.model.DmsStageInResult(result.getSliceSpecifier()), TaskState.FINISHED); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5760/buggy-version/taskflows.DMSStaging.server.src.de.zib.gndms.taskflows.dmsstaging.server.logic.DmsStageInTaskAction.java", "BodyUseAPI": [], "Fixed commit": "3bd1ed3831ff0448467e745c9b026d780cd2a16a", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2013-03-15T10:41:43Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quit) vm.exit(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5460/buggy-version/cp.traceprinter.JSONTracingThread.java", "BodyUseAPI": [], "Fixed commit": "039525054b315179a36fb89730c330d9667da9c5", "Url": "https://api.github.com/repos/daveagp/java_jail", "Date": "2014-04-12T20:38:22Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jenkins.model.Jenkins.getInstance().pluginManager.getPlugin(\"ws-cleanup\")) != null) { return (item instanceof hudson.model.Project) && ((((hudson.model.Project) (item)).getPublisher(hudson.model.Descriptor.find(hudson.plugins.ws_cleanup.WsCleanup.DescriptorImpl.class.getName()))) == null); }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/843/buggy-version/src.main.java.org.jenkins.ci.plugins.jenkinslint.check.CleanupWorkspaceChecker.java", "BodyUseAPI": [], "Fixed commit": "50b5ad9cab009373f5d288701cd96fb360553bb2", "Url": "https://api.github.com/repos/v1v/jenkinslint-plugin", "Date": "2015-07-14T17:20:49Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((endList == null) || (endList.isEmpty())) { org.greenrobot.eventbus.EventBus.getDefault().post(new cn.edu.jxnu.awesome_campus.event.EventModel<java.lang.String>(cn.edu.jxnu.awesome_campus.event.EVENT.EDUCATION_LOGIN_SERVER_ERROR)); }else if (endList.get(0).toString().equals(EducationalSysLoginParse.LOGIN_FAIL_NO_ID_STR)) { org.greenrobot.eventbus.EventBus.getDefault().post(new cn.edu.jxnu.awesome_campus.event.EventModel<java.lang.String>(cn.edu.jxnu.awesome_campus.event.EVENT.EDUCATION_LOGIN_FAILURE_NO_ID)); }else if (endList.get(0).toString().equals(EducationalSysLoginParse.LOGIN_FAIL_PASSWORD_INCORRECT_STR)) { org.greenrobot.eventbus.EventBus.getDefault().post(new cn.edu.jxnu.awesome_campus.event.EventModel<java.lang.String>(cn.edu.jxnu.awesome_campus.event.EVENT.EDUCATION_LOGIN_FAILURE_PASSWORD_INCORRECT)); }else { java.lang.String userNum = cn.edu.jxnu.awesome_campus.support.utils.login.EducationLoginUtil.getUsername(usernameET); java.lang.String userName = endList.get(0).toString(); java.lang.String nowTerm = cn.edu.jxnu.awesome_campus.support.utils.common.TermUtil.getNowTerm(); java.lang.String baseCookie = null; java.lang.String specialCookie = null; for (int i = 0; i < (headers.size()); i++) { if (headers.name(i).equals(\"Set-Cookie\")) { baseCookie = cn.edu.jxnu.awesome_campus.support.utils.login.EducationLoginUtil.cutBaseCookie(headers.value(i)); specialCookie = cn.edu.jxnu.awesome_campus.support.utils.login.EducationLoginUtil.cutSpecialCookie(headers.value((i + 1))); break; } } cn.edu.jxnu.awesome_campus.support.utils.login.EducationLoginUtil.saveToSP(userNum, userName, nowTerm, baseCookie, specialCookie); org.greenrobot.eventbus.EventBus.getDefault().post(new cn.edu.jxnu.awesome_campus.event.EventModel<java.lang.String>(cn.edu.jxnu.awesome_campus.event.EVENT.EDUCATION_LOGIN_SUCCESS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/685/buggy-version/app.src.main.java.cn.edu.jxnu.awesome_campus.support.utils.login.EducationLoginUtil.java", "BodyUseAPI": ["java.util.List.get(int)", "java.lang.Object.toString()", "java.util.List.get(int)", "java.lang.Object.toString()", "java.lang.String.equals(EducationalSysLoginParse.LOGIN_FAIL_NO_ID_STR)", "java.util.List.get(int)", "java.lang.Object.toString()", "java.lang.String.equals(EducationalSysLoginParse.LOGIN_FAIL_PASSWORD_INCORRECT_STR)"], "Fixed commit": "cba48e840722e158a1ced518acd1e0c9423e9938", "Url": "https://api.github.com/repos/MummyDing/Awesome-Campus", "Date": "2016-04-25T03:21:55Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldRecycle) { cached.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4018/buggy-version/src.info.staticfree.android.twentyfourhour.TwentyFourHourClockWidgetResizable.java", "BodyUseAPI": [], "Fixed commit": "5c8f1c2a8a6018bdcdc788faa1079c6e961c4349", "Url": "https://api.github.com/repos/xxv/24hAnalogWidget", "Date": "2013-04-12T14:32:20Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(mFirst)) && ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB))) { appWidgetManager.partiallyUpdateAppWidget(appWidgetIds, rv); }else { appWidgetManager.updateAppWidget(appWidgetIds, rv); mFirst = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4018/buggy-version/src.info.staticfree.android.twentyfourhour.TwentyFourHourClockWidgetResizable.java", "BodyUseAPI": [], "Fixed commit": "5c8f1c2a8a6018bdcdc788faa1079c6e961c4349", "Url": "https://api.github.com/repos/xxv/24hAnalogWidget", "Date": "2013-04-12T14:32:20Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cached != null) { rv.setImageViewBitmap(R.id.clock, cached); }else { android.util.Log.e(info.staticfree.android.twentyfourhour.TwentyFourHourClockWidgetResizable.TAG, \"Could not render widget to bitmap\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4018/buggy-version/src.info.staticfree.android.twentyfourhour.TwentyFourHourClockWidgetResizable.java", "BodyUseAPI": ["android.widget.RemoteViews.setImageViewBitmap(R.id.clock,android.graphics.Bitmap)"], "Fixed commit": "5c8f1c2a8a6018bdcdc788faa1079c6e961c4349", "Url": "https://api.github.com/repos/xxv/24hAnalogWidget", "Date": "2013-04-12T14:32:20Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((coords.length) != 2) { android.widget.Toast.makeText(arg0, \"Please set permissions for Sharelocation in Sandbox\", Toast.LENGTH_LONG).show(); }else { Sharelocation.lastLocation = new com.google.android.maps.GeoPoint(java.lang.Integer.parseInt(coords[0]), java.lang.Integer.parseInt(coords[1])); Sharelocation.haveLocation = true; android.widget.Toast.makeText(arg0, (\"ShareLocation received \" + data), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8267/buggy-version/Sharelocation.src.com.kkinder.sharelocation.DataReceiver.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "12503a44e4c97f767017048ba4c0daaef24236bf", "Url": "https://api.github.com/repos/mrfuzzemz/project6858", "Date": "2013-12-13T21:06:51Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tomclaw.mandarin.core.RoomItem.getRoomActive()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!isRoomActive) && (roomItem.getRoomActive())) { com.tomclaw.mandarin.core.Handler.roomEnteringComplete(roomItem, params.containsKey(\"STATUS_201\"), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3417/buggy-version/src.com.tomclaw.mandarin.core.Handler.java", "BodyUseAPI": ["com.tomclaw.mandarin.core.Handler.roomEnteringComplete(com.tomclaw.mandarin.core.RoomItem,boolean,boolean)"], "Fixed commit": "afb884f933bb2991fd2845c5fa85a9e8106a1227", "Url": "https://api.github.com/repos/solkin/mandarin-j2me", "Date": "2012-09-27T00:20:32Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (setCookies != null) { response.parseCookies(setCookies); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8035/buggy-version/library.src.main.java.org.gemini.httpengine.library.GMHttpEngine.java", "BodyUseAPI": ["org.gemini.httpengine.library.GMHttpResponse.parseCookies(java.util.List<java.lang.String>)"], "Fixed commit": "65b5ba31e3a61aa2bc12f638dafd639217e81dc9", "Url": "https://api.github.com/repos/MyLifeForTheOrc/gm-httpengine-studio", "Date": "2015-05-22T05:56:00Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (appEngineVersion == null) java.util.logging.Logger.getLogger(jsat.utils.SystemInfo.class.getName()).log(java.util.logging.Level.WARNING, null, ex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8216/buggy-version/JSAT.src.jsat.utils.SystemInfo.java", "BodyUseAPI": [], "Fixed commit": "fc242e2116c7a7d3762ae239827ae0ae08bfc296", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2016-07-30T19:00:02Z"},
{"Line": "=>2357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.workflow.Workflow.getCompleter()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (c != null) { c.setRollingBack(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5722/buggy-version/controllersvc.src.main.java.com.emc.storageos.workflow.WorkflowService.java", "BodyUseAPI": ["com.emc.storageos.volumecontroller.TaskCompleter.setRollingBack(boolean)"], "Fixed commit": "1062b59386cbdfdaef7f037ccbda4d817477d5f5", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-03-08T17:08:28Z"},
{"Line": "=>779", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["config.resourcesFactory().find(r.uuid())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (((r2 != null) && (r2.isSuspended())) && ((r.hashCode()) != (r2.hashCode()))) { removeAtmosphereResource(r2); checkCachedAndPush(r2, r2.getAtmosphereResourceEvent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7565/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.DefaultBroadcaster.java", "BodyUseAPI": ["org.atmosphere.cpr.DefaultBroadcaster.removeAtmosphereResource(org.atmosphere.cpr.AtmosphereResource)", "org.atmosphere.cpr.AtmosphereResource.getAtmosphereResourceEvent()", "org.atmosphere.cpr.DefaultBroadcaster.checkCachedAndPush(org.atmosphere.cpr.AtmosphereResource,r2.getAtmosphereResourceEvent())"], "Fixed commit": "d4872c7b8c09dfdb776c08af36161398a4ccea04", "Url": "https://api.github.com/repos/vaadin/atmosphere", "Date": "2015-03-09T20:00:12Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((suspensions) != null) { for (com.hypersocket.realm.PrincipalSuspension s : suspensions) { if (s.isActive()) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7840/buggy-version/hypersocket-core.src.main.java.com.hypersocket.realm.Principal.java", "BodyUseAPI": [], "Fixed commit": "e307ca793b6f5e534cd9c1ff0e388d73fe916e02", "Url": "https://api.github.com/repos/ludup/hypersocket-framework", "Date": "2015-03-06T10:07:21Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myExecutableChild) instanceof com.intellij.psi.PsiNameIdentifierOwner) { int textOffset = myExecutableChild.getTextOffset(); com.intellij.openapi.util.TextRange textRange = new com.intellij.openapi.util.TextRange(textOffset, myExecutableChild.getTextRange().getEndOffset()); text = textRange.substring(myExecutableChild.getContainingFile().getText()); }else { text = myExecutableChild.getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7892/buggy-version/dotnet-debugger-impl.src.org.mustbe.consulo.dotnet.debugger.linebreakType.DotNetLineBreakpointType.java", "BodyUseAPI": [], "Fixed commit": "0bbeb7d55cbac2b0f4c3a26bc95c263e8a6639a1", "Url": "https://api.github.com/repos/consulo/consulo-dotnet", "Date": "2016-04-01T11:51:24Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isAppend) { file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4865/buggy-version/src.main.java.com.github.sumimakito.maglevio.MaglevWriter.java", "BodyUseAPI": [], "Fixed commit": "cfa7d39fec981e7465369cbb5fe2369e097df740", "Url": "https://api.github.com/repos/SumiMakito/MaglevIO", "Date": "2015-08-01T14:16:35Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!isChecked) && ((switches.getVisibility()) != (android.view.View.GONE))) { org.kei.android.atk.utils.fx.Fx.setVisibilityAnimation(switches, View.GONE, org.kei.android.atk.R.anim.fade_out); chkDisplaySwitch.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3128/buggy-version/src.org.kei.android.phone.cellhistory.fragments.RecorderFragment.java", "BodyUseAPI": ["org.kei.android.atk.utils.fx.Fx.setVisibilityAnimation(android.widget.ScrollView,View.GONE,org.kei.android.atk.R.anim.fade_out)"], "Fixed commit": "9c69665ec406c76dd1ca74c24322cb5426cf3c44", "Url": "https://api.github.com/repos/Keidan/CellHistory", "Date": "2015-12-20T13:39:11Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context == null) return com.morgoo.droidplugin.core.PluginProcessManager.sCurrentProcessName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8557/buggy-version/project.Libraries.DroidPlugin.src.com.morgoo.droidplugin.core.PluginProcessManager.java", "BodyUseAPI": [], "Fixed commit": "d09fec001d4f78b9bfeab94eb1723263e806f180", "Url": "https://api.github.com/repos/vfishv/DroidPlugin", "Date": "2016-01-05T09:28:16Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.ActivityManager.getRunningAppProcesses()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (infos == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8557/buggy-version/project.Libraries.DroidPlugin.src.com.morgoo.droidplugin.core.PluginProcessManager.java", "BodyUseAPI": [], "Fixed commit": "d09fec001d4f78b9bfeab94eb1723263e806f180", "Url": "https://api.github.com/repos/vfishv/DroidPlugin", "Date": "2016-01-05T09:28:16Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lasersShot.size()) > 0) { for (com.vratsasoftware.spaceinvaders.components.Laser laser : lasersShot) { batch.draw(laser.getLaser(), ((laser.getLaserX()) + 20), ((laser.getLaserY()) + 60), 5, 20); if ((lasersShot.get(index).getLaserY()) > (Gdx.graphics.getHeight())) { resizeTheArrayList(lasersShot); break; } index++; laser.update(((Gdx.graphics.getDeltaTime()) + 20)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/660/buggy-version/core.src.com.vratsasoftware.spaceinvaders.components.Laser.java", "BodyUseAPI": ["java.util.ArrayList<com.vratsasoftware.spaceinvaders.components.Laser>.get(int)", "com.vratsasoftware.spaceinvaders.components.Laser.resizeTheArrayList(java.util.ArrayList<com.vratsasoftware.spaceinvaders.components.Laser>)", "com.vratsasoftware.spaceinvaders.components.Laser.getLaserY()"], "Fixed commit": "51fea142de3c0e08859e12e20dd7fda8ea2fb8e3", "Url": "https://api.github.com/repos/Blago24/SpaceInvaders", "Date": "2017-03-28T14:04:24Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cfvbaibai.cardfantasy.data.Skill.getImpact()", "cfvbaibai.cardfantasy.Randomizer.getRandomizer().pickRandom(java.util.List<cfvbaibai.cardfantasy.engine.CardInfo>,int,boolean,cfvbaibai.cardfantasy.engine.CardInfo)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cardsToResurrect.size()) > resurrectionCount) { throw new cfvbaibai.cardfantasy.CardFantasyRuntimeException((((\"cardsToResurrect.size() = \" + (cardsToResurrect.size())) + \", resurrectionCount = \") + resurrectionCount)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5893/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.skill.Resurrection.java", "BodyUseAPI": ["java.util.List<cfvbaibai.cardfantasy.engine.CardInfo>.size()"], "Fixed commit": "345efd11023da97a100ba663d6fcfdd54864912f", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-01-16T17:18:48Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tunnelLib != null) { roadSb.append(((tunnelLib.getName()) + \";\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6514/buggy-version/BtsSys.src.com.scttsc.business.web.CellAction.java", "BodyUseAPI": ["java.lang.StringBuilder.append(((tunnelLib.getName()) + \";\"))", "com.scttsc.business.web.TunnelLib.getName()"], "Fixed commit": "fc13edb8237c77aa8f89f4984ec311d8a034abbc", "Url": "https://api.github.com/repos/kelongxhu/BtsSys", "Date": "2015-10-26T16:51:32Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (roadLib != null) { roadSb.append(((roadLib.getName()) + \";\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6514/buggy-version/BtsSys.src.com.scttsc.business.web.CellAction.java", "BodyUseAPI": ["com.scttsc.business.web.RoadLib.getName()", "java.lang.StringBuilder.append(((roadLib.getName()) + \";\"))"], "Fixed commit": "fc13edb8237c77aa8f89f4984ec311d8a034abbc", "Url": "https://api.github.com/repos/kelongxhu/BtsSys", "Date": "2015-10-26T16:51:32Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.scttsc.business.web.CellManual.getWyLibScenes()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sceneLibs != null) { for (com.scttsc.business.web.WyLibScene sceneLib : sceneLibs) { if (sceneLib != null) { hotSb.append(((sceneLib.getName()) + \",\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6514/buggy-version/BtsSys.src.com.scttsc.business.web.CellAction.java", "BodyUseAPI": [], "Fixed commit": "fc13edb8237c77aa8f89f4984ec311d8a034abbc", "Url": "https://api.github.com/repos/kelongxhu/BtsSys", "Date": "2015-10-26T16:51:32Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sceneLib != null) { hotSb.append(((sceneLib.getName()) + \",\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6514/buggy-version/BtsSys.src.com.scttsc.business.web.CellAction.java", "BodyUseAPI": ["com.scttsc.business.web.WyLibScene.getName()", "java.lang.StringBuilder.append(((sceneLib.getName()) + \",\"))"], "Fixed commit": "fc13edb8237c77aa8f89f4984ec311d8a034abbc", "Url": "https://api.github.com/repos/kelongxhu/BtsSys", "Date": "2015-10-26T16:51:32Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.getField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (existingValue == null) { if (searchedForValue != null) allMatch = false; }else if (!(existingValue.equals(searchedForValue))) { allMatch = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7541/buggy-version/src.java.com.rapleaf.jack.AbstractMockDatabaseModel.java", "BodyUseAPI": ["java.lang.Object.equals(java.lang.Object)"], "Fixed commit": "b1db0e73ea4731b971f501588c87928b5cb84aa9", "Url": "https://api.github.com/repos/bryanduxbury/jack", "Date": "2011-10-13T19:00:24Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stamina) <= 0) { stamina = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/570/buggy-version/tower-game.src.tower.Hud.java", "BodyUseAPI": [], "Fixed commit": "3d8adf2ec35ec0a4c6878a31b4b68d3be14a39c3", "Url": "https://api.github.com/repos/buckleyjamesc/tower-game", "Date": "2016-06-13T21:17:47Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hp) <= 0) { hp = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/570/buggy-version/tower-game.src.tower.Hud.java", "BodyUseAPI": [], "Fixed commit": "3d8adf2ec35ec0a4c6878a31b4b68d3be14a39c3", "Url": "https://api.github.com/repos/buckleyjamesc/tower-game", "Date": "2016-06-13T21:17:47Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hud.getStamina()) >= 1.2) { hud.setStamina(((hud.getStamina()) - 1.2)); dx *= 1.01; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/570/buggy-version/tower-game.src.tower.Player.java", "BodyUseAPI": ["tower.Hud.setStamina(((hud.getStamina()) - 1.2))", "tower.Hud.getStamina()"], "Fixed commit": "3d8adf2ec35ec0a4c6878a31b4b68d3be14a39c3", "Url": "https://api.github.com/repos/buckleyjamesc/tower-game", "Date": "2016-06-13T21:17:47Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.swagger.inflector.utils.ResolverUtil.resolveFully(io.swagger.inflector.utils.Model)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((m.getDefaultValue()) != null) { property.setDefault(m.getDefaultValue().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/733/buggy-version/src.main.java.io.swagger.inflector.utils.ResolverUtil.java", "BodyUseAPI": ["io.swagger.models.properties.ObjectProperty.setDefault(m.getDefaultValue().toString())", "io.swagger.inflector.utils.ModelImpl.getDefaultValue()", "m.getDefaultValue().toString()"], "Fixed commit": "0d480fb6641ed0e64a969fb7ffe6d512bc76ae76", "Url": "https://api.github.com/repos/swagger-api/swagger-inflector", "Date": "2016-12-27T06:19:53Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(path.exists())) || (!(path.isDirectory()))) path.mkdir();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6252/buggy-version/Agenda.src.persistencia.configuracion.Configuracion.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "ef6aedc81c15cb116c41ffa50404a3fecc1d2fa5", "Url": "https://api.github.com/repos/roberGzt/pp1-tp-inicial", "Date": "2017-08-30T23:10:05Z"},
{"Line": "=>1170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.fitResultWithNeighbours[i]) != null) (status2[result.fitResultWithNeighbours[i].getStatus().ordinal()])++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7801/buggy-version/src.main.java.gdsc.smlm.ij.plugins.BenchmarkSpotFit.java", "BodyUseAPI": ["result.fitResultWithNeighbours[i].getStatus()", "result.fitResultWithNeighbours[i].getStatus().ordinal()"], "Fixed commit": "9106b59adf3c9bd98435121d6e789790140f0b02", "Url": "https://api.github.com/repos/aherbert/GDSC-SMLM", "Date": "2016-07-21T15:52:10Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)", "java.lang.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((org.apache.camel.util.ObjectHelper.isNotEmpty(datafield.defaultValue())) && (org.apache.camel.util.ObjectHelper.isEmpty(value))) { value = datafield.defaultValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7125/buggy-version/components.camel-bindy.src.main.java.org.apache.camel.dataformat.bindy.BindyFixedLengthFactory.java", "BodyUseAPI": ["org.apache.camel.dataformat.bindy.annotation.DataField.defaultValue()"], "Fixed commit": "eaac91e5dfb73b70cb6d0799af9b6decbdb7f288", "Url": "https://api.github.com/repos/apache/camel", "Date": "2017-05-24T10:02:29Z"},
{"Line": "=>1294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (method.getCode().equals(PluginStoreCreditPanel.STORE_CREDIT_PAYMENT_CODE)) { paymentStoreCredit.setAmount(total); paymentStoreCredit.setBaseAmount(total); paymentStoreCredit.setRealAmount(total); paymentStoreCredit.setBaseRealAmount(total); }else { method.setAmount(total); method.setBaseAmount(total); method.setRealAmount(total); method.setBaseRealAmount(total); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3157/buggy-version/AppPOS.src.main.java.com.magestore.app.pos.controller.CheckoutListController.java", "BodyUseAPI": ["com.magestore.app.lib.model.checkout.CheckoutPayment.setBaseRealAmount(float)", "com.magestore.app.lib.model.checkout.CheckoutPayment.setBaseAmount(float)", "com.magestore.app.lib.model.checkout.CheckoutPayment.setAmount(float)", "com.magestore.app.lib.model.checkout.CheckoutPayment.setRealAmount(float)"], "Fixed commit": "a622bfeef3a5074df69f4eec4babd9b583bea964", "Url": "https://api.github.com/repos/miketrueplus/MagestorePOSAndroid", "Date": "2017-05-09T01:16:08Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ret != null) ret.setAceLow();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2210/buggy-version/app.src.main.java.heavyinternetindustries.mephesto.cards.Card.java", "BodyUseAPI": ["heavyinternetindustries.mephesto.cards.Card.setAceLow()"], "Fixed commit": "2ce4f6bec6d588e6dbbaa48b3f860701cfcceb9f", "Url": "https://api.github.com/repos/mephest0/Cards", "Date": "2016-06-06T14:09:36Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((studies.get(j).getTracts().get(tractIndex).getAtlasFA(k)) == (java.lang.Double.MIN_VALUE)) || ((studies.get(i).getTracts().get(tractIndex).getAtlasFA(k)) == (java.lang.Double.MIN_VALUE))) { outputCSV.write(\"0\\n\"); }else { outputCSV.write(((java.lang.Double.toString(((studies.get(j).getTracts().get(tractIndex).getAtlasFA(k)) - (studies.get(i).getTracts().get(tractIndex).getAtlasFA(k))))) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1830/buggy-version/src.Runner.java", "BodyUseAPI": ["studies.get(i).getTracts().get(int)", "studies.get(j).getTracts()", "java.io.FileWriter.write(((java.lang.Double.toString(((studies.get(j).getTracts().get(tractIndex).getAtlasFA(k)) - (studies.get(i).getTracts().get(tractIndex).getAtlasFA(k))))) + \"\\n\"))", "studies.get(i).getTracts().get(tractIndex).getAtlasFA(int)", "studies.get(j).getTracts().get(tractIndex).getAtlasFA(int)", "studies.get(j).getTracts().get(int)", "studies.get(i).getTracts()", "java.util.ArrayList<Study>.get(int)", "java.lang.Double.toString(((studies.get(j).getTracts().get(tractIndex).getAtlasFA(k)) - (studies.get(i).getTracts().get(tractIndex).getAtlasFA(k))))", "java.util.ArrayList<Study>.get(int)"], "Fixed commit": "90a48ca2c909636c0de265eb137502957eb22a86", "Url": "https://api.github.com/repos/Jeffrey-Young/CalculateDeltaFA", "Date": "2016-10-24T16:10:42Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((partStats.size()) > 0) { try { aggrStats = new org.apache.hadoop.hive.metastore.api.AggrStats(); int numBitVectors = org.apache.hadoop.hive.common.HiveStatsUtils.getNumBitVectorsForNDVEstimation(conf); boolean useDensityFunctionForNDVEstimation = org.apache.hadoop.hive.conf.HiveConf.getBoolVar(conf, HiveConf.ConfVars.HIVE_METASTORE_STATS_NDV_DENSITY_FUNCTION); for (java.lang.String colName : colNames) { java.util.List<org.apache.hadoop.hive.metastore.api.ColumnStatistics> colStatsForCol = new java.util.ArrayList(partStats.size()); java.util.List<java.lang.String> partNamesList = new java.util.ArrayList(partStats.size()); for (org.apache.hadoop.hive.metastore.sqlbin.SeparableColumnStatistics separable : partStats) { org.apache.hadoop.hive.metastore.api.ColumnStatisticsObj cso = separable.getStatsForCol(colName); if (cso != null) { org.apache.hadoop.hive.metastore.api.ColumnStatistics cs = new org.apache.hadoop.hive.metastore.api.ColumnStatistics(); partNamesList.add(separable.getStatsDesc().getPartName()); cs.setStatsDesc(separable.getStatsDesc()); cs.addToStatsObj(cso); colStatsForCol.add(cs); } } org.apache.hadoop.hive.metastore.hbase.stats.ColumnStatsAggregator aggregator = org.apache.hadoop.hive.metastore.hbase.stats.ColumnStatsAggregatorFactory.getColumnStatsAggregator(colStatsForCol.get(0).getStatsObj().get(0).getStatsData().getSetField(), numBitVectors, useDensityFunctionForNDVEstimation); org.apache.hadoop.hive.metastore.api.ColumnStatisticsObj cso = aggregator.aggregate(colName, partNamesList, colStatsForCol); aggrStats.setPartsFound(java.lang.Math.max(aggrStats.getPartsFound(), colStatsForCol.size())); aggrStats.addToColStats(cso); } cached.aggregatedStats.put(cacheKey, aggrStats); } catch (java.lang.Exception e) { throw new java.sql.SQLException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/175/buggy-version/metastore.src.java.org.apache.hadoop.hive.metastore.sqlbin.PostgresPartitionCache.java", "BodyUseAPI": ["java.util.List<org.apache.hadoop.hive.metastore.sqlbin.SeparableColumnStatistics>.size()", "java.util.List<org.apache.hadoop.hive.metastore.sqlbin.SeparableColumnStatistics>.size()"], "Fixed commit": "b8fb0167a000cfa13e3b8db94238a85356e320fa", "Url": "https://api.github.com/repos/alanfgates/hive", "Date": "2017-02-08T18:14:00Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hasDuration(condition)) { chiefComplaintDurationObs.setValueNumeric(getComplaintDuration(condition)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7091/buggy-version/fhirmapper.src.main.java.org.openmrs.module.fhir.mapper.emr.FHIRChiefComplaintConditionMapper.java", "BodyUseAPI": ["org.openmrs.module.fhir.mapper.emr.FHIRChiefComplaintConditionMapper.getComplaintDuration(org.openmrs.module.fhir.mapper.emr.Condition)", "org.openmrs.Obs.setValueNumeric(java.lang.Double)"], "Fixed commit": "452c1de88c02e0578693ac6f5fc6c31bb0eb8dad", "Url": "https://api.github.com/repos/SharedHealth/openmrs-module-bdshrclient", "Date": "2015-01-16T11:50:16Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newPlan.getAssignedEncryptions().size()) != 0) { java.lang.System.out.print(\"AssignedEncryptions: \"); java.lang.System.out.println(((((((newPlan.getAssignedEncryptions().toString()) + \" [\") + (providers.get(i).getName())) + \",\") + (rootCopy.getElement().getOperation())) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4152/buggy-version/src.main.java.CostModel.CostModel.java", "BodyUseAPI": ["newPlan.getAssignedEncryptions().toString()", "java.io.PrintStream.println(((((((newPlan.getAssignedEncryptions().toString()) + \" [\") + (providers.get(i).getName())) + \",\") + (rootCopy.getElement().getOperation())) + \"]\"))", "CostModel.Plan.getAssignedEncryptions()"], "Fixed commit": "8214c4f128d047348dc3eb25b7f8dd7198ca3585", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-02-25T14:59:51Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newPlan.getAssignedEncryptions().size()) != 0) { java.lang.System.out.print(\"AssignedEncryptions: \"); java.lang.System.out.println(((((((newPlan.getAssignedEncryptions().toString()) + \" [\") + (providers.get(i).getName())) + \",\") + (rootCopy.getElement().getOperation())) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4152/buggy-version/src.main.java.CostModel.CostModel.java", "BodyUseAPI": ["CostModel.Plan.getAssignedEncryptions()", "newPlan.getAssignedEncryptions().toString()", "java.io.PrintStream.println(((((((newPlan.getAssignedEncryptions().toString()) + \" [\") + (providers.get(i).getName())) + \",\") + (rootCopy.getElement().getOperation())) + \"]\"))"], "Fixed commit": "8214c4f128d047348dc3eb25b7f8dd7198ca3585", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-02-25T14:59:51Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((client.level) != null) client.level.entityManager.addLevelEvent(getEvent());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1531/buggy-version/src.engine.network.packet.PacketLevelEvent.java", "BodyUseAPI": ["client.level.entityManager.addLevelEvent(entity.events.levelEvent.LevelEvent)"], "Fixed commit": "3b5dd669f72ff0d957ea6ccc788371f74510b352", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-04-06T03:31:58Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.betterlife.framework.domains.BaseObject.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == value) { value = org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(baseObject, methodName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1058/buggy-version/work.src.io.betterlife.framework.util.TemplateUtils.java", "BodyUseAPI": [], "Fixed commit": "514422fbbd9447b72c4471b9a7ddb7c7b147eed1", "Url": "https://api.github.com/repos/betterlife/erp", "Date": "2015-03-05T02:36:04Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spiller.getViden()) < 0) { spiller.setViden(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4935/buggy-version/app.src.main.java.com.example.asger.nepalspil.felter.Eksamen.java", "BodyUseAPI": ["com.example.asger.nepalspil.felter.Eksamen.setViden(int)"], "Fixed commit": "11cfdd5a472d19563a2da34e498367ccb405e583", "Url": "https://api.github.com/repos/AsgerStage/Nepalspil", "Date": "2017-01-12T20:51:57Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["medicineService.getMedicine(currBO.getMedId()).getMedName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(medNames.contains(currMedName))) { medNames.add(currMedName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/33/buggy-version/app.src.main.java.com.umb.cs682.projectlupus.service.ReminderService.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "b1e0614aed85c474b478bac44faeacf47a1ab791", "Url": "https://api.github.com/repos/nithyakonda/LupusApp", "Date": "2015-05-07T20:04:37Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (comparator != null) { java.util.Collections.sort(entries, new java.util.Comparator<java.util.Map.Entry<K, V>>() { @java.lang.Override public int compare(java.util.Map.Entry<K, V> o1, java.util.Map.Entry<K, V> o2) { int valueComparison = o2.getValue().compareTo(o1.getValue()); if ((valueComparison != 0) || (comparator == null)) { return valueComparison; } return comparator.compare(o2.getKey(), o1.getKey()); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5266/buggy-version/src.main.java.com.avp42.flickmash.tools.RankedMap.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<java.util.Map.Entry<K, V>>,java.util.Comparator<java.util.Map.Entry<K, V>>)", "java.util.Comparator<K>.compare(K,K)"], "Fixed commit": "3552c78d7194dcb744960a5eef9f89307f061c0a", "Url": "https://api.github.com/repos/avp/flickmash", "Date": "2014-09-09T03:34:13Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toUpperCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (OS.contains(\"MAC\")) { fullScreenGraphicsDevice.setFullScreenWindow(fullScreenFrame); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7774/buggy-version/src.main.java.sk.calvary.worship.ScreenViewSwing.java", "BodyUseAPI": [], "Fixed commit": "346e093d2e664340e29169e06affe9d24928ec6a", "Url": "https://api.github.com/repos/marcinMarcin/jWorship", "Date": "2016-03-26T15:19:28Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(es.pymasde.blueterm.BlueTerm.mThread.isAlive())) es.pymasde.blueterm.BlueTerm.mThread.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5138/buggy-version/autoUAV.src.es.pymasde.blueterm.BlueTerm.java", "BodyUseAPI": ["java.lang.Thread.start()"], "Fixed commit": "baad2ab5b5142fe276254a3075c58a44dd485c51", "Url": "https://api.github.com/repos/autouav/finalproject", "Date": "2015-07-07T07:59:02Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.groovy.runtime.MetaClassHelper.getMaximumInterfaceDistance(java.lang.Class,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (superClassMax != (-1)) superClassMax++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7407/buggy-version/src.main.org.codehaus.groovy.runtime.MetaClassHelper.java", "BodyUseAPI": [], "Fixed commit": "ae603362686125a338307f0e08d48ef3eb0a1d74", "Url": "https://api.github.com/repos/groovy/groovy-core", "Date": "2013-02-18T15:56:07Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"\".equals(trim(newValue))) { oldValue = defaultString(oldValue); newValue = defaultString(newValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8503/buggy-version/mci-api.src.main.java.org.sharedhealth.mci.web.handler.PendingApprovalFilter.java", "BodyUseAPI": ["org.sharedhealth.mci.web.handler.PendingApprovalFilter.defaultString(java.lang.String)"], "Fixed commit": "6fb930334b43b0fbfe8978579b9741330af1b2ba", "Url": "https://api.github.com/repos/SharedHealth/MCI-Service", "Date": "2015-02-19T12:06:47Z"},
{"Line": "=>1377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (trimmed.startsWith(\"#\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5071/buggy-version/plugins.org.python.pydev.core.src.org.python.pydev.core.docutils.PySelection.java", "BodyUseAPI": [], "Fixed commit": "597b931f5ca96c842b2da685a5c172aa098613c8", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-10-24T22:15:46Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Sensor.detectPointsNoError()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pointsInSensor.size()) > 0) { detectionError = (((pointsInSensor.size()) - (pointsDetected.size())) / (pointsInSensor.size())) * 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/764/buggy-version/Terminator.src.NavigationSimulation.java", "BodyUseAPI": ["java.util.ArrayList<Point>.size()", "java.util.ArrayList<Point>.size()"], "Fixed commit": "ce38c036f19ea1e37bb5236b78df0466e443902a", "Url": "https://api.github.com/repos/dylan2dakota/Terminator", "Date": "2016-04-15T04:09:26Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.jryanh.mcMMO.utils.Utilities.getRandomObj(utils.initMap(400, mobs.WeakZombie, 200, mobs.WeakSkeleton, 50, mobs.StrongZombie))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (mob != null) { plugin.mobHndl.registerMob(mob.spawn(event.getLocation()).getUniqueId(), mob); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4957/buggy-version/main.java.me.jryanh.mcMMO.listeners.MobEvents.java", "BodyUseAPI": ["plugin.mobHndl.registerMob(mob.spawn(event.getLocation()).getUniqueId(),me.jryanh.mcMMO.MobObj)", "mob.spawn(event.getLocation()).getUniqueId()", "me.jryanh.mcMMO.MobObj.spawn(event.getLocation())"], "Fixed commit": "f28d395cf51142a9d0f14aed6c0d53b6708127ec", "Url": "https://api.github.com/repos/jryanh/mcrpg", "Date": "2017-10-17T13:38:24Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bitcoinj.core.Sha256Hash.getBytes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.util.Arrays.equals(right, left)) throw new org.bitcoinj.core.VerificationException(\"Invalid merkle tree with duplicated left/right branches\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2653/buggy-version/core.src.main.java.org.bitcoinj.core.PartialMerkleTree.java", "BodyUseAPI": [], "Fixed commit": "bd986f35f10aa28299b8a9b5e4633cb437b013f7", "Url": "https://api.github.com/repos/kmels/bitcoinj", "Date": "2014-11-24T12:59:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (player.getGameMode().equals(GameMode.SURVIVAL)) { event.setCancelled(true); event.getClickedBlock().setType(Material.AIR); for (int i = 0; i < 4; i++) { checkFace(i, event.getClickedBlock()); } event.getClickedBlock().getWorld().dropItemNaturally(event.getClickedBlock().getLocation(), new org.bukkit.inventory.ItemStack(org.bukkit.Material.ENDER_PORTAL_FRAME)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/738/buggy-version/EndCraft.src.main.java.io.github.dreadedfall.endcraft.EndCraftListener.java", "BodyUseAPI": [], "Fixed commit": "9773a77c2708c2d7343530c32f0bccfdc4171ec4", "Url": "https://api.github.com/repos/DreadedFall/EndCraft", "Date": "2016-04-26T16:26:29Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((message.getSubject()) != null) && ((message.getSubject().length()) > 0)) { haveSubject = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6047/buggy-version/src.com.aggienerds.beeper.MessageBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "d4036a6f07f5f561b1818cce90501e85c11d69dc", "Url": "https://api.github.com/repos/billatq/beeper", "Date": "2012-03-10T22:28:38Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (haveSubject && haveBody) { subject = message.getSubject(); body = message.getBody(); }else if (haveSubject && (!haveBody)) { subject = message.getAddress(); body = message.getSubject(); }else if (haveBody && (!haveSubject)) { subject = message.getAddress(); body = message.getBody(); }else { subject = \"Incoming Page\"; body = message.getAddress(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6047/buggy-version/src.com.aggienerds.beeper.MessageBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "d4036a6f07f5f561b1818cce90501e85c11d69dc", "Url": "https://api.github.com/repos/billatq/beeper", "Date": "2012-03-10T22:28:38Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((message.getBody()) != null) && ((message.getBody().length()) > 0)) { haveBody = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6047/buggy-version/src.com.aggienerds.beeper.MessageBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "d4036a6f07f5f561b1818cce90501e85c11d69dc", "Url": "https://api.github.com/repos/billatq/beeper", "Date": "2012-03-10T22:28:38Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.teavm.classlib.java.lang.TObject.holdsLock(this))) { throw new org.teavm.classlib.java.lang.TIllegalMonitorStateException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/244/buggy-version/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TObject.java", "BodyUseAPI": [], "Fixed commit": "7d62c16c8d43fa5284cf84d4648f4d730d994953", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2015-02-24T18:08:56Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.base.Function<java.lang.String, T>.apply(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (out != null) { output.add(out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6056/buggy-version/shivas-common.src.main.java.org.shivas.common.collections.Collections3.java", "BodyUseAPI": ["java.util.List<T>.add(T)"], "Fixed commit": "3358dc2a9d08d029d723ac5d153c567572799962", "Url": "https://api.github.com/repos/Emudofus/Shivas", "Date": "2012-09-23T14:31:25Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index < 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6056/buggy-version/shivas-server.src.main.java.org.shivas.server.utils.Converters.java", "BodyUseAPI": [], "Fixed commit": "3358dc2a9d08d029d723ac5d153c567572799962", "Url": "https://api.github.com/repos/Emudofus/Shivas", "Date": "2012-09-23T14:31:25Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) != null) { playButton.performClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3696/buggy-version/app.src.main.java.amhamogus.com.spotifystreamer.fragments.PlaybackFragment.java", "BodyUseAPI": [], "Fixed commit": "c8ff46d5d98eec1571ed0e2b35d654fef2dfe6ad", "Url": "https://api.github.com/repos/amha/SpotifyStreamer", "Date": "2015-10-15T22:27:15Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["voldemort.client.rebalance.RebalanceBatchPlan.getDonorId(voldemort.routing.StoreRoutingPlan,voldemort.routing.StoreRoutingPlan,int,int,int)", "voldemort.cluster.Node.getId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (donorNodeId != stealerNodeId) { rpiBuilder.addPartitionStoreMove(stealerNodeId, donorNodeId, storeDef.getName(), stealerPartitionId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6355/buggy-version/src.java.voldemort.client.rebalance.RebalanceBatchPlan.java", "BodyUseAPI": ["voldemort.client.rebalance.RebalanceBatchPlan.RebalanceTaskInfoBuilder.addPartitionStoreMove(int,int,storeDef.getName(),int)"], "Fixed commit": "348ade342e108245543edf0adb9df54926647af9", "Url": "https://api.github.com/repos/esiqveland/voldemort", "Date": "2014-01-31T20:56:30Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(storeDef.getType().equalsIgnoreCase(ReadOnlyStorageConfiguration.TYPE_NAME))) { if (currentSRP.getReplicationNodeList(stealerPartitionId).contains(stealerNodeId)) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6355/buggy-version/src.java.voldemort.client.rebalance.RebalanceBatchPlan.java", "BodyUseAPI": [], "Fixed commit": "348ade342e108245543edf0adb9df54926647af9", "Url": "https://api.github.com/repos/esiqveland/voldemort", "Date": "2014-01-31T20:56:30Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { android.view.LayoutInflater.from(context).inflate(R.layout.boom_menu_button, this, true); }else { android.view.LayoutInflater.from(context).inflate(R.layout.boom_menu_button_below_lollipop, this, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4509/buggy-version/boommenu.src.main.java.com.nightonke.boommenu.BoomMenuButton.java", "BodyUseAPI": [], "Fixed commit": "efdac60d1931fe20ed8a38d6d868c68f8827c408", "Url": "https://api.github.com/repos/Nightonke/BoomMenu", "Date": "2016-03-24T06:04:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { android.view.LayoutInflater.from(mContext).inflate(R.layout.circle_button, this, true); }else { android.view.LayoutInflater.from(mContext).inflate(R.layout.circle_button_below_lollipop, this, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4509/buggy-version/boommenu.src.main.java.com.nightonke.boommenu.CircleButton.java", "BodyUseAPI": [], "Fixed commit": "efdac60d1931fe20ed8a38d6d868c68f8827c408", "Url": "https://api.github.com/repos/Nightonke/BoomMenu", "Date": "2016-03-24T06:04:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { android.view.LayoutInflater.from(mContext).inflate(R.layout.ham_button, this, true); }else { android.view.LayoutInflater.from(mContext).inflate(R.layout.ham_button_below_lollipop, this, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4509/buggy-version/boommenu.src.main.java.com.nightonke.boommenu.HamButton.java", "BodyUseAPI": [], "Fixed commit": "efdac60d1931fe20ed8a38d6d868c68f8827c408", "Url": "https://api.github.com/repos/Nightonke/BoomMenu", "Date": "2016-03-24T06:04:07Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.col) == (this.colDes)) || ((this.row) == (this.rowDes))) { if ((board.getChessPosition(this.rowDes, this.colDes)) != null) { if (((board.getChessPosition(this.rowDes, this.colDes).getWhite()) && (this.getPiece().getWhite())) || ((!(board.getChessPosition(this.rowDes, this.colDes).getWhite())) && (!(this.getPiece().getWhite())))) { throw new chess.game.mvc.model.genericGameFiles.GameError(\"Invalid move, the destination is occupied by an ally piece, try again. (Error 006)\"); }else if (!(checkPiecesInbetween(this.row, this.col, this.rowDes, this.colDes))) { throw new chess.game.mvc.model.genericGameFiles.GameError(\"Invalid move, you can't skip through other pieces, try again. (Error 007)\"); }else { executeCheckedMove(board); ((chess.game.mvc.model.chessPieces.chessPiecesImp.Rook) (board.getChessPosition(this.rowDes, this.colDes))).setCastle(false); } }else { if (!(checkPiecesInbetween(this.row, this.col, this.rowDes, this.colDes))) { throw new chess.game.mvc.model.genericGameFiles.GameError(\"Invalid move, you can't skip through other pieces, try again. (Error 007)\"); }else { executeCheckedMove(board); ((chess.game.mvc.model.chessPieces.chessPiecesImp.Rook) (board.getChessPosition(this.rowDes, this.colDes))).setCastle(false); } } }else { throw new chess.game.mvc.model.genericGameFiles.GameError(\"Invalid move, try again. (Error 008)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5149/buggy-version/src.chess.game.mvc.model.chessFiles.ChessMove.java", "BodyUseAPI": [], "Fixed commit": "9f7d9fb184b03b8878267ca7016d0fd5dd1dff35", "Url": "https://api.github.com/repos/danielgarm/Chess-Delta", "Date": "2017-11-20T15:40:07Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(root.getCdr().getCar().isSymbol())) { return new java.lang.Error((\"assertion-violation:\" + (\"argument of wrong type [symbol->string]\" + \"\\n (symbol->string !*** This requires more work***)\"))); }else if ((root.getCdr().getCdr().isPair()) && ((root.getCdr().getCdr().getCar().getCar().getName()) != \"quote\")) { return new java.lang.Error(\"non-procedure in operator position [type-check]\"); }else { env.define(root.getCdr().getCar(), root.getCdr().getCdr().getCar().eval(env)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9032/buggy-version/Interpreter.Define.java", "BodyUseAPI": ["root.getCdr().getCdr()", "Environment.define(root.getCdr().getCar(),root.getCdr().getCdr().getCar().eval(env))", "root.getCdr().getCdr().getCar()", "root.getCdr().getCdr()", "root.getCdr().getCdr().getCar()", "Node.getCdr()", "Node.getCdr()", "root.getCdr().getCdr().getCar().eval(Environment)", "Node.getCdr()", "root.getCdr().getCdr().isPair()", "root.getCdr().getCdr().getCar().getCar()", "root.getCdr().getCdr()", "root.getCdr().getCar()", "Node.getCdr()", "root.getCdr().getCdr().getCar().getCar().getName()"], "Fixed commit": "fb7eb88a51e9c7299557eba4e8c4a25ac028cae4", "Url": "https://api.github.com/repos/tford9/CSC-4101-Projects", "Date": "2014-11-15T03:09:34Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (minute < 10) { builder.append(\"0\").append(minute); }else { builder.append(minute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5129/buggy-version/src.main.java.com.skelril.skree.util.PrettyText.java", "BodyUseAPI": ["java.lang.StringBuilder.append(int)", "java.lang.StringBuilder.append(int)"], "Fixed commit": "48b4ce7d10db58adf379a4ef74de0e8c1f1c779c", "Url": "https://api.github.com/repos/Skelril/Skree", "Date": "2015-05-09T07:19:00Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onValueChangedListener) != null) onValueChangedListener.onValueChanged(value, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6942/buggy-version/MaterialDesignLibrary.MaterialDesign.src.main.java.com.gc.materialdesign.views.Slider.java", "BodyUseAPI": [], "Fixed commit": "4a743ad04743fe270da3b7d0b17d2badd496aa44", "Url": "https://api.github.com/repos/navasmdc/MaterialDesignLibrary", "Date": "2016-11-17T00:23:11Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (project.equals(org.wycliffeassociates.translationrecorder.ProjectManager.Project.getProjectFromPreferences(this))) { removeProjectFromPreferences(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8381/buggy-version/translationRecorder.app.src.main.java.org.wycliffeassociates.translationrecorder.ProjectManager.activities.ActivityProjectManager.java", "BodyUseAPI": [], "Fixed commit": "ea139f308cbe2a3ebf22789a867ac5b758fd5811", "Url": "https://api.github.com/repos/WycliffeAssociates/translationRecorder", "Date": "2017-05-30T19:56:06Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lang.parser.PsiBuilder.rawTokenIndex()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((eatMoreFlagOnce || ((!result) && ((frame.position) != (builder.rawTokenIndex())))) || ((frame.errorReportedAt) > initialPos)) { errorReported = com.intellij.lang.parser.GeneratedParserUtilBase.reportError(builder, state, frame, null, true, false); }else if (((!result) && pinned) && ((frame.errorReportedAt) < 0)) { errorReported = com.intellij.lang.parser.GeneratedParserUtilBase.reportError(builder, state, frame, elementType, false, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2402/buggy-version/platform.lang-impl.src.com.intellij.lang.parser.GeneratedParserUtilBase.java", "BodyUseAPI": ["com.intellij.lang.parser.GeneratedParserUtilBase.reportError(com.intellij.lang.parser.PsiBuilder,com.intellij.lang.parser.GeneratedParserUtilBase.ErrorState,com.intellij.lang.parser.GeneratedParserUtilBase.Frame,com.intellij.psi.tree.IElementType,boolean,boolean)", "com.intellij.lang.parser.GeneratedParserUtilBase.reportError(com.intellij.lang.parser.PsiBuilder,com.intellij.lang.parser.GeneratedParserUtilBase.ErrorState,com.intellij.lang.parser.GeneratedParserUtilBase.Frame,<nulltype>,boolean,boolean)"], "Fixed commit": "a013714db162e05e47d7f43bb9fa71375559ecad", "Url": "https://api.github.com/repos/MichaelNedzelsky/intellij-community", "Date": "2015-08-26T21:25:23Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<ddt.utils.bean.cfg.Node, java.util.Set<ddt.utils.bean.dejavu.TestCase>>.get(ddt.utils.bean.cfg.Node)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (testSuite != null) result.addAll(testSuite);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9059/buggy-version/CSCI512_Fall_2015_ICA9.src.ddt.utils.DejaVuUtils.java", "BodyUseAPI": ["java.util.Set<ddt.utils.bean.dejavu.TestCase>.addAll(java.util.Set<ddt.utils.bean.dejavu.TestCase>)"], "Fixed commit": "2d786b6844ec06e159b550c8e7a6c6f35db7b337", "Url": "https://api.github.com/repos/DitongDing/USC_Java", "Date": "2015-11-21T07:23:03Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notificationEvent instanceof com.blackducksoftware.integration.jira.task.conversion.output.PolicyEvent) { final com.blackducksoftware.integration.jira.task.conversion.output.PolicyEvent policyNotif = ((com.blackducksoftware.integration.jira.task.conversion.output.PolicyEvent) (notificationEvent)); fieldValue = policyNotif.getPolicyRule().getName(); }else { logger.debug(((\"Skipping field \" + (PluginField.HUB_CUSTOM_FIELD_POLICY_RULE.getName())) + \" for vulnerability issue\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/430/buggy-version/src.main.java.com.blackducksoftware.integration.jira.task.issue.IssueFieldHandler.java", "BodyUseAPI": [], "Fixed commit": "6ab274c3102cb2e1ad75af585ac8c54c1cb70d8a", "Url": "https://api.github.com/repos/blackducksoftware/hub-jira", "Date": "2016-11-17T18:15:01Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((move.to[0]) == ((color) == (Color.White) ? 0 : 7)) { for (java.util.Iterator<Piece> iterator = ((color) == (Color.White)) ? ng.white_pieces.iterator() : ng.black_pieces.iterator(); iterator.hasNext();) { Piece p = iterator.next(); if (((p.position[0]) == (move.to[0])) && ((p.position[1]) == (move.to[1]))) { iterator.remove(); PieceFactory pf = new PieceFactory(); java.lang.String queen_char = ((color) == (Color.White)) ? \"Q\" : \"q\"; Piece newQueen = pf.createPiece(queen_char, new int[]{ p.position[0], p.position[1] }); if ((color) == (Color.White)) { ng.white_pieces.add(newQueen); }else { ng.black_pieces.add(newQueen); } ng.board[p.position[0]][p.position[1]] = queen_char; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9170/buggy-version/ChessPlayer.src.Pawn.java", "BodyUseAPI": [], "Fixed commit": "d2abc84e5f458cec6f4e14b28c514ebdd657a00f", "Url": "https://api.github.com/repos/mnotti/chessPlayer", "Date": "2016-12-19T01:29:51Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Game.allPossibleMoves(Color,Game)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (possible_moves.isEmpty()) { if (color == (client_color)) { return -9999; }else { return 9999 - (current_depth * 5); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9170/buggy-version/ChessPlayer.src.Game.java", "BodyUseAPI": [], "Fixed commit": "d2abc84e5f458cec6f4e14b28c514ebdd657a00f", "Url": "https://api.github.com/repos/mnotti/chessPlayer", "Date": "2016-12-19T01:29:51Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (date.before(new java.util.Date(((java.lang.System.currentTimeMillis()) - (((24 * 60) * 60) * 1000))))) { dateText = com.andfchat.core.data.ChatEntry.DATE_FORMAT_OLD.format(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2803/buggy-version/src.com.andfchat.core.data.ChatEntry.java", "BodyUseAPI": ["java.text.DateFormat.format(java.util.Date)"], "Fixed commit": "5036302792c06f2d8c08325c4aba319b5d8dc024", "Url": "https://api.github.com/repos/AndFChat/AndFChat", "Date": "2014-04-30T07:00:54Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messageType) == (ChatEntryType.EMOTE)) { if ((text.charAt(0)) != '\\'') { finishedText.append(\" \"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2803/buggy-version/src.com.andfchat.core.data.ChatEntry.java", "BodyUseAPI": [], "Fixed commit": "5036302792c06f2d8c08325c4aba319b5d8dc024", "Url": "https://api.github.com/repos/AndFChat/AndFChat", "Date": "2014-04-30T07:00:54Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activity.isFinishing()) == false) { dialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8980/buggy-version/src.com.avoscloud.chat.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "6fa6764c5259e649035498e8e5e00afd96b0eb62", "Url": "https://api.github.com/repos/leancloud/leanchat", "Date": "2014-10-22T03:35:14Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listener instanceof it.polimi.dima.watchdog.activities.MainActivity) { it.polimi.dima.watchdog.activities.MainActivity main = ((it.polimi.dima.watchdog.activities.MainActivity) (listener)); for (it.polimi.dima.watchdog.gps.fragments.localization.interfaces.MessageActionListener l : this.listeners) { if (l instanceof it.polimi.dima.watchdog.activities.MainActivity) { it.polimi.dima.watchdog.activities.MainActivity mainListener = ((it.polimi.dima.watchdog.activities.MainActivity) (l)); if (mainListener.getTag().equals(main.getTag())) { toAdd = false; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4837/buggy-version/src.it.polimi.dima.watchdog.utilities.ListenerUtility.java", "BodyUseAPI": [], "Fixed commit": "017ece459b5208d7ab4570d964f089310e5bf78d", "Url": "https://api.github.com/repos/ClaudioRizzo/WatchDog", "Date": "2014-06-25T09:59:57Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((fields != null) && ((fields.length) > 0)) sqls = org.eweb4j.orm.sql.SqlFactory.getInsertSql(ts).createByFields(fields); else sqls = org.eweb4j.orm.sql.SqlFactory.getInsertSql(ts).create();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4129/buggy-version/src.main.java.org.eweb4j.orm.dao.insert.InsertDAOImpl.java", "BodyUseAPI": ["org.eweb4j.orm.sql.SqlFactory.getInsertSql(ts).createByFields(java.lang.String[])"], "Fixed commit": "e4436079bd668db85c27e3f3b36d8f5ffb34d832", "Url": "https://api.github.com/repos/laiweiwei/eweb4j-framework", "Date": "2013-01-24T02:34:48Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().add(R.id.movie_details_container, new com.armi.popularmovies.MovieDetailsFragment()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8371/buggy-version/app.src.main.java.com.armi.popularmovies.MovieDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "bd10d4f2ea1de09d9db742cdc656b16243fa25a3", "Url": "https://api.github.com/repos/Armi23/UdacityPopularMovies", "Date": "2016-10-08T01:16:45Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.trim().startsWith(\"--\")) { return ((numQuotes) % 2) != 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8705/buggy-version/flyway-core.src.main.java.com.googlecode.flyway.core.dbsupport.hsql.HsqlSqlStatementBuilder.java", "BodyUseAPI": [], "Fixed commit": "f07d6ea3cc06d11012f0d1321286766c85b69050", "Url": "https://api.github.com/repos/cdedie/flyway", "Date": "2012-12-19T22:56:51Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(m.group(2).equals(valuePostFix))) { unexpected(i, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8960/buggy-version/framework.src.main.java.org.radargun.stages.XSReplCheckStage.java", "BodyUseAPI": [], "Fixed commit": "cfbd6b07d04494e2629c3e312263a66dc024a3e5", "Url": "https://api.github.com/repos/rvansa/radargun", "Date": "2012-10-12T12:39:48Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.getShort(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (shortVal < 0) java.lang.System.out.println((\"Short was negative: \" + shortVal));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/206/buggy-version/Buffer.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "f274801a893487c1ab6b6dd5c96df789772712ca", "Url": "https://api.github.com/repos/dest12/HeapSort", "Date": "2011-11-02T03:31:55Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mFutureMinutesLimit) != null) || ((mPastMinutesLimit) != null)) { mError.setVisibility(View.INVISIBLE); }else { mError.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/437/buggy-version/library.src.main.java.com.codetroopers.betterpickers.radialtimepicker.RadialTimePickerDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "c8b5c8c7bc03fb30032f92509c756ffca87fc5b7", "Url": "https://api.github.com/repos/code-troopers/android-betterpickers", "Date": "2016-06-04T23:37:29Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resp == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2349/buggy-version/src.main.java.com.pingcap.tikv.operation.KVErrorHandler.java", "BodyUseAPI": [], "Fixed commit": "8b2e1b45f51db14ccf1db979ba75e8d11dc9ab3f", "Url": "https://api.github.com/repos/zhexuany/tikv-client-java", "Date": "2017-06-30T06:22:56Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(icon.exists())) { icon = new java.io.File(\"src/CSGOBotIcon.ico\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7360/buggy-version/src.InitGUI.java", "BodyUseAPI": [], "Fixed commit": "cc7d92981ba2c867e7d9f455c7828ad711555c96", "Url": "https://api.github.com/repos/spiral6/IRCBot", "Date": "2015-11-12T01:43:19Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(view.needInitInventory())) { org.openlmis.core.utils.ToastUtil.showLongTimeAsOfficialWay(R.string.msg_initial_sync_success); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2732/buggy-version/app.src.main.java.org.openlmis.core.presenter.LoginPresenter.java", "BodyUseAPI": [], "Fixed commit": "c4c1c9afa8745b061f4c824b0e7094973b9b2b48", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-12-24T08:59:07Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["p.getAttributes().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (attrValue instanceof java.util.Collection) { final java.util.Collection col = ((java.util.Collection) (attrValue)); if (!(col.isEmpty())) { greetingPersonId = col.iterator().next().toString(); net.unicon.cas.mfa.web.flow.view.MultifactorLoginViewPrincipalAttributeGreeter.LOGGER.warn(\"Found multiple attribute values [{}] for [{}] to greet. Picked [{}]\", attrValue, this.greetingAttributeName, greetingPersonId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4510/buggy-version/cas-mfa-java.src.main.java.net.unicon.cas.mfa.web.flow.view.MultifactorLoginViewPrincipalAttributeGreeter.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.lang.Object,java.lang.String,java.lang.String)"], "Fixed commit": "3c2cbef89f4739f31122cbfb831836f06e1ec1e6", "Url": "https://api.github.com/repos/bzfoster/cas-mfa", "Date": "2015-06-17T22:40:14Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["p.getAttributes().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (attrValue == null) { net.unicon.cas.mfa.web.flow.view.MultifactorLoginViewPrincipalAttributeGreeter.LOGGER.warn(\"No attribute value could be found for [{}]\", this.greetingAttributeName); return p.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4510/buggy-version/cas-mfa-java.src.main.java.net.unicon.cas.mfa.web.flow.view.MultifactorLoginViewPrincipalAttributeGreeter.java", "BodyUseAPI": [], "Fixed commit": "3c2cbef89f4739f31122cbfb831836f06e1ec1e6", "Url": "https://api.github.com/repos/bzfoster/cas-mfa", "Date": "2015-06-17T22:40:14Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nightwhistler.pageturner.epub.PageTurnerSpine.getRelativeSizes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index < 0) || (index >= (percentages.size()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2873/buggy-version/src.main.java.net.nightwhistler.pageturner.view.BookView.java", "BodyUseAPI": [], "Fixed commit": "8c733d5bf921945b3de209d886efced7bc852044", "Url": "https://api.github.com/repos/NightWhistler/PageTurner", "Date": "2012-05-20T10:33:14Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["w.getOutputManager().getDimensionality()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numOutputs != 0) { outputValues = w.getOutputManager().getOutputGroup().getCurrentOutputs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7736/buggy-version/src.wekiinputhelper.gui.SendAndMonitorPanel.java", "BodyUseAPI": [], "Fixed commit": "d40bbbe75d195a87a951a702b54108216d1fec28", "Url": "https://api.github.com/repos/fiebrink1/WekiInputHelper", "Date": "2015-08-10T17:47:59Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState == null) { switch2Camera(R.id.nav_camera); }else { toolbar.setTitle(savedInstanceState.getString(\"title\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6147/buggy-version/app.src.main.java.com.zy.mvp.main.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)", "android.support.v7.widget.Toolbar.setTitle(savedInstanceState.getString(\"title\"))"], "Fixed commit": "29ea5a84b6a6de2e9445f49fa15edfe500c8a588", "Url": "https://api.github.com/repos/albertizzy/MVP", "Date": "2017-12-25T04:00:33Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext())) throw new java.util.NoSuchElementException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7752/buggy-version/src.main.java.com.jaichaudhary.algorithms.collections.Stack.java", "BodyUseAPI": [], "Fixed commit": "2a7f01c8081f098e0ca4801b3f771953688edf5e", "Url": "https://api.github.com/repos/Jai-Chaudhary/algorithms", "Date": "2015-09-13T02:01:39Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((defaultCoorX) == (-1)) && ((defaultCoorY) == (-1))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3729/buggy-version/chess.MouseListeners.java", "BodyUseAPI": [], "Fixed commit": "8ee6e3c689d3ce4017a9a82ce7e60187525831aa", "Url": "https://api.github.com/repos/zjteoh/chess", "Date": "2017-04-13T07:00:10Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cursor.moveToFirst()) { int index = cursor.getColumnIndex(HistorySQLiteHelper.column_text); int rowidIndex = cursor.getColumnIndex(\"rowid\"); do { list.add(cursor.getString(index)); rowids.add(cursor.getLong(rowidIndex)); } while (cursor.moveToNext() ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7792/buggy-version/app.src.main.java.com.hm.tools.scan2clipboard.HistoryFragment.java", "BodyUseAPI": ["android.database.Cursor.getString(int)", "android.database.Cursor.getLong(int)", "android.database.Cursor.getColumnIndex(HistorySQLiteHelper.column_text)", "java.util.ArrayList<java.lang.String>.add(cursor.getString(index))", "java.util.ArrayList<java.lang.Long>.add(cursor.getLong(rowidIndex))", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.moveToNext()"], "Fixed commit": "1da86f5e0ad85361ac1cf220631db140df76681e", "Url": "https://api.github.com/repos/hm279/scan2clipboard", "Date": "2015-05-31T07:40:33Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((foodID) != (-1)) TFC.Food.ItemFoodTFC.FoodList[foodID] = this.itemID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5916/buggy-version/TFC_Shared.src.TFC.Food.ItemFoodTFC.java", "BodyUseAPI": [], "Fixed commit": "152ccefa852eb92e5bf20a2d0635a80e635f511e", "Url": "https://api.github.com/repos/Deadrik/TFCraft", "Date": "2014-02-11T23:27:23Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(AnimeIndex.wishlistDialog,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (name != null) util.window.WishlistDialog.wishListModel.addElement(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5801/buggy-version/src.util.window.WishlistDialog.java", "BodyUseAPI": ["util.SortedListModel.addElement(java.lang.String)"], "Fixed commit": "58f8f5c135f09c3f818a696eb6b5b04bac114fa1", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-14T14:00:55Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileList.find(fileIdentifier)) != (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9021/buggy-version/src.filesystem.SDFS.java", "BodyUseAPI": [], "Fixed commit": "9fa948b33502370aaa521b7bd8f217ca3d09b6d1", "Url": "https://api.github.com/repos/naveed2/MP3", "Date": "2012-11-11T12:09:32Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location != (-1)) pieceIDs[location] = pieceID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3286/buggy-version/src.manager.UIState.java", "BodyUseAPI": [], "Fixed commit": "fa92e45353929d7deaa7017443df480a9b9da836", "Url": "https://api.github.com/repos/utdrobotchess/chess-game", "Date": "2015-03-18T18:14:28Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pieceLocations[pieceID]) != (-1)) pieceIDs[pieceLocations[pieceID]] = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3286/buggy-version/src.manager.UIState.java", "BodyUseAPI": [], "Fixed commit": "fa92e45353929d7deaa7017443df480a9b9da836", "Url": "https://api.github.com/repos/utdrobotchess/chess-game", "Date": "2015-03-18T18:14:28Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model == null) { throw new edu.hm.weidacher.softarch.shareit.exceptions.PersistenceException(\"Model may not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5536/buggy-version/src.main.java.edu.hm.weidacher.softarch.shareit.data.dao.hibernate.AbstractHibernateDao.java", "BodyUseAPI": [], "Fixed commit": "4bb9aa8b8859c42fce0501cce6f445d8dbba42d6", "Url": "https://api.github.com/repos/abcshmedu/shareit-summer-2017-foreveralone-2", "Date": "2017-06-19T15:18:44Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (master) { if ((g.jam.getCurrentSong()) == null) { g.jam.setCurrentSong(song); g.jam.playCurrentSong(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3240/buggy-version/src.com.stanford.tutti.NewJamActivity.java", "BodyUseAPI": [], "Fixed commit": "af0c98497468099629aefcd5e78d246c5d19249f", "Url": "https://api.github.com/repos/JayThomason/Tutti", "Date": "2014-03-19T09:54:43Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.user) == null) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3206/buggy-version/source.src.com.v2tech.vo.Attendee.java", "BodyUseAPI": [], "Fixed commit": "601f6599566c7d8eaae63cd81ce25aa35b9085bd", "Url": "https://api.github.com/repos/jiangzhen1984/V2TechConferenceClient", "Date": "2014-06-19T13:56:54Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attendee.user) == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3206/buggy-version/source.src.com.v2tech.vo.Attendee.java", "BodyUseAPI": [], "Fixed commit": "601f6599566c7d8eaae63cd81ce25aa35b9085bd", "Url": "https://api.github.com/repos/jiangzhen1984/V2TechConferenceClient", "Date": "2014-06-19T13:56:54Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.flink.configuration.Configuration.getString(ConfigConstants.AKKA_WATCH_HEARTBEAT_PAUSE,ConfigConstants.DEFAULT_AKKA_ASK_TIMEOUT)", "org.apache.flink.configuration.Configuration.getString(ConfigConstants.EXECUTION_RETRY_DELAY_KEY,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (delayString.equals(pauseString)) { throw new java.lang.Exception(((((\"Invalid config value for \" + (org.apache.flink.configuration.ConfigConstants.AKKA_WATCH_HEARTBEAT_PAUSE)) + \": \") + pauseString) + \". Value must be a valid duration (such as '10 s' or '1 min')\")); }else { throw new java.lang.Exception(((((\"Invalid config value for \" + (org.apache.flink.configuration.ConfigConstants.EXECUTION_RETRY_DELAY_KEY)) + \": \") + delayString) + \". Value must be a valid duration (such as '100 milli' or '10 s')\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7429/buggy-version/flink-runtime.src.main.java.org.apache.flink.runtime.executiongraph.restart.RestartStrategyFactory.java", "BodyUseAPI": [], "Fixed commit": "90532549e7c1e3c461481ae1a7f4ffe33f3860ae", "Url": "https://api.github.com/repos/smarthi/flink", "Date": "2016-02-15T13:36:57Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min == max) { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6170/buggy-version/src.main.java.ymatsubara.dslib.util.DataProcessUtil.java", "BodyUseAPI": [], "Fixed commit": "890f6405d8f2150d3fa262ff3352d67df07a0b8d", "Url": "https://api.github.com/repos/yoshitomo-matsubara/dslib", "Date": "2016-12-24T01:03:57Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sd == 0.0) { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6170/buggy-version/src.main.java.ymatsubara.dslib.util.DataProcessUtil.java", "BodyUseAPI": [], "Fixed commit": "890f6405d8f2150d3fa262ff3352d67df07a0b8d", "Url": "https://api.github.com/repos/yoshitomo-matsubara/dslib", "Date": "2016-12-24T01:03:57Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((that.N) > (this.N)) || ((that.N) < (this.N))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1190/buggy-version/src.Board.java", "BodyUseAPI": [], "Fixed commit": "9b3a6396b00f9940949b5aa650d6535368cb1293", "Url": "https://api.github.com/repos/dgethers/algorithms1", "Date": "2014-03-20T12:44:46Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.matheclipse.core.interfaces.IRational.isLessThan(F.C0)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isImNegative) { imaginaryPart = imaginaryPart.negate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1262/buggy-version/symja_android_library.matheclipse-core.src.main.java.org.matheclipse.core.form.mathml.MathMLFormFactory.java", "BodyUseAPI": [], "Fixed commit": "63578f1f78b5e98e8a2a384e5d48d5fc6bc8fe10", "Url": "https://api.github.com/repos/axkr/symja_android_library", "Date": "2017-08-22T16:28:04Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tiredale.server.ChatServerMain.dataBaseLength()) == 0) { tiredale.server.ChatServerMain.readFile(emailIn, tiredale.server.ChatServerMain.getUser(0)); }else { for (int i = 0; i < (tiredale.server.ChatServerMain.dataBaseLength()); i++) { if (tiredale.server.ChatServerMain.getUser(i).equals(this)) { tiredale.server.ChatServerMain.readFile(emailIn, tiredale.server.ChatServerMain.getUser(i)); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6142/buggy-version/COMP90015ChatServer.src.tiredale.server.ChatServerThread.java", "BodyUseAPI": [], "Fixed commit": "af5015677dd77a0ffed1fff8be9afce2b87f61da", "Url": "https://api.github.com/repos/davidju17/superchat", "Date": "2015-10-23T04:49:23Z"},
{"Line": "=>2105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mMessageListView)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5524/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.fragments.MatrixMessageListFragment.java", "BodyUseAPI": [], "Fixed commit": "f3683e9b97cda6c7d0253bcec35a71e4ec008e5b", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2016-09-26T07:25:07Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((record.getBirthDay()) != null) && (!(record.getBirthDay().isEmpty()))) { java.lang.String[] components = record.getBirthDay().split(\";\"); if ((components.length) == 2) { txt_day.setText(components[0]); txt_month.setText(components[1]); }else { java.lang.String birthday = components[0]; components = birthday.split(\"-\"); txt_day.setText(components[2]); txt_month.setText(components[1]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/919/buggy-version/app.src.main.java.com.inveniotechnologies.neophyte.ui.EditPerson.java", "BodyUseAPI": ["com.inveniotechnologies.neophyte.network.models.Record.getBirthDay()", "record.getBirthDay().split(java.lang.String)"], "Fixed commit": "05d25492f8e1b74fadbcd6ab82c4d4405b0c8ea9", "Url": "https://api.github.com/repos/bolorundurowb/foursquare-neophyte", "Date": "2017-06-16T22:05:49Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.Timeline.getEvents()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (events == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1540/buggy-version/src.storage.Driver.java", "BodyUseAPI": [], "Fixed commit": "42b16d7e65575439a6b790b0fa9de9caf8b9e62f", "Url": "https://api.github.com/repos/joshuawright11/timelinephasetwo", "Date": "2014-03-01T22:18:57Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isOrderDefault)) { java.util.Collections.reverse(mReadAdapter.getList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4857/buggy-version/app.src.main.java.sunday.app.bairead.bookRead.BookReadChapterFragment.java", "BodyUseAPI": [], "Fixed commit": "2c69d9c3d42e1904fc226952a3743dd5d9c21709", "Url": "https://api.github.com/repos/xindasunday/BaiRead", "Date": "2017-06-27T06:22:13Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.siteError) != null) { throw new org.apache.maven.reporting.MavenReportException(\"Unable to generate Enunciate documentation.\", this.siteError); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8255/buggy-version/slim-maven-plugin.src.main.java.com.webcohesion.enunciate.mojo.DocsBaseMojo.java", "BodyUseAPI": [], "Fixed commit": "09c0346e533b18a3eca0473d135d51cd71020ef6", "Url": "https://api.github.com/repos/stoicflame/enunciate", "Date": "2017-10-12T18:48:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((map[i][j].target) == true) { java.lang.System.out.print(((map[i][j].target) + \" \")); }else { java.lang.System.out.print(((map[i][j].target) + \" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8254/buggy-version/ProbabilisticSearchAndDestroy.src.Map.java", "BodyUseAPI": ["java.io.PrintStream.print(((map[i][j].target) + \"   \"))", "java.io.PrintStream.print(((map[i][j].target) + \"    \"))"], "Fixed commit": "321404be98c8223c9b05cafd7ba7195c0589ee0b", "Url": "https://api.github.com/repos/murtalaliyu/AIP2", "Date": "2017-07-25T21:50:44Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((velX) == 0) breakFlag = true; else breakFlag = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8784/buggy-version/src.Shape.java", "BodyUseAPI": [], "Fixed commit": "88ed42ec85edce77f8c42ac190f33421ca10da63", "Url": "https://api.github.com/repos/grant-beske/ShapeJumper", "Date": "2017-07-02T01:15:02Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getUser()) != null) { result.put(\"user_email\", event.getUser().getEmailAddress()); result.put(\"user_name\", event.getUser().getDisplayName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/155/buggy-version/src.main.java.com.flowdock.plugins.jira.FlowdockEventRenderer.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,event.getUser().getEmailAddress())", "event.getUser().getDisplayName()", "com.atlassian.jira.event.issue.IssueEvent.getUser()", "event.getUser().getEmailAddress()", "com.atlassian.jira.event.issue.IssueEvent.getUser()", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,event.getUser().getDisplayName())"], "Fixed commit": "65690ab7da0d6aef17f49cc0fd3a88d803eb3300", "Url": "https://api.github.com/repos/flowdock/flowdock-jira-plugin", "Date": "2014-08-19T12:53:56Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Const.JIRATCKeyFAILLIST.size()) >= 1) { for (int i = 1; i <= (Const.JIRATCKeyFAILLIST.size()); i++) { if (Const.JIRATCKeyFAILLIST.get(i).toUpperCase().contentEquals(\"FAIL\")) { ErrorCodeStatus = 1; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6521/buggy-version/src.javaSeed.driverSheet.TriggerJavaSeed.java", "BodyUseAPI": [], "Fixed commit": "a7cf639868759367756c55fb2c8b1752ea6dbc6c", "Url": "https://api.github.com/repos/nkatare/SEED_FrameworkV2", "Date": "2017-01-25T14:11:52Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (RESULT_OK)) { android.graphics.Bitmap bp = ((android.graphics.Bitmap) (data.getExtras().get(\"data\"))); if (bp != null) { photoBitmap = drawTextToBitmap(bp, dayTemp); getFragmentManager().beginTransaction().replace(android.R.id.content, new ge.tot.weatherapp.ui.PhotoFragment(), \"photo_fragment\").addToBackStack(\"forecast\").commit(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1014/buggy-version/app.src.main.java.ge.tot.weatherapp.ui.MyActivity.java", "BodyUseAPI": [], "Fixed commit": "552636bc2148d5ca551c59cf9951d6c5bfa9e840", "Url": "https://api.github.com/repos/tot-tbilisi/WeatherApp", "Date": "2014-09-29T07:48:25Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecyclerView.getAdapter().getItemCount()) == 0) { android.widget.Toast.makeText(this, providerError, Toast.LENGTH_LONG).show(); if ((!(latitude.isEmpty())) && (!(longitude.isEmpty()))) { requestForService(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6267/buggy-version/app.src.main.java.au.com.cafe.loc.cafeloc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c8eb0216d2677dbb48eda7d97c21f309beb8ad8d", "Url": "https://api.github.com/repos/prijupaul/CafeLoc", "Date": "2016-12-21T14:42:11Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pillarone.riskanalytics.graph.formeditor.ui.model.ModelRepositoryTreeModel.getModelNode(org.pillarone.riskanalytics.graph.core.graph.model.AbstractGraphModel)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (node != null) { org.pillarone.riskanalytics.graph.formeditor.ui.view.IMutableTreeNode parent = ((org.pillarone.riskanalytics.graph.formeditor.ui.view.IMutableTreeNode) (node.getParent())); final int index = parent.getIndex(((org.pillarone.riskanalytics.graph.formeditor.ui.view.ITreeNode) (node))); parent.remove(index); treeModel.nodesWereRemoved(parent, new int[]{ index }, new java.lang.Object[]{ node }); treeModel.getLeaves().remove(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1168/buggy-version/src.groovy.org.pillarone.riskanalytics.graph.formeditor.ui.view.ModelRepositoryTree.java", "BodyUseAPI": ["treeModel.getLeaves().remove(org.pillarone.riskanalytics.graph.formeditor.ui.model.ModelRepositoryTreeNode)", "org.pillarone.riskanalytics.graph.formeditor.ui.model.ModelRepositoryTreeModel.nodesWereRemoved(org.pillarone.riskanalytics.graph.formeditor.ui.view.IMutableTreeNode,int[],java.lang.Object[])", "org.pillarone.riskanalytics.graph.formeditor.ui.model.ModelRepositoryTreeNode.getParent()"], "Fixed commit": "245697f835367c804c069c34a3282353c405b04a", "Url": "https://api.github.com/repos/pillarone/risk-analytics-graph-form-editor", "Date": "2012-06-29T08:52:41Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (var4 == 4) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5582/buggy-version/common.enhancedportals.item.ItemPortalModifierUpgrade.java", "BodyUseAPI": [], "Fixed commit": "655bab697cd71ce92e3400544a3c33ec40e16028", "Url": "https://api.github.com/repos/ShadedDimension/enhanced-portals", "Date": "2013-06-10T12:46:03Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["resultQuery.get().getList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rows.size()) > pagesize) { K nextStartKey = resultQuery.get().peekLast().getKey(); cassandraList.setStartKey(nextStartKey); rows.remove(((rows.size()) - 1)); }else { cassandraList.setStartKey(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7466/buggy-version/src.cassandra.java.com.joyveb.support.cassandra.CassandraDaoSupport.java", "BodyUseAPI": ["java.util.List<me.prettyprint.hector.api.beans.Row<K, java.lang.String, java.nio.ByteBuffer>>.remove(((rows.size()) - 1))", "java.util.List<me.prettyprint.hector.api.beans.Row<K, java.lang.String, java.nio.ByteBuffer>>.size()"], "Fixed commit": "3edce61da4639f5ef2c515130b035b0f9e794e58", "Url": "https://api.github.com/repos/nivance/CassDaoSupport", "Date": "2013-06-20T06:46:34Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.treeToValue(com.fasterxml.jackson.databind.JsonNode,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(org.aimas.consert.ide.model.ProjectModel.getInstance().getEntities().contains(cem))) { org.aimas.consert.ide.model.ProjectModel.getInstance().addEntity(cem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/441/buggy-version/CONSERT-IDE.src.org.aimas.consert.ide.editor.EntityFormView.java", "BodyUseAPI": ["org.aimas.consert.ide.model.ProjectModel.getInstance().addEntity(org.aimas.consert.ide.model.ContextEntityModel)"], "Fixed commit": "1637b0e2ece7c884c948e2ace8eb9a78a65a7bb3", "Url": "https://api.github.com/repos/ami-lab/CONSERT-IDE", "Date": "2017-08-15T17:14:30Z"},
{"Line": "=>4419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nist.javax.sip.message.SIPResponse.getHeader(RSeqHeader.NAME)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (rseq != null) { retransCondition = (retransCondition + \"/\") + (rseq.getSeqNumber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5741/buggy-version/src.gov.nist.javax.sip.stack.SIPDialog.java", "BodyUseAPI": ["gov.nist.javax.sip.header.RSeq.getSeqNumber()"], "Fixed commit": "bdec230d884797ee8faaa4af68b0b7f9b2ebbea8", "Url": "https://api.github.com/repos/RestComm/jain-sip", "Date": "2016-09-14T12:11:09Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(inventoryButtons.containsKey(slot))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5815/buggy-version/Core.src.main.java.net.cogzmc.core.gui.InventoryGraphicalInterface.java", "BodyUseAPI": [], "Fixed commit": "e8d228df5073e02d38b1eeb4691b854c681c86a4", "Url": "https://api.github.com/repos/Twister915/Core", "Date": "2015-05-17T03:53:14Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list) != null) list.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9295/buggy-version/Specular.src.com.tint.specular.states.HighscoreState.java", "BodyUseAPI": [], "Fixed commit": "5adfafad15966310a01712d121ed592a065582a4", "Url": "https://api.github.com/repos/onoff97/Specular", "Date": "2014-01-24T16:55:16Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((id.getType()) == (SymbolType.LOGICAL)) || ((tempType.getType()) == (SymbolType.LOGICAL))) throw new me.cassiano.thunder.IncompatibleTypes(me.cassiano.thunder.LexicalAnalyzer.get().getLineNumber(), id.getType().toString(), tempType.getType().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7542/buggy-version/src.me.cassiano.thunder.Parser.java", "BodyUseAPI": ["id.getType().toString()", "tempType.getType().toString()", "me.cassiano.thunder.ExpressionReturn.getType()", "me.cassiano.thunder.Symbol.getType()"], "Fixed commit": "13d306b29acbec4cf06d0671786b70256523584d", "Url": "https://api.github.com/repos/mcassiano/thunder", "Date": "2016-11-23T14:30:36Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (downloadingMessageDisplayed) { java.lang.System.out.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4015/buggy-version/src.main.java.org.tibennetwork.iamame.internetarchive.collectionitem.CollectionItem.java", "BodyUseAPI": [], "Fixed commit": "623eb41074566c276d4c48c52c9e0fd3dfc2d7df", "Url": "https://api.github.com/repos/TiBeN/ia-mame", "Date": "2016-06-29T11:50:00Z"},
{"Line": "=>1165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (database != null) database.activateOnCurrentThread();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6709/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.ODistributedDatabaseImpl.java", "BodyUseAPI": ["com.orientechnologies.orient.core.db.document.ODatabaseDocumentTx.activateOnCurrentThread()"], "Fixed commit": "1956a6da9ab0b701a878f774c2c793a51ff0bdd2", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-08-09T16:21:38Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["am.app.lexicon.Lexicon.getSynSet(com.hp.hpl.jena.ontology.OntResource)", "am.app.lexicon.Lexicon.getSynSet(com.hp.hpl.jena.ontology.OntResource)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((sourceSet == null) || (targetSet == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3107/buggy-version/AgreementMaker.src.am.app.mappingEngine.LexicalSynonymMatcher.LexicalSynonymMatcher.java", "BodyUseAPI": [], "Fixed commit": "c36a6124cd3abfe91e121a6bb29aa6ff9a9bddee", "Url": "https://api.github.com/repos/agreementmaker/agreementmaker", "Date": "2011-07-21T22:39:24Z"},
{"Line": "=>1216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Boolean, com.vaadin.ui.Label>.get(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (titleLabel != null) { com.vaadin.ui.Label newLabel = constructTitleLabel(); titleLabels.put(isViewMode(), newLabel); titleBars.get(isViewMode()).replaceComponent(titleLabel, newLabel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5102/buggy-version/dynamo-spring.src.main.java.com.ocs.dynamo.ui.composite.form.ModelBasedEditForm.java", "BodyUseAPI": ["titleBars.get(isViewMode()).replaceComponent(com.vaadin.ui.Label,com.vaadin.ui.Label)"], "Fixed commit": "951f6164743a380dc4af0a7e20a53fe42ccdc0aa", "Url": "https://api.github.com/repos/opencirclesolutions/dynamo", "Date": "2017-03-23T09:18:30Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (no.dkit.android.ludum.core.game.Config.DEBUG) { scoreWindow.add(fpsLabel); scoreWindow.add(fps).width(((no.dkit.android.ludum.core.game.Config.getDimensions().SCREEN_WIDTH) / 10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7317/buggy-version/core.src.no.dkit.android.ludum.core.game.controller.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "7a28becdec8ed46494783bf62b3e48fd5f5ce8b1", "Url": "https://api.github.com/repos/dkoding/ludum-engine", "Date": "2015-04-19T23:37:06Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (masterBlock == null) ((zmaster587.libVulpes.tile.IMultiblock) (tile)).setMasterBlock(this.pos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3640/buggy-version/src.main.java.zmaster587.libVulpes.tile.multiblock.TileMultiBlock.java", "BodyUseAPI": [], "Fixed commit": "42cb62ef806dd3e0b6af9d826b049418554ee2c4", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-12-21T05:17:55Z"},
{"Line": "=>739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (simpleworkflow.engine.persistence.sql.SQLWorkflowPersistence.logger.isDebugEnabled()) { simpleworkflow.engine.persistence.sql.SQLWorkflowPersistence.logger.debug((\"statementWithSelectPartForFindWorkflowInstatncesInTimeSpan() sql:\" + (sql.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6266/buggy-version/srcSimpleWorkflow.simple-workflow-persistence-sql.src.simpleworkflow.engine.persistence.sql.SQLWorkflowPersistence.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "a261deb742c6e93dc8201d05695076180ee6f3b5", "Url": "https://api.github.com/repos/beef-liu/simple-workflow", "Date": "2015-12-04T18:20:08Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((response != null) && ((response.body()) != null)) && ((response.body().message) != null)) { errorMessage += \" : \" + (response.body().message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2784/buggy-version/app.src.main.java.com.nestedworld.nestedworld.ui.mainMenu.tabs.home.HomeFriendFragment.java", "BodyUseAPI": ["retrofit2.Response<com.nestedworld.nestedworld.network.http.models.response.friend.AddFriendResponse>.body()"], "Fixed commit": "3aafec8d3a8b661d44855abcebc6f4edebd1becf", "Url": "https://api.github.com/repos/kassisdion/NestedWorld-Android", "Date": "2016-09-23T16:35:49Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event instanceof se.crafted.chrisb.ecoCreature.events.PlayerKilledEvent) { return getRewardSource(((se.crafted.chrisb.ecoCreature.events.PlayerKilledEvent) (event)).getEntity()); }else if (event instanceof se.crafted.chrisb.ecoCreature.events.EntityKilledEvent) { return getRewardSource(((se.crafted.chrisb.ecoCreature.events.EntityKilledEvent) (event)).getEntity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3522/buggy-version/src.main.java.se.crafted.chrisb.ecoCreature.settings.CustomEntityRewardSettings.java", "BodyUseAPI": [], "Fixed commit": "50f465213f486f9a7b7cf92b713cbf075ae86eef", "Url": "https://api.github.com/repos/Herocraft/ecoCreature", "Date": "2012-11-03T23:14:20Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (0 < (t.size())) { android.util.Log.d(\"Tanck\", (((t.get(0).ip) + \"---size:\") + (t.size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7558/buggy-version/app.src.main.java.com.softtanck.findprinter.MainActivity.java", "BodyUseAPI": ["java.util.List<T>.size()", "android.util.Log.d(java.lang.String,(((t.get(0).ip) + \"---size:\") + (t.size())))", "java.util.List<T>.get(int)"], "Fixed commit": "487019618018e473d4d9ba0cbb49e9c87abfcb30", "Url": "https://api.github.com/repos/q422013/FindPrinter", "Date": "2015-12-17T03:06:29Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (increment > 0) { getGamesClient().incrementAchievement(id, increment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5689/buggy-version/src.main.java.uk.co.thomasc.wordmaster.BaseGame.java", "BodyUseAPI": ["getGamesClient().incrementAchievement(java.lang.String,int)"], "Fixed commit": "e41ba5268e0a450618c6a1a8de588b6aa6ac5221", "Url": "https://api.github.com/repos/Top-Cat/WordMaster", "Date": "2013-07-01T10:26:39Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (realUrl == null) throw new org.da4.urlminimizer.exception.AliasNotFound((\"Alias not found: \" + in));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8710/buggy-version/UrlMinifierLibrary.src.main.java.org.da4.urlminimizer.UrlMinimizer.java", "BodyUseAPI": [], "Fixed commit": "8714c47b8f5330a86a77d7897e939ba9542422b0", "Url": "https://api.github.com/repos/dblaber/urlminimizer", "Date": "2016-11-17T04:26:41Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getToNode().getIncomingEdgeList().size()) == 1) { queue.offer(e.getToNode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8616/buggy-version/src.ec.graph.LocalMutationPipeline.java", "BodyUseAPI": ["java.util.Queue<ec.graph.Node>.offer(e.getToNode())", "ec.graph.Edge.getToNode()"], "Fixed commit": "4a1b94f6964fd21be7dacd35524f1997e499b323", "Url": "https://api.github.com/repos/silvalex/GraphEvol", "Date": "2015-08-16T04:15:22Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_id) == (UserInterfaceModule.GameManager.getInstance().getClientId())) { g.drawString((\"ID: \" + (java.lang.Integer.toString(_id))), ((Common.Constants.WINDOW_WIDTH) / 2), (((Common.Constants.WINDOW_HEIGHT) / 2) - 30)); }else { int mainCharacterId = UserInterfaceModule.GameManager.getInstance().getClientId(); DynamicObjectModule.Entities.Sprite mainCharacter = UserInterfaceModule.GameManager.getInstance().getDOM().findSprite(mainCharacterId); g.drawString((\"ID: \" + (java.lang.Integer.toString(_id))), (((_x) - (mainCharacter.getX())) + ((Common.Constants.WINDOW_WIDTH) / 2)), ((((_y) - (mainCharacter.getY())) + ((Common.Constants.WINDOW_HEIGHT) / 2)) - 30)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7371/buggy-version/src.DynamicObjectModule.Entities.VirtualCharacter.java", "BodyUseAPI": [], "Fixed commit": "6f0cc84d4cdfa54c31083219734cf4615709ab05", "Url": "https://api.github.com/repos/NotCrowdingOutRuoshi/Organ-Donation", "Date": "2016-01-04T07:45:39Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(Ticket.STOPPED_ON)", "org.json.JSONObject.getString(Ticket.STARTED_ON)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(last_started_on.equals(\"\"))) && (last_stopped_on.equals(\"\"))) { ticket.setProgress_display(\"In Progress\"); }else { ticket.setProgress_display(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5357/buggy-version/app.src.main.java.rocks.athrow.android_service_tickets.data.UpdateDatabase.java", "BodyUseAPI": [], "Fixed commit": "fb35f154c5cf8e1aad63a3bef7f6c14d2d88341a", "Url": "https://api.github.com/repos/throwrocks/android_service_tickets", "Date": "2016-10-25T16:29:16Z"},
{"Line": "=>1332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (producerFactoryFnOpt.isPresent()) { producer = producerFactoryFnOpt.get().apply(producerConfig); }else { producer = new org.apache.kafka.clients.producer.KafkaProducer<K, V>(producerConfig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1024/buggy-version/sdks.java.io.kafka.src.main.java.org.apache.beam.sdk.io.kafka.KafkaIO.java", "BodyUseAPI": ["com.google.common.base.Optional<org.apache.beam.sdk.transforms.SerializableFunction<java.util.Map<java.lang.String, java.lang.Object>, org.apache.kafka.clients.producer.Producer<K, V>>>.get()", "producerFactoryFnOpt.get().apply(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "70503d23327215c61422c3343893ec2a39b3c8b1", "Url": "https://api.github.com/repos/rangadi/beam", "Date": "2016-06-02T18:22:28Z"},
{"Line": "=>3352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof megamek.common.Infantry) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4829/buggy-version/megamek.src.megamek.common.Entity.java", "BodyUseAPI": [], "Fixed commit": "556906f3cf04f20c05e558fcb99081e23af75f2b", "Url": "https://api.github.com/repos/MegaMek/megamek", "Date": "2005-07-20T20:05:21Z"},
{"Line": "=>1140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isGood) { setLoadEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4829/buggy-version/megamek.src.megamek.client.ui.AWT.MovementDisplay.java", "BodyUseAPI": [], "Fixed commit": "556906f3cf04f20c05e558fcb99081e23af75f2b", "Url": "https://api.github.com/repos/MegaMek/megamek", "Date": "2005-07-20T20:05:21Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mOperationTextView.getText().toString().isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5523/buggy-version/SimpleCalculator.app.src.main.java.com.example.kamyshovcorp.simplecalculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e2bef34e108f892d2f74144df1702ec52c1d6dcd", "Url": "https://api.github.com/repos/sergeykamyshov/PlayGround", "Date": "2017-07-14T19:00:09Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.suggestionsPanel) != null) { this.suggestionsPanel.removeAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9131/buggy-version/src.com.ceejii.gui.component.SearchSuggestionComponent.java", "BodyUseAPI": [], "Fixed commit": "f37d8d19659e159987983cc9fa3f2e2e0cf68c27", "Url": "https://api.github.com/repos/ceejii/jcomponent-search", "Date": "2013-04-04T16:34:29Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.uima.fit.util.JCasUtil.exists(jcas, org.dkpro.tc.api.type.TextClassificationUnit.class))) { org.dkpro.tc.api.type.TextClassificationUnit target = new org.dkpro.tc.api.type.TextClassificationUnit(jcas, 0, jcas.getDocumentText().length()); target.addToIndexes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8442/buggy-version/dkpro-tc-ml.src.main.java.org.dkpro.tc.ml.uima.TcAnnotator.java", "BodyUseAPI": ["org.apache.uima.jcas.JCas.getDocumentText()", "jcas.getDocumentText().length()"], "Fixed commit": "b3b9720e409d7c48eb9ac32078b350c6e049b222", "Url": "https://api.github.com/repos/dkpro/dkpro-tc", "Date": "2016-06-06T15:01:08Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uk.ac.bbsrc.tgac.miso.core.util.SubmissionUtils.removeBOM(reader, uk.ac.bbsrc.tgac.miso.core.util.SubmissionUtils.OTHER)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/960/buggy-version/core.src.main.java.uk.ac.bbsrc.tgac.miso.core.util.SubmissionUtils.java", "BodyUseAPI": [], "Fixed commit": "ecf267c883027730ebe4ed566197345f4a933c37", "Url": "https://api.github.com/repos/iosefward/miso-lims", "Date": "2013-03-20T17:53:59Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result != null) { app.setKey(result); updateTableRow(app, row); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7519/buggy-version/appengine-server.src.com.appspot.eventorama.client.AppList.java", "BodyUseAPI": ["com.appspot.eventorama.shared.model.Application.setKey(com.google.appengine.api.datastore.Key)"], "Fixed commit": "264c6bdb1aa7d0e8fa99fc39f6b4054ce37b0eb8", "Url": "https://api.github.com/repos/larsrottmann/event-o-rama", "Date": "2011-06-27T11:40:11Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1720/buggy-version/src.edu.pitt.designs1635.ParkIt.ParkItActivity.java", "BodyUseAPI": [], "Fixed commit": "44a1dfd31e5f9825de1b6a36728d39e569f482d6", "Url": "https://api.github.com/repos/vincetran/ParkIt-Oakland-Android", "Date": "2012-04-07T18:12:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1720/buggy-version/src.edu.pitt.designs1635.ParkIt.Add.java", "BodyUseAPI": [], "Fixed commit": "44a1dfd31e5f9825de1b6a36728d39e569f482d6", "Url": "https://api.github.com/repos/vincetran/ParkIt-Oakland-Android", "Date": "2012-04-07T18:12:04Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ap instanceof hudson.matrix.MatrixProject) { java.util.List<com.redhat.engineering.jenkins.custom.matrix.CustomMatrixAction> list = ap.getActions(com.redhat.engineering.jenkins.custom.matrix.CustomMatrixAction.class); if (list.isEmpty()) { com.redhat.engineering.jenkins.custom.matrix.CustomMatrixAction newAction = new com.redhat.engineering.jenkins.custom.matrix.CustomMatrixAction(((hudson.matrix.MatrixProject) (ap))); actions.add(newAction); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7447/buggy-version/src.main.java.com.redhat.engineering.jenkins.custom.matrix.CustomMatrixActionFactory.java", "BodyUseAPI": ["hudson.model.AbstractProject.getActions(java.lang.Class)"], "Fixed commit": "06ccffda837aef8fbf4f49e113553c1d6b8ce396", "Url": "https://api.github.com/repos/jrusnack/CustomMatrix", "Date": "2012-04-23T09:29:46Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["build.getParent().getActions(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (list.isEmpty()) { hudson.matrix.MatrixProject mp = build.getParent(); mp.getActions().add(new com.redhat.engineering.jenkins.custom.matrix.CustomMatrixAction(mp)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7447/buggy-version/src.main.java.com.redhat.engineering.jenkins.custom.matrix.CustomMatrixListener.java", "BodyUseAPI": [], "Fixed commit": "06ccffda837aef8fbf4f49e113553c1d6b8ce396", "Url": "https://api.github.com/repos/jrusnack/CustomMatrix", "Date": "2012-04-23T09:29:46Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isPerformingAnimation) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5387/buggy-version/2DAnimation.src.ivan.slavka.sprites.Sprite.java", "BodyUseAPI": [], "Fixed commit": "a939011bad5df149ceb2cd9afe1054c216b27a95", "Url": "https://api.github.com/repos/ivansla/ivan-slavka-repo", "Date": "2015-04-23T07:08:46Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.darurats.baking.services.BakingService.processStock) != null) { return BakingService.processStock.size(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2340/buggy-version/app.src.main.java.com.darurats.baking.widget.BakingWidgetFactory.java", "BodyUseAPI": [], "Fixed commit": "d74fc7cd4aaba2236e64ab239ba12db1cca2e334", "Url": "https://api.github.com/repos/darurats/BakingApp", "Date": "2017-09-05T10:48:43Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (spellInteractions.isEmpty()) { return com.arnopaja.supermac.helpers.interaction.Interactions.NULL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3002/buggy-version/src.com.arnopaja.supermac.battle.Battle.java", "BodyUseAPI": [], "Fixed commit": "d6894bb6e631bb9b4e6572d1d2a5afddb564783e", "Url": "https://api.github.com/repos/math1man/SuperMacalester", "Date": "2014-05-07T22:31:52Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.memoranda.TaskImpl.getStartDate()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((end.getYear()) < (start.getYear())) { }else if ((end.getYear()) > (start.getYear())) { return end; }else { if ((end.getMonth()) < (start.getMonth())) { }else if ((end.getMonth()) > (start.getMonth())) { return end; }else { if ((end.getDay()) < (start.getDay())) { }else { return end; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4848/buggy-version/src.net.sf.memoranda.TaskImpl.java", "BodyUseAPI": ["net.sf.memoranda.date.CalendarDate.getDay()", "net.sf.memoranda.date.CalendarDate.getYear()", "net.sf.memoranda.date.CalendarDate.getMonth()", "net.sf.memoranda.date.CalendarDate.getYear()", "net.sf.memoranda.date.CalendarDate.getMonth()", "net.sf.memoranda.date.CalendarDate.getMonth()", "net.sf.memoranda.date.CalendarDate.getDay()", "net.sf.memoranda.date.CalendarDate.getMonth()"], "Fixed commit": "2570a6ea928f3e2de6fb76173059e4d3ede1ec9c", "Url": "https://api.github.com/repos/ser316asu/SER316-Nuremberg", "Date": "2017-03-31T22:13:42Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.memoranda.TaskImpl.getStartDate()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((end.getMonth()) > (start.getMonth())) { return end; }else { if ((end.getDay()) < (start.getDay())) { }else { return end; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4848/buggy-version/src.net.sf.memoranda.TaskImpl.java", "BodyUseAPI": ["net.sf.memoranda.date.CalendarDate.getDay()", "net.sf.memoranda.date.CalendarDate.getDay()"], "Fixed commit": "2570a6ea928f3e2de6fb76173059e4d3ede1ec9c", "Url": "https://api.github.com/repos/ser316asu/SER316-Nuremberg", "Date": "2017-03-31T22:13:42Z"},
{"Line": "=>965", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (sctpConn == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7413/buggy-version/src.main.java.org.jitsi.videobridge.Videobridge.java", "BodyUseAPI": [], "Fixed commit": "49fdecb5fd0f1a1776d52a878c32cab8d4374755", "Url": "https://api.github.com/repos/innerverse/jitsi-videobridge", "Date": "2015-09-30T21:18:21Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (lastPathSegment == null) { throw new java.lang.IllegalArgumentException((\"Invalid policy directory: no filename (root of filesystem?): \" + policyVersionsDir)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3377/buggy-version/src.main.java.org.ow2.authzforce.pap.dao.flatfile.FlatFileDAORefPolicyProviderModule.java", "BodyUseAPI": [], "Fixed commit": "b6a10b6d1a7abdf439a1d01723923b693babaa42", "Url": "https://api.github.com/repos/authzforce/pap-dao-flat-file", "Date": "2016-09-01T17:36:29Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(preferences.contains(com.hubspot.android.leads.utils.Settings.NOTIFY_ENABLED_PREF_NAME))) { setNofifyEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1342/buggy-version/HubSpotLeads.src.main.java.com.hubspot.android.leads.utils.Settings.java", "BodyUseAPI": [], "Fixed commit": "4aa2c68a4216ac69c03d8cf01ecff93db8ac9a03", "Url": "https://api.github.com/repos/ojrac/HubSpot-Leads-Android", "Date": "2011-02-25T20:41:09Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(de.uni.freiburg.iig.telematik.swat.analysis.gui.AnalyzePanel,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1715/buggy-version/src.de.uni.freiburg.iig.telematik.swat.analysis.gui.AnalyzePanel.java", "BodyUseAPI": [], "Fixed commit": "b45b45eaf4a72b0a2481de70cdb150d233ff41f0", "Url": "https://api.github.com/repos/iig-uni-freiburg/SWAT20", "Date": "2016-03-02T11:34:06Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.isEmpty()) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"This record is Not Loaded\", \"Dialog\", javax.swing.JOptionPane.ERROR_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9265/buggy-version/src.main.java.au.com.sypaq.swing.gui.helper.ChooserPanelSearchHelper.java", "BodyUseAPI": [], "Fixed commit": "5ebebc81819ab0f98de15545aa28f3f9e2f3bde0", "Url": "https://api.github.com/repos/nlvovski/extractor", "Date": "2016-11-11T04:23:27Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.drill.exec.planner.sql.SchemaUtilites.findSchema(org.apache.calcite.schema.SchemaPlus,java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.drill.exec.planner.sql.SchemaUtilites.isRootSchema(schema)) { throw org.apache.drill.common.exceptions.UserException.validationError().message(\"No schema selected.\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5903/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler.java", "BodyUseAPI": [], "Fixed commit": "a4c71fb854c3330f8cf9bdcab39015f14d4ef02d", "Url": "https://api.github.com/repos/vkorukanti/drill", "Date": "2015-05-29T15:57:40Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.drill.exec.planner.sql.SchemaUtilites.findSchema(org.apache.calcite.schema.SchemaPlus,java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (schema == null) { org.apache.drill.exec.planner.sql.SchemaUtilites.throwSchemaNotFoundException(defaultSchema, SchemaUtilites.SCHEMA_PATH_JOINER.join(schemaPathGivenInCmd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5903/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler.java", "BodyUseAPI": [], "Fixed commit": "a4c71fb854c3330f8cf9bdcab39015f14d4ef02d", "Url": "https://api.github.com/repos/vkorukanti/drill", "Date": "2015-05-29T15:57:40Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"searchInvoiceNo\".equalsIgnoreCase(type)) { java.lang.String invoiceNo = map.get(\"invoiceNo\").toString(); java.lang.String department = map.get(\"department\").toString(); java.lang.String invType = \"\"; java.lang.System.out.println((\"invoiceNo ::: \" + invoiceNo)); com.smi.travel.datalayer.entity.Invoice invoice = new com.smi.travel.datalayer.entity.Invoice(); invoice = invoicedao.searchInvoiceForTaxInvoice(invoiceNo, department); if ((\"\".equals(invoice.getId())) || (null == (invoice.getId()))) { result = \"null\"; }else { result = buildTaxInvoiceListHTML(invoice); } }else if (\"getTaxInvoice\".equalsIgnoreCase(type)) { java.lang.String invoiceNo = map.get(\"invoiceNo\").toString(); com.smi.travel.datalayer.entity.TaxInvoice taxInv = taxInvoiceDao.getTaxInvoiceByTaxNo(invoiceNo); org.json.simple.JSONObject obj = new org.json.simple.JSONObject(convertInvoiceToMap(taxInv)); result = obj.toJSONString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/561/buggy-version/src.java.com.smi.travel.datalayer.bean.master.AJAXBean.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "ce1c086405103872675a60c32bf5663b1a4c71c1", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-09-04T09:28:57Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transformBean.getLocation()) == null) { final java.lang.String text = getString(R.string.noLocationFound); android.widget.Toast.makeText(getApplicationContext(), text, Toast.LENGTH_SHORT).show(); }else { final int rotation = ((android.view.WindowManager) (getSystemService(Context.WINDOW_SERVICE))).getDefaultDisplay().getRotation(); final io.github.data4all.model.data.AbstractDataElement osmElement = touchView.create(rotation); intent.putExtra(io.github.data4all.activity.ShowPictureActivity.OSM_ELEMENT, osmElement); startActivityForResult(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/611/buggy-version/src.main.java.io.github.data4all.activity.ShowPictureActivity.java", "BodyUseAPI": [], "Fixed commit": "bc61cae5258bca02da1d6f78d1c0cb367f631347", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-03-03T14:28:51Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cast_stack) != null) packet.write(cast_stack);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5993/buggy-version/src.main.java.com.builtbroken.creation.content.forge.cast.TileCast.java", "BodyUseAPI": [], "Fixed commit": "b580730fb3504d6891578988c60a01845abe0b2a", "Url": "https://api.github.com/repos/BuiltBrokenModding/Creations-BuildersToolkit", "Date": "2015-06-25T14:47:18Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((output_stack) != null) packet.write(output_stack);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5993/buggy-version/src.main.java.com.builtbroken.creation.content.forge.cast.TileCast.java", "BodyUseAPI": [], "Fixed commit": "b580730fb3504d6891578988c60a01845abe0b2a", "Url": "https://api.github.com/repos/BuiltBrokenModding/Creations-BuildersToolkit", "Date": "2015-06-25T14:47:18Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cdata) != null) { if (offset > (cdata.length())) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); } if ((offset + count) > (cdata.length())) { cdata.delete(offset, ((cdata.length()) - offset)); }else { cdata.delete(offset, count); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7184/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "6aed3cba6a2bcc0511fdc62fe234c9447c6272e9", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > length) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7184/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "6aed3cba6a2bcc0511fdc62fe234c9447c6272e9", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset + count) > length) { document.alpha[nodeNumber] = inDocOffset + offset; document.alphaLen[nodeNumber] = length - offset; }else { document.alpha[nodeNumber] = inDocOffset + offset; document.alphaLen[nodeNumber] = count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7184/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "6aed3cba6a2bcc0511fdc62fe234c9447c6272e9", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > length) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7184/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "6aed3cba6a2bcc0511fdc62fe234c9447c6272e9", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7184/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "6aed3cba6a2bcc0511fdc62fe234c9447c6272e9", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (actionDate == null) { actionDate = null; }else { this.actionDate = new java.util.Date(actionDate.getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6011/buggy-version/src.main.java.net.github.rtc.app.model.activity.Activity.java", "BodyUseAPI": ["java.util.Date.getTime()"], "Fixed commit": "2295784e6cb6c041e834387e8371492564603a3e", "Url": "https://api.github.com/repos/ReturnOnIntellingenceTraineeCommunity/rtc-app", "Date": "2015-01-29T12:36:39Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (createDate == null) { createDate = null; }else { this.createDate = new java.util.Date(createDate.getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6011/buggy-version/src.main.java.net.github.rtc.app.model.news.News.java", "BodyUseAPI": ["java.util.Date.getTime()"], "Fixed commit": "2295784e6cb6c041e834387e8371492564603a3e", "Url": "https://api.github.com/repos/ReturnOnIntellingenceTraineeCommunity/rtc-app", "Date": "2015-01-29T12:36:39Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (publishDate == null) { publishDate = null; }else { this.publishDate = new java.util.Date(publishDate.getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6011/buggy-version/src.main.java.net.github.rtc.app.model.news.News.java", "BodyUseAPI": ["java.util.Date.getTime()"], "Fixed commit": "2295784e6cb6c041e834387e8371492564603a3e", "Url": "https://api.github.com/repos/ReturnOnIntellingenceTraineeCommunity/rtc-app", "Date": "2015-01-29T12:36:39Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oscarehr.common.dao.DrugProductDao.find(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((drugProduct != null) && ((drugProduct.getDispensingEvent()) != null)) { throw new java.lang.RuntimeException(\"Cannot delete a dispensed drug\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3911/buggy-version/src.main.java.org.oscarehr.managers.DrugProductManager.java", "BodyUseAPI": [], "Fixed commit": "52d16277f965f6a19e72c7c2093c280daf0f2542", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-10-01T16:53:14Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k > 9) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3250/buggy-version/src.edu.gatech.cc.baconytics.analyzer.json.KeyEntJSONServlet.java", "BodyUseAPI": [], "Fixed commit": "09940777b29d88b7f24708f81cb79a6175fccb24", "Url": "https://api.github.com/repos/aliuy/Baconytics", "Date": "2012-04-14T15:25:17Z"},
{"Line": "=>1379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mem.getName()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6768/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.hover.DocumentationHover.java", "BodyUseAPI": [], "Fixed commit": "bea786c29a262560021455faedb1d0511348c963", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2015-03-16T01:43:22Z"},
{"Line": "=>1692", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.compiler.typechecker.model.Parameter.getDeclaration()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pd.getName()) == null) { if (pd instanceof com.redhat.ceylon.compiler.typechecker.model.Constructor) { buffer.append(\"Parameter of default constructor of\"); com.redhat.ceylon.eclipse.code.hover.DocumentationHover.appendParameterLink(buffer, ((com.redhat.ceylon.compiler.typechecker.model.Declaration) (pd.getContainer()))); buffer.append(\".\"); } }else if (pd.getName().startsWith(\"anonymous#\")) { buffer.append(\"Parameter of anonymous function.\"); }else { buffer.append(\"Parameter of\"); com.redhat.ceylon.eclipse.code.hover.DocumentationHover.appendParameterLink(buffer, pd); buffer.append(\".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6768/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.hover.DocumentationHover.java", "BodyUseAPI": ["com.redhat.ceylon.eclipse.code.hover.DocumentationHover.appendParameterLink(java.lang.StringBuilder,((com.redhat.ceylon.compiler.typechecker.model.Declaration) (pd.getContainer())))", "com.redhat.ceylon.eclipse.code.hover.DocumentationHover.appendParameterLink(java.lang.StringBuilder,com.redhat.ceylon.compiler.typechecker.model.Declaration)", "com.redhat.ceylon.compiler.typechecker.model.Declaration.getName()", "com.redhat.ceylon.compiler.typechecker.model.Declaration.getContainer()", "pd.getName().startsWith(java.lang.String)"], "Fixed commit": "bea786c29a262560021455faedb1d0511348c963", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2015-03-16T01:43:22Z"},
{"Line": "=>1016", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dec.getName()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6768/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.hover.DocumentationHover.java", "BodyUseAPI": [], "Fixed commit": "bea786c29a262560021455faedb1d0511348c963", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2015-03-16T01:43:22Z"},
{"Line": "=>752", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_atEndDo) == (sk.henrichg.phoneprofilesplus.Event.EATENDDO_UNDONE_PROFILE)) { if ((eventTimelineList.size()) > 0) { sk.henrichg.phoneprofilesplus.EventTimeline _eventTimeline = eventTimelineList.get(((eventTimelineList.size()) - 1)); if (_eventTimeline != null) { sk.henrichg.phoneprofilesplus.Event event = dataWrapper.getEventById(_eventTimeline._fkEvent); if (event != null) eventTimeline._fkProfileEndActivated = event._fkProfileStart; } } if ((eventTimeline._fkProfileEndActivated) != activatedProfileId) { sk.henrichg.phoneprofilesplus.GlobalData.logE(\"Event.pauseEvent\", \"undone profile\"); sk.henrichg.phoneprofilesplus.GlobalData.logE(\"Event.pauseEvent\", (\"_fkProfileEndActivated=\" + (eventTimeline._fkProfileEndActivated))); if ((eventTimeline._fkProfileEndActivated) != 0) { dataWrapper.activateProfileFromEvent(eventTimeline._fkProfileEndActivated, false, \"\"); profileActivated = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6860/buggy-version/phoneProfilesPlus.src.main.java.sk.henrichg.phoneprofilesplus.Event.java", "BodyUseAPI": [], "Fixed commit": "fb457f120a66b0f8f777093a792c64fe1142600e", "Url": "https://api.github.com/repos/henrichg/PhoneProfilesPlus", "Date": "2015-04-23T09:58:00Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enderBookInstance.getTagCompound()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1274/buggy-version/src.main.java.com.lothrazar.samscontent.item.ItemEnderBook.java", "BodyUseAPI": [], "Fixed commit": "cfe016768fdc3338e485f657e93c4748c66dd954", "Url": "https://api.github.com/repos/PrinceOfAmber/SamsPowerups", "Date": "2015-04-29T20:20:41Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (rs == null) rs = statement.getResultSet();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7718/buggy-version/Recxx.src.main.java.org.recxx.source.DatabaseSource.java", "BodyUseAPI": [], "Fixed commit": "9519599c4aca53e8e778bea01edaaf2026b92165", "Url": "https://api.github.com/repos/Rexxz/Recxx", "Date": "2014-06-04T08:40:42Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((select.getFields().size()) > 0) { setFields(select.getFields()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9175/buggy-version/src.main.java.org.nlpcn.es4sql.query.AggregationQueryAction.java", "BodyUseAPI": ["org.nlpcn.es4sql.query.AggregationQueryAction.setFields(select.getFields())", "org.nlpcn.es4sql.domain.Select.getFields()"], "Fixed commit": "5fe2b36d19eeeb601a8781d9c5a7c189bd80e671", "Url": "https://api.github.com/repos/NLPchina/elasticsearch-sql", "Date": "2017-08-10T15:53:11Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["camelContext.getClassResolver().resolveClass(actualSchema.getFullName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (clazz != null) { classLoader = clazz.getClassLoader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8498/buggy-version/components.camel-avro.src.main.java.org.apache.camel.dataformat.avro.AvroDataFormat.java", "BodyUseAPI": ["java.lang.Class<?>.getClassLoader()"], "Fixed commit": "7bcfa8c3baf2a8a5a61ea58fe7fe0a1d577fc540", "Url": "https://api.github.com/repos/apache/camel", "Date": "2016-09-01T07:36:04Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hp.hpl.jena.rdf.model.RDFNode.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (result.contains(\"^^\")) result = result.split(\"\\\\^\\\\^\")[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/121/buggy-version/linda.src.main.java.de.unibonn.iai.eis.linda.helper.SPARQLHandler.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "7bffe5b27042a2eb750ab153acb817719ee89a20", "Url": "https://api.github.com/repos/LinDA-tools/RDF2Any", "Date": "2014-12-02T09:26:33Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (formValue.isFile()) { return formValue.getFile().length(); }else { return formValue.getValue().length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4212/buggy-version/servlet.src.main.java.io.undertow.servlet.spec.PartImpl.java", "BodyUseAPI": ["FormData.FormValue.getValue()", "formValue.getFile().length()", "formValue.getValue().length()", "FormData.FormValue.getFile()"], "Fixed commit": "c50c7a155acf2cd88a8c213422e66e33a7bd7104", "Url": "https://api.github.com/repos/darranl/undertow", "Date": "2013-06-18T00:23:20Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (add(e)) { result = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1671/buggy-version/src.ru.ifmo.ctddev.pyankova.task3.Bag.java", "BodyUseAPI": [], "Fixed commit": "fbf66b7332d4dc04527666bf971d618b51fd2b80", "Url": "https://api.github.com/repos/yulya3102/JavaAdvanced", "Date": "2013-04-24T19:28:10Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sherlockEntryMode) != null) { if (start == end) { if ((sherlockActionMode) != null) { sherlockActionMode.finish(); sherlockActionMode = null; } }else { showSherlockEntryMode(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5662/buggy-version/src.com.commonsware.cwac.richedit.RichEditText.java", "BodyUseAPI": [], "Fixed commit": "8d6ce99f73426e8cdc1428c107204543446a6a06", "Url": "https://api.github.com/repos/commonsguy/cwac-richedit", "Date": "2012-04-23T20:40:40Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ua.softserveinc.tc.service.ChildService.findById(long)", "ua.softserveinc.tc.service.UserService.getUserByEmail(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(kidToEdit.getParentId().equals(current))) { throw new org.springframework.security.access.AccessDeniedException(\"You do not have access to this page\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5312/buggy-version/src.main.java.ua.softserveinc.tc.controller.EditMyKidPageController.java", "BodyUseAPI": [], "Fixed commit": "992d038fd2331879543b95476f1149187e853b47", "Url": "https://api.github.com/repos/koldovsky/kids-room", "Date": "2016-05-18T14:13:08Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((elt.getAnnotation(org.grouplens.grapht.annotation.AllowUnqualifiedMatch.class)) != null) { error(elt, \"alias annotation has @AllowUnqualifiedMatch (should be on alias target)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4807/buggy-version/src.main.java.org.grouplens.grapht.annotation.AnnotationValidator.java", "BodyUseAPI": ["org.grouplens.grapht.annotation.AnnotationValidator.error(javax.lang.model.element.Element,java.lang.String)"], "Fixed commit": "da078da96bbf9e9551cf7689c0f439438b2344ef", "Url": "https://api.github.com/repos/elehack/grapht", "Date": "2014-10-20T18:51:19Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pager) != null) return adapter.getArtist(pager.getCurrentItem()).getId(); else return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4028/buggy-version/app.src.main.java.ru.yandex.yamblz.ui.fragments.ViewPagerFragment.java", "BodyUseAPI": [], "Fixed commit": "5df7aa1f6785c93657b8f276962c703d733eae2d", "Url": "https://api.github.com/repos/Tayrinn/fragments", "Date": "2016-08-09T19:37:56Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (cursor != null) { if ((cursor.getCount()) > 0) { cursor.close(); return; } cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4639/buggy-version/app.src.main.java.com.ucsd.chenyu.dictionary.Database.java", "BodyUseAPI": ["android.database.Cursor.close()", "android.database.Cursor.getCount()", "android.database.Cursor.close()"], "Fixed commit": "12902a23f64052dbe17c859ee9eb3816de15e03a", "Url": "https://api.github.com/repos/huang-chenyu/Android-GREDictionary", "Date": "2017-03-08T22:10:11Z"},
{"Line": "=>921", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kylin.cube.CubeInstance.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(isITTestCube(cubeName))) checkState(cubeDesc.getName().equals(cubeName), \"cube name '%s' must be same as descriptor name '%s', but it is not\", cubeName, cubeDesc.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7525/buggy-version/core-cube.src.main.java.org.apache.kylin.cube.CubeManager.java", "BodyUseAPI": ["cubeDesc.getName().equals(java.lang.String)", "org.apache.kylin.cube.CubeManager.checkState(cubeDesc.getName().equals(cubeName),java.lang.String,java.lang.String,cubeDesc.getName())"], "Fixed commit": "84a0726a562f1d2b7915795ec91eb83b44b15837", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-11-25T03:22:11Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de.vandermeer.asciithemes.TA_GridHelpers.isCellSeperator(frame.get(i).get(m))) { break; }else if (((frame.get(i).get(m)) instanceof java.lang.Character) && (!(((java.lang.Character) (frame.get(i).get(m))).equals(' ')))) { java.lang.Character[] charArray = org.apache.commons.lang3.ArrayUtils.toObject(pair.getLeft().toCharArray()); java.util.List<java.lang.Character> charArrayList = new java.util.ArrayList<java.lang.Character>(java.util.Arrays.asList(charArray)); frame.get(i).addAll(m, charArrayList); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4120/buggy-version/src.main.java.de.vandermeer.asciithemes.TA_GridHelpers.java", "BodyUseAPI": ["java.util.ArrayList<java.util.ArrayList<java.lang.Object>>.get(int)", "java.util.ArrayList<java.lang.Object>.addAll(int,java.util.List<java.lang.Character>)", "java.util.ArrayList<java.lang.Object>.get(int)", "java.util.ArrayList<java.lang.Object>.get(int)", "java.lang.Object.equals(char)", "java.util.ArrayList<java.util.ArrayList<java.lang.Object>>.get(int)", "java.util.ArrayList<java.util.ArrayList<java.lang.Object>>.get(int)"], "Fixed commit": "e5fafafd8d3fb945d916ebbf7c39cbbfc3584eea", "Url": "https://api.github.com/repos/andy176631/ascii-utf-themes", "Date": "2017-12-20T14:57:00Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de.vandermeer.asciithemes.TA_GridHelpers.isCellSeperator(frame.get(i).get(m))) { break; }else if (((frame.get(i).get(m)) instanceof java.lang.Character) && (!(((java.lang.Character) (frame.get(i).get(m))).equals(' ')))) { java.lang.Character[] charArray = org.apache.commons.lang3.ArrayUtils.toObject(pair.getRight().toCharArray()); java.util.List<java.lang.Character> charArrayList = new java.util.ArrayList<java.lang.Character>(java.util.Arrays.asList(charArray)); frame.get(i).addAll((m + 1), charArrayList); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4120/buggy-version/src.main.java.de.vandermeer.asciithemes.TA_GridHelpers.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Object>.get(int)", "java.util.ArrayList<java.lang.Object>.get(int)", "java.util.ArrayList<java.util.ArrayList<java.lang.Object>>.get(int)", "java.lang.Object.equals(char)", "java.util.ArrayList<java.util.ArrayList<java.lang.Object>>.get(int)", "java.util.ArrayList<java.util.ArrayList<java.lang.Object>>.get(int)", "java.util.ArrayList<java.lang.Object>.addAll(int,java.util.List<java.lang.Character>)"], "Fixed commit": "e5fafafd8d3fb945d916ebbf7c39cbbfc3584eea", "Url": "https://api.github.com/repos/andy176631/ascii-utf-themes", "Date": "2017-12-20T14:57:00Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.cuny.qc.speech.AuToBI.core.Region.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(src_contour.isEmpty(i))) { tgt_contour.set(i, java.lang.Math.log(src_contour.get(i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/453/buggy-version/src.edu.cuny.qc.speech.AuToBI.featureextractor.LogContourFeatureExtractor.java", "BodyUseAPI": ["java.lang.Math.log(src_contour.get(i))", "edu.cuny.qc.speech.AuToBI.core.Contour.set(int,double)", "edu.cuny.qc.speech.AuToBI.core.Contour.get(int)"], "Fixed commit": "1fdc6408577bbd8b586069bce9602dfdd9099218", "Url": "https://api.github.com/repos/AndrewRosenberg/AuToBI", "Date": "2011-02-27T23:20:16Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.refractions.udig.project.ui.ApplicationGIS.getActiveMap()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (activeMap == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4781/buggy-version/plugins.eu.udig.omsbox.src.eu.udig.omsbox.view.widgets.GuiTextField.java", "BodyUseAPI": [], "Fixed commit": "fdb907e8acd96dc5e06d3c0b8cbedc2a3a22e212", "Url": "https://api.github.com/repos/uDig/udig-platform", "Date": "2012-11-23T15:09:26Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.refractions.udig.project.IMap.getRenderManager()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (renderManager == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4781/buggy-version/plugins.eu.udig.omsbox.src.eu.udig.omsbox.view.widgets.GuiTextField.java", "BodyUseAPI": [], "Fixed commit": "fdb907e8acd96dc5e06d3c0b8cbedc2a3a22e212", "Url": "https://api.github.com/repos/uDig/udig-platform", "Date": "2012-11-23T15:09:26Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.refractions.udig.project.render.IRenderManager.getMapDisplay()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (viewportPane == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4781/buggy-version/plugins.eu.udig.omsbox.src.eu.udig.omsbox.view.widgets.GuiTextField.java", "BodyUseAPI": [], "Fixed commit": "fdb907e8acd96dc5e06d3c0b8cbedc2a3a22e212", "Url": "https://api.github.com/repos/uDig/udig-platform", "Date": "2012-11-23T15:09:26Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (parent != null) { p1HasReached = (parent.p1HasReached) || (((x1) == (mirroruniverse.g4.Node.p1ExitX)) && ((y1) == (mirroruniverse.g4.Node.p1ExitY))); p2HasReached = (parent.p2HasReached) || (((x2) == (mirroruniverse.g4.Node.p2ExitX)) && ((y2) == (mirroruniverse.g4.Node.p2ExitY))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6118/buggy-version/src.mirroruniverse.g4.Node.java", "BodyUseAPI": [], "Fixed commit": "939918b9fd501b3b6a0437e08b6f1a336f3596ff", "Url": "https://api.github.com/repos/jonnyboy205/MirrorUniverse", "Date": "2011-11-20T21:02:44Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Kitchen.getIngredientWithName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((m_ingredient.getSold()) > 0) { m_ingredient.setSold(((m_ingredient.getSold()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1891/buggy-version/Pizzeria.java", "BodyUseAPI": ["Ingredient.setSold(((m_ingredient.getSold()) - 1))", "Ingredient.getSold()"], "Fixed commit": "968ba70a5e43e648b32ba53bb318625f0f8c1a41", "Url": "https://api.github.com/repos/zulkarnainshah/Pizza-Ordering", "Date": "2017-04-22T05:48:50Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shared.ref.player) != null) { game.HUD.overlay = game.ImageHandler.load(((ref.player.nation.toString()) + \"/\"), \"overlay\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/617/buggy-version/EliteEngine.src.game.HUD.java", "BodyUseAPI": [], "Fixed commit": "5df1e4a94abfc5dd74a9701d3fb2778da421008a", "Url": "https://api.github.com/repos/Silverjust/Elite-Engine", "Date": "2015-06-07T14:22:29Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split.length) != 2) { throw new org.everit.jira.reporting.plugin.exception.JTRPException(\"jtrp.plugin.invalid.issue.key\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3661/buggy-version/src.main.java.org.everit.jira.reporting.plugin.query.AbstractReportQuery.java", "BodyUseAPI": [], "Fixed commit": "4828225fb80fa52c1067df08e557cc039e2c4d68", "Url": "https://api.github.com/repos/everit-org/jira-timetracker-plugin", "Date": "2016-06-09T14:17:24Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isEndReached())) { read(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1994/buggy-version/teavm-core.src.main.java.org.teavm.debugging.information.ExactMethodIterator.java", "BodyUseAPI": [], "Fixed commit": "8950121d011a32cdaf48d847d7dcd6db757fd6e9", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2015-01-20T14:45:20Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isEndReached())) { read(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1994/buggy-version/teavm-core.src.main.java.org.teavm.debugging.information.SourceLocationIterator.java", "BodyUseAPI": [], "Fixed commit": "8950121d011a32cdaf48d847d7dcd6db757fd6e9", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2015-01-20T14:45:20Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mGoogleApiClient.isConnected()) { LocationServices.FusedLocationApi.removeLocationUpdates(mGoogleApiClient, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3322/buggy-version/app.src.main.java.de.bahnhoefe.deutschlands.bahnhofsfotos.MapsActivity.java", "BodyUseAPI": ["LocationServices.FusedLocationApi.removeLocationUpdates(com.google.android.gms.common.api.GoogleApiClient,de.bahnhoefe.deutschlands.bahnhofsfotos.MapsActivity)"], "Fixed commit": "e84031e685fd8694bd3672c11a073bf32c0e091a", "Url": "https://api.github.com/repos/pelzvieh/Bahnhofsfotos", "Date": "2017-02-15T09:28:45Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((format) != null) { if ((value) != null) { formated = formatOutput(format, value); return formated; } return null; }else { formated = value.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7158/buggy-version/chemistryPdf.src.main.java.com.tccrt.chemistryPdf.model.Atom.java", "BodyUseAPI": [], "Fixed commit": "00be5f19d896d50a4b85581e9ec6eebaed2c184b", "Url": "https://api.github.com/repos/borisk22/chemistryPDF", "Date": "2014-07-29T22:32:13Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lombok.eclipse.EclipseNode.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((field.modifiers) & (org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants.AccStatic)) == 0) { field.modifiers |= lombok.eclipse.handlers.EclipseHandlerUtil.EclipseHandlerUtil.toEclipseModifier(level); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5501/buggy-version/src.core.lombok.eclipse.handlers.HandleFieldDefaults.java", "BodyUseAPI": [], "Fixed commit": "0727c8bfd305408074d908dc4f8c31c0bff54789", "Url": "https://api.github.com/repos/mebigfatguy/lombok", "Date": "2016-12-05T21:23:39Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasAnnotationAndDeleteIfNeccessary(lombok.experimental.PackagePrivate.class, fieldNode))) { if (((field.mods.flags) & (com.sun.tools.javac.code.Flags.STATIC)) == 0) { field.mods.flags |= toJavacModifier(level); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5501/buggy-version/src.core.lombok.javac.handlers.HandleFieldDefaults.java", "BodyUseAPI": [], "Fixed commit": "0727c8bfd305408074d908dc4f8c31c0bff54789", "Url": "https://api.github.com/repos/mebigfatguy/lombok", "Date": "2016-12-05T21:23:39Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.upc.eetac.dsa.walka.User.getId()", "securityContext.getUserPrincipal().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (iduserTodelete.equals(userid)) throw new edu.upc.eetac.dsa.walka.ForbiddenException(\"No puedes eliminarte si eres el creador\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2473/buggy-version/service.src.main.java.edu.upc.eetac.dsa.walka.EventResource.java", "BodyUseAPI": [], "Fixed commit": "481c4a8022b6c4f84e939bdb924717bac3c6e930", "Url": "https://api.github.com/repos/dsaqt1516g3/walka-project", "Date": "2016-01-18T23:51:10Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["securityContext.getUserPrincipal().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userid.equals(user.getId())) throw new edu.upc.eetac.dsa.walka.ForbiddenException(\"No puede salir del grupo si eres el creador\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2473/buggy-version/service.src.main.java.edu.upc.eetac.dsa.walka.GroupResource.java", "BodyUseAPI": [], "Fixed commit": "481c4a8022b6c4f84e939bdb924717bac3c6e930", "Url": "https://api.github.com/repos/dsaqt1516g3/walka-project", "Date": "2016-01-18T23:51:10Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inURL.indexOf(\"?\")) >= 1) { inURL.substring(0, inURL.indexOf(\"?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5098/buggy-version/app.src.main.java.org.lenchan139.twitterhandler.MainActivity.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "8bfd54707e8e17ca6201978c6b236c18f789e0f2", "Url": "https://api.github.com/repos/lenchan139/TwitterHandler", "Date": "2017-04-15T10:17:39Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ebayauction != null) { com.jars.shopping.ProductList.ProductsListServlet.LOGGER.info(com.jars.shopping.ProductList.ProductsListServlet.PRODUCTSSERVLET, \"Je\u017celi istnieje kategoria dla Ebay - pobierz list\u0119 produkt\u00f3w\"); java.util.List<com.jars.shopping.ProductList.Products> translatedWordsEbay = serviceEbay.translate(ebayauction); req.setAttribute(\"translatedWordsEbay\", translatedWordsEbay); }else if (allegroauction != null) { com.jars.shopping.ProductList.ProductsListServlet.LOGGER.info(com.jars.shopping.ProductList.ProductsListServlet.PRODUCTSSERVLET, \"Je\u017celi istnieje kategoria dla Allegro - pobierz list\u0119 produkt\u00f3w\"); java.util.List<com.jars.shopping.ProductList.Products> translatedWordsAllegro = serviceAllegro.translate(allegroauction); req.setAttribute(\"translatedWordsAllegro\", translatedWordsAllegro); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2842/buggy-version/src.main.java.com.jars.shopping.ProductList.ProductsListServlet.java", "BodyUseAPI": ["com.jars.shopping.ProductList.ProductsEbayService.translate(java.lang.String)"], "Fixed commit": "61c2e8b7bbc0cda909c9f2b2a0d41c7ee65ba057", "Url": "https://api.github.com/repos/infoshareacademy/jjdz2-shopping", "Date": "2016-12-14T21:32:09Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jars.shopping.LogowanieDoSystemu.SessionData.SessionData.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userName == null) { userName = \"default_user\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2842/buggy-version/src.main.java.com.jars.shopping.ProductList.ProductsListServlet.java", "BodyUseAPI": [], "Fixed commit": "61c2e8b7bbc0cda909c9f2b2a0d41c7ee65ba057", "Url": "https://api.github.com/repos/infoshareacademy/jjdz2-shopping", "Date": "2016-12-14T21:32:09Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.browserName.toLowerCase().equals(\"ie\")) { try { java.lang.Runtime.getRuntime().exec(\"taskkill /F /IM IEDriverServer.exe\"); } catch (java.io.IOException e) { java.lang.System.out.println(\"+--------------------------------------------+\"); java.lang.System.out.println(\"| Problem in closing the IE driver object... |\"); java.lang.System.out.println(\"+--------------------------------------------+\"); e.printStackTrace(); } }else { this.driver.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6175/buggy-version/src.org.nng.automation.utils.Driver.java", "BodyUseAPI": [], "Fixed commit": "048437668559d8082fa6492603a666bff200a73e", "Url": "https://api.github.com/repos/nityanarayan44/JavaUtils", "Date": "2017-11-22T06:34:42Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.browserName.toLowerCase().equals(\"ie\")) { try { java.lang.Runtime.getRuntime().exec(\"taskkill /F /IM IEDriverServer.exe\"); } catch (java.io.IOException e) { java.lang.System.out.println(\"+--------------------------------------------+\"); java.lang.System.out.println(\"| Problem in Quiting the IE driver object... |\"); java.lang.System.out.println(\"+--------------------------------------------+\"); e.printStackTrace(); } }else { this.driver.quit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6175/buggy-version/src.org.nng.automation.utils.Driver.java", "BodyUseAPI": [], "Fixed commit": "048437668559d8082fa6492603a666bff200a73e", "Url": "https://api.github.com/repos/nityanarayan44/JavaUtils", "Date": "2017-11-22T06:34:42Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { try { file.createNewFile(); } catch (java.io.IOException e) { android.util.Log.e(this.getClass().getSimpleName(), \"Error Create new file\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4461/buggy-version/MobileOrg.src.main.java.com.matburt.mobileorg.Synchronizers.SDCardSynchronizer.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "177b56589695597e4e25dd0b0aa5e4bdbfe94e15", "Url": "https://api.github.com/repos/biaji/mobileorg-android", "Date": "2015-07-08T13:52:01Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.core.MultivaluedMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (lstBaseUri != null) { baseURI = lstBaseUri.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/782/buggy-version/luzzu-communications.src.main.java.de.unibonn.iai.eis.luzzu.communications.resources.QualityResource.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "dafc9212d4c89bc9bb236c83e265605baf8c5d9a", "Url": "https://api.github.com/repos/diachron/Luzzu", "Date": "2015-05-12T13:55:37Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.view.View>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (view.equals(pickedView)) { mCurrentAnswer = mAnswers[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6299/buggy-version/app.src.main.java.com.example.joshua.quiz.Fragment.QuizQuestionFragment.java", "BodyUseAPI": [], "Fixed commit": "ba820a7258b43e4c3b1bc4476234fba1b66cd384", "Url": "https://api.github.com/repos/jjerror/quiz", "Date": "2015-04-10T19:15:26Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(totalString)) { return java.lang.Double.NaN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1234/buggy-version/org.dawnsci.common.widgets.src.org.dawnsci.common.widgets.decorator.BoundsDecorator.java", "BodyUseAPI": [], "Fixed commit": "41af21674b0217cc59cb21bcaf7c077c9c68c1ca", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2013-07-09T14:59:07Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (count == 0) { this.positivePercentage = 0; this.neutralPercentage = 0; this.negativePercentage = 0; }else { this.positivePercentage = com.seeworld.api.domain.valueobject.UserReviewInsights.round((((float) (positiveCount)) / count), com.seeworld.api.domain.valueobject.UserReviewInsights.SECOND_DECIMAL_PLACE); this.negativePercentage = com.seeworld.api.domain.valueobject.UserReviewInsights.round((((float) (negativeCount)) / count), com.seeworld.api.domain.valueobject.UserReviewInsights.SECOND_DECIMAL_PLACE); this.neutralPercentage = com.seeworld.api.domain.valueobject.UserReviewInsights.round((((float) (neutralCount)) / count), com.seeworld.api.domain.valueobject.UserReviewInsights.SECOND_DECIMAL_PLACE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8972/buggy-version/src.main.java.com.seeworld.api.domain.valueobject.UserReviewInsights.java", "BodyUseAPI": [], "Fixed commit": "e07a405c8cb30c25fbc3291d44f3f54dee2142ab", "Url": "https://api.github.com/repos/fabulousdj/seeworld-api", "Date": "2017-12-03T01:42:19Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (authorized) { if ((profile.getImplicitEncrypted()) != null) { for (int i = 0; i < (profile.getImplicitEncrypted().size()); i++) { authorized = this.checkVisibility(provider, profile.getImplicitEncrypted().get(i), \"Encrypted\"); if (!authorized) return false; } }else authorized = true; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2411/buggy-version/src.main.java.AuthorizationModel.AuthorizationModel.java", "BodyUseAPI": [], "Fixed commit": "71681f189d0f34ea59c603f2ad8266a5c7d438ea", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-14T14:42:49Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((profile.getVisiblePlaintext()) != null) { for (int i = 0; i < (profile.getVisiblePlaintext().size()); i++) { authorized = this.checkVisibility(provider, profile.getVisiblePlaintext().get(i), \"Plaintext\"); if (!authorized) return false; } }else authorized = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2411/buggy-version/src.main.java.AuthorizationModel.AuthorizationModel.java", "BodyUseAPI": ["RelationProfileTreeBuilder.RelationProfile.getVisiblePlaintext()", "AuthorizationModel.AuthorizationModel.checkVisibility(ConfigurationParser.Provider,profile.getVisiblePlaintext().get(i),java.lang.String)", "profile.getVisiblePlaintext().size()", "profile.getVisiblePlaintext().get(int)", "RelationProfileTreeBuilder.RelationProfile.getVisiblePlaintext()"], "Fixed commit": "71681f189d0f34ea59c603f2ad8266a5c7d438ea", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-14T14:42:49Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (authorized) { if ((profile.getImplicitPlaintext()) != null) { for (int i = 0; i < (profile.getImplicitPlaintext().size()); i++) { authorized = this.checkVisibility(provider, profile.getImplicitPlaintext().get(i), \"Plaintext\"); if (!authorized) return false; } }else authorized = true; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2411/buggy-version/src.main.java.AuthorizationModel.AuthorizationModel.java", "BodyUseAPI": [], "Fixed commit": "71681f189d0f34ea59c603f2ad8266a5c7d438ea", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-14T14:42:49Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (authorized) { if ((profile.getEquivalenceSets()) != null) { for (int i = 0; i < (profile.getEquivalenceSets().size()); i++) { boolean plain1 = this.checkVisibility(provider, profile.getEquivalenceSets().get(i).get(0), \"Plaintext\"); boolean plain2 = this.checkVisibility(provider, profile.getEquivalenceSets().get(i).get(1), \"Plaintext\"); boolean enc1 = this.checkVisibility(provider, profile.getEquivalenceSets().get(i).get(0), \"Encrypted\"); boolean enc2 = this.checkVisibility(provider, profile.getEquivalenceSets().get(i).get(1), \"Encrypted\"); if ((!(plain1 && plain2)) && (!(enc1 && enc2))) return false; } }else authorized = true; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2411/buggy-version/src.main.java.AuthorizationModel.AuthorizationModel.java", "BodyUseAPI": [], "Fixed commit": "71681f189d0f34ea59c603f2ad8266a5c7d438ea", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-14T14:42:49Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count) > 5) rLayout.removeView(binding.addFAB);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5148/buggy-version/app.src.main.java.mattoncino.pollo.MultiOptPollActivity.java", "BodyUseAPI": [], "Fixed commit": "b1712745a752632559d7d41ca6f0d1dcb8bd1311", "Url": "https://api.github.com/repos/beratx/Pollo", "Date": "2017-06-26T21:47:12Z"},
{"Line": "=>2026", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.record.ORecord.getIdentity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((txEntry.type) == (com.orientechnologies.orient.core.db.record.ORecordOperation.UPDATED)) && (rid.isNew())) txEntry.type = com.orientechnologies.orient.core.db.record.ORecordOperation.CREATED;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2012/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage.java", "BodyUseAPI": [], "Fixed commit": "0988a459796c5fecb4916fb55350e214073726fd", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-01-20T12:56:01Z"},
{"Line": "=>2783", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.laytonsmith.core.constructs.CArray) (args[0])).isAssociative()) { throw new com.laytonsmith.core.exceptions.CRE.CREIllegalArgumentException((\"Associative arrays may not be used as keys in \" + (getName())), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8060/buggy-version/src.main.java.com.laytonsmith.core.functions.DataHandling.java", "BodyUseAPI": [], "Fixed commit": "4f65044980a4b3a45b5bf0475631cce1692b1630", "Url": "https://api.github.com/repos/EntryPointKR/CommandHelper", "Date": "2017-06-02T20:30:07Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mClient) == null) { mClient = new com.bluet.utils.BluetoothClient(this); mClient.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3687/buggy-version/src.com.bluet.massistant.HomeFragmentActivity.java", "BodyUseAPI": [], "Fixed commit": "ca206ed6db120630c9aa4c75e5abb84dff547daa", "Url": "https://api.github.com/repos/codinghappy/Assistant", "Date": "2016-05-16T15:03:53Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (assetBase == null) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7820/buggy-version/src.android.com.meteor.cordova.updater.AssetUriRemapper.java", "BodyUseAPI": [], "Fixed commit": "0dd6ee797bb99adcbfbe85388e480a073b13b23f", "Url": "https://api.github.com/repos/meteor/com.meteor.cordova-update", "Date": "2014-09-26T18:44:03Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(surface.objects.isEmpty())) { return surface.objects.get(((surface.objects.size()) - 1)).getGameObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2534/buggy-version/src.mansionBandit.gameView.SideWallStrategy.java", "BodyUseAPI": ["surface.objects.get(((surface.objects.size()) - 1)).getGameObject()", "surface.objects.get(((surface.objects.size()) - 1))", "surface.objects.size()"], "Fixed commit": "67da34287c52a08fe386e253187bbe465919ce28", "Url": "https://api.github.com/repos/LiamDeGrey/Mansion-Bandit", "Date": "2014-10-14T23:06:04Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == (this)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3205/buggy-version/src.rhsu.board.AbstractBoard.java", "BodyUseAPI": [], "Fixed commit": "7aa80257ead7014d74aadd810623a3cf5cfe5425", "Url": "https://api.github.com/repos/rhsu/Board", "Date": "2013-12-18T19:18:16Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (content != null) java.lang.System.arraycopy(content, 0, totalPayload, pieceIndex.length, content.length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8484/buggy-version/src.main.java.edu.ufl.cise.p2p.message.Piece.java", "BodyUseAPI": ["java.lang.System.arraycopy(byte[],int,byte[],int,int)"], "Fixed commit": "5cdd5c49ae511936288c3c28fbd3d3d61466bf8b", "Url": "https://api.github.com/repos/ajinkya2709/Peer2Peer", "Date": "2017-04-11T01:06:10Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teamunify.i18n.webapp.ServletLocaleFilter.getLocale(javax.servlet.ServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (l == null) l = getDefaultLocale();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5714/buggy-version/src.main.java.com.teamunify.i18n.webapp.ServletLocaleFilter.java", "BodyUseAPI": [], "Fixed commit": "2d6dbec6f7481e67f3a0cb083dd71f48108fe3f7", "Url": "https://api.github.com/repos/awkay/easy-i18n", "Date": "2014-02-03T23:25:16Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.annenkov.translator.manager.NetworkManager.getRightLanguageReduction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(me.annenkov.translator.manager.LanguagesManager.mLanguageReductions.containsKey(rightLanguageReduction))) return \"en\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6952/buggy-version/app.src.main.java.me.annenkov.translator.manager.LanguagesManager.java", "BodyUseAPI": [], "Fixed commit": "8a0fa33e6f6abd1e31ef52c81972493ac57489d4", "Url": "https://api.github.com/repos/Vakosta/Translator", "Date": "2017-04-16T18:32:08Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((activity.resumeDialog) == null) || (!(activity.resumeDialog.isShowing()))) { gameStateManager.startGame(activity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9101/buggy-version/android-application.ChineseCheckers.src.main.java.ca.brocku.chinesecheckers.GameActivity.java", "BodyUseAPI": ["ca.brocku.chinesecheckers.gamestate.GameStateManager.startGame(ca.brocku.chinesecheckers.GameActivity)"], "Fixed commit": "5e4d720ed777a53a4a6d8dd5131d4fadfe1a9745", "Url": "https://api.github.com/repos/kubasub/chinese-checkers", "Date": "2014-03-17T02:52:56Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (markIt.hasNext()) { markIt.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7567/buggy-version/stratio-deserializers.stratio-xmlxpath-deserializer.src.main.java.com.stratio.ingestion.deserializer.xmlxpath.XmlXpathDeserializer.java", "BodyUseAPI": ["java.util.ListIterator<java.lang.String>.next()"], "Fixed commit": "7c62fa8d24b0e6deb9a8a6529990019ae1291c61", "Url": "https://api.github.com/repos/Stratio/stratio-ingestion", "Date": "2014-07-22T08:35:22Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentIt.hasNext()) { currentIt.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7567/buggy-version/stratio-deserializers.stratio-xmlxpath-deserializer.src.main.java.com.stratio.ingestion.deserializer.xmlxpath.XmlXpathDeserializer.java", "BodyUseAPI": ["java.util.ListIterator<java.lang.String>.next()"], "Fixed commit": "7c62fa8d24b0e6deb9a8a6529990019ae1291c61", "Url": "https://api.github.com/repos/Stratio/stratio-ingestion", "Date": "2014-07-22T08:35:22Z"},
{"Line": "=>591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(b.equals(pair.b))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8304/buggy-version/core.src.com.google.inject.spi.InjectionPoint.java", "BodyUseAPI": [], "Fixed commit": "9362d1c09b50350eb2ff8c3f523f2a5c2b7d75db", "Url": "https://api.github.com/repos/stephanenicolas/google-guice", "Date": "2014-02-06T04:36:30Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8304/buggy-version/core.src.com.google.inject.spi.InjectionPoint.java", "BodyUseAPI": [], "Fixed commit": "9362d1c09b50350eb2ff8c3f523f2a5c2b7d75db", "Url": "https://api.github.com/repos/stephanenicolas/google-guice", "Date": "2014-02-06T04:36:30Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 3) { gov.nih.nci.evs.cdisc.GenerateCDISC.gTermSource = args[2]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5607/buggy-version/GenerateCDISC.src.gov.nih.nci.evs.cdisc.GenerateCDISC.java", "BodyUseAPI": [], "Fixed commit": "07868ff54ef00b9cc386c1e0d7e0792fc4801ea7", "Url": "https://api.github.com/repos/safrant/ops-owl-applications", "Date": "2017-12-19T00:04:36Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFirstRun)) requestGPSPermission();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3878/buggy-version/app.src.main.java.kg.kloop.android.redbutton.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c7a24693061e17f6f46d3d056478f3fad989cfec", "Url": "https://api.github.com/repos/AlexWalker28/REDbutton", "Date": "2017-07-24T10:57:18Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<uw.star.rts.artifact.ClassEntity, java.util.List<java.lang.String>>.get(uw.star.rts.artifact.ClassEntity)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (eDependent.isEmpty()) { log.debug((\"no class dependent on \" + (ce.getClassName()))); }else { ncc = ncc.transform(ce, eDependent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8518/buggy-version/RTS-T25.src.uw.star.rts.technique.ClassFirewall_Extended.java", "BodyUseAPI": ["uw.star.rts.artifact.CodeCoverage<uw.star.rts.artifact.ClassEntity>.transform(uw.star.rts.artifact.ClassEntity,java.util.List<java.lang.String>)"], "Fixed commit": "4c0050358fc13d2b4d6a5770f3bacb8bed30691a", "Url": "https://api.github.com/repos/javaelk/RTS-T25", "Date": "2013-05-07T15:24:27Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (match.isFFA()) return (com.martinbrook.tesseractuhc.TesseractUHC.ERROR_COLOR) + \"This is not a team match. Use /players to list players\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8651/buggy-version/src.com.martinbrook.tesseractuhc.TesseractUHC.java", "BodyUseAPI": [], "Fixed commit": "b89e5750472e90bc70f372d8653e4ffa095507d3", "Url": "https://api.github.com/repos/itsmartin/TesseractUHC", "Date": "2012-11-21T15:31:50Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result != null) { return (((org.fusesource.restygwt.rebind.JsonEncoderDecoderInstanceLocator.JSON_NESTED_ENCODER_DECODER_CLASS) + \".collectionEncoderDecoder( \") + result) + \" )\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7786/buggy-version/restygwt.src.main.java.org.fusesource.restygwt.rebind.JsonEncoderDecoderInstanceLocator.java", "BodyUseAPI": [], "Fixed commit": "8777bd5286ab983f5e37fd8da9a471a48fedb5d7", "Url": "https://api.github.com/repos/BiovistaInc/resty-gwt", "Date": "2014-08-27T09:03:30Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((order.getId()) != null) { try { currentStatus = findBy(order.getId()).getStatus(); } catch (javax.persistence.NoResultException e) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7218/buggy-version/src.main.java.com.krustyburger.order.backend.service.impl.OrderServiceImpl.java", "BodyUseAPI": ["com.krustyburger.order.backend.model.Order.getStatus()", "com.krustyburger.order.backend.model.Order.getId()", "com.krustyburger.order.backend.service.impl.OrderServiceImpl.findBy(order.getId())"], "Fixed commit": "1501f653741bb2ff16684e5b6eeb87ff8069ca0b", "Url": "https://api.github.com/repos/tmartinelli/order-backend", "Date": "2014-02-20T22:40:59Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.isRawValue()) { return value.asRawValue().stringValue(); }else { return value.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8849/buggy-version/msgpack-jackson.src.main.java.org.msgpack.jackson.dataformat.MessagePackParser.java", "BodyUseAPI": ["value.asRawValue().stringValue()", "org.msgpack.value.Value.toString()", "org.msgpack.value.Value.asRawValue()"], "Fixed commit": "5ba7366f1ef6f7d1733a546c2f9f1e837dd69ac6", "Url": "https://api.github.com/repos/xerial/msgpack-java", "Date": "2015-06-18T14:13:11Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_player) != null) { _player.pause(); updateActivePodcastPosition(); _player.stop(); _player = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4963/buggy-version/src.com.axelby.podax.PlayerService.java", "BodyUseAPI": [], "Fixed commit": "e3c5c60f9153932a4b0882e6ba7a2324f4a6bee8", "Url": "https://api.github.com/repos/f1ori/Podax", "Date": "2012-07-06T22:03:50Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) < index) { index = entry.getValue(); result = entry.getKey(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8384/buggy-version/src.main.java.hello.string.FindStr.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.Character, java.lang.Integer>.getValue()", "java.util.Map.Entry<java.lang.Character, java.lang.Integer>.getKey()"], "Fixed commit": "961eccb7adf7181ce330556b968fb89b9fdd40e1", "Url": "https://api.github.com/repos/JasonGuoGame/SAS.test", "Date": "2017-07-31T06:11:06Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8507/buggy-version/InterFON.app.src.main.java.com.interfon.android.internet.URLImageParser.java", "BodyUseAPI": [], "Fixed commit": "63803773e23103878b98d5bc4de626e63215c2c4", "Url": "https://api.github.com/repos/rristovic/casopisInterFON", "Date": "2017-06-27T17:32:32Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cast.size()) == 0) castListView.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5291/buggy-version/app.src.main.java.kat.android.com.movielist.fragments.MovieDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "5ca382e90c0c153760f17cf676f5c69f13566291", "Url": "https://api.github.com/repos/DmytroKataryna/MovieList", "Date": "2015-03-17T21:05:39Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["projectInfo.getAppInfos().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (isCallEclipsePlugin(appInfo)) { com.photon.phresco.util.Utility.executeCommand((((MVN_COMMAND) + (STR_BLANK_SPACE)) + (MVN_GOAL_ECLIPSE)), (((com.photon.phresco.util.Utility.getProjectHome()) + (java.io.File.separator)) + (appInfo.getAppDirName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3689/buggy-version/phresco-framework-impl.src.main.java.com.photon.phresco.framework.impl.ProjectManagerImpl.java", "BodyUseAPI": ["com.photon.phresco.util.Utility.executeCommand((((MVN_COMMAND) + (STR_BLANK_SPACE)) + (MVN_GOAL_ECLIPSE)),(((com.photon.phresco.util.Utility.getProjectHome()) + (java.io.File.separator)) + (appInfo.getAppDirName())))", "com.photon.phresco.commons.model.ApplicationInfo.getAppDirName()"], "Fixed commit": "7d3c0a244cfc9d12dd3290219f4585e4e2586efb", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-03-29T07:56:47Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getModel().getCommandNumbers()) == 0) exit(); else closeViews();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1885/buggy-version/druzy.jmita.SendTo.java", "BodyUseAPI": [], "Fixed commit": "f23de9c8de6c48d8d8c5f799daa60fb3d41ad1d9", "Url": "https://api.github.com/repos/druzy/jmita2", "Date": "2015-11-07T10:27:52Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.fromBeginning) { msgs = consumer.fetchMessages(partition, emittingOffset); }else { msgs = consumer.fetchMessages(partition, ((emittingOffset) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7749/buggy-version/jstorm-utility.jstorm-kafka.src.main.java.com.alibaba.jstorm.kafka.PartitionConsumer.java", "BodyUseAPI": [], "Fixed commit": "120ec4314b64c5cff2d11f4c6eed9c58a351e916", "Url": "https://api.github.com/repos/cocofree/jstorm", "Date": "2016-06-02T13:13:29Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((subjectName != null) && (subjectName.equalsIgnoreCase(org.ednovo.gooru.client.mvp.home.library.LibraryLessonUc.STANDARDS))) { setLessonData(lessonDo, null, lessonDo.getCollection(), null, isLessonHighlighted, lessonNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/57/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.home.library.LibraryLessonUc.java", "BodyUseAPI": [], "Fixed commit": "97019beaf9777a0dd225891a98ac91ed633bfefd", "Url": "https://api.github.com/repos/nutan-gooru/Gooru-Web", "Date": "2014-08-02T07:14:23Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.tum.in.dbs.project.wis.ConfigurationParser.parseConfiguration(java.io.File,char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((websites.size()) > amountCalls) amountCalls = websites.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5814/buggy-version/source.WISBenchmarkClient.src.de.tum.in.dbs.project.wis.Main.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()"], "Fixed commit": "039f5bfefb5d3e3f6029c3710b4d70d712914671", "Url": "https://api.github.com/repos/marcusvetter/WIS", "Date": "2012-12-27T09:55:10Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((localeLanguage) == null) || ((localeCountry) == null)) { final java.util.Locale locale = java.util.Locale.getDefault(); if ((localeLanguage) == null) com.orientechnologies.common.log.OLogManager.instance().warn(this, ((\"Information about storage locale is undefined (language is undefined) default locale \" + locale) + \" will be used\")); if ((localeCountry) == null) com.orientechnologies.common.log.OLogManager.instance().warn(this, ((\"Information about storage locale is undefined (country is undefined) default locale \" + locale) + \" will be used\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9214/buggy-version/core.src.main.java.com.orientechnologies.orient.core.config.OStorageConfiguration.java", "BodyUseAPI": [], "Fixed commit": "8bfc633f28a3df912d6c5fd43908fd849504521c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-06-27T14:58:38Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((restfulTransletRuleMap) != null) { for (com.aspectran.core.context.rule.TransletRule transletRule : restfulTransletRuleMap) { com.aspectran.core.util.wildcard.WildcardPattern namePattern = transletRule.getNamePattern(); if (namePattern.matches(restfulTransletName)) return transletRule; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5084/buggy-version/src.main.java.com.aspectran.core.context.translet.TransletRuleRegistry.java", "BodyUseAPI": [], "Fixed commit": "d62fcf756442ae6026a3c8dee4c5b31db53310f6", "Url": "https://api.github.com/repos/aspectran/aspectran", "Date": "2015-10-14T16:40:19Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter.getCount()) <= position) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/803/buggy-version/android-app.src.com.github.jobs.ui.JobListFragment.java", "BodyUseAPI": [], "Fixed commit": "969dabb930c626240b76cb4c97c85770424f445b", "Url": "https://api.github.com/repos/casidiablo/github-jobs", "Date": "2012-10-15T22:53:18Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(baseMongoEntity.getId())) { org.bson.types.ObjectId id = new org.bson.types.ObjectId(new java.util.Date()); baseMongoEntity.setId(id.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5506/buggy-version/src.main.java.tnmk.ln.MongoEventListener.java", "BodyUseAPI": ["tnmk.ln.app.common.entity.BaseMongoEntity.setId(id.toString())"], "Fixed commit": "e5ed736403f584f9d551729b19e562ea5de56b05", "Url": "https://api.github.com/repos/khoitnm/language-note", "Date": "2017-04-18T09:46:19Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((test.size()) > (maps.size())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8339/buggy-version/src.org.openscience.smsd.algorithm.vflib.VF2MCSHandler.java", "BodyUseAPI": [], "Fixed commit": "85331eb837c5ad2277ec229c8e5c93867c3a6610", "Url": "https://api.github.com/repos/asad/SMSD", "Date": "2011-11-01T09:36:19Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (command.startsWith(\"e\")) { java.lang.String itemName = command.substring(1); player.equipItem(itemName); }else if (command.startsWith(\"de\")) { java.lang.String itemName = command.substring(2); player.dequipItem(itemName); }else if (command.equals(\"debug\")) { new com.jadventure.game.menus.DebugMenu(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6491/buggy-version/src.main.java.com.jadventure.game.CommandParser.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int)"], "Fixed commit": "644bb6901ba64bf5a99b486305e3c8f12840eb64", "Url": "https://api.github.com/repos/Progether/JAdventure", "Date": "2014-01-03T23:29:00Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(omelet.driver.DriverManager.getBrowserConf().getDataSource().equals(DataSource.XmlSuiteData.toString()))) { if ((omelet.driver.DriverManager.getDriver()) != null) { cleanupDriver(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8098/buggy-version/omelet-core.src.main.java.omelet.driver.DriverInitialization.java", "BodyUseAPI": [], "Fixed commit": "5bad74fd0c6502ac0253e923101aeb69adddf9e8", "Url": "https://api.github.com/repos/springernature/omelet", "Date": "2015-10-13T14:51:20Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.equals(\"Success\")) { if (!(reviewDialogDone)) { com.buyhatke.autocart.AutoCart.sendUpdateToServer(\"SUCCESS\", variansts.get(com.buyhatke.autocart.Activity.WebViewActivity.clickID)); new android.os.Handler().postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { com.buyhatke.autocart.Activity.MainActivity.showReviewDialog(com.buyhatke.autocart.Activity.WebViewActivity.this); } }, (5 * 1000)); reviewDialogDone = true; } }else { variansts.add(name.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/942/buggy-version/app.src.main.java.com.buyhatke.autocart.Activity.WebViewActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "0be32fe45269b6b2dd766d8b6da2d60b8aa468f9", "Url": "https://api.github.com/repos/AbhishekAtBuyhatke/AutoCart", "Date": "2017-11-15T19:53:39Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getNewMessage()) != null) { tvNewMessage.setText(t.getNewMessage()); }else { tvNewMessage.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/858/buggy-version/app.src.main.java.com.bulldojkee.asvicomtaskmanager.MainActivity.java", "BodyUseAPI": ["com.bulldojkee.asvicomtaskmanager.Task.getNewMessage()", "android.widget.TextView.setText(t.getNewMessage())"], "Fixed commit": "aa885f7867f397afc76379680fff9afd77b579e3", "Url": "https://api.github.com/repos/bulldojka/TaskManager", "Date": "2015-07-20T18:45:16Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params) != null) { for (java.lang.String param : params) { command.add(param); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6086/buggy-version/genepi-hadoop.src.genepi.hadoop.command.Command.java", "BodyUseAPI": [], "Fixed commit": "cab1b7610e7c8de23eed1b6402c61b56af627add", "Url": "https://api.github.com/repos/genepi/genepi-libs", "Date": "2014-09-19T10:25:00Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paths) != null) { resizePhotoGrid(paths.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7677/buggy-version/app.src.main.java.org.unicef.rapidreg.base.RecordPhotoAdapter.java", "BodyUseAPI": [], "Fixed commit": "f6facf8704bac991cf8440ffa4a2a7996e0df223", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2016-07-20T08:06:24Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((photoGrid) == null) || ((photoGridLayout) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7677/buggy-version/app.src.main.java.org.unicef.rapidreg.base.RecordPhotoAdapter.java", "BodyUseAPI": [], "Fixed commit": "f6facf8704bac991cf8440ffa4a2a7996e0df223", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2016-07-20T08:06:24Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mjc.gc.DTYPE.getPointedType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (apt_type == null) { return true; }else if (type.equals(apt_type)) { return true; }else { if (((type) instanceof mjc.gc.CLASSE) & (apt_type instanceof mjc.gc.CLASSE)) { return ((mjc.gc.CLASSE) (type)).isASuperClass(((mjc.gc.CLASSE) (apt_type))); }else { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2616/buggy-version/src.mjc.gc.POINTEUR.java", "BodyUseAPI": ["mjc.gc.DTYPE.equals(mjc.gc.DTYPE)"], "Fixed commit": "e65fda22094165bfa6c24700a9428ad7a8765ac7", "Url": "https://api.github.com/repos/tuxerr/MJC", "Date": "2011-12-31T17:48:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Robot.driveTrain.joystickAllowed) { Robot.driveTrain.driveArcade(translate, (-(rotate))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9271/buggy-version/src.org.robockets.stronghold.robot.drivetrain.Joyride.java", "BodyUseAPI": [], "Fixed commit": "f6fcb5ac9c7e30ed4cfa8f90f2ecc3528c0512f2", "Url": "https://api.github.com/repos/Team4761/2016-Robot-Code", "Date": "2016-04-25T23:15:46Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (_params)) _params = new com.greenlaw110.rythm.template.ParameterList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7611/buggy-version/src.main.java.com.greenlaw110.rythm.template.JavaTagBase.java", "BodyUseAPI": [], "Fixed commit": "8a7dd6c305b1d773f0378fdc94efc40aa911f89d", "Url": "https://api.github.com/repos/greenlaw110/Rythm", "Date": "2012-06-12T12:53:48Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (audioBuffer == null) { android.util.Log.d(com.mantz_it.rfanalyzer.Demodulator.LOGTAG, \"run: Audio buffer is null. skip this round...\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/715/buggy-version/app.src.main.java.com.mantz_it.rfanalyzer.Demodulator.java", "BodyUseAPI": [], "Fixed commit": "0fbb8347a51a19401f9c824ce706c4ae23420e70", "Url": "https://api.github.com/repos/demantz/RFAnalyzer", "Date": "2014-12-07T03:24:38Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osgl.util.ValueObject.Type.9.toString(org.osgl.util.ValueObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((string == null) || ((string.length()) == 0)) { return \"\\\"\\\"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4991/buggy-version/src.main.java.org.osgl.util.ValueObject.java", "BodyUseAPI": [], "Fixed commit": "454f60253e15345617bff75452d19d18e4107bff", "Url": "https://api.github.com/repos/osglworks/java-tool", "Date": "2016-05-03T03:40:42Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.nkozlov.server.handlers.HttpRequestHandler.logger.isTraceEnabled()) { cause.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/475/buggy-version/src.main.java.me.nkozlov.server.handlers.HttpRequestHandler.java", "BodyUseAPI": [], "Fixed commit": "83548de3d56faa0d18661d67ba4a45bf9708dd7d", "Url": "https://api.github.com/repos/NKozlov/test-netty-http-server", "Date": "2013-11-24T10:07:18Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.daoModels.Book.getStoriesChapterForNumber(currentPage.getStoriesChapter().getNumber())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (newChapter != null) { newPage = newChapter.getStoryPageForNumber(currentPage.getNumber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5198/buggy-version/app.app.src.main.java.utils.UWPreferenceDataManager.java", "BodyUseAPI": ["model.daoModels.StoriesChapter.getStoryPageForNumber(currentPage.getNumber())"], "Fixed commit": "a858378fa86ecf49cdb91db9728ba85f9c6bfebb", "Url": "https://api.github.com/repos/unfoldingWord-dev/uw-android", "Date": "2016-02-25T23:46:26Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (newPage == null) { newPage = newVersion.getBooks().get(0).getStoryChapters().get(0).getStoryPages().get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5198/buggy-version/app.app.src.main.java.utils.UWPreferenceDataManager.java", "BodyUseAPI": [], "Fixed commit": "a858378fa86ecf49cdb91db9728ba85f9c6bfebb", "Url": "https://api.github.com/repos/unfoldingWord-dev/uw-android", "Date": "2016-02-25T23:46:26Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["user.getPrefix().replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((s.length()) > 16) { s = s.substring(0, 15); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/515/buggy-version/PEXTabColors.src.com.ohqcraft.PEXTabColors.Pex.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "40e92bd1e4388aa504df1b7400dcc434ff4e5a26", "Url": "https://api.github.com/repos/xDukeLukex/PermissionsExTabColors", "Date": "2014-06-15T12:20:04Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zh.wang.android.apis.yweathergetter4a.WOEIDUtils.convertStringToDocument(android.content.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (woeidDoc == null) { return zh.wang.android.apis.yweathergetter4a.WOEIDUtils.WOEID_NOT_FOUND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6510/buggy-version/library_project.src.zh.wang.android.apis.yweathergetter4a.WOEIDUtils.java", "BodyUseAPI": [], "Fixed commit": "76a94fb48c591fc2e58a2fdd6db6eff210f26e50", "Url": "https://api.github.com/repos/zh-wang/YWeatherGetter4a", "Date": "2014-04-13T04:10:03Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zh.wang.android.apis.yweathergetter4a.WOEIDUtils.convertStringToDocument(android.content.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (woeidDoc == null) { return zh.wang.android.apis.yweathergetter4a.WOEIDUtils.WOEID_NOT_FOUND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6510/buggy-version/library_project.src.zh.wang.android.apis.yweathergetter4a.WOEIDUtils.java", "BodyUseAPI": [], "Fixed commit": "76a94fb48c591fc2e58a2fdd6db6eff210f26e50", "Url": "https://api.github.com/repos/zh-wang/YWeatherGetter4a", "Date": "2014-04-13T04:10:03Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(creatorRights.allowedToCreate(toCheck))) { throw new pl.allegro.tech.hermes.management.domain.PermissionDeniedException(\"You are not allowed to create subscriptions for this topic.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7655/buggy-version/hermes-management.src.main.java.pl.allegro.tech.hermes.management.domain.subscription.validator.SubscriptionValidator.java", "BodyUseAPI": [], "Fixed commit": "a282b66e747f3ec2abfde73ab5fc33ae1039838e", "Url": "https://api.github.com/repos/jakubdyszkiewicz/hermes", "Date": "2017-07-10T09:20:14Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (drawerLayout.isDrawerOpen(Gravity.RIGHT)) { drawerLayout.closeDrawer(Gravity.RIGHT); }else { if ((btnHome.getVisibility()) == (android.view.View.VISIBLE)) toHome(null); else finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9029/buggy-version/app.src.main.java.ir.rasen.charsoo.view.activity.ActivityMain.java", "BodyUseAPI": ["android.support.v4.widget.DrawerLayout.closeDrawer(Gravity.RIGHT)"], "Fixed commit": "8ab2758bcbfb7485866fa20187e3a30d0543a1f1", "Url": "https://api.github.com/repos/rasenir/charsoo", "Date": "2015-07-05T04:58:57Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentScreenState) != (calendrier.gui.UserInterface.VALUE_VIEWMONTH_SCREEN)) { addView(this); }else { viewMonth(this, currentMonth, currentYear); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9068/buggy-version/src.calendrier.gui.UserInterface.java", "BodyUseAPI": [], "Fixed commit": "9ce54ce3057605fe38c4339864ec670ede7ad9c4", "Url": "https://api.github.com/repos/cs2103aug2015-F11-4j/main", "Date": "2015-10-28T17:34:35Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentScreenState) != (calendrier.gui.UserInterface.VALUE_VIEWMONTH_SCREEN)) { addView(this); }else { viewMonth(this, currentMonth, currentYear); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9068/buggy-version/src.calendrier.gui.UserInterface.java", "BodyUseAPI": [], "Fixed commit": "9ce54ce3057605fe38c4339864ec670ede7ad9c4", "Url": "https://api.github.com/repos/cs2103aug2015-F11-4j/main", "Date": "2015-10-28T17:34:35Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentScreenState) != (calendrier.gui.UserInterface.VALUE_VIEWMONTH_SCREEN)) { addView(this); if ((eventSize) <= 8) { getPreviousPage(this); } }else { viewMonth(this, currentMonth, currentYear); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9068/buggy-version/src.calendrier.gui.UserInterface.java", "BodyUseAPI": [], "Fixed commit": "9ce54ce3057605fe38c4339864ec670ede7ad9c4", "Url": "https://api.github.com/repos/cs2103aug2015-F11-4j/main", "Date": "2015-10-28T17:34:35Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentScreenState) != (calendrier.gui.UserInterface.VALUE_VIEWMONTH_SCREEN)) { addView(this); }else { viewMonth(this, currentMonth, currentYear); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9068/buggy-version/src.calendrier.gui.UserInterface.java", "BodyUseAPI": [], "Fixed commit": "9ce54ce3057605fe38c4339864ec670ede7ad9c4", "Url": "https://api.github.com/repos/cs2103aug2015-F11-4j/main", "Date": "2015-10-28T17:34:35Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (len > 0) { for (; max < end;) { gp.addTerm(new org.ansj.domain.Term(java.lang.String.valueOf(chars[max]), max, org.ansj.domain.TermNatures.NULL)); max++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2903/buggy-version/src.main.java.org.ansj.splitWord.Analysis.java", "BodyUseAPI": [], "Fixed commit": "ccb2127f40f45c5f9bf2ca09e12f54b16af61deb", "Url": "https://api.github.com/repos/NLPchina/ansj_seg", "Date": "2017-01-24T15:52:00Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newMarginPX == oldMargin) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3984/buggy-version/sandcastle-android.app.src.main.java.com.subhan_nadeem.sandcastle.main.ToolbarController.java", "BodyUseAPI": [], "Fixed commit": "854e7b74ba98cb8f7bb31ca650de49bb9e00a7fd", "Url": "https://api.github.com/repos/subhan-nadeem/Sandcastle", "Date": "2017-10-21T20:38:34Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((reminder.length()) > 0) if (this.toAdd.getReminder().value.before(java.util.Calendar.getInstance())) throw new seedu.lifekeeper.commons.exceptions.IllegalValueException(seedu.lifekeeper.model.activity.Reminder.MESSAGE_REMINDER_INVALID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5711/buggy-version/src.main.java.seedu.lifekeeper.logic.commands.AddCommand.java", "BodyUseAPI": [], "Fixed commit": "8e27f4eca5ee8f88e1c0d6b6acb9927da20ca3ae", "Url": "https://api.github.com/repos/CS2103AUG2016-T13-C2/main", "Date": "2016-11-07T02:57:28Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((duedate.length()) > 0) if (((seedu.lifekeeper.logic.commands.Task) (toAdd)).getDueDate().value.before(java.util.Calendar.getInstance())) { throw new seedu.lifekeeper.commons.exceptions.IllegalValueException(DueDate.MESSAGE_DUEDATE_INVALID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5711/buggy-version/src.main.java.seedu.lifekeeper.logic.commands.AddCommand.java", "BodyUseAPI": [], "Fixed commit": "8e27f4eca5ee8f88e1c0d6b6acb9927da20ca3ae", "Url": "https://api.github.com/repos/CS2103AUG2016-T13-C2/main", "Date": "2016-11-07T02:57:28Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((seedu.lifekeeper.logic.commands.Event) (toAdd)).getStartTime().value.before(java.util.Calendar.getInstance())) { throw new seedu.lifekeeper.commons.exceptions.IllegalValueException(StartTime.MESSAGE_STARTTIME_INVALID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5711/buggy-version/src.main.java.seedu.lifekeeper.logic.commands.AddCommand.java", "BodyUseAPI": [], "Fixed commit": "8e27f4eca5ee8f88e1c0d6b6acb9927da20ca3ae", "Url": "https://api.github.com/repos/CS2103AUG2016-T13-C2/main", "Date": "2016-11-07T02:57:28Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPlatformServices().getServiceReferences(com.ibm.jaggr.core.IAggregator.class.getName(), ((\"(name=\" + (getName())) + \")\"))) != null) { throw new java.lang.IllegalStateException(\"Name already registered\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/177/buggy-version/jaggr-service.src.main.java.com.ibm.jaggr.service.impl.AggregatorImpl.java", "BodyUseAPI": [], "Fixed commit": "7290d74b377378f025c6d3dc326be8c9c35372ae", "Url": "https://api.github.com/repos/chuckdumont/JavascriptAggregator", "Date": "2014-06-04T20:08:35Z"},
{"Line": "=>790", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(userToInquiry.getUserID().equals(user.getUserID()))) { java.util.List<com.nearhere.domain.UserPushMessage> pushMessageList = sqlSession.selectList(\"com.tessoft.nearhere.taxi.selectInquiryUser\", hash); if (((com.dy.common.Util.getDouble(userToInquiry.getAppVersion())) > 1.34) && ((pushMessageList == null) || ((pushMessageList.size()) == 0))) { com.nearhere.domain.UserSetting setting = sqlSession.selectOne(\"com.tessoft.nearhere.taxi.selectUserSetting\", userToInquiry); if ((setting == null) || (!(\"N\".equals(setting.getInquiryUserPushReceiveYN())))) sendPushMessage(userToInquiry, \"inquiryUser\", ((user.getUserName()) + \"\ub2d8\uc774 \uace0\uac1d\ub2d8\uc758 \ud504\ub85c\ud544\ub97c \uc870\ud68c\ud588\uc2b5\ub2c8\ub2e4.\"), userID, true); else sendPushMessage(userToInquiry, \"inquiryUser\", ((user.getUserName()) + \"\ub2d8\uc774 \uace0\uac1d\ub2d8\uc758 \ud504\ub85c\ud544\ub97c \uc870\ud68c\ud588\uc2b5\ub2c8\ub2e4.\"), userID, false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2707/buggy-version/randomMsgServer.src.main.java.com.tessoft.nearhere.taxi.TaxiController.java", "BodyUseAPI": ["com.nearhere.domain.User.getAppVersion()", "com.nearhere.domain.User.getUserName()", "com.tessoft.nearhere.taxi.TaxiController.sendPushMessage(com.nearhere.domain.User,java.lang.String,((user.getUserName()) + \"\ub2d8\uc774 \uace0\uac1d\ub2d8\uc758 \ud504\ub85c\ud544\ub97c \uc870\ud68c\ud588\uc2b5\ub2c8\ub2e4.\"),java.lang.String,boolean)", "com.nearhere.domain.User.getUserName()", "com.tessoft.nearhere.taxi.TaxiController.sendPushMessage(com.nearhere.domain.User,java.lang.String,((user.getUserName()) + \"\ub2d8\uc774 \uace0\uac1d\ub2d8\uc758 \ud504\ub85c\ud544\ub97c \uc870\ud68c\ud588\uc2b5\ub2c8\ub2e4.\"),java.lang.String,boolean)", "com.dy.common.Util.getDouble(userToInquiry.getAppVersion())", "org.apache.ibatis.session.SqlSession.selectOne(java.lang.String,com.nearhere.domain.User)"], "Fixed commit": "0d602d8e3daacd5efc9a0a9c6280c1b522d77cbd", "Url": "https://api.github.com/repos/kim2509/publicChatServer", "Date": "2015-03-27T11:25:09Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.podcast_description)", "java.util.ArrayList<at.ac.tuwien.detlef.domain.Podcast>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((podcastDesc != null) && ((podcast != null) & ((podcast.getDescription()) != null))) { podcastDesc.setText(android.text.Html.fromHtml(podcast.getDescription())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/930/buggy-version/detlef.src.at.ac.tuwien.detlef.activities.AddPodcastActivity.java", "BodyUseAPI": ["at.ac.tuwien.detlef.domain.Podcast.getDescription()", "android.text.Html.fromHtml(podcast.getDescription())", "android.widget.TextView.setText(android.text.Html.fromHtml(podcast.getDescription()))"], "Fixed commit": "a323714580151a4074dca4e09e849803ed7b4db1", "Url": "https://api.github.com/repos/gpodder/detlef", "Date": "2013-01-12T13:21:09Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mVideo) != null) mShareMenuItem.setEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5880/buggy-version/acvideo.src.tv.acfun.video.DetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "75bc9cb4e291a8f75841e607289c809f831be21d", "Url": "https://api.github.com/repos/yrom/acfunm", "Date": "2014-02-10T14:10:38Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.LOLLIPOP)) { dialog = new com.afollestad.materialdialogs.MaterialDialog.Builder(getActivity()).title(R.string.set_time).customView(R.layout.time_picker, false).positiveText(R.string.positve_button).show(); }else { dialog = new com.afollestad.materialdialogs.MaterialDialog.Builder(getActivity()).title(R.string.set_time).customView(R.layout.time_picker_v21, false).positiveText(R.string.positve_button).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3103/buggy-version/app.src.main.java.com.gladysinc.gladys.AlarmFragment.java", "BodyUseAPI": [], "Fixed commit": "104ffbad1e3d6d178b18a84b23075d3cb8ec0695", "Url": "https://api.github.com/repos/MathieuAndrade/Gladys-Android-App", "Date": "2017-10-21T19:31:24Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.LOLLIPOP)) { dialog = new com.afollestad.materialdialogs.MaterialDialog.Builder(getActivity()).title(R.string.set_date).customView(R.layout.date_picker, false).positiveText(R.string.positve_button).show(); }else { dialog = new com.afollestad.materialdialogs.MaterialDialog.Builder(getActivity()).title(R.string.set_date).customView(R.layout.date_picker_v21, false).positiveText(R.string.positve_button).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3103/buggy-version/app.src.main.java.com.gladysinc.gladys.AlarmFragment.java", "BodyUseAPI": [], "Fixed commit": "104ffbad1e3d6d178b18a84b23075d3cb8ec0695", "Url": "https://api.github.com/repos/MathieuAndrade/Gladys-Android-App", "Date": "2017-10-21T19:31:24Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.core.GraphObject.invokeMethod(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (obj instanceof org.structr.rest.RestMethodResult) { return ((org.structr.rest.RestMethodResult) (obj)); }else { final org.structr.rest.RestMethodResult result = new org.structr.rest.RestMethodResult(200); unwrapTo(obj, result); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1298/buggy-version/structr-rest.src.main.java.org.structr.rest.resource.StaticRelationshipResource.java", "BodyUseAPI": ["org.structr.rest.resource.StaticRelationshipResource.unwrapTo(java.lang.Object,org.structr.rest.RestMethodResult)"], "Fixed commit": "2eb0eede0c92df3bf4af1ef1bea7e7f03c7e15c3", "Url": "https://api.github.com/repos/structr/structr", "Date": "2015-04-13T08:53:28Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.act) != (this.def)) { this.act = (this.act) - 256; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3484/buggy-version/java.k4unl.minecraft.Hydraulicraft.lib.helperClasses.Id.java", "BodyUseAPI": [], "Fixed commit": "f093a33f1e188f5b23870f90b6cd2b92f26cf608", "Url": "https://api.github.com/repos/K-4U/Hydraulicraft", "Date": "2014-04-02T11:35:28Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recordSimulation) { loadRecordedSimulation(\"Testrecording1.sim\"); playRecordedSimulation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8781/buggy-version/src.chalmers.dax021308.ecosystem.model.environment.EcoWorld.java", "BodyUseAPI": [], "Fixed commit": "87adfdd6ee1200a48f048ee891e3ff4159995887", "Url": "https://api.github.com/repos/Ramqvist/Simulated-ecosystem", "Date": "2013-03-26T18:46:29Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((sessionManager) == null) { sessionManager = util.session.ASessionManagerSelector.getSessionManager(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1769/buggy-version/src.util.session.AServerMessageSenderRunnable.java", "BodyUseAPI": [], "Fixed commit": "d9a0f30e520190e9460faa1b8b55c12811bae4bb", "Url": "https://api.github.com/repos/pdewan/util", "Date": "2014-12-06T20:28:53Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.gemini.spModel.target.sync.ISPNode.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parent instanceof edu.gemini.spModel.target.sync.ISPObservation) { edu.gemini.spModel.target.sync.GuideSync.update(((edu.gemini.spModel.target.sync.ISPObservation) (parent))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5262/buggy-version/bundle.edu.gemini.pot.src.main.java.edu.gemini.spModel.target.sync.GuideSync.java", "BodyUseAPI": [], "Fixed commit": "1d7dcf4a1a9d9e7ac0818a6877b7f9f9a4b3af1f", "Url": "https://api.github.com/repos/gemini-hlsw/ocs", "Date": "2015-03-11T13:34:31Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.perrier.music.tag.TagFactory.parseTag(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isBlank(tag.getArtist())) || (!(org.apache.commons.lang3.StringUtils.equalsIgnoreCase(tag.getArtist(), tag.getAlbumArtist())))) { albumArtist = this.addArtist(tag.getAlbumArtist()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4215/buggy-version/src.main.java.com.perrier.music.indexer.LibraryService.java", "BodyUseAPI": ["com.perrier.music.tag.ITag.getAlbumArtist()", "com.perrier.music.indexer.LibraryService.addArtist(tag.getAlbumArtist())"], "Fixed commit": "37840158b9fe4c05d349b35f5f5d480fba3e0e72", "Url": "https://api.github.com/repos/nperrier/music-server", "Date": "2015-08-29T22:42:55Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (notLoaded) javax.swing.JOptionPane.showMessageDialog(null, (\"Es konnten keine Einstellungen geladen werden. \\n\" + \"Ist dies der erste Start des Programms?\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7976/buggy-version/src.Controller.java", "BodyUseAPI": [], "Fixed commit": "1274ecb13bafed788d05e42e1983e2d3d8ebc13e", "Url": "https://api.github.com/repos/Fynloh/Adressbuch", "Date": "2017-01-12T05:06:18Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3018/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "efa051ff88966811b49b45ef2de1f3730a88988b", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["biz.hardcoregaming.zombiesurvival.Background.getBgX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bgX < 0) && ((speedX) > 0)) { player.setIsCollide(false); bg.setIsCollideX(false); bg2.setIsCollideX(false); }else { bg.setSpeedX(0); bg2.setSpeedX(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/396/buggy-version/ZombieSurvival.app.src.main.java.biz.hardcoregaming.zombiesurvival.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "01b8633ffe5a7340b328d64dbc53a42b7bffc251", "Url": "https://api.github.com/repos/ericohansen/ZombieSurvival", "Date": "2016-02-24T19:40:53Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["biz.hardcoregaming.zombiesurvival.Background.getBgY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bgY < 0) && ((speedY) > 0)) { player.setIsCollide(false); bg.setIsCollideY(false); bg2.setIsCollideY(false); }else { bg.setSpeedY(0); bg2.setSpeedY(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/396/buggy-version/ZombieSurvival.app.src.main.java.biz.hardcoregaming.zombiesurvival.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "01b8633ffe5a7340b328d64dbc53a42b7bffc251", "Url": "https://api.github.com/repos/ericohansen/ZombieSurvival", "Date": "2016-02-24T19:40:53Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sampleByTime) { try { java.util.concurrent.TimeUnit.MILLISECONDS.sleep(java.lang.Long.parseLong(getSampleElapsedTime())); } catch (java.lang.InterruptedException e) { net.xmeter.samplers.SubSampler.logger.info((\"Received exception when waiting for notification signal: \" + (e.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1074/buggy-version/mqtt_jmeter.src.main.java.net.xmeter.samplers.SubSampler.java", "BodyUseAPI": [], "Fixed commit": "0b16b2450d282d59ab3836b311898bc837bcd057", "Url": "https://api.github.com/repos/emqtt/mqtt-jmeter", "Date": "2017-11-30T06:49:51Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentFrame) < (this.cachedFrames.size())) { this.fta.reset(this.cachedFrames.get(currentFrame)); while (((currentRecord) >= (fta.getTupleCount())) && ((currentFrame) < (cachedFrames.size()))) { (currentFrame)++; if ((currentFrame) < (cachedFrames.size())) this.fta.reset(this.cachedFrames.get(currentFrame)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2985/buggy-version/hyracks.hyracks-dataflow-std.src.main.java.org.apache.hyracks.dataflow.std.sjoin.CachedFrameWriter.java", "BodyUseAPI": ["org.apache.hyracks.dataflow.std.sjoin.CircularQueue<java.nio.ByteBuffer>.get(int)", "org.apache.hyracks.dataflow.common.comm.io.FrameTupleAccessor.reset(this.cachedFrames.get(currentFrame))", "org.apache.hyracks.dataflow.common.comm.io.FrameTupleAccessor.reset(this.cachedFrames.get(currentFrame))", "org.apache.hyracks.dataflow.std.sjoin.CircularQueue<java.nio.ByteBuffer>.get(int)"], "Fixed commit": "f503b89d3f5f38b26d05131ffe4866dce6f6979a", "Url": "https://api.github.com/repos/aseldawy/incubator-asterixdb-hyracks", "Date": "2016-02-22T21:40:10Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentRole.getAttributes()) == null) { currentRole.setAttributes(new java.util.ArrayList<de.jhdp.model.users.UserRoleAttributeDefinition>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6157/buggy-version/showcase.showcase-web.src.main.java.de.jhdp.web.admin.rr.RolesAndRightsDefinitionBean.java", "BodyUseAPI": ["de.jhdp.model.users.UserRoleDefinition.setAttributes(java.util.ArrayList<de.jhdp.model.users.UserRoleAttributeDefinition>)"], "Fixed commit": "63edaf1bb067fa8cebd620f1ae2a8522d5cd1a90", "Url": "https://api.github.com/repos/DanielPischniok/Projekt_Firma", "Date": "2015-12-07T20:29:48Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (websiteIndex != 0) { websiteDocuments.get(websiteIndex).removeDuplicatedDocumentLinks(allLinksToCheckDuplicates); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6429/buggy-version/src.main.java.com.AQAS.document_retrieval.HelpersD.java", "BodyUseAPI": ["java.util.ArrayList<com.AQAS.document_retrieval.Website_Document>.get(int)", "websiteDocuments.get(websiteIndex).removeDuplicatedDocumentLinks(java.util.ArrayList<java.lang.String>)"], "Fixed commit": "427dfd896b8c95a56e3052340a705ba70171ffa0", "Url": "https://api.github.com/repos/MaherSaleem/Arabic_QA_system", "Date": "2017-11-25T20:21:29Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((qtyTot.compareTo(java.math.BigDecimal.ZERO)) != 0) { productAvgPrice = productAvgPrice.divide(qtyTot, scale, java.math.BigDecimal.ROUND_HALF_UP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4313/buggy-version/axelor-stock.src.main.java.com.axelor.apps.stock.service.LocationServiceImpl.java", "BodyUseAPI": ["java.math.BigDecimal.divide(java.math.BigDecimal,int,int)"], "Fixed commit": "9022e42a0926a3f3cbe5344c3ece12da146a5f0b", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2017-05-12T13:09:17Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference<android.widget.ProgressBar>.get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (pb != null) { pb.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6641/buggy-version/src.org.qii.weiciyuan.support.asyncdrawable.ReadWorker.java", "BodyUseAPI": ["android.widget.ProgressBar.setVisibility(View.INVISIBLE)"], "Fixed commit": "ac725619b1587c4a20913766bd1832333d081fa4", "Url": "https://api.github.com/repos/Jewelzqiu/weiciyuan", "Date": "2014-06-12T12:05:09Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getStatus()) == (MediaPlayer.Status.PLAYING)) { player.stop(); panelManager.setMode(ViewEnum.MAIN_MENU); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7657/buggy-version/src.main.view.screen.SplashPanel.java", "BodyUseAPI": ["javafx.scene.media.MediaPlayer.stop()"], "Fixed commit": "2b84b446c03c4be6175fb0ca2eb3767cabaadaee", "Url": "https://api.github.com/repos/COP4331-OOP-Project/Pandamonium", "Date": "2017-03-02T23:45:52Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(client.getSource().equals(source.getId()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4757/buggy-version/src.main.java.org.jvalue.ods.notifications.NotificationManager.java", "BodyUseAPI": [], "Fixed commit": "14a4b60459e3f908f770c2d590d0c52cf5824fd2", "Url": "https://api.github.com/repos/jvalue/open-data-service", "Date": "2014-07-06T15:39:46Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isLocked())) { return super.cross(currentTile, crosser); }else if (unlock(key)) { return super.cross(currentTile, crosser); }else throw new java.lang.IllegalArgumentException(\"crosser did not have key\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3169/buggy-version/Sysc-Project.src.gameCore.Exit.java", "BodyUseAPI": [], "Fixed commit": "bb1db70181aed7160a46fb58b13dfd4afe72d637", "Url": "https://api.github.com/repos/DPenner/SYSC-Project", "Date": "2012-10-23T21:49:28Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((configuration.get(com.google.cloud.bigtable.hbase.BigtableOptionsFactory.BIGTABLE_LONG_RPC_TIMEOUT_MS_KEY)) != null) { clientCallOptionsBuilder.setLongRpcTimeoutMs(configuration.getInt(com.google.cloud.bigtable.hbase.BigtableOptionsFactory.BIGTABLE_LONG_RPC_TIMEOUT_MS_KEY, com.google.cloud.bigtable.config.CallOptionsConfig.LONG_TIMEOUT_MS_DEFAULT)); }else { clientCallOptionsBuilder.setLongRpcTimeoutMs(configuration.getInt(HConstants.HBASE_CLIENT_SCANNER_TIMEOUT_PERIOD, com.google.cloud.bigtable.config.CallOptionsConfig.LONG_TIMEOUT_MS_DEFAULT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/341/buggy-version/bigtable-hbase-parent.bigtable-hbase.src.main.java.com.google.cloud.bigtable.hbase.BigtableOptionsFactory.java", "BodyUseAPI": ["org.apache.hadoop.conf.Configuration.getInt(HConstants.HBASE_CLIENT_SCANNER_TIMEOUT_PERIOD,com.google.cloud.bigtable.config.CallOptionsConfig.LONG_TIMEOUT_MS_DEFAULT)", "CallOptionsConfig.Builder.setLongRpcTimeoutMs(configuration.getInt(com.google.cloud.bigtable.hbase.BigtableOptionsFactory.BIGTABLE_LONG_RPC_TIMEOUT_MS_KEY, com.google.cloud.bigtable.config.CallOptionsConfig.LONG_TIMEOUT_MS_DEFAULT))", "CallOptionsConfig.Builder.setLongRpcTimeoutMs(configuration.getInt(HConstants.HBASE_CLIENT_SCANNER_TIMEOUT_PERIOD, com.google.cloud.bigtable.config.CallOptionsConfig.LONG_TIMEOUT_MS_DEFAULT))", "org.apache.hadoop.conf.Configuration.getInt(java.lang.String,com.google.cloud.bigtable.config.CallOptionsConfig.LONG_TIMEOUT_MS_DEFAULT)"], "Fixed commit": "ecb74711d2c4a716b5de80e8ca91b750ddbc5482", "Url": "https://api.github.com/repos/GoogleCloudPlatform/cloud-bigtable-client", "Date": "2016-12-29T23:28:25Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((dot != null) && (!(dot.equals(Description.EMPTY)))) create(main.activator.Activator.getDefault().getSourceGraphController().getSourceGraph());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8493/buggy-version/PESTT.src.ui.source.Graph.java", "BodyUseAPI": [], "Fixed commit": "27c98542596c8357b2e53828c2c335fab860d988", "Url": "https://api.github.com/repos/ruigameiro/PESTT", "Date": "2012-04-02T15:50:09Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<pizzasearch.f0ris.com.pizzasearchassignment.Models.SearchItem>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((item.rating) == 0) viewHolder.rating.setVisibility(View.GONE); else rating_bg.setColor(Color.RED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2109/buggy-version/app.src.main.java.pizzasearch.f0ris.com.pizzasearchassignment.Adapters.SearchAdapter.java", "BodyUseAPI": [], "Fixed commit": "9acf981bb74b99f1f6107a7591e5699f377a9557", "Url": "https://api.github.com/repos/F0RIS/PizzaSearchAssignment", "Date": "2016-03-06T11:52:37Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fOK && (!(settings.removeSingleReads()))) { if (settings.handleMatePairsSeperatly()) { writeRead(readF, \"F\", mpwf); }else { writeRead(readF, \"F\", bw); } io.Statistics.increaseNumNotMergedForward(); }else if (rOK && (!(settings.removeSingleReads()))) { if (settings.handleMatePairsSeperatly()) { writeRead(readR, \"R\", mpwr); }else { writeRead(readR, \"R\", bw); } io.Statistics.increaseNumNotMergedReverse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3407/buggy-version/ClipAndMerge.io.DataHandler.java", "BodyUseAPI": ["setting.MergeSettings.handleMatePairsSeperatly()", "setting.MergeSettings.handleMatePairsSeperatly()", "setting.MergeSettings.removeSingleReads()"], "Fixed commit": "41bd40f2132b087cf7053cfee80f83f1710f2953", "Url": "https://api.github.com/repos/apeltzer/ClipAndMerge", "Date": "2016-06-08T12:53:12Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(settings.removeSingleReads())) if (settings.handleMatePairsSeperatly()) { if (prefix.equals(\"F\")) { writeRead(read, prefix, mpwf); } if (prefix.equals(\"R\")) { writeRead(read, prefix, mpwr); } if (prefix.equals(\"M\")) { writeRead(read, prefix, bw); } }else { this.writeRead(read, prefix, bw); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3407/buggy-version/ClipAndMerge.io.DataHandler.java", "BodyUseAPI": ["setting.MergeSettings.handleMatePairsSeperatly()"], "Fixed commit": "41bd40f2132b087cf7053cfee80f83f1710f2953", "Url": "https://api.github.com/repos/apeltzer/ClipAndMerge", "Date": "2016-06-08T12:53:12Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (e != null) { e.printStackTrace(out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3710/buggy-version/src.main.java.com.saintdan.util.commons.utils.LogUtils.java", "BodyUseAPI": ["java.lang.Throwable.printStackTrace(java.io.PrintWriter)"], "Fixed commit": "8f74be164b6f077a4e5ea19b760270e4a359b53f", "Url": "https://api.github.com/repos/saintdan/commons-util", "Date": "2015-10-16T06:42:50Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stacks.size()) == 0) { net.minecraft.item.ItemStack dirt = new net.minecraft.item.ItemStack(net.minecraft.init.Blocks.dirt); dirt.setStackDisplayName(\"A lonley piece of dirt\"); player.inventory.addItemStackToInventory(dirt); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3817/buggy-version/src.main.java.chanceCubes.rewards.defaultRewards.ItemRenamer.java", "BodyUseAPI": [], "Fixed commit": "2d0ff154fac1fd21d1d5b89349468455013859bb", "Url": "https://api.github.com/repos/Turkey2349/ChanceCubes", "Date": "2016-08-01T01:11:58Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirst) { android.widget.ImageView imgBgLine = ((android.widget.ImageView) (findViewById(R.id.img_question_neighbor_linebg))); drawGraph(imgBgLine.getLeft(), imgBgLine.getRight(), imgBgLine.getTop(), imgBgLine.getBottom()); android.util.Log.i(\"test\", \"test!!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4694/buggy-version/src.com.nexters.explorethetown.QuestionNeighborActivity.java", "BodyUseAPI": [], "Fixed commit": "a6bd1ba53f30d462132188760716b961723ab8a8", "Url": "https://api.github.com/repos/Nexters/ExploreTheTown", "Date": "2014-08-23T15:57:18Z"},
{"Line": "=>1040", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.multibit.utils.CSMiscUtils.getHumanReadableAssetRef(org.coinspark.wallet.CSAsset)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (assetRef == null) assetRef = \"Awaiting new asset confirmation...\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2419/buggy-version/src.main.java.org.sparkbit.jsonrpc.SparkBitJSONRPCServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "83aa0ee900aea33c958b194e4cd8591bfaca1665", "Url": "https://api.github.com/repos/coinspark/sparkbit", "Date": "2014-11-26T19:09:35Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.crypto.Cipher.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (params == null) { iv = com.kryptnostic.kodex.v1.crypto.ciphers.Cyphers.generateSalt(((cypher.getKeySize()) >>> 3)); try { cipher.init(javax.crypto.Cipher.ENCRYPT_MODE, secretKeySpec, new javax.crypto.spec.IvParameterSpec(iv)); } catch (java.security.InvalidAlgorithmParameterException e) { throw new com.kryptnostic.kodex.v1.exceptions.types.SecurityConfigurationException(e); } }else { iv = params.getParameterSpec(javax.crypto.spec.IvParameterSpec.class).getIV(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/508/buggy-version/src.main.java.com.kryptnostic.kodex.v1.crypto.ciphers.AbstractCryptoService.java", "BodyUseAPI": ["java.security.AlgorithmParameters.getParameterSpec(java.lang.Class)", "javax.crypto.spec.IvParameterSpec.getIV()"], "Fixed commit": "83f16c7fac2456b18c550f70d86372ee18172e3c", "Url": "https://api.github.com/repos/kryptnostic/kodex", "Date": "2014-12-16T09:51:32Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSendButton.isEnabled()) { send(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6528/buggy-version/app.src.main.java.com.xlythe.sms.MessageActivity.java", "BodyUseAPI": [], "Fixed commit": "12d62ece74a5009eab5c7deb6487e3eb2adbf647", "Url": "https://api.github.com/repos/Xlythe/AndroidTextManager", "Date": "2016-05-17T20:52:50Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((beacons.size()) >= 1) { return beacons.get(0); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1155/buggy-version/app.src.main.java.com.shoply.shop.shoply.SearchFragment.java", "BodyUseAPI": ["java.util.ArrayList<com.estimote.sdk.Beacon>.get(int)"], "Fixed commit": "76fd7d0a60414bf1be636f72d7245a6878bc7069", "Url": "https://api.github.com/repos/galpe/Shoply3", "Date": "2015-04-07T22:03:41Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBestReading) != null) { handleLocationChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7017/buggy-version/app.src.main.java.com.onerun.onerun.onerun.Running.java", "BodyUseAPI": [], "Fixed commit": "4e337539281780b4f53ec7e71df14ba80284cb26", "Url": "https://api.github.com/repos/HarrisYip/oneRun", "Date": "2015-03-08T03:43:01Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((handler) != null) && ((runnable) != null)) { handler.removeCallbacks(runnable); consumed = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6381/buggy-version/app.src.main.java.us.koller.cameraroll.ui.AboutActivity.java", "BodyUseAPI": [], "Fixed commit": "cb3857f02e942e8e46a8db9978ca3fc62f709f1d", "Url": "https://api.github.com/repos/kollerlukas/Camera-Roll-Android-App", "Date": "2017-02-06T07:33:16Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getInterfaces()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == interfaces) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3599/buggy-version/atlas-core.src.main.java.android.taobao.atlas.patch.AtlasHotPatchManager.java", "BodyUseAPI": [], "Fixed commit": "703f192def853f665639b7e5614a761c0006599b", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-11-15T12:37:59Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.cs4720.teamtracker.ScheduleActivity.getDistance(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (distance == 0) distance = getDistance(((name + \",\") + address1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8701/buggy-version/app.src.main.java.com.example.cs4720.teamtracker.ScheduleActivity.java", "BodyUseAPI": [], "Fixed commit": "c3f4da019128c390807fe59fcb925f7e028b5980", "Url": "https://api.github.com/repos/cet6ax/TeamTracker", "Date": "2016-04-18T15:21:49Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (CSV.equals(\"big\")) csvPath = \"C:/Users/CPU8/Google Drive/Software Engineering/Project 1 Local backups/cs374_anon.csv\"; else csvPath = ((lol) + \"/tests/\") + CSV;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2336/buggy-version/cucumber.implementation.StudentCourseManager.java", "BodyUseAPI": [], "Fixed commit": "0d29989ce867c3edcf032ea72381a57d4bab33b5", "Url": "https://api.github.com/repos/nfs13a/16F_SE_Prereq_suppository", "Date": "2016-10-11T04:35:28Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((siteIdentificationTypeEventListener) == null) { siteIdentificationTypeEventListener = new au.gov.ga.geodesy.support.mapper.dozer.populator.SiteIdentificationTypePopulator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8359/buggy-version/src.main.java.au.gov.ga.geodesy.support.mapper.dozer.populator.GeodesyMLDozerEventListenerFactory.java", "BodyUseAPI": [], "Fixed commit": "8eb6db19e74c5c1a72d7ef8f32ce90af6b7a4a4e", "Url": "https://api.github.com/repos/GeoscienceAustralia/Geodesy-Web-Services", "Date": "2016-04-11T10:27:52Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (options.getReturnBody()) { ro = this.factory.convert(response, response.getContent(), content.getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6966/buggy-version/src.org.handwerkszeug.riak.http.rest.RestRiakOperations.java", "BodyUseAPI": [], "Fixed commit": "fd3c95b405666e8f35459d60aeaac76091ab903a", "Url": "https://api.github.com/repos/taichi/org.handwerkszeug.riak", "Date": "2011-06-06T11:18:58Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.authdb.util.Config.hasSpout) { com.authdb.plugins.ZSpout spout = new com.authdb.plugins.ZSpout(); if (!(spout.popGUI(player))) { com.authdb.util.Messages.sendMessage(Message.login_prompt, player, null); } }else { com.authdb.util.Messages.sendMessage(Message.login_prompt, player, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2843/buggy-version/src.main.java.com.authdb.listeners.AuthDBPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "685377bdc0f9dc5e6fb2b75ab7f10143d3a8cfac", "Url": "https://api.github.com/repos/CraftFire/AuthDB", "Date": "2011-08-08T02:28:00Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.serializer.JSONSerializer.getWriter()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (out.isEnabled(SerializerFeature.WriteClassName)) { boolean containsKey = ((map.getClass()) == (com.alibaba.fastjson.JSONObject.class)) && (map.containsKey(JSON.DEFAULT_TYPE_KEY)); if (!containsKey) { out.writeFieldName(JSON.DEFAULT_TYPE_KEY); out.writeString(object.getClass().getName()); first = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2513/buggy-version/src.main.java.com.alibaba.fastjson.serializer.MapSerializer.java", "BodyUseAPI": ["com.alibaba.fastjson.serializer.SerializeWriter.writeFieldName(JSON.DEFAULT_TYPE_KEY)", "com.alibaba.fastjson.serializer.SerializeWriter.writeString(java.lang.String)"], "Fixed commit": "2acebd4235f6abc18640735370c3db8cbfbac247", "Url": "https://api.github.com/repos/LSeiei/fastjson", "Date": "2016-03-14T13:21:40Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((request != null) && ((request.getRpcRequest()) != null)) && ((request.getRpcRequest().getHeader()) != null)) { java.lang.System.out.println((\" --- \" + (request.getRpcRequest().getHeader().toString()))); }else { java.lang.System.out.println(\" --- RpcReq / Header null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4048/buggy-version/java.servers.src.org.xtreemfs.osd.stages.Stage.java", "BodyUseAPI": ["org.xtreemfs.osd.OSDRequest.getRpcRequest()", "java.io.PrintStream.println((\" --- \" + (request.getRpcRequest().getHeader().toString())))", "request.getRpcRequest().getHeader()", "request.getRpcRequest().getHeader().toString()"], "Fixed commit": "e8ae85989d9cac0650c57840c41b5ee4738d9aa8", "Url": "https://api.github.com/repos/rbaerzib/xtreemfs", "Date": "2015-09-23T13:51:50Z"},
{"Line": "=>1431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count) > 0) com.serotonin.m2m2.db.dao.DataPointDao.clearPointHierarchyCache();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6278/buggy-version/Core.src.com.serotonin.m2m2.db.dao.DataPointDao.java", "BodyUseAPI": [], "Fixed commit": "b7e71fc57fcbc2f1aa3de7160585c8ccc2a94c9e", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2017-07-20T16:37:35Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.alberovalley.novedadesumbria.service.NewsCheckingService.vibration) { notification.vibrate = new long[]{ 100, 200, 100, 500 }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6065/buggy-version/src.com.alberovalley.novedadesumbria.service.NewsCheckingService.java", "BodyUseAPI": [], "Fixed commit": "bd8213a046a40b1a53a943c6014c18bcc14b0bf5", "Url": "https://api.github.com/repos/alberovalley/novedadesUmbria", "Date": "2013-09-10T10:46:45Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.alberovalley.novedadesumbria.service.NewsCheckingService.vibration) { notification.vibrate = new long[]{ 100, 200, 100, 500 }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6065/buggy-version/src.com.alberovalley.novedadesumbria.service.NewsCheckingService.java", "BodyUseAPI": [], "Fixed commit": "bd8213a046a40b1a53a943c6014c18bcc14b0bf5", "Url": "https://api.github.com/repos/alberovalley/novedadesUmbria", "Date": "2013-09-10T10:46:45Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.alberovalley.novedadesumbria.service.NewsCheckingService.vibration) { notification.defaults |= android.app.Notification.DEFAULT_VIBRATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6065/buggy-version/src.com.alberovalley.novedadesumbria.service.NewsCheckingService.java", "BodyUseAPI": [], "Fixed commit": "bd8213a046a40b1a53a943c6014c18bcc14b0bf5", "Url": "https://api.github.com/repos/alberovalley/novedadesUmbria", "Date": "2013-09-10T10:46:45Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.alberovalley.novedadesumbria.service.NewsCheckingService.vibration) { notification.defaults |= android.app.Notification.DEFAULT_VIBRATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6065/buggy-version/src.com.alberovalley.novedadesumbria.service.NewsCheckingService.java", "BodyUseAPI": [], "Fixed commit": "bd8213a046a40b1a53a943c6014c18bcc14b0bf5", "Url": "https://api.github.com/repos/alberovalley/novedadesUmbria", "Date": "2013-09-10T10:46:45Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastCheckpointWindowId) < (currentWindowId)) { if ((++(checkpointWindowCount)) == (CHECKPOINT_WINDOW_COUNT)) { checkpointWindowCount = 0; if (doCheckpoint || ((PROCESSING_MODE) == (com.datatorrent.api.Operator.ProcessingMode.EXACTLY_ONCE))) { checkpoint(currentWindowId); lastCheckpointWindowId = currentWindowId; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8575/buggy-version/engine.src.main.java.com.datatorrent.stram.engine.InputNode.java", "BodyUseAPI": [], "Fixed commit": "f1229d47f39a14dff32742add5ad85ee8872c6b5", "Url": "https://api.github.com/repos/yogidevendra/apex-core", "Date": "2016-04-06T04:52:10Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((village.status) == (jp.ddo.jinroumc.werewolf.enumconstant.VillageStatus.ongoing)) && (!(alive))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5363/buggy-version/Werewolf.src.main.java.jp.ddo.jinroumc.werewolf.village.VillagePlayer.java", "BodyUseAPI": [], "Fixed commit": "6340f50944db9db00b601dd394aedb3ce108c36d", "Url": "https://api.github.com/repos/rhunarion/private", "Date": "2014-07-09T22:18:57Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendaylight.yang.gen.v1.opendaylight.tsdr.rev150219.storetsdrlogrecord.input.TSDRLogRecord.getRecordAttributes()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((attributes != null) && ((attributes.size()) != 0)) { for (org.opendaylight.yang.gen.v1.opendaylight.tsdr.rev150219.tsdrlog.RecordAttributes attribute : attributes) { org.opendaylight.tsdr.persistence.hbase.HBaseColumn column = new org.opendaylight.tsdr.persistence.hbase.HBaseColumn(); column.setColumnFamily(TSDRHBaseDataStoreConstants.COLUMN_FAMILY_NAME); column.setTimeStamp(timeStamp); column.setColumnQualifier(attribute.getName()); column.setValue(attribute.getValue()); columnList.add(column); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4302/buggy-version/persistence-hbase.src.main.java.org.opendaylight.tsdr.persistence.hbase.HBasePersistenceUtil.java", "BodyUseAPI": [], "Fixed commit": "9a9bc836d240aa6b0ce8a074f4d2bac5ba8d2f1e", "Url": "https://api.github.com/repos/opendaylight/tsdr", "Date": "2015-11-20T19:18:05Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((input) instanceof aeminium.gpu.collections.properties.evaluation.LazyCollection)) { inbuffer = aeminium.gpu.buffers.BufferHelper.createInputOutputBufferFor(ctx, input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6103/buggy-version/src.aeminium.gpu.backends.gpu.GPUReduce.java", "BodyUseAPI": [], "Fixed commit": "c51ce347fe5d79c3b9653e932fed1aef22166efd", "Url": "https://api.github.com/repos/AEminium/AeminiumGPU", "Date": "2015-01-02T21:10:58Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((temp - tail) / 10) != ans) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6202/buggy-version/ReverseInteger.src.ReverseInteger.java", "BodyUseAPI": [], "Fixed commit": "7f2de53209c2bae09e294c98d729a2e39e7f5419", "Url": "https://api.github.com/repos/nagen010/LeetCode", "Date": "2016-09-18T23:31:07Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (characterLoadCursor != null) { characterLoadCursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5408/buggy-version/DungeonsandDragonsCharacterSheet.app.src.main.java.stephen.dungeonsanddragonscharactersheet.CharacterSelectionScreen.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "b5acd81413c9d1de3599941bde95e307cb9b60e9", "Url": "https://api.github.com/repos/SteebBease/Dungeons-and-Dragons-Character-Sheet", "Date": "2015-11-08T18:41:28Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mucommander.commons.io.StreamUtils.readUpTo(java.io.PushbackInputStream,byte[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((read <= 0) && ((file.getSize()) > 0)) { return file.getInputStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3326/buggy-version/src.main.com.mucommander.commons.file.impl.sevenzip.SevenZipRandomAccessFile.java", "BodyUseAPI": ["com.mucommander.commons.file.AbstractFile.getInputStream()"], "Fixed commit": "3e643ca563870052eaa05257bce7d778a6da9160", "Url": "https://api.github.com/repos/trol73/mucommander", "Date": "2015-03-02T15:59:24Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newApi != null) { apis.add(0, newApi); adapter.notifyDataSetChanged(); }else { list.errorInRefresh(\"Something went wrong.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5484/buggy-version/example.src.fr.jmartinez.refreshlistview.MainActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(int,java.lang.String)"], "Fixed commit": "f88f2b10061fa02470c4d457ac553e34a71dc3a7", "Url": "https://api.github.com/repos/jeremiemartinez/RefreshListView", "Date": "2013-02-25T20:07:00Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.GregorianCalendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((gc.get(java.util.Calendar.DAY_OF_MONTH)) == 31) && ((gc.get(java.util.Calendar.MONTH)) == 12)) { gc.add(java.util.Calendar.DAY_OF_YEAR, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/709/buggy-version/carrental-ejb.src.main.java.ch.xxx.carrental.ui.ejb.CrDetailServiceSLB.java", "BodyUseAPI": ["java.util.Calendar.add(int,int)"], "Fixed commit": "7ab0650db8e910a957f2f3b837cbddead0e36141", "Url": "https://api.github.com/repos/Angular2Guy/Angular2AndJavaEE", "Date": "2017-05-21T05:59:42Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((values.length) == 1) { parameters.put(values[0], null); }else if ((values.length) == 2) { parameters.put(values[0], values[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5/buggy-version/restcomm.media.src.main.java.org.mobicents.servlet.sip.restcomm.callmanager.mgcp.MgcpIvrEndpoint.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,<nulltype>)"], "Fixed commit": "c6a1d5e2438bcc5814f9b6e19f54aec01b4f17c6", "Url": "https://api.github.com/repos/Mobicents/RestComm", "Date": "2012-12-03T00:00:43Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prices == null) || ((prices.length) == 0)) { return prices; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7194/buggy-version/src.main.java.com.vsthost.rnd.jbangwa.FinanceUtils.java", "BodyUseAPI": [], "Fixed commit": "ffaa34ec731dd05f6808b978eebe398f8996caba", "Url": "https://api.github.com/repos/vst/jbangwa", "Date": "2015-03-23T07:25:45Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == (item.getItemCode())) || (\"\".equals(item.getItemCode()))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/113/buggy-version/com.topsun.posclient.sales.ui.src.com.topsun.posclient.sales.ui.view.SalesView.java", "BodyUseAPI": [], "Fixed commit": "f8903d376e8f813e3b475a3d1079100340f39090", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2014-03-09T02:23:26Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (profile.isUseEndDefault()) iconRes = getVolumeIconResource(com.fourthwardcoder.android.volumemanager.helpers.Util.getDefaultEndVolumeType(getApplicationContext())); else iconRes = getVolumeIconResource(profile.getEndVolumeType());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1177/buggy-version/app.src.main.java.com.fourthwardcoder.android.volumemanager.services.VolumeManagerService.java", "BodyUseAPI": ["com.fourthwardcoder.android.volumemanager.services.VolumeManagerService.getVolumeIconResource(profile.getEndVolumeType())", "com.fourthwardcoder.android.volumemanager.models.Profile.getEndVolumeType()"], "Fixed commit": "25a039c003934e0280bb5d491420b6a07a005762", "Url": "https://api.github.com/repos/o4wcoder/VolumeManager", "Date": "2016-04-29T02:50:53Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (profile.isUseStartDefault()) iconRes = getVolumeIconResource(com.fourthwardcoder.android.volumemanager.helpers.Util.getDefaultStartVolumeType(getApplicationContext())); else iconRes = getVolumeIconResource(profile.getStartVolumeType());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1177/buggy-version/app.src.main.java.com.fourthwardcoder.android.volumemanager.services.VolumeManagerService.java", "BodyUseAPI": ["com.fourthwardcoder.android.volumemanager.services.VolumeManagerService.getVolumeIconResource(profile.getStartVolumeType())", "com.fourthwardcoder.android.volumemanager.models.Profile.getStartVolumeType()"], "Fixed commit": "25a039c003934e0280bb5d491420b6a07a005762", "Url": "https://api.github.com/repos/o4wcoder/VolumeManager", "Date": "2016-04-29T02:50:53Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scheduleInfo.getDateExceptions()) != null) { for (java.lang.String dateException : scheduleInfo.getDateExceptions()) { try { java.text.DateFormat formatter = new java.text.SimpleDateFormat(ScheduleInfo.FULL_DAY_FORMAT); java.util.Date date = formatter.parse(dateException); } catch (java.lang.Exception e) { throw APIException.badRequests.schduleInfoInvalid(ScheduleInfo.DATE_EXCEPTIONS); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8072/buggy-version/vipr-portal.StorageAPI.src.java.com.emc.sa.api.ScheduledEventService.java", "BodyUseAPI": ["com.emc.sa.api.ScheduleInfo.getDateExceptions()"], "Fixed commit": "ea03cf6ff4e1f536b835997b57b40fad7074ebed", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-07-26T14:46:24Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unical.uniexam.mvc.service.StudentService.getAppealStudent(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((appealStudent.getTemporany_vote()) == null) res = studentService.removeInscriptionToAppeal(idAppealStudent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/595/buggy-version/Uniexam.src.main.java.it.unical.uniexam.mvc.controll.student.AjaxControllerStudentAppeal.java", "BodyUseAPI": [], "Fixed commit": "cbf19af6c7a01cd73b740cc2c326501aefb07e38", "Url": "https://api.github.com/repos/mok89/UEM", "Date": "2014-02-03T12:37:14Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (formInstance != null) { formInstanceModel.setFormInstanceId(formInstance.getId()); formInstanceModel.setTaskId(formInstance.getTaskId()); formInstanceModel.setProcessInstanceId(formInstance.getProcessInstanceId()); formInstanceModel.setProcessDefinitionId(formInstance.getProcessDefinitionId()); formInstanceModel.setSubmittedBy(formInstance.getSubmittedBy()); formInstanceModel.setSubmittedDate(formInstance.getSubmittedDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7543/buggy-version/modules.flowable-form-engine.src.main.java.org.flowable.form.engine.impl.cmd.GetFormInstanceModelCmd.java", "BodyUseAPI": ["org.flowable.form.api.FormInstance.getId()", "org.flowable.form.model.FormInstanceModel.setSubmittedBy(formInstance.getSubmittedBy())", "org.flowable.form.model.FormInstanceModel.setProcessInstanceId(formInstance.getProcessInstanceId())", "org.flowable.form.model.FormInstanceModel.setFormInstanceId(formInstance.getId())", "org.flowable.form.model.FormInstanceModel.setTaskId(formInstance.getTaskId())", "org.flowable.form.api.FormInstance.getProcessInstanceId()", "org.flowable.form.api.FormInstance.getTaskId()", "org.flowable.form.model.FormInstanceModel.setProcessDefinitionId(formInstance.getProcessDefinitionId())", "org.flowable.form.api.FormInstance.getSubmittedBy()", "org.flowable.form.api.FormInstance.getSubmittedDate()", "org.flowable.form.api.FormInstance.getProcessDefinitionId()", "org.flowable.form.model.FormInstanceModel.setSubmittedDate(formInstance.getSubmittedDate())"], "Fixed commit": "1fd84a8270de29f6131d834cbb3096d85799b1a4", "Url": "https://api.github.com/repos/yvoswillens/flowable-engine", "Date": "2017-06-27T07:57:23Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((i == (industrialscience.modules.research.frontend.TileEntities.CopierTile.PAGEINPUT)) && ((itemstack.itemID) == (industrialscience.modules.ResearchModule.researchNoteID))) || ((itemstack.itemID) == (industrialscience.modules.ResearchModule.researchbookID))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5054/buggy-version/common.industrialscience.modules.research.frontend.TileEntities.CopierTile.java", "BodyUseAPI": [], "Fixed commit": "af108e73e326e0074da71c2cc7e84355704f2582", "Url": "https://api.github.com/repos/IndustrialScienceTeam/Industrialscience", "Date": "2013-08-03T14:42:34Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (armorItem == (cyano.basemetals.init.Items.coldiron_helmet)) { if ((((player.inventory.armorItemInSlot(1).getItem()) == (cyano.basemetals.init.Items.coldiron_chestplate)) && ((player.inventory.armorItemInSlot(2).getItem()) == (cyano.basemetals.init.Items.coldiron_leggings))) && ((player.inventory.armorItemInSlot(3).getItem()) == (cyano.basemetals.init.Items.coldiron_boots))) { final net.minecraft.potion.PotionEffect fireProtection = new net.minecraft.potion.PotionEffect(12, cyano.basemetals.items.ItemMetalArmor.EFFECT_DURATION, 1); player.addPotionEffect(fireProtection); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4859/buggy-version/src.main.java.cyano.basemetals.items.ItemMetalArmor.java", "BodyUseAPI": [], "Fixed commit": "e7ab301bcf06ee5df65b6d3886cde8b8eadb3668", "Url": "https://api.github.com/repos/cyanobacterium/BaseMetals", "Date": "2015-02-13T13:15:10Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fichier_id != null) { fichier = utils.Connexion.getConnetion().request(\"fichier\", new org.bson.types.ObjectId(fichier_id)).as(models.Fichier.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/849/buggy-version/app.models.OeuvreTraitee.java", "BodyUseAPI": ["utils.Connexion.getConnetion().request(java.lang.String,org.bson.types.ObjectId)", "utils.Connexion.getConnetion().request(\"fichier\", new org.bson.types.ObjectId(fichier_id)).as(java.lang.Class)"], "Fixed commit": "3f97bf81f1753f442d42bf6301908bce9ca6e57d", "Url": "https://api.github.com/repos/kaplone/BEABAZ_REST", "Date": "2017-02-09T22:35:43Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newText != null) { this.text = newText.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2480/buggy-version/zeppelin-zengine.src.main.java.org.apache.zeppelin.notebook.Paragraph.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "3fb912e051ca8d9d01c67bffb62fea2d9dccac91", "Url": "https://api.github.com/repos/spacewalkman/incubator-zeppelin", "Date": "2016-11-29T06:53:43Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isRegex) try { java.util.regex.Pattern.compile(value); } catch (java.util.regex.PatternSyntaxException ex) { throw new mods.railcraft.common.blocks.signals.RoutingLogic.RoutingLogicException(\"railcraft.gui.routing.logic.regex.invalid\", line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4366/buggy-version/src.main.java.mods.railcraft.common.blocks.signals.RoutingLogic.java", "BodyUseAPI": [], "Fixed commit": "8f4c36cd5fddb59d2b257aed3dc7af13f47873ce", "Url": "https://api.github.com/repos/ssotangkur/Railcraft", "Date": "2015-02-27T22:11:23Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.turt2live.antishare.AntiShare.DEBUG_MODE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4708/buggy-version/src.com.turt2live.antishare.listener.ASListener.java", "BodyUseAPI": [], "Fixed commit": "017724ea3093608a95370ec885333737d154c1ff", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2012-03-29T23:38:53Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userPratilipi.getReviewDate()) == null) { notificationType = NotificationType.REVIEW_ADD.toString(); userPratilipi.setReviewDate(new java.util.Date()); }else notificationType = NotificationType.REVIEW_UPDATE.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6244/buggy-version/src.com.pratilipi.service.server.PratilipiServiceImpl.java", "BodyUseAPI": ["com.pratilipi.data.transfer.UserPratilipi.setReviewDate(java.util.Date)"], "Fixed commit": "89695375ea923cd1f4c84eb005a41f028b59e6a7", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-06-19T18:47:55Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (project.isFinished()) { createNode(eventWriter, \"timestamp\", project.getTimestamp().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/397/buggy-version/src.server.core.CreateXML.java", "BodyUseAPI": ["server.core.CreateXML.createNode(javax.xml.stream.XMLEventWriter,java.lang.String,project.getTimestamp().toString())", "model.project.Project.getTimestamp()", "project.getTimestamp().toString()"], "Fixed commit": "288a55f25333e9ec749878b700f93c53c8b75fd2", "Url": "https://api.github.com/repos/mammo0/PROJECT", "Date": "2015-01-22T19:08:19Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tokens.length) == 2) return tokens[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2538/buggy-version/xap-core.xap-datagrid.src.main.java.com.gigaspaces.internal.server.space.ZookeeperLastPrimaryHandler.java", "BodyUseAPI": [], "Fixed commit": "afb593c91ee63e5bcc763e4c60b1b4479704eadd", "Url": "https://api.github.com/repos/xap/xap", "Date": "2017-05-29T06:10:05Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (report.getIssues().isEmpty()) { try { javax.swing.SwingUtilities.invokeAndWait(new java.lang.Runnable() { public void run() { removeTabbedPane(); } }); } catch (java.lang.InterruptedException ex) { org.openide.util.Exceptions.printStackTrace(ex); } catch (java.lang.reflect.InvocationTargetException ex) { org.openide.util.Exceptions.printStackTrace(ex); } }else { report.pruneReport(org.gephi.desktop.importer.ReportPanel.ISSUES_LIMIT); fillIssues(report); fillReport(report); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3031/buggy-version/DesktopImport.src.org.gephi.desktop.importer.ReportPanel.java", "BodyUseAPI": ["org.gephi.desktop.importer.ReportPanel.fillIssues(org.gephi.io.importer.api.Report)", "org.gephi.io.importer.api.Report.pruneReport(int)", "org.gephi.desktop.importer.ReportPanel.fillReport(org.gephi.io.importer.api.Report)"], "Fixed commit": "42226f1956df917d48276891820ff5324e694541", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2012-05-06T22:38:15Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendaylight.yang.gen.v1.urn.tbd.params.xml.ns.yang.network.topology.rev131021.network.topology.topology.Node.getAugmentation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((ovsdbNodeAugmentation.getManagedNodeEntry()) != null) { for (org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.ovsdb.rev150105.ovsdb.node.attributes.ManagedNodeEntry managedNode : ovsdbNodeAugmentation.getManagedNodeEntry()) { transaction.delete(LogicalDatastoreType.OPERATIONAL, managedNode.getBridgeRef().getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4834/buggy-version/southbound.southbound-impl.src.main.java.org.opendaylight.ovsdb.southbound.transactions.md.OvsdbNodeRemoveCommand.java", "BodyUseAPI": ["org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.ovsdb.rev150105.OvsdbNodeAugmentation.getManagedNodeEntry()"], "Fixed commit": "ca5f134c0ea514d5c6b791419da0252e03cedf9b", "Url": "https://api.github.com/repos/opendaylight/ovsdb", "Date": "2015-03-13T21:09:48Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((min < (mBottom)) || (max > (mTop))) || (newBottom > (mBottom))) || (newTop < (mTop))) { setAxisRange(newTop, newBottom, mLeft); android.util.Log.w(\"RT\", (((\"setAxisRange, nT:\" + newTop) + \" nB:\") + newBottom)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2420/buggy-version/hellocharts-library.src.lecho.lib.hellocharts.view.RealTimeLineChartView.java", "BodyUseAPI": ["lecho.lib.hellocharts.view.RealTimeLineChartView.setAxisRange(float,float,float)", "android.util.Log.w(java.lang.String,java.lang.String)"], "Fixed commit": "dd885be55a98f085ac08e15c4dc6977b69a2281b", "Url": "https://api.github.com/repos/Thought-Technology-Ltd/hellocharts-android", "Date": "2015-08-12T18:57:47Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, it.polimi.spf.wfd.GOInternalClient>.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (c != null) { c.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8311/buggy-version/sPFWFDMid.src.main.java.it.polimi.spf.wfd.GroupOwnerActor.java", "BodyUseAPI": ["it.polimi.spf.wfd.GOInternalClient.recycle()"], "Fixed commit": "c1dfc8b8cfb2d97949f4aee415e385c9f6169f93", "Url": "https://api.github.com/repos/Ks89/SPF2", "Date": "2015-07-09T09:47:56Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.properties.isDebug()) { java.lang.System.out.println(solution.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8630/buggy-version/MVP.src.model.MyObservableModel.java", "BodyUseAPI": [], "Fixed commit": "c4a46bb6f5e34e8892ed4733ca184cbf630306a8", "Url": "https://api.github.com/repos/guygolanIL/MVP", "Date": "2015-10-20T18:53:15Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fsl.uiuc.Main.noticeOtherEvents) buildInvokeOtherMethod(definedClass);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7780/buggy-version/src.main.java.gen.InvokerGenerator.java", "BodyUseAPI": [], "Fixed commit": "07cf1e63fad470d24532b7e82687a506cbc379c8", "Url": "https://api.github.com/repos/runtimeverification/RV-Log", "Date": "2015-07-24T15:02:17Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scripts) != null) { jsonArray = new org.apache.sling.commons.json.JSONArray(java.util.Arrays.asList(scripts)); }else { jsonArray = new org.apache.sling.commons.json.JSONArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5496/buggy-version/core.src.main.java.com.nateyolles.sling.publick.components.admin.PageEdit.java", "BodyUseAPI": [], "Fixed commit": "c4c57014fa8456542cb05ab96587d8a2268aebe7", "Url": "https://api.github.com/repos/infielddigital/publick-sling-blog", "Date": "2015-12-08T17:22:47Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((links) != null) { jsonArray = new org.apache.sling.commons.json.JSONArray(java.util.Arrays.asList(links)); }else { jsonArray = new org.apache.sling.commons.json.JSONArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5496/buggy-version/core.src.main.java.com.nateyolles.sling.publick.components.admin.PageEdit.java", "BodyUseAPI": [], "Fixed commit": "c4c57014fa8456542cb05ab96587d8a2268aebe7", "Url": "https://api.github.com/repos/infielddigital/publick-sling-blog", "Date": "2015-12-08T17:22:47Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["research.experiment.datacollectiontools.ExperimentSetGenerator.getMasterForIssue(org.eclipse.egit.github.core.Issue)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((master.getNumber()) == (issue.getNumber())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8144/buggy-version/src.research.experiment.datacollectiontools.ExperimentSetGenerator.java", "BodyUseAPI": [], "Fixed commit": "86f64fdcf15b84d685550710cb899dfd0fbecf36", "Url": "https://api.github.com/repos/mantono/DuplicateSearcher", "Date": "2016-04-25T13:33:30Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((removeAtEnd) > 0) rec.trimEndBases(removeAtEnd);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9277/buggy-version/src.java.broad.pda.samtools.TrimFastqReads.java", "BodyUseAPI": [], "Fixed commit": "397963e87cddc6bcc06844e35a4086aea2e4d1b3", "Url": "https://api.github.com/repos/mgarber/scriptureV2", "Date": "2014-05-26T06:04:02Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (jsonObject1.isNull(\"jerseyNumber\")) { jerseyNumber = \"\"; }else { jerseyNumber = (jsonObject1.getInt(\"jerseyNumber\")) + \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/737/buggy-version/app.src.main.java.com.androidd.mehrdad.europeanleague.PlayerOfTeam.java", "BodyUseAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Fixed commit": "adb0138413cc855cdc402cf74c521427183e861a", "Url": "https://api.github.com/repos/mehrdad2329/EuropeanLeague", "Date": "2016-04-13T12:43:20Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((damage) > 0) { game.runLater(removeSelf); damage = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7430/buggy-version/Bullet-Inferno.src.se.dat255.bulletinferno.model.ProjectileImpl.java", "BodyUseAPI": [], "Fixed commit": "50f620a3bf908329727283a41c13ac3101175cda", "Url": "https://api.github.com/repos/Jokab/Bullet-Inferno", "Date": "2013-10-04T15:21:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (unMortgageConditionsAreMeet(property, this)) { changeCashBalanceBy(property.unMortgageAmount()); property.setIsMortgaged(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4110/buggy-version/Kata-Monopoly.src.pkg.monopoly.Player.java", "BodyUseAPI": ["pkg.monopoly.Property.unMortgageAmount()", "pkg.monopoly.Player.changeCashBalanceBy(property.unMortgageAmount())", "pkg.monopoly.Property.setIsMortgaged(boolean)"], "Fixed commit": "d47e1895f9c9dc55ddface3845b9dd935b033f5c", "Url": "https://api.github.com/repos/bravogolfgolf/Miscellaneous", "Date": "2016-02-22T17:47:25Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mortgageConditionsAreMeet(property, this)) { changeCashBalanceBy(property.mortgageAmount()); property.setIsMortgaged(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4110/buggy-version/Kata-Monopoly.src.pkg.monopoly.Player.java", "BodyUseAPI": ["pkg.monopoly.Property.mortgageAmount()", "pkg.monopoly.Player.changeCashBalanceBy(property.mortgageAmount())", "pkg.monopoly.Property.setIsMortgaged(boolean)"], "Fixed commit": "d47e1895f9c9dc55ddface3845b9dd935b033f5c", "Url": "https://api.github.com/repos/bravogolfgolf/Miscellaneous", "Date": "2016-02-22T17:47:25Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((department.equals(\"kike\")) && (course.getTeacher().isEmpty())) { if ((stringHelper.extractPattern(teacher, coursePattern.getKikeTeacher())) != null) { course = findTeacher(teacher, course); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5508/buggy-version/src.main.java.org.ltky.parser.HtmlParser.java", "BodyUseAPI": ["org.ltky.parser.HtmlParser.findTeacher(java.lang.String,org.ltky.entity.Course)"], "Fixed commit": "ea6304d98e1e2314d760c09bc66123a7cec10ed9", "Url": "https://api.github.com/repos/Laastine/lukkarimaatti", "Date": "2014-01-16T19:14:42Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unibz.krdb.obda.utils.MetaMappingExpander.getVariablesInTemplate(it.unibz.krdb.obda.model.Function,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (varsInTemplate.isEmpty()) { throw new java.lang.IllegalArgumentException(\"No Variables could be found for this metamapping. Check that the variable in the metamapping is enclosed in a URI, for instance http://.../{var}\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4622/buggy-version/obdalib-core.src.main.java.it.unibz.krdb.obda.utils.MetaMappingExpander.java", "BodyUseAPI": [], "Fixed commit": "89dc3f54edd9d674b30a27f0f47e134873fc3a20", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2013-12-11T14:33:58Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.com.dius.pact.consumer.dsl.DslPart.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (objBody instanceof java.lang.String) body.put(new groovy.json.JsonSlurper().parseText(((java.lang.String) (objBody)))); else body.put(object.getBody());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/845/buggy-version/pact-jvm-consumer.src.main.java.au.com.dius.pact.consumer.dsl.PactDslJsonArray.java", "BodyUseAPI": [], "Fixed commit": "44d6a87e9636d2a1a908f0ed9afe1782c5bee73b", "Url": "https://api.github.com/repos/coding-yogi/pact-jvm", "Date": "2017-03-21T11:14:14Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (error != null) { if (error.equals(\"Leere Koordinate.\")) return new de.schildbach.pte.dto.NearbyLocationsResult(new de.schildbach.pte.dto.ResultHeader(NetworkId.VRS, de.schildbach.pte.VrsProvider.SERVER_PRODUCT, null, 0, null), locations); else if (error.equals(\"ASS2-Server lieferte leere Antwort.\")) return new de.schildbach.pte.dto.NearbyLocationsResult(new de.schildbach.pte.dto.ResultHeader(NetworkId.VRS, de.schildbach.pte.VrsProvider.SERVER_PRODUCT), NearbyLocationsResult.Status.SERVICE_DOWN); else throw new java.lang.IllegalStateException((\"unknown error: \" + error)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5634/buggy-version/enabler.src.de.schildbach.pte.VrsProvider.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "a362d212fd48af28a89effdda31f52b7c5c566c9", "Url": "https://api.github.com/repos/mdyrna/public-transport-enabler", "Date": "2015-03-02T15:01:42Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(singlePlayer)) { deckView.setRoundTick(roundTimeLeft); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3303/buggy-version/AndroidRally.src.se.chalmers.dryleafsoftware.androidrally.libgdx.GdxGame.java", "BodyUseAPI": [], "Fixed commit": "5eed370003916ba50142879fe4061ac2add44f5c", "Url": "https://api.github.com/repos/lucaspi/AndroidRally", "Date": "2013-10-14T14:07:37Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(content.substring(((content.length()) - 1), content.length()).contains(\"?\"))) mmOutStream.write(((byte) (ret)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7851/buggy-version/app.src.main.java.com.cisco.prototype.ledsignaldetection.BluetoothActivity.java", "BodyUseAPI": [], "Fixed commit": "4d2f75d3a93416041100e1534c37e1fca7beac71", "Url": "https://api.github.com/repos/seanDoJo/LEDApplication", "Date": "2015-07-20T10:20:03Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) != null) connection.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7851/buggy-version/app.src.main.java.com.cisco.prototype.ledsignaldetection.BluetoothActivity.java", "BodyUseAPI": [], "Fixed commit": "4d2f75d3a93416041100e1534c37e1fca7beac71", "Url": "https://api.github.com/repos/seanDoJo/LEDApplication", "Date": "2015-07-20T10:20:03Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) != null) connection.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7851/buggy-version/app.src.main.java.com.cisco.prototype.ledsignaldetection.BluetoothActivity.java", "BodyUseAPI": [], "Fixed commit": "4d2f75d3a93416041100e1534c37e1fca7beac71", "Url": "https://api.github.com/repos/seanDoJo/LEDApplication", "Date": "2015-07-20T10:20:03Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numParameters > 4) version = ((org.infinispan.container.versioning.EntryVersion) (parameters[(i++)])); else version = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5791/buggy-version/core.src.main.java.org.infinispan.statetransfer.StateRequestCommand.java", "BodyUseAPI": [], "Fixed commit": "82e0cf06788f53d8892ecad5b7b00d1f11bae178", "Url": "https://api.github.com/repos/sebastianopeluso/infinispan", "Date": "2013-10-06T11:19:44Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (init) { initLevel(gameView.lvl.getCurrentLevel()); lastPressed = gameView.lvl.getStartingCase(); textNbMoves.setText(java.lang.String.valueOf((((gameView.lvl.getNbMoves()) + \"/\") + (gameView.lvl.getMaxNbMoves())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/100/buggy-version/app.src.main.java.com.example.dc.colorflood.Game.java", "BodyUseAPI": [], "Fixed commit": "318fb2215b40380165f647ef81bba0dfa984b4bc", "Url": "https://api.github.com/repos/dc-p8/colorflood", "Date": "2017-12-02T23:46:51Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) == null) { e.setStackTrace(newTrace); e.printStackTrace(); }else { e.getCause().setStackTrace(newTrace); e.getCause().printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4200/buggy-version/src.main.java.net.xprova.piccolo.Console.java", "BodyUseAPI": ["java.lang.Exception.getCause()", "java.lang.Exception.printStackTrace()", "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])", "java.lang.Exception.getCause()", "java.lang.Throwable.printStackTrace()", "java.lang.Exception.setStackTrace(java.lang.StackTraceElement[])"], "Fixed commit": "7a29afff90c170bb1f588df92d29e2e94bec361f", "Url": "https://api.github.com/repos/xprova/piccolo-cli-lib", "Date": "2016-07-16T16:58:31Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.gojek.carparking.main.RequestHandler.commandMap) == null) { com.gojek.carparking.main.RequestHandler.prepareCommandMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5802/buggy-version/src.main.java.com.gojek.carparking.main.RequestHandler.java", "BodyUseAPI": [], "Fixed commit": "eb69209991e13aebb4b70f0e217051b79f3d28c5", "Url": "https://api.github.com/repos/badalb/gojek-car-parking", "Date": "2017-04-11T02:52:08Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hrtptr) != null) { hrtptr.dispose(); hrtptr = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5119/buggy-version/src.haven.GameUI.java", "BodyUseAPI": [], "Fixed commit": "6b4a585205471144d67ea731814bcac6acdc8a3f", "Url": "https://api.github.com/repos/DonnEssime/Custom-Salem", "Date": "2013-09-14T11:58:46Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["haven.FlatnessTool.instance(haven.RootWidget)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (ft != null) ft.toggle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5119/buggy-version/src.haven.RootWidget.java", "BodyUseAPI": ["haven.FlatnessTool.toggle()"], "Fixed commit": "6b4a585205471144d67ea731814bcac6acdc8a3f", "Url": "https://api.github.com/repos/DonnEssime/Custom-Salem", "Date": "2013-09-14T11:58:46Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.ldap.internal.DefaultPortalLDAP._getAttributes(javax.naming.ldap.LdapContext,java.lang.String,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((attributes == null) || ((attributes.size()) == 0)) { com.liferay.portal.ldap.internal.DefaultPortalLDAP._log.debug((\"No LDAP user attributes found for:: \" + fullDistinguishedName)); }else { for (java.lang.String attributeId : mappedUserAttributeIds) { javax.naming.directory.Attribute attribute = attributes.get(attributeId); if (attribute == null) { continue; } com.liferay.portal.ldap.internal.DefaultPortalLDAP._log.debug((\"LDAP user attribute \" + (attribute.toString()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2808/buggy-version/modules.portal.portal-ldap.src.main.java.com.liferay.portal.ldap.internal.DefaultPortalLDAP.java", "BodyUseAPI": ["javax.naming.directory.Attributes.get(java.lang.String)"], "Fixed commit": "0046b279ae90aa0f7ed870dd8212bf176eaf7ed0", "Url": "https://api.github.com/repos/dantewang/liferay-portal", "Date": "2015-12-02T02:26:42Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.ldap.internal.DefaultPortalLDAP._getAttributes(javax.naming.ldap.LdapContext,java.lang.String,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((attributes == null) || ((attributes.size()) == 0)) { com.liferay.portal.ldap.internal.DefaultPortalLDAP._log.debug((\"No LDAP group attributes found for:: \" + fullDistinguishedName)); }else { for (java.lang.String attributeId : mappedGroupAttributeIds) { javax.naming.directory.Attribute attribute = attributes.get(attributeId); if (attribute == null) { continue; } com.liferay.portal.ldap.internal.DefaultPortalLDAP._log.debug((\"LDAP group attribute \" + (attribute.toString()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2808/buggy-version/modules.portal.portal-ldap.src.main.java.com.liferay.portal.ldap.internal.DefaultPortalLDAP.java", "BodyUseAPI": ["javax.naming.directory.Attributes.get(java.lang.String)"], "Fixed commit": "0046b279ae90aa0f7ed870dd8212bf176eaf7ed0", "Url": "https://api.github.com/repos/dantewang/liferay-portal", "Date": "2015-12-02T02:26:42Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (number == 1) number = 4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/9074/buggy-version/Grille.java", "BodyUseAPI": [], "Fixed commit": "5ceec9b98691f1d1ec4f14300a0a1c69042c5b88", "Url": "https://api.github.com/repos/meghazii/2048-iut", "Date": "2016-11-02T14:32:45Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loanRecurrenceTypeId == 1) { if (meetingDto.getMeetingDetailsDto().getRecurrenceDetails().getWeekOfMonth().equals(0)) { recurringSchedule = new org.mifos.clientportfolio.loan.service.MonthlyOnDayOfMonthSchedule(meetingEvery, meetingDto.getMeetingDetailsDto().getRecurrenceDetails().getDayOfWeek()); }else { recurringSchedule = new org.mifos.clientportfolio.loan.service.MonthlyOnWeekOfMonthSchedule(meetingEvery, meetingDto.getMeetingDetailsDto().getRecurrenceDetails().getWeekOfMonth(), meetingDto.getMeetingDetailsDto().getRecurrenceDetails().getDayOfWeek()); } }else if (loanRecurrenceTypeId == 2) { recurringSchedule = new org.mifos.clientportfolio.loan.service.WeeklySchedule(meetingEvery, meetingDto.getMeetingDetailsDto().getRecurrenceDetails().getDayOfWeek()); }else if (loanRecurrenceTypeId == 3) { recurringSchedule = new org.mifos.clientportfolio.loan.service.DailySchedule(meetingEvery); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/955/buggy-version/appdomain.src.main.java.org.mifos.application.importexport.servicefacade.ImportLoansSavingsFacadeWebTier.java", "BodyUseAPI": [], "Fixed commit": "970a67f9b57ea7bc5fe6d0cf6b1e656cfe8fc19e", "Url": "https://api.github.com/repos/lrozanski/head", "Date": "2013-03-25T16:06:50Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((new java.util.Random().nextDouble()) > (org.github.MrCrime.More_Dangers.Main.getWebChance())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/150/buggy-version/src.main.java.org.github.MrCrime.More_Dangers.spiderwebs.SpiderAttackListener.java", "BodyUseAPI": [], "Fixed commit": "6e17367f210f75af7a13ebe0f8dfaba8a22ceff9", "Url": "https://api.github.com/repos/LMiljak/More-Dangers", "Date": "2015-08-21T12:39:40Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (RILJ_LOGD) unsljLogRet(response, ret);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4703/buggy-version/telephony.java.com.android.internal.telephony.SamsungRIL.java", "BodyUseAPI": [], "Fixed commit": "10c967cfd88d57eb65c44d2b2a08737447d264d2", "Url": "https://api.github.com/repos/EpicCM/android_frameworks_base", "Date": "2012-07-26T23:32:33Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.getTargetBlock().getLocation().isPresent())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4888/buggy-version/src.main.java.com.arckenver.mightyloot.listener.InteractListener.java", "BodyUseAPI": [], "Fixed commit": "7eea91d0222e937cd1fcc941ab4976a9279a47af", "Url": "https://api.github.com/repos/Arckenver/MightyLoot", "Date": "2016-04-11T13:49:40Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.rhn.frontend.action.kickstart.AdvancedModeDetailsAction.getData(com.redhat.rhn.frontend.struts.RequestContext,org.apache.struts.action.DynaActionForm)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileData == null) { fileData = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8715/buggy-version/java.code.src.com.redhat.rhn.frontend.action.kickstart.AdvancedModeDetailsAction.java", "BodyUseAPI": [], "Fixed commit": "4c5ff6027c516ab2b5e5fe0436142f6c4ddd60d9", "Url": "https://api.github.com/repos/spacewalkproject/spacewalk", "Date": "2017-01-05T12:17:52Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectorToReturn instanceof ca.concordia.cssanalyser.cssmodel.selectors.SimpleSelector) simpleSelector = ((ca.concordia.cssanalyser.cssmodel.selectors.SimpleSelector) (selectorToReturn)); else simpleSelector = ((ca.concordia.cssanalyser.cssmodel.selectors.Combinator) (selectorToReturn)).getRightHandSideSelector();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2113/buggy-version/src.ca.concordia.cssanalyser.parser.flute.CSSDocumentHandler.java", "BodyUseAPI": [], "Fixed commit": "91065011ab01f11ba072d2243434496dceb32687", "Url": "https://api.github.com/repos/dmazinanian/css-analyser", "Date": "2014-10-31T21:13:34Z"},
{"Line": "=>1158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getActionCommand().equals(\"Hide/show toolbar\")) { tlb.setVisible((!(tlb.isVisible()))); }else { net.sf.jabref.Util.pr(((\"Action '\" + (command)) + \"' must be disabled when no database is open.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4219/buggy-version/src.main.java.net.sf.jabref.JabRefFrame.java", "BodyUseAPI": [], "Fixed commit": "c2e17720a3b618bd3ad8b9438f75edcb36772a0d", "Url": "https://api.github.com/repos/JabRef/jabref", "Date": "2015-05-31T18:12:31Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (handled) { closeDrawer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7514/buggy-version/smash-ranks-android.app.src.main.java.com.garpr.android.activities.BaseToolbarActivity.java", "BodyUseAPI": [], "Fixed commit": "4d28971559e0dc9c5d7b64061020c2da032ababd", "Url": "https://api.github.com/repos/TheTurok/smash-ranks-android", "Date": "2015-08-20T06:07:48Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (autopad.Interpreter.targetpath.equals(\"./out/\")) { java.lang.String tarstr = java.lang.System.getProperty(\"user.dir\"); if (tarstr.contains(\"\\\\\")) { tarstr = tarstr + \"\\\\out\\\\\"; }else { tarstr = tarstr + \"/out/\"; } autopad.Interpreter.targetpath = tarstr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4890/buggy-version/AutoPAD.AutoPAD.src.autopad.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "f6bc4e383f134c8fb6ebc5100d5162aaf3e7b216", "Url": "https://api.github.com/repos/MaceLab/AutoPAD", "Date": "2017-09-08T13:13:09Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { newsModel = new silent.kuasapmaterial.models.NewsModel(); newsModel.image = savedInstanceState.getString(\"newsImage\"); newsModel.url = savedInstanceState.getString(\"newsUrl\"); newsModel.title = savedInstanceState.getString(\"newsTitle\"); newsModel.content = savedInstanceState.getString(\"newsContent\"); newsModel.weight = savedInstanceState.getInt(\"newsWeight\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6017/buggy-version/KUAS-AP-Material.app.src.main.java.silent.kuasapmaterial.fragment.NewsFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)", "android.os.Bundle.getString(java.lang.String)", "android.os.Bundle.getInt(java.lang.String)", "android.os.Bundle.getString(java.lang.String)", "android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "829871f56e406c3b536b6bcfcd6f8a34c0f52759", "Url": "https://api.github.com/repos/abc873693/KUAS-AP-Material", "Date": "2017-09-29T15:49:17Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getLastFragment()) != null) && (getLastFragment().equals(Fragment_Buyer_ViewCart.TAG))) { replaceFragment(new madelyntav.c4q.nyc.chipchop.fragments.Fragment_Buyer_Map()); }else { replaceFragment(new madelyntav.c4q.nyc.chipchop.fragments.Fragment_Buyer_SellerProfile()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/966/buggy-version/app.src.main.java.madelyntav.c4q.nyc.chipchop.BuyActivity.java", "BodyUseAPI": [], "Fixed commit": "89251bc23104a351f17fb071df321d1e61bf4f8d", "Url": "https://api.github.com/repos/AnthonyFermin/Chip-Chop", "Date": "2015-09-08T23:03:57Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.szs.quickview.popup.actions.ViewAction.getProWebName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (webName == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1243/buggy-version/src.com.szs.quickview.popup.actions.ViewAction.java", "BodyUseAPI": [], "Fixed commit": "c198caef6729de2220ed61e74ca0f9e8361810d0", "Url": "https://api.github.com/repos/sunzsh/quickview", "Date": "2015-08-23T07:26:02Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Material.getMaterial(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (material != null) is = new org.bukkit.inventory.ItemStack(material); else { sender.sendMessage(((((org.bukkit.ChatColor.RED) + \"Item inconnu : \") + (org.bukkit.ChatColor.ITALIC)) + (args[1]))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4759/buggy-version/src.fr.mathdu07.visualshop.command.VsCreateCommand.java", "BodyUseAPI": [], "Fixed commit": "c4125e43721335d29a39bec538ebf28e320d1ad4", "Url": "https://api.github.com/repos/mathdu07/VisualShop", "Date": "2013-10-03T19:41:04Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["samlResponse.getDOM().getAttributeNodeNS(<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (idAttr != null) { samlResponse.getDOM().setIdAttributeNode(idAttr, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6172/buggy-version/rt.rs.security.sso.saml.src.main.java.org.apache.cxf.rs.security.saml.sso.SAMLProtocolResponseValidator.java", "BodyUseAPI": ["samlResponse.getDOM().setIdAttributeNode(org.w3c.dom.Attr,boolean)"], "Fixed commit": "efde6fe8b35019d4845b9d3f757c2fda6e0e9773", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-08-15T16:48:04Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["samlResponse.getDOM().getAttributeNodeNS(<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (idAttr != null) { samlResponse.getDOM().setIdAttributeNode(idAttr, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6172/buggy-version/rt.rs.security.sso.saml.src.main.java.org.apache.cxf.rs.security.saml.sso.SAMLProtocolResponseValidator.java", "BodyUseAPI": ["samlResponse.getDOM().setIdAttributeNode(org.w3c.dom.Attr,boolean)"], "Fixed commit": "efde6fe8b35019d4845b9d3f757c2fda6e0e9773", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-08-15T16:48:04Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parent == null) { ((org.zkoss.zk.ui.sys.ComponentCtrl) (_host)).removeShadowRoot(this); }else if ((_host.getParent()) == null) { onHostAttached(_host); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1766/buggy-version/zk.src.org.zkoss.zk.ui.HtmlShadowElement.java", "BodyUseAPI": [], "Fixed commit": "310ab9b3a9d58361d8f6bb9da6659c40b90d49d8", "Url": "https://api.github.com/repos/DevChu/zk", "Date": "2015-01-06T02:30:54Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request().body().asText()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (item == null) { java.util.Map<java.lang.String, java.lang.String[]> form = request().body().asFormUrlEncoded(); item = ((java.lang.String) (form.keySet().toArray()[0])); if (item == null) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/5991/buggy-version/app.controllers.ListController.java", "BodyUseAPI": [], "Fixed commit": "5bd0cda803e04b4df7f8699f77e0b90df3441503", "Url": "https://api.github.com/repos/DarrenCattle/play-rest-lists", "Date": "2017-04-05T22:24:40Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (is != null) { is.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7744/buggy-version/netsecurity.src.main.java.com.commonsware.cwac.netsecurity.conscrypt.TrustedCertificateStore.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "97ba26704655009ae4b46d5d7857757cb74ec4d2", "Url": "https://api.github.com/repos/commonsguy/cwac-netsecurity", "Date": "2016-11-28T14:54:31Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (os != null) { os.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7744/buggy-version/netsecurity.src.main.java.com.commonsware.cwac.netsecurity.conscrypt.TrustedCertificateStore.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "97ba26704655009ae4b46d5d7857757cb74ec4d2", "Url": "https://api.github.com/repos/commonsguy/cwac-netsecurity", "Date": "2016-11-28T14:54:31Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (in != null) { in.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7744/buggy-version/netsecurity.src.main.java.com.commonsware.cwac.netsecurity.config.ResourceCertificateSource.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "97ba26704655009ae4b46d5d7857757cb74ec4d2", "Url": "https://api.github.com/repos/commonsguy/cwac-netsecurity", "Date": "2016-11-28T14:54:31Z"},
{"Line": "=>850", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.serialization.serializer.OJSONReader.readString(OJSONReader.NEXT_IN_OBJECT)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(cls.getName().equalsIgnoreCase(shortName))) cls.setShortName(shortName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4536/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.tool.ODatabaseImport.java", "BodyUseAPI": ["com.orientechnologies.orient.core.metadata.schema.OClassImpl.setShortName(java.lang.String)"], "Fixed commit": "d25d76784f197df8e393a5a4c0120a031f38ec49", "Url": "https://api.github.com/repos/micha-nerdlichter/orientdb", "Date": "2015-10-05T16:45:54Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (causingEntity == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3925/buggy-version/game.src.main.java.dev.game.spacechaos.game.entities.component.combat.RewardComponent.java", "BodyUseAPI": [], "Fixed commit": "a689e82237549966e3f6fb99f4b35cd54932bc76", "Url": "https://api.github.com/repos/opensourcegamedev/SpaceChaos", "Date": "2017-06-04T17:57:29Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<fr.gbloquel.codestory.jajascript.Command>.get(int)", "com.google.common.collect.Maps.newHashMap()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((bestHourProfits.get(currentCommand.getStartTime())) == null) || (((bestHourProfits.get(currentCommand.getStartTime())) != null) && ((bestHourProfits.get(currentCommand.getStartTime())) < (currentCommand.getPrice())))) { bestHourProfits.put(currentCommand.getStartTime(), currentCommand.getPrice()); bestPlanningCommands.put(currentCommand.getStartTime(), new fr.gbloquel.codestory.jajascript.PlanningCommand(currentCommand)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4463/buggy-version/src.main.java.fr.gbloquel.codestory.services.JajaScriptResource.java", "BodyUseAPI": ["fr.gbloquel.codestory.jajascript.Command.getStartTime()", "fr.gbloquel.codestory.jajascript.Command.getPrice()", "java.util.Map<java.lang.Integer, java.lang.Long>.put(currentCommand.getStartTime(),currentCommand.getPrice())", "java.util.Map<java.lang.Integer, fr.gbloquel.codestory.jajascript.PlanningCommand>.put(currentCommand.getStartTime(),fr.gbloquel.codestory.jajascript.PlanningCommand)", "fr.gbloquel.codestory.jajascript.Command.getStartTime()"], "Fixed commit": "87afd012eca1cf934e4e3305058c84928595ea92", "Url": "https://api.github.com/repos/gbloquel/codestory", "Date": "2013-01-27T20:55:58Z"},
{"Line": "=>709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxZoomLevel) <= 0) { setMaxZoomLevel(((metadata.length) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/1369/buggy-version/mrgeo-core.src.main.java.org.mrgeo.image.MrsImagePyramidMetadata.java", "BodyUseAPI": [], "Fixed commit": "9590e69f8a041aadd62ad3d2f06218a31a8cf070", "Url": "https://api.github.com/repos/ngageoint/mrgeo", "Date": "2015-03-09T14:44:14Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((indentationIndices.size()) <= listIndentationIndex) { indentationIndices.add(0); }else if (equalLevelList && (!(listKey.equals(key)))) { indentationIndices.set(listIndentationIndex, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/4385/buggy-version/src.at.pcgamingfreaks.yaml.YAML.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.set(int,int)", "java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "e4e9203ffc152cfa593b4f06fa9a6d0f338a8e7e", "Url": "https://api.github.com/repos/MarkusWME/YAML-Parser", "Date": "2016-11-10T20:21:29Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getProperty(\"derby.drda.timeSlice\")) == null) java.lang.System.setProperty(\"derby.drda.timeSlice\", \"60000\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6398/buggy-version/splice_machine.src.main.java.com.splicemachine.derby.impl.db.SpliceDatabase.java", "BodyUseAPI": [], "Fixed commit": "a12dd496407da118d7933275fa1c80a9a70dde12", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2017-07-28T16:48:30Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((encoder) == null) { synchronized(this) { if ((encoder) == null) { if (os.isStreaming()) { encoder = new jetbrick.template.parser.ast.AstText.ByteArrayEncoder(text, os.getCharset()); }else { if (jetbrick.util.JdkUtils.IS_AT_LEAST_JAVA_7) { encoder = new jetbrick.template.parser.ast.AstText.Jdk7CharArrayEncoder(text); }else { encoder = new jetbrick.template.parser.ast.AstText.Jdk6CharArrayEncoder(text); } } text = null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/8870/buggy-version/jetbrick-template.src.main.java.jetbrick.template.parser.ast.AstText.java", "BodyUseAPI": [], "Fixed commit": "e561d41f0fea0c4f2da6f4019f355b23cbd80d39", "Url": "https://api.github.com/repos/subchen/jetbrick-template-2x", "Date": "2017-07-28T06:51:09Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content) != null) { newStatus = replaceVariables(content, build.getEnvironment(listener)); }else { newStatus = createTwitterStatusMessage(build); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/7110/buggy-version/src.main.java.hudson.plugins.twitter.TwitterPublisher.java", "BodyUseAPI": [], "Fixed commit": "278f653ba69dd9ac5a462b91ce54d775838d7633", "Url": "https://api.github.com/repos/lvotypko/twitter-plugin", "Date": "2012-12-04T13:38:54Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resource) == null) { resource = command.getFormattedResult(); if ((resource) == \"\") { resource = \"undefined\"; } dataset.put(\"vehicle\", resource); dataset.synchronize(new com.amazonaws.mobileconnectors.cognito.DefaultSyncCallback() { @java.lang.Override public void onSuccess(com.amazonaws.mobileconnectors.cognito.Dataset dataset, java.util.List newRecords) { android.util.Log.d(com.github.pires.obd.reader.activity.MainActivity.TAG, \"Sync AWS Success\"); } }); }else { android.widget.TextView existingTV = ((android.widget.TextView) (vv.findViewWithTag(\"VIN_from_resource\"))); existingTV.setText(resource); if (!(java.util.Objects.equals(resource, command.getFormattedResult()))) { resource = command.getFormattedResult(); dataset.put(\"vehicle\", resource); dataset.synchronize(new com.amazonaws.mobileconnectors.cognito.DefaultSyncCallback() { @java.lang.Override public void onSuccess(com.amazonaws.mobileconnectors.cognito.Dataset dataset, java.util.List newRecords) { android.util.Log.d(com.github.pires.obd.reader.activity.MainActivity.TAG, \"Sync AWS Success\"); } }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6448/buggy-version/src.main.java.com.github.pires.obd.reader.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "69ff8063def6340c0dead44ae121c46a4f2e31db", "Url": "https://api.github.com/repos/aschiffler/android-obd-kinesis-producer", "Date": "2015-12-30T15:30:41Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 1) { java.lang.System.out.println(\"\u4e88\u671f\u305b\u306c\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3053/buggy-version/src.jp.alhinc.watanabe_akihiro.calculate_sales.CalculateSales.java", "BodyUseAPI": [], "Fixed commit": "6000f43650db21fd93a46deb74c40d484a76d100", "Url": "https://api.github.com/repos/Watanabe-Akihiro/tutorial", "Date": "2017-04-17T06:56:38Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.hasPotionEffect(PotionEffectType.SPEED)) { return (x > (net.h31ix.anticheat.manage.Backend.XZ_SPEED_MAX_POTION)) || (z > (net.h31ix.anticheat.manage.Backend.XZ_SPEED_MAX_POTION)); }else { return (x > (net.h31ix.anticheat.manage.Backend.XZ_SPEED_MAX_SPRINT)) || (z > (net.h31ix.anticheat.manage.Backend.XZ_SPEED_MAX_SPRINT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/2709/buggy-version/src.main.java.net.h31ix.anticheat.manage.Backend.java", "BodyUseAPI": [], "Fixed commit": "70c486376b7b14bcdb03faa1c85d3e43295652a7", "Url": "https://api.github.com/repos/h31ix/AntiCheat", "Date": "2012-05-31T22:37:27Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastEntity) != null) lastEntity.clear(); else lastEntity = new java.util.HashMap<org.bukkit.entity.EntityType, org.bukkit.entity.Entity>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/6258/buggy-version/src.main.java.com.sk89q.craftbook.circuits.gates.world.entity.AnimalBreeder.java", "BodyUseAPI": [], "Fixed commit": "d8c27ce48e52f258b22b23ebcdf683ef66142d21", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-04-22T06:26:51Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Network.gameserver.GameServerListener.get(c.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((player.getTeam()) != 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V128/3132/buggy-version/src.Network.gameserver.GameServerListener.java", "BodyUseAPI": [], "Fixed commit": "4b97047d310b3c7f9991fae2e808ebbc3ef3b130", "Url": "https://api.github.com/repos/QuentinDel/NVE-Project", "Date": "2017-12-29T13:32:06Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mol.getPosition().getY()) <= (mol.getRadius())) || ((mol.getPosition().getY()) >= ((GUI.WINDOW_HEIGHT) - (mol.getRadius())))) { collideYVel = (mol.getVelocity().getY()) * (-0.75); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5259/buggy-version/World.java", "BodyUseAPI": ["mol.getVelocity().getY()", "Molecule.getVelocity()"], "Fixed commit": "cf4e7ec6b94464b1e2deb48db210913c5e12cd14", "Url": "https://api.github.com/repos/aaronwilhelm1/EmergentFluid", "Date": "2017-06-19T00:10:29Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mol.getPosition().getX()) <= (mol.getRadius())) || ((mol.getPosition().getX()) >= ((GUI.WINDOW_WIDTH) - (mol.getRadius())))) { collideXVel = (mol.getVelocity().getX()) * (-0.75); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5259/buggy-version/World.java", "BodyUseAPI": ["mol.getVelocity().getX()", "Molecule.getVelocity()"], "Fixed commit": "cf4e7ec6b94464b1e2deb48db210913c5e12cd14", "Url": "https://api.github.com/repos/aaronwilhelm1/EmergentFluid", "Date": "2017-06-19T00:10:29Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((interactions.size()) <= j) { interactions.add(values); }else { interactions.get(j).putAll(values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1105/buggy-version/eol-globi-rest.src.main.java.org.eol.globi.server.util.ResultFormatterJSONv2.java", "BodyUseAPI": ["java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(java.util.Map<java.lang.String, java.lang.Object>)", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.get(int)", "java.util.Map<java.lang.String, java.lang.Object>.putAll(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "c4bb65c065a436ac57c7e85de9cc8eb195b7bb0d", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2015-03-10T20:07:34Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (i < 0) { if (newExtraParams == null) { newExtraParams = termPart; }else { newExtraParams += \"&\" + termPart; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6993/buggy-version/src.main.java.au.org.ala.spatial.util.BiocacheQuery.java", "BodyUseAPI": [], "Fixed commit": "3305305ed331aff0aaab8ad99c8634c132b2c4e0", "Url": "https://api.github.com/repos/AtlasOfLivingAustralia/spatial-portal", "Date": "2017-09-11T02:13:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (template != null) return template.getReference(resource);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2467/buggy-version/platform.dtf-core.src.main.java.com.pslcl.dtf.core.generator.template.Template.java", "BodyUseAPI": ["com.pslcl.dtf.core.generator.template.Template.getReference(com.pslcl.dtf.core.generator.resource.Resource)"], "Fixed commit": "9b411d025704357258cf469e4c7efc7053d22d7d", "Url": "https://api.github.com/repos/PSLCL/testing-framework", "Date": "2017-07-20T20:04:08Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(nomediaFile.exists())) com.marz.snapprefs.MainActivity.writeNoMediaFile(((com.marz.snapprefs.Preferences.getSavePath()) + \"/LensIcon/\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8120/buggy-version/app.src.main.java.com.marz.snapprefs.Util.LensIconLoader.java", "BodyUseAPI": [], "Fixed commit": "9b71cd5b38b507c3b885f256f7a506a59e5f0f6e", "Url": "https://api.github.com/repos/M1kep/Snapprefs", "Date": "2016-09-28T15:57:21Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.core.HttpHeaders.getAcceptableMediaTypes()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((accepts != null) && ((accepts.size()) > 0)) { javax.ws.rs.core.MediaType mediaType = accepts.get(0); responseBuilder = responseBuilder.type(mediaType); }else { responseBuilder = responseBuilder.type(headers.getMediaType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3211/buggy-version/src.plugins.restAPI.src.java.org.jivesoftware.openfire.plugin.rest.exceptions.RESTExceptionMapper.java", "BodyUseAPI": ["java.util.List<javax.ws.rs.core.MediaType>.get(int)"], "Fixed commit": "eb8c3bd15d71879a74b3b47c812ccace8e496b25", "Url": "https://api.github.com/repos/Redor/Openfire", "Date": "2015-09-16T20:56:46Z"},
{"Line": "=>1322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((year) == 0) { if ((((alarm.month) < nowMonth) || (((alarm.day) < nowMonthDay) && ((alarm.month) == nowMonth))) || ((((alarm.hour) < nowHour) && ((alarm.day) == nowMonthDay)) && ((alarm.month) == nowMonth))) { alarm.year = nowYear + 1; }else { alarm.year = nowYear; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8167/buggy-version/src.me.justin.parser.ReminderParser.java", "BodyUseAPI": [], "Fixed commit": "cccc8299b4ca4d8a438c55340b7ab01242608e5c", "Url": "https://api.github.com/repos/shijian95/StringParser", "Date": "2015-10-22T11:20:14Z"},
{"Line": "=>832", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.api.service.impl.resource.ProjectService.getObjectById(java.net.URI,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((vnas.getProject()) == null) && (vnas.getVNasState().equalsIgnoreCase(VirtualNAS.vNasState.Loaded.name()))) { validNas.add(id); vnas.setProject(project.getId()); _dbClient.persistObject(vnas); com.emc.storageos.api.service.impl.resource.ProjectService._log.info(\"VNAS server {} successfully assigned to project {} \", vnas.getLabel(), project.getLabel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3183/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ProjectService.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.VirtualNAS.getLabel()", "com.emc.storageos.db.client.model.VirtualNAS.setProject(project.getId())", "com.emc.storageos.api.service.impl.resource.ProjectService.persistObject(com.emc.storageos.db.client.model.VirtualNAS)", "org.slf4j.Logger.info(java.lang.String,vnas.getLabel(),project.getLabel())"], "Fixed commit": "a9b4780823fe39f756eddceb127bd148294658df", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-08-19T07:12:04Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (data != null) { com.chinamobile.hejiaqin.business.ui.basic.dialog.PhotoManage.getInstance(this).startPhotoZoom(data.getData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2721/buggy-version/code.hejiaqin.phone.src.main.java.com.chinamobile.hejiaqin.business.ui.more.UserInfoActivity.java", "BodyUseAPI": ["android.content.Intent.getData()", "com.chinamobile.hejiaqin.business.ui.basic.dialog.PhotoManage.getInstance(this).startPhotoZoom(data.getData())"], "Fixed commit": "c969bca1a5966d5963767dea65bd3cb5be1e95e8", "Url": "https://api.github.com/repos/CaniculaSw/hejiaqin", "Date": "2017-01-03T15:11:47Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myBilling) != null) { myBilling.onDestroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/329/buggy-version/app.src.main.java.com.levenko.myequilator.MainActivity2.java", "BodyUseAPI": [], "Fixed commit": "afec4abd5071bc4ba133734f2cd1a0bc632c32b5", "Url": "https://api.github.com/repos/Vilagra/Equilator", "Date": "2017-08-01T06:35:00Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdView) != null) { mAdView.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/329/buggy-version/app.src.main.java.com.levenko.myequilator.MainActivity2.java", "BodyUseAPI": [], "Fixed commit": "afec4abd5071bc4ba133734f2cd1a0bc632c32b5", "Url": "https://api.github.com/repos/Vilagra/Equilator", "Date": "2017-08-01T06:35:00Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((safe.length()) > 110) { safe = safe.substring(0, 110); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8313/buggy-version/src.main.java.com.igumnov.common.Cyphers.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "ad0026d6c802035696692994232ec76a72842dcd", "Url": "https://api.github.com/repos/evgenyigumnov/common", "Date": "2015-07-14T12:18:01Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (JavaTacticalRenderer.clsUtility.isClosedPolygon(tg.get_LineType())) minSize = 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4828/buggy-version/core.JavaRendererServer.src.main.java.RenderMultipoints.clsUtility.java", "BodyUseAPI": [], "Fixed commit": "d304b0c3166fc68c59d3a8effded939f9b092ae4", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2015-01-13T20:56:37Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((data != null) && (data instanceof java.util.Map)) { updateDataValue(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4945/buggy-version/service.src.main.java.com.pms.service.controller.AbstractController.java", "BodyUseAPI": ["com.pms.service.controller.AbstractController.updateDataValue(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "37bb80ff687d3e0a2301ff4e29b8fedc3b5621ca", "Url": "https://api.github.com/repos/antme/pms", "Date": "2013-12-16T14:34:15Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.charon.core.v2.extensions.UserManager.getUser(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (oldUser == null) { throw new org.wso2.charon.core.v2.exceptions.NotFoundException(((\"No user with the id : \" + existingId) + \" in the user store.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/726/buggy-version/modules.charon-core.src.main.java.org.wso2.charon.core.v2.protocol.endpoints.UserResourceManager.java", "BodyUseAPI": [], "Fixed commit": "b64562132158bac6526eae99c770beeaf58b8f35", "Url": "https://api.github.com/repos/Vindulamj/Charon-3.0.0", "Date": "2016-12-16T13:59:44Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.charon.core.v2.extensions.UserManager.getGroup(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (oldGroup == null) { throw new org.wso2.charon.core.v2.exceptions.NotFoundException(((\"No group with the id : \" + existingId) + \" in the user store.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/726/buggy-version/modules.charon-core.src.main.java.org.wso2.charon.core.v2.protocol.endpoints.GroupResourceManager.java", "BodyUseAPI": [], "Fixed commit": "b64562132158bac6526eae99c770beeaf58b8f35", "Url": "https://api.github.com/repos/Vindulamj/Charon-3.0.0", "Date": "2016-12-16T13:59:44Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) { javax.swing.JOptionPane.showMessageDialog(null, \"Selected data was removed from database\", \"Delete success\", javax.swing.JOptionPane.INFORMATION_MESSAGE); view.removeSelectedFromWorkspace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/690/buggy-version/src.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "f440cfaf11a7dfc0dcb06caa7caa5427c6a10550", "Url": "https://api.github.com/repos/genomizer/genomizer-desktop", "Date": "2014-05-20T09:26:24Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((valueObjectString == null) || (valueObjectString.isEmpty())) { valueObjectString = codeTextField.getText().trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1955/buggy-version/src.canreg.client.gui.components.DateVariableEditorPanel.java", "BodyUseAPI": [], "Fixed commit": "ffd88b281f6221788bf0f0f83acc1b2f476c891b", "Url": "https://api.github.com/repos/IARC-CSU/CanReg5", "Date": "2016-03-30T13:20:19Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.clientId) != null) { return this.clientId.replaceAll(\"\\\\D+\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3396/buggy-version/app.src.main.java.com.voipgrid.vialer.api.models.SystemUser.java", "BodyUseAPI": [], "Fixed commit": "eb36d3b52f4a0b027d4b985f0b596a2393b3b905", "Url": "https://api.github.com/repos/VoIPGRID/vialer-android", "Date": "2016-07-12T12:23:57Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.voipgrid.vialer.util.JsonStorage.get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (systemuser != null) { java.lang.String clientId = systemuser.getClient(); if (clientId != null) { mTracker.set(\"&cd1\", clientId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3396/buggy-version/app.src.main.java.com.voipgrid.vialer.analytics.AnalyticsApplication.java", "BodyUseAPI": ["com.voipgrid.vialer.api.models.SystemUser.getClient()"], "Fixed commit": "eb36d3b52f4a0b027d4b985f0b596a2393b3b905", "Url": "https://api.github.com/repos/VoIPGRID/vialer-android", "Date": "2016-07-12T12:23:57Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4187/buggy-version/FBG2.0.src.model.map.MotionValidator.java", "BodyUseAPI": [], "Fixed commit": "76e8e8b68b9fa032f37602fa0c6ecbd4fcbdd86b", "Url": "https://api.github.com/repos/TeamFinalBoss/GameIteration2", "Date": "2015-03-22T23:09:43Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeMap) == null) { activeMap = map; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4187/buggy-version/FBG2.0.src.model.director.ActiveMapManager.java", "BodyUseAPI": [], "Fixed commit": "76e8e8b68b9fa032f37602fa0c6ecbd4fcbdd86b", "Url": "https://api.github.com/repos/TeamFinalBoss/GameIteration2", "Date": "2015-03-22T23:09:43Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ts.getSampleFractions().first().isStandard()) { returnValue = 1; }else if (this.getSampleFractions().first().isStandard()) { returnValue = -1; }else { returnValue = ((java.lang.Long) (myTsTimeStamp)).compareTo(((java.lang.Long) (tsTimeStamp))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8542/buggy-version/src.main.java.org.earthtime.Tripoli.samples.AbstractTripoliSample.java", "BodyUseAPI": [], "Fixed commit": "ee6dc9d541b6bf98a5f591c96e8b792486f935f7", "Url": "https://api.github.com/repos/bowring/ET_Redux", "Date": "2016-04-04T17:52:33Z"},
{"Line": "=>1409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movie) != null) { movie.stop(); movie = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6685/buggy-version/src.beetracker.BeeTracker.java", "BodyUseAPI": [], "Fixed commit": "53480c9144248dada29bbe8efd8952b9bd811cac", "Url": "https://api.github.com/repos/darthyoshi/beetracker", "Date": "2015-10-16T19:59:46Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.firstwicket.excel.DateUtil.isCellDateFormatted(cell)) { clazz.getMethod((\"set\" + (headerInfo.get(cell.getColumnIndex()))), java.lang.String.class).invoke(obj, cell.getDateCellValue().toString()); }else { clazz.getMethod((\"set\" + (headerInfo.get(cell.getColumnIndex()))), java.lang.String.class).invoke(obj, java.lang.Double.toString(cell.getNumericCellValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3455/buggy-version/src.main.java.com.firstwicket.excel.XcelConverterImpl.java", "BodyUseAPI": ["java.lang.Class<?>.getMethod((\"set\" + (headerInfo.get(cell.getColumnIndex()))),java.lang.Class)", "cell.getDateCellValue().toString()", "java.lang.reflect.Method.invoke(java.lang.Object,java.lang.String)", "java.util.List<java.lang.String>.get(cell.getColumnIndex())", "java.util.List<java.lang.String>.get(cell.getColumnIndex())", "com.firstwicket.excel.Cell.getDateCellValue()", "com.firstwicket.excel.Cell.getColumnIndex()", "java.lang.Class<?>.getMethod((\"set\" + (headerInfo.get(cell.getColumnIndex()))),java.lang.Class)", "java.lang.Double.toString(cell.getNumericCellValue())", "com.firstwicket.excel.Cell.getNumericCellValue()", "com.firstwicket.excel.Cell.getColumnIndex()", "java.lang.reflect.Method.invoke(java.lang.Object,cell.getDateCellValue().toString())"], "Fixed commit": "079197b1e1570f3f5b8cf13997b8f749563c4478", "Url": "https://api.github.com/repos/andrewssamuel/Xcel2Json", "Date": "2016-05-16T09:09:28Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (closest.getProvider().equals(\"Langstone\")) { search = \"Langstone Campus (for Departures only)\"; }else { search = closest.getProvider(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1984/buggy-version/app.src.main.java.com.malcolm.portsmouthunibus.TopFragment.java", "BodyUseAPI": ["android.location.Location.getProvider()"], "Fixed commit": "73312f6a27ffd7f448498f5b66fa601f6e17d143", "Url": "https://api.github.com/repos/malodita/portsunibusandroid", "Date": "2017-03-22T20:54:49Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clientToIgnore != null) && (client == clientToIgnore)) { sender.execute(new bubolo.net.NetworkSender(client.getOutputStream(), command)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8946/buggy-version/bubolo.src.bubolo.net.Server.java", "BodyUseAPI": ["bubolo.net.Server.ClientSocket.getOutputStream()", "java.util.concurrent.Executor.execute(bubolo.net.NetworkSender)"], "Fixed commit": "99e988ebe662bbc312b5aece57ca7094af8d273c", "Url": "https://api.github.com/repos/BU-CS673/bubolo", "Date": "2014-04-05T20:37:56Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.nio.file.Files.exists(destinationDirectoryPath)) { removeIgnorables(addedIgnorables, destinationDirectoryPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2658/buggy-version/src.main.java.org.c_3po.generation.SiteGenerator.java", "BodyUseAPI": ["org.c_3po.generation.SiteGenerator.removeIgnorables(java.util.List<org.c_3po.generation.SiteGenerator.Ignorable>,java.nio.file.Path)"], "Fixed commit": "447e4c248012cb06433ade62f42c280d9250ab16", "Url": "https://api.github.com/repos/rmoestl/C-3PO", "Date": "2015-10-06T07:25:15Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (us.tastybento.bskyblock.database.flatfile.FlatFileDatabaseHandler.DEBUG) { plugin.getLogger().info((\"DEBUG: value = \" + value)); plugin.getLogger().info((\"DEBUG: property type = \" + (propertyDescriptor.getPropertyType()))); plugin.getLogger().info((\"DEBUG: \" + (value.getClass()))); if ((value != null) && (!(value.getClass().equals(org.bukkit.configuration.MemorySection.class)))) { method.invoke(instance, deserialize(value, propertyDescriptor.getPropertyType())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3061/buggy-version/src.main.java.us.tastybento.bskyblock.database.flatfile.FlatFileDatabaseHandler.java", "BodyUseAPI": [], "Fixed commit": "f6a676244e30a7e9e81b647f9e0a01241c8ac68c", "Url": "https://api.github.com/repos/BentoBoxWorld/bentobox", "Date": "2017-10-27T02:07:59Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (us.tastybento.bskyblock.database.flatfile.FlatFileDatabaseHandler.DEBUG) plugin.getLogger().info(\"DEBUG: not a collection\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3061/buggy-version/src.main.java.us.tastybento.bskyblock.database.flatfile.FlatFileDatabaseHandler.java", "BodyUseAPI": [], "Fixed commit": "f6a676244e30a7e9e81b647f9e0a01241c8ac68c", "Url": "https://api.github.com/repos/BentoBoxWorld/bentobox", "Date": "2017-10-27T02:07:59Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (b.getP2().getName().equals(\"BYE\")) { b.getP1().beats(b.getP2()); b = null; winner = \"3\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7554/buggy-version/src.swissTournamentRunner.Utils.java", "BodyUseAPI": ["swissTournamentRunner.Battle.getP2()", "b.getP1().beats(b.getP2())", "swissTournamentRunner.Battle.getP1()"], "Fixed commit": "ab3e4bae709d5a2086431244c9e04026e8ae3901", "Url": "https://api.github.com/repos/Ferrerothorn/BTC", "Date": "2017-11-06T16:34:22Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (b.getP1().getName().equals(\"BYE\")) { b.getP2().beats(b.getP1()); b = null; winner = \"3\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7554/buggy-version/src.swissTournamentRunner.Utils.java", "BodyUseAPI": ["swissTournamentRunner.Battle.getP2()", "swissTournamentRunner.Battle.getP1()", "b.getP2().beats(b.getP1())"], "Fixed commit": "ab3e4bae709d5a2086431244c9e04026e8ae3901", "Url": "https://api.github.com/repos/Ferrerothorn/BTC", "Date": "2017-11-06T16:34:22Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.ehcache.spi.ServiceLocator.findSingletonAmongst(org.ehcache.config.serializer.DefaultSerializationProviderConfiguration.class, config.getServiceConfigurations().toArray())) == null) { serviceLocator.addService(new org.ehcache.jsr107.DefaultJsr107SerializationProvider()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/308/buggy-version/107.src.main.java.org.ehcache.jsr107.EhcacheCachingProvider.java", "BodyUseAPI": [], "Fixed commit": "0a4e4ffbebd11c42ae5117be03778cc7c258824d", "Url": "https://api.github.com/repos/rishabhmonga/ehcache3", "Date": "2015-07-28T07:02:52Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Throwable.getStackTrace()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((ste.length) < 2) { java.lang.System.out.println(\"No stack trace information available\"); }else { java.lang.StackTraceElement caller = ste[1]; java.lang.System.out.printf(\"%s.%s (%s line %d)\", caller.getClassName(), caller.getMethodName(), caller.getFileName(), caller.getLineNumber()); for (int ii = 2; ii < (ste.length); ii++) { java.lang.System.out.printf(\" [%s line %d]\", ste[ii].getFileName(), ste[ii].getLineNumber()); } java.lang.System.out.printf(\"%n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8556/buggy-version/java.src.plume.BCELUtil.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,java.lang.String,int)", "java.lang.StackTraceElement.getLineNumber()", "java.lang.StackTraceElement.getFileName()"], "Fixed commit": "7a6f75bf5a8b72a6ae823d4bd29a43742eb5cf50", "Url": "https://api.github.com/repos/mernst/plume-lib", "Date": "2016-12-04T03:59:50Z"},
{"Line": "=>739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFooterLayout) == null) { mFooterLayout = new android.widget.LinearLayout(footer.getContext()); if (orientation == (android.widget.LinearLayout.VERTICAL)) { mFooterLayout.setOrientation(LinearLayout.VERTICAL); mFooterLayout.setLayoutParams(new android.support.v7.widget.RecyclerView.LayoutParams(MATCH_PARENT, WRAP_CONTENT)); }else { mFooterLayout.setOrientation(LinearLayout.HORIZONTAL); mFooterLayout.setLayoutParams(new android.support.v7.widget.RecyclerView.LayoutParams(WRAP_CONTENT, MATCH_PARENT)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2623/buggy-version/library.src.main.java.com.chad.library.adapter.base.BaseQuickAdapter.java", "BodyUseAPI": [], "Fixed commit": "4fa8ae1205bb7c3c8d577d42d6c093025b70e31e", "Url": "https://api.github.com/repos/1109993488/BaseRecyclerViewAdapterHelper", "Date": "2016-12-09T08:07:12Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (path.startsWith(pack.getPath())) path = f.getAbsolutePath().substring(pack.getPath().length()).replace('\\\\', '/'); else if (!(path.startsWith(\"/\"))) path = \"/\" + path;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/670/buggy-version/src.main.java.com.dcp.sm.gui.pivot.frames.ShortcutDialog.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.replace(char,char)", "com.dcp.sm.logic.model.Pack.getPath()", "pack.getPath().length()", "java.lang.String.substring(pack.getPath().length())"], "Fixed commit": "2c6c8dfb91c0972620bb11461864f46ca23990a7", "Url": "https://api.github.com/repos/DevComPack/setupmaker", "Date": "2015-05-03T15:13:53Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fileUtil.getTestNames()) != null) { newTestNames.addAll(fileUtil.getTestNames()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5629/buggy-version/src.highlighter.actions.ErrorLinesShowAction.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(fileUtil.getTestNames())", "highlighter.util.StringPytestUtil.getTestNames()"], "Fixed commit": "f30f4f93e6a002b56c60a6a04dcf8a7e25d60dee", "Url": "https://api.github.com/repos/xcegin/PUTVT", "Date": "2017-04-14T22:07:20Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == '_') c = ' ';", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/478/buggy-version/src.main.java.de.lankenau.rubenwrite.data.BookDAO.java", "BodyUseAPI": [], "Fixed commit": "5aaf71f5d46e9bebf1453acb2f702899ad4e4ab1", "Url": "https://api.github.com/repos/mlankenau/RubenWriter", "Date": "2011-04-26T06:06:39Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["field.getType().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equals(\"Boolean\")) { content += \"1.toByte().equals(source.readByte()),\"; }else { content += (\"source.read\" + type) + \"(),\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4932/buggy-version/src.cn.nekocode.plugin.parcelablegenerator.CodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "3956e58a058d3f0f23b0f58b508514b631c5c39f", "Url": "https://api.github.com/repos/nekocode/android-parcelable-intellij-plugin-kotlin", "Date": "2015-12-29T02:29:11Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["field.getType().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (type.equals(\"Boolean\")) { sb.append(\"dest?.writeByte((if(\").append(name).append(\") 1 else 0).toByte()) \\n\"); }else { sb.append(\"dest?.write\").append(type).append(\"(this.\").append(name).append(\") \\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4932/buggy-version/src.cn.nekocode.plugin.parcelablegenerator.CodeGenerator.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "3956e58a058d3f0f23b0f58b508514b631c5c39f", "Url": "https://api.github.com/repos/nekocode/android-parcelable-intellij-plugin-kotlin", "Date": "2015-12-29T02:29:11Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameMode) != (TRAINING_MODE)) { p2.incrementScore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/606/buggy-version/src.de.fh_kl.bluepong.game.GameEngine.java", "BodyUseAPI": [], "Fixed commit": "5128c935931d6b2c20ff902dfd0b517e5a483ac6", "Url": "https://api.github.com/repos/davfriedrich/BluePong", "Date": "2014-08-07T12:46:16Z"},
{"Line": "=>1389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((effect == (com.darkblade12.particleeffect.ParticleEffect.REDSTONE)) && (color instanceof com.darkblade12.particleeffect.ParticleEffect.OrdinaryColor)) && ((((com.darkblade12.particleeffect.ParticleEffect.OrdinaryColor) (color)).getRed()) == 0)) { offsetX = ((float) (1)) / 255.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3813/buggy-version/src.com.darkblade12.particleeffect.ParticleEffect.java", "BodyUseAPI": [], "Fixed commit": "6d791c8d22d09f282470edd9747c2dd70bcbb0d6", "Url": "https://api.github.com/repos/endercrest/ParticleEffect", "Date": "2015-05-29T14:23:09Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y) < 8) { y = 8; yVelocity = 0; }else if ((y) > (250 - (height))) { y = 250 - (height); yVelocity = 0; }else { yVelocity = speed; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7842/buggy-version/src.Player.java", "BodyUseAPI": [], "Fixed commit": "75b06e0402a97d34e1f7df50aa18e38d565d5490", "Url": "https://api.github.com/repos/m4r71n85/Ping-Pong-Game---Team-Endor", "Date": "2014-05-14T21:15:57Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.asiainfo.bdx.ldp.datafoundry.servicebroker.ocdp.service.OCDPServiceInstanceService.getOperationType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (operationType == null) { throw new com.asiainfo.bdx.ldp.datafoundry.servicebroker.ocdp.exception.OCDPServiceException(((\"Service instance \" + serviceInstanceId) + \" not exist.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/415/buggy-version/src.main.java.com.asiainfo.bdx.ldp.datafoundry.servicebroker.ocdp.service.OCDPServiceInstanceService.java", "BodyUseAPI": [], "Fixed commit": "ba82613f479848ff9db5a2bb6a3c149079fb876b", "Url": "https://api.github.com/repos/baikai/datafoundry_servicebroker_ocdp", "Date": "2016-07-26T09:54:50Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.raxdenstudios.app.fragment.ImprovedFragment.getToolBar()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (toolbar != null) onLoadToolBar(toolbar);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4567/buggy-version/library.src.main.java.com.raxdenstudios.app.fragment.ImprovedFragment.java", "BodyUseAPI": ["com.raxdenstudios.app.fragment.ImprovedFragment.onLoadToolBar(android.support.v7.widget.Toolbar)"], "Fixed commit": "f654d6391207d61bcc40e00f6e31798657c87416", "Url": "https://api.github.com/repos/raxden/AndroidApp", "Date": "2015-07-02T16:51:25Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.equals(env, Config.TEST)) { baseURL = \"https://test.instamojo.com/\"; }else { baseURL = \"https://api.instamojo.com/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1071/buggy-version/instamojolib.src.main.java.instamojo.library.Instamojo.java", "BodyUseAPI": [], "Fixed commit": "dc2f4456424723aefd52cbc10f31bf6bb7598b14", "Url": "https://api.github.com/repos/shardullavekar/instamojodevsupport", "Date": "2017-11-13T06:14:13Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.genotype) != null) { json.put(\"genesStatus\", this.genotype.getGenesStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8220/buggy-version/matching-notification-api.src.main.java.org.phenotips.matchingnotification.match.internal.DefaultPatientInMatch.java", "BodyUseAPI": [], "Fixed commit": "aee1338c4cc3e1334e80c9cea90820421b580cb5", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2017-12-07T16:56:37Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (reviewBuffer.hasRating()) { reviewBuilder.withRating(reviewBuffer.getRating()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5757/buggy-version/atlas-cassandra.src.main.java.org.atlasapi.entity.ReviewSerializer.java", "BodyUseAPI": ["Review.Builder.withRating(reviewBuffer.getRating())", "CommonProtos.Review.getRating()"], "Fixed commit": "c0dadd24e7fe2e19f02a24800ca0b23c8eabb86a", "Url": "https://api.github.com/repos/atlasapi/atlas-deer", "Date": "2017-03-08T13:16:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (reviewBuffer.hasAuthorInitials()) { reviewBuilder.withAuthorInitials(reviewBuffer.getAuthorInitials()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5757/buggy-version/atlas-cassandra.src.main.java.org.atlasapi.entity.ReviewSerializer.java", "BodyUseAPI": ["Review.Builder.withAuthorInitials(reviewBuffer.getAuthorInitials())", "CommonProtos.Review.getAuthorInitials()"], "Fixed commit": "c0dadd24e7fe2e19f02a24800ca0b23c8eabb86a", "Url": "https://api.github.com/repos/atlasapi/atlas-deer", "Date": "2017-03-08T13:16:42Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (reviewBuffer.hasAuthor()) { reviewBuilder.withAuthor(reviewBuffer.getAuthor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5757/buggy-version/atlas-cassandra.src.main.java.org.atlasapi.entity.ReviewSerializer.java", "BodyUseAPI": ["Review.Builder.withAuthor(reviewBuffer.getAuthor())", "CommonProtos.Review.getAuthor()"], "Fixed commit": "c0dadd24e7fe2e19f02a24800ca0b23c8eabb86a", "Url": "https://api.github.com/repos/atlasapi/atlas-deer", "Date": "2017-03-08T13:16:42Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!scriptsOnly) { sb.append(\"})();\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2072/buggy-version/jaggr-core.src.main.java.com.ibm.jaggr.core.impl.modulebuilder.javascript.JavaScriptModuleBuilder.java", "BodyUseAPI": [], "Fixed commit": "f10703c15a9d4e14296625d66e9420170c2010d1", "Url": "https://api.github.com/repos/chuckdumont/JavascriptAggregator", "Date": "2016-05-10T02:57:29Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ids.isEmpty()) { builder.append(\"\\\"\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6333/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.evekit.AbstractEveKitValidatedGetter.java", "BodyUseAPI": [], "Fixed commit": "79e7cee30827312d643cc892dbfcea21293a208c", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-04-03T19:15:18Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((key) == null) || (false == (hasMoreValues))) { inputKeyCounter.increment(1); ++(keyCtr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8158/buggy-version/tez-runtime-library.src.main.java.org.apache.tez.runtime.library.common.ValuesIterator.java", "BodyUseAPI": [], "Fixed commit": "e36f962e78f301974cd8eed2380a6a5bd26a49ae", "Url": "https://api.github.com/repos/apache/tez", "Date": "2015-04-30T15:10:49Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { filterAndShowRunes(); new com.ggstudios.dialogs.RunePickerDialogFragment.IconFetcher().execute(getActivity().getAssets()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6124/buggy-version/app.src.main.java.com.ggstudios.dialogs.RunePickerDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "ff99c633e943580011b95521bc646eefc5e5458b", "Url": "https://api.github.com/repos/idunnololz/LoLCraft", "Date": "2014-11-27T03:07:44Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jtp.getIsWheelMove()) { jtp.setIsWheelMove(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8696/buggy-version/src.com.cqu.roy.highlighting.SyntaxHighlighter.java", "BodyUseAPI": ["com.cqu.roy.mywdiget.MyJTextPane.setIsWheelMove(boolean)"], "Fixed commit": "4acb4e5fcf306d1f3214f37e6928f4a7b232e17b", "Url": "https://api.github.com/repos/Ruan-Xin/CodingFaster", "Date": "2017-01-23T14:32:10Z"},
{"Line": "=>3915", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFichePosteCourant()) == null) { getTransaction().declarerErreur(nc.mairie.utils.MessageUtils.getMessage(\"ERR1121\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/292/buggy-version/src.main.java.nc.mairie.gestionagent.process.agent.OeAGENTEmploisAffectation.java", "BodyUseAPI": [], "Fixed commit": "06208a3b1622e97be6db7ca9e282a92b88e53b0f", "Url": "https://api.github.com/repos/DSI-Ville-Noumea/sirh", "Date": "2017-12-08T04:16:29Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstLocation) { novaLocalizacao(location); firstLocation = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7970/buggy-version/audiorio.app.src.br.great.excursaopajeu.actvitites.Mapa.java", "BodyUseAPI": [], "Fixed commit": "584aae423a9189373f97ddac3128114093da2d0b", "Url": "https://api.github.com/repos/wendellmfm/audiorio", "Date": "2017-10-06T13:01:39Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8189/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "36c8f2279ac744169d2fd40b095fc6e3e7bbc438", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-26T02:46:49Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.exists()) { java.io.FileOutputStream fileOut = new java.io.FileOutputStream(filePathString); fileOut.write(input.getBytes()); fileOut.close(); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/114/buggy-version/src.Group8.FileProfile.java", "BodyUseAPI": [], "Fixed commit": "fe788018b1e71272f2e1fe226f395ddd3d9b4944", "Url": "https://api.github.com/repos/Dburris13/UltimateTicTacToe", "Date": "2016-11-28T04:06:57Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iConomyHandler.useiConomy()) && (!(iConomyHandler.chargePlayer(player.getName(), iConomyHandler.createCost)))) { if (!(iConomyHandler.inFundMsg.isEmpty())) { player.sendMessage(((org.bukkit.ChatColor.RED) + (iConomyHandler.inFundMsg))); } return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8377/buggy-version/src.net.TheDgtl.Stargate.Portal.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.RED) + (iConomyHandler.inFundMsg)))"], "Fixed commit": "905cf2ac45c2085a982ae28e9a7d7f0ce998391d", "Url": "https://api.github.com/repos/TheDgtl/Stargate-Bukkit", "Date": "2011-03-28T19:07:08Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((members.size()) == 0) { for (org.symphonyoss.proxydesk.models.users.HelpClient helpClient : clients) { exit(helpClient); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5416/buggy-version/proxy-desk.src.main.java.org.symphonyoss.proxydesk.models.calls.HelpCall.java", "BodyUseAPI": [], "Fixed commit": "cd64a629b2499596287909996094b85c14ce2de0", "Url": "https://api.github.com/repos/symphonyoss/helpdesk-bot", "Date": "2016-07-13T13:00:26Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (project.getBuildDir().getAbsolutePath().contains(\"!\")) { project.getLogger().error(\"Build path has !, This will screw over a lot of java things as ! is used to denote archive paths, REMOVE IT if you want to continue\"); throw new java.lang.RuntimeException(\"Build path contains !\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6617/buggy-version/src.main.java.net.minecraftforge.gradle.common.BasePlugin.java", "BodyUseAPI": ["project.getLogger().error(java.lang.String)", "org.gradle.api.Project.getLogger()"], "Fixed commit": "340dcaccddc8dd189b5414ed03c60b6622ab39cb", "Url": "https://api.github.com/repos/MinecraftForge/ForgeGradle", "Date": "2013-12-17T22:09:43Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operaRunner) != null) operaRunner.shutdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2281/buggy-version/src.com.opera.core.systems.OperaDesktopDriver.java", "BodyUseAPI": [], "Fixed commit": "c78ef0b4319c360db854b28df5987dd699ba6b1d", "Url": "https://api.github.com/repos/operasoftware/operaprestodriver", "Date": "2011-08-22T11:49:37Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["block.getState().getData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (button != null) { org.bukkit.block.BlockFace f = button.getAttachedFace(); if (f != null) handleDirectWireInput(new com.sk89q.worldedit.WorldVector(w, (x + ((f.getModX()) * 2)), y, (z + ((f.getModZ()) * 2))), block, oldLevel, newLevel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4950/buggy-version/src.main.java.com.sk89q.craftbook.bukkit.MechanicListenerAdapter.java", "BodyUseAPI": ["org.bukkit.material.Attachable.getAttachedFace()"], "Fixed commit": "15ab9c1b17025b4aeaff07611614ded481859165", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-08-13T06:10:10Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["block.getState().getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((b == null) || ((b.getAttachedFace()) == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4950/buggy-version/src.main.java.com.sk89q.craftbook.mech.Teleporter.java", "BodyUseAPI": [], "Fixed commit": "15ab9c1b17025b4aeaff07611614ded481859165", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-08-13T06:10:10Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (io.grpc.internal.KeepAliveManager.State.IDLE_AND_PING_SENT)) { state = io.grpc.internal.KeepAliveManager.State.PING_SENT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7247/buggy-version/core.src.main.java.io.grpc.internal.KeepAliveManager.java", "BodyUseAPI": [], "Fixed commit": "58af54d1cff91ad81cdf6ca1f6e3c35cca3f16c0", "Url": "https://api.github.com/repos/dapengzhang0/grpc-java", "Date": "2017-03-01T19:43:52Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.remoting3.remote.IntIndexMap<org.jboss.remoting3.remote.OutboundMessage>.putIfAbsent(org.jboss.remoting3.remote.OutboundMessage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existing == null) { ok = true; return message; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8932/buggy-version/src.main.java.org.jboss.remoting3.remote.RemoteConnectionChannel.java", "BodyUseAPI": [], "Fixed commit": "b863ebc5a240a9b44ffe9f70645a5d2dd00a4be8", "Url": "https://api.github.com/repos/ropalka/jboss-remoting", "Date": "2012-03-07T15:26:39Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.overrideType) != null) { ext = request.overrideType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7490/buggy-version/src.org.avuna.httpd.util.FileManager.java", "BodyUseAPI": [], "Fixed commit": "3b88618798f00e1efadff7a12cd50e2020abc4f8", "Url": "https://api.github.com/repos/paullaz/Avuna-HTTPD", "Date": "2015-07-04T08:02:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nz.artedungeon.utils.MyCombat.canUsePrayer((nz.uberutils.methods.MyPrayer.isUsingRegularPrayers() ? MyPrayer.Prayer.PROTECT_FROM_MISSILES : MyPrayer.Prayer.DEFLECT_MISSILE))) { nz.uberutils.methods.MyPrayer.Prayer prayer = (nz.uberutils.methods.MyPrayer.isUsingRegularPrayers()) ? MyPrayer.Prayer.PROTECT_FROM_MISSILES : MyPrayer.Prayer.DEFLECT_MISSILE; if (!(prayer.isSelected())) prayer.setActivated(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2962/buggy-version/nz.artedungeon.bosses.SkeletalHorde.java", "BodyUseAPI": [], "Fixed commit": "9cecde645dde00abe362e9f5e3fc8f481cd52c52", "Url": "https://api.github.com/repos/UberMouse/ArteDungeon", "Date": "2011-04-21T03:51:58Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lotus.domino.Document.getMIMEEntity(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entity == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3916/buggy-version/org.openntf.domino.src.org.openntf.domino.utils.DominoUtils.java", "BodyUseAPI": [], "Fixed commit": "24738f3f97ef7975807c4f2fbf40efee81a9588f", "Url": "https://api.github.com/repos/OpenNTF/org.openntf.domino", "Date": "2013-04-01T00:53:56Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.roda.rodain.rules.sip.SipPreview.getMetadataWithReplaces()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(metadataList.isEmpty())) content = metadataList.get(0).getContentDecoded();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4298/buggy-version/src.main.java.org.roda.rodain.creation.EarkSipCreator.java", "BodyUseAPI": ["java.util.List<org.roda.rodain.schema.DescObjMetadata>.get(int)", "metadataList.get(0).getContentDecoded()"], "Fixed commit": "287403852c8b11ad836a5bb401aafc9bebbffade", "Url": "https://api.github.com/repos/keeps/roda-in", "Date": "2016-02-25T18:05:45Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wso2telco.services.dep.sandbox.util.CommonUtil.getNullOrTrimmedValue(wrapperDTO.getMnc())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (mnc != null) { validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_OPTIONAL_INT_GE_ZERO, \"mnc\", mnc)); validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_MANDATORY_INT_GE_ZERO, \"mcc\", mcc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4817/buggy-version/dep-sandbox.src.main.java.com.wso2telco.services.dep.sandbox.servicefactory.customerinfo.GetAttributeRequestHandler.java", "BodyUseAPI": ["java.util.List<com.wso2telco.dep.oneapivalidation.util.ValidationRule>.add(com.wso2telco.dep.oneapivalidation.util.ValidationRule)"], "Fixed commit": "1d58cb4d7f3e12581fbda98c6200d01a0005cfee", "Url": "https://api.github.com/repos/WSO2Telco/sandbox-service", "Date": "2017-01-18T07:04:17Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCategory()) == (QCategory.samc)) { optionTableName = \"sachoices\"; inputType = \"radio\"; }else if ((getCategory()) == (QCategory.mamc)) { optionTableName = \"machoices\"; inputType = \"checkbox\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1950/buggy-version/src.everyonesSurvey.Question.java", "BodyUseAPI": [], "Fixed commit": "9c0ab29447d0f5ce78198a748e6334edb1ce32b2", "Url": "https://api.github.com/repos/rarerare/EveryonesSurvey", "Date": "2017-10-21T07:44:55Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sumOfResultEcts != 0) { result = (sumOfResultEcts / (models.Module.ects)) * 100; java.math.BigDecimal tmp = new java.math.BigDecimal(result).setScale(2, java.math.RoundingMode.HALF_EVEN); result = tmp.floatValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8982/buggy-version/studentsApp.app.models.Module.java", "BodyUseAPI": [], "Fixed commit": "123ce430193765e9e9e3244031c782f270f272f8", "Url": "https://api.github.com/repos/ca057/WebTech-TL3", "Date": "2015-07-22T12:00:58Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.data.Form.form().bindFromRequest()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (form.get(\"ects\").isEmpty()) { ects = module.getEcts(); }else { try { ects = java.lang.Integer.parseInt(form.get(\"ects\")); } catch (java.lang.NumberFormatException e) { return ok(views.html.editmodule.render(\"Die eingegebenen ECTS-Punkte sind keine Zahl und konnten nicht verarbeitet werden.\", module)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8982/buggy-version/studentsApp.app.controllers.ModuleCtrl.java", "BodyUseAPI": ["play.data.DynamicForm.get(java.lang.String)", "java.lang.Integer.parseInt(form.get(\"ects\"))"], "Fixed commit": "123ce430193765e9e9e3244031c782f270f272f8", "Url": "https://api.github.com/repos/ca057/WebTech-TL3", "Date": "2015-07-22T12:00:58Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.data.Form.form().bindFromRequest()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (form.get(\"name\").isEmpty()) { java.lang.System.out.println(form.get(\"name\")); name = module.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8982/buggy-version/studentsApp.app.controllers.ModuleCtrl.java", "BodyUseAPI": ["play.data.DynamicForm.get(java.lang.String)", "java.io.PrintStream.println(form.get(\"name\"))"], "Fixed commit": "123ce430193765e9e9e3244031c782f270f272f8", "Url": "https://api.github.com/repos/ca057/WebTech-TL3", "Date": "2015-07-22T12:00:58Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ects < 0) { return ok(views.html.editmodule.render(\"Die eingegebenen ECTS-Punkte d\u00fcrfen nicht negativ sein.\", module)); }else { module.setName(name); module.setEcts(ects); return controllers.Application.index(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8982/buggy-version/studentsApp.app.controllers.ModuleCtrl.java", "BodyUseAPI": ["java.lang.Module.setEcts(int)"], "Fixed commit": "123ce430193765e9e9e3244031c782f270f272f8", "Url": "https://api.github.com/repos/ca057/WebTech-TL3", "Date": "2015-07-22T12:00:58Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(value.hasChildren())) { element.addAttribute(soapEnvelope.createName(\"nil\", \"xsi\", javax.xml.XMLConstants.W3C_XML_SCHEMA_INSTANCE_NS_URI), \"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/684/buggy-version/extensions.soap.src.jolie.net.SoapProtocol.java", "BodyUseAPI": [], "Fixed commit": "1adb798c1e76f2831040ebe9143b78fd08c16475", "Url": "https://api.github.com/repos/klag/jolie", "Date": "2017-06-30T14:23:47Z"},
{"Line": "=>889", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selector.isOpen()) { c.register(selector, java.nio.channels.SelectionKey.OP_READ, channel); selector.wakeup(); channel.setSelectorIndex(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/684/buggy-version/jolie.src.jolie.net.CommCore.java", "BodyUseAPI": ["java.nio.channels.Selector.wakeup()", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int,jolie.net.SelectableStreamingCommChannel)"], "Fixed commit": "1adb798c1e76f2831040ebe9143b78fd08c16475", "Url": "https://api.github.com/repos/klag/jolie", "Date": "2017-06-30T14:23:47Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (welcomeMessage != null) this.welcomeMessage = plugin.toFormattedString(welcomeMessage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7725/buggy-version/EvilBookOrion.src.me.evilpeanut.Region.java", "BodyUseAPI": [], "Fixed commit": "cd068cb2bd1bd4a227d9c39200cb2caf9cd873d1", "Url": "https://api.github.com/repos/EvilPeanut/EvilBook", "Date": "2013-06-28T01:23:30Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (leaveMessage != null) this.leaveMessage = plugin.toFormattedString(leaveMessage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7725/buggy-version/EvilBookOrion.src.me.evilpeanut.Region.java", "BodyUseAPI": [], "Fixed commit": "cd068cb2bd1bd4a227d9c39200cb2caf9cd873d1", "Url": "https://api.github.com/repos/EvilPeanut/EvilBook", "Date": "2013-06-28T01:23:30Z"},
{"Line": "=>1055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2860/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "57254edf664b995084e23d023158b29c5aeaf70e", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str2.toLowerCase().contains(\"beta\")) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/626/buggy-version/src.main.java.io.github.bonigarcia.wdm.BrowserManager.java", "BodyUseAPI": [], "Fixed commit": "7a08c63b423fccf27572ddb8afb9b75c63011f61", "Url": "https://api.github.com/repos/bonigarcia/webdrivermanager", "Date": "2017-03-27T14:03:18Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_outputColumnIndexes[i]) == (-1)) { throw new java.lang.RuntimeException(java.lang.String.format(\"Column %s not found in the data set.\", inputName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3903/buggy-version/JAVA.ezPIE.ezpie.src.main.java.com.fanniemae.ezpie.actions.ExportDelimited.java", "BodyUseAPI": [], "Fixed commit": "046b2f5b019e15978dc5a76f2d5d09b6d8142845", "Url": "https://api.github.com/repos/FannieMaeOpenSource/ezPie", "Date": "2017-06-16T19:19:35Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.metastore.newms.RawStoreImp.getSFileLocation(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (sfl != null) { return getSFile(sfl.getFid()); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6253/buggy-version/src.metastore.src.java.org.apache.hadoop.hive.metastore.newms.RawStoreImp.java", "BodyUseAPI": ["org.apache.hadoop.hive.metastore.newms.RawStoreImp.getSFile(sfl.getFid())", "org.apache.hadoop.hive.metastore.api.SFileLocation.getFid()"], "Fixed commit": "29efded106954e72da3495fca003cf849abc0da5", "Url": "https://api.github.com/repos/bd-group/metastore", "Date": "2014-11-04T06:54:04Z"},
{"Line": "=>1872", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.metastore.newms.RawStoreImp.getSFile(file.getFid())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (nf != null) { nf.setStore_status(MetaStoreConst.MFileStoreStatus.INCREATE); this.updateSFile(nf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6253/buggy-version/src.metastore.src.java.org.apache.hadoop.hive.metastore.newms.RawStoreImp.java", "BodyUseAPI": ["org.apache.hadoop.hive.metastore.newms.RawStoreImp.updateSFile(org.apache.hadoop.hive.metastore.api.SFile)", "org.apache.hadoop.hive.metastore.api.SFile.setStore_status(MetaStoreConst.MFileStoreStatus.INCREATE)"], "Fixed commit": "29efded106954e72da3495fca003cf849abc0da5", "Url": "https://api.github.com/repos/bd-group/metastore", "Date": "2014-11-04T06:54:04Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { throw new java.lang.NullPointerException(\"value == null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1420/buggy-version/base.src.main.java.com.bolyartech.forge.base.exchange.builders.HttpExchangeBuilder.java", "BodyUseAPI": [], "Fixed commit": "5666468710563c498236f87ed1879fe8eb792370", "Url": "https://api.github.com/repos/ogrebgr/forge", "Date": "2016-06-10T05:39:12Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { throw new java.lang.NullPointerException(\"value == null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1420/buggy-version/base.src.main.java.com.bolyartech.forge.base.exchange.builders.FormHttpExchangeBuilder.java", "BodyUseAPI": [], "Fixed commit": "5666468710563c498236f87ed1879fe8eb792370", "Url": "https://api.github.com/repos/ogrebgr/forge", "Date": "2016-06-10T05:39:12Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((op.getPredef()) != null) { preApply = op.getPrecondition().clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3589/buggy-version/core.analysis.pog.src.main.java.eu.compassresearch.core.analysis.pog.obligations.CmlSatisfiabilityObligation.java", "BodyUseAPI": ["org.overture.ast.definitions.AImplicitOperationDefinition.getPrecondition()", "op.getPrecondition().clone()"], "Fixed commit": "ba22eb31fd0da0d4c105da719808c58a561dbee3", "Url": "https://api.github.com/repos/symphonytool/symphony", "Date": "2014-06-17T17:02:17Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.keyCode) == (org.eclipse.swt.SWT.ESC)) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1808/buggy-version/src.ui.MainGUI.java", "BodyUseAPI": [], "Fixed commit": "f5e385dd5e1fc78b07252de61c1fedac45d412e7", "Url": "https://api.github.com/repos/cs2103jan2016-f14-1j/main", "Date": "2016-03-20T11:38:59Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ui.MainGUI.keyalt) && (ui.MainGUI.keyE)) { controller.writePathToFile(); ui.MainGUI.keyalt = false; ui.MainGUI.keyE = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1808/buggy-version/src.ui.MainGUI.java", "BodyUseAPI": [], "Fixed commit": "f5e385dd5e1fc78b07252de61c1fedac45d412e7", "Url": "https://api.github.com/repos/cs2103jan2016-f14-1j/main", "Date": "2016-03-20T11:38:59Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.keyCode) == 'e') { ui.MainGUI.keyE = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1808/buggy-version/src.ui.MainGUI.java", "BodyUseAPI": [], "Fixed commit": "f5e385dd5e1fc78b07252de61c1fedac45d412e7", "Url": "https://api.github.com/repos/cs2103jan2016-f14-1j/main", "Date": "2016-03-20T11:38:59Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(pathToSrc.containsKey(javaPath))) { if (!(jd.core.FileSystem.isCaseSensitive())) { if (caseInsensitiveSet.containsIgnoreCase(javaPath)) { javaPath = caseInsensitiveSet.getNumberedName(javaPath); } } caseInsensitiveSet.add(javaPath); pathToSrc.put(javaPath, decompiler.decompile(jarPath, classPath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1020/buggy-version/src.main.java.jd.core.Decompiler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,decompiler.decompile(jarPath, classPath))", "jd.core.CaseInsensitiveFilePathSet.containsIgnoreCase(java.lang.String)", "jd.core.CaseInsensitiveFilePathSet.getNumberedName(java.lang.String)"], "Fixed commit": "a5c06a0cf3a7b53871cbfbcab525e9096fc81c0c", "Url": "https://api.github.com/repos/thorikawa/jd-core-java", "Date": "2013-12-10T01:42:28Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((remoteMediaClient.getPlayerState()) == (com.google.android.gms.cast.MediaStatus.PLAYER_STATE_PLAYING)) { playStatusFound = true; }else { if (((playStatusFound) && ((remoteMediaClient.getPlayerState()) == (com.google.android.gms.cast.MediaStatus.PLAYER_STATE_IDLE))) && ((remoteMediaClient.getPlayerState()) == (com.google.android.gms.cast.MediaStatus.IDLE_REASON_FINISHED))) { fireEvent(\"videoEnded\", null); remoteMediaClient.removeListener(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/839/buggy-version/android.src.com.cbcnewmedia.cast.CastProxy.java", "BodyUseAPI": ["com.google.android.gms.cast.framework.media.RemoteMediaClient.getPlayerState()", "com.google.android.gms.cast.framework.media.RemoteMediaClient.getPlayerState()", "com.google.android.gms.cast.framework.media.RemoteMediaClient.removeListener(com.cbcnewmedia.cast.CastProxy.1)"], "Fixed commit": "f02ec0023d50d2f1093498babadda2e8bf95291b", "Url": "https://api.github.com/repos/TylerZubke/ti-cast", "Date": "2017-10-31T22:35:16Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.isatools.tablib.export.graph_algorithm.Node>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (n == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5747/buggy-version/graph2tab.src.main.java.org.isatools.tablib.export.graph_algorithm.LayersBuilder.java", "BodyUseAPI": [], "Fixed commit": "e11929d2ed781d6c92576cadee961af015df9dc6", "Url": "https://api.github.com/repos/marco-brandizi/ISAvalidator-ISAconverter-BIImanager", "Date": "2011-03-15T19:20:42Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((posts.size()) > 0) java.lang.System.out.println((((posts.get(0).getCreatedTime().toString()) + \": \") + (fullPosts.size())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6177/buggy-version/src.main.java.edu.csupomona.nlp.tool.crawler.Facebook.java", "BodyUseAPI": ["java.io.PrintStream.println((((posts.get(0).getCreatedTime().toString()) + \": \") + (fullPosts.size())))", "posts.get(0).getCreatedTime()", "posts.get(0).getCreatedTime().toString()", "facebook4j.ResponseList<facebook4j.Post>.get(int)"], "Fixed commit": "3f3ea51fdb0ca05181f7db1cf8c177749cc9076f", "Url": "https://api.github.com/repos/AnakinFoxe/CPPNLPLib", "Date": "2014-08-30T03:35:46Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.concord.energy3d.util.Config.isWebStart())) org.concord.energy3d.util.Updater.install();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5781/buggy-version/src.main.java.org.concord.energy3d.MainApplication.java", "BodyUseAPI": [], "Fixed commit": "b223ab8e14a0e0856e646d08e5ab9cc46ef6e317", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2016-06-22T02:19:24Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slotID != 0) { if (!(mergeItemStack(slotStack, 0, 1, true))) { return null; } }else if (slotID == 0) { if (!(mergeItemStack(slotStack, 4, inventorySlots.size(), true))) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3765/buggy-version/src.main.java.mekanism.common.inventory.container.ContainerChemicalOxidizer.java", "BodyUseAPI": [], "Fixed commit": "27b61e288a173c2ae28db29c62d017d9a640da1d", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2014-08-05T20:53:40Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (z >= 0) { facingDown = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4338/buggy-version/src.com.example.selfi.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "33cc9b71d9ddf946cb5b7d9f6aec81a60ab83514", "Url": "https://api.github.com/repos/InteractionDesign/Selfie", "Date": "2014-05-07T14:04:47Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ir.arcinc.sundrop.repository.UserRepository.findUserByUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (u == null) throw new org.springframework.security.core.userdetails.UsernameNotFoundException(\"Username not found\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8801/buggy-version/src.main.java.ir.arcinc.sundrop.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "323cda45e33528e6646539bd02dadebf7f8ebdb4", "Url": "https://api.github.com/repos/tahaeghtesad/SunDrop", "Date": "2017-08-08T09:33:01Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((grid[yPos][xPos].getAdjacentMines()) == 0) revealGrid(xPos, yPos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7681/buggy-version/src.main.java.model.Grid.java", "BodyUseAPI": ["model.Grid.revealGrid(int,int)"], "Fixed commit": "247a7e1116ca7c401ecf315c4204b2986967be9f", "Url": "https://api.github.com/repos/pcorentin/Assignment", "Date": "2015-07-08T00:09:42Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.nio.channels.SocketChannel, ProxyServer.SocketChannelExtender>.get(java.nio.channels.SelectableChannel)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (socketChannelExtender != null) { socketChannelExtender.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4564/buggy-version/src.main.java.ProxyServer.ConnectionsAccepter.java", "BodyUseAPI": ["ProxyServer.SocketChannelExtender.close()"], "Fixed commit": "857fe6676f69d3899ae084421e1578945d0e395c", "Url": "https://api.github.com/repos/Ksan0/ProxyServer", "Date": "2014-10-01T04:44:22Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source.isEmpty()) || (source.equals(\"'\"))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6476/buggy-version/src.main.java.com.instateams.controller.converter.LocalDateConverter.java", "BodyUseAPI": [], "Fixed commit": "1d7eee5a9d985d556b18e0c1d99215b72961b69e", "Url": "https://api.github.com/repos/lgaleazzi/spring-instateams", "Date": "2017-11-01T21:19:38Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((itu.jgdiejuu.torcs.BulkNEATController.chromoFitnesses) == null) itu.jgdiejuu.torcs.BulkNEATController.chromoFitnesses = new java.util.HashMap<java.lang.Long, java.util.ArrayList<java.lang.Integer>>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6110/buggy-version/src.itu.jgdiejuu.torcs.BulkNEATController.java", "BodyUseAPI": [], "Fixed commit": "ce578a910e66e508f3549c2d9a2edb192f6ee57a", "Url": "https://api.github.com/repos/nezbo/neat4speed2", "Date": "2014-01-14T16:10:31Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (active) refactor();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2554/buggy-version/src.stat.StatContainer.java", "BodyUseAPI": [], "Fixed commit": "73a3529accce5f8f7f4abb9539df3efc1ba96fce", "Url": "https://api.github.com/repos/Angular-Angel/AngelUtil", "Date": "2017-11-29T01:58:39Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["repositories.MovieCatalogueRepository.getOne(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (movie == null) { return new org.springframework.http.ResponseEntity<java.lang.String>(org.springframework.http.HttpStatus.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3947/buggy-version/markandspencer-resource.src.main.java.service.MovieStoreService.java", "BodyUseAPI": [], "Fixed commit": "ef82d7388f59f1388363388b47d0891f7bb60d0d", "Url": "https://api.github.com/repos/ucugo/mands", "Date": "2015-06-01T19:49:16Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (masterBlock == null) ((zmaster587.libVulpes.tile.IMultiblock) (tile)).setMasterBlock(this.pos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9199/buggy-version/src.main.java.zmaster587.libVulpes.tile.multiblock.TileMultiBlock.java", "BodyUseAPI": [], "Fixed commit": "a47c9e24e25b1e5de9ca19548f45751731d2d1e2", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-12-21T05:17:55Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loc == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2384/buggy-version/Breakpoint.src.cz.GravelCZLP.Breakpoint.Configuration.java", "BodyUseAPI": [], "Fixed commit": "62f99b13ddbaca2636e01805f045494dcb7333ee", "Url": "https://api.github.com/repos/BreakpointCrew/Breakpoint", "Date": "2016-09-02T20:33:55Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.michaelsolati.popularmovies.MovieObject.getRelease()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((movieRelease.length()) != 0) { movieRelease = ((((movieRelease.substring(5, 7)) + \"/\") + (movieRelease.substring(8, 10))) + \"/\") + (movieRelease.substring(2, 4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5793/buggy-version/app.src.main.java.com.michaelsolati.popularmovies.DetailActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "435c85a8993362735bb4775e8bc57850ad2ebac0", "Url": "https://api.github.com/repos/MichaelSolati/Project-1-Popular-Movies", "Date": "2016-05-02T03:06:34Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.counter)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (txtCount != null) { if (panelListItemModels.get(position).getCounterVisibility()) { txtCount.setText(panelListItemModels.get(position).getCount()); }else { txtCount.setVisibility(View.GONE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3171/buggy-version/main.src.main.java.me.vtag.app.adapters.PanelListAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(panelListItemModels.get(position).getCount())", "android.widget.TextView.setVisibility(View.GONE)"], "Fixed commit": "ea4f1868c66e4ca731f97cceedb018acf73834de", "Url": "https://api.github.com/repos/nageshwara/vtagme_android", "Date": "2014-06-15T09:44:48Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(line.trim().isEmpty())) { parseLine(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2639/buggy-version/genepi-io.src.genepi.io.text.AbstractLineReader.java", "BodyUseAPI": ["genepi.io.text.AbstractLineReader<o>.parseLine(java.lang.String)"], "Fixed commit": "92a4235bdc76c55f7d03e5805d8974d77675b9e9", "Url": "https://api.github.com/repos/genepi/genepi-libs", "Date": "2013-10-20T10:50:39Z"},
{"Line": "=>1492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase.sample(java.net.URL,java.lang.String,boolean,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tempRes != null) { lastRes = tempRes; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8273/buggy-version/src.protocol.http.org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase.java", "BodyUseAPI": [], "Fixed commit": "827c5607efdd0eb6e2f60678a21e0607fc283e05", "Url": "https://api.github.com/repos/saketh7/Jmeter", "Date": "2015-11-15T00:24:07Z"},
{"Line": "=>1142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (res != null) { res.setSampleLabel(getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8273/buggy-version/src.protocol.http.org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase.java", "BodyUseAPI": ["org.apache.jmeter.samplers.SampleResult.setSampleLabel(getName())"], "Fixed commit": "827c5607efdd0eb6e2f60678a21e0607fc283e05", "Url": "https://api.github.com/repos/saketh7/Jmeter", "Date": "2015-11-15T00:24:07Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mSession)) { if (null != (getActivity())) { getActivity().finish(); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6106/buggy-version/vector.src.main.java.im.vector.fragments.VectorSettingsPreferencesFragment.java", "BodyUseAPI": [], "Fixed commit": "26b0da85bbb88154b77b85a8a6904a20e9f9b1e5", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-07-18T15:46:24Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((memoryEncounters[playerID]) == 1) { action = 1; }else { action = memory[playerID][0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3141/buggy-version/src.Agent.java", "BodyUseAPI": [], "Fixed commit": "6e87a266fab5508f9c326314ccc513a1bbf38363", "Url": "https://api.github.com/repos/CC007/KAT-hwset-4", "Date": "2014-09-29T12:40:28Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (strategy.equals(\"ALL-C\")) { action = 1; }else if (strategy.equals(\"JOSS\")) { if ((r.nextInt(10)) == 0) { action = -1; }else if ((memoryEncounters[playerID]) == 1) { action = 1; }else { action = memory[playerID][0]; } }else if (strategy.equals(\"RANDOM\")) { if ((memoryEncounters[playerID]) == 1) { action = -1; }else if ((memory[playerID][0]) == 1) { if ((memoryEncounters[playerID]) < 4) { action = 1; }else if (((memoryOwnActions[playerID][0]) == (-1)) || ((memoryOwnActions[playerID][1]) == (-1))) { action = 1; }else { action = -1; } }else { action = memory[playerID][0]; } }else if (strategy.equals(\"RANDOM\")) { action = (r.nextBoolean()) ? 1 : -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3141/buggy-version/src.Agent.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "6e87a266fab5508f9c326314ccc513a1bbf38363", "Url": "https://api.github.com/repos/CC007/KAT-hwset-4", "Date": "2014-09-29T12:40:28Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.lxtreme.ols.tool.jtag.JTAGDataSet.getData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((i + 1) < (dataSet.size())) { final nl.lxtreme.ols.tool.jtag.JTAGData next = dataSet.get((i + 1)); if ((next.getStartSampleIndex()) == (data.getStartSampleIndex())) { tdiData = ((java.math.BigInteger) ((next.isTdiData()) ? next.getDataValue() : data.getDataValue())); tdoData = ((java.math.BigInteger) ((next.isTdoData()) ? next.getDataValue() : data.getDataValue())); i++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5522/buggy-version/tool.jtag.src.main.java.nl.lxtreme.ols.tool.jtag.JTAGProtocolAnalysisDialog.java", "BodyUseAPI": ["java.util.List<nl.lxtreme.ols.tool.jtag.JTAGData>.get(int)"], "Fixed commit": "01e616ce657f27b6cde282e128c3744da15f0086", "Url": "https://api.github.com/repos/jawi/ols", "Date": "2012-12-11T14:58:26Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<nl.lxtreme.ols.tool.jtag.JTAGData>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tdiData == null) && (data.isTdiData())) { tdiData = ((java.math.BigInteger) (data.getDataValue())); tdoData = null; }else if ((tdoData == null) && (data.isTdoData())) { tdiData = null; tdoData = ((java.math.BigInteger) (data.getDataValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5522/buggy-version/tool.jtag.src.main.java.nl.lxtreme.ols.tool.jtag.JTAGProtocolAnalysisDialog.java", "BodyUseAPI": ["nl.lxtreme.ols.tool.jtag.JTAGData.getDataValue()", "nl.lxtreme.ols.tool.jtag.JTAGData.getDataValue()", "nl.lxtreme.ols.tool.jtag.JTAGData.isTdoData()"], "Fixed commit": "01e616ce657f27b6cde282e128c3744da15f0086", "Url": "https://api.github.com/repos/jawi/ols", "Date": "2012-12-11T14:58:26Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((msg[0].equals(\"1\")) && (msg[1].equals(\"1\"))) { android.widget.Toast.makeText(this, msg[2], Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2780/buggy-version/app.src.main.java.cn.ilell.ihome.base.BaseActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(this, msg[2], Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(cn.ilell.ihome.base.BaseActivity,java.lang.String,Toast.LENGTH_SHORT)"], "Fixed commit": "c2ec7b70b844ef6f098cf50928819acd65686b61", "Url": "https://api.github.com/repos/SDUST-IHome/IHome-Android", "Date": "2016-08-22T14:44:33Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ca.ipredict.predictor.Parameters.removeUnknownItemsForPrediction) { java.util.Iterator<ca.ipredict.database.Item> iter = target.getItems().iterator(); while (iter.hasNext()) { ca.ipredict.database.Item item = ((ca.ipredict.database.Item) (iter.next())); if ((II.get(item.val)) == null) { iter.remove(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4395/buggy-version/src.ca.ipredict.predictor.CPT.NewCPTPredictor.java", "BodyUseAPI": [], "Fixed commit": "de0bbe721a6d94a6467a934b256be7080aff50c6", "Url": "https://api.github.com/repos/tedgueniche/IPredict", "Date": "2014-01-14T18:19:00Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((status) == (STATUS.UNSAT)) { solved = false; }else { try { solved = solver.isSatisfiable(); } catch (org.sat4j.specs.TimeoutException e) { if ((status) == (STATUS.ABORTED)) { messages.add(\"Aborted\"); }else { messages.add((\"Timeout reached: \" + (getTimeout()))); } return STATUS.ABORTED; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3888/buggy-version/jsatbuilder.src.hu.webarticum.jsatbuilder.solver.sat4j.AbstractSat4jSolver.java", "BodyUseAPI": [], "Fixed commit": "6063b913cce5f81b10ab9af89f42e023cc231a27", "Url": "https://api.github.com/repos/davidsusu/jsatbuilder", "Date": "2017-08-18T16:18:20Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((im.vector.services.EventStreamService.StreamAction.START) == (mServiceState)) { setServiceState(im.vector.services.EventStreamService.StreamAction.AUTO_RESTART); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5075/buggy-version/vector.src.main.java.im.vector.services.EventStreamService.java", "BodyUseAPI": [], "Fixed commit": "04bb70350764ca26bf034f85ebd5b5f45f7eded7", "Url": "https://api.github.com/repos/jgkamat/riot-android", "Date": "2017-05-03T07:30:48Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((im.vector.services.EventStreamService.StreamAction.AUTO_RESTART) == (mServiceState)) { org.matrix.androidsdk.util.Log.e(im.vector.services.EventStreamService.LOG_TAG, \"onStartCommand : auto restart in progress ignore current command\"); return START_STICKY; }else if (null == intent) { org.matrix.androidsdk.util.Log.e(im.vector.services.EventStreamService.LOG_TAG, \"onStartCommand : null intent -> restart the service\"); restart = true; }else if ((im.vector.services.EventStreamService.StreamAction.IDLE) == (mServiceState)) { org.matrix.androidsdk.util.Log.e(im.vector.services.EventStreamService.LOG_TAG, \"onStartCommand : automatically restart the service\"); restart = true; }else { org.matrix.androidsdk.util.Log.e(im.vector.services.EventStreamService.LOG_TAG, (\"onStartCommand : EXTRA_AUTO_RESTART_ACTION has been set but mServiceState = \" + (mServiceState))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5075/buggy-version/vector.src.main.java.im.vector.services.EventStreamService.java", "BodyUseAPI": ["org.matrix.androidsdk.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "04bb70350764ca26bf034f85ebd5b5f45f7eded7", "Url": "https://api.github.com/repos/jgkamat/riot-android", "Date": "2017-05-03T07:30:48Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ccw.ClojureCore.getClojureProject(ccw.launching.LaunchUtils.getProject(configuration))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((clojureProject.getJavaProject().findElement(new org.eclipse.core.runtime.Path(\"clojure/tools/nrepl\"))) == null) { try { java.io.File repllib = org.eclipse.core.runtime.FileLocator.getBundleFile(org.eclipse.core.runtime.Platform.getBundle(\"org.clojure.tools.nrepl\")); classpath.add(repllib.getAbsolutePath()); } catch (java.io.IOException e) { throw new org.eclipse.ui.WorkbenchException(\"Failed to find nrepl library\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8303/buggy-version/ccw.core.src.ccw.launching.ClojureLaunchDelegate.java", "BodyUseAPI": [], "Fixed commit": "ccb3d3364b0d0a37bbe2600774bf2c205c95446e", "Url": "https://api.github.com/repos/cemerick/ccw", "Date": "2010-11-15T12:50:50Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextNode) == null) debug.Debug.println(((\"exploreSpecialTile: getNodeInDirection(\" + (nextDirection)) + \") returned null!\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4481/buggy-version/Beagleboard.beagleboard.algorithms.labyrinth.LabyrinthInfo.java", "BodyUseAPI": [], "Fixed commit": "0672093580507fb237a0f77e52eca604c87bf189", "Url": "https://api.github.com/repos/Dowers/tsea29", "Date": "2014-12-12T16:09:23Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["algorithms.labyrinth.LabyrinthNode.getNodeInDirection(algorithms.labyrinth.labyrinth_enums.AbsoluteDir)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (n == null) debug.Debug.println(\"Trying to get parent node, but parent node is null!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4481/buggy-version/Beagleboard.beagleboard.algorithms.labyrinth.LabyrinthNode.java", "BodyUseAPI": [], "Fixed commit": "0672093580507fb237a0f77e52eca604c87bf189", "Url": "https://api.github.com/repos/Dowers/tsea29", "Date": "2014-12-12T16:09:23Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mindroid.os.Environment.getPreferencesDirectory().exists())) { mindroid.os.Environment.getPreferencesDirectory().mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5127/buggy-version/src.mindroid.app.ContextImpl.java", "BodyUseAPI": [], "Fixed commit": "b4b645436db6fab47ee922ba1dbc622a9335f312", "Url": "https://api.github.com/repos/esrlabs/Mindroid.java", "Date": "2013-08-25T14:46:15Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SAP.sap(java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sap[0]) == (-1)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3232/buggy-version/wordnet.SAP.java", "BodyUseAPI": [], "Fixed commit": "bf02118f800cdd664ae76c319be41022c2dc6575", "Url": "https://api.github.com/repos/ericzliu/algorithm2", "Date": "2017-11-02T13:06:41Z"},
{"Line": "=>833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(messages.Messages.hasErrors())) { documento.clasificado = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7009/buggy-version/fap.app.services.aed.AedGestorDocumentalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "44e96c4431c27a66190dc5c670ee875bf5510f00", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2013-11-04T08:01:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yiwugou.homer.core.factory.MethodOptionsFactory.notDef(java.lang.Integer,int,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((active == null) || (active < 0)) { active = com.yiwugou.homer.core.constant.RequestDefault.ACTIVE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/24/buggy-version/homer-core.src.main.java.com.yiwugou.homer.core.factory.MethodOptionsFactory.java", "BodyUseAPI": [], "Fixed commit": "174044da9a7344739c6ca146f8f59fe27e47f339", "Url": "https://api.github.com/repos/yiwugou/homer", "Date": "2017-06-21T03:14:59Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yiwugou.homer.core.factory.MethodOptionsFactory.notDef(java.lang.Integer,int,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((connectTimeout == null) || (connectTimeout < 0)) { connectTimeout = com.yiwugou.homer.core.constant.RequestDefault.CONNECT_TIMEOUT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/24/buggy-version/homer-core.src.main.java.com.yiwugou.homer.core.factory.MethodOptionsFactory.java", "BodyUseAPI": [], "Fixed commit": "174044da9a7344739c6ca146f8f59fe27e47f339", "Url": "https://api.github.com/repos/yiwugou/homer", "Date": "2017-06-21T03:14:59Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yiwugou.homer.core.factory.MethodOptionsFactory.notDef(java.lang.Integer,int,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((execute == null) || (execute < 0)) { execute = com.yiwugou.homer.core.constant.RequestDefault.EXECUTE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/24/buggy-version/homer-core.src.main.java.com.yiwugou.homer.core.factory.MethodOptionsFactory.java", "BodyUseAPI": [], "Fixed commit": "174044da9a7344739c6ca146f8f59fe27e47f339", "Url": "https://api.github.com/repos/yiwugou/homer", "Date": "2017-06-21T03:14:59Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yiwugou.homer.core.factory.MethodOptionsFactory.notDef(java.lang.Integer,int,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((readTimeout == null) || (readTimeout < 0)) { readTimeout = com.yiwugou.homer.core.constant.RequestDefault.READ_TIMEOUT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/24/buggy-version/homer-core.src.main.java.com.yiwugou.homer.core.factory.MethodOptionsFactory.java", "BodyUseAPI": [], "Fixed commit": "174044da9a7344739c6ca146f8f59fe27e47f339", "Url": "https://api.github.com/repos/yiwugou/homer", "Date": "2017-06-21T03:14:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(de.haw_chat.common.operation.implementations.OperationDataManager.operationCodeMap.containsKey(operationCode))) return de.haw_chat.common.operation.implementations.OperationDataManager.getOperationData(\"UnknownClient\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8286/buggy-version/RN_Praktikum_02.HawChatCommon.src.de.haw_chat.common.operation.implementations.OperationDataManager.java", "BodyUseAPI": [], "Fixed commit": "1fb7c387f4dcb4e2c2bdb8aeecd61e9478ff5ffe", "Url": "https://api.github.com/repos/mcmyffin/BAI-4-RN", "Date": "2015-10-31T13:17:19Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(de.haw_chat.common.operation.implementations.OperationDataManager.operationNameMap.containsKey(operationName))) return de.haw_chat.common.operation.implementations.OperationDataManager.getOperationData(\"UnknownClient\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8286/buggy-version/RN_Praktikum_02.HawChatCommon.src.de.haw_chat.common.operation.implementations.OperationDataManager.java", "BodyUseAPI": [], "Fixed commit": "1fb7c387f4dcb4e2c2bdb8aeecd61e9478ff5ffe", "Url": "https://api.github.com/repos/mcmyffin/BAI-4-RN", "Date": "2015-10-31T13:17:19Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.endsWith(\"\\n\")) { processResponse(myTextBuilder.toString()); myTextBuilder = new java.lang.StringBuilder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8378/buggy-version/python.pydevSrc.com.jetbrains.python.debugger.pydev.RemoteDebugger.java", "BodyUseAPI": [], "Fixed commit": "2980a9b20e646049a9a798b21a5fc0cef71b28ae", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2014-11-12T11:28:34Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, com.jpexs.decompiler.flash.tags.base.CharacterTag>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (neededCharacter == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6421/buggy-version/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.SWF.java", "BodyUseAPI": [], "Fixed commit": "b9c2be102f5bf51873e229c7a76e457274be51cc", "Url": "https://api.github.com/repos/jindrapetrik/jpexs-decompiler", "Date": "2014-11-20T18:54:50Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x >= (raster.getWidth())) || (y >= (raster.getHeight()))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5890/buggy-version/src.invenio.pdf.features.PageLayoutProvider.java", "BodyUseAPI": [], "Fixed commit": "4643f220e66090f624b2098d01e71e23b0a28d73", "Url": "https://api.github.com/repos/ppiotr/PDFPlotsExtractor", "Date": "2012-10-17T14:21:13Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (testName.equals(\"this\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4080/buggy-version/HyperGraph.HyperGraph.src.sequenceDiagramGenerator.sdedit.SDObject.java", "BodyUseAPI": [], "Fixed commit": "31928fc268bf88f01ef13f044796ee0ced595a0a", "Url": "https://api.github.com/repos/vreed1/SequenceDiagramGenerator", "Date": "2015-04-18T19:40:10Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputParsing.InputParsing.isFunction(java.lang.Character.toString(input.charAt(i)).concat(java.lang.Character.toString(input.charAt((i + 1))).concat(java.lang.Character.toString(input.charAt((i + 2))))))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5889/buggy-version/src.inputParsing.InputParsing.java", "BodyUseAPI": [], "Fixed commit": "cd0e40319b49c69e64b5e1994a8ff15f49f3c40b", "Url": "https://api.github.com/repos/Lucroth/op-calculator", "Date": "2016-11-07T23:09:32Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (contents == null) { uk.ac.ic.wlgitbridge.data.filestore.RawFile rawFile = new uk.ac.ic.wlgitbridge.git.util.RepositoryObjectTreeWalker(repository).getDirectoryContents().getFileTable().get(path); if (rawFile == null) { throw new java.lang.IllegalStateException(\"file was not in the current commit, or the git tree, yet path was not null\"); } contents = rawFile.getContents(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1249/buggy-version/src.main.java.uk.ac.ic.wlgitbridge.data.model.ResourceFetcher.java", "BodyUseAPI": [], "Fixed commit": "e88be014c78f8e07c2099d5b228bc8805d24e175", "Url": "https://api.github.com/repos/overleaf/writelatex-git-bridge", "Date": "2015-08-05T18:41:05Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((TextureGL.count) + 16) < pieceSelect) && (pieceSelect < ((TextureGL.count) + 25))) playerTwoPawnTextures.set((pieceSelect - ((TextureGL.count) + 17)), texture);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3969/buggy-version/Checkmate.app.src.main.java.com.theateam.checkmate.OpenGLRenderer.java", "BodyUseAPI": ["java.util.List<float[]>.set((pieceSelect - ((TextureGL.count) + 17)),float[])"], "Fixed commit": "fc49ce7ca0b2d080c1daf17a3387c7f509228df0", "Url": "https://api.github.com/repos/AriPerkkio/Checkmate-Team-Project-DIT", "Date": "2016-04-06T13:52:34Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((picture) == null) { picture = new com.theateam.checkmate.TextureGL(mActivityContext, coordinates, R.mipmap.wooden, playerOnePawnTextures, playerTwoPawnTextures); android.util.Log.e(\"Picture\", \"null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3969/buggy-version/Checkmate.app.src.main.java.com.theateam.checkmate.OpenGLRenderer.java", "BodyUseAPI": [], "Fixed commit": "fc49ce7ca0b2d080c1daf17a3387c7f509228df0", "Url": "https://api.github.com/repos/AriPerkkio/Checkmate-Team-Project-DIT", "Date": "2016-04-06T13:52:34Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((TextureGL.count) < pieceSelect) && (pieceSelect < ((TextureGL.count) + 9))) playerOnePawnTextures.set(((pieceSelect - (TextureGL.count)) - 1), texture);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3969/buggy-version/Checkmate.app.src.main.java.com.theateam.checkmate.OpenGLRenderer.java", "BodyUseAPI": ["java.util.List<float[]>.set(((pieceSelect - (TextureGL.count)) - 1),float[])"], "Fixed commit": "fc49ce7ca0b2d080c1daf17a3387c7f509228df0", "Url": "https://api.github.com/repos/AriPerkkio/Checkmate-Team-Project-DIT", "Date": "2016-04-06T13:52:34Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((o1.isAttribute()) && (!(o2.isAttribute()))) { return 1; }else if ((!(o1.isAttribute())) && (o2.isAttribute())) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3128/buggy-version/modules.DesktopAppearance.src.main.java.org.gephi.desktop.appearance.AppearanceTopComponent.java", "BodyUseAPI": ["org.gephi.appearance.api.Function.isAttribute()", "org.gephi.appearance.api.Function.isAttribute()"], "Fixed commit": "8a08f8931b429becd27e0e062910d6e5178bc9fc", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2016-10-23T11:35:14Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (divisor != (number / divisor)) factors[(nextFreePosition + 1)] = number / divisor;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1081/buggy-version/src.G03.P021_AmicableNumbers.java", "BodyUseAPI": [], "Fixed commit": "bc4c4feb53f941cb1721394ae66412d1ce0c6bfb", "Url": "https://api.github.com/repos/HaroldAlmon/ProjectEuler", "Date": "2015-07-05T12:34:32Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) return new ReturnObjectImpl(ErrorMessage.EMPTY_STRUCTURE, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7933/buggy-version/src.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "5d8db77ca1ec7e2d1a89e28affcb2fae2da45532", "Url": "https://api.github.com/repos/BBK-PiJ-2014-01/cw3", "Date": "2014-12-26T00:05:02Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) return new ReturnObjectImpl(ErrorMessage.EMPTY_STRUCTURE, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7933/buggy-version/src.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "5d8db77ca1ec7e2d1a89e28affcb2fae2da45532", "Url": "https://api.github.com/repos/BBK-PiJ-2014-01/cw3", "Date": "2014-12-26T00:05:02Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ins_password.getText().toString().trim()", "reins_password.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pss1.equals(\"\")) || (pss2.equals(\"\"))) { ins_password.setText(\"\"); ins_password.setHint(R.string.esito_no); ins_password.setHintTextColor(Color.RED); android.widget.Toast.makeText(mActivity.getApplicationContext(), R.string.empty_passwords, Toast.LENGTH_LONG).show(); }else if (pss1.equals(pss2)) { ins_password.setHint(R.string.esito_ok); ins_password.setHintTextColor(Color.GREEN); com.baraccasoftware.securenotes.object.PasswordPreference passwordPreference = new com.baraccasoftware.securenotes.object.PasswordPreference(mActivity.getApplicationContext()); passwordPreference.savePassword(pss1); passwordPreference.setLockedApp(false); startNoteActivity(); }else { ins_password.setText(\"\"); ins_password.setHint(R.string.esito_no); ins_password.setHintTextColor(Color.RED); android.widget.Toast.makeText(mActivity.getApplicationContext(), R.string.different_password, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2633/buggy-version/SecureNotesApp.src.com.baraccasoftware.securenotes.app.RegisterFragment.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "com.baraccasoftware.securenotes.object.PasswordPreference.savePassword(java.lang.String)"], "Fixed commit": "632b0c2a50a948a09fe73bf35ceae6414aa225fc", "Url": "https://api.github.com/repos/BaraccaSoftware/SecureNotesNew", "Date": "2014-03-30T16:59:24Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (relativeStellarBody.getVelocity().getVector().isZero()) { stellarBody.setVelocity(velocity); }else { com.solarout.engine.Velocity relativeBodyVelocity = relativeStellarBody.getVelocity(); com.badlogic.gdx.math.Vector3 tmpRelativeBodyVelocity = new com.badlogic.gdx.math.Vector3(relativeBodyVelocity.getVector()); tmpRelativeBodyVelocity.scl(relativeBodyVelocity.getScalar()); com.badlogic.gdx.math.Vector3 tmpMainBodyVelocity = new com.badlogic.gdx.math.Vector3(velocity.getVector()); tmpMainBodyVelocity.scl(velocity.getScalar()).add(tmpRelativeBodyVelocity); float tmpMainBodyVelocityLength = tmpMainBodyVelocity.len(); tmpMainBodyVelocity.nor(); float tmpMainBodyVelocityScalar = tmpMainBodyVelocityLength / (tmpMainBodyVelocity.len()); velocity.setScalar(tmpMainBodyVelocityScalar); velocity.setVector(tmpMainBodyVelocity); stellarBody.setVelocity(velocity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5893/buggy-version/engine.src.com.solarout.engine.UniStarSystem.java", "BodyUseAPI": ["com.solarout.engine.SphericStellarBody.getVelocity()"], "Fixed commit": "3f6d2f0f94d772acec344501106a95287c5a4b21", "Url": "https://api.github.com/repos/azakhary/solarout", "Date": "2014-12-20T07:01:08Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (context != null) { inflater = android.view.LayoutInflater.from(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6494/buggy-version/app.src.main.java.edu.ucsb.cs.cs184.speedrun.speedrunapp2.AddGameAdapter.java", "BodyUseAPI": [], "Fixed commit": "2a2a13db236b4992a1c6f7cb894e85abec04665f", "Url": "https://api.github.com/repos/bzhu36/SpeedrunApp", "Date": "2017-12-21T07:11:33Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (context != null) { inflater = android.view.LayoutInflater.from(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6494/buggy-version/app.src.main.java.edu.ucsb.cs.cs184.speedrun.speedrunapp2.FriendsAdapter.java", "BodyUseAPI": [], "Fixed commit": "2a2a13db236b4992a1c6f7cb894e85abec04665f", "Url": "https://api.github.com/repos/bzhu36/SpeedrunApp", "Date": "2017-12-21T07:11:33Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (context != null) { inflater = android.view.LayoutInflater.from(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6494/buggy-version/app.src.main.java.edu.ucsb.cs.cs184.speedrun.speedrunapp2.LocalGameAdapter.java", "BodyUseAPI": [], "Fixed commit": "2a2a13db236b4992a1c6f7cb894e85abec04665f", "Url": "https://api.github.com/repos/bzhu36/SpeedrunApp", "Date": "2017-12-21T07:11:33Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lhs.getStartDttm().compareTo(rhs.getStartDttm())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i != 0) { return i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/895/buggy-version/Conference-Android.app.src.main.java.com.sagetech.conference_android.app.ui.presenter.ConferenceSessionViewBuilder.java", "BodyUseAPI": [], "Fixed commit": "942827cfa542338ab186c3a1bdec0c37dffdf674", "Url": "https://api.github.com/repos/Google-IO-Extended-Grand-Rapids/conference_android", "Date": "2015-05-25T01:35:33Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((poster_path) != null) { return ((java.lang.String) (\"http://image.tmdb.org/t/p/w185/\" + (poster_path))); }else { return \"http://1vyf1h2a37bmf88hy3i8ce9e.wpengine.netdna-cdn.com/wp-content/themes/public/img/noimgavailable.jpg\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7474/buggy-version/app.src.main.java.tk.talcharnes.popularmovies.MovieModel.java", "BodyUseAPI": [], "Fixed commit": "49fb683dd5ff02f03d7cdf84f6c1edcb844b3d7c", "Url": "https://api.github.com/repos/tal32123/Popular-Movies", "Date": "2016-03-03T11:05:10Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((max + min) != 0) coins = 100 * ((max - min) / (max + min)); else coins = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8799/buggy-version/src.Board.java", "BodyUseAPI": [], "Fixed commit": "856942982cdb0bcec276b3f023974db50f6b4f48", "Url": "https://api.github.com/repos/BradleyBeyers/finna-be-octo-meme", "Date": "2015-04-29T00:00:06Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (comIOQueue.isEmpty()) { comIOQueue.wait(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5904/buggy-version/master.src.candis.server.ServerCommunicationIO.java", "BodyUseAPI": ["java.util.List<java.lang.Runnable>.wait()"], "Fixed commit": "6ce7184777eeeda4b837c930af76d2903cd58175", "Url": "https://api.github.com/repos/ejoerns/candis", "Date": "2012-12-09T12:57:22Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mConnNameInList.getText().toString().isEmpty()) mConnNameInList.setError(\"Enter username\", null); else { mConnection.setConnectionNameInList(mConnNameInList.getText().toString()); mConnection.setInversion(mIsInversionSwitchCompat.isChecked()); mConnection.setProfoundEncryption(mIsProfoundEncSwitchCompat.isChecked()); com.houseqwerty.android.zerotask.Singleton.get().updateConnection(mConnection); getActivity().finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6652/buggy-version/app.src.main.java.com.houseqwerty.android.zerotask.SettingConnectionFragment.java", "BodyUseAPI": ["mConnNameInList.getText().toString()", "android.widget.EditText.getText()", "android.widget.EditText.setError(java.lang.String,<nulltype>)", "com.houseqwerty.android.zerotask.Connection.setConnectionNameInList(mConnNameInList.getText().toString())"], "Fixed commit": "147ab4f280b978c5c7a274b7dcd3e7b6c63cf396", "Url": "https://api.github.com/repos/Houseqwerty/Zero", "Date": "2016-11-08T13:30:05Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.softtanck.imchat.adapter.VoicePlayClickListener.isPlaying) { VoicePlayClickListener.currentPlayListener.stopPlayVoice(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3062/buggy-version/app.src.main.java.com.softtanck.imchat.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b8cdf9444d9a8a1ce90dcc6bb54a127b046a47fe", "Url": "https://api.github.com/repos/q422013/IMChat", "Date": "2015-08-05T02:14:15Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((0 <= p) && (p < P)) && ((((hInput - r) + pad_h) % stride_h) == 0)) { for (int s = 0; s < S; s++) { int outRowIndex = ((cInput * RS) + (r * S)) + s; int q = ((wInput - s) + pad_w) / stride_w; if (((0 <= q) && (q < Q)) && ((((wInput - s) + pad_w) % stride_w) == 0)) { output.appendValue(outRowIndex, ((p * Q) + q), value); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/15/buggy-version/src.main.java.org.apache.sysml.runtime.matrix.data.LibMatrixDNNIm2ColHelper.java", "BodyUseAPI": ["org.apache.sysml.runtime.matrix.data.MatrixBlock.appendValue(int,int,double)"], "Fixed commit": "9b5911e21b5fa2ad033eb260b4b47fd53a20ec01", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2017-08-27T04:06:05Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInWorkspace(org.occiware.clouddesigner.occi.OCCIPackage.class))) { resourceSet.getPackageRegistry().put(org.occiware.clouddesigner.occi.OCCIPackage.eINSTANCE.getNsURI(), org.occiware.clouddesigner.occi.OCCIPackage.eINSTANCE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4375/buggy-version/clouddesigner.org.occiware.clouddesigner.occi.gen.connector.src.org.occiware.clouddesigner.occi.gen.connector.main.Main.java", "BodyUseAPI": [], "Fixed commit": "d7f12bc9c6f22f00bdeb02417de53ad24076fd4e", "Url": "https://api.github.com/repos/occiware/ecore", "Date": "2016-04-20T12:43:30Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.curchod.dto.Game.getTestStatus()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (status_string == null) { android.util.Log.i(com.curchod.wherewithal.GameReadingStonesActivity.DEBUG_TAG, (method + \" status is null\")); }else if (status_string.equals(\"setup\")) { game_status.setText(R.string.game_ready); android.util.Log.i(com.curchod.wherewithal.GameReadingStonesActivity.DEBUG_TAG, (method + \" game ready\")); }else if (status_string.equals(Constants.GAME_OVER)) { game_status.setText(R.string.game_over); android.util.Log.i(com.curchod.wherewithal.GameReadingStonesActivity.DEBUG_TAG, (method + \" game over\")); }else if (status_string.equals(Constants.FINAL_ROUND)) { game_status.setText(R.string.final_round); android.util.Log.i(com.curchod.wherewithal.GameReadingStonesActivity.DEBUG_TAG, (method + \" final round\")); }else if (status_string.equals(Constants.PLAYING)) { game_status.setText(R.string.playing); android.util.Log.i(com.curchod.wherewithal.GameReadingStonesActivity.DEBUG_TAG, (method + \" playing\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5350/buggy-version/src.com.curchod.wherewithal.GameReadingStonesActivity.java", "BodyUseAPI": ["java.lang.String.equals(Constants.PLAYING)", "java.lang.String.equals(Constants.FINAL_ROUND)", "java.lang.String.equals(Constants.GAME_OVER)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "3afa5481ba4aff6df37b0e7798f056cacda81356", "Url": "https://api.github.com/repos/timofeysie/wherewithal", "Date": "2013-12-19T07:36:04Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (triangleFilled) { trianglePaint.setStyle(Paint.Style.FILL_AND_STROKE); drawFullTriangleColor(canvas, screenHeight, screenWidth); }else { trianglePaint.setStyle(Paint.Style.FILL); drawInnerTriangle(canvas, screenHeight, screenWidth); drawEmptyTriangleColor(canvas, screenHeight, screenWidth); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5362/buggy-version/AppLogic.StructureStart.StructureStart.app.src.main.java.com.example.robin.structurestart.model.viewclasses.TriangleDown.java", "BodyUseAPI": [], "Fixed commit": "905705cd07f58b6003cf9069e112f621bce20bd2", "Url": "https://api.github.com/repos/RobMil91/TriangleApp", "Date": "2017-04-11T17:01:50Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.lambdaj.Lambda.selectMax(java.util.List<com.github.webdriverextensions.Driver>,ch.lambdaj.Lambda.on(com.github.webdriverextensions.Driver.class).getComparableVersion())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (latestDriver == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7610/buggy-version/src.main.java.com.github.webdriverextensions.Repository.java", "BodyUseAPI": [], "Fixed commit": "2c94cf6835f327296771a5bf39fda5100df9b3f8", "Url": "https://api.github.com/repos/webdriverextensions/webdriverextensions-maven-plugin", "Date": "2014-09-01T21:26:20Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (driver == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7610/buggy-version/src.main.java.com.github.webdriverextensions.InstallDriversMojo.java", "BodyUseAPI": [], "Fixed commit": "2c94cf6835f327296771a5bf39fda5100df9b3f8", "Url": "https://api.github.com/repos/webdriverextensions/webdriverextensions-maven-plugin", "Date": "2014-09-01T21:26:20Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((speed) < 10) { this.speed += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3190/buggy-version/model.MyPongModel.java", "BodyUseAPI": [], "Fixed commit": "6ade4a075b833af6398ab541709662986030a1df", "Url": "https://api.github.com/repos/Hullberg/PongJava", "Date": "2014-12-06T21:05:58Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cboCollections.isVisible())) java.util.Collections.sort(cards, new org.magic.tools.MagicCardComparator());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5871/buggy-version/src.main.java.org.magic.gui.components.CardSearchPanel.java", "BodyUseAPI": [], "Fixed commit": "c2bb3df7c5077142cbe321a335f7c3a1f59e559c", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-12-21T21:01:24Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["auction.getPartnersLastCall().getBid()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((auction.isOvercall(partnersBid)) && (partnersBid.isDouble())) { lastBid = auction.enemyCallBeforePartner(null).getBid(); if (!(lastBid.getTrump().isNoTrump())) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4272/buggy-version/src.org.gnubridge.core.bidding.rules.RespondTakeoutDouble.java", "BodyUseAPI": ["auction.enemyCallBeforePartner(null).getBid()", "org.gnubridge.core.bidding.rules.RespondTakeoutDouble.enemyCallBeforePartner(<nulltype>)"], "Fixed commit": "03faf2397ed2034f0f33fe455df5eceb05dc666d", "Url": "https://api.github.com/repos/AlexanderMisel/gnubridge", "Date": "2014-10-06T12:32:27Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (time != null) { timeToAdd = new seedu.address.logic.commands.TaskTime(time); if (endTime != null) { endtimeToAdd = new seedu.address.logic.commands.TaskTime(endTime); } }else if ((time == null) && (endTime == null)) { seedu.address.commons.util.InferTimeUtil itu = new seedu.address.commons.util.InferTimeUtil(content); if (itu.findTimeToTime()) { timeToAdd = new seedu.address.logic.commands.TaskTime(itu.getStartTime()); endtimeToAdd = new seedu.address.logic.commands.TaskTime(itu.getEndTime()); }else if (itu.findTime()) { timeToAdd = new seedu.address.logic.commands.TaskTime(itu.getTime()); }else { timeToAdd = new seedu.address.logic.commands.TaskTime(); endtimeToAdd = new seedu.address.logic.commands.TaskTime(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8600/buggy-version/src.main.java.seedu.address.logic.commands.AddCommand.java", "BodyUseAPI": [], "Fixed commit": "13915059cbfb6afa5ae0403ba5c37f7dcb87a9e0", "Url": "https://api.github.com/repos/CS2103AUG2016-T16-C1/main", "Date": "2016-11-03T07:20:57Z"},
{"Line": "=>1717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (responseStr.equalsIgnoreCase(\"Save\")) { if (!(android.text.TextUtils.isEmpty(s))) { android.widget.Toast.makeText(activity, \"Invoice saved successfully in database\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(activity, \"Invoice can't be saved, try again later!\", Toast.LENGTH_SHORT).show(); } }else if (responseStr.equalsIgnoreCase(\"Open\")) { if (!(android.text.TextUtils.isEmpty(s))) { com.google.gson.Gson gson = new com.google.gson.Gson(); com.example.anubhav.vacmet.model.InvoiceTo invoiceTo = gson.fromJson(s, com.example.anubhav.vacmet.model.InvoiceTo.class); try { new com.example.anubhav.vacmet.OrderStatus.CreatingPdf().execute(\"Open\", new java.lang.String(invoiceTo.getInvoice(), \"UTF-8\"), invoiceTo.getInvoiceNo()); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); android.widget.Toast.makeText(activity, \"Encoding exception occurred! Contact admin\", Toast.LENGTH_SHORT).show(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3228/buggy-version/app.src.main.java.com.example.anubhav.vacmet.OrderStatus.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "b2a73e0211a16b594ecc482d56349f9c39662ea1", "Url": "https://api.github.com/repos/jay1493/vacmetOrderStatus", "Date": "2017-11-15T12:26:20Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serverPlayers.get(server)) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5785/buggy-version/src.main.java.me.therandomgamer.serverlimitselector.BungeeChannelConnection.java", "BodyUseAPI": [], "Fixed commit": "63aac454baf6f1f8c1d0d3e2c220142195a9234b", "Url": "https://api.github.com/repos/TheRandomGamer/ServerLimitSelector", "Date": "2017-05-09T18:11:23Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gash.router.server.state.State.getStatus()) == (State.Status.CANDIDATE)) { gash.router.server.state.State.setStatus(State.Status.FOLLOWER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5306/buggy-version/netty-pipe2.src.gash.router.server.resources.PingResource.java", "BodyUseAPI": [], "Fixed commit": "c9d8bff4b787d0d638532d0dab4009e00adf3665", "Url": "https://api.github.com/repos/parthpachchigar/Chatty", "Date": "2017-11-21T00:06:08Z"},
{"Line": "=>990", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tachyon.worker.block.TieredBlockStore.AsyncEvictor.getEvictionPlanOnTier(long,tachyon.worker.block.BlockStoreLocation)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == plan) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2603/buggy-version/servers.src.main.java.tachyon.worker.block.TieredBlockStore.java", "BodyUseAPI": [], "Fixed commit": "54b3867127fd73856e531cfc99a0d271e947c5b3", "Url": "https://api.github.com/repos/shimingfei/Alluxio", "Date": "2015-08-25T10:35:39Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getProtocol()) != (com.venky.swf.db.annotations.column.ui.mimes.MimeType.TEXT_HTML)) { adaptor = com.venky.swf.integration.IntegrationAdaptor.instance(com.venky.swf.db.model.User.class, com.venky.swf.integration.FormatHelper.getFormatClass(getProtocol())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5351/buggy-version/swf.src.main.java.com.venky.swf.path.Path.java", "BodyUseAPI": [], "Fixed commit": "aa95c37823814a903aa505693de949c26bf8287b", "Url": "https://api.github.com/repos/venkatramanm/swf-all", "Date": "2017-10-19T13:19:19Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(javaDocText)) { com.intellij.psi.javadoc.PsiDocComment javaDocComment = psiElementFactory.createDocCommentFromText(javaDocText); result = com.github.setial.intellijjavadocs.utils.JavaDocUtils.createJavaDoc(javaDocComment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6355/buggy-version/src.com.github.setial.intellijjavadocs.utils.JavaDocUtils.java", "BodyUseAPI": ["com.intellij.psi.PsiElementFactory.createDocCommentFromText(java.lang.String)"], "Fixed commit": "c44aed6330b7fd0d32158255ca80bfa2aeb819fc", "Url": "https://api.github.com/repos/setial/intellij-javadocs", "Date": "2013-01-08T14:12:30Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subexpression) != \"\") { expressionParts.add(new app.com.example.grace.currencycalculator.models.Operand(new java.lang.StringBuilder(subexpression).reverse().toString())); subexpression = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2984/buggy-version/CurrencyCalculator.app.src.main.java.app.com.example.grace.currencycalculator.Controller.ExpressionAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "a66e1efb8091204861a97e479a7b69090fdfb478", "Url": "https://api.github.com/repos/andela-bomotoso/checkpoint3", "Date": "2015-12-16T16:43:56Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(perms.has(player, \"estates.plots.rent\"))) && (!(player.isOp()))) { sender.sendMessage(((preferr) + \"You do not have permission to buy plots!\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8083/buggy-version/src.main.java.org.nach0z.mineestate.EstateCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "9146f80336c9b73e5bf62dfa89b610ccdbc1be99", "Url": "https://api.github.com/repos/Nach0z/MineEstates", "Date": "2013-01-23T17:35:47Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!sales) && (!rents)) { sendUsage(sender, \"search\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8083/buggy-version/src.main.java.org.nach0z.mineestate.EstateCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "9146f80336c9b73e5bf62dfa89b610ccdbc1be99", "Url": "https://api.github.com/repos/Nach0z/MineEstates", "Date": "2013-01-23T17:35:47Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((regions.existsRegion(args[1], world)) && ((java.lang.Double.compare(regions.getRegionPrice(args[1], world), 0)) > 0)) { double regPrice = regions.getRegionPrice(args[1], world); java.lang.System.out.println((((args[1]) + \" \") + (regions.getRegionPrice(args[1], world)))); if (!(accounts.hasFunds(player.getName(), regPrice))) { sender.sendMessage(((prefix) + \"You don't have enough funds to rent this region!\")); return false; }else { if (regions.addMember(args[1], player.getName(), world)) { sender.sendMessage((((((((prefix) + \"You have successfully rented \") + (args[1])) + \" for \") + regPrice) + \" \") + (accounts.getUnitsPlural()))); _plugin.getDBConnector().removeForRent(args[1]); return true; }else { sender.sendMessage(((prefix) + \"The rental has failed. This may be because the region has multiple owners, or because of an internal error. Please talk to your server admin.\")); return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8083/buggy-version/src.main.java.org.nach0z.mineestate.EstateCommandExecutor.java", "BodyUseAPI": ["org.nach0z.mineestate.RegionFlagManager.getRegionPrice(java.lang.String,org.nach0z.mineestate.World)", "org.nach0z.mineestate.RegionFlagManager.getRegionPrice(java.lang.String,org.nach0z.mineestate.World)", "_plugin.getDBConnector().removeForRent(java.lang.String)", "org.nach0z.mineestate.RegionFlagManager.addMember(java.lang.String,player.getName(),org.nach0z.mineestate.World)", "java.io.PrintStream.println((((args[1]) + \" \") + (regions.getRegionPrice(args[1], world))))", "org.nach0z.mineestate.CommandSender.sendMessage((((((((prefix) + \"You have successfully rented \") + (args[1])) + \" for \") + regPrice) + \" \") + (accounts.getUnitsPlural())))"], "Fixed commit": "9146f80336c9b73e5bf62dfa89b610ccdbc1be99", "Url": "https://api.github.com/repos/Nach0z/MineEstates", "Date": "2013-01-23T17:35:47Z"},
{"Line": "=>1002", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!domainMatched) { if (domainList == null) domainList = new java.util.ArrayList<com.hp.hpl.jena.rdf.model.Resource>(); domainList.add(((com.hp.hpl.jena.rdf.model.Resource) (dmn))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6207/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": [], "Fixed commit": "131db166d9022eda8216b60830bc00548184f667", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-09-13T12:55:56Z"},
{"Line": "=>993", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["domainItr.next().getObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dmn.isURIResource()) { for (int i = 0; (subjClasses != null) && (i < (subjClasses.size())); i++) { if (subjClasses.get(i).getURI().equals(((com.hp.hpl.jena.rdf.model.Resource) (dmn)).getURI())) { domainItr.close(); domainMatched = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6207/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": [], "Fixed commit": "131db166d9022eda8216b60830bc00548184f667", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-09-13T12:55:56Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultListener) != null) resultListener.end();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8522/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.binary.OAsyncCommandResultListener.java", "BodyUseAPI": [], "Fixed commit": "b0cdb77949bc328522a722ad76654aed87e8296e", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-05-27T07:05:53Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((coordX == x) && (coordY == y)) { retBol = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6893/buggy-version/Player.java", "BodyUseAPI": [], "Fixed commit": "2d2de8c15f492b887cb0be1f0857c3254aadaac9", "Url": "https://api.github.com/repos/judaniel4/Squish-Friends", "Date": "2017-01-19T04:35:40Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ctx.children) != null) { this.children = new java.util.ArrayList(); for (org.antlr.v4.runtime.tree.ParseTree child : ctx.children) { if (child instanceof org.antlr.v4.runtime.tree.ErrorNodeImpl) { this.children.add(child); ((org.antlr.v4.runtime.tree.ErrorNodeImpl) (child)).parent = this; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6026/buggy-version/runtime.Java.src.org.antlr.v4.runtime.ParserRuleContext.java", "BodyUseAPI": [], "Fixed commit": "eb8e2890c3eec1346b5e547f8269d1bcbef7a031", "Url": "https://api.github.com/repos/antlr/antlr4", "Date": "2016-12-09T19:10:26Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s < 10) { s = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/838/buggy-version/src.main.java.mcjty.rftools.blocks.shield.ShieldTEBase.java", "BodyUseAPI": [], "Fixed commit": "d4337f7f5e6ac81cd215c480898704657a12b68f", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-10-15T12:59:55Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mipsr10ksim.MIPSR10KSim.PC) > (MIPSR10KSim.instructions.size())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6500/buggy-version/mipsr10ksim.stages.Fetch.java", "BodyUseAPI": [], "Fixed commit": "ec80e4493fb0791715f32bf97f5b3a7ebd7f0e58", "Url": "https://api.github.com/repos/ssridhar2802/MIPSR10KSim", "Date": "2014-12-06T12:29:15Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mipsr10ksim.MIPSR10KSim.PC) + 4) > (MIPSR10KSim.instructions.size())) { upperPC = mipsr10ksim.stages.Fetch.instructions.size(); }else { upperPC = (mipsr10ksim.MIPSR10KSim.PC) + 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6500/buggy-version/mipsr10ksim.stages.Fetch.java", "BodyUseAPI": [], "Fixed commit": "ec80e4493fb0791715f32bf97f5b3a7ebd7f0e58", "Url": "https://api.github.com/repos/ssridhar2802/MIPSR10KSim", "Date": "2014-12-06T12:29:15Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getLoading().getValue()) == true) { session.setLoading(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/111/buggy-version/app.src.main.java.org.mozilla.focus.session.SessionCallbackProxy.java", "BodyUseAPI": ["org.mozilla.focus.session.Session.setLoading(boolean)"], "Fixed commit": "4f0c2fa4ea22d9a42ba696697e4f3a215edddd01", "Url": "https://api.github.com/repos/layely/focus-android", "Date": "2017-10-21T05:29:14Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pos < (headers.size())) { return headers.get(pos); }else if ((pos >= (headers.size())) && (pos < (filtered.size()))) { pos -= headers.size(); return filtered.get(pos); }else { pos -= (filtered.size()) + (headers.size()); return footers.get(pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4213/buggy-version/src.main.java.com.sefford.brender.data.RecyclerFilterableAdapterData.java", "BodyUseAPI": ["java.util.List<com.sefford.brender.interfaces.Renderable>.get(int)", "java.util.List<com.sefford.brender.interfaces.Renderable>.size()", "java.util.List<com.sefford.brender.interfaces.Renderable>.size()", "java.util.List<com.sefford.brender.interfaces.Renderable>.size()"], "Fixed commit": "02f0237c28d8a4ad07ea4d4cf28ca6dd94965058", "Url": "https://api.github.com/repos/alexrs/brender", "Date": "2015-07-29T08:37:55Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pos < (headers.size())) { return headers.get(pos).getRenderableId(); }else if ((pos >= (headers.size())) && (pos < (master.size()))) { pos -= headers.size(); return master.get(pos).getRenderableId(); }else { pos -= (master.size()) + (headers.size()); return footers.get(pos).getRenderableId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4213/buggy-version/src.main.java.com.sefford.brender.data.RecyclerFilterableAdapterData.java", "BodyUseAPI": ["java.util.List<com.sefford.brender.interfaces.Renderable>.size()", "headers.get(pos).getRenderableId()", "java.util.List<com.sefford.brender.interfaces.Renderable>.size()", "java.util.List<com.sefford.brender.interfaces.Renderable>.size()", "java.util.List<com.sefford.brender.interfaces.Renderable>.get(int)"], "Fixed commit": "02f0237c28d8a4ad07ea4d4cf28ca6dd94965058", "Url": "https://api.github.com/repos/alexrs/brender", "Date": "2015-07-29T08:37:55Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (dataTypes != null) { pos = op.parse(tokens, (pos + 1), stack, selfTypes, dataTypes); }else { pos = op.parse(tokens, (pos + 1), stack, selfTypes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1093/buggy-version/src.main.java.org.dvare.expression.operation.EqualityOperationExpression.java", "BodyUseAPI": ["org.dvare.expression.operation.OperationExpression.parse(java.lang.String[],int,java.util.Stack<org.dvare.expression.Expression>,org.dvare.binding.model.TypeBinding,org.dvare.binding.model.TypeBinding)"], "Fixed commit": "f6c232d7b3e7f60ea7c6d41d6ae276e9d6173712", "Url": "https://api.github.com/repos/hammadirshad/dvare-framework", "Date": "2016-11-04T15:04:21Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jgll.parser.GLLParserInternals.getCurrentInputIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((ci + i) + 1) >= (input.size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4589/buggy-version/src.org.jgll.grammar.slot.RegularExpressionGrammarSlot.java", "BodyUseAPI": [], "Fixed commit": "d7f491b88ed5509d04561a4fe9db7b5796d1e398", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-10-23T12:19:54Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) == null) { log.error(((\"The value of the bootstrap property \" + (entry.getKey())) + \" is null. Verify if the needed POM properties are set correctly.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8746/buggy-version/liberty-maven-plugin.src.main.java.net.wasdev.wlp.maven.plugins.server.StartDebugMojoSupport.java", "BodyUseAPI": ["net.wasdev.wlp.maven.plugins.server.StartDebugMojoSupport.error(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Fixed commit": "379a49c49b9ea194b325cc85b3ef18a75507f2dc", "Url": "https://api.github.com/repos/dblitza/ci.maven", "Date": "2017-11-03T20:45:22Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMenuNull())) { android.support.v4.view.MenuItemCompat.collapseActionView(mSearch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7590/buggy-version/smash-ranks-android.app.src.main.java.com.garpr.android.fragments.PlayersFragment.java", "BodyUseAPI": [], "Fixed commit": "faf74701ee8b3c7d0bdecf63eaa27579d33eac46", "Url": "https://api.github.com/repos/TheTurok/smash-ranks-android", "Date": "2015-01-01T06:30:31Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (containingList != null) { listClasses.addAll(containingList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/158/buggy-version/plugins.de.ovgu.featureide.core.framework.resources.PluginLoader.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)"], "Fixed commit": "e3d7f3fa646bf298a5e4cd02e3b944bb4db3da84", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-03-24T10:29:24Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((coreData.getSongWaveform()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/23/buggy-version/nak.nakloidGUI.actions.executors.BuildAndPlayAction.java", "BodyUseAPI": [], "Fixed commit": "c2645c6f177de65319506618fad03e2ddb2bb3f9", "Url": "https://api.github.com/repos/acknak/NakloidGUI", "Date": "2015-12-20T05:45:10Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((SearchLocation.getXPos()) >= 70) && ((SearchLocation.getYPos()) >= 70)) { for (int x = 0; x < 12; x++) { for (int y = 0; y < 12; y++) { if (((((this.Squares[x][y].getLocation().x) <= (SearchLocation.getXPos())) && (((this.Squares[x][y].getLocation().x) + (this.Squares[x][y].getWidth())) >= (SearchLocation.getXPos()))) && ((this.Squares[x][y].getLocation().y) <= (SearchLocation.getYPos()))) && (((this.Squares[x][y].getLocation().y) + (this.Squares[x][y].getHeight())) >= (SearchLocation.getYPos()))) { int[] returnArray = new int[]{ x, y }; return returnArray; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3736/buggy-version/Battleship.src.CustomComponents.Board.java", "BodyUseAPI": ["CustomComponents.Location.getXPos()", "CustomComponents.Location.getYPos()", "CustomComponents.Location.getYPos()", "CustomComponents.Location.getXPos()"], "Fixed commit": "0e175c6eafd900c754b431262b07b4401889a94f", "Url": "https://api.github.com/repos/milkypie/BattlePi", "Date": "2016-03-04T11:06:51Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.compile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pattern.matcher(userName).matches()) { whereClause = \"mobile\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4044/buggy-version/src.main.java.com.zva.dao.AppUser.AppUserDAO.java", "BodyUseAPI": [], "Fixed commit": "6bd4b043c94f48e64294abd90d8d0639f4e5b1cc", "Url": "https://api.github.com/repos/carufus/zatpatATM-API", "Date": "2017-05-27T18:34:10Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.udacity.immuno.database.VaccineData.getCasualName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (strCasualName == null) { strCasualName = vaccineData.getFormalName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3444/buggy-version/app.src.main.java.com.udacity.immuno.activities.VaccineInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "c7c289759587dc6ec81c36888c4ac081d3157c31", "Url": "https://api.github.com/repos/agermenos/immuno", "Date": "2015-11-11T05:08:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5931/buggy-version/src.main.java.com.karanumcoding.adamantineshield.db.Database.java", "BodyUseAPI": [], "Fixed commit": "8da9c1afebc0a62534fbfe45ce2b63c2dd3d120a", "Url": "https://api.github.com/repos/Karanum/AdamantineShield", "Date": "2017-05-23T17:04:18Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getGrade()) == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3099/buggy-version/app.src.main.java.de.mytfg.apps.mytfg.objects.User.java", "BodyUseAPI": [], "Fixed commit": "8202db96558bcf0f5c5c115190a975085cbdac9e", "Url": "https://api.github.com/repos/MyTFG/mytfg-vplan-app", "Date": "2017-06-23T10:33:17Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(charSequence.toString().equals(\"\"))) { java.util.List<com.android_project.kt.datrackchat.models.Word> subDictionary = getSubDict(charSequence); adapter = new com.android_project.kt.datrackchat.dictionary.WordRecyclerAdapter(getContext(), subDictionary); }else { adapter = new com.android_project.kt.datrackchat.dictionary.WordRecyclerAdapter(getContext(), dictionary); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7549/buggy-version/DatrackChat.app.src.main.java.com.android_project.kt.datrackchat.dictionary.DictionaryFragment.java", "BodyUseAPI": ["com.android_project.kt.datrackchat.dictionary.DictionaryFragment.1.getSubDict(java.lang.CharSequence)"], "Fixed commit": "90ff0d57eb4c5b56b45b0a99896fe28159572123", "Url": "https://api.github.com/repos/gariksh97/Android-Task", "Date": "2016-12-20T21:01:39Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.delete())) java.lang.System.err.println(\"File was not deleted!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6637/buggy-version/src.main.java.toolbar.RecentHandler.java", "BodyUseAPI": [], "Fixed commit": "0408cf185a0e337eb508b3d33bfe47a3f0ec0655", "Url": "https://api.github.com/repos/ProgrammingLife2016/PL3-2016", "Date": "2016-05-20T13:45:07Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(newFile.renameTo(file))) java.lang.System.err.println(\"File was not renamed!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6637/buggy-version/src.main.java.toolbar.RecentHandler.java", "BodyUseAPI": [], "Fixed commit": "0408cf185a0e337eb508b3d33bfe47a3f0ec0655", "Url": "https://api.github.com/repos/ProgrammingLife2016/PL3-2016", "Date": "2016-05-20T13:45:07Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getTimeInMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timeMillis < testMillis) { android.widget.Toast.makeText(getActivity(), \"Quest must be due at a time in the future.\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5101/buggy-version/app.src.main.java.com.hinodesoftworks.dailyrpg.AddQuestFragment.java", "BodyUseAPI": [], "Fixed commit": "866e6dcace3da5dfb22c619f00addf4aa9550e58", "Url": "https://api.github.com/repos/tarkenfire/DailyRPG", "Date": "2015-01-07T07:39:23Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter.getCount()) > 0) { }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5101/buggy-version/app.src.main.java.com.hinodesoftworks.dailyrpg.QuestFragment.java", "BodyUseAPI": [], "Fixed commit": "866e6dcace3da5dfb22c619f00addf4aa9550e58", "Url": "https://api.github.com/repos/tarkenfire/DailyRPG", "Date": "2015-01-07T07:39:23Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.evolved.automata.lisp.speech.ScoredValue>.get(groupSpec.getKey())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((v.value) != null) { sbuilder.append(_evaluationExternalInterface.toString(v)); }else { sbuilder.append(v.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1280/buggy-version/common.src.main.com.evolved.automata.lisp.speech.SpeechMap.java", "BodyUseAPI": ["java.lang.StringBuilder.append(v.toString())", "java.lang.StringBuilder.append(_evaluationExternalInterface.toString(v))", "com.evolved.automata.lisp.speech.ScoredValue.toString()", "com.evolved.automata.lisp.speech.SpeechExternalInterface.toString(com.evolved.automata.lisp.speech.ScoredValue)"], "Fixed commit": "da49bc2f312f8bc5a7553699a3a004fc44188390", "Url": "https://api.github.com/repos/hexagonc/Android-Lisp", "Date": "2016-08-17T22:07:44Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) instanceof org.openlmis.core.view.activity.InitialInventoryActivity) { if (!(viewModel.validateLotWithPositiveQuantity())) { setAmountError(context.getResources().getString(R.string.msg_empty_quantity)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3857/buggy-version/app.src.main.java.org.openlmis.core.view.holder.LotMovementViewHolder.java", "BodyUseAPI": [], "Fixed commit": "2c41cc3a54612a7f9e18ba51b12da3f9380fee41", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2016-10-27T03:11:15Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) instanceof org.openlmis.core.view.activity.PhysicalInventoryActivity) { if (viewModel.isNewAdded()) { if (viewModel.validateLotWithPositiveQuantity()) { vgLotSOH.setVisibility(View.GONE); }else { vgLotSOH.setVisibility(View.VISIBLE); setAmountError(context.getResources().getString(R.string.msg_empty_quantity)); } }else { if (!(viewModel.validateLotWithNoEmptyFields())) { setAmountError(context.getResources().getString(R.string.msg_empty_quantity)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3857/buggy-version/app.src.main.java.org.openlmis.core.view.holder.LotMovementViewHolder.java", "BodyUseAPI": [], "Fixed commit": "2c41cc3a54612a7f9e18ba51b12da3f9380fee41", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2016-10-27T03:11:15Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.mzmine.datamodel.Feature.getFWHM()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (peakFWHM == null) { peakFWHM = -1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3336/buggy-version/src.main.java.net.sf.mzmine.modules.peaklistmethods.filtering.peakfilter.PeakFilterTask.java", "BodyUseAPI": [], "Fixed commit": "739891cfbcf3d8b167b07b6972dfb664da368d42", "Url": "https://api.github.com/repos/dyrlund/mzmine2", "Date": "2015-08-21T08:51:50Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.mzmine.datamodel.Feature.getTailingFactor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (peakTailingFactor == null) { peakTailingFactor = -1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3336/buggy-version/src.main.java.net.sf.mzmine.modules.peaklistmethods.filtering.peakfilter.PeakFilterTask.java", "BodyUseAPI": [], "Fixed commit": "739891cfbcf3d8b167b07b6972dfb664da368d42", "Url": "https://api.github.com/repos/dyrlund/mzmine2", "Date": "2015-08-21T08:51:50Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.mzmine.datamodel.Feature.getAsymmetryFactor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (peakAsymmetryFactor == null) { peakAsymmetryFactor = -1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3336/buggy-version/src.main.java.net.sf.mzmine.modules.peaklistmethods.filtering.peakfilter.PeakFilterTask.java", "BodyUseAPI": [], "Fixed commit": "739891cfbcf3d8b167b07b6972dfb664da368d42", "Url": "https://api.github.com/repos/dyrlund/mzmine2", "Date": "2015-08-21T08:51:50Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) { setAnswerShownResult(true); if (mAnswerIsTrue) { mAnswerTextView.setText(R.string.true_button); }else { mAnswerTextView.setText(R.string.false_button); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7857/buggy-version/app.src.main.java.uscupstate.edu.myquiz.CheatActivity.java", "BodyUseAPI": [], "Fixed commit": "6894ec5d5b288fcd858f3db77cc1e38e99cd279a", "Url": "https://api.github.com/repos/christophelimpalair/MyQuiz", "Date": "2015-02-18T15:28:45Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.maxNoResources) != (eu.h2020.symbiote.enabler.messaging.model.ResourceManagerTaskInfoRequest.ALL_AVAILABLE_RESOURCES)) && ((this.maxNoResources) < minNoResources)) throw new java.lang.IllegalArgumentException(\"minNoResources should not be greater than minNoResources\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5244/buggy-version/src.main.java.eu.h2020.symbiote.enabler.messaging.model.ResourceManagerTaskInfoRequest.java", "BodyUseAPI": [], "Fixed commit": "a77b41c2bc42d7f226b8a5a8097fdbc918f1c8ec", "Url": "https://api.github.com/repos/symbiote-h2020/SymbIoTeLibraries", "Date": "2017-10-26T08:51:22Z"},
{"Line": "=>865", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == null) { selectedTriangles.clear(); selectedBodies.clear(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1218/buggy-version/src.org.nschmidt.ldparteditor.data.GDataCSG.java", "BodyUseAPI": [], "Fixed commit": "646214691c8d1109aa3446d95754647703003a42", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-19T09:48:00Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().add(R.id.fragment_main, new com.example.zhang.popmovies.app.PreviewFragment(), com.example.zhang.popmovies.app.MainActivity.PREVIEW_FRAGMENT_TAG).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7777/buggy-version/app.src.main.java.com.example.zhang.popmovies.app.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d0d38b873ce13a48e5f020c047f91df413aaa04d", "Url": "https://api.github.com/repos/Osswitch/Pop-Movies", "Date": "2016-01-25T01:28:02Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Storage.MYSQL.equals(entry.getValue().getStorageType())) { limits.put(entry.getValue(), limit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6409/buggy-version/hermes-monitor.src.main.java.com.ctrip.hermes.monitor.checker.mysql.LongTimeNoProduceChecker.java", "BodyUseAPI": ["java.util.Map<com.ctrip.hermes.meta.entity.Topic, java.lang.Integer>.put(entry.getValue(),int)", "java.util.Map.Entry<java.lang.String, com.ctrip.hermes.meta.entity.Topic>.getValue()"], "Fixed commit": "706818a01c0aa2e196c10f55254043059d3acf3f", "Url": "https://api.github.com/repos/yiming187/hermes", "Date": "2015-12-15T03:04:42Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movieAdapter.mSelectedItem) < 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7079/buggy-version/Source.app.src.main.java.com.whatever.holidayspecial.Screens.MovieSearchScreen.java", "BodyUseAPI": [], "Fixed commit": "bea4d6fb41b7672f471d06196387ba19fa6e96f0", "Url": "https://api.github.com/repos/Molugan/HolidaySpecial", "Date": "2016-12-18T18:22:29Z"},
{"Line": "=>745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.renameTo(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!renamed) { throw new org.apache.maven.plugin.MojoExecutionException(\"Failed to renamed signed main jar to final name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/932/buggy-version/webstart-maven-plugin.src.main.java.org.codehaus.mojo.webstart.AbstractBaseJnlpMojo.java", "BodyUseAPI": [], "Fixed commit": "b3bef30b7ea89f88deff8018500b91daab0302fd", "Url": "https://api.github.com/repos/VEDAGroup/webstart-maven-plugin", "Date": "2013-11-04T15:01:12Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tagsToUpdate.isEmpty())) { org.kitteh.tag.TagAPI.refreshPlayer(player, tagsToUpdate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6753/buggy-version/SimplePVPToggle.src.com.gmail.jameshealey1994.simplepvptoggle.utils.TagUtils.java", "BodyUseAPI": ["org.kitteh.tag.TagAPI.refreshPlayer(org.bukkit.entity.Player,java.util.Set<org.bukkit.entity.Player>)"], "Fixed commit": "8fd2ff4fef411b08b340bf1bdc1db7b8934a8c32", "Url": "https://api.github.com/repos/JamesHealey94/SimplePVPToggle", "Date": "2013-11-12T08:05:54Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tdnext.ParserAPI.containsEdit) { tdnext.ParserAPI.task.set(0, tdnext.ParserAPI.noCommand.replace(\"IMPORTANT\", \"\").replace(((\"edit\" + \" \") + (tdnext.ParserAPI.parseIndex(tdnext.ParserAPI.noCommand))), \"\").replace(\"\\\\s+\", \"\").trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1576/buggy-version/src.tdnext.ParserAPI.java", "BodyUseAPI": [], "Fixed commit": "0ade880a59519bea06ea2a2da7eca74d8ccac7bc", "Url": "https://api.github.com/repos/cs2103aug2015-t16-2j/main", "Date": "2015-10-19T01:23:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.min) == null) || ((this.max) == null)) { this.min = new int[minBB.length]; this.max = new int[minBB.length]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/351/buggy-version/src.main.java.spim.process.fusion.boundingbox.AutomaticBoundingBox.java", "BodyUseAPI": [], "Fixed commit": "7f39106f1d4a4c1c1a741d5ad508d418c428e5d1", "Url": "https://api.github.com/repos/nicost/SPIM_Registration", "Date": "2015-05-03T18:04:19Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((err.length()) > 1) throw new Validator.ValidationException(err.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7046/buggy-version/CMSClient.src.main.java.Validator.Validator.java", "BodyUseAPI": ["java.lang.StringBuffer.toString()"], "Fixed commit": "c0888ff7be5c020892a7d3221898f779797d7bf0", "Url": "https://api.github.com/repos/bulzansergiu/CMS_222_Team2", "Date": "2017-06-05T22:36:52Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((posy < 0) && (posy > (-1))) { posy = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3995/buggy-version/WartricksProject.wartricks.src.com.wartricks.utils.MapTools.java", "BodyUseAPI": [], "Fixed commit": "7e4b105b8746f18ff69c74e5cdafa3151201d497", "Url": "https://api.github.com/repos/pakoito/WartricksProject", "Date": "2013-05-29T23:12:13Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((posx < 0) && (posx > (-1))) { posx = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3995/buggy-version/WartricksProject.wartricks.src.com.wartricks.utils.MapTools.java", "BodyUseAPI": [], "Fixed commit": "7e4b105b8746f18ff69c74e5cdafa3151201d497", "Url": "https://api.github.com/repos/pakoito/WartricksProject", "Date": "2013-05-29T23:12:13Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((posy < 0) && (posy > (-1))) { posy = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3995/buggy-version/WartricksProject.wartricks.src.com.wartricks.utils.MapTools.java", "BodyUseAPI": [], "Fixed commit": "7e4b105b8746f18ff69c74e5cdafa3151201d497", "Url": "https://api.github.com/repos/pakoito/WartricksProject", "Date": "2013-05-29T23:12:13Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((posx < 0) && (posx > (-1))) { posx = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3995/buggy-version/WartricksProject.wartricks.src.com.wartricks.utils.MapTools.java", "BodyUseAPI": [], "Fixed commit": "7e4b105b8746f18ff69c74e5cdafa3151201d497", "Url": "https://api.github.com/repos/pakoito/WartricksProject", "Date": "2013-05-29T23:12:13Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos == 0) { idx = (random.nextInt(((org.talend.dataquality.duplicating.FieldModifier.DIGIT.length()) - 1))) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1726/buggy-version/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.duplicating.FieldModifier.java", "BodyUseAPI": [], "Fixed commit": "5c0a83d16951b4873180ad309cd4b0b1ae9417b3", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2014-07-01T10:39:54Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(TopicStatsExposer.TOPIC_CONTEXT_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == topic) { topic = context.get(MessageConsumerMetricsConstants.TOPIC_CONTEXT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/605/buggy-version/messaging-client-core.src.main.java.com.inmobi.messaging.util.GraphiteStatsEmitter.java", "BodyUseAPI": [], "Fixed commit": "5b523f6a8ed13c5b82d9f8671d9e6e8ea71d7961", "Url": "https://api.github.com/repos/sreedishps/pintail", "Date": "2015-09-02T09:11:33Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.inventory.getCurrentItem().getItem()) == (net.minecraft.item.Item.getItemFromBlock(ModBlocks.torchLitCoke))) { player.inventory.decrStackSize(player.inventory.currentItem, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1296/buggy-version/src.main.java.com.github.wolfiewaffle.hardcoretorches.blocks.BlockTorchBurntCoke.java", "BodyUseAPI": ["player.inventory.decrStackSize(player.inventory.currentItem,int)"], "Fixed commit": "3cc881ebdf48cb5f534ffc58b72c83541fc2210e", "Url": "https://api.github.com/repos/WolfieWaffle/Hardcore-Torches", "Date": "2015-07-21T04:08:03Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.inventory.getCurrentItem().getItem()) == (net.minecraft.item.Item.getItemFromBlock(ModBlocks.torchLit))) { player.inventory.decrStackSize(player.inventory.currentItem, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1296/buggy-version/src.main.java.com.github.wolfiewaffle.hardcoretorches.blocks.BlockTorchBurnt.java", "BodyUseAPI": ["player.inventory.decrStackSize(player.inventory.currentItem,int)"], "Fixed commit": "3cc881ebdf48cb5f534ffc58b72c83541fc2210e", "Url": "https://api.github.com/repos/WolfieWaffle/Hardcore-Torches", "Date": "2015-07-21T04:08:03Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.matches(regex)) { if (org.openid4java.discovery.xrds.XrdsParserImpl.DEBUG) { org.openid4java.discovery.xrds.XrdsParserImpl._log.debug(\"Invalid 'Expires' value. Correcting...\"); } input = input.replaceAll(regex, \"$10$3\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7484/buggy-version/src.org.openid4java.discovery.xrds.XrdsParserImpl.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "62a645004e06bf16284dc7a87cb0c413046818f4", "Url": "https://api.github.com/repos/janrain/openid4java", "Date": "2013-01-31T01:10:12Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ItemName.isEmpty()) || (ItemPrice.isEmpty())) { android.widget.Toast.makeText(getActivity().getApplicationContext(), \"Enter Proper MenuItem\", Toast.LENGTH_LONG).show(); return; }else { java.lang.String order_url = khaanavali.vendor.Utils.Constants.GET_MENU; order_url = order_url.concat(vendor_email); new khaanavali.vendor.MenuFragment.AddJSONAsyncTask().execute(order_url, ItemName, ItemPrice); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7984/buggy-version/app.src.main.java.khaanavali.vendor.MenuFragment.java", "BodyUseAPI": ["khaanavali.vendor.MenuFragment.AddJSONAsyncTask.execute(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "2cd8ce2182989151649abac1697ef8f6ba85c00a", "Url": "https://api.github.com/repos/dayasudhan/tunga", "Date": "2016-06-21T06:56:12Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tmp.getParent()) != null) && ((tmp.getParent()) instanceof android.support.v4.view.ViewPager)) { tmp = ((android.view.View) (tmp.getParent())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9236/buggy-version/highlight.src.main.java.zhy.com.highlight.util.ViewUtils.java", "BodyUseAPI": ["android.view.View.getParent()"], "Fixed commit": "10c2ab44321ee012d1f1e88ba3fb07030af1c14e", "Url": "https://api.github.com/repos/isanwenyu/Highlight", "Date": "2016-12-07T07:29:14Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.isArray()) { return (getTypeStr(type.getComponentType())) + \"[]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6801/buggy-version/src.main.java.com.bergerkiller.mountiplex.reflection.declarations.TemplateGenerator.java", "BodyUseAPI": ["com.bergerkiller.mountiplex.reflection.declarations.TypeDeclaration.getComponentType()", "com.bergerkiller.mountiplex.reflection.declarations.TemplateGenerator.getTypeStr(type.getComponentType())"], "Fixed commit": "1355be9ec43013f391c8f3bff27d0c34833cc315", "Url": "https://api.github.com/repos/bergerhealer/Mountiplex", "Date": "2017-07-15T18:20:41Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.M)) { if (type == (material.com.base.utils.ListDataSave.DEBUG)) { preferences = mContext.getSharedPreferences(preferenceName, ((android.content.Context.MODE_MULTI_PROCESS) | (android.content.Context.MODE_WORLD_READABLE))); }else { preferences = mContext.getSharedPreferences(preferenceName, Context.MODE_PRIVATE); } }else { preferences = mContext.getSharedPreferences(preferenceName, Context.MODE_PRIVATE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2421/buggy-version/base.src.main.java.material.com.base.utils.ListDataSave.java", "BodyUseAPI": [], "Fixed commit": "d5258b7462f7c96ab4c3939737bdda56e61e783c", "Url": "https://api.github.com/repos/cangwang/Gank", "Date": "2017-09-18T13:22:23Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (absolutePath.isFolder()) { return javax.ws.rs.core.Response.status(Response.Status.BAD_REQUEST).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6671/buggy-version/navet-file-api.src.main.java.se.blinfo.navet.file.api.resource.PropertyResource.java", "BodyUseAPI": [], "Fixed commit": "0eae00bfb55360de52637034584b2ae760c48564", "Url": "https://api.github.com/repos/blinfo/NavetFile", "Date": "2016-09-19T11:45:17Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["activity.getPackageManager().getLaunchIntentForPackage(result.getLaunchIntentPackage())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (launchIntent == null) { showToast((\"Unable to launch intent \" + (result.getLaunchIntentPackage()))); }else { activity.startActivity(launchIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5863/buggy-version/app.src.main.java.com.xargsgrep.portknocker.asynctask.KnockerAsyncTask.java", "BodyUseAPI": ["android.support.v4.app.FragmentActivity.startActivity(android.content.Intent)"], "Fixed commit": "90a1aca0127cff3de7e757e4c0d518360fd98761", "Url": "https://api.github.com/repos/xargsgrep/PortKnocker", "Date": "2015-02-20T07:53:54Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num == 0) { factorialfinder.main.f.jLabel3.setText(\"1\"); }else { for (int i = 1; i < num; i++) { if (!(result > 0)) { result = i * (i + 1); }else { result = result * (i + 1); } } java.lang.String r = result + \"\"; r = r.replace(\"E\", \" x10^\"); r = r.replace(\".0\", \"\"); factorialfinder.main.f.jLabel3.setText(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2502/buggy-version/src.factorialfinder.main.java", "BodyUseAPI": [], "Fixed commit": "288db513e40347960f0ff85f96cf33667f28c986", "Url": "https://api.github.com/repos/DSoftw/FactorialFinder-", "Date": "2016-02-07T03:22:40Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.apiman.manager.api.beans.policies.PolicyType.valueOf(io.apiman.manager.ui.client.local.pages.EditPolicyPage)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pt == (io.apiman.manager.api.beans.policies.PolicyType.Application)) { rest.getApplicationVersion(org, id, ver, new io.apiman.manager.ui.client.local.services.rest.IRestInvokerCallback<io.apiman.manager.api.beans.apps.ApplicationVersionBean>() { @java.lang.Override public void onSuccess(io.apiman.manager.api.beans.apps.ApplicationVersionBean response) { entityStatus = response.getStatus().toString(); dataPacketLoaded(); } @java.lang.Override public void onError(java.lang.Throwable error) { dataPacketError(error); } }); }else if (pt == (io.apiman.manager.api.beans.policies.PolicyType.Service)) { rest.getServiceVersion(org, id, ver, new io.apiman.manager.ui.client.local.services.rest.IRestInvokerCallback<io.apiman.manager.api.beans.services.ServiceVersionBean>() { @java.lang.Override public void onSuccess(io.apiman.manager.api.beans.services.ServiceVersionBean response) { entityStatus = response.getStatus().toString(); dataPacketLoaded(); } @java.lang.Override public void onError(java.lang.Throwable error) { dataPacketError(error); } }); }else if (pt == (io.apiman.manager.api.beans.policies.PolicyType.Plan)) { rest.getPlanVersion(org, id, ver, new io.apiman.manager.ui.client.local.services.rest.IRestInvokerCallback<io.apiman.manager.api.beans.plans.PlanVersionBean>() { @java.lang.Override public void onSuccess(io.apiman.manager.api.beans.plans.PlanVersionBean response) { entityStatus = response.getStatus().toString(); dataPacketLoaded(); } @java.lang.Override public void onError(java.lang.Throwable error) { dataPacketError(error); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7205/buggy-version/manager.ui.war.src.main.java.io.apiman.manager.ui.client.local.pages.EditPolicyPage.java", "BodyUseAPI": [], "Fixed commit": "7c7fb8f70eb3d8e56a4d243a584963428735e6e3", "Url": "https://api.github.com/repos/jorgemoralespou/apiman", "Date": "2015-01-15T14:37:32Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.getGuild().getMember(event.getJDA().getSelfUser()).hasPermission(Permission.MANAGE_ROLES))) { channel.sendMessage(\"I am not authorized to use this command. I need to be able to manage roles first\").queue(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3522/buggy-version/Discord.src.commands.GameRoles.java", "BodyUseAPI": [], "Fixed commit": "1e7bfd08a1f98e01876437f8f4952119aac838e0", "Url": "https://api.github.com/repos/GlennOlsson/DiscordBot", "Date": "2017-05-21T19:41:42Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((argument.equals(\"editgame\")) || (argument.equals(\";editgame\"))) { privateChannel.sendMessage((\"This command is used by people that has the ability to manage roles in the server.\" + (\" By sending **;editgame [add/remove] [name of game]**, I will add a role with the name, and \" + \"make it possible for the users to add that role themselves.\"))).queue(); return; }else if ((argument.length()) > 1) { privateChannel.sendMessage(\"Sorry, but your argument did not get a match\").queue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3522/buggy-version/Discord.src.commands.Help.java", "BodyUseAPI": [], "Fixed commit": "1e7bfd08a1f98e01876437f8f4952119aac838e0", "Url": "https://api.github.com/repos/GlennOlsson/DiscordBot", "Date": "2017-05-21T19:41:42Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().findViewById(R.id.task_details_task_id)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (taskIdView == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/380/buggy-version/src.com.abbyy.cloudocr.fragments.TaskDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "3dec0d13b4887850ffd2291e662101c5c774e1b7", "Url": "https://api.github.com/repos/darthsuicune/CloudOCRClient", "Date": "2013-03-13T14:41:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((sharedPreference.getLocked(context)) != null) { for (int j = 0; j < (sharedPreference.getLocked(context).size()); j++) { if (installedApps.get(i).getPackageName().matches(sharedPreference.getLocked(context).get(j))) { lockedFilteredAppList.add(installedApps.get(i)); flag = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7176/buggy-version/app.src.main.java.applock.mindorks.com.applock.Adapter.ApplicationListAdapter.java", "BodyUseAPI": [], "Fixed commit": "04275680449e61fe639ec53657bca927bac41a6a", "Url": "https://api.github.com/repos/amitshekhariitbhu/AppLock", "Date": "2015-05-01T09:33:20Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.mycommons.lang3.StringUtils.isNotEmpty(setting.getAnswerAudio())) { audioLocationEdit.setText(setting.getAnswerAudioLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5336/buggy-version/src.org.liberty.android.fantastischmemo.ui.SettingsScreen.java", "BodyUseAPI": ["android.widget.EditText.setText(setting.getAnswerAudioLocation())", "org.liberty.android.fantastischmemo.domain.Setting.getAnswerAudioLocation()"], "Fixed commit": "c57c5de1bc65325c46fe6719a583ce0a6090c2d7", "Url": "https://api.github.com/repos/helloworld1/AnyMemo", "Date": "2012-03-28T04:52:56Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.mycommons.lang3.StringUtils.isNotEmpty(setting.getQuestionAudio())) { audioLocationEdit.setText(setting.getQuestionAudioLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5336/buggy-version/src.org.liberty.android.fantastischmemo.ui.SettingsScreen.java", "BodyUseAPI": ["android.widget.EditText.setText(setting.getQuestionAudioLocation())", "org.liberty.android.fantastischmemo.domain.Setting.getQuestionAudioLocation()"], "Fixed commit": "c57c5de1bc65325c46fe6719a583ce0a6090c2d7", "Url": "https://api.github.com/repos/helloworld1/AnyMemo", "Date": "2012-03-28T04:52:56Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.mycommons.lang3.StringUtils.isEmpty(audioLocationEdit.getText())) { audioLocationEdit.setText(AMEnv.DEFAULT_AUDIO_PATH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5336/buggy-version/src.org.liberty.android.fantastischmemo.ui.SettingsScreen.java", "BodyUseAPI": ["android.widget.EditText.setText(AMEnv.DEFAULT_AUDIO_PATH)"], "Fixed commit": "c57c5de1bc65325c46fe6719a583ce0a6090c2d7", "Url": "https://api.github.com/repos/helloworld1/AnyMemo", "Date": "2012-03-28T04:52:56Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (output != null) { net.minecraft.entity.item.EntityItem entityItem = new net.minecraft.entity.item.EntityItem(this.worldObj, (x + 0.5F), (y + 0.1F), (z + 0.5F), output); this.worldObj.spawnEntityInWorld(entityItem); this.smooshedStack = null; }else if (output == null) { output = stack; net.minecraft.entity.item.EntityItem entityItem = new net.minecraft.entity.item.EntityItem(this.worldObj, (x + 0.5F), (y + 0.1F), (z + 0.5F), output); this.worldObj.spawnEntityInWorld(entityItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8212/buggy-version/src.main.java.flaxbeard.steamcraft.tile.TileEntitySmasher.java", "BodyUseAPI": [], "Fixed commit": "d0cc83b4ed9c1615ac22f3853a11c8c536ed9abf", "Url": "https://api.github.com/repos/Esteemed-Innovation/Esteemed-Innovation", "Date": "2015-03-04T15:17:12Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recaptchaActive) { recaptchaWidget.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4835/buggy-version/roda-ui.roda-wui.src.main.java.org.roda.wui.client.management.Register.java", "BodyUseAPI": [], "Fixed commit": "a48c123ddf7fb4b2fadda66f2871be439f89a516", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2016-06-02T10:30:16Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.api.component.ResourcePerspectives.as(java.lang.Class,org.sonar.api.resources.Resource)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (issuable == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3679/buggy-version/src.main.java.com.sonarsource.lits.DumpPhase.java", "BodyUseAPI": [], "Fixed commit": "372bd2ecba5b79e60bc1a3ad6f56b11da3c68f06", "Url": "https://api.github.com/repos/SonarSource/sonar-lits", "Date": "2015-08-06T13:17:32Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (digit2 == 11) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/653/buggy-version/app.models.BankAccount.java", "BodyUseAPI": [], "Fixed commit": "1fe114fb103695981c282740b41018731daa5d47", "Url": "https://api.github.com/repos/sepulvedablanco/expensesAPI", "Date": "2016-01-27T20:42:24Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (digit2 == 10) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/653/buggy-version/app.models.BankAccount.java", "BodyUseAPI": [], "Fixed commit": "1fe114fb103695981c282740b41018731daa5d47", "Url": "https://api.github.com/repos/sepulvedablanco/expensesAPI", "Date": "2016-01-27T20:42:24Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (digit1 == 11) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/653/buggy-version/app.models.BankAccount.java", "BodyUseAPI": [], "Fixed commit": "1fe114fb103695981c282740b41018731daa5d47", "Url": "https://api.github.com/repos/sepulvedablanco/expensesAPI", "Date": "2016-01-27T20:42:24Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (digit1 == 10) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/653/buggy-version/app.models.BankAccount.java", "BodyUseAPI": [], "Fixed commit": "1fe114fb103695981c282740b41018731daa5d47", "Url": "https://api.github.com/repos/sepulvedablanco/expensesAPI", "Date": "2016-01-27T20:42:24Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler) != null) { handler.write(mailBox.dequeueIn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1729/buggy-version/src.main.java.com.myselia.javacommon.communication.ComponentCommunicator.java", "BodyUseAPI": [], "Fixed commit": "1cba0bfc768c2c2354460d868d56ba4d429aea0e", "Url": "https://api.github.com/repos/Myselia/MyseliaJavaCommon", "Date": "2015-09-15T01:17:47Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (common.Utilities.arrayContains(Aliases.THEME_NIGHT, args)) { return makeTheme(Skin.NIGHT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4124/buggy-version/src.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "e738ab63a2af26500e02ac9dcd9e9abecaa18a9e", "Url": "https://api.github.com/repos/cs2103aug2015-w11-3j/main", "Date": "2015-11-06T13:44:02Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (common.Utilities.arrayContains(Aliases.THEME_DAY, args)) { return makeTheme(Skin.DAY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4124/buggy-version/src.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "e738ab63a2af26500e02ac9dcd9e9abecaa18a9e", "Url": "https://api.github.com/repos/cs2103aug2015-w11-3j/main", "Date": "2015-11-06T13:44:02Z"},
{"Line": "=>1401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(f.exists())) { id = id.substring(0, id.lastIndexOf('.')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3492/buggy-version/components.formats-gpl.src.loci.formats.in.ZeissCZIReader.java", "BodyUseAPI": [], "Fixed commit": "61300c266bee1f0b59f5d759068b152b62a22160", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-08T12:58:27Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hawaiiframework.async.timeout.SharedTaskContextHolder.getTaskId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(taskId)) { request.getHeaders().add(headerName, taskId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7228/buggy-version/hawaii-async.src.main.java.org.hawaiiframework.async.http.TaskIdSupplierHttpRequestInterceptor.java", "BodyUseAPI": ["request.getHeaders().add(java.lang.String,java.lang.String)"], "Fixed commit": "59eb760ba80a93f27f4a6806dacc54e9c6452e1c", "Url": "https://api.github.com/repos/hawaiifw/hawaii-framework", "Date": "2017-08-18T09:49:13Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hawaiiframework.async.timeout.SharedTaskContextHolder.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sharedTaskContext == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7228/buggy-version/hawaii-async.src.main.java.org.hawaiiframework.async.timeout.SharedTaskContextHolder.java", "BodyUseAPI": [], "Fixed commit": "59eb760ba80a93f27f4a6806dacc54e9c6452e1c", "Url": "https://api.github.com/repos/hawaiifw/hawaii-framework", "Date": "2017-08-18T09:49:13Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ratio < 1) { ratio = ((double) (size.height)) / (size.width); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3193/buggy-version/src.pw.custom.androidcamera.CameraViewProxy.java", "BodyUseAPI": [], "Fixed commit": "f48162e850e8e03e639d214c7e148c39fdf67ba7", "Url": "https://api.github.com/repos/gimdongwoo/Ti-Android-CameraView", "Date": "2015-09-11T12:06:40Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ratio < 1) { ratio = ((double) (size.height)) / (size.width); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3193/buggy-version/src.pw.custom.androidcamera.CameraViewProxy.java", "BodyUseAPI": [], "Fixed commit": "f48162e850e8e03e639d214c7e148c39fdf67ba7", "Url": "https://api.github.com/repos/gimdongwoo/Ti-Android-CameraView", "Date": "2015-09-11T12:06:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.verify.VerifyOracle.getBuildNumber()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((buildNumber >= (com.liferay.portal.kernel.util.ReleaseInfo.RELEASE_6_0_0_BUILD_NUMBER)) && (buildNumber < (com.liferay.portal.kernel.util.ReleaseInfo.RELEASE_6_1_20_BUILD_NUMBER))) { if (dataLength != 4000) { dataLength = dataLength / 4; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4008/buggy-version/portal-impl.src.com.liferay.portal.verify.VerifyOracle.java", "BodyUseAPI": [], "Fixed commit": "5cd7db7f1eb6329e4ebe178e01a9cab04a905e1a", "Url": "https://api.github.com/repos/brianchandotcom/liferay-portal", "Date": "2012-07-06T23:31:25Z"},
{"Line": "=>2299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((lexer.token()) == (com.alibaba.druid.sql.parser.Token.TO)) || ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.AS))) { lexer.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3838/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.nextToken()"], "Fixed commit": "dcbdac399e53bb1072f88c2de1290bb42aae7f71", "Url": "https://api.github.com/repos/ptma/druid", "Date": "2014-03-03T06:33:21Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((crtLoading) != null) { de.keyboardsurfer.android.widget.crouton.Crouton.hide(crtLoading); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4094/buggy-version/src.com.jservoire.hellomiss.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5bab8472cbd20b2dec98bc1cad2182c648d285db", "Url": "https://api.github.com/repos/Johann-S/HelloMiss", "Date": "2014-03-06T19:54:31Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (net.gy.SwiftFrameWork.Service.cache.config.PoolType.Sync)) { poolMap = new java.util.concurrent.ConcurrentHashMap(); }else { poolMap = new java.util.HashMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/270/buggy-version/src.main.java.net.gy.SwiftFrameWork.Service.cache.control.CachePoolGroup.java", "BodyUseAPI": [], "Fixed commit": "127bfbd01932433a9b85fd94ac5338a4a55d8b7c", "Url": "https://api.github.com/repos/ganyao114/SwiftFrameWork", "Date": "2016-09-02T19:36:07Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (u < 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1432/buggy-version/teavm-classlib.src.main.java.org.teavm.classlib.java.util.TCollections.java", "BodyUseAPI": [], "Fixed commit": "7eb710a806a6bace9ebc17aa6f8138364ae8ac5a", "Url": "https://api.github.com/repos/shannah/cn1-teavm-builds", "Date": "2015-05-12T23:58:46Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getCount()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((((mService) != null) && (mArtistID.equals(mService.getArtistID()))) && (numTracks > 0)) && (numTracks == (mService.getNumTracks()))) { mCursor.moveToPosition(mService.getCurrentTrack()); if (mCursor.getString(com.example.android.spotifystreamer.TopTenTracksActivityFragment.COL_TRACKS_PREVIEW_URL).equals(mService.getPreviewUrl())) { if ((mTracksListView) != null) { mPosition = mCursor.getPosition(); mTracksListView.setItemChecked(mPosition, true); return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4616/buggy-version/app.src.main.java.com.example.android.spotifystreamer.TopTenTracksActivityFragment.java", "BodyUseAPI": ["com.example.android.spotifystreamer.service.MediaPlayerService.getCurrentTrack()", "com.example.android.spotifystreamer.service.MediaPlayerService.getPreviewUrl()", "android.database.Cursor.moveToPosition(mService.getCurrentTrack())", "mCursor.getString(com.example.android.spotifystreamer.TopTenTracksActivityFragment.COL_TRACKS_PREVIEW_URL).equals(mService.getPreviewUrl())"], "Fixed commit": "f4c69d01b6c3bd9723482851007396a90df9af38", "Url": "https://api.github.com/repos/edgould/Spotify-Streamer-Stage-1", "Date": "2015-10-05T11:52:51Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.socialize.util.StringUtils.isEmpty(authData))) { com.socialize.auth.UserProviderCredentialsMap map = jsonUtils.fromJSON(authData, com.socialize.auth.UserProviderCredentialsMap.class); map.remove(type); editor.putString(com.socialize.api.PreferenceSessionPersister.USER_AUTH_DATA, jsonUtils.toJSON(map)); }else { editor.putString(com.socialize.api.PreferenceSessionPersister.USER_AUTH_DATA, jsonUtils.toJSON(makeDefaultUserProviderCredentials())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4827/buggy-version/sdk.src.com.socialize.api.PreferenceSessionPersister.java", "BodyUseAPI": ["com.socialize.util.JSONUtils.fromJSON(java.lang.String,java.lang.Class)"], "Fixed commit": "c55acdf07395478618670bf3f2fbf44b4ff0b220", "Url": "https://api.github.com/repos/socialize/socialize-sdk-android", "Date": "2012-03-15T17:31:35Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.kotlin.resolve.KotlinType.getConstructor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (constructor.isFinal()) { trace.report(org.jetbrains.kotlin.resolve.FINAL_SUPERTYPE.on(typeReference)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8608/buggy-version/compiler.frontend.src.org.jetbrains.kotlin.resolve.BodyResolver.java", "BodyUseAPI": [], "Fixed commit": "c73f01927a3014768d6cddbcf1ef65f1acc99b00", "Url": "https://api.github.com/repos/dzharkov/kotlin", "Date": "2015-12-07T16:08:30Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source) instanceof java.util.List) entities = ((java.util.List<? extends java.lang.Readable>) (source)); else entities = new java.util.ArrayList<>(source);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2762/buggy-version/src.bn.blaszczyk.roseapp.view.table.EntityTableModel.java", "BodyUseAPI": [], "Fixed commit": "c6811e46380e537821734b99832ab56ff4ea3362", "Url": "https://api.github.com/repos/blaszczyk/rose-app", "Date": "2017-05-01T20:43:09Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sortLanguageId == null) { org.infoglue.cms.entities.management.LanguageVO languageVO = org.infoglue.cms.controllers.kernel.impl.simple.LanguageController.getController().getMasterLanguage(this.siteNodeVO.getRepositoryId()); this.sortLanguageId = languageVO.getLanguageId(); }else { this.sortLanguageId = sortLanguageId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7821/buggy-version/src.java.org.infoglue.cms.applications.structuretool.actions.MoveSiteNodeAction.java", "BodyUseAPI": [], "Fixed commit": "3da7243f47ca795680943c79a46b96a5baca201b", "Url": "https://api.github.com/repos/bogeblad/infoglue", "Date": "2015-05-11T10:13:30Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((result != null) && (result.isPresent())) { org.json.JSONObject resultJSON = result.get(); de.tum.in.tumcampusapp.auxiliary.luis.LuisResponseReader luisResponseReader = new de.tum.in.tumcampusapp.auxiliary.luis.LuisResponseReader(); java.util.List<de.tum.in.tumcampusapp.auxiliary.luis.Action> actions = luisResponseReader.readResponse(resultJSON); for (de.tum.in.tumcampusapp.auxiliary.luis.Action a : actions) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/133/buggy-version/app.src.main.java.de.tum.in.tumcampusapp.services.AssistantService.java", "BodyUseAPI": ["com.google.common.base.Optional<org.json.JSONObject>.get()"], "Fixed commit": "8b63cd7230af1f42f5f51e46c35c9d5a4b3efe19", "Url": "https://api.github.com/repos/dimart/TumCampusApp", "Date": "2016-11-12T12:00:39Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.peace.auto.bl.job.OrderModeJob.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((currentUser == null) || (currentUser.trim().equals(\"\"))) { currentUser = \"error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2705/buggy-version/src.main.java.com.peace.auto.bl.job.OrderModeJob.java", "BodyUseAPI": [], "Fixed commit": "3203c5133eb1c7d007d55af3194aa62c5b1d1d6d", "Url": "https://api.github.com/repos/peace0phmind/blauto", "Date": "2016-06-18T03:45:11Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serv) instanceof java.net.ServerSocket) { do { if (s != null) s.close(); s = ((java.net.ServerSocket) (serv)).accept(); } while (!(s.getInetAddress().getHostAddress().equals(work.s.getInetAddress().getHostAddress())) ); }else { s = new java.net.Socket(((java.lang.String) (serv)), ep); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5255/buggy-version/src.org.avuna.httpd.ftp.ThreadPassive.java", "BodyUseAPI": [], "Fixed commit": "0c2289fb392a774f7b1905f1dd2e7f4a27a32113", "Url": "https://api.github.com/repos/paullaz/Avuna-HTTPD", "Date": "2015-05-30T19:27:40Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nattyParser.parse(toParse).size()) < 1) { throw new project.taskcrusher.commons.exceptions.IllegalValueException(project.taskcrusher.model.shared.DateUtilApache.MESSAGE_DATE_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2891/buggy-version/src.main.java.project.taskcrusher.model.shared.DateUtilApache.java", "BodyUseAPI": [], "Fixed commit": "e71dcd94a8a14a926830bdd2c06e3fb2caef65db", "Url": "https://api.github.com/repos/CS2103JAN2017-T15-B1/main", "Date": "2017-04-08T03:49:04Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nattyParser.parse(toParse).size()) < 1) { throw new project.taskcrusher.commons.exceptions.IllegalValueException(project.taskcrusher.model.shared.DateUtilApache.MESSAGE_DATE_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2891/buggy-version/src.main.java.project.taskcrusher.model.shared.DateUtilApache.java", "BodyUseAPI": [], "Fixed commit": "e71dcd94a8a14a926830bdd2c06e3fb2caef65db", "Url": "https://api.github.com/repos/CS2103JAN2017-T15-B1/main", "Date": "2017-04-08T03:49:04Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((biome.getRegistryName()) == null) { return com.ternsip.structpro.Structure.Biome.COMMON; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7928/buggy-version/builds.1.12.1.src.main.java.com.ternsip.structpro.Structure.Biome.java", "BodyUseAPI": [], "Fixed commit": "6ac2b78db1bdf7ac336640c5df395e94e93b43d4", "Url": "https://api.github.com/repos/ternsip/StructPro", "Date": "2017-08-20T07:16:50Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dagger.internal.Keys.isAnnotated(key)) { throw new dagger.internal.Binding.InvalidBindingException(key, \"is a @Qualifier-annotated type and must be bound by a @Provides method.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5295/buggy-version/core.src.main.java.dagger.internal.Linker.java", "BodyUseAPI": [], "Fixed commit": "09b469c2897a2e19d96f19b6a6388a96344d7262", "Url": "https://api.github.com/repos/ThirdProject/android_external_square_dagger", "Date": "2014-08-01T16:26:35Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tmpName != null) { node.setName(tmpName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2724/buggy-version/src.main.java.org.shirazu.gridcourse.stax.StaxParser.java", "BodyUseAPI": ["org.shirazu.gridcourse.gis.Node.setName(java.lang.String)"], "Fixed commit": "3708844034b3d037d91f2a307f6c8c4ea2aee722", "Url": "https://api.github.com/repos/amirsojoodi/GridInformationService", "Date": "2015-07-26T00:10:42Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.imagej.ops.filter.phasecorrelation.PhaseCorrelationPeak.getPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((peakPosition.length) <= i) { translationArray[i][j] = 0; }else { translationArray[i][j] = peakPosition[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2749/buggy-version/src.main.java.net.imagej.ops.filter.phasecorrelation.ImgPhaseCorrelationOp.java", "BodyUseAPI": [], "Fixed commit": "b3c1e9b8f1f6cc1eaeda3cf062dc4afa1f956611", "Url": "https://api.github.com/repos/gab1one/imagej-ops", "Date": "2015-08-17T09:47:51Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size < 3) { size = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2749/buggy-version/src.main.java.net.imagej.ops.filter.phasecorrelation.ImgPhaseCorrelationOp.java", "BodyUseAPI": [], "Fixed commit": "b3c1e9b8f1f6cc1eaeda3cf062dc4afa1f956611", "Url": "https://api.github.com/repos/gab1one/imagej-ops", "Date": "2015-08-17T09:47:51Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<TreeNode>.poll()", "java.util.LinkedList<TreeNode>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((leftNode == null) && (rightNode == null)) { continue; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2096/buggy-version/src.SymmetricTree.java", "BodyUseAPI": [], "Fixed commit": "12a9e6ffadcd8581554a46f5cb0292224449ef47", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-06-03T17:14:01Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loan == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5300/buggy-version/pujcovnaStroju.pujcovnaStroju_Backend.src.main.java.cz.muni.fi.pa165.pujcovnastroju.converter.LoanDTOConverter.java", "BodyUseAPI": [], "Fixed commit": "d0c014606cd9854c8075efd8dce44de504a8bc2c", "Url": "https://api.github.com/repos/bender-futur/pujcovna-stroju", "Date": "2013-10-31T22:33:32Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultValue) != null) { map.put(JsonSchema.KEY_DEFAULT, defaultValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1555/buggy-version/structr-core.src.main.java.org.structr.schema.export.StructrPropertyDefinition.java", "BodyUseAPI": [], "Fixed commit": "40047aaa6284c941b68f371b66a2e2e763c1a242", "Url": "https://api.github.com/repos/structr/structr", "Date": "2015-04-04T18:24:59Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(JsonSchema.KEY_DEFAULT)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (_defaultValue != null) { this.defaultValue = _defaultValue.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1555/buggy-version/structr-core.src.main.java.org.structr.schema.export.StructrPropertyDefinition.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "40047aaa6284c941b68f371b66a2e2e763c1a242", "Url": "https://api.github.com/repos/structr/structr", "Date": "2015-04-04T18:24:59Z"},
{"Line": "=>943", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playerChar.itemsHeld[i]) != null) out.printf(\"<option value = \\\"%s\\\"> %s </option> \\n\", playerChar.itemsHeld[i].getName(), playerChar.itemsHeld[i].getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1026/buggy-version/Tarsus.src.java.GameInstance.java", "BodyUseAPI": ["java.io.PrintWriter.printf(java.lang.String,playerChar.itemsHeld[i].getName(),playerChar.itemsHeld[i].getName())", "playerChar.itemsHeld[i].getName()", "playerChar.itemsHeld[i].getName()"], "Fixed commit": "dc68b68bb9d78ffa7a61bf57876aad9a25f0038e", "Url": "https://api.github.com/repos/bgrayd/Tarsus", "Date": "2013-11-18T20:13:02Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((store) instanceof org.ecocean.media.URLAssetStore) bestType = \"original\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4422/buggy-version/src.main.java.org.ecocean.media.MediaAsset.java", "BodyUseAPI": [], "Fixed commit": "e00872e87287a4f360d2361018129dd963e1491d", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2016-10-27T21:46:03Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oruji.peyk.PeykUser.deserialize(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (peykUser == null) { log.error(\"Listen UDF: deserialized peyuser is null !!\"); }else { if (!(peykUser.equals(org.oruji.peyk.PeykUser.getSourceUser()))) { log.info((\"Received UDP from: \" + peykUser)); peykUsers.add(peykUser); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1053/buggy-version/src.main.java.org.oruji.peyk.OnlineListenUdp.java", "BodyUseAPI": ["java.util.Set<org.oruji.peyk.PeykUser>.add(org.oruji.peyk.PeykUser)", "org.oruji.peyk.PeykUser.equals(org.oruji.peyk.PeykUser.getSourceUser())", "org.apache.log4j.Logger.info((\"Received UDP from: \" + peykUser))"], "Fixed commit": "8afa8e00863861798a35e40cf906c72910b4ddae", "Url": "https://api.github.com/repos/oruji/peyk", "Date": "2015-03-02T00:44:01Z"},
{"Line": "=>2231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.account_id) > 0) { failed_account_ids.add(response.account_id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8421/buggy-version/src.org.mariotaku.twidere.util.AsyncTwitterWrapper.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.add(response.account_id)"], "Fixed commit": "34cd023f4adf6f451547ba089ef484265f280c8f", "Url": "https://api.github.com/repos/mariotaku/twidere", "Date": "2013-05-22T13:11:57Z"},
{"Line": "=>1407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count < 0) && ((_model) instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (_model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4352/buggy-version/zul.src.org.zkoss.zul.Listbox.java", "BodyUseAPI": [], "Fixed commit": "87672cdb2d63a0bc8a1fff4230a7d3a1e7cbb012", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zul.Grid.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((count < 0) && (model instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4352/buggy-version/zul.src.org.zkoss.zul.Rows.java", "BodyUseAPI": [], "Fixed commit": "87672cdb2d63a0bc8a1fff4230a7d3a1e7cbb012", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (it.hasNext()) { return it.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8079/buggy-version/6.830-lab2.src.java.simpledb.Aggregate.java", "BodyUseAPI": ["simpledb.DbIterator.next()"], "Fixed commit": "b96d25e51bfdd55cd10276efb2285944189a0d2e", "Url": "https://api.github.com/repos/selfpoised/6.830", "Date": "2017-01-07T06:29:24Z"},
{"Line": "=>5102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["robot.RoboticArm.getActiveProg()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((mInst.getPoint(p)) != null) { boolean isCartesian = (mInst.getMotionType()) != (global.Fields.MTYPE_JOINT); java.lang.String[] pregEntry = mInst.getPoint(p).toLineStringArray(isCartesian); for (java.lang.String line : pregEntry) { options.addLine(line); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/490/buggy-version/RobotRun.src.robot.RobotRun.java", "BodyUseAPI": ["programming.MotionInstruction.getPoint(programming.Program)", "programming.MotionInstruction.getMotionType()", "mInst.getPoint(p).toLineStringArray(boolean)"], "Fixed commit": "088c27958dd074ef06f3f4cc4f9a0c4753d1d21b", "Url": "https://api.github.com/repos/skuhl/RobotRun", "Date": "2017-05-01T22:41:43Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayCounter) > 0) i = (displayCounter) - 1; else i = (com.dmr.DisplayView.DISPLAYCOUNT) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/481/buggy-version/src.com.dmr.DisplayView.java", "BodyUseAPI": [], "Fixed commit": "5e8ad3c2f7d03b39cbad587700a1e0f0159453c4", "Url": "https://api.github.com/repos/IanWraith/DMRDecode", "Date": "2011-03-14T11:02:55Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.inventory.getItemStack()) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3160/buggy-version/src.main.java.refinedstorage.tile.TileController.java", "BodyUseAPI": [], "Fixed commit": "8baadd48fa534c91dee3426c5488888e42cb7036", "Url": "https://api.github.com/repos/raoulvdberge/refinedstorage", "Date": "2016-05-14T22:46:33Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.io.File, info.fetter.logstashforwarder.FileState>.get(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (state != null) state.setDeleted();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1722/buggy-version/src.main.java.info.fetter.logstashforwarder.FileWatcher.java", "BodyUseAPI": ["info.fetter.logstashforwarder.FileState.setDeleted()"], "Fixed commit": "5e7f32b732fee3d313289d698a47daf75e1f4b1f", "Url": "https://api.github.com/repos/didfet/logstash-forwarder-java", "Date": "2015-06-22T17:03:31Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (threadHandle == null) { threadHandle = sipStack.getThreadAuditor().addCurrentThread(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/601/buggy-version/src.gov.nist.javax.sip.stack.UDPMessageChannel.java", "BodyUseAPI": [], "Fixed commit": "8d8336d20afb93339de34ba88a56b890f8a4a2be", "Url": "https://api.github.com/repos/usnistgov/jsip", "Date": "2006-12-05T05:18:50Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(capstone.server.GameRecorder.players.get(gameID).equals(game))) { capstone.server.GameRecorder.players.put(gameID, game); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5312/buggy-version/CapstoneProject.src.java.capstone.server.GameRecorder.java", "BodyUseAPI": ["java.util.Map<java.lang.String, capstone.player.GameRecord>.put(java.lang.String,capstone.player.GameRecord)"], "Fixed commit": "42b063473096b96488a316751a1c25fe3df35ebf", "Url": "https://api.github.com/repos/mbdietrich/MUCapstone2013_Team2", "Date": "2013-10-09T01:36:05Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mapsIntent.resolveActivity(v.getContext().getPackageManager())) != null) { startActivity(mapsIntent); }else { java.lang.String uri = \"http://maps.google.com/maps?f=d&hl=ru&saddr=\" + address; mapsIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(uri)); if ((mapsIntent.resolveActivity(v.getContext().getPackageManager())) != null) { startActivity(mapsIntent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8675/buggy-version/app.src.main.java.ru.badr.cosplay2.fragment.AboutFragment.java", "BodyUseAPI": ["android.content.Intent.resolveActivity(v.getContext().getPackageManager())", "v.getContext().getPackageManager()", "ru.badr.cosplay2.fragment.AboutFragment.startActivity(android.content.Intent)", "android.view.View.getContext()"], "Fixed commit": "bce473b5f1b31b73e6cef20f451c9b88ba38e79e", "Url": "https://api.github.com/repos/Histler/Cosplay2", "Date": "2016-11-17T18:22:27Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (inputLine == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6415/buggy-version/src.main.java.com.benajaminleephoto.ramsey.common.CayleyGraph.java", "BodyUseAPI": [], "Fixed commit": "be355b8b8d28d13c21eae00cd846f855c50ab754", "Url": "https://api.github.com/repos/benfff85/Ramsey", "Date": "2016-05-19T21:01:16Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (user != null) { ceitBot.sendMessageToAdmins((\"From :\" + ((java.lang.String) (user.get(\"first_name\"))))); java.lang.String lastName = ((java.lang.String) (user.get(\"last_name\"))); if (lastName != null) ceitBot.sendMessageToAdmins(((java.lang.String) (user.get(\"last_name\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6682/buggy-version/src.main.java.ir.ac.aut.ceit.ceit93bot.App.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)", "org.json.simple.JSONObject.get(java.lang.String)", "ir.ac.aut.ceit.ceit93bot.CEITBot.sendMessageToAdmins(java.lang.String)", "ir.ac.aut.ceit.ceit93bot.CEITBot.sendMessageToAdmins(((java.lang.String) (user.get(\"last_name\"))))", "org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "bb289dcb80bfe6f66e2943a4919318dc7102e01d", "Url": "https://api.github.com/repos/Tabrizian/ceit93bot", "Date": "2016-04-19T19:42:20Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, com.xeiam.xchart.Series>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((series.getMarker()) != null) { g.setColor(series.getMarkerColor()); series.getMarker().paint(g, xOffset, yOffset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/235/buggy-version/xchart.src.main.java.com.xeiam.xchart.internal.chartpart.PlotContentLineChart.java", "BodyUseAPI": ["com.xeiam.xchart.Series.getMarkerColor()", "series.getMarker().paint(java.awt.Graphics2D,int,int)", "java.awt.Graphics2D.setColor(series.getMarkerColor())", "com.xeiam.xchart.Series.getMarker()"], "Fixed commit": "9c919288d211941b007abc65c90c0e5eb74a554c", "Url": "https://api.github.com/repos/timmolter/XChart", "Date": "2013-02-27T12:50:35Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count != 0.0) { return precisionSum / count; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3762/buggy-version/src.edu.nyu.cs.cs2580.Evaluator.java", "BodyUseAPI": [], "Fixed commit": "072f149ce6e25e02391ec03edeee60ab0dfa13a2", "Url": "https://api.github.com/repos/sujalw/WebSearchEngine", "Date": "2013-02-27T21:15:28Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result != null) { this.result = result; android.content.Intent intent = new android.content.Intent(context, com.example.jokerandroidlib.JokeDisplayActivity.class); intent.addFlags(com.udacity.gradle.builditbigger.FLAG_ACTIVITY_NEW_TASK); intent.putExtra(\"joke\", result); context.startActivity(intent); }else { android.widget.Toast.makeText(context, \"error retrieving the joke from the backend\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7395/buggy-version/app.src.main.java.com.udacity.gradle.builditbigger.EndPointJokerAsyncTask.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String)"], "Fixed commit": "8781f16f6a3421a25540658da87a61c2385b20f9", "Url": "https://api.github.com/repos/guillermo20/build-it-bigger", "Date": "2017-01-28T23:52:01Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((users) == null) { users = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/748/buggy-version/app.src.main.java.neeedo.imimaprx.htw.de.neeedo.entities.user.Users.java", "BodyUseAPI": [], "Fixed commit": "2a9bc9e9dac2d4b57f02741151d7b6508e0c58b1", "Url": "https://api.github.com/repos/neeedo/neeedo-android", "Date": "2015-07-04T10:27:14Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nest.getAlternatives().isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1623/buggy-version/playgrounds.thibautd.src.main.java.playground.thibautd.maxess.nestedlogitaccessibility.framework.NestedLogitAccessibilityCalculator.java", "BodyUseAPI": [], "Fixed commit": "1bd624a9afa342eb9d0163739f8873a0bdb11d7e", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2015-11-26T17:00:58Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (terms.isEmpty()) throw new java.lang.IllegalStateException(\"nothing to sum!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1623/buggy-version/playgrounds.thibautd.src.main.java.playground.thibautd.maxess.nestedlogitaccessibility.framework.NestedLogitAccessibilityCalculator.java", "BodyUseAPI": [], "Fixed commit": "1bd624a9afa342eb9d0163739f8873a0bdb11d7e", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2015-11-26T17:00:58Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.isFile) { if (node.name.toLowerCase().endsWith(\".md\")) { iconIdx = R.drawable.file_markdown; }else if (node.name.toLowerCase().endsWith(\"html\")) { iconIdx = R.drawable.file_html; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2975/buggy-version/app.src.main.java.com.fragmentime.mdreader.MdList.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "c985130dee8f571bca8d83b8fe24c707bd0cf27e", "Url": "https://api.github.com/repos/armstrongli/MdReader", "Date": "2016-12-14T04:15:05Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ex.languageInfo.getNormalizedNerSpan(java.lang.String,c.getStart(),c.getEnd())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((value.contains(\" T1\")) || (value.contains(\" T0\"))) || (value.equals(\"PRESENT_REF\"))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8173/buggy-version/src.edu.stanford.nlp.sempre.SUDateFn.java", "BodyUseAPI": [], "Fixed commit": "c899fb08291c1508da4e5a5aac4c6cd39d3f168f", "Url": "https://api.github.com/repos/NadavLidor/sempre", "Date": "2016-09-05T08:17:53Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yamcs.yarch.YarchDatabase.getInstance(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((db.getStream(streamName)) != null) { org.yamcs.archive.YarchReplay.log.debug((\"running query: \" + query)); db.execute(query); }else { org.yamcs.archive.YarchReplay.log.debug(\"Stream already closed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1061/buggy-version/yamcs-core.src.main.java.org.yamcs.archive.YarchReplay.java", "BodyUseAPI": ["org.yamcs.yarch.YarchDatabase.execute(java.lang.String)"], "Fixed commit": "30853e459445f7beaff84110ae4572ca8e429e89", "Url": "https://api.github.com/repos/yamcs/yamcs", "Date": "2015-09-02T14:26:45Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ArgumentList.Entry.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (isCall || (v != null)) { print(\"=\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3923/buggy-version/src.r.nodes.tools.PrettyPrinter.java", "BodyUseAPI": [], "Fixed commit": "e5a0afeebcfbee269dc83c064acc3eb9c98902f8", "Url": "https://api.github.com/repos/allr/fastr", "Date": "2012-08-16T02:40:55Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.User.getProperty(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((puprop.getPerforceId()) != null) { hudson.plugins.perforce.PerforceMailResolver.LOGGER.fine(((((\"Using perforce user id '\" + perforceId) + \"' from \") + (u.getId())) + \"'s properties.\")); perforceId = puprop.getPerforceId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1173/buggy-version/src.main.java.hudson.plugins.perforce.PerforceMailResolver.java", "BodyUseAPI": ["hudson.plugins.perforce.PerforceUserProperty.getPerforceId()"], "Fixed commit": "f37dd67bc3fe7abb6f1617a4d1c4d5e268a210c0", "Url": "https://api.github.com/repos/jenkinsci/perforce-plugin", "Date": "2012-03-16T17:12:17Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ua.org.s4code.intellicalc.analyser.function.Function.isValues(context, arguments)) { double num = ((ua.org.s4code.intellicalc.analyser.value.ValueType) (arguments.get(0).result(context))).getValue(context); result = new ua.org.s4code.intellicalc.analyser.value.Literal((-num)); }else { throw new java.lang.Exception(\"Type of arguments is not permitted.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7372/buggy-version/app.src.main.java.ua.org.s4code.intellicalc.analyser.function.basic.Sub.java", "BodyUseAPI": ["((ua.org.s4code.intellicalc.analyser.value.ValueType) (arguments.get(0).result(context))).getValue(ua.org.s4code.intellicalc.analyser.ExprContainer)", "arguments.get(0).result(ua.org.s4code.intellicalc.analyser.ExprContainer)", "java.util.ArrayList<ua.org.s4code.intellicalc.analyser.Expression>.get(int)"], "Fixed commit": "ca287f84d8d69c19b9208ac78a3ea9775f124dcf", "Url": "https://api.github.com/repos/stalkerok1993/intellicalc", "Date": "2015-08-16T15:20:27Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getCartSize()) == 0) throw new exceptions.EmptyCartException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2478/buggy-version/src.model.Cart.java", "BodyUseAPI": [], "Fixed commit": "fbc42c9e8432a2d4a03fc99f07a9fa822c5860d6", "Url": "https://api.github.com/repos/CristianTuretta/mediashop-client", "Date": "2017-07-12T22:58:43Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getSummary()) != null) { em.appendField(\"Event Name/Summary\", event.getSummary(), true); }else { em.appendField(\"Event Name/Summary\", \"ERROR\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3623/buggy-version/src.main.java.com.cloudcraftgaming.discal.internal.calendar.event.EventMessageFormatter.java", "BodyUseAPI": ["com.cloudcraftgaming.discal.internal.calendar.event.PreEvent.getSummary()", "sx.blah.discord.util.EmbedBuilder.appendField(java.lang.String,event.getSummary(),boolean)"], "Fixed commit": "5377db8779c1f0c2f03bc04fca7a8892f5d31e37", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2017-03-28T16:57:37Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getDescription()) != null) { em.appendField(\"Event Description\", event.getDescription(), true); }else { em.appendField(\"Event Description\", \"ERROR\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3623/buggy-version/src.main.java.com.cloudcraftgaming.discal.internal.calendar.event.EventMessageFormatter.java", "BodyUseAPI": ["sx.blah.discord.util.EmbedBuilder.appendField(java.lang.String,event.getDescription(),boolean)", "com.cloudcraftgaming.discal.internal.calendar.event.PreEvent.getDescription()"], "Fixed commit": "5377db8779c1f0c2f03bc04fca7a8892f5d31e37", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2017-03-28T16:57:37Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.exists())) if (!(f.mkdirs())) { android.util.Log.e(Iconify.TAG, \"Font folder creation failed\"); throw new java.lang.IllegalStateException(\"Cannot create Iconify font destination folder\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4715/buggy-version/android-iconify.src.main.java.com.joanzapata.android.iconify.Utils.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "31415968e8ff1c981cfbaba789c440c7fc939b62", "Url": "https://api.github.com/repos/loicortola/android-iconify", "Date": "2014-06-04T15:18:37Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moveCamera) { mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLng(latLng)); mMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.zoomTo(getResources().getInteger(R.integer.zoom_default))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5315/buggy-version/app.src.main.java.re.sourcecode.android.wattsnearby.MainMapActivity.java", "BodyUseAPI": [], "Fixed commit": "2e4e1a508abafe2eaf6440eb2f4f2aaea7a01498", "Url": "https://api.github.com/repos/sourcecodere/WattsNearby", "Date": "2017-04-21T10:35:24Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((team5.trickygame.GameManager.getInstance().getLives()) == 1) notificationManger.cancelAll();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2244/buggy-version/app.src.main.java.team5.trickygame.questions.Question7.java", "BodyUseAPI": [], "Fixed commit": "cfcfd92b8eff8b456d20b0f2312b5f0dc0f37b31", "Url": "https://api.github.com/repos/EterniaLogic/TrickyGame", "Date": "2015-11-03T01:09:06Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (customer == null) { throw new java.lang.Exception(\"Username not found!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1928/buggy-version/Task7.src.controller.resetPwdAction.java", "BodyUseAPI": [], "Fixed commit": "540094acc6b8e326454b82ab26d8fef4f7e86756", "Url": "https://api.github.com/repos/migrantcheng/IdeaFact", "Date": "2014-01-31T02:45:14Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lastModified != 0L) { parameterNames.add(\"ifModifiedSince\"); parameterValues.add(lastModified); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6569/buggy-version/subsonic-android.src.github.daneren2005.dsub.service.RESTMusicService.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(long)"], "Fixed commit": "ccab5b04036cff6e6b9cae5d70a45b0abfcd0dc2", "Url": "https://api.github.com/repos/hedwig34/Subsonic", "Date": "2012-12-15T04:36:47Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((treasuresToGo.get(id)) > 1) { playerStacks.get(id).push(currentTreasures.get(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1834/buggy-version/src.ai.GameSimulator.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.util.Stack<ai.TreasureType>>.get(int)", "playerStacks.get(id).push(currentTreasures.get(id))", "java.util.Map<java.lang.Integer, ai.TreasureType>.get(int)"], "Fixed commit": "27102fc5b4db1acbd92058dd00a5556f310257f9", "Url": "https://api.github.com/repos/cxan96/MazeNet", "Date": "2017-07-25T05:56:07Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (min < 10) { time = ((java.lang.String.valueOf(h)) + \":0\") + (java.lang.String.valueOf(min)); }else { time = ((java.lang.String.valueOf(h)) + \":\") + (java.lang.String.valueOf(min)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2195/buggy-version/app.src.main.java.com.delta.attendancemanager.CRhomesliderfragment.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)"], "Fixed commit": "5c74b7a54f0a114ce445545f19ef1eb291ed6f91", "Url": "https://api.github.com/repos/RahulZoldyck/Attendance_Manager", "Date": "2016-03-09T09:05:54Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (colorPaletteDef != null) { this.setSourceLogScaled(colorPaletteDef.isLogScaled()); }else { this.setSourceLogScaled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2063/buggy-version/beam-core.src.main.java.org.esa.beam.framework.datamodel.ColorPaletteInfo.java", "BodyUseAPI": [], "Fixed commit": "5cd1b387e9ec6bd370a2ccc3332b380accc4433d", "Url": "https://api.github.com/repos/seadas/beam", "Date": "2014-09-16T22:35:30Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.Inventory.getHolder()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (holder instanceof org.bukkit.block.Hopper) { org.bukkit.block.Hopper hopper = ((org.bukkit.block.Hopper) (holder)); worldName = hopper.getWorld().getName(); }else if (holder instanceof org.bukkit.entity.minecart.HopperMinecart) { org.bukkit.entity.minecart.HopperMinecart hopper = ((org.bukkit.entity.minecart.HopperMinecart) (holder)); worldName = hopper.getWorld().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/692/buggy-version/src.haveric.stackableItems.listeners.SIHopperListener.java", "BodyUseAPI": [], "Fixed commit": "ca3247bae81e63909ea7a557fa068987ca888470", "Url": "https://api.github.com/repos/haveric/StackableItems", "Date": "2015-01-15T00:55:24Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.uva.sea.ql.ast.expression.Literal.Identifier.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (questionData.containsKey(nodeString)) { org.uva.sea.ql.type_checker.IdentifierData identifierData = questionData.get(nodeString); return identifierData.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/537/buggy-version/spiros.src.org.uva.sea.ql.type_checker.TypeChecker.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, org.uva.sea.ql.type_checker.IdentifierData>.get(java.lang.String)"], "Fixed commit": "f19cf8b50fcf861df9225e0443368e8112df0a57", "Url": "https://api.github.com/repos/software-engineering-amsterdam/multi-ql", "Date": "2016-02-25T13:07:16Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b < (java.lang.Integer.valueOf(value1.getText()))) { b = ((b - (java.lang.Integer.valueOf(enhancement.getText()))) < 0) ? 0 : b - (java.lang.Integer.valueOf(enhancement.getText())); }else if (b > (java.lang.Integer.valueOf(value2.getText()))) { b = ((b + (java.lang.Integer.valueOf(enhancement.getText()))) > 255) ? 255 : b + (java.lang.Integer.valueOf(enhancement.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9212/buggy-version/src.main.java.ar.com.itba.action.EnchanceContrastAction.java", "BodyUseAPI": [], "Fixed commit": "fa3198526b23c4932efa4b54298ae8cd43fba973", "Url": "https://api.github.com/repos/ealtamir/image-processing", "Date": "2015-08-26T17:17:57Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (g < (java.lang.Integer.valueOf(value1.getText()))) { g = ((g - (java.lang.Integer.valueOf(enhancement.getText()))) < 0) ? 0 : g - (java.lang.Integer.valueOf(enhancement.getText())); }else if (g > (java.lang.Integer.valueOf(value2.getText()))) { g = ((g + (java.lang.Integer.valueOf(enhancement.getText()))) > 255) ? 255 : g + (java.lang.Integer.valueOf(enhancement.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9212/buggy-version/src.main.java.ar.com.itba.action.EnchanceContrastAction.java", "BodyUseAPI": [], "Fixed commit": "fa3198526b23c4932efa4b54298ae8cd43fba973", "Url": "https://api.github.com/repos/ealtamir/image-processing", "Date": "2015-08-26T17:17:57Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r < (java.lang.Integer.valueOf(value1.getText()))) { r = ((r - (java.lang.Integer.valueOf(enhancement.getText()))) < 0) ? 0 : r - (java.lang.Integer.valueOf(enhancement.getText())); }else if (r > (java.lang.Integer.valueOf(value2.getText()))) { r = ((r + (java.lang.Integer.valueOf(enhancement.getText()))) > 255) ? 255 : r + (java.lang.Integer.valueOf(enhancement.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9212/buggy-version/src.main.java.ar.com.itba.action.EnchanceContrastAction.java", "BodyUseAPI": [], "Fixed commit": "fa3198526b23c4932efa4b54298ae8cd43fba973", "Url": "https://api.github.com/repos/ealtamir/image-processing", "Date": "2015-08-26T17:17:57Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { throw new java.lang.IllegalArgumentException(\"The value is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/711/buggy-version/sensappdroid-contract.src.main.java.org.sensapp.android.sensappdroid.api.SensAppHelper.java", "BodyUseAPI": [], "Fixed commit": "316f7cfc1fc6687c93085ca42507d90445d25d4d", "Url": "https://api.github.com/repos/SINTEF-9012/sensapp-android", "Date": "2012-09-12T07:53:10Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.commonwl.viewer.services.WorkflowService.newWorkflowFromGithub(workflowModel.getRetrievedFrom())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (newWorkflow == null) { logger.error((\"Could not parse updated workflow \" + (workflowModel.id))); }else { workflowService.removeWorkflow(workflowModel); workflowRepository.save(newWorkflow); workflowModel = newWorkflow; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5507/buggy-version/src.main.java.org.commonwl.viewer.web.WorkflowController.java", "BodyUseAPI": ["org.commonwl.viewer.services.WorkflowRepository.save(org.commonwl.viewer.domain.Workflow)"], "Fixed commit": "36fb17fc089a0a3a17dfe917177f49c507f976e5", "Url": "https://api.github.com/repos/common-workflow-language/cwlviewer", "Date": "2017-02-18T15:59:39Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parseAddress())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6994/buggy-version/src.main.java.emustudio.gui.BreakpointDialog.java", "BodyUseAPI": [], "Fixed commit": "e2ecf53b367147eb21737567560d754c52ba0e03", "Url": "https://api.github.com/repos/vbmacher/emuStudio", "Date": "2012-05-20T05:58:31Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parseAddress())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6994/buggy-version/src.main.java.emustudio.gui.BreakpointDialog.java", "BodyUseAPI": [], "Fixed commit": "e2ecf53b367147eb21737567560d754c52ba0e03", "Url": "https://api.github.com/repos/vbmacher/emuStudio", "Date": "2012-05-20T05:58:31Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCAN) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8656/buggy-version/src.main.java.com.codebutler.farebot.card.cepas.CEPASPurse.java", "BodyUseAPI": [], "Fixed commit": "e7d20047a3901130809668e9c330c78f9cb0a1d6", "Url": "https://api.github.com/repos/micolous/metrodroid", "Date": "2017-04-29T10:51:35Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCAN) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8656/buggy-version/src.main.java.com.codebutler.farebot.card.cepas.CEPASPurse.java", "BodyUseAPI": [], "Fixed commit": "e7d20047a3901130809668e9c330c78f9cb0a1d6", "Url": "https://api.github.com/repos/micolous/metrodroid", "Date": "2017-04-29T10:51:35Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.brightron.jayaneetha.visitmihinthale.MainActivity.mSavedInstance)) { getSupportFragmentManager().beginTransaction().replace(R.id.detail_container, detailFragment, net.brightron.jayaneetha.visitmihinthale.MainActivity.DETAILFRAGMENT_TAG).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/429/buggy-version/app.src.main.java.net.brightron.jayaneetha.visitmihinthale.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a8b4658eb3ea17bb5651c45c1c245d587748431e", "Url": "https://api.github.com/repos/jayaneetha/visit-mihinthale-app", "Date": "2015-04-01T16:24:34Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7373/buggy-version/app.src.main.java.com.ridelimos.ridelimos.views.BookFrag.java", "BodyUseAPI": [], "Fixed commit": "82f02a7770ffa87c8ebe1beeaf46585833f8558c", "Url": "https://api.github.com/repos/Gurpreet258/rideLimos", "Date": "2017-06-17T17:04:59Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fivetrue.hangoutbaby.api.PlaceApiHandler.getOrderBy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (orderBy != null) { extra = \"ORDER BY \" + orderBy; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5148/buggy-version/HangoutBaby.src.com.fivetrue.hangoutbaby.api.PlaceApiHandler.java", "BodyUseAPI": [], "Fixed commit": "f97a7497f073c1c1953b003be560ce4124fbc147", "Url": "https://api.github.com/repos/fivetrue/HangoutBabyServer", "Date": "2016-09-28T22:30:45Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format.equals(\"antlr\")) { java.io.File f = new java.io.File(msg.fileName); if (f.exists()) { displayFileName = f.getName(); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2337/buggy-version/tool.src.org.antlr.v4.tool.ErrorManager.java", "BodyUseAPI": [], "Fixed commit": "756f3572d8d8a67610cace996edfbd491649f216", "Url": "https://api.github.com/repos/ewanmellor/antlr4", "Date": "2017-11-02T07:13:33Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((paramValue.getValue()) instanceof org.hibernate.envers.RevisionType) { query.setParameter(paramValue.getKey(), paramValue.getValue(), new org.hibernate.type.CustomType(new org.hibernate.envers.internal.entities.RevisionTypeType())); }else { query.setParameter(paramValue.getKey(), paramValue.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9006/buggy-version/hibernate-envers.src.main.java.org.hibernate.envers.internal.tools.query.QueryBuilder.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Object)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Object,org.hibernate.type.CustomType)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()"], "Fixed commit": "f7d9640848b33a1920d877614b4db3f82934ab4d", "Url": "https://api.github.com/repos/CaperWhite/hibernate-orm", "Date": "2015-09-23T11:10:35Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((baseMvcUriComponentsMethod) != null) { fromMethodName.arg(de.neofonie.surlgen.processor.spring.JExpr.invoke(baseMvcUriComponentsMethod)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/77/buggy-version/surlgen-processor.src.main.java.de.neofonie.surlgen.processor.spring.UrlFactoryServiceGenerator.java", "BodyUseAPI": [], "Fixed commit": "67ce3bb6e8d6dda87e5fa9af88d5e8474f72d04a", "Url": "https://api.github.com/repos/Neofonie/surlgen", "Date": "2016-04-21T14:12:24Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mark) > 0) && ((text.charAt(((mark) - 1))) == '.')) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3149/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlLexer.java", "BodyUseAPI": [], "Fixed commit": "d069606a9eec0f71296d462f1d88236c1890d99f", "Url": "https://api.github.com/repos/renfufei/druid", "Date": "2016-09-11T14:47:46Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (score < 0) { error400(httpExchange); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5251/buggy-version/src.main.java.parlindkvist.high_score_server.http.HighScoreHandler.java", "BodyUseAPI": [], "Fixed commit": "ab4a9cf6bf3b7afd2c08ef72736e3b3b86176f87", "Url": "https://api.github.com/repos/parlindkvist/backend-test-king", "Date": "2013-09-29T13:47:38Z"},
{"Line": "=>799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javax.swing.SwingUtilities.isEventDispatchThread()) edu.clemson.lph.dialogs.MessageDialog.showMessage(null, \"Civet: Fatal Error in CivetConfig.txt\", (\"Cannot read property \" + sProp)); else edu.clemson.lph.dialogs.MessageDialog.messageWait(null, \"Civet: Fatal Error in CivetConfig.txt\", (\"Cannot read property \" + sProp));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9035/buggy-version/src.edu.clemson.lph.civet.CivetConfig.java", "BodyUseAPI": [], "Fixed commit": "c6ff157fbb83aeb2122a19ba9fb0a743a118f6d6", "Url": "https://api.github.com/repos/mkm1879/Civet", "Date": "2015-12-23T16:21:17Z"},
{"Line": "=>810", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javax.swing.SwingUtilities.isEventDispatchThread()) edu.clemson.lph.dialogs.MessageDialog.showMessage(null, \"Civet: Fatal Error in CivetConfig.txt\", (\"Cannot read property \" + sProp)); else edu.clemson.lph.dialogs.MessageDialog.messageWait(null, \"Civet: Fatal Error in CivetConfig.txt\", (\"Cannot read property \" + sProp));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9035/buggy-version/src.edu.clemson.lph.civet.CivetConfig.java", "BodyUseAPI": [], "Fixed commit": "c6ff157fbb83aeb2122a19ba9fb0a743a118f6d6", "Url": "https://api.github.com/repos/mkm1879/Civet", "Date": "2015-12-23T16:21:17Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((writer.refer) != null) { writer.refer.addCount(cache.refcount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/567/buggy-version/src.main.java.hprose.io.serialize.OtherTypeSerializer.java", "BodyUseAPI": ["writer.refer.addCount(int)"], "Fixed commit": "0795806b035b64de394f6bd33c09f8cd5edbd925", "Url": "https://api.github.com/repos/hprose/hprose-java", "Date": "2015-07-02T05:31:11Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getParcelableArrayListExtra(Intent.EXTRA_STREAM)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (imageUris != null) for (int i = 0; i < (imageUris.size()); i++) { if (imageUris.get(i).toString().contains(\"pebble.log.gz\")) { valid = true; file = imageUris.get(i); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8244/buggy-version/app.src.main.java.au.com.wallaceit.pebblewatchfacescheduler.MainActivity.java", "BodyUseAPI": ["imageUris.get(i).toString().contains(java.lang.String)", "java.util.ArrayList<android.net.Uri>.size()", "imageUris.get(i).toString()", "java.util.ArrayList<android.net.Uri>.get(int)", "java.util.ArrayList<android.net.Uri>.get(int)"], "Fixed commit": "e77dc8092c6fcd80e2ed89b8d453453894db3008", "Url": "https://api.github.com/repos/micwallace/PebbleWatchfaceScheduler", "Date": "2016-05-16T06:18:06Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.client.Minecraft.getMinecraft()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((lastWorld) != (mc.theWorld)) { CoroUtil.forge.CoroUtil.dbg(\"CoroUtil: resetting rotating particle renderer\"); ExtendedRenderer.rotEffRenderer.clearEffects(mc.theWorld); lastWorld = mc.theWorld; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4524/buggy-version/src.main.java.extendedrenderer.EventHandler.java", "BodyUseAPI": ["ExtendedRenderer.rotEffRenderer.clearEffects(mc.theWorld)"], "Fixed commit": "0d55531adef2ec457e19259896643feb7b97d9cb", "Url": "https://api.github.com/repos/Corosauce/CoroUtil", "Date": "2017-02-05T07:13:35Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Root) == (com.rgw3d.collectors.dummy.DummyContent.x)) Root = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/476/buggy-version/src.com.rgw3d.collectors.ItemListActivity.java", "BodyUseAPI": [], "Fixed commit": "683061f1b65b5248a2fc45e729b5f59f384d38a3", "Url": "https://api.github.com/repos/rgw3d/CollectorsInventory", "Date": "2014-11-14T23:18:09Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!down) oldDown = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6952/buggy-version/src.ro.epb.menubegone.xposed.Main.java", "BodyUseAPI": [], "Fixed commit": "17c91e79d9c50b4bb6dbc28aaddeb9800982d301", "Url": "https://api.github.com/repos/adi1133/XposedMenuBeGone", "Date": "2014-04-18T16:39:33Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(oldDown)) && down) && (!longPress)) { de.robv.android.xposed.XposedHelpers.callMethod(param.thisObject, \"toggleRecentApps\"); oldDown = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6952/buggy-version/src.ro.epb.menubegone.xposed.Main.java", "BodyUseAPI": [], "Fixed commit": "17c91e79d9c50b4bb6dbc28aaddeb9800982d301", "Url": "https://api.github.com/repos/adi1133/XposedMenuBeGone", "Date": "2014-04-18T16:39:33Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.omwah.giftevents.GiftEvent.getDate(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (cal != null) { event_message += \" : \" + (display_format.format(cal.getTime())); if (handler.hasAdminPermission(sender)) { event_message += java.lang.String.format(\" -- Gift Given? %b, Annoucements: %d\", events_info.hasGiftBeenGiven(gift_event, player_name), events_info.getNumAnnoucementsMade(gift_event, player_name)); } sender.sendMessage(event_message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7118/buggy-version/src.main.java.com.github.omwah.giftevents.EventsCommand.java", "BodyUseAPI": ["java.util.Calendar.getTime()", "java.text.DateFormat.format(java.util.Date)"], "Fixed commit": "4ab5e13074c1539eeacc1f8261dc1afe3ab20f1d", "Url": "https://api.github.com/repos/omwah/GiftEvents", "Date": "2013-03-07T02:46:54Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["db.Reminder.findByApptAndUser(this.getId(),long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (reminder == null) { db.Reminder.create(this.getId(), uid, reminderAhead); }else { reminder.reminderAhead = reminderAhead; reminder.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2828/buggy-version/src.db.Appointment.java", "BodyUseAPI": [], "Fixed commit": "d866b1c8a4b995e1fd7c1271d6d76e5f91e28dbf", "Url": "https://api.github.com/repos/2014COMP3111H-doesnmatter/DCalendar-Server", "Date": "2014-11-01T07:46:20Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStop) { paxosInstance.setRecoverStatus(); isStop = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6720/buggy-version/src.com.microblog.server.FrontServer.java", "BodyUseAPI": [], "Fixed commit": "9c4298a10f74a7e1a894f237d30fb6d1ae4c1740", "Url": "https://api.github.com/repos/ProtossJane/MicroBlog", "Date": "2013-12-01T00:40:48Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yawlfoundation.yawl.util.JDOMUtil.stringToElement(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (eItem != null) { java.lang.String status = eItem.getChildText(\"status\"); return java.lang.String.valueOf((!(org.yawlfoundation.yawl.worklet.rdrutil.RdrConditionFunctions.isFinishedStatus(status)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/422/buggy-version/src.org.yawlfoundation.yawl.worklet.rdrutil.RdrConditionFunctions.java", "BodyUseAPI": ["org.jdom2.Element.getChildText(java.lang.String)"], "Fixed commit": "bafecbd6f8b5268eb9b806a24887cf4515f97c8f", "Url": "https://api.github.com/repos/yawlfoundation/yawl", "Date": "2016-10-24T11:23:16Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c) != null) { program = c.getProgramCourse().getProgram(); course = c.getProgramCourse().getCourse(); semester = c.getCoordinatorPK().getSemester(); division = c.getCoordinatorPK().getDivision(); controllers.subject.ProgramCourseController pcll = ((controllers.subject.ProgramCourseController) (context.getELContext().getELResolver().getValue(context.getELContext(), null, \"programCourseController\"))); controllers.subject.SubjectController sc = ((controllers.subject.SubjectController) (context.getELContext().getELResolver().getValue(context.getELContext(), null, \"subjectController\"))); controllers.subject.faculty.lecture.AttendanceReportController arc = ((controllers.subject.faculty.lecture.AttendanceReportController) (context.getELContext().getELResolver().getValue(context.getELContext(), null, \"attendanceReportController\"))); controllers.subject.faculty.FacultySubjectController fsc = ((controllers.subject.faculty.FacultySubjectController) (context.getELContext().getELResolver().getValue(context.getELContext(), null, \"facultySubjectController\"))); entities.subject.ProgramCoursePK pcpk = new entities.subject.ProgramCoursePK(); pcpk.setIdProgram(program.getIdProgram()); pcpk.setIdCourse(course.getIdCourse()); pc = pcll.getProgramCourse(pcpk); subject = sc.getSubjectBySemesterHide(pc, semester); entities.subject.Subject[] subjectList = subject.toArray(new entities.subject.Subject[subject.size()]); for (entities.subject.Subject item : subjectList) { final entities.subject.faculty.FacultySubject facultySubject = fsc.getIdFacSubYr(division, semester, ((short) (0)), item); if (facultySubject == null) { continue; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/511/buggy-version/src.java.controllers.subject.faculty.lecture.CurrentStudentController.java", "BodyUseAPI": [], "Fixed commit": "05c0b683f260f3806a8652849c9b2274e06df8af", "Url": "https://api.github.com/repos/amathew121/sams", "Date": "2014-11-27T10:39:33Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.kenyaemr.api.KenyaEmrService.getDefaultLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (defaultLocation == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5326/buggy-version/api.src.main.java.org.openmrs.module.kenyaemr.chore.FixMissingOpenmrsIdentifiers.java", "BodyUseAPI": [], "Fixed commit": "5dc78d13c3829e59ae70c82d65abe9d048498b1b", "Url": "https://api.github.com/repos/gitahi86/openmrs-module-kenyaemr", "Date": "2014-02-25T10:24:48Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (considerStatement) { node = getNodeByStatementOrCondition(stmt, condition); }else { node = getNodeByCondition(condition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7822/buggy-version/src.main.java.com.mycompany.complexity.tool.mvn.Parser.java", "BodyUseAPI": [], "Fixed commit": "71c239b73df5d3736b16fbce549bb2d66ec8b8c5", "Url": "https://api.github.com/repos/helenocampos/complexity-tool-mvn", "Date": "2016-01-09T20:58:29Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.andune.minecraft.hsp.convert.ConfigurationSection.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (playerName == null) { java.lang.String lowerCaseName = file.getName(); lowerCaseName = lowerCaseName.substring(0, lowerCaseName.lastIndexOf('.')); playerName = offlinePlayers.get(lowerCaseName); if (playerName == null) playerName = lowerCaseName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3832/buggy-version/core.src.main.java.com.andune.minecraft.hsp.convert.Essentials29.java", "BodyUseAPI": [], "Fixed commit": "67d6e5a9731e529b3b953915f49aac99a8108787", "Url": "https://api.github.com/repos/andune/HomeSpawnPlus", "Date": "2015-02-14T00:49:05Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (portalIsCached(state.longXZPair, entity)) { readCachedPortal(state); }else { searchForNearbyPortals(state); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4078/buggy-version/java.net.torocraft.teletoro.teleporter.TeletoryTeleporter.java", "BodyUseAPI": ["net.torocraft.teletoro.teleporter.TeletoryTeleporter.readCachedPortal(net.torocraft.teletoro.teleporter.TeletoryTeleporter.PortalSearchState)", "net.torocraft.teletoro.teleporter.TeletoryTeleporter.searchForNearbyPortals(net.torocraft.teletoro.teleporter.TeletoryTeleporter.PortalSearchState)"], "Fixed commit": "f0377cf22baf5907c54c09feba24f7251d782f08", "Url": "https://api.github.com/repos/ToroCraft/TeleToro", "Date": "2017-01-21T19:57:39Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { destinationCoordinateCache.remove(longIJPair); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4078/buggy-version/java.net.torocraft.teletoro.teleporter.TeletoryTeleporter.java", "BodyUseAPI": [], "Fixed commit": "f0377cf22baf5907c54c09feba24f7251d782f08", "Url": "https://api.github.com/repos/ToroCraft/TeleToro", "Date": "2017-01-21T19:57:39Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimi.dsi.fastutil.longs.Long2ObjectMap<Teleporter.PortalPosition>.containsKey(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cached == false) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4078/buggy-version/java.net.torocraft.teletoro.teleporter.TeletoryTeleporter.java", "BodyUseAPI": [], "Fixed commit": "f0377cf22baf5907c54c09feba24f7251d782f08", "Url": "https://api.github.com/repos/ToroCraft/TeleToro", "Date": "2017-01-21T19:57:39Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tags.isEmpty())) { toAdd.setTags(tags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1917/buggy-version/src.main.java.seedu.address.logic.commands.EditCommand.java", "BodyUseAPI": ["seedu.address.model.task.Task.setTags(seedu.address.model.tag.UniqueTagList)"], "Fixed commit": "6b82914bdeff83f32916d77e0f112c192a530850", "Url": "https://api.github.com/repos/CS2103AUG2016-T11-C3/main", "Date": "2016-11-03T01:15:30Z"},
{"Line": "=>1492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.floor(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (base < 0) base = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7209/buggy-version/MPChartLib.src.com.github.mikephil.charting.charts.BarLineChartBase.java", "BodyUseAPI": [], "Fixed commit": "13fdedaed38190226b17733100e7c4952719646a", "Url": "https://api.github.com/repos/MaTriXy/MPAndroidChart", "Date": "2014-08-13T09:12:05Z"},
{"Line": "=>1493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (base >= (mDeltaX)) base = (mDeltaX) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7209/buggy-version/MPChartLib.src.com.github.mikephil.charting.charts.BarLineChartBase.java", "BodyUseAPI": [], "Fixed commit": "13fdedaed38190226b17733100e7c4952719646a", "Url": "https://api.github.com/repos/MaTriXy/MPAndroidChart", "Date": "2014-08-13T09:12:05Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (role.getAsset().getClass().isAssignableFrom(org.estatio.dom.asset.Property.class)) { result.add(((org.estatio.dom.asset.Property) (role.getAsset()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3406/buggy-version/estatioapp.module.capex.dom.src.main.java.org.estatio.capex.dom.documents.incoming.IncomingOrderAndInvoiceViewModel.java", "BodyUseAPI": ["java.util.List<org.estatio.dom.asset.Property>.add(((org.estatio.dom.asset.Property) (role.getAsset())))", "org.estatio.dom.asset.FixedAssetRole.getAsset()"], "Fixed commit": "61b352f055ac35909ba405464fc537eb77bacbf4", "Url": "https://api.github.com/repos/estatio/estatio", "Date": "2017-05-03T11:49:42Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["postTags.get(i).getTagContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (context != null) { tags[i] = (((tags[i]) + \"(\") + context) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7391/buggy-version/shared.src.main.java.controller.MainController.java", "BodyUseAPI": [], "Fixed commit": "bab94f1552d9f56cd54993c5c1ec21f7a70db258", "Url": "https://api.github.com/repos/bounswe/bounswe2015group8", "Date": "2015-12-08T00:04:32Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["heritageTags.get(i).getTagContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (context != null) { tags[i] = (((tags[i]) + \"(\") + context) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7391/buggy-version/shared.src.main.java.controller.MainController.java", "BodyUseAPI": [], "Fixed commit": "bab94f1552d9f56cd54993c5c1ec21f7a70db258", "Url": "https://api.github.com/repos/bounswe/bounswe2015group8", "Date": "2015-12-08T00:04:32Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.freebuild.superspytx.ab.settings.Settings.captchaEnabled) && (me.freebuild.superspytx.ab.settings.Settings.forceCaptchaOnBotSpam)) me.freebuild.superspytx.ab.tils.CaptchaTils.sendCaptchaToPlayer(info.player); else info.player.kickPlayer(Language.kickMsg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8208/buggy-version/src.me.freebuild.superspytx.ab.handlers.login.BotHandler.java", "BodyUseAPI": [], "Fixed commit": "5cba7b18d27e5261f1dff08f0d0fd6397a68d7c9", "Url": "https://api.github.com/repos/SuperSpyTX/AntiBot", "Date": "2012-11-18T06:31:49Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((charge) > (maxCharge)) { charge = maxCharge; this.updateEnergy(world); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6377/buggy-version/java.com.mhfs.capacitors.tile.CapacitorWallWrapper.java", "BodyUseAPI": [], "Fixed commit": "a916a38aface26235be6fa2a928685dca8367b94", "Url": "https://api.github.com/repos/thilokru/Big-Capacitors-Mod", "Date": "2015-10-09T15:49:38Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (password != null) { userPassword = new myddl.entity.UserPassword(userId, null, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7469/buggy-version/src.main.java.myddl.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "d538d3bf924ea15b901e3a3a957f99f79eb91a76", "Url": "https://api.github.com/repos/SnowyOwl-KHY/MyDDL-Server", "Date": "2016-05-12T18:38:37Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (userPassword != null) { userPasswordMapper.updateByPrimaryKeySelective(userPassword); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7469/buggy-version/src.main.java.myddl.service.impl.UserServiceImpl.java", "BodyUseAPI": ["myddl.service.impl.UserPasswordMapper.updateByPrimaryKeySelective(myddl.service.impl.UserPassword)"], "Fixed commit": "d538d3bf924ea15b901e3a3a957f99f79eb91a76", "Url": "https://api.github.com/repos/SnowyOwl-KHY/MyDDL-Server", "Date": "2016-05-12T18:38:37Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (pendingIntent != null) { android.app.PendingIntent hangPendingIntent = android.app.PendingIntent.getActivity(context, 0, pendingIntent, PendingIntent.FLAG_CANCEL_CURRENT); builder.setContentIntent(hangPendingIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/331/buggy-version/rsen.src.main.java.com.rsen.util.Notify.java", "BodyUseAPI": ["android.app.PendingIntent.getActivity(android.content.Context,int,android.content.Intent,PendingIntent.FLAG_CANCEL_CURRENT)"], "Fixed commit": "7483ec3ce8cb6e2744f3aceded59816b78c19177", "Url": "https://api.github.com/repos/angcyo/RJcenter", "Date": "2016-11-04T07:31:54Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p_labeledData.numInstances()) != 0) currSplit = p_labeledData.instance(0).value(att); else currSplit = p_unlabeledData.instance(0).value(att);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2810/buggy-version/Source.NewTree.java", "BodyUseAPI": ["weka.core.Instances.instance(int)", "p_labeledData.instance(0).value(int)"], "Fixed commit": "07a63748187b1513402e950e132979d86790e933", "Url": "https://api.github.com/repos/XenofoR/MachineLearning", "Date": "2015-02-26T10:27:40Z"},
{"Line": "=>2276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (singular != null) { if (singular.matches(\"^.*\\\\w.*$\")) { return singular; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8447/buggy-version/src.semanticMarkup.ling.learn.UnsupervisedClauseMarkup.java", "BodyUseAPI": ["java.lang.String.matches(java.lang.String)"], "Fixed commit": "dd904c4214a55a0d7cff5948bff36cc7dbedb099", "Url": "https://api.github.com/repos/dongyemeng/charaparser-unsupervised", "Date": "2013-02-12T18:53:40Z"},
{"Line": "=>2297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (pos != null) { if (pos.matches(\"^.*\\\\w.*$\")) { return pos; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8447/buggy-version/src.semanticMarkup.ling.learn.UnsupervisedClauseMarkup.java", "BodyUseAPI": ["java.lang.String.matches(java.lang.String)"], "Fixed commit": "dd904c4214a55a0d7cff5948bff36cc7dbedb099", "Url": "https://api.github.com/repos/dongyemeng/charaparser-unsupervised", "Date": "2013-02-12T18:53:40Z"},
{"Line": "=>2287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (number != null) { if (number.matches(\"^.*\\\\w.*$\")) { return number; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8447/buggy-version/src.semanticMarkup.ling.learn.UnsupervisedClauseMarkup.java", "BodyUseAPI": ["java.lang.String.matches(java.lang.String)"], "Fixed commit": "dd904c4214a55a0d7cff5948bff36cc7dbedb099", "Url": "https://api.github.com/repos/dongyemeng/charaparser-unsupervised", "Date": "2013-02-12T18:53:40Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof com.example.zeroknowledge.Ball)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5185/buggy-version/src.main.java.com.example.zeroknowledge.Ball.java", "BodyUseAPI": [], "Fixed commit": "28d499caade5ccfe54b848866e4353e79f15198d", "Url": "https://api.github.com/repos/frazjp65/zero-knowledge-proof", "Date": "2017-11-11T03:48:30Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getOwner()) == null) { remove(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7611/buggy-version/src.entity.projectile.boomerangProjectile.BoomerangProjectile.java", "BodyUseAPI": [], "Fixed commit": "1d2b914287ee04f125b7e2800de73e7d3fbf7fad", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-01-06T06:44:53Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (element == null) { org.cerberus.log.MyLogger.log(org.cerberus.service.engine.impl.WebDriverService.class.getName(), Level.WARN, (((\"Element null !!!: \" + (identifier.getIdentifier())) + \"=\") + (identifier.getLocator()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4804/buggy-version/source.src.main.java.org.cerberus.service.engine.impl.WebDriverService.java", "BodyUseAPI": [], "Fixed commit": "9baf76df7ec06dc7edd46ae92801a770710b011c", "Url": "https://api.github.com/repos/cerberustesting/cerberus-source", "Date": "2015-10-22T09:34:27Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((content.getImageFiles()) != null) for (com.devsaki.fakkudroid.database.domains.ImageFile imageFile : content.getImageFiles()) { java.io.File file = new java.io.File(dir, imageFile.getName()); if (file.exists()) { com.devsaki.fakkudroid.util.Helper.openFile(file, getContext()); return; } } else com.devsaki.fakkudroid.util.Helper.openFile(new java.io.File(dir, \"001.jpg\"), getContext());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1687/buggy-version/app.src.main.java.com.devsaki.fakkudroid.adapters.ContentAdapter.java", "BodyUseAPI": ["com.devsaki.fakkudroid.database.domains.Content.getImageFiles()"], "Fixed commit": "85e3a9da7f36550048a89059895565ce8d8b959b", "Url": "https://api.github.com/repos/csaki/FakkuDroidV3", "Date": "2015-05-14T06:18:36Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasData(search))) { com.jatin.marvelworld.db.MarvelDb.getInstance(getActivity().getApplicationContext()).insertJSONStore(\"characters\", response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6869/buggy-version/app.src.main.java.com.jatin.marvelworld.fragment.CharacterFragment.java", "BodyUseAPI": [], "Fixed commit": "2e64fb69642fd35a557ea61173069aeb0754952f", "Url": "https://api.github.com/repos/way2jatin/MarvelWorld", "Date": "2017-06-14T17:58:03Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasData(search))) { com.jatin.marvelworld.db.MarvelDb.getInstance(getActivity().getApplicationContext()).insertJSONStore(\"comics\", response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6869/buggy-version/app.src.main.java.com.jatin.marvelworld.fragment.ComicFragment.java", "BodyUseAPI": [], "Fixed commit": "2e64fb69642fd35a557ea61173069aeb0754952f", "Url": "https://api.github.com/repos/way2jatin/MarvelWorld", "Date": "2017-06-14T17:58:03Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flowStepStats.isPending()) markStarted();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6472/buggy-version/cascading-core.src.main.java.cascading.flow.planner.FlowStepJob.java", "BodyUseAPI": [], "Fixed commit": "bf3d0308a8a6a4d9a4b4a41d6daf16b070e0c3ac", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2015-12-23T20:16:57Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.getHeight()) > (lblOriImage.getHeight())) { f = f.scale(ratio, ratio); f.show(); if ((f.getWidth()) > (lblOriImage.getWidth())) { ratio = ((double) (lblOriImage.getWidth())) / ((double) (f.getWidth())); f = f.scale(ratio, ratio); f.show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6427/buggy-version/src.ImageEditor.ImageEditor.java", "BodyUseAPI": ["ImageEditor.Picture.scale(double,double)", "javax.swing.JLabel.getWidth()", "javax.swing.JLabel.getWidth()"], "Fixed commit": "d00de56583097e065af1845079f40cfe8302e6b5", "Url": "https://api.github.com/repos/fayiz7/ImageEditor", "Date": "2017-04-16T22:24:46Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currY) < (tiles[0].length)) { (currY)++; }else { (currX)++; currY = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1002/buggy-version/M6.edu.gatech.cs2340.data.Map.java", "BodyUseAPI": [], "Fixed commit": "ddc34a92b43d899198648e7e51d208681370a1aa", "Url": "https://api.github.com/repos/msnorth/cs2340_mule", "Date": "2013-10-15T16:30:23Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currY) < (tiles[0].length)) { (currY)++; }else { (currX)++; currY = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1002/buggy-version/M6.edu.gatech.cs2340.data.Map.java", "BodyUseAPI": [], "Fixed commit": "ddc34a92b43d899198648e7e51d208681370a1aa", "Url": "https://api.github.com/repos/msnorth/cs2340_mule", "Date": "2013-10-15T16:30:23Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hi >= 0) return ((KEY) (this.keys[hi].getKey())); else return ((KEY) (this.keys[0].getKey()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2593/buggy-version/src.st.library.BST.java", "BodyUseAPI": ["this.keys[hi].getKey()"], "Fixed commit": "9c2e61860a84a0f49737827f681cd5124897e255", "Url": "https://api.github.com/repos/Vreyesm/BST_T3", "Date": "2015-11-09T23:03:23Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((week == (com.ocs.dynamo.utils.DateUtils.LAST_WEEK_NUMBER)) || (week == ((com.ocs.dynamo.utils.DateUtils.LAST_WEEK_NUMBER) - 1))) && (month == (java.util.Calendar.JANUARY))) { year--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5971/buggy-version/dynamo-core.src.main.java.com.ocs.dynamo.utils.DateUtils.java", "BodyUseAPI": [], "Fixed commit": "f38cea3b4ecb321253d799fae6e617cad927fecb", "Url": "https://api.github.com/repos/opencirclesolutions/dynamo", "Date": "2016-12-15T09:31:59Z"},
{"Line": "=>1184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isViewMode())) && ((firstField) != null)) { firstField.focus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5971/buggy-version/dynamo-spring.src.main.java.com.ocs.dynamo.ui.composite.form.ModelBasedEditForm.java", "BodyUseAPI": [], "Fixed commit": "f38cea3b4ecb321253d799fae6e617cad927fecb", "Url": "https://api.github.com/repos/opencirclesolutions/dynamo", "Date": "2016-12-15T09:31:59Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (value != null) { item.setText(k, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4201/buggy-version/src.net.jumperz.app.MDozens.view.MRecordView.java", "BodyUseAPI": ["net.jumperz.app.MDozens.view.TableItem.setText(int,java.lang.String)"], "Fixed commit": "f0a1c30363c7ef8fe71bbba0b54bff45cf7c8a72", "Url": "https://api.github.com/repos/Kanatoko/DozensEclipsePlugin", "Date": "2012-06-23T12:21:18Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.contains(SearchOperator.AND.op())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isAnd) { p.add(org.kuali.rice.core.api.criteria.PredicateFactory.and(tempPredicates.toArray(new org.kuali.rice.core.api.criteria.Predicate[tempPredicates.size()]))); }else { p.addAll(tempPredicates); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6739/buggy-version/rice-middleware.core.api.src.main.java.org.kuali.rice.core.api.criteria.PredicateUtils.java", "BodyUseAPI": [], "Fixed commit": "7a20f8942cef4d6cf1742784ea1056da5fae9e5f", "Url": "https://api.github.com/repos/jwbennet/rice", "Date": "2016-02-29T06:16:24Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["msg.getUrl().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((results.length) == 2) && (((results[1].startsWith(\"/dev\")) || (results[1].startsWith(\"/proc\"))) || (results[1].startsWith(\"/sys\")))) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(argerr(\" the url contains an invalid folder[/dev or /proc or /sys]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5263/buggy-version/plugin.nfsPrimaryStorage.src.main.java.org.zstack.storage.primary.nfs.NfsPrimaryStorageApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "6ab4ec0baf9fb70c3227746fa1868b4d89a97c09", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-14T13:06:00Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.primary.local.APIAddLocalPrimaryStorageMsg.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((url.startsWith(\"/dev\")) || (url.startsWith(\"/proc\"))) || (url.startsWith(\"/sys\"))) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(argerr(\" the url contains an invalid folder[/dev or /proc or /sys]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5263/buggy-version/plugin.localstorage.src.main.java.org.zstack.storage.primary.local.LocalStorageApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "6ab4ec0baf9fb70c3227746fa1868b4d89a97c09", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-14T13:06:00Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.application.client.gin.AppClientFactory.getPlaceManager().getRequestParameter(UrlNavigationTokens.STUDENT_CLASSPAGE_COURSE_ID,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (classGooruOid != null) { getView().setContentVisiblity(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1127/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.classpage.studentclassview.learningmap.StudentClassLearningMapPresenter.java", "BodyUseAPI": [], "Fixed commit": "69d065eee7bccd85d39c84605230d05aaaa7f105", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-08-28T12:48:53Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(classFile.exists())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/160/buggy-version/AnalysisEngine.AndroidAnalysisEngine.src.main.java.com.rit.AndroidAnalysisEngine.engine.WrapperCompiler.java", "BodyUseAPI": [], "Fixed commit": "8b2a5a95074685c4bfc524779027a81fb391a08f", "Url": "https://api.github.com/repos/dan7800/RepackagedAndroid", "Date": "2014-10-28T02:32:42Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((neighbours == 2) && (newField.getAliveState(i, j))) { newField.setAlive(i, j); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8613/buggy-version/src.controller.Game.java", "BodyUseAPI": ["controller.Field.setAlive(int,int)"], "Fixed commit": "9bdf5a5ee42e7cced69fc4a0ddb8bc8db709e40a", "Url": "https://api.github.com/repos/spzme/gameoflife", "Date": "2015-10-28T16:55:59Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grabbedBy) == id) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/407/buggy-version/src.main.java.com.vance.diningphilosophers.Fork.java", "BodyUseAPI": [], "Fixed commit": "ef4e568cf4128d0426c9b7175eb49df21dd3c32c", "Url": "https://api.github.com/repos/srvance/DiningPhilosophers", "Date": "2014-07-07T23:51:51Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jFileChooser.getSelectedFile().getName().endsWith(\".txt\"))) { jFileChooser.setSelectedFile(new java.io.File(((jFileChooser.getSelectedFile()) + \".txt\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7389/buggy-version/src.org.horrgs.texteditor.windows.TESave.java", "BodyUseAPI": ["javax.swing.JFileChooser.getSelectedFile()", "javax.swing.JFileChooser.setSelectedFile(java.io.File)"], "Fixed commit": "10ae7339a73add9068b7d46ad97c880566b725fc", "Url": "https://api.github.com/repos/Horrgs/TextEditor", "Date": "2015-03-07T22:09:07Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<java.util.HashMap<java.lang.String, VariableSymbol>>.get(((symbols.size()) - 1))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (scope2.containsKey(id)) { VariableSymbol res = scope1.get(id); return res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7287/buggy-version/main.GEMTypeCheckVisitor.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, VariableSymbol>.get(java.lang.String)"], "Fixed commit": "4cebf9a23ebd88b550e2bc6eb039818178c397ce", "Url": "https://api.github.com/repos/williamwyx/PLT-GEM", "Date": "2015-05-10T00:40:06Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resourceSearchResultDo.getUrl()) == null) { collectionThumbnail.setUrl(\"images/default-collection-image-160x120.png\"); }else { collectionThumbnail.setUrl(resourceSearchResultDo.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3471/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.play.collection.info.ResourceCollectionView.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.Image.setUrl(resourceSearchResultDo.getUrl())", "org.ednovo.gooru.application.shared.model.search.ResourceSearchResultDo.getUrl()"], "Fixed commit": "302412b31bb8552b8b1ed2a21e6a86ceddeb1fe2", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-08-06T13:23:24Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.igumnov.common.WebServer.connector) == null) { com.igumnov.common.WebServer.server.setConnectors(new com.igumnov.common.Connector[]{ com.igumnov.common.WebServer.https }); }else { com.igumnov.common.WebServer.server.setConnectors(new com.igumnov.common.Connector[]{ com.igumnov.common.WebServer.connector, com.igumnov.common.WebServer.https }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3436/buggy-version/src.main.java.com.igumnov.common.WebServer.java", "BodyUseAPI": [], "Fixed commit": "1ae6fc128ea702e221b427f149c01a147db800f2", "Url": "https://api.github.com/repos/evgenyigumnov/common", "Date": "2015-06-27T06:04:05Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3047/buggy-version/src.main.java.eu.tango.energymodeller.types.usage.RunningAverage.java", "BodyUseAPI": [], "Fixed commit": "9501d813279f6897aa0441afbfcff71fd2ba72bc", "Url": "https://api.github.com/repos/TANGO-Project/energy-modeller", "Date": "2017-08-03T08:58:51Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3047/buggy-version/src.main.java.eu.tango.energymodeller.types.energyuser.VmDiskImage.java", "BodyUseAPI": [], "Fixed commit": "9501d813279f6897aa0441afbfcff71fd2ba72bc", "Url": "https://api.github.com/repos/TANGO-Project/energy-modeller", "Date": "2017-08-03T08:58:51Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.onebusaway.transit_data.model.ArrivalAndDepartureBean.getTripStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((statusBeanForCurrentTrip.isPredicted()) && (!((adBean.hasPredictedArrivalTime()) || (adBean.hasPredictedDepartureTime())))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1154/buggy-version/onebusaway-presentation.src.main.java.org.onebusaway.presentation.impl.realtime.RealtimeServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c5d8c6a8aad5f66e1438784a2c30eb9bdec8e317", "Url": "https://api.github.com/repos/camsys/onebusaway-application-modules", "Date": "2016-09-19T16:08:20Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(line.startsWith(\" #\"))) { pretty.append(line.replace(\" \", \" #\")); }else { pretty.append(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4273/buggy-version/cores.portal-properties-prettier-core.src.main.java.br.com.thiagomoreira.liferay.plugins.portalpropertiesprettier.PortalPropertiesPrettier.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "5b49204a32bd3032d4322e8cacc3cd6d42bd52b8", "Url": "https://api.github.com/repos/tmoreira2020/portal-properties-prettier-app", "Date": "2015-07-24T21:07:20Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inputSource instanceof edu.illinois.library.cantaloupe.resolver.StreamSource) { inputSource = ((edu.illinois.library.cantaloupe.resolver.StreamSource) (inputSource)).newImageInputStream(); }else if (inputSource instanceof java.io.File) { inputSource = javax.imageio.ImageIO.createImageInputStream(inputSource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7365/buggy-version/src.main.java.edu.illinois.library.cantaloupe.processor.ImageIoImageReader.java", "BodyUseAPI": ["javax.imageio.ImageIO.createImageInputStream(java.lang.Object)"], "Fixed commit": "eb034042fc1501082469d68af79c4033eebef20e", "Url": "https://api.github.com/repos/medusa-project/cantaloupe", "Date": "2016-01-31T02:45:10Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.openflexo.toolbox.StringUtils.isNotEmpty(ontProperty.getURI())) && ((getDeclaredObjectProperty(ontProperty.getURI())) == null)) { redefineObjectProperty(ontProperty); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5482/buggy-version/flexodesktop.model.flexofoundation.src.main.java.org.openflexo.foundation.ontology.FlexoOntology.java", "BodyUseAPI": ["org.openflexo.foundation.ontology.FlexoOntology.redefineObjectProperty(com.hp.hpl.jena.ontology.ObjectProperty)"], "Fixed commit": "833eea0486cb9a45d034fdf845eda511b936fa67", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2012-06-26T09:11:01Z"},
{"Line": "=>668", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.openflexo.toolbox.StringUtils.isNotEmpty(ontProperty.getURI())) && ((getDeclaredDataProperty(ontProperty.getURI())) == null)) { redefineDataProperty(ontProperty); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5482/buggy-version/flexodesktop.model.flexofoundation.src.main.java.org.openflexo.foundation.ontology.FlexoOntology.java", "BodyUseAPI": ["org.openflexo.foundation.ontology.FlexoOntology.redefineDataProperty(com.hp.hpl.jena.ontology.DatatypeProperty)"], "Fixed commit": "833eea0486cb9a45d034fdf845eda511b936fa67", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2012-06-26T09:11:01Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (oldCursor != null) { oldCursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8681/buggy-version/ContentProvider.app.src.main.java.ch.allesbunt.android.playground.contentprovider.MainActivity.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "1aadee843ee402810604515b2df9e30640721e20", "Url": "https://api.github.com/repos/Marimu/android-playground", "Date": "2017-05-15T06:46:18Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cursor) != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8681/buggy-version/ContentProvider.app.src.main.java.ch.allesbunt.android.playground.contentprovider.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1aadee843ee402810604515b2df9e30640721e20", "Url": "https://api.github.com/repos/Marimu/android-playground", "Date": "2017-05-15T06:46:18Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8002/buggy-version/src.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "a19fd6d22c5ad9071dec42fd5881bdfc75e336f5", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tile.getOwner()) != \"\") { if (java.util.UUID.fromString(tile.getOwner()).equals(player.getUniqueID())) { kMax++; if ((tile.getField(2)) == 1) { kMax = kMax + 2; if (player.isCreative()) kMax++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8626/buggy-version/src.main.java.gunn.modcurrency.mod.client.gui.GuiExchanger.java", "BodyUseAPI": ["java.util.UUID.equals(player.getUniqueID())", "java.util.UUID.fromString(tile.getOwner())", "gunn.modcurrency.mod.tileentity.TileExchanger.getOwner()", "gunn.modcurrency.mod.tileentity.TileExchanger.getField(int)"], "Fixed commit": "a703e9c45f36d64a81f97afe9e301ca446705c65", "Url": "https://api.github.com/repos/BeardlessBrady/Currency-Mod", "Date": "2017-06-11T07:15:39Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tile.getOwner()) != \"\") { if (java.util.UUID.fromString(tile.getOwner()).equals(player.getUniqueID())) { kMax++; if ((tile.getField(2)) == 1) { kMax = kMax + 2; if (player.isCreative()) kMax++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8626/buggy-version/src.main.java.gunn.modcurrency.mod.client.gui.GuiVending.java", "BodyUseAPI": ["java.util.UUID.equals(player.getUniqueID())", "java.util.UUID.fromString(tile.getOwner())", "gunn.modcurrency.mod.tileentity.TileVending.getField(int)", "gunn.modcurrency.mod.tileentity.TileVending.getOwner()"], "Fixed commit": "a703e9c45f36d64a81f97afe9e301ca446705c65", "Url": "https://api.github.com/repos/BeardlessBrady/Currency-Mod", "Date": "2017-06-11T07:15:39Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ref.getAddDate()) != null) ref.setAddDate(java.util.Calendar.getInstance());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4348/buggy-version/Dreams_Client.src.main.java.org.dreams.client.view.Mapping.java", "BodyUseAPI": ["org.dreams.domain.Reference.setAddDate(java.util.Calendar)"], "Fixed commit": "036965913a7764a4f6d18306f2113818cb8ade62", "Url": "https://api.github.com/repos/ihubacher/DREAMS", "Date": "2013-06-25T17:47:31Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((cache.getUserCache()) == null) || ((cache.getGroupCache()) == null)) { this.cache = new hudson.plugins.active_directory.CacheConfiguration(cache.getSize(), cache.getTtl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2001/buggy-version/src.main.java.hudson.plugins.active_directory.ActiveDirectoryAuthenticationProvider.java", "BodyUseAPI": [], "Fixed commit": "c3fc552a08d29b23e77ff7cfc0d8ec2a24aebff2", "Url": "https://api.github.com/repos/fbelzunc/active-directory-plugin", "Date": "2016-04-14T07:31:41Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((cache.getUserCache()) == null) || ((cache.getGroupCache()) == null)) { this.cache = new hudson.plugins.active_directory.CacheConfiguration(cache.getSize(), cache.getTtl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2001/buggy-version/src.main.java.hudson.plugins.active_directory.ActiveDirectoryUnixAuthenticationProvider.java", "BodyUseAPI": [], "Fixed commit": "c3fc552a08d29b23e77ff7cfc0d8ec2a24aebff2", "Url": "https://api.github.com/repos/fbelzunc/active-directory-plugin", "Date": "2016-04-14T07:31:41Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((cache) != null) && (((cache.getSize()) == 0) || ((cache.getTtl()) == 0))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2001/buggy-version/src.main.java.hudson.plugins.active_directory.ActiveDirectorySecurityRealm.java", "BodyUseAPI": [], "Fixed commit": "c3fc552a08d29b23e77ff7cfc0d8ec2a24aebff2", "Url": "https://api.github.com/repos/fbelzunc/active-directory-plugin", "Date": "2016-04-14T07:31:41Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((headerFile) == null) { result = java.util.Collections.emptySet(); }else { result = java.util.Collections.singleton(headerFile.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6113/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck.java", "BodyUseAPI": [], "Fixed commit": "40d96d2a29243e05a2d43eddf9b7fa6c630b8163", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-01-28T18:47:16Z"},
{"Line": "=>713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mode) == (edu.harvard.iq.dataverse.EditDatafilesPage.FileEditMode.SINGLE)) && ((fileMetadatas.size()) > 0)) { return returnToFileLandingPage(fileMetadatas.get(0).getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7553/buggy-version/src.main.java.edu.harvard.iq.dataverse.EditDatafilesPage.java", "BodyUseAPI": ["fileMetadatas.get(0).getId()", "edu.harvard.iq.dataverse.EditDatafilesPage.returnToFileLandingPage(fileMetadatas.get(0).getId())", "java.util.List<edu.harvard.iq.dataverse.FileMetadata>.get(int)"], "Fixed commit": "1de83cacb54c1b1b7a182beb42ab6358d60ba06f", "Url": "https://api.github.com/repos/IQSS/dataverse", "Date": "2015-09-14T21:50:37Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.agilewiki.jactor2.core.impl.AsyncRequestImpl.getTargetReactor()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(targetReactor instanceof org.agilewiki.jactor2.core.reactors.CommonReactor)) try { new org.agilewiki.jactor2.core.impl.BoundResponseProcessor<RESPONSE_TYPE>(targetReactor, asRequest()).processAsyncResponse(null); } catch (final java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/291/buggy-version/jactor2-core.src.main.java.org.agilewiki.jactor2.core.impl.AsyncRequestImpl.java", "BodyUseAPI": ["org.agilewiki.jactor2.core.impl.BoundResponseProcessor<RESPONSE_TYPE>.processAsyncResponse(<nulltype>)"], "Fixed commit": "3a5fde623eed9fa51537be3248f5b3b0ab893e4a", "Url": "https://api.github.com/repos/laforge49/JActor2", "Date": "2014-02-09T15:05:56Z"},
{"Line": "=>1623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((xp < 0) || (xp > 100)) { throw new com.laytonsmith.core.exceptions.CRE.CRERangeException(\"Experience percentage must be from 0 to 100.\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7272/buggy-version/src.main.java.com.laytonsmith.core.functions.PlayerManagement.java", "BodyUseAPI": [], "Fixed commit": "c98744ab2e7a1e3b413efb954bfefb346089a281", "Url": "https://api.github.com/repos/EntryPointKR/CommandHelper", "Date": "2017-05-25T14:26:32Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mOldName.contains(\"-sysplace-\")) { java.lang.String[] nameArray = mOldName.split(\"-sysplace-\"); mCurrentName = mOldName; mOldName = nameArray[0]; }else { mCurrentName = ((mOldName) + \"-sysplace-\") + (java.lang.Integer.toString(new java.util.Random().nextInt(10000))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2985/buggy-version/gestureframework.src.main.java.hs_mannheim.gestureframework.model.InteractionApplication.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "bd307bd476a4658455748940f0daf6555dd7941f", "Url": "https://api.github.com/repos/informatik-mannheim/gesture-framework", "Date": "2016-05-10T13:53:52Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((assignStmt.getRightOp()) instanceof soot.jimple.ArrayRef) { if (targetType instanceof soot.ArrayType) { targetType = ((soot.ArrayType) (targetType)).getElementType(); }else { targetType = ((soot.jimple.ArrayRef) (assignStmt.getRightOp())).getType(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8872/buggy-version/src.soot.jimple.infoflow.problems.InfoflowProblem.java", "BodyUseAPI": ["((soot.jimple.ArrayRef) (assignStmt.getRightOp())).getType()", "soot.jimple.AssignStmt.getRightOp()"], "Fixed commit": "da1a33f89c794618221199e59551892c967bbbfc", "Url": "https://api.github.com/repos/titze/soot-infoflow", "Date": "2014-03-14T09:26:57Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.jimple.infoflow.util.BaseSelector.selectBase(defStmt.getLeftOp(),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (leftValue instanceof soot.jimple.ArrayRef) newType = buildArrayOrAddDimension(newType); else if ((defStmt.getRightOp()) instanceof soot.jimple.ArrayRef) { if (newType instanceof soot.ArrayType) { newType = ((soot.ArrayType) (newType)).getElementType(); }else { java.lang.System.out.println(\"no Array type!\"); newType = ((soot.jimple.ArrayRef) (defStmt.getRightOp())).getType(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8872/buggy-version/src.soot.jimple.infoflow.problems.BackwardsInfoflowProblem.java", "BodyUseAPI": [], "Fixed commit": "da1a33f89c794618221199e59551892c967bbbfc", "Url": "https://api.github.com/repos/titze/soot-infoflow", "Date": "2014-03-14T09:26:57Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((key.equals(\"text\")) || (key.equals(\"category\"))) { doc.add(new org.apache.lucene.document.TextField(key, value.toString(), Field.Store.YES)); }else { doc.add(new org.apache.lucene.document.StringField(key, value.toString(), Field.Store.YES)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6157/buggy-version/ProjectItinerary.src.itinerary.main.Search.java", "BodyUseAPI": ["org.apache.lucene.document.Document.add(org.apache.lucene.document.TextField)", "org.apache.lucene.document.Document.add(org.apache.lucene.document.StringField)"], "Fixed commit": "175e8f767aad3334b4695f6d6dbc8b7d6cf26f8c", "Url": "https://api.github.com/repos/cs2103jan2015-w14-2j/main", "Date": "2015-03-13T06:24:06Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((swipeRefreshLayout) != null) swipeRefreshLayout.setRefreshing(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1142/buggy-version/android.app.src.main.java.org.fossasia.openevent.fragments.TracksFragment.java", "BodyUseAPI": [], "Fixed commit": "653e1e76cd8c63238e7e2b9df1ca5df3e84594cd", "Url": "https://api.github.com/repos/amitiwary999/open-event-android", "Date": "2016-10-16T00:20:06Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.isRiding()) player.ridingEntity = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1493/buggy-version/src.main.java.cn.academy.vanilla.teleporter.skill.Flashing.java", "BodyUseAPI": [], "Fixed commit": "3fe75008d766958f1103fd941bc6c9cd9bcdf913", "Url": "https://api.github.com/repos/LambdaInnovation/AcademyCraft", "Date": "2016-12-17T06:45:37Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (price.equals(\"Ins\")) { price = \"Free\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7535/buggy-version/src.main.java.com.appdetex.sampleparserjavaproject.Main.java", "BodyUseAPI": [], "Fixed commit": "15c1f73a19fcbf7105676657256bf1b04070faba", "Url": "https://api.github.com/repos/weezerzero/SampleParserJavaProject", "Date": "2015-12-22T20:54:55Z"},
{"Line": "=>1018", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.plus.TargetPointsHelper.getPointToStart()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (sc != null) { startpoint.lon = sc.getLongitude(); startpoint.lat = sc.getLatitude(); trkSegment.points.add(startpoint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5132/buggy-version/OsmAnd.src.net.osmand.plus.routing.RouteProvider.java", "BodyUseAPI": ["net.osmand.data.LatLon.getLongitude()", "net.osmand.data.LatLon.getLatitude()"], "Fixed commit": "ff5bfe1cd2f0236f09eda4a4b8bbd2ae569b3430", "Url": "https://api.github.com/repos/Bars107/Osmand", "Date": "2014-07-08T08:52:31Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getTileEntity(net.minecraft.util.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (save != null) { w.removeTileEntity(coord); save.validate(); w.setTileEntity(coord, save); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2697/buggy-version/src.main.java.cyano.poweradvantage.items.RotationTool.java", "BodyUseAPI": ["net.minecraft.tileentity.TileEntity.validate()", "net.minecraft.world.World.setTileEntity(net.minecraft.util.BlockPos,net.minecraft.tileentity.TileEntity)"], "Fixed commit": "7ec0cf38866ee1e5956234a54d588d50c27816e4", "Url": "https://api.github.com/repos/cyanobacterium/PowerAdvantageAPI", "Date": "2015-08-13T16:10:31Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(node.getParameters().isEmpty())) { sb.append(\"(\"); commaSeparatedExpressionList(node.getParameters()); sb.append(\")\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7950/buggy-version/de.prob2.kernel.src.main.java.de.prob.model.classicalb.PrettyPrinter.java", "BodyUseAPI": ["de.prob.model.classicalb.PrettyPrinter.commaSeparatedExpressionList(node.getParameters())", "de.prob.model.classicalb.AOperationCallSubstitution.getParameters()"], "Fixed commit": "c85adf7e62091a9bfc4bc92672dd57ed39078781", "Url": "https://api.github.com/repos/bendisposto/prob2", "Date": "2016-08-16T14:48:41Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == jobType) { jobType = \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/622/buggy-version/eagle-jpm.eagle-jpm-service.src.main.java.org.apache.eagle.service.jpm.MRJobCountHelper.java", "BodyUseAPI": [], "Fixed commit": "b5c3b0bb7d2683b056b563dd458317d4d2a1dabb", "Url": "https://api.github.com/repos/qingwen220/eagle", "Date": "2016-08-31T04:02:31Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContext) != null) notifyDataSetChanged();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5122/buggy-version/app.src.main.java.com.example.aleksa.androgen.adapter.SlidingAdapter.java", "BodyUseAPI": [], "Fixed commit": "6749a33b97a92ce2dd4ecea9dfab9edf1cee4d9f", "Url": "https://api.github.com/repos/TheDeeKay/Androgen", "Date": "2016-04-25T13:28:24Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(resultGraph.isEmpty())) { graph.addAll(resultGraph); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3073/buggy-version/src.main.java.eu.fusepool.ecs.utils.PatentTextExtractor.java", "BodyUseAPI": ["org.apache.clerezza.rdf.core.MGraph.addAll(org.apache.clerezza.rdf.core.MGraph)"], "Fixed commit": "158f761cdcfe9338db4697bb6fa05b32db862c80", "Url": "https://api.github.com/repos/fusepool/ecsutils", "Date": "2013-11-28T13:43:10Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ex.toString().contains(\"foreign key constraint\")) { javax.swing.JOptionPane.showMessageDialog(thisPanel, \"Student of Traject bestaat niet\", \"Waarschuwing\", javax.swing.JOptionPane.WARNING_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1637/buggy-version/ExampleJavaDBApp.src.javadbkoppelingws2.SignupPanel.java", "BodyUseAPI": [], "Fixed commit": "a72b6e18bf7f97ce921991ff75a27dd946b92ee4", "Url": "https://api.github.com/repos/JorisWillig/DBJavaProject", "Date": "2016-06-16T11:07:58Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ex.toString().contains(\"Duplicate entry\")) { javax.swing.JOptionPane.showMessageDialog(thisPanel, \"Deze student is al ingeschreven voor dit traject\", \"Waarschuwing\", javax.swing.JOptionPane.WARNING_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1637/buggy-version/ExampleJavaDBApp.src.javadbkoppelingws2.SignupPanel.java", "BodyUseAPI": [], "Fixed commit": "a72b6e18bf7f97ce921991ff75a27dd946b92ee4", "Url": "https://api.github.com/repos/JorisWillig/DBJavaProject", "Date": "2016-06-16T11:07:58Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(transformParameters.isEmpty())) { java.lang.String[] params = transformParameters.split(\",\"); for (int i = 0; i < (params.length); i += 2) { paramsMap.put(params[i], params[(i + 1)]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8790/buggy-version/src.main.java.com.marklogic.spring.batch.config.RowToDoc.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "22c32cdf5168e42cea75c99279bfcadc96ad6616", "Url": "https://api.github.com/repos/sastafford/rowToDoc", "Date": "2016-11-02T14:30:27Z"},
{"Line": "=>749", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((imagedEmbryo.getNucleusFile().getAllTimes().size()) > 0) { panel.changeTime(imagedEmbryo.getNucleusFile().getAllTimes().size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4245/buggy-version/src.org.rhwlab.ace3d.Ace3D_Frame.java", "BodyUseAPI": ["imagedEmbryo.getNucleusFile().getAllTimes()", "org.rhwlab.ace3d.SynchronizedMultipleSlicePanel.changeTime(imagedEmbryo.getNucleusFile().getAllTimes().size())", "org.rhwlab.dispim.ImagedEmbryo.getNucleusFile()", "imagedEmbryo.getNucleusFile().getAllTimes().size()"], "Fixed commit": "24fa3ade79eccc5aabec90e704838aeb3bcc3b6a", "Url": "https://api.github.com/repos/gevirl/Ace-3D", "Date": "2017-06-08T19:25:53Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.getStorageDestination()) != null) { storageSeperatedAndesRemovableMetadataDTOs.put(message.getStorageDestination(), dto); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5804/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.MessagingEngine.java", "BodyUseAPI": ["org.wso2.andes.kernel.AndesRemovableMetadata.getStorageDestination()", "java.util.Map<java.lang.String, org.wso2.andes.kernel.MessagingEngine.AndesRemovableMetadataDTO>.put(message.getStorageDestination(),org.wso2.andes.kernel.MessagingEngine.AndesRemovableMetadataDTO)"], "Fixed commit": "993e6df00a6dca594454b09923f0623ac3c6ffd5", "Url": "https://api.github.com/repos/a5anka/andes", "Date": "2015-05-29T09:21:33Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (answerArr[1].equals(\"C\")) { if (!(answerArr[2].equals(expectedArr[2]))) { throw new controller.ServerMainController.WrongAnswerException((((\"Expected answer: \" + expectedAnswer) + \" but was: \") + answer)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7482/buggy-version/CDIO2.server.controller.ServerMainController.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "9ee006ce3ab8ec5dc6e9ae806e12f6df5a9c4e87", "Url": "https://api.github.com/repos/ArvidLangsoe/CDIO2", "Date": "2017-03-13T14:59:56Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != params) { mTrackShape.updateShapeFromPlan(getCoordinates(mLastLocation.getLongitude(), mLastLocation.getLatitude())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4494/buggy-version/src.com.ds.avare.place.Plan.java", "BodyUseAPI": [], "Fixed commit": "cb2aff4011bd043e4bf578a56cb99d3385071a63", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2013-05-17T17:02:00Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(mContext.getString(R.string.Root),<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == val) { android.content.SharedPreferences.Editor editor = mPref.edit(); editor.putString(mContext.getString(R.string.Root), \"0\"); editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4494/buggy-version/src.com.ds.avare.storage.Preferences.java", "BodyUseAPI": [], "Fixed commit": "cb2aff4011bd043e4bf578a56cb99d3385071a63", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2013-05-17T17:02:00Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(arrlist.contains(cId))) { arrlist.add(cId); encounter.addObs(obsDiagnosis); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3842/buggy-version/omod.src.main.java.org.openmrs.module.patientdashboard.web.controller.OPDEntryController.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(java.lang.Integer)"], "Fixed commit": "cd9869005edad89043fdcd76b4b7739c16e8ea36", "Url": "https://api.github.com/repos/hispindia/his-patient-dashboard", "Date": "2016-11-23T08:27:06Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.color.ICC_Profile.getInstance(java.io.ByteArrayInputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((profile.getColorSpaceType()) == (java.awt.color.ColorSpace.CS_GRAY)) || ((profile.getColorSpaceType()) == (java.awt.color.ColorSpace.TYPE_GRAY))) { return com.sun.pdfview.colorspace.PDFColorSpace.graySpace; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1996/buggy-version/src.com.sun.pdfview.colorspace.PDFColorSpace.java", "BodyUseAPI": [], "Fixed commit": "1edaa3f049cb9518fcc68edfefa45a58c8a67e77", "Url": "https://api.github.com/repos/demotivator/PDFrenderer", "Date": "2017-03-14T17:41:00Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reuse.getSortKey()) == null) { try { reuse.setSortKey(sortKeyClass.newInstance()); } catch (java.lang.InstantiationException | java.lang.IllegalAccessException e) { throw new java.io.IOException(((\"Unable to instantiate '\" + (sortKeyClass)) + \"'\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3751/buggy-version/mapreduce.src.main.java.com.jaromin.mapreduce.io.CompositeSortKeySerialization.java", "BodyUseAPI": ["com.jaromin.mapreduce.io.CompositeSortKey<G, S>.setSortKey(S)"], "Fixed commit": "327ec532900e49a5706c572aa7efccfac79765e5", "Url": "https://api.github.com/repos/pjaromin/hadoop", "Date": "2014-04-13T20:01:29Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reuse.getGroupKey()) == null) { try { reuse.setGroupKey(groupKeyClass.newInstance()); } catch (java.lang.InstantiationException | java.lang.IllegalAccessException e) { throw new java.io.IOException(((\"Unable to instantiate '\" + (groupKeyClass)) + \"'\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3751/buggy-version/mapreduce.src.main.java.com.jaromin.mapreduce.io.CompositeSortKeySerialization.java", "BodyUseAPI": ["com.jaromin.mapreduce.io.CompositeSortKey<G, S>.setGroupKey(G)"], "Fixed commit": "327ec532900e49a5706c572aa7efccfac79765e5", "Url": "https://api.github.com/repos/pjaromin/hadoop", "Date": "2014-04-13T20:01:29Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5115/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "9ca61ef784ac52ffbf017a5a9603d3cd1d20c43f", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > (cdata.length())) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5115/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "9ca61ef784ac52ffbf017a5a9603d3cd1d20c43f", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5115/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "9ca61ef784ac52ffbf017a5a9603d3cd1d20c43f", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > length) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5115/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "9ca61ef784ac52ffbf017a5a9603d3cd1d20c43f", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<java.util.HashMap<java.lang.String, java.lang.String>>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (row != null) { userDataOutput.consume(row, exitFlag); lines++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6477/buggy-version/src.main.java.org.finra.datagenerator.distributor.multithreaded.DefaultDistributor.java", "BodyUseAPI": ["org.finra.datagenerator.consumer.DataConsumer.consume(java.util.HashMap<java.lang.String, java.lang.String>,java.util.concurrent.atomic.AtomicBoolean)"], "Fixed commit": "f3b0ed5d642afdff880755ca9b374a38a2ce2d8c", "Url": "https://api.github.com/repos/bryantrobbins/DataGenerator", "Date": "2014-05-16T19:09:14Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAllNull) { err.reject(\"workspace_selection.required\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1696/buggy-version/Quadriga.src.main.java.edu.asu.spring.quadriga.validator.WorkspaceFormValidator.java", "BodyUseAPI": [], "Fixed commit": "14c506b72950d02b1dfae983b94231506ace343b", "Url": "https://api.github.com/repos/diging/quadriga", "Date": "2016-02-02T03:51:40Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.mindengine.galen.api.PageValidation.findPageElement(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pageElement.isVisible()) && ((pageElement.getArea()) != null)) { net.mindengine.galen.api.PageDump.Element element = new net.mindengine.galen.api.PageDump.Element(objectName, pageElement.getArea().toIntArray(), pageElement.getText()); if (((pageElement.isPresent()) && (pageElement.isVisible())) && (net.mindengine.galen.api.Galen.isWithinArea(pageElement, maxWidth, maxHeight))) { element.setHasImage(true); } pageDump.addElement(element); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8820/buggy-version/src.main.java.net.mindengine.galen.api.Galen.java", "BodyUseAPI": ["net.mindengine.galen.page.PageElement.isVisible()", "net.mindengine.galen.api.Galen.isWithinArea(net.mindengine.galen.page.PageElement,java.lang.Integer,java.lang.Integer)", "net.mindengine.galen.page.PageElement.getText()", "pageElement.getArea().toIntArray()", "net.mindengine.galen.page.PageElement.isPresent()", "net.mindengine.galen.page.PageElement.getArea()"], "Fixed commit": "f20d4c07ed91edfa3d726f8a0b6aebcce74e3f9d", "Url": "https://api.github.com/repos/galenframework/galen", "Date": "2014-10-08T10:08:57Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((c != '/') || ((builder.length()) == 0)) { builder.append(c); }else if ((builder.charAt(((builder.length()) - 1))) != '/') { builder.append(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4300/buggy-version/oauth2.webapp.src.main.java.leap.oauth2.webapp.DefaultOAuth2Config.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.charAt(int)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "17a93fd001d5abe31a2ac4261c994e1dd5d63d05", "Url": "https://api.github.com/repos/leapframework/framework", "Date": "2017-08-04T08:46:36Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((riskyspace.view.Clickable) (topMenu)).mousePressed(point)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4337/buggy-version/src.riskyspace.view.swingImpl.RenderArea.java", "BodyUseAPI": [], "Fixed commit": "69a3de73eab1305a2a3d4314877177f870ea3564", "Url": "https://api.github.com/repos/RorasGit/RiskySpace", "Date": "2012-04-17T14:02:36Z"},
{"Line": "=>1449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.isOp())) { player.setGameMode(GameMode.SURVIVAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3036/buggy-version/src.com.wasteofplastic.askyblock.ASkyBlock.java", "BodyUseAPI": ["org.bukkit.entity.Player.setGameMode(GameMode.SURVIVAL)"], "Fixed commit": "01d02888addd5c5d17c0b68f6ed1fe478facbcf7", "Url": "https://api.github.com/repos/tastybento/askyblock", "Date": "2015-10-09T00:28:46Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lagrangle) { net.epsilony.mf.process.assembler.LagrangleAssembler lagAssembler = ((net.epsilony.mf.process.assembler.LagrangleAssembler) (dirichletAssembler)); integrateResult.setLagrangleDimension(lagAssembler.getLagrangeDimension()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3016/buggy-version/src.main.java.net.epsilony.mf.process.integrate.SimpMFIntegrator.java", "BodyUseAPI": [], "Fixed commit": "f8c6acb295738e5aeed729890a997b33db25fc34", "Url": "https://api.github.com/repos/epsilony/mf", "Date": "2013-12-09T08:51:42Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4788/buggy-version/src.HNode.java", "BodyUseAPI": [], "Fixed commit": "35a51900e23312585aa785a4f6837a5b15735dbe", "Url": "https://api.github.com/repos/jnels124/HuffmanCode", "Date": "2012-11-29T23:43:02Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getValue().getSymbol()) != null) { return ((this.getValue().getFrequency()) == (that.getValue().getFrequency())) && (this.getValue().getSymbol().equals(that.getValue().getSymbol())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4788/buggy-version/src.HNode.java", "BodyUseAPI": [], "Fixed commit": "35a51900e23312585aa785a4f6837a5b15735dbe", "Url": "https://api.github.com/repos/jnels124/HuffmanCode", "Date": "2012-11-29T23:43:02Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4788/buggy-version/src.HNode.java", "BodyUseAPI": [], "Fixed commit": "35a51900e23312585aa785a4f6837a5b15735dbe", "Url": "https://api.github.com/repos/jnels124/HuffmanCode", "Date": "2012-11-29T23:43:02Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((P11Constants.CKM_RSA_X_509) == mechanism) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1970/buggy-version/commons.security-api.src.main.java.org.xipki.commons.security.api.p11.P11Identity.java", "BodyUseAPI": [], "Fixed commit": "58546477e8f8ca534d0878a729272f6d7a7de32c", "Url": "https://api.github.com/repos/xipki/xipki", "Date": "2016-04-03T20:14:26Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["env.getCallBackEnv().executeRascalFigureCallBack(org.eclipse.imp.pdb.facts.IValue,org.rascalmpl.library.vis.figure.interaction.ComputeFigure,org.rascalmpl.library.vis.figure.interaction.ComputeFigure)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (figureCons == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2951/buggy-version/src.org.rascalmpl.library.vis.figure.interaction.ComputeFigure.java", "BodyUseAPI": [], "Fixed commit": "9c1bdc3a3f1c8c3c0715ccdd1d4ed98f8e568ac0", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2013-11-22T10:31:18Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Location.getRobots()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (allRobotsHere == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3210/buggy-version/CSS.java", "BodyUseAPI": [], "Fixed commit": "aaa55a478b698a8883359d3356ad554afa9c7b3f", "Url": "https://api.github.com/repos/sunwooha/MinotaursMaze", "Date": "2017-11-29T20:20:29Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jowidgets.api.widgets.ITextLabel.getPreferredSize()", "org.jowidgets.api.widgets.ITextLabel.getPreferredSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((lastLabelSize.getHeight()) < (newLabelSize.getHeight())) || ((lastLabelSize.getWidth()) < (newLabelSize.getWidth()))) { dialog.pack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9065/buggy-version/modules.core.org.jowidgets.cap.ui.src.main.java.org.jowidgets.cap.ui.tools.plugin.BeanMessagePopupPlugin.java", "BodyUseAPI": [], "Fixed commit": "3ee94f1eb670953ec35ca896149b72d3d701cc68", "Url": "https://api.github.com/repos/jo-source/jo-client-platform", "Date": "2016-09-20T08:31:08Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (difficulty == null) { return models.Scores.keepBestScoresForEachPlayer(filterBy(mode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3810/buggy-version/app.models.Game.java", "BodyUseAPI": [], "Fixed commit": "aa70b1e4590088c75e8887dfe941f7d5eaed7fca", "Url": "https://api.github.com/repos/jsmadja/shmuphiscores", "Date": "2013-12-05T19:47:17Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(currentWriteBuffer.isEmpty())) { enqueueCurrentWriteBuffer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9206/buggy-version/src.main.java.de.topobyte.osm4j.extra.threading.ObjectBuffer.java", "BodyUseAPI": [], "Fixed commit": "18c5ab5619d6fadbcc02892d0295e16dbd1bea42", "Url": "https://api.github.com/repos/topobyte/osm4j-extra", "Date": "2015-12-02T13:17:10Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uncraftIn.getStackInSlot(0).getCount()) == 0) uncraftIn.setInventorySlotContents(0, ItemStack.EMPTY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3043/buggy-version/src.main.java.org.jglrxavpok.mods.decraft.inventory.ContainerUncraftingTable.java", "BodyUseAPI": ["net.minecraft.inventory.InventoryCrafting.setInventorySlotContents(int,ItemStack.EMPTY)"], "Fixed commit": "f3e631e93d6901ed7fdccf1a9e2868f21404f5ec", "Url": "https://api.github.com/repos/crazysnailboy/UncraftingTable", "Date": "2017-03-08T12:47:20Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (block != null) for (java.lang.Object o : block.statements()) this._statements.add(new edu.rice.cs.caper.bayou.application.dom_driver.DOMStatement(((org.eclipse.jdt.core.dom.Statement) (o))).handleAML());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2568/buggy-version/src.main.java.edu.rice.cs.caper.bayou.application.dom_driver.DOMBlock.java", "BodyUseAPI": [], "Fixed commit": "019ab768e9a7fefbe8ccbae0fc2a490e647388d3", "Url": "https://api.github.com/repos/capergroup/bayou", "Date": "2017-10-17T22:59:45Z"},
{"Line": "=>1504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((singlepage.INSTANCE.selectedTour()) != null) { lv.collapseGroup(((singlepage.INSTANCE.selectedTour().trkid()) - 1)); lv.smoothScrollToPosition(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1005/buggy-version/app.src.main.java.com.uni_wuppertal.iad.vierteltour.ui.map.MapsActivity.java", "BodyUseAPI": ["android.widget.ExpandableListView.collapseGroup(((singlepage.INSTANCE.selectedTour().trkid()) - 1))", "singlepage.INSTANCE.selectedTour().trkid()", "singlepage.INSTANCE.selectedTour()"], "Fixed commit": "df6aa4b600ab6a2a862618d7bef4cceeb62557ec", "Url": "https://api.github.com/repos/branb/vierteltour", "Date": "2017-06-16T21:29:04Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world.getBlockId(x, y, z)) != (blockID)) return li;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3137/buggy-version/ItemBlocks.BlockRedTile.java", "BodyUseAPI": [], "Fixed commit": "269b15f011eadd6fdc30bd811eef30c08aa35d4b", "Url": "https://api.github.com/repos/ReikaKalseki/ExpandedRedstone", "Date": "2013-11-11T16:56:27Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r == null) return li;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3137/buggy-version/ItemBlocks.BlockRedTile.java", "BodyUseAPI": [], "Fixed commit": "269b15f011eadd6fdc30bd811eef30c08aa35d4b", "Url": "https://api.github.com/repos/ReikaKalseki/ExpandedRedstone", "Date": "2013-11-11T16:56:27Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cells.size()) == 1) { utility.Pair<java.lang.Integer, java.lang.Integer> crds = cells.get(0); if (gameState.getBoard().is(crds.first, crds.second, CardType.ZOMBIE)) return 1; return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8634/buggy-version/src.main.java.game.model.cards.zombies.Change.java", "BodyUseAPI": ["java.util.List<utility.Pair<java.lang.Integer, java.lang.Integer>>.get(int)"], "Fixed commit": "4a0fb35f8531e4434c4347c00b7c23d75116f6e2", "Url": "https://api.github.com/repos/piobpl/Zombies", "Date": "2013-06-01T14:06:18Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fjg.android.zxing.utils.PreferenceUtils.getBoolean(PreferenceUtils.FLOATVIEW)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isOn) { if ((mTouchPanelView) != null) mTouchPanelView.changeXYParams(); toggleFloatView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7852/buggy-version/app.src.main.java.com.fjg.android.zxing.assistive.SpriteService.java", "BodyUseAPI": [], "Fixed commit": "1b50952f330de6ee3bddb5de32d8357a7df07d61", "Url": "https://api.github.com/repos/damonfu/Qrcode", "Date": "2016-10-11T03:25:48Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"\".equals(((java.lang.String) (obj.get(\"smiles\"))))) { java.lang.System.err.println((\"No smiles for \" + ((java.lang.String) (obj.get(\"name\"))))); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7346/buggy-version/src.io.loaders.json.PolymersJsonLoader.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "27be8d61e450a2392154723147669db528fcdc27", "Url": "https://api.github.com/repos/yoann-dufresne/Smiles2Monomers", "Date": "2015-12-10T12:50:28Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((type1 == 'Z') || (type1 == 'H')) { while ((r.getChar()) != 0); }else { r.position(((r.position()) + (typeLength(type1)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8569/buggy-version/src.main.java.htsjdk.samtools.BAMRecord.java", "BodyUseAPI": [], "Fixed commit": "3f9db8199db88acf00c8ea3bc5792be54e6309c8", "Url": "https://api.github.com/repos/lh3/htsjdk", "Date": "2017-10-03T20:12:16Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDetached())) { setEmptyViewText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/65/buggy-version/src.no.digipost.android.gui.fragments.DocumentFragment.java", "BodyUseAPI": [], "Fixed commit": "f16516242a05cd1c5d685a70055abe145371a3f6", "Url": "https://api.github.com/repos/digipost/android", "Date": "2013-07-29T06:25:59Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.concat(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((zk.exists(fullPath, false)) == null) { logger.error(\"the full path node is none : {}\", fullPath); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4208/buggy-version/platon-biz.src.main.java.com.iquanwai.platon.biz.util.zk.ZKConfigUtils.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.String)"], "Fixed commit": "4844ad2fa42923649e879dd9f9a984ed5df440c6", "Url": "https://api.github.com/repos/sfwind/platon", "Date": "2017-04-26T09:06:07Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["WayofTime.bloodmagic.util.Utils.insertStackIntoTile(net.minecraft.item.ItemStack,net.minecraft.tileentity.TileEntity,EnumFacing.DOWN)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (newStack == null) { entityItem.setDead(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9216/buggy-version/src.main.java.WayofTime.bloodmagic.ritual.RitualZephyr.java", "BodyUseAPI": [], "Fixed commit": "89bd91197d55c8989fba62d3db4902b966c513b4", "Url": "https://api.github.com/repos/WayofTime/BloodMagic", "Date": "2016-11-30T03:06:43Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((typeVariable != null) && ((typeVariable.length) == 1)) { registerTypeVariableIfNotPresent(typeVariable[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7210/buggy-version/src.org.mockito.internal.util.reflection.GenericMetadataSupport.java", "BodyUseAPI": ["org.mockito.internal.util.reflection.GenericMetadataSupport.registerTypeVariableIfNotPresent(java.lang.reflect.TypeVariable)"], "Fixed commit": "6668b19a3adfdce6579fd3c230c7015893c65ea7", "Url": "https://api.github.com/repos/ChristianSchwarz/mockito-lambda", "Date": "2014-12-16T08:44:48Z"},
{"Line": "=>881", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (log.isTraceEnabled()) { log.trace((\"updateOrAddDefaultIndexPattern source \" + source)); log.trace((\"updateOrAddDefaultIndexPattern source \" + newSource)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8247/buggy-version/src.main.java.com.floragunn.searchguard.configuration.PrivilegesInterceptorImpl.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.trace(java.lang.String)", "org.apache.logging.log4j.Logger.trace(java.lang.String)"], "Fixed commit": "cce692e092b479df81f304de09aada86b92237b7", "Url": "https://api.github.com/repos/floragunncom/search-guard-module-kibana-multitenancy", "Date": "2017-10-05T12:43:21Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.addhen.smssync.services.SmsSyncServices.getPhoneWakeLock(this.getApplicationContext()).isHeld()) && ((org.addhen.smssync.services.SmsSyncServices.getPhoneWakeLock(this.getApplicationContext())) != null)) { org.addhen.smssync.services.SmsSyncServices.getPhoneWakeLock(this.getApplicationContext()).release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5027/buggy-version/src.org.addhen.smssync.services.SmsSyncServices.java", "BodyUseAPI": [], "Fixed commit": "2c12c5c691f6200a2daf8165b72099f6ff7b3ecc", "Url": "https://api.github.com/repos/ushahidi/SMSSync", "Date": "2011-08-26T07:28:39Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.addhen.smssync.services.SmsSyncServices.getPhoneWifiLock(this.getApplicationContext()).isHeld()) && ((org.addhen.smssync.services.SmsSyncServices.getPhoneWifiLock(this.getApplicationContext())) != null)) { org.addhen.smssync.services.SmsSyncServices.getPhoneWifiLock(this.getApplicationContext()).release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5027/buggy-version/src.org.addhen.smssync.services.SmsSyncServices.java", "BodyUseAPI": [], "Fixed commit": "2c12c5c691f6200a2daf8165b72099f6ff7b3ecc", "Url": "https://api.github.com/repos/ushahidi/SMSSync", "Date": "2011-08-26T07:28:39Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((plugin.getFeDatabase()) instanceof org.melonbrew.fe.database.databases.MySQLDB) { org.melonbrew.fe.database.databases.SQLDB database = ((org.melonbrew.fe.database.databases.SQLDB) (plugin.getFeDatabase())); try { database.query(\"CREATE TABLE temp_fe_accounts LIKE iconomy;\"); database.query(\"INSERT temp_fe_accounts SELECT * FROM iconomy;\"); database.query(\"ALTER TABLE temp_fe_accounts DROP COLUMN id;\"); database.query(\"ALTER TABLE temp_fe_accounts DROP COLUMN status;\"); database.query(\"ALTER TABLE temp_fe_accounts CHANGE username name varchar(64) NOT NULL;\"); database.query(\"ALTER TABLE temp_fe_accounts CHANGE balance money double NOT NULL;\"); database.query((\"DROP TABLE IF EXISTS \" + (database.getAccountsName()))); database.query((\"RENAME TABLE temp_fe_accounts TO \" + (database.getAccountsName()))); } catch (java.lang.Exception e) { return false; } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7938/buggy-version/src.org.melonbrew.fe.database.converter.converters.Converter_iConomy.java", "BodyUseAPI": ["org.melonbrew.fe.Fe.getFeDatabase()"], "Fixed commit": "3351841f78733eacda4a15903b1264183ee45bc9", "Url": "https://api.github.com/repos/niccholaspage/Fe", "Date": "2013-09-04T00:31:36Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.parseInt(this.compareString())) == (java.lang.Integer.parseInt(exam.compareString()))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5990/buggy-version/src.main.java.upandgo.shared.entities.Exam.java", "BodyUseAPI": [], "Fixed commit": "e2f6baaaffeff762d748b21968c76a428b364965", "Url": "https://api.github.com/repos/TechnionYP5777/UpAndGo", "Date": "2017-06-04T19:37:49Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exama.compare(examb)) > 0) { upandgo.shared.entities.Exam temp = exama; exama = examb; examb = temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5990/buggy-version/src.main.java.upandgo.shared.entities.Exam.java", "BodyUseAPI": [], "Fixed commit": "e2f6baaaffeff762d748b21968c76a428b364965", "Url": "https://api.github.com/repos/TechnionYP5777/UpAndGo", "Date": "2017-06-04T19:37:49Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (nmax < nmin) { throw new java.lang.IllegalArgumentException(\"Invalid and inconsistent discretisation bounds: dmax is smaller than dmin (in RBTreeArcDiscretiser).\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1475/buggy-version/src.main.java.se.cbb.jprime.topology.RBTreeArcDiscretiser.java", "BodyUseAPI": [], "Fixed commit": "7493527a0f62d0d1147bff50bdd0d396a45cb33a", "Url": "https://api.github.com/repos/arvestad/jprime", "Date": "2016-08-04T13:22:22Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.hawkular.btm.client.collector.DefaultBusinessTransactionCollector.log.isLoggable(Level.FINEST)) { org.hawkular.btm.client.collector.DefaultBusinessTransactionCollector.log.finest((\"Record business transaction: \" + btxn)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/140/buggy-version/client.btxn-collector.src.main.java.org.hawkular.btm.client.collector.DefaultBusinessTransactionCollector.java", "BodyUseAPI": ["org.hawkular.btm.api.client.Logger.finest((\"Record business transaction: \" + btxn))"], "Fixed commit": "33b5ce53d6bd4ff0f0dd6d6074d2b553361834d7", "Url": "https://api.github.com/repos/objectiser/hawkular-apm", "Date": "2015-06-25T10:49:34Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keys.getKeyPressed(java.awt.event.KeyEvent.VK_P)) { hellboss.World.DEBUG = !(hellboss.World.DEBUG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9050/buggy-version/HellBoss.src.hellboss.World.java", "BodyUseAPI": [], "Fixed commit": "d395ccbe25347545f5f6e802cea956cac7d66686", "Url": "https://api.github.com/repos/jvorob/game-off-2013", "Date": "2015-11-30T17:19:44Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hellboss.Sound.failedtoload)) { clip.setFramePosition(0); clip.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9050/buggy-version/HellBoss.src.hellboss.Sound.java", "BodyUseAPI": [], "Fixed commit": "d395ccbe25347545f5f6e802cea956cac7d66686", "Url": "https://api.github.com/repos/jvorob/game-off-2013", "Date": "2015-11-30T17:19:44Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchDoctorByNameFragment) != null) searchDoctorByNameFragment.setOnClickOfSearchBar(searchView.getText().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/201/buggy-version/app.src.main.java.com.rescribe.doctor.ui.activities.DoctorConnectActivity.java", "BodyUseAPI": [], "Fixed commit": "f668e21438b91dacd5b48b2fec222d2d9786bd88", "Url": "https://api.github.com/repos/sandeepbahalkar123/rescribeDoctor_repo", "Date": "2017-09-11T07:29:43Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["frc3824.rohawkticsscouting2017.Firebase.Database.getInstance().getSuperMatchData(tmd.match_number)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (smd == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6455/buggy-version/app.src.main.java.frc3824.rohawkticsscouting2017.Fragments.TeamView.VisualsFragment.java", "BodyUseAPI": [], "Fixed commit": "e87879756b1c0c86d39951e480e19a89f0ca44d7", "Url": "https://api.github.com/repos/HVA-FRC-3824/RoHAWKticsScouting2017", "Date": "2017-02-20T15:26:34Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stopLocation.getTransitSourceType()) == (getTransitSourceId())) { java.lang.String urlString = getPredictionsUrl(stopLocation.getStopTag()); boston.Bus.Map.util.DownloadHelper downloadHelper = new boston.Bus.Map.util.DownloadHelper(urlString); downloadHelpers.add(downloadHelper); downloadHelper.connect(); pairs.add(new boston.Bus.Map.transit.SIRITransitSource.StopLocationWithDownloadHelper(stopLocation, downloadHelper)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1653/buggy-version/src.boston.Bus.Map.transit.SIRITransitSource.java", "BodyUseAPI": ["java.util.List<boston.Bus.Map.transit.SIRITransitSource.StopLocationWithDownloadHelper>.add(boston.Bus.Map.transit.SIRITransitSource.StopLocationWithDownloadHelper)", "boston.Bus.Map.transit.SIRITransitSource.getPredictionsUrl(stopLocation.getStopTag())", "boston.Bus.Map.data.StopLocation.getStopTag()"], "Fixed commit": "e25ba703cb7330713219299b0b09e2cc81a7299d", "Url": "https://api.github.com/repos/bostonbusmap/bostonbusmap", "Date": "2013-09-04T02:37:58Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.way.captain.BuildConfig.FIR_ENABLED) com.way.firupgrade.FIRUtils.checkForUpdate(this, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7618/buggy-version/app.src.main.java.com.way.captain.activity.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "a2a0d757aa9d93e143a81e647aadbfdf3d91d499", "Url": "https://api.github.com/repos/way1989/Captain", "Date": "2016-03-27T06:16:56Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (qualifierName != null) colName = (qualifierName + \".\") + colName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5616/buggy-version/splice_machine.src.main.java.com.splicemachine.derby.impl.load.HdfsImport.java", "BodyUseAPI": [], "Fixed commit": "6cc67e4770b01f31dd528f9cec09a8b6dffb579c", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2017-07-21T13:40:22Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(housePlots.isEmpty())) for (mapClasses.Circle c : housePlots) { if (c.contains(mapClasses.GameMap.deSerializedHouse[0], mapClasses.GameMap.deSerializedHouse[1])) { addHouse(new mapClasses.Circle(mapClasses.GameMap.deSerializedHouse[0], mapClasses.GameMap.deSerializedHouse[1], 10), ((int) (mapClasses.GameMap.deSerializedHouse[2])), true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4502/buggy-version/src.mapClasses.GameMap.java", "BodyUseAPI": [], "Fixed commit": "c8f82ff42c6724047c6d31d74e55cd330b2a42dd", "Url": "https://api.github.com/repos/NValentin/MEA305AWESOMESHITPROJECT-CLIENT", "Date": "2015-11-25T10:03:14Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((manhattan) == (-1)) manhattan = board.manhattan();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8323/buggy-version/src.Solver.java", "BodyUseAPI": [], "Fixed commit": "902ae99710da520f567dfc91dc215aa7021b58ba", "Url": "https://api.github.com/repos/trieck/algorithms", "Date": "2016-02-21T17:25:29Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flagGPSEnable) myLocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, mLocationListener01);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1119/buggy-version/app.src.main.java.com.yueqiu.util.LocationUtil.java", "BodyUseAPI": [], "Fixed commit": "2e087220f182537a465bc344ece259cbc324d4b2", "Url": "https://api.github.com/repos/xxxoooo/xxoo_YueQiu", "Date": "2015-01-23T11:19:09Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flagNetworkEnable) myLocationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, mLocationListener02);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1119/buggy-version/app.src.main.java.com.yueqiu.util.LocationUtil.java", "BodyUseAPI": [], "Fixed commit": "2e087220f182537a465bc344ece259cbc324d4b2", "Url": "https://api.github.com/repos/xxxoooo/xxoo_YueQiu", "Date": "2015-01-23T11:19:09Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((smtpStatusListeners) == null) { smtpStatusListeners = new java.util.LinkedList<application.listeners.SMTPStatusListener>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2291/buggy-version/src.application.settings.SettingsSingleton.java", "BodyUseAPI": [], "Fixed commit": "c25b9873e94d03e5ee14f4b0475a057ca1458184", "Url": "https://api.github.com/repos/travispessetto/OrigamiGUI", "Date": "2017-07-26T14:36:40Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.equals(\"action\")) || (type.equals(\"other\"))) { if (first) { first = false; }else { out.write(\", \"); } out.write((((\"'\" + (API.API_KEY_PARAM)) + \"' => $\") + (API.API_KEY_PARAM))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/700/buggy-version/src.org.zaproxy.zap.extensions.api.PhpAPIGenerator.java", "BodyUseAPI": [], "Fixed commit": "8dc91dd6c7882ef7b4ad8273e235e21a06dfaa78", "Url": "https://api.github.com/repos/yukisov/php-api-generator-for-owasp-zap", "Date": "2014-07-02T17:14:50Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mBroadcastReceiver1.isOrderedBroadcast()) { unregisterReceiver(mBroadcastReceiver2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1407/buggy-version/mobile.BeerPad.app.src.main.java.com.beerpad.BeerPadSearchActivity.java", "BodyUseAPI": [], "Fixed commit": "db06c8c4cb85efa50a14d9192154a6188d3c5d43", "Url": "https://api.github.com/repos/flashbeer/mobile", "Date": "2017-05-28T12:32:10Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mBroadcastReceiver2.isOrderedBroadcast()) { unregisterReceiver(mBroadcastReceiver2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1407/buggy-version/mobile.BeerPad.app.src.main.java.com.beerpad.BeerPadSearchActivity.java", "BodyUseAPI": ["com.beerpad.BeerPadSearchActivity.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "db06c8c4cb85efa50a14d9192154a6188d3c5d43", "Url": "https://api.github.com/repos/flashbeer/mobile", "Date": "2017-05-28T12:32:10Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mBroadcastReceiver3.isOrderedBroadcast()) { unregisterReceiver(mBroadcastReceiver3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1407/buggy-version/mobile.BeerPad.app.src.main.java.com.beerpad.BeerPadSearchActivity.java", "BodyUseAPI": ["com.beerpad.BeerPadSearchActivity.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "db06c8c4cb85efa50a14d9192154a6188d3c5d43", "Url": "https://api.github.com/repos/flashbeer/mobile", "Date": "2017-05-28T12:32:10Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mBroadcastReceiver4.isOrderedBroadcast()) { unregisterReceiver(mBroadcastReceiver4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1407/buggy-version/mobile.BeerPad.app.src.main.java.com.beerpad.BeerPadSearchActivity.java", "BodyUseAPI": ["com.beerpad.BeerPadSearchActivity.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "db06c8c4cb85efa50a14d9192154a6188d3c5d43", "Url": "https://api.github.com/repos/flashbeer/mobile", "Date": "2017-05-28T12:32:10Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInCurrentBlock) { updateStreams(); if (isReadFromLocalWorker()) { mPos = pos; updateStreams(); if ((mCurrentBlockInStream) != null) { mCurrentBlockInStream.seek(((mPos) % (mBlockSize))); }else { com.google.common.base.Preconditions.checkState(((remaining()) == 0)); } return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/706/buggy-version/core.client.fs.src.main.java.alluxio.client.file.FileInStream.java", "BodyUseAPI": [], "Fixed commit": "7b1e42ee3e1818799b9fc76364920cee6b4d4d30", "Url": "https://api.github.com/repos/apc999/alluxio", "Date": "2017-09-26T23:29:31Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((attendeeList.length()) > 0) { attendees = attendeeList.substring(0, ((attendeeList.length()) - 2)); }else { attendees = \"None\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/10/buggy-version/app.src.main.java.com.csulb.decisionator.decisionator.InviteFriendsActivity.java", "BodyUseAPI": ["java.lang.StringBuffer.length()", "java.lang.StringBuffer.substring(int,int)"], "Fixed commit": "65a8879ff34f5a6bb36f35a9639b1207ed7dee18", "Url": "https://api.github.com/repos/Mosquito-Mashers/Decisionator", "Date": "2016-02-27T20:26:23Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((group.get(\"permissions\")) instanceof java.util.List) { for (java.lang.Object o : ((java.util.List) (group.get(\"permissions\")))) { thisGrp.permissions.add(o.toString()); } }else if ((group.get(\"permissions\")) instanceof java.lang.String) { thisGrp.permissions.add(((java.lang.String) (group.get(\"permissions\")))); }else { throw new java.lang.Exception((\"Unknown type of permissions node: \" + (group.get(\"permissions\").getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/189/buggy-version/src.main.java.org.anjocaido.groupmanager.DataHolder.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.getClass()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "thisGrp.permissions.add(java.lang.Object)", "java.lang.Class<? extends java.lang.Object>.getName()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "00839a6dc2b65d1cc9a663dcc63023e399d17af0", "Url": "https://api.github.com/repos/gmcouto/GroupManager", "Date": "2011-02-19T20:56:56Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.ActionEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cb.getSelectedIndex()) != (-1)) { previousSelectedFont = cb.getSelectedIndex(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7593/buggy-version/FontEditor.java", "BodyUseAPI": ["javax.swing.JComboBox.getSelectedIndex()"], "Fixed commit": "21ac7019387bab3bd3a18963f4517b83f5af90fa", "Url": "https://api.github.com/repos/jkotlinski/lsdpatch", "Date": "2017-01-23T11:57:09Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalResourceRequest.getPattern()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (otherPattern == null) { ret = 1; }else { ret = pattern.compareTo(otherPattern); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8280/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-nodemanager.src.main.java.org.apache.hadoop.yarn.server.nodemanager.containermanager.localizer.LocalResourceRequest.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "4403e22b78f032c56dcffd9c7f9b69006d07fa92", "Url": "https://api.github.com/repos/griddynamics/yhadoop-common", "Date": "2013-01-31T13:30:37Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((face.getVertexNormals().size()) > 0) { face.getVertexNormals().set(0, vertices[face.a].clone()); face.getVertexNormals().set(1, vertices[face.b].clone()); face.getVertexNormals().set(2, vertices[face.c].clone()); }else { face.getVertexNormals().add(0, vertices[face.a].clone()); face.getVertexNormals().add(1, vertices[face.b].clone()); face.getVertexNormals().add(2, vertices[face.c].clone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5836/buggy-version/src.thothbot.parallax.core.shared.core.Geometry.java", "BodyUseAPI": ["face.getVertexNormals().add(int,vertices[face.b].clone())", "vertices[face.c].clone()", "face.getVertexNormals().set(int,vertices[face.a].clone())", "vertices[face.a].clone()", "thothbot.parallax.core.shared.core.Face3.getVertexNormals()", "thothbot.parallax.core.shared.core.Face3.getVertexNormals()", "face.getVertexNormals().set(int,vertices[face.b].clone())", "vertices[face.a].clone()", "thothbot.parallax.core.shared.core.Face3.getVertexNormals()", "thothbot.parallax.core.shared.core.Face3.getVertexNormals()", "face.getVertexNormals().add(int,vertices[face.a].clone())", "vertices[face.c].clone()", "thothbot.parallax.core.shared.core.Face3.getVertexNormals()", "thothbot.parallax.core.shared.core.Face3.getVertexNormals()", "vertices[face.b].clone()", "vertices[face.b].clone()", "face.getVertexNormals().add(int,vertices[face.c].clone())", "face.getVertexNormals().set(int,vertices[face.c].clone())"], "Fixed commit": "04ee04810f43301a744e6cb5bf04bc15447eaa59", "Url": "https://api.github.com/repos/thothbot/parallax", "Date": "2015-01-18T19:06:28Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mapIsLoaded)) { java.lang.String mapHTML = getMapFromTemplate(latitude, longitude, heading); engine.loadContent(mapHTML); }else { engine.executeScript(java.lang.String.format(\"moveMarker(%s, %s, %s)\", latitude, longitude, heading)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1010/buggy-version/src.org.noroomattheinn.visibletesla.LocationController.java", "BodyUseAPI": [], "Fixed commit": "669f6d211d7190afca2a250f4d0a25507f0c8773", "Url": "https://api.github.com/repos/jpasqua/VisibleTesla", "Date": "2013-08-11T07:05:30Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mockMethod.isAdvice)) { boolean forGenericMethod = mockMethod.isForGenericMethod(); for (mockit.internal.mockups.Type argType : argTypes) { int opcode = argType.getOpcode(mockit.internal.mockups.ILOAD); mw.visitVarInsn(opcode, varIndex); if (forGenericMethod && ((argType.getSort()) >= (Type.ARRAY))) { mw.visitTypeInsn(mockit.internal.mockups.CHECKCAST, argType.getInternalName()); } varIndex += argType.getSize(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/814/buggy-version/main.src.mockit.internal.mockups.MockupsModifier.java", "BodyUseAPI": ["mockit.internal.mockups.MockMethod.isForGenericMethod()"], "Fixed commit": "6a6350ccf06afecfa4c786872745504c8545827e", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2016-05-29T01:06:03Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (qName.equals(\"multiline\")) { this.processingTags.push(new de.tu_dresden.psy.efml.MultilineTag(this.currentTags.peek())); }else if (qName.equals(\"option\")) { this.processingTags.push(new de.tu_dresden.psy.efml.OptionTag(this.currentTags.peek())); }else if (qName.equals(\"studyid\")) { this.processingTags.push(new de.tu_dresden.psy.efml.StudyIdTag(body)); }else if (qName.equals(\"documentid\")) { this.processingTags.push(new de.tu_dresden.psy.efml.DocumentIdTag(body)); }else if (qName.equals(\"jsurl\")) { this.processingTags.push(new de.tu_dresden.psy.efml.JsUrlTag(body)); }else if (qName.equals(\"phpurl\")) { this.processingTags.push(new de.tu_dresden.psy.efml.PhpUrlTag(body)); }else if (qName.equals(\"subjectinfo\")) { this.processingTags.push(new de.tu_dresden.psy.efml.SubjectInfoTag(body)); }else if (qName.equals(\"subjectprompt\")) { this.processingTags.push(new de.tu_dresden.psy.efml.SubjectPromptTag(body)); }else if (qName.equals(\"subjectchange\")) { this.processingTags.push(new de.tu_dresden.psy.efml.SubjectChangeTag(body)); }else if (qName.equals(\"plain\")) { this.processingTags.push(new de.tu_dresden.psy.efml.PlainTag()); }else if (qName.equals(\"template\")) { this.processingTags.push(new de.tu_dresden.psy.efml.TemplateTag(this.currentTags.peek())); }else if (qName.equals(\"airport\")) { this.processingTags.push(new de.tu_dresden.psy.efml.AirportTag(this.currentTags.peek())); }else if (qName.equals(\"feedback\")) { this.processingTags.push(new de.tu_dresden.psy.efml.FeedbackTag()); }else if (qName.equals(\"required\")) { this.processingTags.push(new de.tu_dresden.psy.efml.RequiredTag(this.currentTags.peek())); }else if (((((((((((((((((((((qName.equals(\"parse\")) || (qName.equals(\"subject\"))) || (qName.equals(\"object\"))) || (qName.equals(\"predicate\"))) || (qName.equals(\"assert\"))) || (qName.equals(\"expert\"))) || (qName.equals(\"implicit\"))) || (qName.equals(\"conclusion\"))) || (qName.equals(\"rule\"))) || (qName.equals(\"premise\"))) || (qName.equals(\"constraint\"))) || (qName.equals(\"infer\"))) || (qName.equals(\"rho\"))) || (qName.equals(\"in\"))) || (qName.equals(\"out\"))) || (qName.equals(\"justified\"))) || (qName.equals(\"trivial\"))) || (qName.equals(\"invalid\"))) || (qName.equals(\"quality\"))) || (qName.equals(\"conclusions\"))) || (qName.equals(\"solves\"))) { this.processingTags.push(new de.tu_dresden.psy.efml.InferenceXmlTag(this.currentTags.peek())); }else if (qName.equals(\"inference\")) { this.processingTags.push(new de.tu_dresden.psy.efml.InferenceTag(this.currentTags.peek())); }else { this.processingTags.push(new de.tu_dresden.psy.efml.UnknownTag(this.currentTags.peek())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7304/buggy-version/java.efml.src.de.tu_dresden.psy.efml.EfmlToHtmlHandler.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "5ddbf5ebed7524f192d7134a7d9b9f677f09f8b1", "Url": "https://api.github.com/repos/psy-immo/dev", "Date": "2012-07-03T10:16:24Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (read != null) { parsed.setOtherMethods(read.getOtherMethods()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2496/buggy-version/src.main.java.io.gd.generator.handler.MybatisMapperHandler.java", "BodyUseAPI": ["io.gd.generator.meta.mybatis.mapper.MybatisMapperMeta.setOtherMethods(read.getOtherMethods())", "io.gd.generator.meta.mybatis.mapper.MybatisMapperMeta.getOtherMethods()"], "Fixed commit": "d1ca1f91148e7ad7cc906987ce9746c883d787c8", "Url": "https://api.github.com/repos/goudai/gd-generator", "Date": "2016-01-26T09:12:40Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["display.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(checkEmptyDisplay.isEmpty())) { calculatorEngine(lbcalculator.loftblog.ru.loftblogcalculator.MainActivity.EQUALS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1707/buggy-version/app.src.main.java.lbcalculator.loftblog.ru.loftblogcalculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d08141845d7035375b69741d97786bb3049a89df", "Url": "https://api.github.com/repos/loftschoolru/LoftBlogCalculator", "Date": "2015-08-17T15:58:19Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newUser.getText().isEmpty()) || (newPassword.getText().isEmpty())) { java.lang.System.err.println(\"Please enter valid Username and Password\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7448/buggy-version/src.Controller.SignUpController.java", "BodyUseAPI": [], "Fixed commit": "cd668de49b3433a58e155bc8c1a39032004fa70e", "Url": "https://api.github.com/repos/RegulusReggie/LemonCalendar", "Date": "2017-08-16T23:41:17Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) != null) { scondor.panels.shop.ShopHandler.buy(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5488/buggy-version/src.scondor.panels.shop.Shop.java", "BodyUseAPI": [], "Fixed commit": "2a1c09b03d30cde8f1ea7d1ca9e30817b8a7b4df", "Url": "https://api.github.com/repos/GodsOfScondor/Gods_of_Scondor", "Date": "2017-03-28T16:57:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nroJogada) == 2) { if (!(amarrouJogada1)) { if (((qualJogadorGanhouPrimeiraJogada) % 2) == 0) placarRodada.incrementarPontosDupla1(1); if (((qualJogadorGanhouPrimeiraJogada) % 2) == 1) placarRodada.incrementarPontosDupla2(1); amarrouJogada2 = true; }else amarrouJogada2 = true; }else if ((nroJogada) == 3) { if (((qualJogadorGanhouPrimeiraJogada) % 2) == 0) placarRodada.incrementarPontosDupla1(1); if (((qualJogadorGanhouPrimeiraJogada) % 2) == 1) placarRodada.incrementarPontosDupla2(1); amarrouJogada3 = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4163/buggy-version/src.Rodada.java", "BodyUseAPI": [], "Fixed commit": "aca9115270c8e421a8cf918ca4b16dcc0b0b7892", "Url": "https://api.github.com/repos/Bruwald/trabPOO", "Date": "2017-05-31T04:04:30Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.equals(\" \")) return \"No Input\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4542/buggy-version/app.src.main.java.com.davidsgk.microcalc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a7d8df8ec7d13daa94dca4e04fe5f9b6ef092fa7", "Url": "https://api.github.com/repos/DavidSGK/MicroCalc", "Date": "2016-01-03T07:20:23Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wft.main.JobTableModel.getValueAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj instanceof java.lang.String) { date = java.time.LocalDate.parse(((java.lang.String) (model.getValueAt(i, 1))), java.time.format.DateTimeFormatter.ofPattern(com.wft.main.JobPanel.DATE_FORMAT)); }else { date = ((java.time.LocalDate) (obj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5155/buggy-version/src.main.java.com.wft.main.JobPanel.java", "BodyUseAPI": [], "Fixed commit": "21fc90c1a3c5e36e3eaa44a696353f23e8f6c569", "Url": "https://api.github.com/repos/drodmaster/WorryFreeTree", "Date": "2016-09-04T23:23:34Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spark.Request.queryParams(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) { value = defaultValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6996/buggy-version/training_application_java.src.main.java.no.hials.trainingapp.routing.FormInput.java", "BodyUseAPI": [], "Fixed commit": "9efd40d47d47f9fa49569a4aee1a21e91c730a4f", "Url": "https://api.github.com/repos/hasirak/training_application", "Date": "2015-11-15T16:40:52Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentCameraId) == (CameraInfo.CAMERA_FACING_FRONT)) mOrientation -= android.view.Surface.ROTATION_180;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9224/buggy-version/app.src.main.java.com.cs48.lethe.ui.camera.CameraActivity.java", "BodyUseAPI": [], "Fixed commit": "1871c057c34ba94c53a1efd5ad8c48b8c1416217", "Url": "https://api.github.com/repos/CoheedAC/Lethe", "Date": "2015-03-10T00:12:17Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operatorStack.isEmpty()) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6182/buggy-version/src.csci.hw2.Calculator.java", "BodyUseAPI": [], "Fixed commit": "009dd6d6e88658999e5a4cc6c3ae2db5aaf8835e", "Url": "https://api.github.com/repos/vishalbedi/CSCI-605", "Date": "2015-09-07T16:34:20Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yahoo.sketches.counting.PositiveCountersMap.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (delta > 0) { increment(key, delta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/998/buggy-version/src.main.java.com.yahoo.sketches.counting.PositiveCountersMap.java", "BodyUseAPI": ["com.yahoo.sketches.counting.PositiveCountersMap.increment(long,long)"], "Fixed commit": "635cf093dc2649118d9f7b5056444d50064dac76", "Url": "https://api.github.com/repos/edoliberty/sketches-core", "Date": "2015-11-02T18:11:31Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conceptName.getShortName()) == null) { return conceptName.getFullySpecifiedName(); }else { return (((conceptName.getFullySpecifiedName()) + \"(\") + (conceptName.getShortName())) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3447/buggy-version/src.main.java.org.bahmni.reports.util.GenericObservationFormReportTemplateHelper.java", "BodyUseAPI": ["org.bahmni.reports.model.ConceptName.getShortName()", "org.bahmni.reports.model.ConceptName.getFullySpecifiedName()", "org.bahmni.reports.model.ConceptName.getFullySpecifiedName()"], "Fixed commit": "a09059c7620e7822b16562c780f54e2c1cb3c8cb", "Url": "https://api.github.com/repos/Bahmni/bahmni-reports", "Date": "2016-12-01T10:57:18Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((v instanceof jp.knct.di.c6t.ui.schedule.ExplorationPin) && ((mListener) != null)) { mListener.onClick(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4406/buggy-version/src.jp.knct.di.c6t.ui.schedule.ScheduleFragment.java", "BodyUseAPI": ["android.view.View.OnClickListener.onClick(android.view.View)"], "Fixed commit": "d96fab224b3fbb5feabc7e538fb8c8c0bd1696ae", "Url": "https://api.github.com/repos/i09158knct/c6t-proto", "Date": "2013-09-28T10:17:36Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(composite.isDisposed())) { composite.removeListener(SWT.PaintItem, this); composite.removeListener(SWT.EraseItem, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7134/buggy-version/plugins.com.xored.glance.ui.controls.src.com.xored.glance.ui.controls.items.ItemDecorator.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Composite.removeListener(SWT.EraseItem,com.xored.glance.ui.controls.items.ItemDecorator)", "org.eclipse.swt.widgets.Composite.removeListener(SWT.PaintItem,com.xored.glance.ui.controls.items.ItemDecorator)"], "Fixed commit": "bfcd2a467b8ef9fbb84aae23c93f30ba953b5270", "Url": "https://api.github.com/repos/albfan/glance", "Date": "2016-07-07T02:08:33Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(composite.isDisposed())) { org.eclipse.swt.graphics.Rectangle rect = composite.getClientArea(); composite.redraw(rect.x, rect.y, rect.width, rect.height, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7134/buggy-version/plugins.com.xored.glance.ui.controls.src.com.xored.glance.ui.controls.items.ItemDecorator.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Composite.getClientArea()", "org.eclipse.swt.widgets.Composite.redraw(rect.x,rect.y,rect.width,rect.height,boolean)"], "Fixed commit": "bfcd2a467b8ef9fbb84aae23c93f30ba953b5270", "Url": "https://api.github.com/repos/albfan/glance", "Date": "2016-07-07T02:08:33Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cardList.getSelectedIndex()) == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4171/buggy-version/hsp.src.main.java.hearthstone_project.hsp.App.java", "BodyUseAPI": [], "Fixed commit": "dd7801f25a2546aa8edcb9b7a93afd6af08936db", "Url": "https://api.github.com/repos/NateM926/hearthstone_westwood", "Date": "2015-12-13T01:08:20Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deckList.getSelectedIndex()) == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4171/buggy-version/hsp.src.main.java.hearthstone_project.hsp.App.java", "BodyUseAPI": [], "Fixed commit": "dd7801f25a2546aa8edcb9b7a93afd6af08936db", "Url": "https://api.github.com/repos/NateM926/hearthstone_westwood", "Date": "2015-12-13T01:08:20Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((incomingQueuesString) == null) || (incomingQueuesString.equals(\"\"))) { return returnList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8416/buggy-version/src.main.java.ac.at.tuwien.infosys.visp.processingNode.util.IncomingQueueExtractor.java", "BodyUseAPI": [], "Fixed commit": "86f09e585ef90077bc6a8c39e968df9c8a086186", "Url": "https://api.github.com/repos/visp-streaming/processingNodes", "Date": "2017-03-09T14:11:48Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.csm.straining.user.page.UserUpdatePage.getParamString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.lamfire.utils.StringUtils.isNotBlank(avatar)) { params.setAvatar(avatar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3646/buggy-version/Y-User.src.com.csm.straining.user.page.UserUpdatePage.java", "BodyUseAPI": ["com.csm.straining.common.i.user.params.UserParams.setAvatar(java.lang.String)"], "Fixed commit": "343b4c5f3e66cb84f631d25f6e4b63ad2c187ff9", "Url": "https://api.github.com/repos/Ironsongming/s-training", "Date": "2016-04-26T08:00:26Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.csm.straining.user.page.UserUpdatePage.getParamString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.lamfire.utils.StringUtils.isNotBlank(username)) { params.setUsername(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3646/buggy-version/Y-User.src.com.csm.straining.user.page.UserUpdatePage.java", "BodyUseAPI": ["com.csm.straining.common.i.user.params.UserParams.setUsername(java.lang.String)"], "Fixed commit": "343b4c5f3e66cb84f631d25f6e4b63ad2c187ff9", "Url": "https://api.github.com/repos/Ironsongming/s-training", "Date": "2016-04-26T08:00:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.csm.straining.user.page.UserUpdatePage.getParamString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.lamfire.utils.StringUtils.isNotBlank(password)) { params.setPassword(password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3646/buggy-version/Y-User.src.com.csm.straining.user.page.UserUpdatePage.java", "BodyUseAPI": ["com.csm.straining.common.i.user.params.UserParams.setPassword(java.lang.String)"], "Fixed commit": "343b4c5f3e66cb84f631d25f6e4b63ad2c187ff9", "Url": "https://api.github.com/repos/Ironsongming/s-training", "Date": "2016-04-26T08:00:26Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.csm.straining.user.page.UserUpdatePage.getParamString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.lamfire.utils.StringUtils.isNotBlank(signNature)) { params.setSignNature(signNature); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3646/buggy-version/Y-User.src.com.csm.straining.user.page.UserUpdatePage.java", "BodyUseAPI": ["com.csm.straining.common.i.user.params.UserParams.setSignNature(java.lang.String)"], "Fixed commit": "343b4c5f3e66cb84f631d25f6e4b63ad2c187ff9", "Url": "https://api.github.com/repos/Ironsongming/s-training", "Date": "2016-04-26T08:00:26Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(attachFile.delete())) { attachFile.deleteOnExit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7941/buggy-version/byte-buddy-agent.src.main.java.net.bytebuddy.agent.VirtualMachine.java", "BodyUseAPI": ["java.io.File.deleteOnExit()"], "Fixed commit": "b404707d3b3808598a974ed10d24deb2ed44db03", "Url": "https://api.github.com/repos/raphw/byte-buddy", "Date": "2017-05-23T17:00:00Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (viewType != (mBinderRegistry.VIEW_TYPE_UNKNOWN)) { return createCardMessageItemViewHolder(parent); }else { throw new java.lang.IllegalStateException(\"Unknown View Type\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3356/buggy-version/layer-atlas.src.main.java.com.layer.ui.message.MessagesAdapter.java", "BodyUseAPI": [], "Fixed commit": "00f02a9cc8c8d5f0f11d6d86b98dd32c85ed074a", "Url": "https://api.github.com/repos/layerhq/Atlas-Android", "Date": "2017-10-27T18:20:22Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mImmersionBar) != null) { mImmersionBar.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5147/buggy-version/app.src.main.java.com.youshibi.app.base.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "d9524fda91d672416b553f024afe14dc003b2611", "Url": "https://api.github.com/repos/z-chu/FriendBook", "Date": "2017-08-25T12:27:22Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vzome.core.render.RenderedManifestation.getColor()", "com.vzome.core.render.RenderedManifestation.getColor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((fromColor == null) && (toColor == null)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8910/buggy-version/src.main.java.com.vzome.core.render.RenderedModel.java", "BodyUseAPI": [], "Fixed commit": "ac30d89fbf74bde2951565fbd1401d322898bf7f", "Url": "https://api.github.com/repos/david-hall/vzome-core", "Date": "2015-12-23T06:33:29Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fluids.FluidTank.fill(net.minecraftforge.fluids.FluidContainerRegistry.getFluidForFilledItem(stack),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (amtFilled == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2517/buggy-version/src.main.java.zmaster587.libVulpes.tile.multiblock.hatch.TileFluidHatch.java", "BodyUseAPI": [], "Fixed commit": "fe534dd7e1541e3114b5a46156e4e5fb9e5acef4", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-01-29T20:54:08Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fluids.FluidTank.fill(net.minecraftforge.fluids.FluidStack,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (amountDrained == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2517/buggy-version/src.main.java.zmaster587.libVulpes.tile.multiblock.hatch.TileFluidHatch.java", "BodyUseAPI": [], "Fixed commit": "fe534dd7e1541e3114b5a46156e4e5fb9e5acef4", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-01-29T20:54:08Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mPasswordView.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(password)) { mPasswordView.setError(getString(R.string.error_field_required)); focusView = mPasswordView; cancel = true; }else if (!(isPasswordValid(password))) { mPasswordView.setError(getString(R.string.error_invalid_password)); focusView = mPasswordView; cancel = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5693/buggy-version/app.src.main.java.com.example.german.shpe.LoginActivity.java", "BodyUseAPI": ["com.example.german.shpe.LoginActivity.isPasswordValid(java.lang.String)"], "Fixed commit": "b96a686d64440922ed95fa5ff339386b4b0a4560", "Url": "https://api.github.com/repos/gortega017/SHPE", "Date": "2015-02-01T05:57:39Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"runtime_registry_compatibility.jar\".equals(path)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8990/buggy-version/Core.de.devboost.buildboost.src.de.devboost.buildboost.discovery.reader.ManifestReader.java", "BodyUseAPI": [], "Fixed commit": "9d14994ad37b5474b89e5587c68e8b4a66a98270", "Url": "https://api.github.com/repos/DevBoost/BuildBoost", "Date": "2012-08-13T12:05:41Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((letter) != null) { setClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4816/buggy-version/src.main.java.WHS_planner.Schedule.ScheduleController.java", "BodyUseAPI": [], "Fixed commit": "4d2406b2ca7ad6cae345d0713496c69195a1375f", "Url": "https://api.github.com/repos/s0urc3d3v3l0pm3nt/whs_planner", "Date": "2017-01-19T14:22:34Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["utilz.Utils.toList(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((s.startsWith(\"/password\")) && ((ss.size()) == 3)) { ss.set(1, utilz.Utils.getSecureHash(ss.get(1))); ss.set(2, utilz.Utils.getSecureHash(ss.get(2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7643/buggy-version/LionChat_Client.src.net.Interpreter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "utilz.Utils.getSecureHash(java.lang.String)", "java.util.ArrayList<java.lang.String>.set(int,utilz.Utils.getSecureHash(ss.get(1)))", "java.util.ArrayList<java.lang.String>.set(int,utilz.Utils.getSecureHash(ss.get(2)))", "java.util.ArrayList<java.lang.String>.get(int)", "utilz.Utils.getSecureHash(java.lang.String)"], "Fixed commit": "a73d06abc992f2dc20ced63fced7939696dd4265", "Url": "https://api.github.com/repos/fazo96/LionChat", "Date": "2014-01-17T10:35:10Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7882/buggy-version/app.src.main.java.dev.eyesless.needmypuppy.ProgressBarFragment.java", "BodyUseAPI": [], "Fixed commit": "7a97c227fc195931118b0d58440360cf0050ffd9", "Url": "https://api.github.com/repos/kalininaleksandrv/NeedMyPuppyRelease_v_0.1", "Date": "2017-08-05T19:18:05Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (signal == (json_parser.text_signals.JSONSignal.string_auf_zu)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4861/buggy-version/src.main.java.json_parser.parser.parallel.JSONFieldParser.java", "BodyUseAPI": [], "Fixed commit": "49f18e9ea40d38a064f96a6d6abd112623883206", "Url": "https://api.github.com/repos/RosesTheN00b/JSON_Parser_for_JAVA", "Date": "2016-08-12T14:18:52Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof java.lang.ThreadDeath) throw ((java.lang.ThreadDeath) (t));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6347/buggy-version/src.org.jitsi.impl.neomedia.RTPConnectorUDPInputStream.java", "BodyUseAPI": [], "Fixed commit": "096b349f37c9bd81c036cde069649d50faca7eff", "Url": "https://api.github.com/repos/jitsi/libjitsi", "Date": "2013-11-20T09:01:27Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getPresenter().getCurrentThread()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (thread == null) { return new com.vaadin.ui.Label(\"No thread selected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/194/buggy-version/webapp.src.main.java.org.vaadin.tori.thread.ThreadViewImpl.java", "BodyUseAPI": [], "Fixed commit": "41298099c437422eeb247d9ef9fc13e94cdc029d", "Url": "https://api.github.com/repos/vaadin/tori", "Date": "2011-12-22T13:13:39Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextLine == (document.getNumberOfLines())) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6139/buggy-version/plugins.org.eclipse.xtext.ui.src.org.eclipse.xtext.ui.editor.toggleComments.ToggleSLCommentAction.java", "BodyUseAPI": [], "Fixed commit": "cfe63856229e7294634fb92e321264b1fa25aa15", "Url": "https://api.github.com/repos/LorenzoBettini/xtext", "Date": "2015-06-20T05:54:18Z"},
{"Line": "=>3899", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((dataObject.getConfiguredParameters().indexOf(RESTFileV1.FILE_NAME)) == (-1)) || ((dataObject.getFileName()) == null)) || (dataObject.getFileName().trim().isEmpty())) { throw new org.jboss.resteasy.spi.BadRequestException(\"The file to be created or matched needs to have the file name and path set.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/966/buggy-version/src.main.java.org.jboss.pressgang.ccms.server.rest.v1.RESTv1.java", "BodyUseAPI": [], "Fixed commit": "708c9043fb6dee5b9cb5b702404c2ccf8658fbaf", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSREST", "Date": "2014-04-02T22:14:59Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cpw.mods.fml.common.registry.GameRegistry.findBlock(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (base == null) { base = net.minecraft.init.Blocks.stone; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3593/buggy-version/java.ak.EnchantChanger.Client.renderer.EcRenderMultiPassBlock.java", "BodyUseAPI": [], "Fixed commit": "13eb97551ba60b53e696c7983c88571e53fa4939", "Url": "https://api.github.com/repos/aksource/EnchantChanger", "Date": "2014-10-27T11:33:52Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isMenuOpened())) && (valueY == (appbarView.getBottom()))) { android.util.Log.d(com.example.artem.toolbaranimation.DraggableRelativeLayout.TAG, \"animate menu back to bot\"); animateMenuView(com.example.artem.toolbaranimation.DraggableRelativeLayout.FLING_ANIMATION_DURATION, true); }else if ((isMenuOpened()) && (valueY == (com.example.artem.toolbaranimation.DraggableRelativeLayout.BOTTOM_Y_THRESHOLD))) { android.util.Log.d(com.example.artem.toolbaranimation.DraggableRelativeLayout.TAG, \"animate menu back to top\"); animateMenuView(com.example.artem.toolbaranimation.DraggableRelativeLayout.FLING_ANIMATION_DURATION, false); }else { animateMenuView(com.example.artem.toolbaranimation.DraggableRelativeLayout.FLING_ANIMATION_DURATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1686/buggy-version/app.src.main.java.com.example.artem.toolbaranimation.DraggableRelativeLayout.java", "BodyUseAPI": [], "Fixed commit": "00b5cac3288d20165cba4cef4167892d9accf739", "Url": "https://api.github.com/repos/TooLazyy/AndroidGooglePrimerAnimation", "Date": "2017-04-24T19:37:46Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (listener != null) { listener.done(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5452/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.task.DataDownloadManager.java", "BodyUseAPI": ["com.crtb.tunnelmonitor.task.DataDownloadManager.DownloadListener.done(boolean)"], "Fixed commit": "fc5edc99b87551379bff93403d4487cac6b09f9e", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-05-01T14:30:24Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stock) == null) { stock = com.fantasystock.fantasystock.Helpers.DataCenter.getInstance().stockMap.get(symbol); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9110/buggy-version/app.src.main.java.com.fantasystock.fantasystock.Fragments.TradeFragment.java", "BodyUseAPI": [], "Fixed commit": "664c091a1ad9803f22cbe82556b080981cb7e418", "Url": "https://api.github.com/repos/ted7726/FantasyStock", "Date": "2016-03-23T05:56:26Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["currentUser.investingStocksMap.get(datas.get(j).meta.ticker.toUpperCase())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (s != null) { int share = s.share; close += (datas.get(j).series.get(i).close) * share; open += (datas.get(j).series.get(i).open) * share; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/9110/buggy-version/app.src.main.java.com.fantasystock.fantasystock.Helpers.DataCenter.java", "BodyUseAPI": [], "Fixed commit": "664c091a1ad9803f22cbe82556b080981cb7e418", "Url": "https://api.github.com/repos/ted7726/FantasyStock", "Date": "2016-03-23T05:56:26Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reader.peek()) != (android.util.JsonToken.NULL)) post.setLinkFlairText(reader.nextString()); else reader.skipValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4271/buggy-version/app.src.main.java.ar.edu.unc.famaf.redditreader.backend.Parser.java", "BodyUseAPI": ["android.util.JsonReader.skipValue()", "ar.edu.unc.famaf.redditreader.model.PostModel.setLinkFlairText(reader.nextString())", "android.util.JsonReader.nextString()"], "Fixed commit": "2159f1aec2870313b0bf4088235254b72e3cf458", "Url": "https://api.github.com/repos/mauguignard/androidRedditReader", "Date": "2016-10-22T19:46:39Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.usfirst.frc.team1775.robot.commands.gearassembly.HoldGear.gearAssembly.isDown())) { org.usfirst.frc.team1775.robot.commands.gearassembly.HoldGear.gearAssembly.stopFeed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4019/buggy-version/Robot2017.src.org.usfirst.frc.team1775.robot.commands.gearassembly.HoldGear.java", "BodyUseAPI": ["org.usfirst.frc.team1775.robot.subsystems.GearAssemblySubsystem.stopFeed()"], "Fixed commit": "b1e19699e3e30781f35e45db31f327ed1d9e8522", "Url": "https://api.github.com/repos/FRC1775/Robot2017", "Date": "2017-05-09T00:14:01Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cc.easyandroid.listfiltermenu.core.ListFilterAdapter<cc.easyandroid.listfiltermenu.core.IEasyItem>.getParentIEasyItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((iEasyItem != null) && (((mShowUnlimiteds) & (cc.easyandroid.listfiltermenu.widget.EasyListFilterMenu.SHOW_LIST_1)) != 0)) { iEasyItem.getChildItems().remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6503/buggy-version/library.src.main.java.cc.easyandroid.listfiltermenu.widget.EasyListFilterMenu.java", "BodyUseAPI": ["iEasyItem.getChildItems().remove(int)", "cc.easyandroid.listfiltermenu.core.IEasyItem.getChildItems()"], "Fixed commit": "26b19849f1f9731316f804fefd2b0066e29864e0", "Url": "https://api.github.com/repos/cgpllx/ListFilterMenu", "Date": "2016-05-17T15:24:22Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<K, V>.get(K)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (oldV != null) { v = oldV; }else { map.put(key, v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4934/buggy-version/invesdwin-util.src.main.java.de.invesdwin.util.collections.loadingcache.internal.ASynchronizedLoadingCache.java", "BodyUseAPI": [], "Fixed commit": "9460d1c074bcf6480d8b1bf7023f0874df40dfd9", "Url": "https://api.github.com/repos/subes/invesdwin-util", "Date": "2015-08-20T09:51:00Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPackageId.equals(\"000000000000000000000002\")) { mPrice = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7362/buggy-version/app.src.main.java.com.hbbsolution.owner.work_management.view.quickpost.QuickPostActivity.java", "BodyUseAPI": [], "Fixed commit": "c79d10aca354b1383673a2eeae62fd57cfa4dd8c", "Url": "https://api.github.com/repos/thanhduy26091995/Owner", "Date": "2017-07-31T09:42:09Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (info.isDefaultL3Network) { info.hostname = hostnames.get(nic.getVmInstanceUuid()); if ((info.hostname) == null) { info.hostname = nic.getIp().replaceAll(\"\\\\.\", \"-\"); } if ((info.dnsDomain) != null) { info.hostname = java.lang.String.format(\"%s.%s\", info.hostname, info.dnsDomain); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8483/buggy-version/plugin.flatNetworkProvider.src.main.java.org.zstack.network.service.flat.FlatDhcpBackend.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "a11f19241e0743ffc192956497f367193a8d8dc2", "Url": "https://api.github.com/repos/live4thee/zstack", "Date": "2016-02-28T13:12:10Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (info.isDefaultL3Network) { info.hostname = hostnames.get(nic.getVmInstanceUuid()); if ((info.hostname) == null) { info.hostname = nic.getIp().replaceAll(\"\\\\.\", \"-\"); } if ((info.dnsDomain) != null) { info.hostname = java.lang.String.format(\"%s.%s\", info.hostname, info.dnsDomain); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8483/buggy-version/plugin.flatNetworkProvider.src.main.java.org.zstack.network.service.flat.FlatDhcpBackend.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "a11f19241e0743ffc192956497f367193a8d8dc2", "Url": "https://api.github.com/repos/live4thee/zstack", "Date": "2016-02-28T13:12:10Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ctors.contains(ud.name()))) { for (org.flasck.flas.typechecker.Type cs : ud.cases) if (!(ctors.contains(cs.name()))) continue nextUnion; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7305/buggy-version/src.main.java.org.flasck.flas.newtypechecker.TypeChecker2.java", "BodyUseAPI": ["java.util.List<java.lang.String>.contains(cs.name())"], "Fixed commit": "3a8e1a2d2ac44eb891fe64116fdc926535a79b0d", "Url": "https://api.github.com/repos/zinikiGareth/flasckfl", "Date": "2016-11-07T14:30:47Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rw.primitives.containsKey(nt.name)) ret = rw.primitives.get(nt.name); else if (rw.structs.containsKey(nt.name)) ret = rw.structs.get(nt.name); else if (rw.types.containsKey(nt.name)) ret = rw.types.get(nt.name); else if (rw.objects.containsKey(nt.name)) ret = rw.objects.get(nt.name); else throw new org.zinutils.exceptions.UtilException((\"Could not find type \" + (nt.name)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/7305/buggy-version/src.main.java.org.flasck.flas.newtypechecker.TypeChecker2.java", "BodyUseAPI": ["rw.structs.get(nt.name)", "rw.structs.containsKey(nt.name)", "rw.types.containsKey(nt.name)", "rw.types.get(nt.name)", "rw.objects.get(nt.name)", "rw.objects.containsKey(nt.name)", "rw.primitives.get(nt.name)"], "Fixed commit": "3a8e1a2d2ac44eb891fe64116fdc926535a79b0d", "Url": "https://api.github.com/repos/zinikiGareth/flasckfl", "Date": "2016-11-07T14:30:47Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.api.codegen.metacode.InitCodeNode.getFieldConfig()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (methodContext.getFeatureConfig().useResourceNameFormatOption(fieldConfig)) { if (fieldConfig.requiresParamTransformationFromAny()) { expectedTransformFunction = namer.getToStringMethod(); actualTransformFunction = namer.getToStringMethod(); }else if (fieldConfig.requiresParamTransformation()) { expectedTransformFunction = namer.getResourceOneofCreateMethod(methodContext.getTypeTable(), fieldConfig); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/130/buggy-version/src.main.java.com.google.api.codegen.transformer.InitCodeTransformer.java", "BodyUseAPI": ["com.google.api.codegen.transformer.GapicMethodContext.getTypeTable()", "com.google.api.codegen.config.FieldConfig.requiresParamTransformation()", "com.google.api.codegen.config.FieldConfig.requiresParamTransformationFromAny()", "com.google.api.codegen.transformer.SurfaceNamer.getResourceOneofCreateMethod(methodContext.getTypeTable(),com.google.api.codegen.config.FieldConfig)"], "Fixed commit": "04e5e8f7f1dba99d246509b4900a61569a860970", "Url": "https://api.github.com/repos/landrito/toolkit", "Date": "2017-07-26T20:31:48Z"},
{"Line": "=>811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fieldConfig.requiresParamTransformationFromAny())) { transformParamFunctionName = namer.getResourceOneofCreateMethod(typeTable, fieldConfig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/130/buggy-version/src.main.java.com.google.api.codegen.transformer.StaticLangApiMethodTransformer.java", "BodyUseAPI": ["com.google.api.codegen.transformer.SurfaceNamer.getResourceOneofCreateMethod(com.google.api.codegen.transformer.ModelTypeTable,com.google.api.codegen.config.FieldConfig)"], "Fixed commit": "04e5e8f7f1dba99d246509b4900a61569a860970", "Url": "https://api.github.com/repos/landrito/toolkit", "Date": "2017-07-26T20:31:48Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.CheckBox.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(presenceArrayList.contains(c))) { presenceArrayList.add(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/6294/buggy-version/src.org.chat.android.ClientsAdapter.java", "BodyUseAPI": ["java.util.List<org.chat.android.models.Client>.add(org.chat.android.models.Client)"], "Fixed commit": "bbc3fe15ae65c72fca5b525572529c79f77c7a8e", "Url": "https://api.github.com/repos/chat-health/chat.android", "Date": "2014-08-14T19:07:43Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(t[5].equals(\"true\"))) Game.entities.entities.get(index).setNetworkString((((((t[1]) + \":\") + (t[2])) + \":\") + (t[3])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3618/buggy-version/src.pudgewars.network.ClientNetwork.java", "BodyUseAPI": ["Game.entities.entities.get(index).setNetworkString(java.lang.String)"], "Fixed commit": "e64a45804b62d50a5c30546fd12e66430030ac9f", "Url": "https://api.github.com/repos/thejosh223/pudgewars", "Date": "2013-03-01T03:41:05Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.ide.eclipse.boot.dash.views.OpenLaunchConfigAction.getSingleSelectedElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (element instanceof org.springframework.ide.eclipse.boot.dash.model.LaunchConfDashElement) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1607/buggy-version/plugins.org.springframework.ide.eclipse.boot.dash.src.org.springframework.ide.eclipse.boot.dash.views.OpenLaunchConfigAction.java", "BodyUseAPI": [], "Fixed commit": "399e301a7edee0423b1012b049cc64e3d257d58d", "Url": "https://api.github.com/repos/spring-projects/spring-ide", "Date": "2015-12-19T01:13:17Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedRow == (-1)) { filteredValues[i] = java.lang.Double.NaN; }else { filteredValues[i] = values[selectedRow]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/3493/buggy-version/core.model.src.main.java.org.activityinfo.model.query.DoubleArrayColumnView.java", "BodyUseAPI": [], "Fixed commit": "41ccdb5ec1a04477bd489d0ae4890526c8aa1971", "Url": "https://api.github.com/repos/bedatadriven/activityinfo", "Date": "2017-06-05T07:42:22Z"},
{"Line": "=>821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((plugin == null) || (!(plugin.isEnabled()))) { for (com.elmakers.mine.bukkit.api.effect.EffectPlay play : cancelEffects) { play.cancel(); } }else { plugin.getServer().getScheduler().scheduleSyncDelayedTask(plugin, new java.lang.Runnable() { @java.lang.Override public void run() { for (com.elmakers.mine.bukkit.api.effect.EffectPlay play : cancelEffects) { play.cancel(); } } }, 1L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/8077/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.action.builtin.CustomProjectileAction.java", "BodyUseAPI": ["plugin.getServer().getScheduler()", "org.bukkit.plugin.Plugin.getServer()", "plugin.getServer().getScheduler().scheduleSyncDelayedTask(org.bukkit.plugin.Plugin,java.lang.Runnable,long)"], "Fixed commit": "7488f8dd2f5489fb4bedb763f78536280029c6ee", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-04-03T23:26:19Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.input) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4880/buggy-version/deeplearning4j-core.src.main.java.org.deeplearning4j.nn.layers.recurrent.LSTM.java", "BodyUseAPI": [], "Fixed commit": "4012f5b56ec68ca2e7e2594448951af32d45ad55", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2015-07-14T15:10:40Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (conf.isMinimize()) score = -(score);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/4880/buggy-version/deeplearning4j-core.src.main.java.org.deeplearning4j.nn.layers.recurrent.LSTM.java", "BodyUseAPI": [], "Fixed commit": "4012f5b56ec68ca2e7e2594448951af32d45ad55", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2015-07-14T15:10:40Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((AdvancedXP.instance.theme) != null) { java.lang.String tempFileNameStorage = AdvancedXP.instance.theme.fileName; AdvancedXP.instance.theme = co.bugg.advancedxp.util.FileUtil.deserializeTheme(new java.io.File(((AdvancedXP.instance.themesPath) + tempFileNameStorage))); AdvancedXP.instance.theme.fileName = tempFileNameStorage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/1463/buggy-version/src.main.java.co.bugg.advancedxp.AdvancedXPEventHandler.java", "BodyUseAPI": [], "Fixed commit": "e210470a852e97b049ea095f400549790be1bcc2", "Url": "https://api.github.com/repos/bugfroggy/AdvancedXP", "Date": "2017-09-28T01:23:09Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(e instanceof java.lang.Exception)) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/2941/buggy-version/core.common.src.main.java.alluxio.util.CommonUtils.java", "BodyUseAPI": [], "Fixed commit": "26ffbc0ac2b1d5ef446197ba067e2c1189b6d921", "Url": "https://api.github.com/repos/peisun1115/alluxio", "Date": "2017-05-18T18:36:40Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pos.inside(new halfardawid.notepadx.util.vectors.Vector2i(bitmap)))) { android.util.Log.wtf(halfardawid.notepadx.activity.sketch_editor.SmartBitmap.TAG, (((\"Yea, good luck painting \" + pos) + \" when whole bitmap has \") + (new halfardawid.notepadx.util.vectors.Vector2i(bitmap)))); }else bitmap.setPixel(pos.x, pos.y, c);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/5453/buggy-version/app.src.main.java.halfardawid.notepadx.activity.sketch_editor.SmartBitmap.java", "BodyUseAPI": ["android.graphics.Bitmap.setPixel(pos.x,pos.y,int)", "android.util.Log.wtf(java.lang.String,(((\"Yea, good luck painting \" + pos) + \" when whole bitmap has \") + (new halfardawid.notepadx.util.vectors.Vector2i(bitmap))))"], "Fixed commit": "38b40468e5aa8ff75bad33de8579a7313e88a197", "Url": "https://api.github.com/repos/halfiuuu/Notepad_x", "Date": "2017-10-29T16:44:26Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object instanceof java.util.ArrayList) { int sizeArrayObject = ((java.util.ArrayList) (object)).size(); jsonGenerator.writeArrayFieldStart(fieldName); for (int i = 0; i < sizeArrayObject; i++) { java.lang.Object element = ((java.util.ArrayList) (object)).get(i); jsonGenerator.writeObject(element); } jsonGenerator.writeEndArray(); }else { jsonGenerator.writeObjectField(fieldName, object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V129/802/buggy-version/sdk-libs.halo-content.src.main.java.com.mobgen.halo.android.content.models.Operator.java", "BodyUseAPI": ["com.fasterxml.jackson.core.JsonGenerator.writeObjectField(java.lang.String,java.lang.Object)"], "Fixed commit": "0c77ed618a33e03177e52a6d4ad9155d9e4a5f4a", "Url": "https://api.github.com/repos/mobgen/halo-android", "Date": "2017-04-28T11:41:08Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getCommunitaryCards().size()) > 1) { texasHoldemPoker.Model.PokerHandEvaluation handEvaluation = texasHoldemPoker.Business.HandEvaluator.getBestHand(player, this.getCommunitaryCards()); playersEvaluation.add(handEvaluation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1304/buggy-version/TexasHoldemPoker.src.texasHoldemPoker.Model.PokerGame.java", "BodyUseAPI": [], "Fixed commit": "d413b8b180e473598d6c764517a03063638952b2", "Url": "https://api.github.com/repos/facundoduran/Java", "Date": "2014-10-14T02:33:49Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"Y\".equalsIgnoreCase(projectDetail.getIsUpdate()))) { com.psk.pms.model.ProjectDetail projDetail = new com.psk.pms.model.ProjectDetail(); projDetail.setEmployeeId(projectDetail.getEmployeeId()); projDetail.setWorkoutPercentage(java.math.BigDecimal.ZERO); model.addAttribute(\"projectForm\", projDetail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6908/buggy-version/src.main.java.com.psk.pms.controller.ProjectController.java", "BodyUseAPI": ["com.psk.pms.model.ProjectDetail.getEmployeeId()", "com.psk.pms.model.ProjectDetail.setEmployeeId(projectDetail.getEmployeeId())"], "Fixed commit": "a2fcc7ffa00c9bd6c4e07d6861e3a885eb19e349", "Url": "https://api.github.com/repos/devintqa/pms", "Date": "2015-11-18T14:48:44Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getPointerCount()) >= 2) { double delta_x = (event.getX(1)) - (event.getX(0)); double delta_y = (event.getY(1)) - (event.getY(0)); double radians = java.lang.Math.atan2(delta_x, delta_y); return ((float) (java.lang.Math.toDegrees(radians))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1787/buggy-version/app.src.main.java.multitouch.multitouchapp.CanvasView.java", "BodyUseAPI": ["android.view.MotionEvent.getX(int)", "android.view.MotionEvent.getX(int)", "android.view.MotionEvent.getY(int)", "android.view.MotionEvent.getY(int)"], "Fixed commit": "79e6af7439a6d515b3f203766128a840dd6311e7", "Url": "https://api.github.com/repos/lwinston7/multitouch", "Date": "2016-11-19T06:49:13Z"},
{"Line": "=>1054", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stopTag == null) { android.widget.Toast.makeText(this, \"Ending location is not set\", Toast.LENGTH_LONG).show(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8884/buggy-version/src.boston.Bus.Map.main.Main.java", "BodyUseAPI": [], "Fixed commit": "8b94e92ee72a8eefaa87265e85f0fff1a49f2e93", "Url": "https://api.github.com/repos/bostonbusmap/bostonbusmap", "Date": "2012-09-14T21:48:32Z"},
{"Line": "=>1050", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startTag == null) { android.widget.Toast.makeText(this, \"Starting location is not set\", Toast.LENGTH_LONG).show(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8884/buggy-version/src.boston.Bus.Map.main.Main.java", "BodyUseAPI": [], "Fixed commit": "8b94e92ee72a8eefaa87265e85f0fff1a49f2e93", "Url": "https://api.github.com/repos/bostonbusmap/bostonbusmap", "Date": "2012-09-14T21:48:32Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (str.isEmpty()) { endDate = list.model.Date.getFloatingDate(); }else { endDate = list.model.Date.tryParse(str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7078/buggy-version/src.list.CommandParser.java", "BodyUseAPI": ["list.model.Date.tryParse(java.lang.String)"], "Fixed commit": "d4855629a12f57f87bedffae705dd0aaa45b472f", "Url": "https://api.github.com/repos/mikelimantara/List", "Date": "2014-11-06T06:33:05Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (str.isEmpty()) { startDate = list.model.Date.getFloatingDate(); }else { startDate = list.model.Date.tryParse(str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7078/buggy-version/src.list.CommandParser.java", "BodyUseAPI": ["list.model.Date.tryParse(java.lang.String)"], "Fixed commit": "d4855629a12f57f87bedffae705dd0aaa45b472f", "Url": "https://api.github.com/repos/mikelimantara/List", "Date": "2014-11-06T06:33:05Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerJoinEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((player.getGameMode()) != (org.bukkit.GameMode.CREATIVE)) { java.util.HashMap<java.lang.Integer, java.lang.String> bound = com.projectkorra.ProjectKorra.Methods.getBendingPlayer(player.getName()).getAbilities(); for (java.lang.String str : bound.values()) if ((str.equalsIgnoreCase(\"AirSpout\")) || (str.equalsIgnoreCase(\"WaterSpout\"))) { final org.bukkit.entity.Player fplayer = player; new org.bukkit.scheduler.BukkitRunnable() { public void run() { fplayer.setFlying(false); fplayer.setAllowFlight(false); } }.runTaskLater(ProjectKorra.plugin, 2); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9173/buggy-version/src.com.projectkorra.ProjectKorra.PKListener.java", "BodyUseAPI": ["com.projectkorra.ProjectKorra.Methods.getBendingPlayer(player.getName())", "org.bukkit.entity.Player.getName()", "com.projectkorra.ProjectKorra.Methods.getBendingPlayer(player.getName()).getAbilities()"], "Fixed commit": "08bb3b0819776fc4948a54429b70a12d28cf532d", "Url": "https://api.github.com/repos/ProjectKorra/ProjectKorra", "Date": "2014-11-23T03:50:30Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.wequick.small.Bundle.getPatchFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (patch.exists()) { if ((patch.lastModified()) <= (plugin.lastModified())) { android.util.Log.e(net.wequick.small.ApkBundleLauncher.TAG, \"Patch file should be later than built-in!\"); patch.delete(); }else { plugin = patch; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8968/buggy-version/Android.DevSample.small.src.main.java.net.wequick.small.ApkBundleLauncher.java", "BodyUseAPI": ["java.io.File.lastModified()", "java.io.File.delete()"], "Fixed commit": "f4ff629fd96cbd61c0879f64bd8e115aca8ae52e", "Url": "https://api.github.com/repos/wu4321/Small", "Date": "2016-02-23T02:00:13Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((server.RoomsController.instance) == null) server.RoomsController.instance = new server.RoomsController();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7717/buggy-version/src.server.RoomsController.java", "BodyUseAPI": [], "Fixed commit": "6ad5e4b3531182a935e8a13fbef9c809485dbeab", "Url": "https://api.github.com/repos/NoodyYeung/PokerGame", "Date": "2017-11-05T08:01:19Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x >= 0) && (y >= 0)) && (x < (width))) && (y < (height))) { return ((values[x][y]) & flags) != 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6728/buggy-version/game.src.main.java.io.mopar.game.model.TraversalMap.java", "BodyUseAPI": [], "Fixed commit": "5c3ac66cb8112fc9266b4a73959efdf499ac1f61", "Url": "https://api.github.com/repos/zuppers/mopar", "Date": "2015-07-30T01:48:30Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.muikku.plugins.schooldatapyramus.rest.PyramusClient.get(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (educationType == null) { logger.severe(java.lang.String.format(\"Could not find educationType %d\", courseEducationType.getEducationTypeId())); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4965/buggy-version/muikku-school-data-pyramus.src.main.java.fi.muikku.plugins.schooldatapyramus.PyramusWorkspaceSchoolDataBridge.java", "BodyUseAPI": [], "Fixed commit": "08279f626484cbd6fdbf7079144a1be871863bd5", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2016-01-21T04:43:07Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.muikku.plugins.schooldatapyramus.rest.PyramusClient.get(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (educationSubtype != null) { java.lang.String educationSubtypeCode = educationSubtype.getCode(); courseEducationSubtypeList.add(educationSubtypeCode); }else { logger.severe(java.lang.String.format(\"Could not find education subtype %d from type %d\", courseEducationSubtype.getEducationSubtypeId(), educationType.getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4965/buggy-version/muikku-school-data-pyramus.src.main.java.fi.muikku.plugins.schooldatapyramus.PyramusWorkspaceSchoolDataBridge.java", "BodyUseAPI": ["fi.pyramus.rest.model.EducationSubtype.getCode()"], "Fixed commit": "08279f626484cbd6fdbf7079144a1be871863bd5", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2016-01-21T04:43:07Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (((illness != null) && (!(illness.equals(\"\")))) && (!(illness.equals(\"null\")))) { ill_type = io.github.davidg95.equestricraftplugin.Illness.valueOf(illness); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1571/buggy-version/src.main.java.io.github.davidg95.equestricraftplugin.database.Database.java", "BodyUseAPI": ["io.github.davidg95.equestricraftplugin.Illness.valueOf(java.lang.String)"], "Fixed commit": "7aaf12d6d48efd6bbe23b9411a9944b231b4138d", "Url": "https://api.github.com/repos/davidg95/EquestriCraftPlugin", "Date": "2017-11-16T15:22:15Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retry >= maxRetry) throw e;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4290/buggy-version/core.src.main.java.com.orientechnologies.orient.core.command.script.OCommandExecutorScript.java", "BodyUseAPI": [], "Fixed commit": "b5fb5fea7a4b7062c2800994cd759bd28ee8b713", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-04-24T18:17:18Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retry >= maxRetry) throw e;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4290/buggy-version/core.src.main.java.com.orientechnologies.orient.core.command.script.OCommandExecutorScript.java", "BodyUseAPI": [], "Fixed commit": "b5fb5fea7a4b7062c2800994cd759bd28ee8b713", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-04-24T18:17:18Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retry >= maxRetry) throw e;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4290/buggy-version/core.src.main.java.com.orientechnologies.orient.core.command.script.OCommandExecutorScript.java", "BodyUseAPI": [], "Fixed commit": "b5fb5fea7a4b7062c2800994cd759bd28ee8b713", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-04-24T18:17:18Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retry >= maxRetry) throw e;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4290/buggy-version/core.src.main.java.com.orientechnologies.orient.core.command.script.OCommandExecutorScript.java", "BodyUseAPI": [], "Fixed commit": "b5fb5fea7a4b7062c2800994cd759bd28ee8b713", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-04-24T18:17:18Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mobileInfo == null) { setHasNetwork(false, \"No active data connection\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3476/buggy-version/native.SalesforceSDK.src.com.salesforce.androidsdk.auth.HttpAccess.java", "BodyUseAPI": [], "Fixed commit": "c497438ffae8bf97ed2bbd8bb8acd9b61ba590f6", "Url": "https://api.github.com/repos/bhariharan/SalesforceMobileSDK-Android", "Date": "2012-08-14T19:15:13Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.dennislam.myapplication.activity.LandScapeBarChart.getSharedPreferences(java.lang.String,Activity.MODE_PRIVATE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"zh\".equals(prefs.getString(\"Language\", \"\"))) { java.util.Locale myLocale = new java.util.Locale(\"zh\"); android.content.res.Resources res = getResources(); android.util.DisplayMetrics dm = res.getDisplayMetrics(); android.content.res.Configuration conf = res.getConfiguration(); conf.locale = myLocale; res.updateConfiguration(conf, dm); java.util.Locale.setDefault(myLocale); }else { java.util.Locale myLocale = new java.util.Locale(\"en\"); android.content.res.Resources res = getResources(); android.util.DisplayMetrics dm = res.getDisplayMetrics(); android.content.res.Configuration conf = res.getConfiguration(); conf.locale = myLocale; res.updateConfiguration(conf, dm); java.util.Locale.setDefault(myLocale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8030/buggy-version/app.src.main.java.com.example.dennislam.myapplication.activity.LandScapeBarChart.java", "BodyUseAPI": [], "Fixed commit": "4bd3d54e1852cd8e070123ea77f36bd3c6454e39", "Url": "https://api.github.com/repos/on999you/JobLibrary", "Date": "2017-04-18T08:09:03Z"},
{"Line": "=>1749", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((audioTrack.getState()) != (android.media.AudioTrack.STATE_INITIALIZED)) loadAudioTrack();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6703/buggy-version/app.src.main.java.com.nakedape.mixmaticlooppad.LaunchPadActivity.java", "BodyUseAPI": [], "Fixed commit": "3d9ff4a12b2f874852d189092cfc4316f345e42b", "Url": "https://api.github.com/repos/boozey/MixMaticTouchPad", "Date": "2014-11-10T03:48:01Z"},
{"Line": "=>1807", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((audioTrack.getPlayState()) != (android.media.AudioTrack.PLAYSTATE_PLAYING)) { android.util.Log.d(\"AudioTrack\", ((java.lang.String.valueOf(id)) + \" uninitialized\")); loadAudioTrack(); if (((audioTrack.getState()) == (android.media.AudioTrack.STATE_INITIALIZED)) && ((audioTrack.getPlayState()) != (android.media.AudioTrack.PLAYSTATE_PLAYING))) audioTrack.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6703/buggy-version/app.src.main.java.com.nakedape.mixmaticlooppad.LaunchPadActivity.java", "BodyUseAPI": ["android.media.AudioTrack.play()", "android.media.AudioTrack.getState()", "android.media.AudioTrack.getPlayState()"], "Fixed commit": "3d9ff4a12b2f874852d189092cfc4316f345e42b", "Url": "https://api.github.com/repos/boozey/MixMaticTouchPad", "Date": "2014-11-10T03:48:01Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.zcu.kiv.eeg.mobile.base.ui.experiment.ElectrodeLocationAddActivity.findViewById(R.id.electrode_add_description)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cz.zcu.kiv.eeg.mobile.base.utils.ValidationUtils.isEmpty(description.getText().toString())) error.append(getString(R.string.error_empty_field)).append(\" (\").append(getString(R.string.dialog_description)).append(\")\").append('\\n');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4468/buggy-version/src.cz.zcu.kiv.eeg.mobile.base.ui.experiment.ElectrodeLocationAddActivity.java", "BodyUseAPI": [], "Fixed commit": "3de0546f2c3b5b5f01d01a7019050904c43bebde", "Url": "https://api.github.com/repos/NEUROINFORMATICS-GROUP-FAV-KIV-ZCU/eeg-database-for-android", "Date": "2013-03-31T13:30:23Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.kiip.api.Kiip.getInstance()) == null) { }else { me.kiip.api.Kiip.getInstance().endSession(((android.app.Activity) (ctx)), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6199/buggy-version/android.me.kiip.api.phonegap.KiipPhoneGapPlugin.java", "BodyUseAPI": [], "Fixed commit": "f9200c803ac1f1db6c6a4e3f398f8e40d1cff111", "Url": "https://api.github.com/repos/kiip/phonegap-plugin", "Date": "2012-06-16T03:23:25Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i == 0) || (i == 1)) java.lang.System.out.println((((\"t\" + i) + \": \") + t));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/726/buggy-version/src.algorithms.provers.Prover.java", "BodyUseAPI": ["java.io.PrintStream.println((((\"t\" + i) + \": \") + t))"], "Fixed commit": "98975edf5f82909ed0044cc605d07dcdb18dbd81", "Url": "https://api.github.com/repos/tagel/Verifier", "Date": "2013-03-05T08:06:00Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.web.entity.dom.Content.getProperty(org.structr.core.property.Property<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(\"text/html\".equals(_contentType))) { _content = escapeForHtml(_content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2607/buggy-version/structr-ui.src.main.java.org.structr.web.entity.dom.Content.java", "BodyUseAPI": [], "Fixed commit": "4efe905347158025dd132ff3475bed56709a283a", "Url": "https://api.github.com/repos/structr/structr", "Date": "2013-09-06T10:26:06Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) == (Build.VERSION_CODES.JELLY_BEAN_MR1)) { mWebView.setLayerType(View.LAYER_TYPE_SOFTWARE, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5792/buggy-version/src.main.java.org.cobaltians.cobalt.fragments.CobaltFragment.java", "BodyUseAPI": [], "Fixed commit": "00b6f1fa8a7a149a3539843b2d3e2e0b8b53c26f", "Url": "https://api.github.com/repos/cobaltians/Cobalt-Android", "Date": "2016-06-29T08:46:14Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isCacheOutdated) { fillForecast(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3148/buggy-version/Weathera.app.src.main.java.io.github.kbiakov.weathera.fragments.DailyFragment.java", "BodyUseAPI": [], "Fixed commit": "5fcfbb20db12dfc5181b8a70bae3b2cb2e774f7a", "Url": "https://api.github.com/repos/kbiakov/weathera-android", "Date": "2015-08-11T09:44:43Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((md) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4722/buggy-version/android.src.main.java.com.tanguyantoine.react.MusicControlModule.java", "BodyUseAPI": [], "Fixed commit": "9aae8ee4e30445223df56ade50aeb9324fb98657", "Url": "https://api.github.com/repos/dnish/react-native-music-control", "Date": "2017-07-04T15:14:04Z"},
{"Line": "=>1039", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i + index) >= (haystack.length())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2917/buggy-version/src.net.fathomsoft.nova.util.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "0b4bcd59f835ddc686a39c90486798db8f8ab435", "Url": "https://api.github.com/repos/NovaFoundation/Nova", "Date": "2016-08-30T02:14:59Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mComplaintHashMap) != null) { mLocationFab.setVisibility(View.VISIBLE); mFilterFab.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6570/buggy-version/app.src.main.java.com.rescribe.ui.fragments.book_appointment.BookAppointFilteredDoctorListFragment.java", "BodyUseAPI": [], "Fixed commit": "4245c346a0d0bd08b07966c82659c1b2f8795e47", "Url": "https://api.github.com/repos/sandeepbahalkar123/myrescribe_repo", "Date": "2017-12-01T15:07:50Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((suggestion.getText()) != null) && ((suggestion.getText().length()) != 0)) { this.deleteText(lastWordCoord, this.getCaretPosition()); popup.hide(); this.appendText(suggestion.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4521/buggy-version/src.com.cssquids.trimtext.UI.Editor.java", "BodyUseAPI": ["com.cssquids.trimtext.UI.Label.getText()", "com.cssquids.trimtext.UI.Editor.appendText(suggestion.getText())"], "Fixed commit": "6fa7d1e08833a3467f6c07406d726fb26fffc546", "Url": "https://api.github.com/repos/bluegoo192/trimtext", "Date": "2017-03-17T19:39:55Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (issue.has(\"align\")) { if (issue.getString(\"align\").equals(\"vertical\")) group.setOrientation(LinearLayout.VERTICAL); else group.setOrientation(LinearLayout.HORIZONTAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5212/buggy-version/src.ufpr.labcrono.issue.Issue.java", "BodyUseAPI": ["issue.getString(\"align\").equals(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "2724321afa5883723423e9d769f2c7c6cfdce049", "Url": "https://api.github.com/repos/bombark/labcrono-issue", "Date": "2015-08-04T17:59:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.senaisp.personalbooks.view.PerfilActivity.findViewById(R.id.drawer_layout)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (drawer != null) drawer.closeDrawer(GravityCompat.START);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3400/buggy-version/app.src.main.java.com.example.senaisp.personalbooks.view.PerfilActivity.java", "BodyUseAPI": ["android.support.v4.widget.DrawerLayout.closeDrawer(GravityCompat.START)"], "Fixed commit": "8ef8998befae10bdfe72210fbbc4caba888baa74", "Url": "https://api.github.com/repos/Gevobooks/personal-mobile", "Date": "2016-12-03T15:42:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.tajo.plan.util.PartitionedTableScanNode.getQual()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (qual != null) { if ((qual.getType()) != (EvalType.IS_NULL)) { return false; }else { if ((((org.apache.tajo.plan.util.IsNullEval) (qual)).getChild().getType()) != (EvalType.FIELD)) { return false; } org.apache.tajo.plan.util.FieldEval field = ((org.apache.tajo.plan.util.FieldEval) (((org.apache.tajo.plan.util.IsNullEval) (qual)).getChild())); if (!(field.getColumnRef().equals(column))) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3419/buggy-version/tajo-plan.src.main.java.org.apache.tajo.plan.util.PlannerUtil.java", "BodyUseAPI": ["org.apache.tajo.plan.util.EvalNode.getType()"], "Fixed commit": "55af5a34a00bc983a0845e2b029a70713c0d513d", "Url": "https://api.github.com/repos/tyotta/tajo", "Date": "2015-08-27T08:14:22Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.getSchemaClass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (cls != null) { if (cls.isSubClassOf(\"V\")) db.command(new com.orientechnologies.orient.core.sql.OCommandSQL((\"DELETE VERTEX \" + recordId))).execute(); else if (cls.isSubClassOf(\"E\")) db.command(new com.orientechnologies.orient.core.sql.OCommandSQL((\"DELETE EDGE \" + recordId))).execute(); else doc.delete(); }else doc.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5696/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.http.command.delete.OServerCommandDeleteDocument.java", "BodyUseAPI": ["com.orientechnologies.orient.core.metadata.schema.OClass.isSubClassOf(java.lang.String)", "com.orientechnologies.orient.core.metadata.schema.OClass.isSubClassOf(java.lang.String)"], "Fixed commit": "1413325787ffec2f80a4eb67d1ece1ad999baf5e", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-12-11T09:45:21Z"},
{"Line": "=>915", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ke.isActionKey()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1331/buggy-version/rameses-client-ui.src.com.rameses.rcp.control.table.DataTableComponent.java", "BodyUseAPI": [], "Fixed commit": "070dce8c2b04d9a39386e4bcd12ea0248c54ab57", "Url": "https://api.github.com/repos/ramesesinc/incubation", "Date": "2016-07-04T04:00:51Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tweet.getReplyTo()) != null) params.put(\"in_reply_to_status_id\", tweet.getReplyTo());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2041/buggy-version/app.src.main.java.io.androidblog.apps.mysimpletweets.network.TwitterClient.java", "BodyUseAPI": ["io.androidblog.apps.mysimpletweets.models.Tweet.getReplyTo()", "com.loopj.android.http.RequestParams.put(java.lang.String,tweet.getReplyTo())"], "Fixed commit": "96c2ba6c6f5d6fd2fe2900ffdb71ca5e72f42685", "Url": "https://api.github.com/repos/IsabelPalomar/little-twitter-client", "Date": "2016-08-08T06:53:17Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Command.Tag.findCategory(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (category == null) { this.addCategory(tag, task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3367/buggy-version/DODO.src.Command.Tag.java", "BodyUseAPI": [], "Fixed commit": "e0df4d8866371b182c3008b184b3bce98ab97995", "Url": "https://api.github.com/repos/cs2103jan2016-W14-2J/main", "Date": "2016-04-03T15:46:09Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.management.ManagementFactory.getOperatingSystemMXBean()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (osmxb instanceof com.sun.management.OperatingSystemMXBean) { physicalTotal = ((com.sun.management.OperatingSystemMXBean) (osmxb)).getTotalPhysicalMemorySize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8049/buggy-version/rocketmq-common.src.main.java.com.alibaba.rocketmq.common.MixAll.java", "BodyUseAPI": [], "Fixed commit": "9beda2629bdfe0a1b5cf5c27306c9cea91db3fd0", "Url": "https://api.github.com/repos/bitisony/RocketMQ", "Date": "2013-07-30T03:07:40Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(result.has(\"success\"))) { if ((result.has(\"code\")) && (result.has(\"error\"))) throw new com.sciamlab.common.exception.SciamlabWebApplicationException(result.getInt(\"code\"), result.getInt(\"code\"), result.getString(\"error\"), result.getString(\"msg\")); else throw new com.sciamlab.common.exception.InternalServerErrorException(result.toString()); }else if (!(result.getBoolean(\"success\"))) { throw new com.sciamlab.ckan4j.exception.CKANException(result.getJSONObject(\"error\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7577/buggy-version/src.main.java.com.sciamlab.ckan4j.CKANApiClient.java", "BodyUseAPI": ["org.json.JSONObject.getBoolean(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.has(java.lang.String)", "org.json.JSONObject.has(java.lang.String)", "org.json.JSONObject.toString()", "org.json.JSONObject.getInt(java.lang.String)", "org.json.JSONObject.getInt(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "42a99f26f38087dcc7941d7fa5e8c3fbc30ad792", "Url": "https://api.github.com/repos/sciamlab/ckan4j", "Date": "2016-01-28T17:03:00Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((response.getVehicles()) != null) && ((response.getVehicles().size()) > 0)) { vehicleListAdapter.addAll(response.getVehicles()); vehicleListAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4875/buggy-version/app.src.main.java.com.fmt.cheaptrip.fragments.ProfileFragment.java", "BodyUseAPI": ["com.fmt.cheaptrip.webservices.response.WSResponseObject.getVehicles()", "android.widget.ArrayAdapter<com.fmt.cheaptrip.entities.Vehicle>.addAll(response.getVehicles())"], "Fixed commit": "37726f0cfc79945fd2941432ef3b14819e13a32a", "Url": "https://api.github.com/repos/TCM5/CheapTrip", "Date": "2016-05-30T21:39:44Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxAttempt > 0) { maxAttempt--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2363/buggy-version/WEB-INF.src.edu.wustl.catissuecore.processor.CatissueLoginProcessor.java", "BodyUseAPI": [], "Fixed commit": "7b1819cadb1ffb7192d8bad5764ed587136128b5", "Url": "https://api.github.com/repos/NCIP/catissue-core", "Date": "2014-02-27T10:45:35Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.moveSpeed) > 10) this.moveSpeed = 10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4582/buggy-version/EoA.src.de.bib.pbg2h15a.Player.java", "BodyUseAPI": [], "Fixed commit": "8467fc19e0df47d05a045f53f878e5abc0446114", "Url": "https://api.github.com/repos/timkk/EoA", "Date": "2017-01-17T11:21:09Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((skillsList == null) || ((skillsList.size()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4432/buggy-version/app.src.main.java.com.hackthenorth.android.ui.MentorsFragment.java", "BodyUseAPI": [], "Fixed commit": "796c14963a7dfda3a139b4a250f1fc6f332c3bed", "Url": "https://api.github.com/repos/hackthenorth/hackthenorth-android", "Date": "2014-08-17T01:31:58Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9034/buggy-version/app.src.main.java.com.pasta.mensadd.fragments.MealWeekFragment.java", "BodyUseAPI": [], "Fixed commit": "f01675f7780e7cde529a14ba49eb4a42b37a759e", "Url": "https://api.github.com/repos/julianctni/mensaDD", "Date": "2016-08-18T16:36:35Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(\"\".equals(request.getParameter(\"token\")))) && ((request.getParameter(\"token\")) != null)) { driverToken = java.lang.Integer.valueOf(request.getParameter(\"token\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3892/buggy-version/tss-web.src.main.java.com.netcracker.tss.web.servlet.RegistrationServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.Integer.valueOf(request.getParameter(\"token\"))"], "Fixed commit": "9852b428e746dc759e3881793406d3ac7cbf7cc8", "Url": "https://api.github.com/repos/tss-ta/tss", "Date": "2015-05-12T17:33:01Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isSpanInRange(span, start, end)) { getEditableText().removeSpan(span); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/584/buggy-version/rich_edittext.src.main.java.com.pxh.richedittext.RichEditText.java", "BodyUseAPI": ["getEditableText().removeSpan(android.text.style.StyleSpan)"], "Fixed commit": "b38dfb4cf2e699db2a81758fda1c1704a08c4397", "Url": "https://api.github.com/repos/nebulae-pan/RichEditText", "Date": "2016-06-01T07:13:07Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDetailImageView.getDrawable()) != null) { mDetailImageView.setScale(1.0F, true); mDetailImageView.postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { float currentX = getDisplayedImageX(mDetailImageView); float targetX = -(((getDisplayedImageWidth(mDetailImageView)) / 2) - ((mDetailImageView.getWidth()) / 2)); mDetailImageView.post(new me.zhang.bingo.ImageDetailFragment.AnimatedMoveRunnable(currentX, targetX, backPressRunnable)); } }, me.zhang.bingo.ImageDetailFragment.TRANSITION_DURATION); }else { backPressRunnable.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/478/buggy-version/app.src.main.java.me.zhang.bingo.ImageDetailFragment.java", "BodyUseAPI": ["me.zhang.bingo.ImageDetailFragment.5.getDisplayedImageWidth(com.github.chrisbanes.photoview.PhotoView)", "me.zhang.bingo.ImageDetailFragment.5.getDisplayedImageX(com.github.chrisbanes.photoview.PhotoView)", "com.github.chrisbanes.photoview.PhotoView.getWidth()", "com.github.chrisbanes.photoview.PhotoView.postDelayed(java.lang.Runnable,int)", "com.github.chrisbanes.photoview.PhotoView.post(me.zhang.bingo.ImageDetailFragment.AnimatedMoveRunnable)", "com.github.chrisbanes.photoview.PhotoView.setScale(float,boolean)"], "Fixed commit": "ab2f71a12d98cf768b23b992ff25d9037694f49e", "Url": "https://api.github.com/repos/zhangPATHngdong/bingo", "Date": "2017-10-16T09:19:15Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((varNum()) > 1) net.sf.javabdd.BuDDyFactory.reorder0(m.id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5429/buggy-version/JavaBDD.net.sf.javabdd.BuDDyFactory.java", "BodyUseAPI": [], "Fixed commit": "6de6751a4bbd55fbdefcd65bbb3b011f6523a4fd", "Url": "https://api.github.com/repos/joewhaley/javabdd", "Date": "2010-11-16T01:29:49Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((varNum()) > 1) bdd_reorder(m.id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5429/buggy-version/JavaBDD.net.sf.javabdd.JFactory.java", "BodyUseAPI": [], "Fixed commit": "6de6751a4bbd55fbdefcd65bbb3b011f6523a4fd", "Url": "https://api.github.com/repos/joewhaley/javabdd", "Date": "2010-11-16T01:29:49Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["repos.get(clazz).find(org.bson.Document)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((list.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7680/buggy-version/src.main.java.us.jakeabel.mpa.core.BaseConnection.java", "BodyUseAPI": [], "Fixed commit": "ee1cbcc4e0cea9a317b6b3af97c6bb5028ad8ece", "Url": "https://api.github.com/repos/jakeabel/mpa", "Date": "2016-10-23T05:15:42Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bauble_app.bauble.StoryObject.grabUniqueId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(this.mKeys.contains(key))) { this.mKeys.add(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3535/buggy-version/app.src.main.java.com.bauble_app.bauble.StorySingleton.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "f765f897dc61341baca80b66aa270c2b432f07d8", "Url": "https://api.github.com/repos/eduardrg/TellToo", "Date": "2017-05-30T08:07:30Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((appState) == (com.jenzz.appstate.AppState.FOREGROUND)) { onAppDidEnterBackground(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8182/buggy-version/library.src.main.java.com.jenzz.appstate.internal.AppStateRecognizer.java", "BodyUseAPI": [], "Fixed commit": "5292894ec0a3fe7cb9707aec5c163fb22a79aeb2", "Url": "https://api.github.com/repos/jenzz/RxAppState", "Date": "2016-11-12T17:35:40Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(mGoogleApiClient.isConnecting())) || (!(mGoogleApiClient.isConnected()))) { mGoogleApiClient.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2819/buggy-version/app.src.main.java.strayanslangapp.noni.com.strayanslangapp.presentation.activities.HangmanActivity.java", "BodyUseAPI": ["com.google.android.gms.common.api.GoogleApiClient.connect()"], "Fixed commit": "f85a15e19b8fd0d5a4f6dfeb93eb004e1f387050", "Url": "https://api.github.com/repos/poppito/StrayanSlangApp", "Date": "2017-11-07T02:31:02Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 23) { if (guessesLeft < 3) { mGuesses.setTextColor(getColor(android.R.color.holo_red_dark)); }else { mGuesses.setTextColor(getColor(android.R.color.black)); } }else { if (guessesLeft < 3) { mGuesses.setTextColor(getResources().getColor(android.R.color.holo_red_dark)); }else { mGuesses.setTextColor(getResources().getColor(android.R.color.black)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2819/buggy-version/app.src.main.java.strayanslangapp.noni.com.strayanslangapp.presentation.activities.HangmanActivity.java", "BodyUseAPI": [], "Fixed commit": "f85a15e19b8fd0d5a4f6dfeb93eb004e1f387050", "Url": "https://api.github.com/repos/poppito/StrayanSlangApp", "Date": "2017-11-07T02:31:02Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((bindToVar && (firstName != null)) && (firstName != (JSCode.NaN))) { scope = scope.bind(firstName.sym); varBody.bind(scope.decl(bodyNode), firstName, bodyNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1675/buggy-version/srcc.yjs.lang.compiler.JSAnalyzer.java", "BodyUseAPI": ["yjs.lang.compiler.JSAnalyzer.JSScope.bind(firstName.sym)", "yjs.lang.compiler.JSBlock.bind(yjs.lang.compiler.JSSym,yjs.lang.compiler.JSSym,yjs.lang.compiler.Node)"], "Fixed commit": "de1c88de2d45ac8f51bfa095d3e8292ca83ec339", "Url": "https://api.github.com/repos/chrisichris/yetiscript", "Date": "2014-11-21T08:30:07Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstName == null) firstName = (name == null) ? JSCode.NaN : name;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1675/buggy-version/srcc.yjs.lang.compiler.JSAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "de1c88de2d45ac8f51bfa095d3e8292ca83ec339", "Url": "https://api.github.com/repos/chrisichris/yetiscript", "Date": "2014-11-21T08:30:07Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((operands.size()) > 0) && ((operands.peek().getType()) == (Token.Type.LEFT_PARENTHESIS))) { operands.pop(); }else { throw new shunting.yard.InvalidExpressionException(\"Invalid expression\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4178/buggy-version/src.shunting.yard.Evaluator.java", "BodyUseAPI": ["java.util.Stack<shunting.yard.Token>.pop()"], "Fixed commit": "a9388edce38adfef07f22a0a2b3c5b7f2db68d44", "Url": "https://api.github.com/repos/aRusenov/Shunting-Yard", "Date": "2016-10-27T18:56:16Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.norcode.bukkit.livestocklock.commands.ListCommand.getOwnedAnimal(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (oa != null) { ownedAnimals.add(oa); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7293/buggy-version/src.main.java.com.norcode.bukkit.livestocklock.commands.ListCommand.java", "BodyUseAPI": ["java.util.List<com.norcode.bukkit.livestocklock.OwnedAnimal>.add(com.norcode.bukkit.livestocklock.OwnedAnimal)"], "Fixed commit": "5d7776e52afd1019ce39e4d5c61290358c5f141f", "Url": "https://api.github.com/repos/andrepl/LivestockLock", "Date": "2013-08-24T13:40:43Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (camoState != null) { return net.minecraft.client.Minecraft.getMinecraft().getBlockRendererDispatcher().getBlockModelShapes().getModelForState(camoState).getQuads(camoState, side, rand); }else { return getModel(defaultModels, null).getQuads(state, side, rand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5599/buggy-version/src.main.java.omtteam.omlib.render.CamoBakedModel.java", "BodyUseAPI": ["net.minecraft.client.Minecraft.getMinecraft().getBlockRendererDispatcher().getBlockModelShapes().getModelForState(net.minecraft.block.state.IBlockState)", "net.minecraft.client.Minecraft.getMinecraft().getBlockRendererDispatcher().getBlockModelShapes().getModelForState(camoState).getQuads(net.minecraft.block.state.IBlockState,net.minecraft.util.EnumFacing,long)"], "Fixed commit": "3bf267ec922f634db6139ff67975bf516fdc007b", "Url": "https://api.github.com/repos/OpenModularTurretsTeam/OMLib", "Date": "2017-11-14T02:28:45Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"QUITTER\".equals(operation)) && (\"1\".equals(code))) { this.status = ConnectionClosed; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9079/buggy-version/src.tp2crypto.Client.java", "BodyUseAPI": [], "Fixed commit": "0af00c05d628128bcff274fc857772181b1fd7f1", "Url": "https://api.github.com/repos/nebble/TP2", "Date": "2014-07-11T00:03:45Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance().getItemByFullName(column.getFullName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (i == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3462/buggy-version/src.main.java.org.jenkinsci.plugins.securityinspector.JobReport.java", "BodyUseAPI": [], "Fixed commit": "e8a655eba67fb6248add9e95dc18ae9ac08f45a4", "Url": "https://api.github.com/repos/ksenia-nenasheva/security-inspector-plugin", "Date": "2016-10-23T19:51:17Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (startTime != null) { startTimeString = sdf.format(startTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3649/buggy-version/web.src.main.java.org.verwandlung.voj.web.service.SubmissionService.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "3e6df6bf37e9e6cc10eabb3b2f0231da5a6cb5ec", "Url": "https://api.github.com/repos/hzxie/voj", "Date": "2015-12-07T16:18:08Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (endTime != null) { endTimeString = sdf.format(endTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3649/buggy-version/web.src.main.java.org.verwandlung.voj.web.service.SubmissionService.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "3e6df6bf37e9e6cc10eabb3b2f0231da5a6cb5ec", "Url": "https://api.github.com/repos/hzxie/voj", "Date": "2015-12-07T16:18:08Z"},
{"Line": "=>773", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentVertex.getVertexType()) == (edu.asu.laits.model.Vertex.VertexType.STOCK)) { currentVertex.setInitialValue(java.lang.Double.valueOf(accumulatorInitialValueBox.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2996/buggy-version/src.edu.asu.laits.gui.nodeeditor.CalculationsPanelView.java", "BodyUseAPI": ["edu.asu.laits.model.Vertex.setInitialValue(java.lang.Double)"], "Fixed commit": "138938cbbab13897bbe6f5446842f5dd50ca192c", "Url": "https://api.github.com/repos/rptiwari/LaitsV3", "Date": "2013-08-20T16:33:33Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hTextFlow.getTargets().get(hLocale.getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((hTextFlowTarget.getLastModifiedBy()) != null) { lastModifiedBy = hTextFlowTarget.getLastModifiedBy().getName(); lastModifiedDate = dateFormat.format(hTextFlowTarget.getLastChanged()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3196/buggy-version/zanata-war.src.main.java.org.zanata.webtrans.server.rpc.GetTranslationHistoryHandler.java", "BodyUseAPI": ["hTextFlowTarget.getLastModifiedBy().getName()", "org.zanata.model.HTextFlowTarget.getLastChanged()", "java.text.SimpleDateFormat.format(hTextFlowTarget.getLastChanged())", "org.zanata.model.HTextFlowTarget.getLastModifiedBy()"], "Fixed commit": "909ce30898cbb98e5e89147830fd6c2581af7c1e", "Url": "https://api.github.com/repos/zanata/zanata", "Date": "2012-08-23T03:48:30Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Module>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((module.getSessions().size()) > 0) holder.lastSessionLabel.setText((\"Last Session: \" + (module.getSessions().get(((module.getSessions().size()) - 1)).getName()))); else holder.lastSessionLabel.setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6138/buggy-version/LectuREC.app.src.main.java.com.example.team05.lecturec.CustomExtensions.ModuleAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText((\"Last Session: \" + (module.getSessions().get(((module.getSessions().size()) - 1)).getName())))", "module.getSessions().get(((module.getSessions().size()) - 1))", "java.lang.Module.getSessions()", "java.lang.Module.getSessions()", "module.getSessions().get(((module.getSessions().size()) - 1)).getName()", "module.getSessions().size()"], "Fixed commit": "d1cbce9cf611199d655b35ca4b11f4bdc7ef55e2", "Url": "https://api.github.com/repos/COC155MobileAppDev/MobAppDev", "Date": "2014-12-15T09:12:01Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"updateToken\".equals(operation)) { it.greenvulcano.gvesb.virtual.gv_gestpay.operation.UpdateToken updateToken = new it.greenvulcano.gvesb.virtual.gv_gestpay.operation.UpdateToken(); response = updateToken.updateTokenService(data, wss2s); }else if (\"deleteToken\".equals(operation)) { it.greenvulcano.gvesb.virtual.gv_gestpay.operation.DeleteToken deleteToken = new it.greenvulcano.gvesb.virtual.gv_gestpay.operation.DeleteToken(); response = deleteToken.deleteTokenService(data, wss2s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/95/buggy-version/src.main.java.it.greenvulcano.gvesb.virtual.gv_gestpay.GestPayCallOperation.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "77f0e63cfac89a1f7b5155b914b29ca54c65fe19", "Url": "https://api.github.com/repos/green-vulcano/gv-adapter-gestpay", "Date": "2017-08-23T15:11:10Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gitblit.IStoredSettings.getString(Keys.realm.ldap.username,java.lang.String)", "com.gitblit.IStoredSettings.getString(Keys.realm.ldap.password,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.gitblit.utils.StringUtils.isEmpty(bindUserName)) && (com.gitblit.utils.StringUtils.isEmpty(bindPassword))) { conn = new com.unboundid.ldap.sdk.LDAPConnection(ldapUrl.getHost(), ldapPort); }else { conn = new com.unboundid.ldap.sdk.LDAPConnection(ldapUrl.getHost(), ldapPort, bindUserName, bindPassword); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7951/buggy-version/src.main.java.com.gitblit.LdapUserService.java", "BodyUseAPI": [], "Fixed commit": "7d22407fa842604be25ffdaafe88c6c6c8e9d475", "Url": "https://api.github.com/repos/fzs/gitblit", "Date": "2013-08-16T12:57:05Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.salesforce.phoenix.compile.InListParseNode.isNegate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isNot) { expression = new com.salesforce.phoenix.compile.NotExpression(expression); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4734/buggy-version/src.main.java.com.salesforce.phoenix.compile.ExpressionCompiler.java", "BodyUseAPI": [], "Fixed commit": "e6fa5d4028cc20e23df885eb18fa7ad5016ca90d", "Url": "https://api.github.com/repos/tonyhuang/phoenix", "Date": "2013-06-17T21:26:16Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(implicitTypes)) { java.lang.String prefix = writer.getPrefix(namespace, true); writer.attribute(xsi, org.ksoap2.serialization.SoapSerializationEnvelope.TYPE_LABEL, ((prefix + \":\") + type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2958/buggy-version/ksoap2-base.src.main.java.org.ksoap2.serialization.SoapSerializationEnvelope.java", "BodyUseAPI": [], "Fixed commit": "ce5ad86516b25d819520a1e2ba3674797b0e5888", "Url": "https://api.github.com/repos/mosabua/ksoap2-android", "Date": "2012-05-14T13:54:04Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reporter == null) this.reporter = org.apache.hadoop.mapred.Reporter.NULL; else this.reporter = reporter;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5771/buggy-version/cascading-hadoop.src.main.shared.cascading.flow.hadoop.HadoopFlowProcess.java", "BodyUseAPI": [], "Fixed commit": "13503cd1821dba696039810cfc2ffe73bae42e91", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2014-10-27T20:46:32Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (containerLogDir == null) { return new java.util.HashSet<>(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1506/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-common.src.main.java.org.apache.hadoop.yarn.logaggregation.AggregatedLogFormat.java", "BodyUseAPI": [], "Fixed commit": "7582dedad1c73eabdc3eeece0a3a860e7bb33c1a", "Url": "https://api.github.com/repos/ellenfkh/hadoop", "Date": "2017-06-18T14:23:42Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6208/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "c44e42ad3ff1575444d3cb18f2022cd793a46b74", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dsk.storm.bolts.KuduSession.apply(com.dsk.storm.bolts.Update)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rsUpdate.hasRowError()) { java.lang.System.out.println(mid); java.lang.System.out.println(rsUpdate.getRowError()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4203/buggy-version/src.main.java.com.dsk.storm.bolts.LogFilterBolt2.java", "BodyUseAPI": ["java.io.PrintStream.println(rsUpdate.getRowError())", "com.dsk.storm.bolts.OperationResponse.getRowError()"], "Fixed commit": "e64e1ec5aa913d67384249d9f55e635999d4ca00", "Url": "https://api.github.com/repos/dannyhxwang/whx", "Date": "2015-12-09T03:22:49Z"},
{"Line": "=>1076", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(routeShort)) { routeNumView.setText(routeLong); }else { routeNumView.setText(routeShort); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/84/buggy-version/src.com.joulespersecond.seattlebusbot.MapViewActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "cf38c0adba21a692a75d9b9fde4ba31bfdd06c53", "Url": "https://api.github.com/repos/deweyx/onebusaway-android", "Date": "2011-11-04T02:30:04Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (canvas == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3947/buggy-version/src.com.slauson.asteroid_dasher.game.GameView.java", "BodyUseAPI": [], "Fixed commit": "573099508ff0014cd9a71f4e9782de326f69569c", "Url": "https://api.github.com/repos/slauson/Dodger", "Date": "2012-09-04T01:12:21Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameView.draw()) { game.updateStates(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3947/buggy-version/src.com.slauson.asteroid_dasher.other.GameBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "573099508ff0014cd9a71f4e9782de326f69569c", "Url": "https://api.github.com/repos/slauson/Dodger", "Date": "2012-09-04T01:12:21Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (element instanceof org.eclipse.jdt.core.dom.Initializer) { java.lang.System.out.println(element); continue; }else if (element instanceof org.eclipse.jdt.core.dom.FieldDeclaration) { org.eclipse.jdt.core.dom.FieldDeclaration fieldDeclaration = ((org.eclipse.jdt.core.dom.FieldDeclaration) (element)); if (isFieldNeedPreparation(fieldDeclaration)) { visitWith(fieldDeclaration, true); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1415/buggy-version/sources.net.sf.j2s.core.src.net.sf.j2s.core.astvisitors.ASTScriptVisitor.java", "BodyUseAPI": ["java.io.PrintStream.println(org.eclipse.jdt.core.dom.ASTNode)"], "Fixed commit": "48ed9421f57872e263ed71f69b11e734883b26b1", "Url": "https://api.github.com/repos/BobHanson/java2script", "Date": "2017-06-13T21:35:44Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((funcName.equals(\"def\")) && ((n.getArgsSize()) == 1)) { final java.util.regex.Matcher m = java.util.regex.Pattern.compile(\"\\\\((\\\\w+).get(\\\\w+)\\\\(\\\\) != null\\\\)\").matcher(s); if ((m.matches()) && (!(m.group(2).endsWith(\"List\")))) st.add(\"call\", ((((m.group(1)) + \".has\") + (m.group(2))) + \"()\")); else if ((((n.getArg(0).type) instanceof boa.compiler.visitors.BoaScalar) && (!((n.getArg(0).type) instanceof boa.compiler.visitors.BoaString))) && (!((n.getArg(0).type) instanceof boa.compiler.visitors.BoaTuple))) st.add(\"call\", \"true\"); else st.add(\"call\", s); }else { st.add(\"call\", s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5158/buggy-version/src.java.boa.compiler.visitors.CodeGeneratingVisitor.java", "BodyUseAPI": ["boa.compiler.visitors.Call.getArg(int)", "boa.compiler.visitors.Call.getArg(int)", "boa.compiler.visitors.Call.getArg(int)"], "Fixed commit": "c9680225cae3b6c179f7a66f40246f4409267de1", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2016-12-19T19:07:47Z"},
{"Line": "=>874", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stillborn) { lamb_alert_text = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2639/buggy-version/LambTracker_V2.src.com.weyr_associates.lambtracker.AddLamb.java", "BodyUseAPI": [], "Fixed commit": "4f4f60dff27a5d673549bfd758fe59426433f589", "Url": "https://api.github.com/repos/OogieM/LambTrackerMobile", "Date": "2015-08-08T22:52:12Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((magic.ui.theme.VALUE_SPACING.equals(aName)) && (((int) (value)) < (magic.ui.theme.AbstractTheme.MIN_VALUE_SPACING))) { themeMap.put(aName, magic.ui.theme.AbstractTheme.MIN_VALUE_SPACING); }else { themeMap.put(aName, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6434/buggy-version/src.magic.ui.theme.AbstractTheme.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,int)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "4618bac5242a5a4a6a5611aa7e74f8476ce4ddbe", "Url": "https://api.github.com/repos/magarena/magarena", "Date": "2015-03-25T01:04:19Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teachothers.fishwatchr.SoundPlayer.getPlayerState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentState == (org.teachothers.fishwatchr.SoundPlayer.PLAYER_STATE_STOP)) { mp.prepareMedia(targetFilename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1273/buggy-version/src.org.teachothers.fishwatchr.SoundPlayer.java", "BodyUseAPI": [], "Fixed commit": "523e8decc293c2cc6181e1f29aa1ecfa5c459b59", "Url": "https://api.github.com/repos/himawari-san/FishWatchr", "Date": "2015-12-05T02:19:55Z"},
{"Line": "=>905", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isComplete())) { float rate = (numBytesFetchedFromCloud) / (((java.lang.System.currentTimeMillis()) - (lastCloudFetchTime)) / 1000.0F); return rate; }else { return 0.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5344/buggy-version/peercds.src.main.java.com.p2p.peercds.client.SharedTorrent.java", "BodyUseAPI": [], "Fixed commit": "1ab53d633ba6b53cc6dfcc7a3d4543eefae4fbe9", "Url": "https://api.github.com/repos/KaustubhDeshmukh/Peer-CDS-intergrated", "Date": "2014-12-01T02:09:07Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(prefix)) { org.express4j.core.Express4J.prefixPath = prefix; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2391/buggy-version/src.main.java.org.express4j.core.Express4J.java", "BodyUseAPI": [], "Fixed commit": "04658d045700c496eab98cfcc94605771a84bd41", "Url": "https://api.github.com/repos/aCoder2013/Express4J", "Date": "2016-04-24T07:22:08Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cls == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2391/buggy-version/src.main.java.org.express4j.core.Express4J.java", "BodyUseAPI": [], "Fixed commit": "04658d045700c496eab98cfcc94605771a84bd41", "Url": "https://api.github.com/repos/aCoder2013/Express4J", "Date": "2016-04-24T07:22:08Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MainActivity.mTwoPane) { com.example.joel.popularmovies.MainActivityFragment.mGridView.performItemClick(com.example.joel.popularmovies.MainActivityFragment.mGridView, 0, com.example.joel.popularmovies.MainActivityFragment.mGridView.getAdapter().getItemId(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8303/buggy-version/app.src.main.java.com.example.joel.popularmovies.MainActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "49ecb6f1dc03ef2d340508edb6a3e75b276431c5", "Url": "https://api.github.com/repos/jfranc01/PopularMovies", "Date": "2017-01-11T14:25:02Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (phenotypes == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3083/buggy-version/web.src.main.java.uk.ac.ebi.phenodigm2.Disease.java", "BodyUseAPI": [], "Fixed commit": "fa4641890871de28a00de4441e7bdd469b70cbdb", "Url": "https://api.github.com/repos/mpi2/PhenotypeData", "Date": "2017-09-29T09:04:21Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (phenotypes == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3083/buggy-version/web.src.main.java.uk.ac.ebi.phenodigm2.MouseModel.java", "BodyUseAPI": [], "Fixed commit": "fa4641890871de28a00de4441e7bdd469b70cbdb", "Url": "https://api.github.com/repos/mpi2/PhenotypeData", "Date": "2017-09-29T09:04:21Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.l) != null) { this.l.setStudent(this.student); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2094/buggy-version/app.src.main.java.com.example.matteoaldini.lessonmanager.activities.DetailsStudentActivity.java", "BodyUseAPI": [], "Fixed commit": "d35a31429e4830440fc2e104463840d48f173905", "Url": "https://api.github.com/repos/aldo03/Lesson-Manager", "Date": "2015-06-03T13:23:40Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.learning.pranavjain.triangularorsquarenumber.MainActivity.2.findViewById(R.id.getInput)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (input.getText().toString().isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"Please enter a number\", Toast.LENGTH_SHORT).show(); }else { int inputNumber = java.lang.Integer.parseInt(input.getText().toString()); display(view, inputNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3530/buggy-version/app.src.main.java.com.learning.pranavjain.triangularorsquarenumber.MainActivity.java", "BodyUseAPI": ["input.getText().toString()", "android.widget.EditText.getText()", "java.lang.Integer.parseInt(input.getText().toString())"], "Fixed commit": "e5013b4ea6e9eb5d6e4157432dbb16ac84a5ff6a", "Url": "https://api.github.com/repos/pranavj1001/TriangularOrSquareNumber", "Date": "2016-09-10T05:09:16Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.select(\"meta[name=title]\").first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (playlistName != null) { if (android.text.TextUtils.isEmpty(org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.channelName)) { org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.channelName = playlistName.attr(\"content\"); }else { org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.channelName += \" - \" + (playlistName.attr(\"content\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3441/buggy-version/app.src.main.java.org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.java", "BodyUseAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)", "org.jsoup.nodes.Element.attr(java.lang.String)"], "Fixed commit": "349a7a89ea1f912d3074b360178e8f45aebc58d9", "Url": "https://api.github.com/repos/BlenderViking/NewPipe", "Date": "2016-11-30T22:26:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.select(\"span[class=\\\"qualified-channel-title-text\\\"] a\").first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (channelName != null) { org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.channelName = channelName.text(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3441/buggy-version/app.src.main.java.org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.java", "BodyUseAPI": ["org.jsoup.nodes.Element.text()"], "Fixed commit": "349a7a89ea1f912d3074b360178e8f45aebc58d9", "Url": "https://api.github.com/repos/BlenderViking/NewPipe", "Date": "2016-11-30T22:26:51Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cell.value.equals(\"car\")) { cell = cell.cdr; codeList.add(new Code(func)); }else if (functionNum > 0) { if (functionVariables.get((functionNum - 1)).containsKey(cell.value)) { codeList.add(new Code(Func.LOADA)); codeList.add(new Code(functionVariables.get((functionNum - 1)).get(cell.value))); codeList.add(new Code(func)); }else { codeList.add(new Code(Func.PUSH)); codeList.add(new Code(java.lang.Integer.valueOf(cell.value))); codeList.add(new Code(func)); } }else { codeList.add(new Code(Func.PUSH)); codeList.add(new Code(java.lang.Integer.valueOf(cell.value))); codeList.add(new Code(func)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1967/buggy-version/src.CodeGenerater.java", "BodyUseAPI": ["java.util.ArrayList<Code>.add(Code)", "java.lang.Integer.valueOf(cell.value)", "java.lang.Integer.valueOf(cell.value)", "java.util.ArrayList<Code>.add(Code)", "java.util.ArrayList<Code>.add(Code)", "java.util.HashMap<java.lang.String, java.lang.Integer>.containsKey(cell.value)", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(cell.value)"], "Fixed commit": "88b33fd52b47a4b4438055265f3190198d4f4f07", "Url": "https://api.github.com/repos/takerusu/lispVM", "Date": "2014-05-09T03:11:48Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cell.value.equals(\"car\")) { cell = cell.cdr; }else if (functionNum > 0) { if (functionVariables.get((functionNum - 1)).containsKey(cell.value)) { codeList.add(new Code(Func.LOADA)); codeList.add(new Code(functionVariables.get((functionNum - 1)).get(cell.value))); }else { codeList.add(new Code(Func.PUSH)); codeList.add(new Code(java.lang.Integer.valueOf(cell.value))); } }else { codeList.add(new Code(Func.PUSH)); codeList.add(new Code(java.lang.Integer.valueOf(cell.value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1967/buggy-version/src.CodeGenerater.java", "BodyUseAPI": ["java.lang.Integer.valueOf(cell.value)", "java.util.ArrayList<Code>.add(Code)", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(cell.value)", "java.util.ArrayList<Code>.add(Code)", "java.util.ArrayList<Code>.add(Code)", "java.lang.Integer.valueOf(cell.value)", "java.util.HashMap<java.lang.String, java.lang.Integer>.containsKey(cell.value)"], "Fixed commit": "88b33fd52b47a4b4438055265f3190198d4f4f07", "Url": "https://api.github.com/repos/takerusu/lispVM", "Date": "2014-05-09T03:11:48Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cell.value.equals(\"Nil\"))) cell = cell.cdr;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1967/buggy-version/src.CodeGenerater.java", "BodyUseAPI": [], "Fixed commit": "88b33fd52b47a4b4438055265f3190198d4f4f07", "Url": "https://api.github.com/repos/takerusu/lispVM", "Date": "2014-05-09T03:11:48Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(part.startsWith(\"/\"))) { url.append(\"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6750/buggy-version/src.main.java.at.porscheinformatik.common.spring.web.extended.http.DefaultLinkCreator.java", "BodyUseAPI": [], "Fixed commit": "f823fc79c7ec29aa059997413c407ac88dcddc8a", "Url": "https://api.github.com/repos/furti/spring-web-extended", "Date": "2014-12-16T08:27:36Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((page < 0) || (page >= (titles.size()))) { java.lang.System.out.println(\"Number not in range... exiting!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4341/buggy-version/src.main.java.com.sangupta.songs.SongsDownloader.java", "BodyUseAPI": [], "Fixed commit": "749d4b6fdf139d60edc732420f2ca316a89da70c", "Url": "https://api.github.com/repos/sangupta/songs", "Date": "2013-06-13T09:39:43Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newQuery != null) && (newQuery.equals(this.currentQuery))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6342/buggy-version/app.src.main.java.com.self.googleimagesearch.activity.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "a67868f43e76bc1c6296310549475eee0020013f", "Url": "https://api.github.com/repos/sarafsaurabh/google-image-search", "Date": "2015-09-27T20:19:03Z"},
{"Line": "=>1559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(entryFile.getParentFile().exists())) && (!(entryFile.getParentFile().mkdirs()))) { throw new org.vertx.java.platform.PlatformManagerException(\"Failed to create parent directory\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5005/buggy-version/vertx-platform.src.main.java.org.vertx.java.platform.impl.DefaultPlatformManager.java", "BodyUseAPI": [], "Fixed commit": "ca2531641b4e70b534b27488319ade4e19f16b3b", "Url": "https://api.github.com/repos/OpenDataSpace/vert.x", "Date": "2015-05-13T09:49:42Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Key.Return.is(character)) { return new com.bigcustard.scene2dplus.textarea.ReturnCommand(model); }else if (Key.Tab.is(character)) { return new com.bigcustard.scene2dplus.textarea.TabCommand(model); }else if (isPrintableChar(character)) { if (((lastCharacterTyped) == null) || ((lastCharacterTyped) != character)) { lastCharacterTyped = character; return new com.bigcustard.scene2dplus.textarea.TypeCommand(model, java.lang.Character.toString(character)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7696/buggy-version/core.src.com.bigcustard.scene2dplus.textarea.TextAreaController.java", "BodyUseAPI": ["java.lang.Character.toString(char)", "com.bigcustard.scene2dplus.textarea.TextAreaController.isPrintableChar(char)", "Key.Tab.is(char)"], "Fixed commit": "2164fa16ac21f9e232c30f1053a3f97b0bc7dc85", "Url": "https://api.github.com/repos/SpencerArtisan/glide", "Date": "2015-07-01T19:29:33Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((null != jf) && (!(org.nutz.lang.Strings.isBlank(jf.by())))) jef.ejecting = new org.nutz.lang.eject.EjectBySimpleEL(jf.by()); else jef.ejecting = mirror.getEjecting(fld.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4409/buggy-version/src.org.nutz.json.entity.JsonEntityField.java", "BodyUseAPI": ["org.nutz.json.JsonField.by()"], "Fixed commit": "77977c1fed73f97636c3405c3237b809a4833f39", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2011-09-06T08:03:55Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((src == null) || (dst == null)) { com.ibm.stocator.fs.ObjectStoreFileSystem.LOG.debug(\"Source path and dest path can not be null\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1112/buggy-version/src.main.java.com.ibm.stocator.fs.ObjectStoreFileSystem.java", "BodyUseAPI": [], "Fixed commit": "84214ce6c20e4dff2547d0159363f3929b636e21", "Url": "https://api.github.com/repos/CODAIT/stocator", "Date": "2017-12-06T06:41:26Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((a.getSpeed().x) < 1.0E-5) && ((a.getSpeed().y) < 1.0E-5)) { aColisionComposandSpeed = new MyVector(0, 0); }else { aColisionComposandSpeed.multiply(((a.getSpeed().magnitude()) * (java.lang.Math.cos(MyVector.angleBetweenVectors(a.getSpeed(), cmFromAToB))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3880/buggy-version/ExtremePutting2.src.ColisionHandler.java", "BodyUseAPI": ["java.lang.Math.cos(MyVector.angleBetweenVectors(a.getSpeed(), cmFromAToB))", "MyVector.angleBetweenVectors(a.getSpeed(),MyVector)", "MyVector.multiply(((a.getSpeed().magnitude()) * (java.lang.Math.cos(MyVector.angleBetweenVectors(a.getSpeed(), cmFromAToB)))))", "a.getSpeed().magnitude()", "ColisionMate.getSpeed()", "ColisionMate.getSpeed()"], "Fixed commit": "d3180b4e315a66f7fdd077f745216fb64b120607", "Url": "https://api.github.com/repos/bangerius/ExtremePutting2", "Date": "2014-05-20T16:04:48Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((b.getSpeed().x) < 1.0E-5) && ((b.getSpeed().y) < 1.0E-5)) { bColisionComposandSpeed = new MyVector(0, 0); }else { bColisionComposandSpeed.multiply(((b.getSpeed().magnitude()) * (java.lang.Math.cos(MyVector.angleBetweenVectors(b.getSpeed(), cmFromAToB))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3880/buggy-version/ExtremePutting2.src.ColisionHandler.java", "BodyUseAPI": ["MyVector.angleBetweenVectors(b.getSpeed(),MyVector)", "MyVector.multiply(((b.getSpeed().magnitude()) * (java.lang.Math.cos(MyVector.angleBetweenVectors(b.getSpeed(), cmFromAToB)))))", "b.getSpeed().magnitude()", "ColisionMate.getSpeed()", "java.lang.Math.cos(MyVector.angleBetweenVectors(b.getSpeed(), cmFromAToB))", "ColisionMate.getSpeed()"], "Fixed commit": "d3180b4e315a66f7fdd077f745216fb64b120607", "Url": "https://api.github.com/repos/bangerius/ExtremePutting2", "Date": "2014-05-20T16:04:48Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view == null) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3299/buggy-version/highlight.src.main.java.com.lhc.highlight.HighLight.java", "BodyUseAPI": [], "Fixed commit": "f4f22a4a6633e17d88ebe0229993b036952c463b", "Url": "https://api.github.com/repos/lhc20040808/HighLightView", "Date": "2017-09-15T03:13:20Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((referenceSpeed) < 0) { referenceSpeed = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4375/buggy-version/train-controller.src.main.java.hu.bme.mit.train.controller.TrainControllerImpl.java", "BodyUseAPI": [], "Fixed commit": "34cc19f5f004f4dde3e8343c9e63971fe560dd84", "Url": "https://api.github.com/repos/FTSRG-ReteLab/ACsapat-vcs-ci-lab", "Date": "2017-03-06T14:35:49Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(dir.exists())) { if (!(dir.mkdirs())) { throw new org.apache.maven.plugin.MojoExecutionException((\"Cannot create directory \" + dir)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/107/buggy-version/src.main.java.io.fabric8.maven.docker.util.EnvUtil.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "02348b1e1b596e4cd27aa21198c03470b8d54d94", "Url": "https://api.github.com/repos/fabric8io/docker-maven-plugin", "Date": "2016-06-28T08:54:00Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sndo9.robert.nim.AI.getRand(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numSticks == 0) numSticks = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5015/buggy-version/nim.app.src.main.java.com.sndo9.robert.nim.AI.java", "BodyUseAPI": [], "Fixed commit": "c9b0d1587a2a89a36c0a7319c14e4e427170acb7", "Url": "https://api.github.com/repos/sndo9/androidnim", "Date": "2016-12-07T20:43:45Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((net.osmand.plus.OsmandApplication) (a.getApplication())).getSettings()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (showDefault || ((settings.getApplicationMode()) != (net.osmand.plus.ApplicationMode.DEFAULT))) { selected.add(settings.getApplicationMode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/349/buggy-version/OsmAnd.src.net.osmand.plus.activities.actions.NavigateAction.java", "BodyUseAPI": ["java.util.Set<net.osmand.plus.ApplicationMode>.add(settings.getApplicationMode())", "net.osmand.plus.OsmandSettings.getApplicationMode()"], "Fixed commit": "66577cb82e1d7be8038ca2befa37d25aedb55a87", "Url": "https://api.github.com/repos/herrbert74/Osmand", "Date": "2014-02-24T00:09:19Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3190/buggy-version/core.src.main.java.org.apache.carbondata.core.util.DataTypeUtil.java", "BodyUseAPI": [], "Fixed commit": "ef77313f11d90bec30ed5e0ae0bf10a674d58b05", "Url": "https://api.github.com/repos/mohammadshahidkhan/incubator-carbondata", "Date": "2017-06-09T09:33:30Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((p2_15s_vb97.index) + 1) == size) { p2_15s_vb97.accept(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2545/buggy-version/src.p2_15s_vb97.java", "BodyUseAPI": [], "Fixed commit": "af02239a9dc9a8791e0c3c601b339a56be9578d0", "Url": "https://api.github.com/repos/virajbhalala/PushdownAutomata", "Date": "2015-03-24T02:00:21Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((p2_15s_vb97.index) < size) && ((input.charAt(p2_15s_vb97.index)) == '(')) { p2_15s_vb97.stack.push(\"(\"); p2_15s_vb97.printOut(input.substring(p2_15s_vb97.index, ((p2_15s_vb97.index) + 1)), \"epsilon\", \"(\", \"q4\", \"q5\"); (p2_15s_vb97.index)++; p2_15s_vb97.q5(input); }else if (((p2_15s_vb97.index) < size) && (java.lang.Character.isLetter(input.charAt(p2_15s_vb97.index)))) { p2_15s_vb97.printOut(input.substring(p2_15s_vb97.index, ((p2_15s_vb97.index) + 1)), \"epsilon\", \"epsilon\", \"q4\", \"q5\"); (p2_15s_vb97.index)++; p2_15s_vb97.q3(input); }else p2_15s_vb97.reject();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2545/buggy-version/src.p2_15s_vb97.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "p2_15s_vb97.q3(java.lang.String)", "p2_15s_vb97.q5(java.lang.String)", "p2_15s_vb97.printOut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.Character.isLetter(char)", "p2_15s_vb97.printOut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "af02239a9dc9a8791e0c3c601b339a56be9578d0", "Url": "https://api.github.com/repos/virajbhalala/PushdownAutomata", "Date": "2015-03-24T02:00:21Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!inTriangle) { for (int i = 0; i < (board.triangles.size()); i++) { board.triangles.get(i).deselect(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8943/buggy-version/src.tessellate.input.MouseClick.java", "BodyUseAPI": [], "Fixed commit": "a3f4ddf842bd506ec364fb3ec012cfb1ec5556d1", "Url": "https://api.github.com/repos/mikeecb/tessellate", "Date": "2013-11-29T01:15:26Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((board.selectedTriangles) == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8943/buggy-version/src.tessellate.input.MouseClick.java", "BodyUseAPI": [], "Fixed commit": "a3f4ddf842bd506ec364fb3ec012cfb1ec5556d1", "Url": "https://api.github.com/repos/mikeecb/tessellate", "Date": "2013-11-29T01:15:26Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((discount) == 0.0) return 1.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1858/buggy-version/src.com.thoughtworks.pos.domains.Item.java", "BodyUseAPI": [], "Fixed commit": "d737b4bdd67a2601f86f23ff6d2ff16674b2deac", "Url": "https://api.github.com/repos/BJUT-2016-YU-LT/Pos-seed-01", "Date": "2015-01-02T11:04:11Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((list.length) > 1) || ((list[0].compareTo(\"instant-run\")) != 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/604/buggy-version/Application.src.main.java.com.example.android.storageprovider.MyCloudProvider.java", "BodyUseAPI": [], "Fixed commit": "abad7c8d151d2c391261556199435ca5d1ac388e", "Url": "https://api.github.com/repos/kyunghoj/android-StorageProvider", "Date": "2016-07-06T19:11:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (myfile.exists()) { myfile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8600/buggy-version/src.de.quadrillenschule.liquidroid.model.CachedAPI1Queries.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "88d1b5bc2d4bd7e438b5a8bf405ce2b51c2f6647", "Url": "https://api.github.com/repos/andizottmann/Liqoid", "Date": "2012-03-26T17:32:30Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hub.emffrag.fragmentation.FInternalObjectImpl.getFragmentation()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((model == null) && ((EmfFragActivator.instance.idBehaviour) == (de.hub.emffrag.EmfFragActivator.IdBehaviour.defaultModel))) { model = EmfFragActivator.instance.defaultModelForIdBehavior; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3726/buggy-version/de.hub.emffrag.src.de.hub.emffrag.fragmentation.FStoreImpl.java", "BodyUseAPI": [], "Fixed commit": "42ecedadf93664e37ae3a639393b2092f362c72f", "Url": "https://api.github.com/repos/markus1978/emf-fragments", "Date": "2013-03-08T12:47:42Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Lifecycle.START_EVENT.equals(event.getType())) { org.jaggeryjs.jaggery.app.mgt.TomcatJaggeryWebappsDeployer.setDisplayName(((org.jaggeryjs.jaggery.app.mgt.Context) (event.getLifecycle())), jaggeryConfig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3228/buggy-version/components.jaggery-core.org.jaggeryjs.jaggery.app.mgt.src.main.java.org.jaggeryjs.jaggery.app.mgt.TomcatJaggeryWebappsDeployer.java", "BodyUseAPI": ["org.jaggeryjs.jaggery.app.mgt.TomcatJaggeryWebappsDeployer.setDisplayName(((org.jaggeryjs.jaggery.app.mgt.Context) (event.getLifecycle())),org.json.simple.JSONObject)", "org.jaggeryjs.jaggery.app.mgt.LifecycleEvent.getLifecycle()"], "Fixed commit": "2471ae40c312340a04f38a5900b93dcbfba5dfc7", "Url": "https://api.github.com/repos/wso2/jaggery", "Date": "2012-08-09T10:26:34Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.olivermartin410.plugins.SpigotComm.nicknames.containsKey(uuid)) { if (com.olivermartin410.plugins.SpigotComm.realnames.containsKey(com.olivermartin410.plugins.SpigotComm.nicknames.get(uuid).toLowerCase())) { com.olivermartin410.plugins.SpigotComm.realnames.remove(com.olivermartin410.plugins.SpigotComm.nicknames.get(uuid).toLowerCase()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5574/buggy-version/multichat.src.main.java.com.olivermartin410.plugins.SpigotComm.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "java.util.Map<java.lang.String, java.util.UUID>.remove(java.lang.String)", "java.util.Map<java.util.UUID, java.lang.String>.get(java.util.UUID)", "java.util.Map<java.lang.String, java.util.UUID>.containsKey(java.lang.String)", "java.util.Map<java.util.UUID, java.lang.String>.get(java.util.UUID)"], "Fixed commit": "a48ee1b97414303c441f9b73d014ac507a5db2df", "Url": "https://api.github.com/repos/MultiChat/Development", "Date": "2017-05-24T12:59:16Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val < 0) { val = 360 - val; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9159/buggy-version/src.Jsonparse.java", "BodyUseAPI": [], "Fixed commit": "89c2d27ae5facef6a74fc7ab9d0d1e8818a38e7f", "Url": "https://api.github.com/repos/markokaar/ProjektW", "Date": "2016-03-16T11:14:31Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (city == null) { city = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9159/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "89c2d27ae5facef6a74fc7ab9d0d1e8818a38e7f", "Url": "https://api.github.com/repos/markokaar/ProjektW", "Date": "2016-03-16T11:14:31Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { return new org.elasticsearch.cluster.routing.allocation.RerouteExplanation(this, allocation.decision(Decision.NO, \"cancel_allocation_command\", (((\"can't cancel \" + (shardId)) + \", failed to find it on node \") + discoNode))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2855/buggy-version/src.main.java.org.elasticsearch.cluster.routing.allocation.command.CancelAllocationCommand.java", "BodyUseAPI": [], "Fixed commit": "973a72c3cbfa3fc029f0bbab878f04a47b4e1208", "Url": "https://api.github.com/repos/dakrone/elasticsearch", "Date": "2014-02-18T19:48:26Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialog_tv_status) != null) { dialog_tv_status.setText(\"\u8bbe\u5907\u5728\u5ba4\u5185\"); status_GPSornot = \"\u8bbe\u5907\u5728\u5ba4\u5185\"; setLostCarSituationFlag(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7524/buggy-version/app.src.main.java.com.xunce.electrombile.fragment.MaptabFragment.java", "BodyUseAPI": [], "Fixed commit": "f2e51b35f3e8fe1ea18ca02b65f674ffc11dc815", "Url": "https://api.github.com/repos/jerky168/Electrombile_Android", "Date": "2016-09-21T01:36:42Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (recordsByExtension != null) { this.recordsByExtension = com.google.common.collect.ImmutableMap.copyOf(recordsByExtension); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1902/buggy-version/src.main.java.org.gbif.ipt.action.portal.InventoryAction.java", "BodyUseAPI": ["com.google.common.collect.ImmutableMap.copyOf(java.util.Map<java.lang.String, java.lang.Integer>)"], "Fixed commit": "3c1336bc5ca5f644c0f061726574f21027a517f3", "Url": "https://api.github.com/repos/gbif/ipt", "Date": "2017-10-05T08:00:04Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mode != null) { mode.setSubtitle(((\"(\" + (getCheckedCount())) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1434/buggy-version/RecyclerView.ActionModeList.app.src.main.java.com.commonsware.android.recyclerview.actionmodelist.MainActivity.java", "BodyUseAPI": ["android.view.ActionMode.setSubtitle(((\"(\" + (getCheckedCount())) + \")\"))"], "Fixed commit": "64258dd7e6a4bf7465e51f98d253add79719bbba", "Url": "https://api.github.com/repos/alexsh/cw-omnibus", "Date": "2017-11-04T20:38:12Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((property1 == null) || (property2 == null)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1366/buggy-version/src.main.java.alignment.alignment_v2.Compare.java", "BodyUseAPI": [], "Fixed commit": "8416a090d435925f7daff5b797067c49ba18c685", "Url": "https://api.github.com/repos/stucco/graph-alignment", "Date": "2015-01-28T21:37:17Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.springframework.util.StringUtils.isEmpty(templateContent)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2603/buggy-version/src.main.java.me.beldon.module.generate.service.impl.MySqlGenerateService.java", "BodyUseAPI": [], "Fixed commit": "16897670fec29d1efcbca88398193fddad687018", "Url": "https://api.github.com/repos/beldon/code-generator", "Date": "2017-06-10T10:06:22Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remainder == 2) || (remainder == 3)) { paddingCount = 4 - remainder; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4220/buggy-version/src.main.java.io.jsonwebtoken.impl.Base64UrlCodec.java", "BodyUseAPI": [], "Fixed commit": "4d2080b36973314f8ed26887addda000de84809f", "Url": "https://api.github.com/repos/jwtk/jjwt", "Date": "2015-06-26T18:34:33Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.clueminer.clustering.ClusteringExecutorCached<E, C>.isEstimationNeeded(org.clueminer.clustering.ClusteringExecutorCached,org.clueminer.utils.Props)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (needsConfiguration) { config.configure(dataset, params); org.clueminer.clustering.ClusteringExecutorCached.logger.log(java.util.logging.Level.INFO, \"estimated parameters: {0} for {1}\", new java.lang.Object[]{ params.toJson(), algorithm.getName() }); }else { org.clueminer.clustering.ClusteringExecutorCached.logger.info(\"skipping parameters estimation. all required parameters were specified\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2091/buggy-version/modules.clustering-impl.src.main.java.org.clueminer.clustering.ClusteringExecutorCached.java", "BodyUseAPI": [], "Fixed commit": "95d1094a797a91cd06da22bf7edce3b2cbc5320c", "Url": "https://api.github.com/repos/deric/clueminer", "Date": "2016-07-18T11:38:51Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MotionEvent.getActionMasked()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (actionType == (android.view.MotionEvent.ACTION_DOWN)) { android.util.Log.d(com.studiau.amazinggravity.GameView.TAG, java.lang.Float.toString(bitmap_replayLocationX)); if (((((event.getX()) > ((bitmap_replayLocationX) - ((bitmap_replay.getWidth()) / 2))) && ((event.getX()) < ((bitmap_replayLocationX) + ((bitmap_replay.getWidth()) / 2)))) && ((event.getY()) > ((bitmap_replayLocationY) - ((bitmap_replay.getHeight()) / 2)))) && ((event.getY()) < ((bitmap_replayLocationY) + ((bitmap_replay.getHeight()) / 2)))) { reset(ship); }else if (((((event.getX()) > ((bitmap_rateLocationX) - ((bitmap_rate.getWidth()) / 2))) && ((event.getX()) < ((bitmap_rateLocationX) + ((bitmap_rate.getWidth()) / 2)))) && ((event.getY()) > ((bitmap_replayLocationY) - ((bitmap_rate.getHeight()) / 2)))) && ((event.getY()) < ((bitmap_replayLocationY) + ((bitmap_rate.getHeight()) / 2)))) { rateGame(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5578/buggy-version/app.src.main.java.com.studiau.amazinggravity.GameView.java", "BodyUseAPI": [], "Fixed commit": "4459ce0a20bb54ff6ee723c5b8319f911d9ed840", "Url": "https://api.github.com/repos/dtyau/amazing-gravity", "Date": "2014-12-19T07:24:07Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preTemp.equals(temp)) { head = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8855/buggy-version/src.linkedlistdiscussion.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "b828face18d8ad61b4de2a3be8306027f2fd5e17", "Url": "https://api.github.com/repos/jpierringer/LinkedListDiscussion", "Date": "2015-08-03T16:51:46Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 0) { addHead(element); return true; }else if (index == (size())) { addTail(element); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8855/buggy-version/src.linkedlistdiscussion.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "b828face18d8ad61b4de2a3be8306027f2fd5e17", "Url": "https://api.github.com/repos/jpierringer/LinkedListDiscussion", "Date": "2015-08-03T16:51:46Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((null != modelAndView) && (!(modelAndView.isEmpty()))) { java.lang.String loggedUserName = ua.teachme.LoggedUser.getName(); if (null != loggedUserName) { modelAndView.getModelMap().addAttribute(\"loggedUser\", ua.teachme.LoggedUser.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8877/buggy-version/src.main.java.ua.teachme.web.UserInterceptor.java", "BodyUseAPI": ["modelAndView.getModelMap().addAttribute(java.lang.String,ua.teachme.LoggedUser.getName())", "org.springframework.web.servlet.ModelAndView.getModelMap()"], "Fixed commit": "ddde81f2bc18183d18414c901ea105fce50a3ad6", "Url": "https://api.github.com/repos/Bogdan-Math/TeachMe", "Date": "2016-06-01T12:21:24Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (comps.isEmpty()) { comps.add(((format(specification.getCalories())) + \" kcal\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1693/buggy-version/src.main.com.vrublack.nutrition.console.TextFormatter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(((format(specification.getCalories())) + \" kcal\"))"], "Fixed commit": "742541db8a6abc69d381f2c9f5a653fccc9b3042", "Url": "https://api.github.com/repos/vrublack/TacoShell", "Date": "2017-07-22T19:26:37Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (def.isAllowNullPrimaryKeyInserts()) { if (!(i.validateIndexKeys(compositeKeyToDelete))) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7704/buggy-version/src.main.java.com.pardot.rhombus.cobject.CObjectCQLGenerator.java", "BodyUseAPI": [], "Fixed commit": "53a11fa6c603a1920f4d13182d42cdb9be4ff3ab", "Url": "https://api.github.com/repos/Pardot/Rhombus", "Date": "2013-09-13T21:43:05Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mf.getSize()) > 0) { cz.muni.fi.editor.api.stream.dto.StreamAttachementDTO a = new cz.muni.fi.editor.api.stream.dto.StreamAttachementDTO(); a.setAttachementName(mf.getOriginalFilename()); a.setData(mf.getBytes()); attachements.add(a); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8114/buggy-version/editor-webapp.src.main.java.cz.muni.fi.editor.webapp.controllers.StreamController.java", "BodyUseAPI": ["org.springframework.web.multipart.MultipartFile.getOriginalFilename()", "cz.muni.fi.editor.api.stream.dto.StreamAttachementDTO.setAttachementName(mf.getOriginalFilename())", "cz.muni.fi.editor.api.stream.dto.StreamAttachementDTO.setData(mf.getBytes())", "org.springframework.web.multipart.MultipartFile.getBytes()"], "Fixed commit": "a2a8f5501db838201778c3dacd759e5399763789", "Url": "https://api.github.com/repos/empt-ak/meditor", "Date": "2016-03-29T09:30:20Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (req != null) { if (req.contains(\"GET\")) { isGet = true; } if (req.contains(\"favicon.ico\")) { isGet = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1753/buggy-version/src.avdeev.cubiscan.ResponseThread.java", "BodyUseAPI": [], "Fixed commit": "17a86110decece8215aa3a0e6178da0bdcc455b2", "Url": "https://api.github.com/repos/sergeiavdeev/cubiscan-server", "Date": "2017-10-16T13:53:38Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (UqVal != 0) Favg = totalRecords / UqVal;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2637/buggy-version/api.src.main.java.org.regenstrief.FieldMetrics.FieldMetricsCalculation.FieldMetricsImplementation.java", "BodyUseAPI": [], "Fixed commit": "1195ac349adcbdd745cdf5e5856e74a8e9f642dc", "Url": "https://api.github.com/repos/GarimaAhuja/openmrs-module-patientmatching", "Date": "2013-10-10T20:50:40Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["VH.getAdapterPosition()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (position != (android.support.v7.widget.RecyclerView.NO_POSITION)) { getItem(position).onViewRecycled(holder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1093/buggy-version/binder.src.main.java.jp.satorufujiwara.binder.recycler.BaseRecyclerBinderAdapter.java", "BodyUseAPI": ["jp.satorufujiwara.binder.recycler.BaseRecyclerBinderAdapter<V, VH>.getItem(int)", "jp.satorufujiwara.binder.Binder<V, VH>.onViewRecycled(VH)"], "Fixed commit": "529bbffc0882c1f042bab62b2237a9e8b6ee1d76", "Url": "https://api.github.com/repos/MaTriXy/recyclerview-binder", "Date": "2015-09-02T05:12:06Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (application == null) { throw new java.lang.IllegalArgumentException(\"application is null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/206/buggy-version/core-server.src.main.java.org.glassfish.jersey.server.internal.RuntimeDelegateImpl.java", "BodyUseAPI": [], "Fixed commit": "7a9cb0d15b9496e83b61bcaa1ca455d256a465f4", "Url": "https://api.github.com/repos/jersey/jersey", "Date": "2013-01-15T16:07:02Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.exists()) { java.util.Scanner scan = new java.util.Scanner(config); while (scan.hasNext()) { json += scan.next(); } scan.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5568/buggy-version/src.main.java.org.podpage.hap.accessory.AccessoryManager.java", "BodyUseAPI": [], "Fixed commit": "090d206e1e44eda382887aa7158342128a6669b4", "Url": "https://api.github.com/repos/podpage/Java-HAP-Server", "Date": "2016-11-26T22:36:47Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(features.containsKey(name))) { features.put(name, feature); featuresInverse.put(feature, name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2414/buggy-version/src.main.java.com.mcmoddev.orespawn.data.FeatureRegistry.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.mcmoddev.orespawn.api.IFeature>.put(java.lang.String,com.mcmoddev.orespawn.api.IFeature)", "java.util.Map<com.mcmoddev.orespawn.api.IFeature, java.lang.String>.put(com.mcmoddev.orespawn.api.IFeature,java.lang.String)"], "Fixed commit": "d69ab59a817ba4cb5f80bc4b3fb6797fb5eb46dd", "Url": "https://api.github.com/repos/dshadowwolf/OreSpawn", "Date": "2017-06-28T20:00:42Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { mNotificationBuilder.setVisibility(Notification.VISIBILITY_PUBLIC); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3972/buggy-version/app.src.de.qspool.clementineremote.backend.mediasession.ClementineMediaSessionNotification.java", "BodyUseAPI": [], "Fixed commit": "3e084b317d582b43c17fb44c052a0d2afca692ff", "Url": "https://api.github.com/repos/clementine-player/Android-Remote", "Date": "2014-10-31T11:31:21Z"},
{"Line": "=>1029", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parameter.getValue()) == null) { comboBox.setSelection(null); }else { comboBox.setSelection(new org.eclipse.jface.viewers.StructuredSelection(parameter.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7116/buggy-version/bragg.nbi.au.gov.ansto.bragg.nbi.ui.src.au.gov.ansto.bragg.nbi.ui.scripting.parts.ScriptControlViewer.java", "BodyUseAPI": ["org.eclipse.jface.viewers.ComboViewer.setSelection(org.eclipse.jface.viewers.StructuredSelection)", "au.gov.ansto.bragg.nbi.ui.scripting.pyobj.ScriptParameter.getValue()"], "Fixed commit": "8bd57fb3e711661cacd91b834524df025a90e42a", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2013-10-02T01:12:17Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (instruction == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2300/buggy-version/src.model.Issue.java", "BodyUseAPI": [], "Fixed commit": "9d42d100cbe08e4f4f516f25c94ba64133cc0196", "Url": "https://api.github.com/repos/baronfel/Emulator", "Date": "2012-04-17T22:26:31Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.di.trans.TransMeta.findDatabase(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (databaseMeta != null) { dbName = databaseMeta.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4989/buggy-version/ui.src.org.pentaho.di.ui.spoon.delegates.SpoonTreeDelegate.java", "BodyUseAPI": ["org.pentaho.di.core.database.DatabaseMeta.getName()"], "Fixed commit": "4b13e352b8fee91669e9541d4d5215d5dcfcea14", "Url": "https://api.github.com/repos/pentaho-skarmali/pentaho-kettle", "Date": "2014-03-31T19:06:37Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.getTriple().getObject().isVariable()) { explicitIRIBoundVariables.remove(node.getTriple().getObject().getVariable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1050/buggy-version/com.ibm.research.quetzal.core.src.com.ibm.research.proppaths.CodeGenerator.java", "BodyUseAPI": ["java.util.Set<com.ibm.research.rdf.store.sparql11.model.Variable>.remove(node.getTriple().getObject().getVariable())", "com.ibm.research.rdf.store.sparql11.planner.PlanNode.getTriple()", "node.getTriple().getObject().getVariable()", "node.getTriple().getObject()"], "Fixed commit": "ee4cccd0232827529f8907e361b28d59a871ccf9", "Url": "https://api.github.com/repos/Quetzal-RDF/quetzal", "Date": "2015-03-27T01:56:11Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newHoliday.getNoOfDays()) > (availableDays)) { valid = false; jBtnSendRequest.setEnabled(false); }else { valid = true; jBtnSendRequest.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1326/buggy-version/Code.DriverHolidayViewNRScreen.java", "BodyUseAPI": [], "Fixed commit": "51dd3e34818a7e246c38ed030c11cd1d335f75ea", "Url": "https://api.github.com/repos/florescu/IBMS-Group-G7", "Date": "2013-02-28T12:23:19Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((runner) != (java.lang.Thread.currentThread())) { _sleeper.stopSleeping(); runner.join(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2612/buggy-version/nevado-jms.src.main.java.org.skyscreamer.nevado.jms.AsyncConsumerRunner.java", "BodyUseAPI": [], "Fixed commit": "a86eebf2ac9df44b04cbd85e70d537519dfce8c7", "Url": "https://api.github.com/repos/jesper2610/nevado", "Date": "2014-03-11T19:30:12Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lblNullSD) != null) { lblNullSD.setFont(defaultFont); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1241/buggy-version/devel.Speedith.src.speedith.ui.NullSpiderDiagramPanel.java", "BodyUseAPI": [], "Fixed commit": "6c3e62a500e237717091a568d8e412667b44b96d", "Url": "https://api.github.com/repos/urbas/speedith", "Date": "2012-06-16T08:35:53Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeIfNull) { builder.nextControlFlow(\"else\"); if (isObjectProperty) { builder.addStatement(\"$L.writeFieldName($S)\", com.bluelinelabs.logansquare.processor.ObjectMapperInjector.JSON_GENERATOR_VARIABLE_NAME, fieldName); } builder.addStatement(\"$L.writeNull()\", com.bluelinelabs.logansquare.processor.ObjectMapperInjector.JSON_GENERATOR_VARIABLE_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1054/buggy-version/processor.src.main.java.com.bluelinelabs.logansquare.processor.type.collection.MapCollectionType.java", "BodyUseAPI": [], "Fixed commit": "ffdbb69abac237d95c61953ac1ddbc1a754fa83e", "Url": "https://api.github.com/repos/ZuZuK/LoganSquare", "Date": "2017-02-21T21:49:17Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeIfNull) { builder.nextControlFlow(\"else\"); if (isObjectProperty) { builder.addStatement(\"$L.writeFieldName($S)\", com.bluelinelabs.logansquare.processor.ObjectMapperInjector.JSON_GENERATOR_VARIABLE_NAME, fieldName); } builder.addStatement(\"$L.writeNull()\", com.bluelinelabs.logansquare.processor.ObjectMapperInjector.JSON_GENERATOR_VARIABLE_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1054/buggy-version/processor.src.main.java.com.bluelinelabs.logansquare.processor.type.collection.SingleParameterCollectionType.java", "BodyUseAPI": [], "Fixed commit": "ffdbb69abac237d95c61953ac1ddbc1a754fa83e", "Url": "https://api.github.com/repos/ZuZuK/LoganSquare", "Date": "2017-02-21T21:49:17Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeIfNull) { builder.nextControlFlow(\"else\"); if (isObjectProperty) { builder.addStatement(\"$L.writeFieldName($S)\", com.bluelinelabs.logansquare.processor.ObjectMapperInjector.JSON_GENERATOR_VARIABLE_NAME, fieldName); } builder.addStatement(\"$L.writeNull()\", com.bluelinelabs.logansquare.processor.ObjectMapperInjector.JSON_GENERATOR_VARIABLE_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1054/buggy-version/processor.src.main.java.com.bluelinelabs.logansquare.processor.type.collection.ArrayCollectionType.java", "BodyUseAPI": [], "Fixed commit": "ffdbb69abac237d95c61953ac1ddbc1a754fa83e", "Url": "https://api.github.com/repos/ZuZuK/LoganSquare", "Date": "2017-02-21T21:49:17Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aParameter.eContainer()) instanceof de.gebit.integrity.dsl.Call) { tempMethodRef = ((de.gebit.integrity.dsl.Call) (aParameter.eContainer())).getDefinition().getFixtureMethod(); }else if ((aParameter.eContainer()) instanceof de.gebit.integrity.dsl.TableTest) { tempMethodRef = ((de.gebit.integrity.dsl.TableTest) (aParameter.eContainer())).getDefinition().getFixtureMethod(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5131/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.scoping.DSLScopeProvider.java", "BodyUseAPI": ["((de.gebit.integrity.dsl.TableTest) (aParameter.eContainer())).getDefinition().getFixtureMethod()", "((de.gebit.integrity.dsl.Call) (aParameter.eContainer())).getDefinition()", "((de.gebit.integrity.dsl.Call) (aParameter.eContainer())).getDefinition().getFixtureMethod()", "((de.gebit.integrity.dsl.TableTest) (aParameter.eContainer())).getDefinition()", "de.gebit.integrity.dsl.Parameter.eContainer()", "de.gebit.integrity.dsl.Parameter.eContainer()", "de.gebit.integrity.dsl.Parameter.eContainer()"], "Fixed commit": "1260b0d0c98efb9c7f7142cfbe52724e7dfc259e", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2016-01-13T09:41:33Z"},
{"Line": "=>1644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((expData.ensembl_gene_idHash) != null) { java.lang.String entrezgene = expData.getSynonym(id.toLowerCase(), ExpressionData.ENTREZ); java.lang.String ensembl_gene_id = expData.getSynonym(id.toLowerCase(), ExpressionData.ENSEMBL); java.lang.String external_gene_id = expData.getSynonym(id.toLowerCase(), ExpressionData.SYMBOL); bw.write(((((entrezgene + \"\\t\") + ensembl_gene_id) + \"\\t\") + external_gene_id)); }else bw.write(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5248/buggy-version/Voronto.src.es.usal.voronto.view.VoronoiVisualization.java", "BodyUseAPI": ["es.usal.voronto.model.expression.ExpressionData.getSynonym(java.lang.String,ExpressionData.ENTREZ)", "es.usal.voronto.model.expression.ExpressionData.getSynonym(java.lang.String,ExpressionData.ENSEMBL)", "es.usal.voronto.model.expression.ExpressionData.getSynonym(java.lang.String,ExpressionData.SYMBOL)"], "Fixed commit": "2ea2f8fd8c02b3ab5b45d8e1688053013353abf7", "Url": "https://api.github.com/repos/rodrigoSantamaria/Voronto", "Date": "2012-10-01T11:47:53Z"},
{"Line": "=>1634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((expData.ensembl_gene_idHash) == null) bw.write(expData.chip); else bw.write(\"entrezgene\\tensembl_gene_id\\texternal_gene_id\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5248/buggy-version/Voronto.src.es.usal.voronto.view.VoronoiVisualization.java", "BodyUseAPI": ["java.io.BufferedWriter.write(expData.chip)"], "Fixed commit": "2ea2f8fd8c02b3ab5b45d8e1688053013353abf7", "Url": "https://api.github.com/repos/rodrigoSantamaria/Voronto", "Date": "2012-10-01T11:47:53Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bson.Document.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bufObj instanceof org.bson.types.Binary) { buf = ((org.bson.types.Binary) (bufObj)).getData(); }else { buf = ((byte[]) (bufObj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1878/buggy-version/src.com.naryx.tagfusion.cfm.cache.impl.MongoCacheImpl.java", "BodyUseAPI": [], "Fixed commit": "8faf6ff3bcb10a69cc3e0007a12f5a36a58d2c5c", "Url": "https://api.github.com/repos/OpenBD/openbd-core", "Date": "2015-10-29T13:11:08Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.base2.kagura.core.authentication.AuthenticationProvider.getUsers()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (users == null) return userMap;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1604/buggy-version/shared.reporting-core.src.main.java.com.base2.kagura.core.authentication.AuthenticationProvider.java", "BodyUseAPI": [], "Fixed commit": "7d8a18698e397ffe3c177d1ae0e9bf270227f5b3", "Url": "https://api.github.com/repos/base2Services/kagura", "Date": "2014-06-06T01:02:24Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.base2.kagura.core.authentication.AuthenticationProvider.getGroups()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (groups == null) return groupMap;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1604/buggy-version/shared.reporting-core.src.main.java.com.base2.kagura.core.authentication.AuthenticationProvider.java", "BodyUseAPI": [], "Fixed commit": "7d8a18698e397ffe3c177d1ae0e9bf270227f5b3", "Url": "https://api.github.com/repos/base2Services/kagura", "Date": "2014-06-06T01:02:24Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 21) personFollow.setBackground(getActivity().getDrawable(R.drawable.blue_rectangle));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4211/buggy-version/AndroidClient.app.src.main.java.com.pixtory.app.userprofile.UserProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "c5373ea7e264987810de452e57911d73b39e16db", "Url": "https://api.github.com/repos/aasha/PhotoStory", "Date": "2016-06-21T13:25:23Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shieldCount) > 0) { shieldCount -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1844/buggy-version/src.main.java.logic.Player.java", "BodyUseAPI": [], "Fixed commit": "e51a6dec6ccfd0302cfa5d023b2ced9c50b14c64", "Url": "https://api.github.com/repos/geenen124/Team1BubbleTrouble", "Date": "2015-09-18T19:17:10Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((authors != null) && (!(authors.trim().isEmpty()))) { java.lang.String[] authorsArr = authors.split(\",\"); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setLines(authorsArr.length); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(authors.replace(\",\", \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/816/buggy-version/app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "977d415ebc6810031e162143627fbdf260242f56", "Url": "https://api.github.com/repos/akodiakson/alexandria-app", "Date": "2015-10-11T17:31:04Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i != 0) { added.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4492/buggy-version/src.main.java.com.romanov_v.parser.EarleyParser.java", "BodyUseAPI": [], "Fixed commit": "46330a989d0a426a5e2e135b619ad9f8a9e3d0dd", "Url": "https://api.github.com/repos/vladislavoff1/Parser", "Date": "2016-03-14T21:36:35Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { try { gps_enabled = lm.isProviderEnabled(LocationManager.GPS_PROVIDER); if (!gps_enabled) switchToLocationSettings(); } catch (java.lang.Exception ex) { } }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4685/buggy-version/src.android.src.com.pylonproducts.wifiwizard.WifiWizard.java", "BodyUseAPI": [], "Fixed commit": "88b89b889f5d500b6c4264b50db7f4de5130d188", "Url": "https://api.github.com/repos/paraggarg37/WifiWizard", "Date": "2016-02-16T11:37:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (single) toolkit.clearSelection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6933/buggy-version/src.tools.SelectTool.java", "BodyUseAPI": [], "Fixed commit": "72538728a405dead14365d22f8dc634bfb542fcd", "Url": "https://api.github.com/repos/Nyrmburk/Draftform", "Date": "2016-03-05T19:16:07Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((r.getParams()) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5922/buggy-version/woServer.src.edu.umass.ckc.wo.content.ProblemParameters.java", "BodyUseAPI": [], "Fixed commit": "0cd30f4495d52ac1e99e808c2a72eaeb5a9f5166", "Url": "https://api.github.com/repos/mfrechet/mathspring", "Date": "2014-12-17T20:58:10Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.block.Block.getBlockFromItem(stack.getItem())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (block != null) list.add(new zmaster587.libVulpes.block.BlockMeta(block, stack.getItem().getMetadata(stack.getItemDamage())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1633/buggy-version/src.main.java.zmaster587.libVulpes.tile.multiblock.TileMultiBlock.java", "BodyUseAPI": ["java.util.List<zmaster587.libVulpes.block.BlockMeta>.add(zmaster587.libVulpes.block.BlockMeta)"], "Fixed commit": "bc0324d6253a18a88f160d0d2518b4459476f97e", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2016-11-11T21:37:28Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) { result = java.math.BigInteger.ONE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4373/buggy-version/src.main.java.org.raistlic.common.permutation.Factorial.java", "BodyUseAPI": [], "Fixed commit": "ddf3c312d77e43fab2a03f6eaabb78baeb44af75", "Url": "https://api.github.com/repos/jsckdao/raistlic-lib-commons-core", "Date": "2015-03-11T10:12:40Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((configurationFileInputStream.available()) == 0) { configurationFileInputStream.close(); try (java.io.FileOutputStream cpfos = new java.io.FileOutputStream(this.configurationFile)) { cpfos.write(\"{}\".getBytes()); } configurationFileInputStream = new java.io.FileInputStream(this.configurationFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5924/buggy-version/src.main.java.net.ctrdn.stuba.want.swrouter.core.RouterController.java", "BodyUseAPI": ["java.io.FileInputStream.close()"], "Fixed commit": "40141a75e91678d3803fe828cd448a58933f09ec", "Url": "https://api.github.com/repos/castorw/stuba-want-swrouter", "Date": "2015-03-16T11:28:01Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (reader != null) { reader.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4786/buggy-version/src.main.java.BulkLoad.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "52900ea8ca997705abfa17cdafd56498112122f3", "Url": "https://api.github.com/repos/zxdy/cals", "Date": "2015-03-26T15:16:35Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (csvReader != null) { csvReader.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4786/buggy-version/src.main.java.BulkLoad.java", "BodyUseAPI": ["org.supercsv.io.CsvListReader.close()"], "Fixed commit": "52900ea8ca997705abfa17cdafd56498112122f3", "Url": "https://api.github.com/repos/zxdy/cals", "Date": "2015-03-26T15:16:35Z"},
{"Line": "=>1480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.getQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((qsp.indexOf(\"&\")) != (-1)) { java.util.StringTokenizer st = new java.util.StringTokenizer(qsp, \"&\"); while (st.hasMoreTokens()) { currentstring = st.nextToken(); if ((currentstring.indexOf(\"=\")) == (-1)) { }else { left = currentstring.substring(0, currentstring.indexOf(\"=\")); right = currentstring.substring(((currentstring.indexOf(\"=\")) + 1)); tmap.put(left, right); } } }else { currentstring = qsp; if ((currentstring.indexOf(\"=\")) == (-1)) { }else { left = currentstring.substring(0, currentstring.indexOf(\"=\")); right = currentstring.substring(((currentstring.indexOf(\"=\")) + 1)); tmap.put(left, right); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/995/buggy-version/src.co.ords.w.WordsCore.java", "BodyUseAPI": [], "Fixed commit": "6ac291f70ffe44992aa58eda2cfd424f4695629d", "Url": "https://api.github.com/repos/fivedogit/words-backend", "Date": "2014-07-15T02:46:09Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((x == null) || (!(x.startsWith(\"http\")))) serviceWizardUrl = \"https://ci.kbase.us/services/service_wizard\"; else serviceWizardUrl = x;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6119/buggy-version/lib.src.kbuchime.KbUchimeServer.java", "BodyUseAPI": [], "Fixed commit": "b9bc286be2762e54e744e308474942af66000de8", "Url": "https://api.github.com/repos/kbaseapps/kb_uchime", "Date": "2016-12-01T21:38:24Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHeader) atLeastOneComponentInThisRow = true; else if ((cell.getContent()) != null) atLeastOneComponentInThisRow = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7081/buggy-version/openFaces.source.org.openfaces.renderkit.table.TableHeaderOrFooter.java", "BodyUseAPI": [], "Fixed commit": "bc6bf479fe1e93b769123aff7405861f403061f2", "Url": "https://api.github.com/repos/OpenFaces-org/OpenFaces", "Date": "2015-02-27T15:18:26Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentRequest.isComplete())) logger.warn((\"message interrupted on close \" + (currentRequest.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8764/buggy-version/jactor2-core.src.main.java.org.agilewiki.jactor2.core.reactors.impl.ReactorImpl.java", "BodyUseAPI": ["org.slf4j.Logger.warn((\"message interrupted on close \" + (currentRequest.toString())))", "org.agilewiki.jactor2.core.requests.impl.RequestImpl.toString()"], "Fixed commit": "76840d4709d57e56e2f4401c3066b9d1e536d0fa", "Url": "https://api.github.com/repos/laforge49/JActor2", "Date": "2014-03-09T06:32:46Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 0) && ((content.charAt(i)) == '-')) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4447/buggy-version/src.com.util.Util.java", "BodyUseAPI": [], "Fixed commit": "0cffe4ee8468ded628e09d8805c4c978ea3d97b2", "Url": "https://api.github.com/repos/sc703bupt/MathematicaProj", "Date": "2015-04-11T07:17:28Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapFragment) != null) { if (trace.type.equals(Trace.GPS)) { mapFragment.updateMapLocation(trace); }else if (trace.type.equals(Trace.ROTATION_MATRIX)) { mapFragment.updateRotation(trace); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5404/buggy-version/app.src.main.java.wisc.drivesense.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8633366f1a2bbc32ea944b564a91d7e64e5898cc", "Url": "https://api.github.com/repos/kanglei1130/DriveSense", "Date": "2016-11-16T22:33:59Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isChecked == (viewModel.isChecked())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2140/buggy-version/app.src.main.java.org.openlmis.core.view.holder.SelectEmergencyProductsViewHolder.java", "BodyUseAPI": [], "Fixed commit": "74b65a9bf4e29c89cb155f6175d5e5c3b1c6da29", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2016-04-21T02:41:48Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fm.findFragmentById(R.id.fragment_discover_data_list)) != null) transaction.remove(fm.findFragmentById(R.id.fragment_discover_data_list));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6636/buggy-version/app.src.main.java.kat.android.com.movielist.MovieListActivity.java", "BodyUseAPI": ["android.support.v4.app.FragmentManager.findFragmentById(R.id.fragment_discover_data_list)", "android.support.v4.app.FragmentTransaction.remove(fm.findFragmentById(R.id.fragment_discover_data_list))"], "Fixed commit": "8a32650262b3546e76a5bda62853effd8b5e71a8", "Url": "https://api.github.com/repos/DmytroKataryna/MovieList", "Date": "2015-03-20T12:37:23Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.input) != null) this.closeInputStream();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3167/buggy-version/fougere.src.main.java.fr.inria.rsommerard.fougere.wifidirect.Active.java", "BodyUseAPI": [], "Fixed commit": "81b67abf601c57d9e60e49ba7fcc81850a0dfd8d", "Url": "https://api.github.com/repos/m3ftah/fougere", "Date": "2016-11-30T15:29:46Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.output) != null) this.closeOutputStream();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3167/buggy-version/fougere.src.main.java.fr.inria.rsommerard.fougere.wifidirect.Active.java", "BodyUseAPI": [], "Fixed commit": "81b67abf601c57d9e60e49ba7fcc81850a0dfd8d", "Url": "https://api.github.com/repos/m3ftah/fougere", "Date": "2016-11-30T15:29:46Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.socket) != null) this.closeSocket();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3167/buggy-version/fougere.src.main.java.fr.inria.rsommerard.fougere.wifidirect.Active.java", "BodyUseAPI": [], "Fixed commit": "81b67abf601c57d9e60e49ba7fcc81850a0dfd8d", "Url": "https://api.github.com/repos/m3ftah/fougere", "Date": "2016-11-30T15:29:46Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (sub.has(in.co.thingsdata.gurukul.services.request.JSON_FIELD_SUBJECT_NAME)) { subjectName = sub.getString(in.co.thingsdata.gurukul.services.request.JSON_FIELD_SUBJECT_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3571/buggy-version/app.src.main.java.in.co.thingsdata.gurukul.services.request.GetResultReq.java", "BodyUseAPI": ["org.json.JSONObject.getString(in.co.thingsdata.gurukul.services.request.JSON_FIELD_SUBJECT_NAME)"], "Fixed commit": "f646c3318abf459e6bb0ffa0d043740159e9b0b8", "Url": "https://api.github.com/repos/vikassrivastava123/Gurukul", "Date": "2017-03-07T16:04:08Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["message.getFrom().getDisplayName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (displayName != null) { return ir.siper.core.SiperUtils.decode(displayName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8340/buggy-version/core-android.src.main.java.ir.siper.core.Message.java", "BodyUseAPI": ["ir.siper.core.SiperUtils.decode(java.lang.String)"], "Fixed commit": "9d95b06745689c552626b805f35f037622aecc04", "Url": "https://api.github.com/repos/siperteam/core-android", "Date": "2017-09-03T07:06:56Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(attackerList.get(i).isDead)) damageToBeDone += attackerList.get(i).attackDamage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8018/buggy-version/PicnicProtector.src.attackerDriver.java", "BodyUseAPI": ["attackerList.get(i).attackDamage()", "java.util.ArrayList<Attacker>.get(int)"], "Fixed commit": "5f91eae1e81d7610c613ed6e8da71f115287f31e", "Url": "https://api.github.com/repos/josephjnatale/CSC305", "Date": "2016-07-11T18:46:57Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, com.felipecsl.asymmetricgridview.library.widget.RowInfo<T>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rowInfo == null) return convertView;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8973/buggy-version/library.src.main.java.com.felipecsl.asymmetricgridview.library.widget.AsymmetricGridViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "cdeac01025ed78ebc4a6fb5f06f6ac5beacb3d57", "Url": "https://api.github.com/repos/felipecsl/AsymmetricGridView", "Date": "2014-10-27T01:40:26Z"},
{"Line": "=>908", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.DatabaseMetaData.getDatabaseProductName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dbProdName.toLowerCase().contains(\"microsoft\")) && (dbProdName.toLowerCase().contains(\"sql\"))) { sqlQuery = sqlQuery.replaceAll(\"\\\\+\", \"union all\"); sqlQuery = sqlQuery.replaceFirst(\"select\", \"select sum(c) from \"); sqlQuery = sqlQuery + \" x\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8882/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.java", "BodyUseAPI": [], "Fixed commit": "eaf85b7f5373b038481efe615c7431fe109f7710", "Url": "https://api.github.com/repos/lakmali/carbon-apimgt", "Date": "2016-05-10T07:20:11Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["systemService.getFilesService().getFileWithNumber(req.getFileNumber())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (file != null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8442/buggy-version/src.main.java.com.degla.utils.ExcelFileBuilder.java", "BodyUseAPI": [], "Fixed commit": "1092fa5cf1b7bd6dccab94ab74e7373e32a10524", "Url": "https://api.github.com/repos/cliniome/alfahresSystem", "Date": "2015-08-07T23:27:21Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dhr.findByName(vm.getLinkedhost()).isEmpty())) { rpc.stopDockerHost(dhr.findByName(vm.getLinkedhost()).get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/433/buggy-version/src.main.java.at.tuwien.infosys.utility.Utilities.java", "BodyUseAPI": ["at.tuwien.infosys.resourceManagement.ResourcePoolConnector.stopDockerHost(dhr.findByName(vm.getLinkedhost()).get(0))", "at.tuwien.infosys.utility.DockerHostRepository.findByName(vm.getLinkedhost())", "dhr.findByName(vm.getLinkedhost()).get(int)", "at.tuwien.infosys.entities.PooledVM.getLinkedhost()"], "Fixed commit": "03a2a21b9c368b730836c6e0ed644066d9a2a162", "Url": "https://api.github.com/repos/visp-streaming/runtime", "Date": "2016-10-06T08:45:36Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.sound.midi.MidiDevice.Info.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) name = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7388/buggy-version/edisyn.Midi.java", "BodyUseAPI": [], "Fixed commit": "15c709c0bef160aae7397ee3009ea4fb50fea40b", "Url": "https://api.github.com/repos/eclab/edisyn", "Date": "2017-09-26T00:59:07Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((desc == null) || (desc.equals(\"\"))) desc = \"MIDI Device\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7388/buggy-version/edisyn.Midi.java", "BodyUseAPI": [], "Fixed commit": "15c709c0bef160aae7397ee3009ea4fb50fea40b", "Url": "https://api.github.com/repos/eclab/edisyn", "Date": "2017-09-26T00:59:07Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentChapter) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2165/buggy-version/app.app.src.main.java.activity.reading.ReadingActivity.java", "BodyUseAPI": [], "Fixed commit": "465b50287b3ed6686566b60981bcef4d4b1d1deb", "Url": "https://api.github.com/repos/unfoldingWord-dev/uw-android", "Date": "2015-09-28T20:47:29Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getBook()) != null) { setAudioPlayerVisibility(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2165/buggy-version/app.app.src.main.java.activity.reading.BaseReadingActivity.java", "BodyUseAPI": [], "Fixed commit": "465b50287b3ed6686566b60981bcef4d4b1d1deb", "Url": "https://api.github.com/repos/unfoldingWord-dev/uw-android", "Date": "2015-09-28T20:47:29Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.DataInputStream.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entity_data == 1) { entity.updateRiderPosition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4507/buggy-version/DE-common.elevators.network.ElevatorPacketHandler.java", "BodyUseAPI": [], "Fixed commit": "976fa07540e77e7599d1cbf39220523f2ed02464", "Url": "https://api.github.com/repos/SlimeVoid/DynamicElevators-FML", "Date": "2012-12-03T10:15:46Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((answerIn.indexOf(\"+\")) != (answerIn.lastIndexOf(\"+\"))) { withBIn = answerIn.substring(((answerIn.indexOf(\"+\")) + 1), answerIn.lastIndexOf(\"x\")); withCIn = answerIn.substring(((answerIn.lastIndexOf(\"+\")) + 1), answerIn.length()); }else if ((answerIn.lastIndexOf(\"+\")) < (answerIn.lastIndexOf(\"x\"))) { withBIn = answerIn.substring(((answerIn.indexOf(\"+\")) + 1), answerIn.lastIndexOf(\"x\")); withCIn = answerIn.substring(answerIn.lastIndexOf(\"-\"), answerIn.length()); }else { withBIn = answerIn.substring(answerIn.lastIndexOf(\"-\"), answerIn.lastIndexOf(\"x\")); withCIn = answerIn.substring(answerIn.lastIndexOf(\"+\"), answerIn.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3502/buggy-version/Problem.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.length()", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "242e7a5665e9fe2a7dc9a48d18333d63f7f41697", "Url": "https://api.github.com/repos/VarunAyyappan/jumpIn2", "Date": "2017-05-16T06:29:17Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUp) frogYIn = 355 - (20 * (point2Y)); else frogYIn = 355 - (7 * (point2Y));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3502/buggy-version/Problem.java", "BodyUseAPI": [], "Fixed commit": "242e7a5665e9fe2a7dc9a48d18333d63f7f41697", "Url": "https://api.github.com/repos/VarunAyyappan/jumpIn2", "Date": "2017-05-16T06:29:17Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((defConfigStream) == null) { log.logSevere(\"The required resource isn't found!\"); }else { while ((len = defConfigStream.read(buf)) > 0) { out.write(buf, 0, len); } out.close(); defConfigStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/296/buggy-version/VoteforDay.src.za.net.quantumsicarius.voteforday.Language.LanguageHandler.java", "BodyUseAPI": [], "Fixed commit": "02b1680ca0c8a7633f7c6648b1d75438885d3103", "Url": "https://api.github.com/repos/Quantum-Sicarius-za-net/Vote-for-Day", "Date": "2012-04-29T09:29:16Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subscriber.getState()) != null) { newSubscription.setStateCode(subscriber.getState().getStateCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4827/buggy-version/kilkari.src.main.java.org.motechproject.nms.kilkari.service.impl.SubscriptionServiceImpl.java", "BodyUseAPI": ["org.motechproject.nms.kilkari.domain.Subscription.setStateCode(subscriber.getState().getStateCode())", "subscriber.getState().getStateCode()", "org.motechproject.nms.kilkari.domain.Subscriber.getState()"], "Fixed commit": "9305ec40705858b08334303b24c96131824b754f", "Url": "https://api.github.com/repos/motech-implementations/bbc-nms", "Date": "2015-03-25T06:05:21Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((writeFile()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9058/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.server.datanode.ShortCircuitWriteServer.java", "BodyUseAPI": [], "Fixed commit": "21c07d2bc194615fc8feeca5ca38b9e03ba453c5", "Url": "https://api.github.com/repos/drankye/hadoop", "Date": "2016-07-25T03:37:06Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) mListener.onFailedSavingCertificate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/569/buggy-version/src.com.owncloud.android.ui.dialog.SslValidatorDialog.java", "BodyUseAPI": [], "Fixed commit": "04803ae879ce8762c2b59656a0b5c1614c18712f", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2013-06-26T10:45:35Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.lwjgl.input.Mouse.isButtonDown(0)) { zom.setAnimationToAttack(); }else { zom.setAnimationToWalk(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8500/buggy-version/src.gui.Play.java", "BodyUseAPI": [], "Fixed commit": "96352dd1db5e55efa6274e42c6ffd287829a1304", "Url": "https://api.github.com/repos/hungthuanmk/HCMIU_PlantsAndZombies", "Date": "2017-10-13T12:01:38Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).get()", "io.cattle.platform.iaas.api.auth.dao.AuthDao.hasAccessToAnyProject(java.util.Set<io.cattle.platform.api.auth.Identity>,boolean,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((!hasAccessToAProject) && (hasLoggedIn != null)) && (!((java.lang.Boolean) (hasLoggedIn)))) { projectResourceManager.createProjectForUser(account); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4735/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "4b765b02535e99b46bc305c2d0e6dcf6293fec0b", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (account != null) { io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4735/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": ["io.cattle.platform.object.util.DataAccessor.fields(io.cattle.platform.core.model.Account)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(boolean)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN)"], "Fixed commit": "4b765b02535e99b46bc305c2d0e6dcf6293fec0b", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.stagemonitor.core.configuration.ConfigurationOption<java.util.List<java.lang.String>>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (urls.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/611/buggy-version/stagemonitor-core.src.main.java.org.stagemonitor.core.CorePlugin.java", "BodyUseAPI": [], "Fixed commit": "d52a1bb677974f4b1924b62c17e1da82d870f336", "Url": "https://api.github.com/repos/stagemonitor/stagemonitor", "Date": "2016-01-25T14:38:14Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Game.c) == 0) { if (((Game.path.size()) > 0) && ((Game.pathTo) != null)) { if ((Game.path.get(((Game.path.size()) - 1)).distance(new java.awt.Point(x, y))) >= (Game.pathTo.getRequiredDistanceToWaypoint())) Game.path.add(new java.awt.Point(x, y)); }else Game.path.add(new java.awt.Point(x, y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8631/buggy-version/src.game.airportcontrol.gamesettings.InputHandler.java", "BodyUseAPI": [], "Fixed commit": "6f2af5ab85cd5865efe51c362be363798629a9c1", "Url": "https://api.github.com/repos/Inventitech/AirportControl", "Date": "2011-03-06T16:12:11Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rs.next()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2413/buggy-version/src.UserRegister.java", "BodyUseAPI": [], "Fixed commit": "52a6d1f4eb9376a1ddd766042363539096e86350", "Url": "https://api.github.com/repos/Net-Dictionry/MyServer", "Date": "2016-12-17T15:47:07Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.drill.exec.planner.sql.SchemaUtilites.findSchema(org.apache.calcite.schema.SchemaPlus,java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.drill.exec.planner.sql.SchemaUtilites.isRootSchema(schema)) { throw org.apache.drill.common.exceptions.UserException.validationError().message(\"No schema selected.\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5736/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler.java", "BodyUseAPI": [], "Fixed commit": "1cc5511553e5bad0aab541ceea594816e8c912e7", "Url": "https://api.github.com/repos/vkorukanti/drill", "Date": "2015-05-29T15:57:40Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.drill.exec.planner.sql.SchemaUtilites.findSchema(org.apache.calcite.schema.SchemaPlus,java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (schema == null) { org.apache.drill.exec.planner.sql.SchemaUtilites.throwSchemaNotFoundException(defaultSchema, SchemaUtilites.SCHEMA_PATH_JOINER.join(schemaPathGivenInCmd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5736/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler.java", "BodyUseAPI": [], "Fixed commit": "1cc5511553e5bad0aab541ceea594816e8c912e7", "Url": "https://api.github.com/repos/vkorukanti/drill", "Date": "2015-05-29T15:57:40Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((androidUserInterface) != null) { resetNewPrivateMessageIcon(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5255/buggy-version/kouchat-android-impl.src.main.java.net.usikkert.kouchat.android.controller.PrivateChatController.java", "BodyUseAPI": [], "Fixed commit": "affc8d4492582dc7c56dfdc2af0b6796ef933450", "Url": "https://api.github.com/repos/blurpy/kouchat-android", "Date": "2012-12-02T12:28:39Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.isilon.restapi.IsilonApi.nfsv4Enabled(storageSystem.getFirmwareVersion())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isNfsV4Enabled) { protocols.add(com.emc.storageos.volumecontroller.impl.plugins.IsilonCommunicationInterface.NFSv4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3274/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.plugins.IsilonCommunicationInterface.java", "BodyUseAPI": [], "Fixed commit": "d5150ccc18ac4336d7687731a39883298c3e22e7", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-11-02T09:33:00Z"},
{"Line": "=>750", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.isilon.restapi.IsilonApi.nfsv4Enabled(storageSystem.getFirmwareVersion())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isNfsV4Enabled) { protocolSet.add(com.emc.storageos.volumecontroller.impl.plugins.IsilonCommunicationInterface.NFSv4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3274/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.plugins.IsilonCommunicationInterface.java", "BodyUseAPI": [], "Fixed commit": "d5150ccc18ac4336d7687731a39883298c3e22e7", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-11-02T09:33:00Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.util.List<java.awt.geom.Point2D>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((markerPos) < (data.size())) { double value = data.get(markerPos).getX(); int x = ((int) (ValueXToScreenX(value))); g.drawLine(x, yTop, x, yBot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7883/buggy-version/trackviewer.src.main.chart.JChart.java", "BodyUseAPI": ["java.awt.geom.Point2D.getX()", "java.util.List<java.awt.geom.Point2D>.get(java.lang.Integer)"], "Fixed commit": "ae5ef9ece243bc25b7c10686b02e094d6b6b2a59", "Url": "https://api.github.com/repos/msteiger/trackviewer", "Date": "2012-08-04T13:36:19Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((children) != null) { for (net.sourceforge.pmd.lang.ast.Node child : children) { child.jjtSetParent(null); } children = new net.sourceforge.pmd.lang.ast.Node[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2532/buggy-version/pmd-core.src.main.java.net.sourceforge.pmd.lang.ast.AbstractNode.java", "BodyUseAPI": [], "Fixed commit": "e36a3a3d42641ae1a4b8b7289c4536c5cae6d8c6", "Url": "https://api.github.com/repos/MatiasComercio/pmd", "Date": "2017-10-29T00:23:52Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRegion(fileName).hover()) != 1) throw new com.qspin.qtaste.testsuite.QTasteTestFailException(((\"Cannot move the pointer on the location (image: \" + fileName) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6984/buggy-version/plugins_src.sikuli.src.main.java.com.qspin.qtaste.sikuli.server.Sikuli.java", "BodyUseAPI": [], "Fixed commit": "ceee73e9c1dbaef7a4c9c03299d0d062282ac9fb", "Url": "https://api.github.com/repos/qspin/qtaste", "Date": "2016-09-01T10:57:41Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (semanticHunks.contains(hid)) validHunks.add(hid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/43/buggy-version/src.miningChanges.ObtainVSMScore.java", "BodyUseAPI": ["java.util.HashSet<java.lang.Integer>.add(int)"], "Fixed commit": "f8815d523b52aec57c59262276471af76476514f", "Url": "https://api.github.com/repos/justinwm/Locus", "Date": "2016-12-08T13:34:40Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (split[1].equals(\"true\")) semanticHunks.add(index);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/43/buggy-version/src.miningChanges.ObtainVSMScore.java", "BodyUseAPI": [], "Fixed commit": "f8815d523b52aec57c59262276471af76476514f", "Url": "https://api.github.com/repos/justinwm/Locus", "Date": "2016-12-08T13:34:40Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBMapper.load(java.lang.Class,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((user.getAchievements()) != null) { achieveString = user.getAchievements().split(\",\"); }else { java.lang.String[] temp = new java.lang.String[1]; temp[0] = \"0\"; achieveString = temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4301/buggy-version/app.src.main.java.com.csulb.decisionator.decisionator.MyProfile.java", "BodyUseAPI": ["com.csulb.decisionator.decisionator.User.getAchievements()", "user.getAchievements().split(java.lang.String)"], "Fixed commit": "a7b3267ff126871bdde58101d30f239eb1b58e86", "Url": "https://api.github.com/repos/Mosquito-Mashers/Decisionator", "Date": "2016-05-12T23:33:33Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.get(0)) instanceof org.apache.pig.data.DataByteArray) { jsonStr = ((org.apache.pig.data.DataByteArray) (input.get(0))).toString(); }else if ((input.get(0)) instanceof java.lang.String) { jsonStr = ((java.lang.String) (input.get(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7030/buggy-version/sandbox.piggybank.src.main.java.com.redygest.piggybank.twitter.ExtractTweet.java", "BodyUseAPI": ["((org.apache.pig.data.DataByteArray) (input.get(0))).toString()", "org.apache.pig.data.Tuple.get(int)", "org.apache.pig.data.Tuple.get(int)", "org.apache.pig.data.Tuple.get(int)"], "Fixed commit": "a74fb5545fdac71b4fa53e8d46c04f35087b3b7c", "Url": "https://api.github.com/repos/semanticvoid/reDygest", "Date": "2012-05-17T08:40:00Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Integer>.indexOf(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (index != (-1)) { mSelectPositions.remove(index); notifySelectorStateChanged(new int[]{ position }, null); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8718/buggy-version/CommonUtil-mini.adapter.src.main.java.com.heaven7.adapter.selector.MultiSelectHelper.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.remove(int)"], "Fixed commit": "1a1b61c82cfd1bd9e5cad6ac24be0b9f1886dd74", "Url": "https://api.github.com/repos/LightSun/android-common-util-light", "Date": "2017-01-13T11:03:28Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(env.processingOver())) { java.util.Set<? extends javax.lang.model.element.Element> annotatedElements = env.getElementsAnnotatedWith(de.kdi.validate.ValidateRegex.class); for (javax.lang.model.element.Element e : annotatedElements) { checkIfPatternCompilble(((javax.lang.model.element.VariableElement) (e))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6887/buggy-version/src.main.java.de.kdi.RegexValidatorProcessor.java", "BodyUseAPI": ["javax.annotation.processing.RoundEnvironment.getElementsAnnotatedWith(java.lang.Class)"], "Fixed commit": "ee3dc73f7470496277f4b4516e2d6042fd3964a8", "Url": "https://api.github.com/repos/dhaeb/Jegex-Validator", "Date": "2014-05-29T19:16:50Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.matheclipse.core.interfaces.IRational.isNegative()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isNegative) { tag(buf, \"mo\", \"-\"); f = frac.negate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/500/buggy-version/symja_android_library.matheclipse-core.src.main.java.org.matheclipse.core.form.mathml.MathMLFormFactory.java", "BodyUseAPI": [], "Fixed commit": "0bd51f8fda93d3c3abd39f988e112f71564f4364", "Url": "https://api.github.com/repos/axkr/symja_android_library", "Date": "2017-11-24T17:55:14Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.wifi.WifiStateMachine.syncGetWifiState()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((mWifiState != (WIFI_STATE_ENABLING)) && (mWifiState != (WIFI_STATE_ENABLED))) { if (com.android.server.wifi.WifiController.DBG) { android.util.Slog.d(com.android.server.wifi.WifiController.TAG, (\"Mismatch in the state \" + mWifiState)); } mWifiStateMachine.setSupplicantRunning(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9031/buggy-version/services.java.com.android.server.wifi.WifiController.java", "BodyUseAPI": ["android.util.Slog.d(java.lang.String,java.lang.String)"], "Fixed commit": "b00262d43a43685e274c2d1ddb225bc11788b01a", "Url": "https://api.github.com/repos/CRXTeam/android_frameworks_base", "Date": "2014-07-28T18:59:07Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kr.edcan.lumihana.carhome.Utils.WeatherManager.weatherData.getWeather().getMinutely().get(0).getTemperature().getTc()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (temp == null) temp = \"0.0f\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1816/buggy-version/app.src.main.java.kr.edcan.lumihana.carhome.Utils.WeatherManager.java", "BodyUseAPI": [], "Fixed commit": "66deb4549cc2c216a7fc3ccc6ce85cd7b4c2d135", "Url": "https://api.github.com/repos/kimok0508/CarHome", "Date": "2016-08-23T05:41:33Z"},
{"Line": "=>668", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paymentIntent.isBluetoothPaymentUrl()) directPaymentEnableView.setChecked((resultCode == (android.app.Activity.RESULT_OK)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4559/buggy-version/wallet.src.de.schildbach.wallet.ui.SendCoinsFragment.java", "BodyUseAPI": [], "Fixed commit": "2960252346694c3551f2b2274fc48b48edb09cd0", "Url": "https://api.github.com/repos/schildbach/bitcoin-wallet", "Date": "2014-03-01T11:36:54Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paymentIntent.isBluetoothPaymentUrl()) directPaymentEnableView.setChecked((((bluetoothAdapter) != null) && (bluetoothAdapter.isEnabled()))); else if (paymentIntent.isHttpPaymentUrl()) directPaymentEnableView.setChecked(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4559/buggy-version/wallet.src.de.schildbach.wallet.ui.SendCoinsFragment.java", "BodyUseAPI": ["de.schildbach.wallet.PaymentIntent.isHttpPaymentUrl()"], "Fixed commit": "2960252346694c3551f2b2274fc48b48edb09cd0", "Url": "https://api.github.com/repos/schildbach/bitcoin-wallet", "Date": "2014-03-01T11:36:54Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (encoded) { decodedUsername = decodeUsername(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6215/buggy-version/src.main.java.de.willigeentwickler.mk2.users.rest.UserController.java", "BodyUseAPI": [], "Fixed commit": "1fc67e86ae87e8133312df4713cbd98299c55563", "Url": "https://api.github.com/repos/MehlboxKonsole/mk2-backend", "Date": "2015-10-30T23:46:26Z"},
{"Line": "=>706", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["provider.getNetworkServices().getVlanSupport().getNetworkInterface(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (host != null) { ip.setServerId(host.getProviderVirtualMachineId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1106/buggy-version/src.main.java.org.dasein.cloud.terremark.network.TerremarkIpAddressSupport.java", "BodyUseAPI": ["org.dasein.cloud.network.IpAddress.setServerId(host.getProviderVirtualMachineId())", "org.dasein.cloud.network.NetworkInterface.getProviderVirtualMachineId()"], "Fixed commit": "728c85b2a31c0c5eae6c3a39a87b1ea4683a1cfc", "Url": "https://api.github.com/repos/greese/dasein-cloud-terremark", "Date": "2013-02-26T00:31:27Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 11) { this.invalidateOptionsMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2767/buggy-version/Android.Car_Ramp_Physics_v2.src.edu.uml.cs.isense.carphysicsv2.CarRampPhysicsV2.java", "BodyUseAPI": [], "Fixed commit": "b6cbf1161b3992966091e8728b92323c9819aebb", "Url": "https://api.github.com/repos/AlanRosenthal/iSENSE-Hardware", "Date": "2013-11-30T21:23:33Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((data.Coupon) (this.coupons.get(code))) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8573/buggy-version/OnlineShopCore.src.data.Storage.java", "BodyUseAPI": [], "Fixed commit": "721a3b7e0be5375c194c8cd42ce8f451a5a24a6b", "Url": "https://api.github.com/repos/chrisUse/WebEntwT", "Date": "2013-01-22T16:25:50Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((token.length) > 23) type = token[23];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1332/buggy-version/src.com.maxl.java.aips2sqlite.GlnCodes.java", "BodyUseAPI": [], "Fixed commit": "96724fa026135485ecec7cfb84be2afdc9dc1181", "Url": "https://api.github.com/repos/zdavatz/aips2sqlite", "Date": "2015-10-11T18:09:56Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((asyncTask.getStatus()) != (AsyncTask.Status.RUNNING)) asyncTask.execute();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1385/buggy-version/app.src.main.java.com.acreath.c1yde3.datavisualization.MainActivity.java", "BodyUseAPI": ["android.os.AsyncTask<java.lang.Void, java.lang.Integer, java.lang.Void>.execute()"], "Fixed commit": "038a83385a317e7d72fc318f348725e5841af0ab", "Url": "https://api.github.com/repos/cenumi/Datavisualization", "Date": "2017-11-15T01:00:47Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCancelled()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1385/buggy-version/app.src.main.java.com.acreath.c1yde3.datavisualization.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "038a83385a317e7d72fc318f348725e5841af0ab", "Url": "https://api.github.com/repos/cenumi/Datavisualization", "Date": "2017-11-15T01:00:47Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((is.getItemMeta()) == null) { is = new org.bukkit.inventory.ItemStack(org.bukkit.Material.WATER_BUCKET); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3949/buggy-version/src.main.java.com.untamedears.JukeAlert.gui.SnitchLogGUI.java", "BodyUseAPI": [], "Fixed commit": "398413e64fe0dabe1c1020c0e51911b686e3edab", "Url": "https://api.github.com/repos/DevotedMC/JukeAlert", "Date": "2016-09-22T12:13:48Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.neo4j.kernel.configuration.Config.get(org.neo4j.unsafe.impl.batchimport.Configuration.Overridden)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pageCacheMemory == null) { java.lang.String defaultPageCacheMemory = org.neo4j.kernel.impl.pagecache.ConfiguringPageCacheFactory.defaultHeuristicPageCacheMemory(); pageCacheMemory = org.neo4j.unsafe.impl.batchimport.BYTES.apply(defaultPageCacheMemory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7165/buggy-version/community.kernel.src.main.java.org.neo4j.unsafe.impl.batchimport.Configuration.java", "BodyUseAPI": [], "Fixed commit": "d857774e90169170a78bc09a2e0fb27394378023", "Url": "https://api.github.com/repos/mneedham/neo4j", "Date": "2016-11-07T09:39:21Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isVisible()) { android.content.SharedPreferences sharedPrefs = edu.mit.mitmobile2.PreferenceUtils.getDefaultSharedPreferencesMultiProcess(getActivity()); if (filterChanged(sharedPrefs)) { getCalendarEvents(getArguments().getString(edu.mit.mitmobile2.events.fragment.CalendarDayFragment.DATE)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/959/buggy-version/app.src.main.java.edu.mit.mitmobile2.events.fragment.CalendarDayFragment.java", "BodyUseAPI": [], "Fixed commit": "d6f8c36516d3ad094c4f9e6d9df37b465a6301e5", "Url": "https://api.github.com/repos/MIT-Mobile/MIT-Mobile-for-Android", "Date": "2015-06-08T15:01:40Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == charset) { charset = com.PATHoleilu.hutool.util.CharsetUtil.CHARSET_UTF_8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/235/buggy-version/src.main.java.com.PATHoleilu.hutool.http.HttpUtil.java", "BodyUseAPI": [], "Fixed commit": "70734bb9c43cd32cfd15b5a8dce96202e4a7a7de", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2016-10-25T03:06:04Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (player == null) { org.bukkit.Bukkit.broadcastMessage(message.replaceAll(\"(&([a-f0-9]))\", \"\\u00a7$2\")); }else { player.sendMessage(message.replaceAll(\"(&([a-f0-9]))\", \"\\u00a7$2\").replaceAll(\"%WORLD%\", me.Nekoyoubi.Expra.Nekoyoubi.titleCase(player.getWorld().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7525/buggy-version/src.me.Nekoyoubi.eXPra.Nekoyoubi.java", "BodyUseAPI": ["me.Nekoyoubi.Expra.Nekoyoubi.titleCase(player.getWorld().getName())", "org.bukkit.entity.Player.sendMessage(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "org.bukkit.entity.Player.getWorld()", "player.getWorld().getName()"], "Fixed commit": "b0cb0fc01e0077d889b03e8b2c45a3d44575c1b2", "Url": "https://api.github.com/repos/nekoyoubi/eXPra", "Date": "2011-12-03T03:32:56Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(targetDir.exists())) targetDir.mkdir();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2475/buggy-version/src.main.java.com.jking31cs.DataGenerationDriver.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "639580f58b62a28c5c7cd68d914f13763cab030a", "Url": "https://api.github.com/repos/jking31cs/pokemon-learning", "Date": "2016-11-17T14:07:47Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == i) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2475/buggy-version/src.main.java.com.jking31cs.DataGenerationDriver.java", "BodyUseAPI": [], "Fixed commit": "639580f58b62a28c5c7cd68d914f13763cab030a", "Url": "https://api.github.com/repos/jking31cs/pokemon-learning", "Date": "2016-11-17T14:07:47Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(outputDir.exists())) outputDir.mkdir();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2475/buggy-version/src.main.java.com.jking31cs.DataGenerationDriver.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "639580f58b62a28c5c7cd68d914f13763cab030a", "Url": "https://api.github.com/repos/jking31cs/pokemon-learning", "Date": "2016-11-17T14:07:47Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (outputFileWriter != null) { outputFileWriter.println(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4747/buggy-version/02Uebung.src.main.java.ch.bnntd.bfh.pgrm.filesexc.PersonDataProcessor.java", "BodyUseAPI": ["java.io.PrintWriter.println(java.lang.String)"], "Fixed commit": "fc487e15f6ad474d89336bbc1a7a5f23cdbbf22f", "Url": "https://api.github.com/repos/jntme/bfh_progrmeth", "Date": "2015-10-21T12:47:24Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (outputFileWriter != null) { outputFileWriter.println(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4747/buggy-version/02Uebung.src.main.java.ch.bnntd.bfh.pgrm.filesexc.PersonDataProcessor.java", "BodyUseAPI": ["java.io.PrintWriter.println(java.lang.String)"], "Fixed commit": "fc487e15f6ad474d89336bbc1a7a5f23cdbbf22f", "Url": "https://api.github.com/repos/jntme/bfh_progrmeth", "Date": "2015-10-21T12:47:24Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(this.specSourceDirectory).isDirectory())) { getLog().info(((\"given \" + (specSourceDirectory)) + \" does not exists - skipping RSpec test'\")); return; }else { outputfile = new java.io.File(this.project.getBuild().getDirectory().replace(\"${project.basedir}/\", \"\"), reportName); if (outputfile.exists()) { outputfile.delete(); } super.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4889/buggy-version/rspec-maven-plugin.src.main.java.de.saumya.mojo.rspec.RSpecMojo.java", "BodyUseAPI": [], "Fixed commit": "c9258a0836d146ff18ba9af4d9c12bff332621f8", "Url": "https://api.github.com/repos/markdingram/jruby-maven-plugins", "Date": "2014-06-23T13:28:38Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anActiveLeg.isNew()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7732/buggy-version/src.java.com.astoev.cave.survey.util.DaoUtil.java", "BodyUseAPI": [], "Fixed commit": "08ac117e8e57c6a89181d6d49e6d656c99c90045", "Url": "https://api.github.com/repos/lz1asl/CaveSurvey", "Date": "2014-05-21T19:49:19Z"},
{"Line": "=>668", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aLegEdited.isNew()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7732/buggy-version/src.java.com.astoev.cave.survey.activity.main.PointActivity.java", "BodyUseAPI": [], "Fixed commit": "08ac117e8e57c6a89181d6d49e6d656c99c90045", "Url": "https://api.github.com/repos/lz1asl/CaveSurvey", "Date": "2014-05-21T19:49:19Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (expiredSeconds > 0) { this.expireDate = org.joda.time.DateTime.now().plusSeconds(expiredSeconds).toDate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7034/buggy-version/src.main.java.com.minyisoft.webapp.weixin.common.model.ExpirableCacheItem.java", "BodyUseAPI": [], "Fixed commit": "59eec758a4670f3096dd8d28c8ab0f78d63afeeb", "Url": "https://api.github.com/repos/oqy/weixin-common", "Date": "2014-09-27T12:35:42Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.mutable.Mutable<org.apache.hyracks.algebricks.core.algebra.base.ILogicalExpression>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (expr.isFunctional()) { java.util.Set<org.apache.hyracks.algebricks.core.algebra.base.LogicalVariable> liveVars = new java.util.HashSet<org.apache.hyracks.algebricks.core.algebra.base.LogicalVariable>(); java.util.List<org.apache.hyracks.algebricks.core.algebra.base.LogicalVariable> usedVars = new java.util.ArrayList<org.apache.hyracks.algebricks.core.algebra.base.LogicalVariable>(); org.apache.hyracks.algebricks.core.algebra.operators.logical.visitors.VariableUtilities.getLiveVariables(op, liveVars); org.apache.hyracks.algebricks.core.algebra.operators.logical.visitors.VariableUtilities.getUsedVariables(op, usedVars); if (((liveVars.contains(exprEqClass.getVariable())) || (!(liveVars.containsAll(usedVars)))) || ((op) == (exprEqClass.getFirstOperator()))) { exprRef.setValue(new org.apache.hyracks.algebricks.core.algebra.expressions.VariableReferenceExpression(exprEqClass.getVariable())); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2975/buggy-version/hyracks-fullstack.algebricks.algebricks-rewriter.src.main.java.org.apache.hyracks.algebricks.rewriter.rules.ExtractCommonExpressionsRule.java", "BodyUseAPI": [], "Fixed commit": "3e6cf3c81233746baaff7619568f593d565d471e", "Url": "https://api.github.com/repos/sjaco002/incubator-asterixdb", "Date": "2016-08-09T22:14:44Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.util.StringUtil.split(java.lang.String,StringPool.UNDERLINE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((splitCondition.length) == 2) { waitingTime = splitCondition[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7867/buggy-version/portlets.opencps-portlet.docroot.WEB-INF.src.org.opencps.backend.util.BackendUtils.java", "BodyUseAPI": [], "Fixed commit": "23e6be3900f4b86a88fd25df31514c7415b7422c", "Url": "https://api.github.com/repos/nhan0987/opencps", "Date": "2016-11-17T02:35:01Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (qualifierName != null) colName = (qualifierName + \".\") + colName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5004/buggy-version/splice_machine.src.main.java.com.splicemachine.derby.impl.load.HdfsImport.java", "BodyUseAPI": [], "Fixed commit": "74a8637e77cf756fe4620a8ec964ead14df1abd3", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2017-07-21T13:39:57Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((e.character) == '.') && (e.getSource().toString().contains(\".\"))) { e.doit = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6118/buggy-version/src.gui.Validation.java", "BodyUseAPI": [], "Fixed commit": "43e772b53cda93e8bd483b6b7ed41d67db7ae9db", "Url": "https://api.github.com/repos/jon2512chua/Honours-Marks-Database", "Date": "2013-10-09T06:07:48Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((valueParameters[r]) != null) { for (int c = 0; c < (valueParameters[r].length); c++) if ((valueParameters[r][c]) != null) select.append((((tablesName[r]) + '.') + (valueParameters[r][c]))).append(\" AS \").append(updateId(valueParameters[r][c], tablesName[r])).append(','); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1994/buggy-version/fenix-D3P-core.src.main.java.org.fao.fenix.d3p.process.impl.join.logic.ManualJoin.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "org.fao.fenix.d3p.process.impl.join.logic.ManualJoin.updateId(java.lang.String,java.lang.String)", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "5c0488f3c512271ac86ac025f164e66d2e206ee7", "Url": "https://api.github.com/repos/FENIX-Platform/fenix-d3p", "Date": "2016-11-03T10:41:56Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (callback != null) callback.invoke(null, java.lang.Long.valueOf(rawContactId).toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4962/buggy-version/android.src.main.java.com.rt2zz.reactnativecontacts.ContactsManager.java", "BodyUseAPI": ["com.facebook.react.bridge.Callback.invoke(<nulltype>,java.lang.String)"], "Fixed commit": "77313fe819696841ff6109baf996d768528ebbdc", "Url": "https://api.github.com/repos/Proberts/react-native-contacts", "Date": "2017-03-16T13:08:34Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<jftha.main.Item>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (jftha.main.Equippable.class.isAssignableFrom(toBeUsed.getClass())) { }else if (jftha.main.Item.class.isAssignableFrom(toBeUsed.getClass())) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2601/buggy-version/src.jftha.main.Main.java", "BodyUseAPI": ["java.lang.Class.isAssignableFrom(toBeUsed.getClass())", "jftha.main.Item.getClass()"], "Fixed commit": "b2ce11d99d5ebfc84f6c06f9265811c0e69c68f0", "Url": "https://api.github.com/repos/BlackNinja0001/Board-Game-JFTHA", "Date": "2014-04-16T16:36:33Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.pratilipi.data.util.UserPratilipiDataUtil.hasAccessToAddUserPratilipiData(userPratilipiData.getPratilipiId()))) throw new com.pratilipi.common.exception.InsufficientAccessException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6841/buggy-version/src.main.java.com.pratilipi.data.util.UserPratilipiDataUtil.java", "BodyUseAPI": [], "Fixed commit": "b885a95092a4069d4febab15e954ca50642f2101", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-03-15T09:29:29Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((tokenizer.getCurrent()) instanceof mondo.token.OperatorToken) || ((tokenizer.getCurrent()) instanceof mondo.token.IClose))) { for (mondo.token.Token token = tokenizer.getCurrent(); ((token != null) && ((token.getText()) != \".\")) && ((token.getText()) != \";\"); token = tokenizer.getNextAtSameBracketLevel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4714/buggy-version/src.java.mondo.token.SymbolToken.java", "BodyUseAPI": ["mondo.token.ITokenizer.getNextAtSameBracketLevel()", "mondo.token.ITokenizer.getCurrent()"], "Fixed commit": "03acd0936df80048baf4799d7fd1cb8c01f98b5d", "Url": "https://api.github.com/repos/oprogramador/plezuro_js", "Date": "2015-10-19T23:03:01Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedOptionValue.equals(ContentType.IMAGE.getType())) { exportRequest = com.webscapper.ui.WebScrapper.wsServiceProvider.buildExportRequest(wsUIControls.getUrl(), wsUIControls.getTitle(), extractResponse, ExportType.IMAGE, selectedHTMLControlList, selectedFile.getAbsolutePath(), selectedImageURLList); }else { exportRequest = com.webscapper.ui.WebScrapper.wsServiceProvider.buildExportRequest(wsUIControls.getUrl(), wsUIControls.getTitle(), extractResponse, com.webscrapper.constants.ExportType.getExportType(extractToOptionValue), selectedHTMLControlList, selectedFile.getAbsolutePath(), selectedImageURLList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3950/buggy-version/src.main.java.com.webscapper.ui.WebScrapper.java", "BodyUseAPI": [], "Fixed commit": "1b7922a84a06452416fdbb49da2ca243c21f85b2", "Url": "https://api.github.com/repos/geetaEE/webScrapper", "Date": "2014-10-01T09:13:57Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (process != null) { process.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5673/buggy-version/sonar-plugin-api.src.main.java.org.sonar.api.utils.command.CommandExecutor.java", "BodyUseAPI": ["java.lang.Process.destroy()"], "Fixed commit": "8cfd8984b7404bb1ded935ae6f46d7ce0faee405", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-03-27T15:18:44Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.funergy.bedwars.gamemanager.InGameHandler.getTeam(e.getPlayer())) != null) { com.funergy.bedwars.gamemanager.Teams.removePlayerFromTeam(e.getPlayer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7393/buggy-version/BedWars.src.com.funergy.bedwars.events.LeaveEvent.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerQuitEvent.getPlayer()", "com.funergy.bedwars.gamemanager.Teams.removePlayerFromTeam(e.getPlayer())"], "Fixed commit": "a4499b0237525337bc3f1888ee2daa93ddbff991", "Url": "https://api.github.com/repos/SoulpointNetwork/BedWars", "Date": "2014-10-01T13:20:32Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(message.getUserPhotoLink_200().isEmpty())) { com.vkclient.supports.PhotoLoader.loadPhoto(getContext(), ((message.getUser_id()) == (message.getFromId()) ? message.getUserPhotoLink_200() : message.getFromPhotoLink_200()), photo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1072/buggy-version/VkClient.app.src.main.java.com.vkclient.views.SingleDialogListItemView.java", "BodyUseAPI": ["com.vkclient.entities.Message.getFromPhotoLink_200()", "com.vkclient.entities.Message.getUser_id()", "com.vkclient.entities.Message.getUserPhotoLink_200()", "com.vkclient.supports.PhotoLoader.loadPhoto(getContext(),((message.getUser_id()) == (message.getFromId()) ? message.getUserPhotoLink_200() : message.getFromPhotoLink_200()),android.widget.ImageView)", "com.vkclient.entities.Message.getFromId()"], "Fixed commit": "de4e32ec56ca6330ae11a0d73a6087fd90731435", "Url": "https://api.github.com/repos/301shevchukanton/vkClient", "Date": "2015-09-04T23:12:51Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((acceptGroupMemberAsyncTask) == null) { acceptGroupMemberAsyncTask = new cecs.secureshare.connector.host.AcceptGroupMemberAsyncTask(this); acceptGroupMemberAsyncTask.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8349/buggy-version/app.src.main.java.cecs.secureshare.GroupViewActivity.java", "BodyUseAPI": [], "Fixed commit": "2310ffde617a3705a1380f8b93814d19ffee4671", "Url": "https://api.github.com/repos/douglchoi/SecureSharing", "Date": "2015-12-09T04:08:05Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == index) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4715/buggy-version/src.main.java.mainserverjt.piratemod.command.CommandMain.java", "BodyUseAPI": [], "Fixed commit": "37f52e1b27b62a44d7ce7f22da1b92e634371b60", "Url": "https://api.github.com/repos/jorisclaes/piratemod", "Date": "2016-04-02T15:21:25Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDone) { targetTask.get(taskId).setIndex((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8821/buggy-version/src.main.java.backend.Storage.Storage.java", "BodyUseAPI": [], "Fixed commit": "c6334905f39121ef54e126b8eb9f0e312c3d1b75", "Url": "https://api.github.com/repos/cs2103aug2015-w15-1j/main", "Date": "2015-10-11T05:11:58Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((metaQuery.hdsQuery.result) != null) { return fromKeyValueGAE(metaQuery.hdsQuery.key, metaQuery.hdsQuery.result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6179/buggy-version/contrib.src.main.java.com.datatorrent.contrib.dimensions.GenericDimensionsStoreHDHT.java", "BodyUseAPI": ["com.datatorrent.contrib.dimensions.GenericDimensionsStoreHDHT.GenericDimensionsFetchComputer.fromKeyValueGAE(metaQuery.hdsQuery.key,metaQuery.hdsQuery.result)"], "Fixed commit": "7769ec7a44ddc22faba2cdcab343609903eed728", "Url": "https://api.github.com/repos/apache/apex-malhar", "Date": "2015-03-25T18:05:55Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (icnt == (nw)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8919/buggy-version/h2o-core.src.main.java.water.rapids.ast.prims.advmath.AstISax.java", "BodyUseAPI": [], "Fixed commit": "c355f71f9f2435e745e7105cb7a521e3c4a633af", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2016-09-08T20:28:09Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mmontes.util.GeometryUtils.apply(java.util.List<com.vividsolutions.jts.geom.Geometry>,GeometryUtils.GeomOperation.INTERSECTION)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (geom != null) { geomWKT = com.mmontes.util.GeometryUtils.WKTFromGeometry(geom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2559/buggy-version/src.main.java.com.mmontes.rest.controller.RoutesController.java", "BodyUseAPI": ["com.mmontes.util.GeometryUtils.WKTFromGeometry(com.vividsolutions.jts.geom.Geometry)"], "Fixed commit": "c4579558ed45609b00ff98366c6ad5a77cfaaa6c", "Url": "https://api.github.com/repos/mmontes11/GeoTourism_server", "Date": "2016-01-09T11:42:11Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.nixx.aslan.core.completion.specs.PathCompletionSpec.getResolved(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.nio.file.Files.exists(absolutePath)) { if (java.nio.file.Files.isDirectory(absolutePath)) { if (argument.endsWith(no.nixx.aslan.core.completion.specs.PathCompletionSpec.FILE_SEPARATOR)) { stream = java.nio.file.Files.list(absolutePath); }else { stream = java.nio.file.Files.list(absolutePath.getParent()).filter(( p) -> p.getFileName().toString().startsWith(absolutePath.getFileName().toString())); } }else { stream = java.util.stream.Stream.empty(); } }else { stream = java.nio.file.Files.list(absolutePath.getParent()).filter(( p) -> p.getFileName().toString().startsWith(absolutePath.getFileName().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9055/buggy-version/src.main.java.no.nixx.aslan.core.completion.specs.PathCompletionSpec.java", "BodyUseAPI": ["java.util.stream.Stream<java.nio.file.Path>.filter(java.util.function.Predicate<? super java.nio.file.Path>)", "java.nio.file.Path.getParent()", "java.lang.String.startsWith(java.lang.String)", "java.nio.file.Path.toString()", "java.util.stream.Stream<java.nio.file.Path>.filter(java.util.function.Predicate<? super java.nio.file.Path>)", "java.nio.file.Files.isDirectory(java.nio.file.Path)", "java.nio.file.Path.toString()", "java.nio.file.Path.getFileName()", "java.nio.file.Files.list(java.nio.file.Path)", "java.nio.file.Files.list(java.nio.file.Path)", "java.nio.file.Path.getParent()", "java.nio.file.Files.list(java.nio.file.Path)", "java.lang.String.startsWith(java.lang.String)", "java.nio.file.Path.getFileName()"], "Fixed commit": "ab18ae9f593aee7fe37448677e7447153c06d04b", "Url": "https://api.github.com/repos/oddbjornkvalsund/aslan", "Date": "2015-03-17T21:41:52Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collection == null) { entity.setProperty(propertyName, null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/495/buggy-version/blazdb-core.src.main.java.net.vvakame.blaz.PropertyConverter.java", "BodyUseAPI": [], "Fixed commit": "1bd5cf8cd6015084eb953540d1a246d00dd7c4ef", "Url": "https://api.github.com/repos/vvakame/blaz-db", "Date": "2012-12-31T11:48:46Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (0 < i) { return str.substring(0, i); }else { return str; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/495/buggy-version/blazdb-apt.src.main.java.net.vvakame.apt.AptUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "1bd5cf8cd6015084eb953540d1a246d00dd7c4ef", "Url": "https://api.github.com/repos/vvakame/blaz-db", "Date": "2012-12-31T11:48:46Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c instanceof net.vvakame.blaz.meta.ConverterAttributeMeta<?, ?>) { }else { throw new java.lang.IllegalStateException((\"unknown meta class = \" + (c.getClass().getCanonicalName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/495/buggy-version/blazdb-sqlite.src.main.java.net.vvakame.blaz.sqlite.JdbcKVS.java", "BodyUseAPI": ["net.vvakame.blaz.meta.CoreAttributeMeta<?>.getClass()", "c.getClass().getCanonicalName()"], "Fixed commit": "1bd5cf8cd6015084eb953540d1a246d00dd7c4ef", "Url": "https://api.github.com/repos/vvakame/blaz-db", "Date": "2012-12-31T11:48:46Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(path.exists())) { java.lang.String pwd = java.lang.System.getProperty(\"user.dir\"); jobConfigDir = new java.io.File(pwd, ((path.getName()) + (GobblinClusterConfigurationKeys.TAR_GZ_FILE_SUFFIX))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5175/buggy-version/gobblin-cluster.src.main.java.gobblin.cluster.JobConfigurationManager.java", "BodyUseAPI": ["java.io.File.getName()"], "Fixed commit": "e4318d4156e0dd4fbd869f5262eb9fa5b0725820", "Url": "https://api.github.com/repos/abti/gobblin", "Date": "2016-12-29T18:21:55Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((delegate) != null) && (delegate.isComplete())) { return 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7673/buggy-version/src.gui.com.frostwire.android.gui.transfers.SoundcloudDownload.java", "BodyUseAPI": [], "Fixed commit": "9185db03811cfefa84bb8ee2dc008d38d0be249b", "Url": "https://api.github.com/repos/gubatron/frostwire-android", "Date": "2015-01-24T05:13:21Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task.isPublic()) { ca.ualberta.cs.completemytask.database.DatabaseManager.getInstance().syncComment(comment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3389/buggy-version/CompleteMyTask.src.ca.ualberta.cs.completemytask.activities.CommentActivity.java", "BodyUseAPI": [], "Fixed commit": "8fd510183afcf84aab2734f1c9bf0bae58148707", "Url": "https://api.github.com/repos/mdfeist/CMPUT301F12T12", "Date": "2012-11-24T05:03:26Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task.isPublic()) { ca.ualberta.cs.completemytask.database.DatabaseManager.getInstance().syncPhoto(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3389/buggy-version/CompleteMyTask.src.ca.ualberta.cs.completemytask.activities.ViewImageActivity.java", "BodyUseAPI": [], "Fixed commit": "8fd510183afcf84aab2734f1c9bf0bae58148707", "Url": "https://api.github.com/repos/mdfeist/CMPUT301F12T12", "Date": "2012-11-24T05:03:26Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.allocate(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (buffer.hasArray()) java.lang.System.arraycopy(buffer.array(), 0, meta, 0, buffer.array().length); else throw new java.lang.Exception(\"couldn't create byte representation of MetaData\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1678/buggy-version/src.org.sisy.CryptoMetaData.java", "BodyUseAPI": ["java.nio.ByteBuffer.array()", "java.nio.ByteBuffer.array()", "java.lang.System.arraycopy(byte[],int,byte[],int,int)"], "Fixed commit": "b733abb9f27947fa0bba81a71044605baeba3b61", "Url": "https://api.github.com/repos/voldien/sisy", "Date": "2017-08-24T15:35:55Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bimserver.ifc.step.deserializer.IfcStepStreamingDeserializer.read(org.bimserver.utils.FakeClosingInputStream,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == 0) { throw new org.bimserver.plugins.deserializers.DeserializeException(\"Uploaded file does not seem to be a correct IFC file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/962/buggy-version/IfcPlugins.src.org.bimserver.ifc.step.deserializer.IfcStepStreamingDeserializer.java", "BodyUseAPI": [], "Fixed commit": "aa455e06710c508b5284fc26fb138f29850eb4fd", "Url": "https://api.github.com/repos/opensourceBIM/IfcPlugins", "Date": "2016-07-29T16:03:45Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bimserver.emf.PackageMetaData.getEClassifierCaseInsensitive(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (eClass == null) { throw new org.bimserver.plugins.deserializers.DeserializeException(lineNumber, (name + \" is not a known entity\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/962/buggy-version/IfcPlugins.src.org.bimserver.ifc.step.deserializer.IfcStepStreamingDeserializer.java", "BodyUseAPI": [], "Fixed commit": "aa455e06710c508b5284fc26fb138f29850eb4fd", "Url": "https://api.github.com/repos/opensourceBIM/IfcPlugins", "Date": "2016-07-29T16:03:45Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.otbproject.otbproject.config.ChannelConfigHelper.getCopy(com.github.otbproject.otbproject.config.ChannelConfig)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((validatedConfig.queueLimits.getDefaultPriorityLimit()) == null) { validatedConfig.queueLimits.setDefaultPriorityLimit(defaultConfig.queueLimits.getDefaultPriorityLimit()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/330/buggy-version/src.main.java.com.github.otbproject.otbproject.config.ConfigValidator.java", "BodyUseAPI": ["validatedConfig.queueLimits.setDefaultPriorityLimit(defaultConfig.queueLimits.getDefaultPriorityLimit())"], "Fixed commit": "b5fdd1c1e96008915e66642b335677cb9d06312e", "Url": "https://api.github.com/repos/OTBProject/OTBProject", "Date": "2015-03-05T01:57:51Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (orderedBox.getIsActiveProperty()) { clientID = userBLInfo.getHotelIDByStaffID(userBLInfo.getCurrentStaffID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3420/buggy-version/MSHClientModule.src.main.java.ui.componentcontroller.hotel.ClientHotelSearchPaneController.java", "BodyUseAPI": [], "Fixed commit": "2a20fa0a81b5d19924f32e7a66da6830030a2895", "Url": "https://api.github.com/repos/Inf1NityNJU/MSH", "Date": "2016-12-10T12:08:55Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.sysml.api.DMLScript.USE_ACCELERATOR) { org.apache.sysml.runtime.instructions.gpu.context.GPUContext.getGPUContext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3415/buggy-version/src.main.java.org.apache.sysml.api.DMLScript.java", "BodyUseAPI": [], "Fixed commit": "329df5196af2b8ab84a901558bcd2dbaae10a981", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-03-22T23:13:41Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(io.netty.handler.codec.http.HttpHeaders.isKeepAlive(request))) { ctx.write(fullresponse).addListener(ChannelFutureListener.CLOSE); }else { ctx.write(fullresponse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/580/buggy-version/src.main.java.io.torch.pipeline.ServingWebpageHandler.java", "BodyUseAPI": [], "Fixed commit": "4a4b7e1958c300c3b87ec005551496cd6709d35d", "Url": "https://api.github.com/repos/laxika/TorchWS", "Date": "2013-09-06T21:50:41Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.parseInt(g.replace(\"$\", \"\"))) > i) { i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/510/buggy-version/src.main.java.com.techcavern.wavetact.objects.SimpleMessage.java", "BodyUseAPI": [], "Fixed commit": "a5aa9dad80f228554605c1ada02954f6d801eebf", "Url": "https://api.github.com/repos/TechCavern/WaveTact", "Date": "2014-07-01T16:58:29Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.parseInt(g.replace(\"$\", \"\"))) > i) { i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/510/buggy-version/src.main.java.com.techcavern.wavetact.objects.SimpleAction.java", "BodyUseAPI": [], "Fixed commit": "a5aa9dad80f228554605c1ada02954f6d801eebf", "Url": "https://api.github.com/repos/TechCavern/WaveTact", "Date": "2014-07-01T16:58:29Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStopped) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5009/buggy-version/src.java.org.apache.cassandra.net.OutboundTcpConnection.java", "BodyUseAPI": [], "Fixed commit": "11d1414628c18d07f7449af0aa9374406077b9a8", "Url": "https://api.github.com/repos/sainthxd/cassandra", "Date": "2013-01-23T07:38:14Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main.Game.level) == 1) main.Game.gameFinished = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4975/buggy-version/src.objects.Boss.java", "BodyUseAPI": [], "Fixed commit": "64fd4bfd4803c4ee484057313555c2303b80cfdb", "Url": "https://api.github.com/repos/boris-ns/Jumpy", "Date": "2016-06-12T10:43:21Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.geometry.Point2D.getX()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((sx2 == smaxReachedX) && (((int) (java.lang.Math.abs((sx - sx2)))) == 1)) && (((t + 1) + doNotAccelerateX) < tx)) { ax = 0; skippedX += 1; }else { ax = ((int) (java.lang.Math.signum((smaxReachedX - sx)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3739/buggy-version/Racetrack.src.main.java.logic.utils.AIUtils.java", "BodyUseAPI": ["java.lang.Math.signum(int)"], "Fixed commit": "d03cfda92bc91ea16b1c258fae95e38f9b02ec1e", "Url": "https://api.github.com/repos/michaelbekos/racetrack", "Date": "2016-01-28T13:50:12Z"},
{"Line": "=>1149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.geometry.Point2D.getX()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((sx2 == smaxReachedX) && (((int) (java.lang.Math.abs((sx - sx2)))) == 1)) && (((t + 1) + doNotAccelerateX) < tx)) { ax = 0; skippedX += 1; }else { ax = ((int) (java.lang.Math.signum((smaxReachedX - sx)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3739/buggy-version/Racetrack.src.main.java.logic.utils.AIUtils.java", "BodyUseAPI": ["java.lang.Math.signum(int)"], "Fixed commit": "d03cfda92bc91ea16b1c258fae95e38f9b02ec1e", "Url": "https://api.github.com/repos/michaelbekos/racetrack", "Date": "2016-01-28T13:50:12Z"},
{"Line": "=>1081", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.geometry.Point2D.getY()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((sy2 == smaxReachedY) && (((int) (java.lang.Math.abs((sy - sy2)))) == 1)) && (((t + 1) + doNotAccelerateY) < ty)) { ay = 0; skippedY += 1; }else { ay = ((int) (java.lang.Math.signum((smaxReachedY - sy)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3739/buggy-version/Racetrack.src.main.java.logic.utils.AIUtils.java", "BodyUseAPI": ["java.lang.Math.signum(int)"], "Fixed commit": "d03cfda92bc91ea16b1c258fae95e38f9b02ec1e", "Url": "https://api.github.com/repos/michaelbekos/racetrack", "Date": "2016-01-28T13:50:12Z"},
{"Line": "=>638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.geometry.Point2D.getY()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((sy2 == smaxReachedY) && (((int) (java.lang.Math.abs((sy - sy2)))) == 1)) && (((t + 1) + doNotAccelerateY) < ty)) { ay = 0; skippedY += 1; }else { ay = ((int) (java.lang.Math.signum((smaxReachedY - sy)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3739/buggy-version/Racetrack.src.main.java.logic.utils.AIUtils.java", "BodyUseAPI": ["java.lang.Math.signum(int)"], "Fixed commit": "d03cfda92bc91ea16b1c258fae95e38f9b02ec1e", "Url": "https://api.github.com/repos/michaelbekos/racetrack", "Date": "2016-01-28T13:50:12Z"},
{"Line": "=>881", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.geometry.Point2D.getY()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((sy2 == smaxReachedY) && (((int) (java.lang.Math.abs((sy - sy2)))) == 1)) && (((t + 1) + doNotAccelerateY) < t_new)) { ay = 0; skippedY += 1; }else { ay = ((int) (java.lang.Math.signum((smaxReachedY - sy)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3739/buggy-version/Racetrack.src.main.java.logic.utils.AIUtils.java", "BodyUseAPI": ["java.lang.Math.signum(int)"], "Fixed commit": "d03cfda92bc91ea16b1c258fae95e38f9b02ec1e", "Url": "https://api.github.com/repos/michaelbekos/racetrack", "Date": "2016-01-28T13:50:12Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.geometry.Point2D.getX()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((sx2 == smaxReachedX) && (((int) (java.lang.Math.abs((sx - sx2)))) == 1)) && (((t + 1) + doNotAccelerateX) < t_new)) { ax = 0; skippedX += 1; }else { ax = ((int) (java.lang.Math.signum((smaxReachedX - sx)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3739/buggy-version/Racetrack.src.main.java.logic.utils.AIUtils.java", "BodyUseAPI": ["java.lang.Math.signum(int)"], "Fixed commit": "d03cfda92bc91ea16b1c258fae95e38f9b02ec1e", "Url": "https://api.github.com/repos/michaelbekos/racetrack", "Date": "2016-01-28T13:50:12Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tokenkey.equals(\"\")) { inbox = new com.netbout.rest.RqAlias(this.base, req).alias().inbox(); }else { if (this.tokencache.containsKey(tokenkey)) { final int hoursInDay = 24; final int minsInHours = 60; final int secsInMins = 60; final int micsInSecs = 1000; final java.lang.Object[] cache = this.tokencache.get(tokenkey); final java.util.Date today = new java.util.Date(); final long diff = java.lang.Math.abs(((today.getTime()) - (((java.util.Date) (cache[0])).getTime()))); final long diffDays = diff / (((hoursInDay * minsInHours) * secsInMins) * micsInSecs); if (diffDays <= 2) { inbox = ((com.netbout.spi.Inbox) (cache[1])); }else { this.tokencache.remove(tokenkey); inbox = new com.netbout.rest.RqAlias(this.base, req).alias().inbox(); } }else { inbox = new com.netbout.rest.RqAlias(this.base, req).alias().inbox(); this.tokencache.put(tokenkey, new java.lang.Object[]{ new java.util.Date(), inbox }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4891/buggy-version/netbout-web.src.main.java.com.netbout.rest.TkStart.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Object[]>.containsKey(java.lang.String)", "java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Object[]>.get(java.lang.String)", "java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Object[]>.remove(java.lang.String)", "java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Object[]>.put(java.lang.String,java.lang.Object[])"], "Fixed commit": "f0a56670eef3020c5478cfb58a8efbdfeae3550f", "Url": "https://api.github.com/repos/yegor256/netbout", "Date": "2016-01-12T06:57:52Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buffer.isEmpty()) { emptyCount++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3149/buggy-version/solr.core.src.java.org.apache.solr.update.processor.ThreadedUpdateProcessorFactory.java", "BodyUseAPI": [], "Fixed commit": "8df2ca60bbf75bfbb7fc7182d952a60948377188", "Url": "https://api.github.com/repos/m-khl/solr-patches", "Date": "2012-07-09T19:30:02Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dbLoadBalancer.isUsingSsl()) notifyUsageProcessor(message, dbLoadBalancer, org.openstack.atlas.api.async.SSL_ON);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5316/buggy-version/api.common-api.src.main.java.org.openstack.atlas.api.async.CreateLoadBalancerListener.java", "BodyUseAPI": ["org.openstack.atlas.api.async.CreateLoadBalancerListener.notifyUsageProcessor(javax.jms.Message,org.openstack.atlas.api.async.LoadBalancer,org.openstack.atlas.api.async.SSL_ON)"], "Fixed commit": "addbed79def364cf31c54492cf176031b7ee078e", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2011-10-07T21:38:37Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(scanner.hasNext())) { throw new java.lang.IllegalArgumentException(\"Attempting to scan from invalid source\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3205/buggy-version/src.main.java.de.strullerbaumann.visualee.examiner.Examiner.java", "BodyUseAPI": [], "Fixed commit": "0d541f2eafa88201f429fa6d1ef199ad93ab8841", "Url": "https://api.github.com/repos/emopers/visualee", "Date": "2015-09-25T22:05:33Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.robonobo.core.service.DownloadService.getDownload(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (d == null) { log.error(((\"Asked to pause download for \" + streamId) + \", but there is no such download\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4063/buggy-version/core.src.java.com.robonobo.core.service.DownloadService.java", "BodyUseAPI": [], "Fixed commit": "2a65fff8e6dd295489c9ac4219f77aeac4071d07", "Url": "https://api.github.com/repos/macavity23/robonobo", "Date": "2011-10-22T21:59:57Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_updateTimer) == null) _updateTimer = new java.util.Timer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7924/buggy-version/src.com.axelby.podax.PlayerService.java", "BodyUseAPI": [], "Fixed commit": "ead0c5ba68a09a340548e23a9b6d47324bca28dc", "Url": "https://api.github.com/repos/thasmin/Podax", "Date": "2012-06-07T12:25:40Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.lams.contract.AgreementRequest.getAgreement()", "org.egov.lams.model.Agreement.getWorkflowDetails()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((propertiesManager.getWfStatusRejected().equalsIgnoreCase(workflowDetails.getStatus())) && (agreement.getIsAdvancePaid())) && (propertiesManager.getAgreementStatusRejected().equalsIgnoreCase(agreement.getStatus().toString()))) && (agreement.getAction().equals(Action.CREATE))) { task.setStatus(propertiesManager.getWfStatusAssistantApproved()); org.egov.lams.repository.WorkflowRepository.LOGGER.info(\"updating the task status for reject-forward case after payment : \", task.getStatus()); }else task.setStatus(workflowDetails.getStatus());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4297/buggy-version/lams.lams-workflow.src.main.java.org.egov.lams.repository.WorkflowRepository.java", "BodyUseAPI": ["org.egov.lams.config.PropertiesManager.getWfStatusAssistantApproved()", "org.egov.lams.contract.Task.setStatus(workflowDetails.getStatus())", "org.egov.lams.model.WorkflowDetails.getStatus()", "org.egov.lams.contract.Task.setStatus(propertiesManager.getWfStatusAssistantApproved())"], "Fixed commit": "8d82a4103346ebc9c3e8dc312f81bedff280af17", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-06-29T09:30:12Z"},
{"Line": "=>1408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEnabled(com.fasterxml.jackson.core.JsonFactory.Feature.USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING)) { java.lang.ref.SoftReference<com.fasterxml.jackson.core.util.BufferRecycler> ref = com.fasterxml.jackson.core.JsonFactory._recyclerRef.get(); br = (ref == null) ? null : ref.get(); if (br == null) { br = new com.fasterxml.jackson.core.util.BufferRecycler(); com.fasterxml.jackson.core.JsonFactory._recyclerRef.set(new java.lang.ref.SoftReference<com.fasterxml.jackson.core.util.BufferRecycler>(br)); } }else { br = new com.fasterxml.jackson.core.util.BufferRecycler(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3490/buggy-version/src.main.java.com.fasterxml.jackson.core.JsonFactory.java", "BodyUseAPI": [], "Fixed commit": "8891c0cd047c24f8c3cd8c8eebcd0fb1c562eb0c", "Url": "https://api.github.com/repos/FasterXML/jackson-core", "Date": "2015-04-24T05:47:05Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, org.muis.core.mgr.AttributeManager.AttributeHolder>.get(attr.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (storedAttr == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4678/buggy-version/projects.MUIS.src.main.java.org.muis.core.mgr.AttributeManager.java", "BodyUseAPI": [], "Fixed commit": "14eaadfe395f3ef7d94f01546f26ace57620c427", "Url": "https://api.github.com/repos/Updownquark/MUIS", "Date": "2013-03-08T20:30:29Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value == null) theRawAttributes.remove(attr); else theRawAttributes.put(attr, value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4678/buggy-version/projects.MUIS.src.main.java.org.muis.core.mgr.AttributeManager.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "14eaadfe395f3ef7d94f01546f26ace57620c427", "Url": "https://api.github.com/repos/Updownquark/MUIS", "Date": "2013-03-08T20:30:29Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.metacentrum.perun.oidc.client.UsersManager.getInstance().getUserByExtSourceNameAndExtLogin(pp.getExtSourceName(),pp.getUserExtSourceLogin())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (user == null) { return null; }else { return user.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2845/buggy-version/perun-oidc-server-overlay.src.main.java.cz.metacentrum.perun.oidc.overlay.PerunAuthenticationFilter.java", "BodyUseAPI": ["cz.metacentrum.perun.oidc.client.PerunUser.getId()"], "Fixed commit": "e7b1ea37ce282019d1f2779cd597bfe0d1f5925c", "Url": "https://api.github.com/repos/jirmauritz/perun-oidc-server", "Date": "2017-05-02T15:35:13Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holder.countDownTimer) != null) holder.countDownTimer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/586/buggy-version/app.src.main.java.com.android_dev.tatenuufrn.adapters.EventAdapter.java", "BodyUseAPI": ["com.android_dev.tatenuufrn.helpers.EventCountDownTimer.cancel()"], "Fixed commit": "814865190f3778423b512439d568940d0bbb9c4d", "Url": "https://api.github.com/repos/adelinosegundo/tatenufrn", "Date": "2015-10-14T15:40:00Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(outer.controller.quizIsComplete())) super.actionPerformed(e); else { outer.overrideButton.setEnabled(false); int score = outer.controller.getScore(); int possibleScore = outer.controller.getPossibleScore(); outer.scoreLabel.setText(java.lang.String.format(\"Score: %d/%d\", score, possibleScore)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2828/buggy-version/src.edu.ucsb.cs56.projects.utilities.flashcards.QuizFrame.java", "BodyUseAPI": ["edu.ucsb.cs56.projects.utilities.flashcards.QuizController.getPossibleScore()", "javax.swing.JButton.setEnabled(boolean)", "javax.swing.JLabel.setText(java.lang.String)", "edu.ucsb.cs56.projects.utilities.flashcards.QuizController.getScore()"], "Fixed commit": "cc7d53317333e6c96168f6368c747a4f66c3b2b2", "Url": "https://api.github.com/repos/BLimmie/cs56-utilities-flashcards", "Date": "2017-11-16T05:28:24Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3313/buggy-version/app.src.main.java.com.example.popularmovies.ui.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "be28bf4661034a7131b9a3e41d2314cfdeb40dd5", "Url": "https://api.github.com/repos/ironthrone/PopularMovies", "Date": "2016-05-20T16:00:16Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3313/buggy-version/app.src.main.java.com.example.popularmovies.ui.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "be28bf4661034a7131b9a3e41d2314cfdeb40dd5", "Url": "https://api.github.com/repos/ironthrone/PopularMovies", "Date": "2016-05-20T16:00:16Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chased.getRank().toInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r == 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7050/buggy-version/src.com.cjmalloy.stratego.Board.java", "BodyUseAPI": [], "Fixed commit": "43a6e9b05d77f5d11162e66cef66c18c34d24760", "Url": "https://api.github.com/repos/braathwaate/stratego", "Date": "2014-07-06T19:58:53Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.schmizz.sshj.sftp.PacketReader.getPacketLength()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (len > (SFTPPacket.MAX_SIZE)) { throw new java.lang.IllegalStateException(((\"Invalid packet: indicated length \" + len) + \" too large\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9082/buggy-version/src.main.java.net.schmizz.sshj.sftp.PacketReader.java", "BodyUseAPI": [], "Fixed commit": "fb690c4fb01ae636649fef4df906f132397c8ff7", "Url": "https://api.github.com/repos/shikhar/sshj", "Date": "2012-04-26T10:43:29Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j <= 0) throw new java.lang.IllegalArgumentException(((\"Cannot get next power of 2; \" + i) + \" is too large\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9082/buggy-version/src.main.java.net.schmizz.sshj.common.Buffer.java", "BodyUseAPI": [], "Fixed commit": "fb690c4fb01ae636649fef4df906f132397c8ff7", "Url": "https://api.github.com/repos/shikhar/sshj", "Date": "2012-04-26T10:43:29Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shutdown) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2835/buggy-version/tools.src.main.java.org.apache.kafka.trogdor.coordinator.Coordinator.java", "BodyUseAPI": [], "Fixed commit": "6c0332c4844eb86ec8da5fb41bde8ef4d6674d3b", "Url": "https://api.github.com/repos/cmccabe/kafka", "Date": "2017-08-29T19:32:23Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasView) { UpdateLists(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4284/buggy-version/app.src.main.java.de.cs.fau.mad.kwikshop.android.view.ShoppingListFragment.java", "BodyUseAPI": [], "Fixed commit": "7942ab12312a05684e1d5b2321b0a1516ab43327", "Url": "https://api.github.com/repos/FAU-Inf2/kwikshop-android", "Date": "2015-06-09T20:43:22Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((comboAggregate.getItemCount()) == 0) { comboAggregate.add(\"None available\"); comboAggregate.select(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2435/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.define.ViewMetric.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Combo.add(java.lang.String)", "org.eclipse.swt.widgets.Combo.select(int)"], "Fixed commit": "4936313c9fd94b237014873a6481cde6746a35f9", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-11-05T14:41:44Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root().color) == (RBTree.Color.Red)) { root().color = RBTree.Color.Black; colorSwitchCount += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4942/buggy-version/RBTree.src.RBTree.java", "BodyUseAPI": [], "Fixed commit": "34d900f61ace9a0a64134303980cd268e86404c0", "Url": "https://api.github.com/repos/hjbyt/RBTree", "Date": "2015-05-25T12:13:12Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((statusPb.getErrorResult()) == null) { statusPb.setErrorResult(f.getErrorResult()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/237/buggy-version/gcloud-java-bigquery.src.main.java.com.google.gcloud.spi.DefaultBigQueryRpc.java", "BodyUseAPI": ["com.google.api.services.bigquery.model.JobStatus.setErrorResult(f.getErrorResult())"], "Fixed commit": "12aa55591cde5f0f5b3bbf6e4d29c7d049925c5f", "Url": "https://api.github.com/repos/pongad/google-cloud-java", "Date": "2015-11-19T18:11:07Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((statusPb.getState()) == null) { statusPb.setState(f.getState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/237/buggy-version/gcloud-java-bigquery.src.main.java.com.google.gcloud.spi.DefaultBigQueryRpc.java", "BodyUseAPI": ["com.google.api.services.bigquery.model.JobStatus.setState(f.getState())"], "Fixed commit": "12aa55591cde5f0f5b3bbf6e4d29c7d049925c5f", "Url": "https://api.github.com/repos/pongad/google-cloud-java", "Date": "2015-11-19T18:11:07Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((oldStates.size()) > 1) { data.setStateForTaxon(taxon, selectedCharacter, new org.phenoscape.model.MultipleState(oldStates, multiple.getMode())); }else { data.setStateForTaxon(taxon, selectedCharacter, newState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6832/buggy-version/src.org.phenoscape.view.StateTableComponent.java", "BodyUseAPI": ["org.phenoscape.model.DataSet.setStateForTaxon(org.phenoscape.model.Taxon,java.lang.Character,org.phenoscape.model.MultipleState)"], "Fixed commit": "2baf6dd51b849ccbe64977cd7f289e63e9221a07", "Url": "https://api.github.com/repos/phenoscape/Phenex", "Date": "2013-07-19T19:27:57Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/664/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "ec851d910f1ee5319ff3b6204fddf12f514061aa", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newLen < next_chars_len) { newLen = next_chars_len; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9252/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONLexer.java", "BodyUseAPI": [], "Fixed commit": "8039cea95d7b2d18454cd04f232d291a16106f5e", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-26T16:18:10Z"},
{"Line": "=>945", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newLen < next_chars_len) { newLen = next_chars_len; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9252/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONLexer.java", "BodyUseAPI": [], "Fixed commit": "8039cea95d7b2d18454cd04f232d291a16106f5e", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-26T16:18:10Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["n3.getLeaves().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tbl.getKind().equals(\"Q3\")) tbl = n3.getLeaves().get(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5560/buggy-version/extensions.NodeToString.java", "BodyUseAPI": [], "Fixed commit": "dc25c98424cc5c30aa82934894a4556f9f3dcde8", "Url": "https://api.github.com/repos/mhe504/DBLModeller", "Date": "2015-11-30T12:10:00Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["n4.getLeaves().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (col.getKind().equals(\"Q3\")) col = n4.getLeaves().get(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5560/buggy-version/extensions.NodeToString.java", "BodyUseAPI": [], "Fixed commit": "dc25c98424cc5c30aa82934894a4556f9f3dcde8", "Url": "https://api.github.com/repos/mhe504/DBLModeller", "Date": "2015-11-30T12:10:00Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cb instanceof org.jboss.as.connector.security.CallbackImpl) { if (((org.jboss.as.connector.security.CallbackImpl) (cb)).isElytronEnabled()) workManager.setSecurityIntegration(new org.jboss.as.connector.security.ElytronSecurityIntegration()); workManager.setCallbackSecurity(cb); }else { super.setCallbackSecurity(workManager, cb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7944/buggy-version/connector.src.main.java.org.jboss.as.connector.services.resourceadapters.deployment.AbstractResourceAdapterDeploymentService.java", "BodyUseAPI": ["org.jboss.jca.core.api.workmanager.WorkManager.setCallbackSecurity(org.jboss.jca.core.spi.security.Callback)", "org.jboss.jca.deployers.common.AbstractResourceAdapterDeployer.setCallbackSecurity(org.jboss.jca.core.api.workmanager.WorkManager,org.jboss.jca.core.spi.security.Callback)"], "Fixed commit": "271a043bbc5927430fa0286e5793e58ea133e73f", "Url": "https://api.github.com/repos/rsvoboda/wildfly", "Date": "2017-01-23T12:42:23Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["realm.where(com.shutup.todo.model.persist.Todo.class).equalTo(\"sid\", todo.getSid()).findFirst()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (existTodo == null) { realm.insertOrUpdate(todo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/817/buggy-version/app.src.main.java.com.shutup.todo.controller.sync.MyIntentService.java", "BodyUseAPI": [], "Fixed commit": "58a395f20627ea2adddd6a1d0e19f0749edc8eb0", "Url": "https://api.github.com/repos/shutup/TodoListClient", "Date": "2017-03-28T03:30:41Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (team != null) { if ((team.size()) <= 30) { this.team = team; if ((team.size()) == 30) { isMax = true; }else { isMax = false; } } }else { this.team = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7997/buggy-version/src.libraryClasses.Team.java", "BodyUseAPI": ["java.util.ArrayList<libraryClasses.Player>.size()", "java.util.ArrayList<libraryClasses.Player>.size()"], "Fixed commit": "8302ebc86f5334174e608c0a16b9c48a6c14a946", "Url": "https://api.github.com/repos/geenen124/psychobabble5", "Date": "2015-01-18T10:18:11Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (refType instanceof com.github.javaparser.ast.type.ClassOrInterfaceType) { java.util.Optional<com.amitakamat.umlparser.NodeList<com.github.javaparser.ast.type.Type>> typeArguments = ((com.github.javaparser.ast.type.ClassOrInterfaceType) (refType)).getTypeArguments(); if (typeArguments.isPresent()) { com.amitakamat.umlparser.NodeList<com.github.javaparser.ast.type.Type> arguments = ((com.github.javaparser.ast.type.ClassOrInterfaceType) (refType)).getTypeArguments().get(); if ((arguments.size()) != 0) { java.lang.String relatedToClass = arguments.get(0).toString(); if (classOrInterfaceNames.contains(relatedToClass)) { oneToMany = relatedToClass; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6900/buggy-version/UMLParser.src.com.amitakamat.umlparser.UmlParser.java", "BodyUseAPI": [], "Fixed commit": "24fe49a9ee528be0835fe468f65c797e5ed8d1cb", "Url": "https://api.github.com/repos/amitakamat/UMLParser-Class-Diagram-Generator", "Date": "2017-03-16T20:07:37Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (canvas != null) { synchronized(surfaceHolder) { render(canvas); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2746/buggy-version/src.br.com.minmax.RenderView.java", "BodyUseAPI": ["br.com.minmax.RenderView.RenderThread.render(android.graphics.Canvas)"], "Fixed commit": "305511970128c15c636036347c2044051d83d05f", "Url": "https://api.github.com/repos/diRex/MinMax", "Date": "2013-09-08T19:35:20Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position == 0) { holder.tvTimeElapsed.setText((\"Elapsed Duration: \" + (io.github.kosmologist.easytimetracker.utils.TimeUtils.getElapsedDurationFormatted(io.github.kosmologist.easytimetracker.utils.TimeUtils.getElapsedDurationInMilis(data.get(position).shift.getShiftStartDate(), io.github.kosmologist.easytimetracker.utils.TimeUtils.getCurrentDateTime()))))); }else { holder.tvTimeElapsed.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8062/buggy-version/app.src.main.java.io.github.kosmologist.easytimetracker.adapters.ShiftRecyclerViewAdapter.java", "BodyUseAPI": ["java.util.ArrayList<io.github.kosmologist.easytimetracker.entities.ShiftWrapperItem>.get(int)", "data.get(position).shift.getShiftStartDate()", "io.github.kosmologist.easytimetracker.utils.TimeUtils.getElapsedDurationInMilis(data.get(position).shift.getShiftStartDate(),io.github.kosmologist.easytimetracker.utils.TimeUtils.getCurrentDateTime())", "io.github.kosmologist.easytimetracker.utils.TimeUtils.getElapsedDurationFormatted(io.github.kosmologist.easytimetracker.utils.TimeUtils.getElapsedDurationInMilis(data.get(position).shift.getShiftStartDate(), io.github.kosmologist.easytimetracker.utils.TimeUtils.getCurrentDateTime()))", "android.widget.TextView.setText((\"Elapsed Duration: \" + (io.github.kosmologist.easytimetracker.utils.TimeUtils.getElapsedDurationFormatted(io.github.kosmologist.easytimetracker.utils.TimeUtils.getElapsedDurationInMilis(data.get(position).shift.getShiftStartDate(), io.github.kosmologist.easytimetracker.utils.TimeUtils.getCurrentDateTime())))))"], "Fixed commit": "02386017fdb8c797484d003a2575ecd9c29f0149", "Url": "https://api.github.com/repos/kosmologist/bigbang", "Date": "2016-11-11T09:56:32Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doVerticalMarkovization) { return ((edu.berkeley.nlp.assignments.PCFG.CKYParser.RootLabel) + (TreeAnnotations.VerticalMarkovSeparator)) + (TreeAnnotations.RootMarkovSuffix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3282/buggy-version/src.edu.berkeley.nlp.assignments.PCFG.CKYParser.java", "BodyUseAPI": [], "Fixed commit": "28ae0024bc04adc3d8dc2280c6642b07689279aa", "Url": "https://api.github.com/repos/abhishekprateek/ProbabilisticContextFreeGrammar", "Date": "2015-11-21T21:07:47Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["intent.getExtras().getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (delay > 0) { android.widget.Toast.makeText(getApplicationContext(), (\"Alarm:\" + delay), Toast.LENGTH_SHORT).show(); mTimerService.schedule(delay); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6968/buggy-version/src.net.morodomi.lecture7.ServiceActivity.java", "BodyUseAPI": ["net.morodomi.lecture7.TimerService.schedule(long)", "android.widget.Toast.makeText(getApplicationContext(), (\"Alarm:\" + delay), Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(getApplicationContext(),java.lang.String,Toast.LENGTH_SHORT)"], "Fixed commit": "a2cc45c5501adc6ea9f629f779551100c2a35b6e", "Url": "https://api.github.com/repos/morodomi/Android-Lecture-7", "Date": "2012-09-11T15:41:05Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.jimple.AssignStmt.getRightOp()", "soot.jimple.AssignStmt.getLeftOp()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((left instanceof soot.jimple.FieldRef) && (r instanceof soot.Local)) { soot.jimple.FieldRef fr = ((soot.jimple.FieldRef) (left)); if (isFloatingPointLike(fr.getType())) { usedAsFloatingPoint = true; } doBreak = true; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1703/buggy-version/src.soot.dexpler.DexNumTransformer.java", "BodyUseAPI": [], "Fixed commit": "dd17c579fd1d20082c2d3194162c922a2c1ee347", "Url": "https://api.github.com/repos/KJamrozik/soot", "Date": "2013-09-26T12:31:47Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.giot.fusion.service.ProductService.getProduct(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (product == null) { product = new com.giot.fusion.entity.Product(); product.setId(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3787/buggy-version/src.com.giot.fusion.controller.ProductAction.java", "BodyUseAPI": [], "Fixed commit": "341610ebba5b966f693259e8b2bb8c94540f0924", "Url": "https://api.github.com/repos/jiangmalone/fusion", "Date": "2016-05-20T05:23:58Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intervalDistance.getText().length()) == 0) { distance = 0; }else { distance = java.lang.Integer.valueOf(intervalDistance.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8899/buggy-version/RowCoach.src.com.example.rowcoach.Settings.java", "BodyUseAPI": ["java.lang.Integer.valueOf(intervalDistance.getText().toString())", "android.widget.EditText.getText()", "intervalDistance.getText().toString()"], "Fixed commit": "444a796458413916e08eb764bf0fa9a99ddbce72", "Url": "https://api.github.com/repos/joransp/RowCoach", "Date": "2014-06-25T20:30:36Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(playlist.equals(mPlaylist))) { mPlaylist = playlist; mIsTrackPrepared = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/280/buggy-version/Music.app.src.main.java.ru.technotrack.music.music_playing.MusicService.java", "BodyUseAPI": [], "Fixed commit": "ea72d2841bb59f63291311c2475124f469b03e19", "Url": "https://api.github.com/repos/IvanShafran/tech-vk-music-app", "Date": "2016-05-26T18:56:52Z"},
{"Line": "=>1000", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((jsonRep != null) && ((jsonRep.getJsonObject()) != null)) { return descralizeResourceSearchResults(jsonRep.getJsonObject().toString(), searchDo); }else { org.ednovo.gooru.application.shared.model.search.SearchDo<org.ednovo.gooru.application.shared.model.search.ResourceSearchResultDo> searchDOEmpty = new org.ednovo.gooru.application.shared.model.search.SearchDo<org.ednovo.gooru.application.shared.model.search.ResourceSearchResultDo>(); return searchDOEmpty; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7566/buggy-version/src.main.java.org.ednovo.gooru.application.server.service.SearchServiceImpl.java", "BodyUseAPI": ["org.restlet.ext.json.JsonRepresentation.getJsonObject()", "jsonRep.getJsonObject().toString()", "org.ednovo.gooru.application.server.service.SearchServiceImpl.descralizeResourceSearchResults(jsonRep.getJsonObject().toString(),org.ednovo.gooru.application.shared.model.search.SearchDo<org.ednovo.gooru.application.shared.model.search.ResourceSearchResultDo>)"], "Fixed commit": "3436beec96f1af484f6668b4f6756072bca5d13a", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-08-19T05:20:36Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tempAgentMap.containsKey(objHash)) { scouter.client.model.AgentObject oldAgent = tempAgentMap.get(objHash); if (oldAgent.isAlive()) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7937/buggy-version/scouter.client.src.scouter.client.model.AgentModelThread.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, scouter.client.model.AgentObject>.get(int)"], "Fixed commit": "0154429932d7255fc076a0904c42f9a05130658d", "Url": "https://api.github.com/repos/scouter-project/scouter", "Date": "2015-09-18T10:37:04Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.rest.client.model.JobHistory.getJobResult()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (uuid == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4810/buggy-version/flexodesktop.GUI.flexo.src.main.java.org.openflexo.rest.client.ServerRestService.java", "BodyUseAPI": [], "Fixed commit": "24938c7b5313f44a034dd83a793108226d56b740", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-11-08T17:50:35Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aResource == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4810/buggy-version/flexodesktop.model.flexofoundation.src.main.java.org.openflexo.foundation.rm.FlexoResource.java", "BodyUseAPI": [], "Fixed commit": "24938c7b5313f44a034dd83a793108226d56b740", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-11-08T17:50:35Z"},
{"Line": "=>792", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.foundation.rm.FlexoProject.resourceForKey(tempOriginResource.getResourceIdentifier())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (originResource == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4810/buggy-version/flexodesktop.model.flexofoundation.src.main.java.org.openflexo.foundation.rm.FlexoRMResource.java", "BodyUseAPI": [], "Fixed commit": "24938c7b5313f44a034dd83a793108226d56b740", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-11-08T17:50:35Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.foundation.rm.FlexoProject.resourceForKey(tempOriginResource.getResourceIdentifier())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (originResource == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4810/buggy-version/flexodesktop.model.flexofoundation.src.main.java.org.openflexo.foundation.rm.FlexoRMResource.java", "BodyUseAPI": [], "Fixed commit": "24938c7b5313f44a034dd83a793108226d56b740", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-11-08T17:50:35Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getDamage()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/309/buggy-version/TekkitRestrict.src.nl.taico.tekkitrestrict.listeners.NoHackForcefield.java", "BodyUseAPI": [], "Fixed commit": "46563f960a2cb2f4e36bd48b19e9e2f8c7513afb", "Url": "https://api.github.com/repos/Taeir/TekkitRestrict", "Date": "2014-03-03T17:52:33Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MainActivity.dbHelper.loadNFCs()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nfcCursor.getCount()) < 1) { firstNFCID = getString(R.string.no_nfc); }else { nfcCursor.moveToFirst(); firstNFCID = nfcCursor.getString(nfcCursor.getColumnIndexOrThrow(NFCContract.NFCEntry.COLUMN_NAME_UID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8380/buggy-version/app.src.main.java.com.main.seongmin.nfcalarm.TimePickerFragment.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndexOrThrow(NFCContract.NFCEntry.COLUMN_NAME_UID)", "android.database.Cursor.getString(nfcCursor.getColumnIndexOrThrow(NFCContract.NFCEntry.COLUMN_NAME_UID))", "android.database.Cursor.moveToFirst()"], "Fixed commit": "22e6d466fe69de3f82d8e5d56800dbb9d29eb526", "Url": "https://api.github.com/repos/seongminnpark/NFCAlarm", "Date": "2016-12-25T10:27:01Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(existingTunnels.isEmpty())) { ofOverlayNodeConfigBuilder.setTunnel(new java.util.ArrayList<org.opendaylight.yang.gen.v1.urn.opendaylight.groupbasedpolicy.ofoverlay.rev140528.nodes.node.Tunnel>(existingTunnels)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6272/buggy-version/neutron-ovsdb.src.main.java.org.opendaylight.groupbasedpolicy.neutron.ovsdb.util.InventoryHelper.java", "BodyUseAPI": ["org.opendaylight.yang.gen.v1.urn.opendaylight.groupbasedpolicy.ofoverlay.rev140528.OfOverlayNodeConfigBuilder.setTunnel(java.util.ArrayList<org.opendaylight.yang.gen.v1.urn.opendaylight.groupbasedpolicy.ofoverlay.rev140528.nodes.node.Tunnel>)"], "Fixed commit": "39edd316e04e14cac159b32ab720eeb2990037db", "Url": "https://api.github.com/repos/opendaylight/groupbasedpolicy", "Date": "2015-06-17T01:09:45Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (group1 == group2) { for (edu.duke.cs.osprey.structure.Atom atom : group1.getAtoms()) { if (!(atom.isHydrogen())) { getSolvParams(atom, solvparams1); internalSolvEnergy += solvparams1.dGref; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9028/buggy-version/src.edu.duke.cs.osprey.energy.forcefield.BigForcefieldEnergy.java", "BodyUseAPI": [], "Fixed commit": "fc94cbcab669859c2551ee10226f7e6a21dc96ec", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2016-07-17T19:47:22Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((states.get(lastIndex).timestamp) - (recordedOffset)) <= (time - (startTime))) (lastIndex)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4977/buggy-version/src.org.usfirst.frc2832.Robot_2016.HID.VirtualGamepad.java", "BodyUseAPI": [], "Fixed commit": "5c48436f87f43c5be4b8a20711877e8d2a4f91b3", "Url": "https://api.github.com/repos/FRC2832/Robot_2016", "Date": "2016-01-23T01:19:31Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.march.socialsdk.SocialSdk.sJsonAdapter) == null) { throw new java.lang.IllegalStateException(\"invoke addJsonAdapter() to add Json Parser\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7023/buggy-version/src.main.java.com.march.socialsdk.SocialSdk.java", "BodyUseAPI": [], "Fixed commit": "c5a992ff278a9fe383a7b681aed04e51d70fb70d", "Url": "https://api.github.com/repos/chendongMarch/SocialSdkLibrary", "Date": "2017-11-30T10:28:17Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.march.socialsdk.SocialSdk.sSocialSdkConfig) == null) { throw new java.lang.IllegalStateException(\"invoke SocialSdk.init() first please\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7023/buggy-version/src.main.java.com.march.socialsdk.SocialSdk.java", "BodyUseAPI": [], "Fixed commit": "c5a992ff278a9fe383a7b681aed04e51d70fb70d", "Url": "https://api.github.com/repos/chendongMarch/SocialSdkLibrary", "Date": "2017-11-30T10:28:17Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == true) { deleterFile(block, fs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5505/buggy-version/src.com.edit.superhack.SuperHack.java", "BodyUseAPI": [], "Fixed commit": "9d962210149e3a03a2904ea5d2dace3130af8c6f", "Url": "https://api.github.com/repos/Stuyvenstein/SuperHack", "Date": "2013-08-30T23:23:26Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 17) { tconstruct.client.TConstructClientRegistry.addEffectRenderMapping(tool, i, \"tinker\", effectTypes[9], true); }else tconstruct.client.TConstructClientRegistry.addEffectRenderMapping(tool, i, \"tinker\", effectTypes[i], true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4850/buggy-version/src.tconstruct.client.TProxyClient.java", "BodyUseAPI": ["tconstruct.client.TConstructClientRegistry.addEffectRenderMapping(tconstruct.library.tools.ToolCore,int,java.lang.String,java.lang.String,boolean)", "tconstruct.client.TConstructClientRegistry.addEffectRenderMapping(tconstruct.library.tools.ToolCore,int,java.lang.String,java.lang.String,boolean)"], "Fixed commit": "68ff6cd5440179825e62ac0b0849409e5b50bb9b", "Url": "https://api.github.com/repos/rationalOgre/TinkersConstruct", "Date": "2013-11-11T01:15:39Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParent()) != null) layout();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/301/buggy-version/org.eclipse.nebula.visualization.xygraph.src.org.eclipse.nebula.visualization.xygraph.figures.Annotation.java", "BodyUseAPI": [], "Fixed commit": "bf52af23b67119dcb0397e6dbb41000ffdff07fc", "Url": "https://api.github.com/repos/Treehopper/visualization", "Date": "2013-09-23T20:45:00Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) != null) { connection.disconnect(); connection = null; info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.log.info(\"D-Bus connection closed.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5049/buggy-version/data.src.main.java.info.rynkowski.hamsterclient.data.dbus.ConnectionProviderOverNetwork.java", "BodyUseAPI": [], "Fixed commit": "498d4f6038a187c6f84711538bf470b421d4f86c", "Url": "https://api.github.com/repos/rynkowsg/hamster-client-android", "Date": "2015-06-29T19:26:14Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getGame()) != null) getGame().addResponseForAllClients(response); else getServer().addResponseForLobby(getId(), response);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/271/buggy-version/core.FakeGameClient.java", "BodyUseAPI": [], "Fixed commit": "b1b7b85443a1957688786057f1136e182882aaa0", "Url": "https://api.github.com/repos/isitso/cs454-game-dd-test-server", "Date": "2015-11-11T03:37:58Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a >= 0) { return new com.ericsson.otp.erlang.OtpErlangTuple(new com.ericsson.otp.erlang.OtpErlangObject[]{ atom, new com.ericsson.otp.erlang.OtpErlangAtom(s), new com.ericsson.otp.erlang.OtpErlangLong(a) }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7401/buggy-version/org.erlide.core.src.org.erlide.core.services.search.ErlangSearchPattern.java", "BodyUseAPI": [], "Fixed commit": "05433b73da3367cfd31e9c4f50373fa4ec3d0232", "Url": "https://api.github.com/repos/vladdu/erlide_eclipse", "Date": "2011-12-26T16:55:49Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a >= 0) { return new com.ericsson.otp.erlang.OtpErlangTuple(new com.ericsson.otp.erlang.OtpErlangObject[]{ atom, new com.ericsson.otp.erlang.OtpErlangAtom(s1), new com.ericsson.otp.erlang.OtpErlangAtom(s2), new com.ericsson.otp.erlang.OtpErlangLong(a) }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7401/buggy-version/org.erlide.core.src.org.erlide.core.services.search.ErlangSearchPattern.java", "BodyUseAPI": [], "Fixed commit": "05433b73da3367cfd31e9c4f50373fa4ec3d0232", "Url": "https://api.github.com/repos/vladdu/erlide_eclipse", "Date": "2011-12-26T16:55:49Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.barchart.feed.api.model.meta.Instrument.symbol()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (symbol.contains(\"|\")) { symbol = i.vendorSymbols().get(VendorID.BARCHART_SHORT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3239/buggy-version/base.src.main.java.com.barchart.feed.base.provider.MarketProviderBase.java", "BodyUseAPI": [], "Fixed commit": "8e5845cf3a82c9cd8d7cf571a8c3af0e143c626f", "Url": "https://api.github.com/repos/barchart/barchart-feed", "Date": "2014-09-24T18:33:10Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4897/buggy-version/impactPathways.src.main.java.org.cgiar.ccafs.ap.validation.model.DeliverableValidator.java", "BodyUseAPI": [], "Fixed commit": "b93e12b8b114c905c8712703b396ad6d1c2a8d91", "Url": "https://api.github.com/repos/CCAFS/ccafs-ap", "Date": "2015-10-27T15:54:59Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rootLocation.toFile().exists())) { java.nio.file.Files.createDirectory(rootLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3263/buggy-version/server.src.main.java.ir.asparsa.hobbytaste.server.storage.FileSystemStorageService.java", "BodyUseAPI": ["java.nio.file.Files.createDirectory(java.nio.file.Path)"], "Fixed commit": "a745f1cb901678c4a44ece2f8c26cf8100a68124", "Url": "https://api.github.com/repos/hadilq/HobbyTaste", "Date": "2017-03-12T14:18:52Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rootTmpLocation.toFile().exists())) { java.nio.file.Files.createDirectory(rootTmpLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3263/buggy-version/server.src.main.java.ir.asparsa.hobbytaste.server.storage.FileSystemStorageService.java", "BodyUseAPI": ["java.nio.file.Files.createDirectory(java.nio.file.Path)"], "Fixed commit": "a745f1cb901678c4a44ece2f8c26cf8100a68124", "Url": "https://api.github.com/repos/hadilq/HobbyTaste", "Date": "2017-03-12T14:18:52Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Client.actionQueue) != null) { Event newAction = null; int i; for (i = 0; i < (Client.actionQueue.size()); i++) { if ((newAction.source) == (ClientManager.player_number)) { newAction = Client.actionQueue.remove(i); }else { newAction = Client.actionQueue.get(i); } Client actionClient = getClient(newAction.source); if ((newAction.action) == (MazewarPacket.CLIENT_FORWARD)) { actionClient.forward(); }else if ((newAction.action) == (MazewarPacket.CLIENT_REVERSE)) { actionClient.backup(); }else if ((newAction.action) == (MazewarPacket.CLIENT_LEFT)) { actionClient.turnLeft(); }else if ((newAction.action) == (MazewarPacket.CLIENT_RIGHT)) { actionClient.turnRight(); }else if ((newAction.action) == (MazewarPacket.CLIENT_FIRE)) { actionClient.fire(); }else if ((newAction.action) == (MazewarPacket.CLIENT_JOIN)) { RemoteClient newClient = remoteClientExists(newAction.source); if (newClient == null) { newClient = new RemoteClient(\"need name\", newAction.source); ClientManager.remoteClients.add(newClient); } ClientManager.maze.addClient(newClient); ClientManager.maze.repositionClient(newClient, newAction.location, newAction.orientation); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8230/buggy-version/Lab3.ClientManager.java", "BodyUseAPI": [], "Fixed commit": "6b037243f5ab19f73f1670c7dd4379d26c6d6061", "Url": "https://api.github.com/repos/ystviren/mustached-tyrion", "Date": "2014-03-22T21:24:20Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isResolved()) { callback.call(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3944/buggy-version/src.main.java.bgu.spl.a2.Promise.java", "BodyUseAPI": [], "Fixed commit": "8e5520c5ececffd3f79c43811a44255e98109144", "Url": "https://api.github.com/repos/amitbiran/spl2", "Date": "2017-12-09T15:24:52Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loanType.contains(\"HDB\")) { maxInstalment = java.lang.Math.min(maxTDSRInstalment, maxMSRInstalment); }else { maxInstalment = maxTDSRInstalment; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/204/buggy-version/RetailBankingSystem-war.src.java.managedbean.loan.employee.LoanOfficerProcessMortgagePurchaseApplicationManagedBean.java", "BodyUseAPI": [], "Fixed commit": "f1cb685ddac28c3f41458a0311d762dca44be3ce", "Url": "https://api.github.com/repos/HanFW/waves", "Date": "2016-11-05T20:32:11Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minTenure) < (customerLoanTenure)) { minTenure = customerLoanTenure; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/204/buggy-version/RetailBankingSystem-war.src.java.managedbean.loan.employee.LoanOfficerProcessMortgagePurchaseApplicationManagedBean.java", "BodyUseAPI": [], "Fixed commit": "f1cb685ddac28c3f41458a0311d762dca44be3ce", "Url": "https://api.github.com/repos/HanFW/waves", "Date": "2016-11-05T20:32:11Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeline) != null) { for (winterwell.jtwitter.Twitter.Status status : timeline) { android.util.Log.d(com.marakana.yamba.UpdaterService.TAG, (((\"Status: \" + (status.user.name)) + \" - \") + (status.text))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6590/buggy-version/Yamba.src.com.marakana.yamba.UpdaterService.java", "BodyUseAPI": [], "Fixed commit": "e223a82f3bb7eaf2192ef22250b4528ed845940b", "Url": "https://api.github.com/repos/mailat/bootcamp-2012-06-18", "Date": "2012-06-21T06:47:25Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.spanFactory.getRemoveSpanFromContext(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((span == null) || ((span.getEndpointInfo()) == null)) { if (logger.isDebugable()) { logger.debug((\"Span of context is null, url=\" + url), null); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3984/buggy-version/com.creditease.uav.hook.mq.src.main.java.com.creditease.uav.hook.rabbitmq.adapter.RabbitmqConsumerAdapter.java", "BodyUseAPI": [], "Fixed commit": "bd5e3390dfd56eb412e0954d4473459cbd926d4c", "Url": "https://api.github.com/repos/fyb007/uavstack", "Date": "2017-12-22T06:19:50Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.spanFactory.getSpanFromContext(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((span == null) || ((span.getEndpointInfo()) == null)) { if (logger.isDebugable()) { logger.debug((\"Span of context is null, url=\" + url), null); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3984/buggy-version/com.creditease.uav.hook.mq.src.main.java.com.creditease.uav.hook.rabbitmq.adapter.RabbitmqConsumerAdapter.java", "BodyUseAPI": [], "Fixed commit": "bd5e3390dfd56eb412e0954d4473459cbd926d4c", "Url": "https://api.github.com/repos/fyb007/uavstack", "Date": "2017-12-22T06:19:50Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DDTTestContext.getBoolean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (doubleClick) { java.lang.Thread.sleep(100); getElement().click(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6759/buggy-version/src.main.java.Verb.java", "BodyUseAPI": [], "Fixed commit": "b29b89acee24e53c603a33b9e26c4cc1b703c729", "Url": "https://api.github.com/repos/BeyMelamed/JavaDDT", "Date": "2015-07-21T21:20:53Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tag.equals(constants.getProperty(\"PROP_PACKAGE_COMMENT\"))) { pkg.setComment(value); }else if (this.inFileDefinition) { buildFile(this.lastFile, tag, value); }else { throw new org.spdx.tag.InvalidSpdxTagFileException((\"Expecting a file definition or a package property. Found \" + value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9025/buggy-version/src.org.spdx.tag.BuildDocument.java", "BodyUseAPI": ["org.spdx.tag.BuildDocument.buildFile(org.spdx.rdfparser.model.SpdxFile,java.lang.String,java.lang.String)"], "Fixed commit": "ce4e3a21461068e4488b6604ef6e535adfe47b6e", "Url": "https://api.github.com/repos/spdx/tools", "Date": "2015-06-17T16:24:29Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!inDefault) { me.lucko.luckperms.commands.misc.ExportCommand.write(writer, ((\"/luckperms user \" + (user.getUuid().toString())) + \" removegroup default\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5333/buggy-version/common.src.main.java.me.lucko.luckperms.commands.misc.ExportCommand.java", "BodyUseAPI": [], "Fixed commit": "80d2246634cb922c790e806259d1efcaa78cab3c", "Url": "https://api.github.com/repos/lucko/LuckPerms", "Date": "2016-10-04T19:48:58Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getUserManager().get(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(user.getPrimaryGroup().equalsIgnoreCase(\"default\"))) { me.lucko.luckperms.commands.misc.ExportCommand.write(writer, (((\"/luckperms user \" + (user.getUuid().toString())) + \" setprimarygroup \") + (user.getPrimaryGroup()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5333/buggy-version/common.src.main.java.me.lucko.luckperms.commands.misc.ExportCommand.java", "BodyUseAPI": ["me.lucko.luckperms.commands.misc.ExportCommand.write(java.io.BufferedWriter,(((\"/luckperms user \" + (user.getUuid().toString())) + \" setprimarygroup \") + (user.getPrimaryGroup())))", "user.getUuid().toString()", "me.lucko.luckperms.users.User.getPrimaryGroup()", "me.lucko.luckperms.users.User.getUuid()"], "Fixed commit": "80d2246634cb922c790e806259d1efcaa78cab3c", "Url": "https://api.github.com/repos/lucko/LuckPerms", "Date": "2016-10-04T19:48:58Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((useNbtB) != null) { useNbtB.detach(); useMetaB.detach(); useOreDictB.detach(); whiteListB.detach(); stickyB.detach(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7913/buggy-version/common.crazypants.enderio.conduit.gui.ItemSettings.java", "BodyUseAPI": [], "Fixed commit": "40f978d81af410bce32659f5005b33a92beb24ca", "Url": "https://api.github.com/repos/CrazyPants/EnderIO", "Date": "2013-11-26T14:08:21Z"},
{"Line": "=>666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.ArrayUtils.isEmpty(dircontents)) { java.lang.System.out.println((sourceDir + \" doesn't contain any folders, so we'll asume it is an item-directory.\")); dircontents = new java.lang.String[]{ \"\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7460/buggy-version/dspace.modules.additions.src.main.java.org.dspace.app.itemimport.ItemImport.java", "BodyUseAPI": [], "Fixed commit": "4c8934face843bd674a894ea88d06eb71e505793", "Url": "https://api.github.com/repos/milieuinfo/dspace54-atmire", "Date": "2016-10-24T12:44:54Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.graphstream.algorithm.generator.WattsStrogatzGenerator.edgeId(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((internalGraph.getEdge(edgeId)) == null) addEdge(edgeId, nodeId(current), nodeId(newTarget));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8795/buggy-version/src.org.graphstream.algorithm.generator.WattsStrogatzGenerator.java", "BodyUseAPI": ["org.graphstream.algorithm.generator.WattsStrogatzGenerator.addEdge(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "4fb9cf1ec451643360a0e2c237ac62bcb0097191", "Url": "https://api.github.com/repos/graphstream/gs-algo", "Date": "2011-05-14T11:15:58Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from > to) { to += from; from = to - from; to -= from; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8795/buggy-version/src.org.graphstream.algorithm.generator.WattsStrogatzGenerator.java", "BodyUseAPI": [], "Fixed commit": "4fb9cf1ec451643360a0e2c237ac62bcb0097191", "Url": "https://api.github.com/repos/graphstream/gs-algo", "Date": "2011-05-14T11:15:58Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (app.getCircleSelected().equals(\"All Friends\")) app.trackUser(uid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2798/buggy-version/app.src.main.java.sunglass.com.loco.newFriendsActivity.java", "BodyUseAPI": ["sunglass.com.loco.Application.trackUser(java.lang.String)"], "Fixed commit": "d09cdc05684ed67c33eee906838a0941d4714355", "Url": "https://api.github.com/repos/cmccord/Flare", "Date": "2015-05-02T21:01:42Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(circleSelected.equals(s))) { try { circleSelected = s; friendsInCircle = new java.util.ArrayList<>(); if (circleSelected.equals(\"All Friends\")) { mFirebaseRef.child(\"users\").child(mUserID).child(\"friends\").addListenerForSingleValueEvent(new com.firebase.client.ValueEventListener() { @java.lang.Override public void onDataChange(com.firebase.client.DataSnapshot dataSnapshot) { for (com.firebase.client.DataSnapshot d : dataSnapshot.getChildren()) friendsInCircle.add(d.getKey()); updateMarkersToCircle(); } @java.lang.Override public void onCancelled(com.firebase.client.FirebaseError firebaseError) { } }); }else { mFirebaseRef.child(\"users\").child(mUserID).child(\"circles\").child(circleSelected).addListenerForSingleValueEvent(new com.firebase.client.ValueEventListener() { @java.lang.Override public void onDataChange(com.firebase.client.DataSnapshot dataSnapshot) { for (com.firebase.client.DataSnapshot d : dataSnapshot.getChildren()) friendsInCircle.add(d.getKey()); updateMarkersToCircle(); } @java.lang.Override public void onCancelled(com.firebase.client.FirebaseError firebaseError) { } }); } android.util.Log.v(\"friendsInCircle\", friendsInCircle.toString()); } catch (java.lang.Exception e) { android.util.Log.v(\"Error updating circle\", e.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2798/buggy-version/app.src.main.java.sunglass.com.loco.Application.java", "BodyUseAPI": [], "Fixed commit": "d09cdc05684ed67c33eee906838a0941d4714355", "Url": "https://api.github.com/repos/cmccord/Flare", "Date": "2015-05-02T21:01:42Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (app.getCircleSelected().equals(\"All Friends\")) app.trackUser(uid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2798/buggy-version/app.src.main.java.sunglass.com.loco.MapsActivity.java", "BodyUseAPI": ["sunglass.com.loco.Application.trackUser(java.lang.String)"], "Fixed commit": "d09cdc05684ed67c33eee906838a0941d4714355", "Url": "https://api.github.com/repos/cmccord/Flare", "Date": "2015-05-02T21:01:42Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["damulticast.Device.lookUpPeer(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (dpeer != null) { peers.remove(dpeer); java.lang.System.err.println((\"Tracker has dismissed peer \" + (dpeer.getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1833/buggy-version/src.damulticast.Device.java", "BodyUseAPI": ["damulticast.RemoteDevice.getId()", "java.io.PrintStream.println((\"Tracker has dismissed peer \" + (dpeer.getId())))", "java.util.ArrayList<damulticast.RemoteDevice>.remove(damulticast.RemoteDevice)"], "Fixed commit": "3ade197d605db72375ab79c3b4b8849f78be6bc8", "Url": "https://api.github.com/repos/checharo/DAProject", "Date": "2014-05-23T06:07:39Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapFragment) == null) { mapFragment = new hu.bme.museum.fragments.map.MapFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6223/buggy-version/app.src.main.java.hu.bme.museum.fragments.map.MapTabFragment.java", "BodyUseAPI": [], "Fixed commit": "54a94f27fd96d72910d1e9e32c396b3d9f5948f4", "Url": "https://api.github.com/repos/UjhelyiB/Museum", "Date": "2016-11-27T16:41:28Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapFragment) == null) { mapFragment = new hu.bme.museum.fragments.map.MapFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6223/buggy-version/app.src.main.java.hu.bme.museum.fragments.map.MapTabFragment.java", "BodyUseAPI": [], "Fixed commit": "54a94f27fd96d72910d1e9e32c396b3d9f5948f4", "Url": "https://api.github.com/repos/UjhelyiB/Museum", "Date": "2016-11-27T16:41:28Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.CONNECTIVITY_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE)) != null) { isMobile = connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).isConnectedOrConnecting(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6876/buggy-version/SolnRss.src.free.solnRss.manager.UpdatingProcessConnectionManager.java", "BodyUseAPI": ["connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).isConnectedOrConnecting()", "android.net.ConnectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE)"], "Fixed commit": "4f80f6d0bbcde386b1be9b0edf22a820477f2ae3", "Url": "https://api.github.com/repos/Yorda/SolnRss", "Date": "2013-10-27T21:36:59Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((employmentCriteria.getSchoolYear()) != null) parameters.put(\"EMPLOYMENT_SCHOOL_YEAR_FILTER\", employmentCriteria.getSchoolYear().getDescription());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8084/buggy-version/gr.sch.ira.minoas.src.main.java.gr.sch.ira.minoas.seam.components.reports.EmploymentReport.java", "BodyUseAPI": ["employmentCriteria.getSchoolYear().getDescription()", "gr.sch.ira.minoas.seam.components.criteria.EmploymentCriteria.getSchoolYear()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,employmentCriteria.getSchoolYear().getDescription())"], "Fixed commit": "eb7a0e62be84058b6f15b10c8ac87200d74c600f", "Url": "https://api.github.com/repos/dideher/minoas", "Date": "2013-11-20T13:44:24Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((reportData) == null) || ((reportData.size()) == 0)) throw new java.lang.Exception(\"\u03a0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03c0\u03c1\u03ce\u03c4\u03b1 \u03bd\u03b1 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03b5\u03c4\u03b5 \u03ba\u03ac\u03c0\u03bf\u03b9\u03b1 \u03b1\u03bd\u03b1\u03b6\u03ae\u03c4\u03b7\u03c3\u03b7 \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03c5\u03c0\u03ce\u03c3\u03b5\u03c4\u03b5 \u03c3\u03c4\u03b7\u03bd \u03c3\u03c5\u03bd\u03ad\u03c7\u03b5\u03b9\u03b1!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8084/buggy-version/gr.sch.ira.minoas.src.main.java.gr.sch.ira.minoas.seam.components.reports.EmploymentReport.java", "BodyUseAPI": [], "Fixed commit": "eb7a0e62be84058b6f15b10c8ac87200d74c600f", "Url": "https://api.github.com/repos/dideher/minoas", "Date": "2013-11-20T13:44:24Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.definedType) instanceof java.lang.reflect.GenericArrayType) { rawType = ((java.lang.Class<T>) (java.lang.Object[].class)); }else if ((this.definedType) instanceof java.lang.Class) { rawType = ((java.lang.Class<T>) (this.definedType)); }else { throw new java.lang.RuntimeException(\"Illegal type for the Type Literal Class\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4469/buggy-version/code.api.src.main.java.org.apache.tamaya.TypeLiteral.java", "BodyUseAPI": [], "Fixed commit": "353817c872dc616fc1b6e3466f00476148c1769b", "Url": "https://api.github.com/repos/apache/incubator-tamaya", "Date": "2017-11-12T20:26:28Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (exception == null) { exception = event.getThrowable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6140/buggy-version/modules.activiti-explorer.src.main.java.org.activiti.explorer.ExplorerApp.java", "BodyUseAPI": [], "Fixed commit": "36607aff8e2a1c214789c24e6d2a404aac965846", "Url": "https://api.github.com/repos/tlipski/Activiti", "Date": "2013-03-15T19:44:02Z"},
{"Line": "=>569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((FrameworkConstants.ADD_CONFIG.equals(getFromPage())) || (FrameworkConstants.EDIT_CONFIG.equals(getFromPage()))) { if ((techId.equals(FrameworkConstants.TECH_SITE_CORE)) && (org.apache.commons.lang.StringUtils.isEmpty(siteCoreInstPath))) { setSiteCoreInstPathError(getText(com.photon.phresco.framework.actions.applications.ERROR_SITE_CORE_PATH_MISSING)); hasError = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9017/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Configurations.java", "BodyUseAPI": [], "Fixed commit": "e70f0c4660bce0ad1b8b1f319fbbd2396c4ef9e3", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-01-03T11:06:42Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((FrameworkConstants.ADD_CONFIG.equals(getFromPage())) || (FrameworkConstants.EDIT_CONFIG.equals(getFromPage()))) { com.photon.phresco.commons.model.ApplicationInfo applicationInfo = getApplicationInfo(); techId = applicationInfo.getTechInfo().getId(); if ((applicationInfo != null) && (techId.equals(FrameworkConstants.TECH_SITE_CORE))) { if ((techId.equals(FrameworkConstants.TECH_SITE_CORE)) && (com.photon.phresco.framework.actions.applications.DEPLOY_DIR.equals(key))) { propertyTemplate.setRequired(false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9017/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Configurations.java", "BodyUseAPI": [], "Fixed commit": "e70f0c4660bce0ad1b8b1f319fbbd2396c4ef9e3", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-01-03T11:06:42Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((model) == null) && ((getVirtualModelInstance()) != null)) && (getModelSlot().equals(getVirtualModelInstance().getVirtualModel().getReflexiveModelSlot()))) { model = ((M) (getVirtualModelInstance())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5581/buggy-version/flexodesktop.model.flexofoundation.src.main.java.org.openflexo.foundation.view.ModelSlotInstance.java", "BodyUseAPI": [], "Fixed commit": "0d8dfff11e8d6b164149f5827fe6e7a3997f59b0", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-05-16T08:20:22Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.KITKAT)) { w.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS); android.view.View decor = w.getDecorView(); decor.setPadding(decor.getPaddingLeft(), ((decor.getPaddingTop()) + (cn.o.app.AppUtil.getStatusBarHeight(getContext()))), decor.getPaddingRight(), decor.getPaddingBottom()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2824/buggy-version/OApp.src.cn.o.app.ui.Dialoger.java", "BodyUseAPI": [], "Fixed commit": "955132265264c6d9da2fed9c93469b2e1d0a14e2", "Url": "https://api.github.com/repos/wavinsun/MUtils", "Date": "2015-10-14T11:27:38Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(fileItem.getName().equals(\"\"))) { fileItem.write(java.nio.file.Paths.get(miracle.web.MiracleServlet.RB2XLS_BASE_DIR, fileItem.getName()).toFile()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5594/buggy-version/src.main.java.miracle.web.MiracleServlet.java", "BodyUseAPI": ["java.nio.file.Path.toFile()", "org.apache.commons.fileupload.FileItem.getName()", "org.apache.commons.fileupload.FileItem.write(java.nio.file.Paths.get(miracle.web.MiracleServlet.RB2XLS_BASE_DIR, fileItem.getName()).toFile())", "java.nio.file.Paths.get(java.lang.String,fileItem.getName())"], "Fixed commit": "14f184d203a3715cbf6156e7c13d648288986e6f", "Url": "https://api.github.com/repos/yuancihang/miracle_toto_tools", "Date": "2015-07-05T10:47:17Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(fileItem.getName().equals(\"\"))) { fileItem.write(java.nio.file.Paths.get(miracle.web.MiracleServlet.GENCNRB_BASE_DIR, fileItem.getName()).toFile()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5594/buggy-version/src.main.java.miracle.web.MiracleServlet.java", "BodyUseAPI": ["java.nio.file.Path.toFile()", "org.apache.commons.fileupload.FileItem.getName()", "org.apache.commons.fileupload.FileItem.write(java.nio.file.Paths.get(miracle.web.MiracleServlet.GENCNRB_BASE_DIR, fileItem.getName()).toFile())", "java.nio.file.Paths.get(java.lang.String,fileItem.getName())"], "Fixed commit": "14f184d203a3715cbf6156e7c13d648288986e6f", "Url": "https://api.github.com/repos/yuancihang/miracle_toto_tools", "Date": "2015-07-05T10:47:17Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((concepts.length) > 0) { sb.append(concepts[0]); for (int i = 1; i < (concepts.length); i++) { sb.append(\" + \"); sb.append(concepts[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4093/buggy-version/ontology-model.src.main.java.au.csiro.ontology.model.Conjunction.java", "BodyUseAPI": ["java.lang.StringBuilder.append(concepts[0])", "java.lang.StringBuilder.append(concepts[i])"], "Fixed commit": "2aa6a745448b5cb54ca37085051612ab91dcb56a", "Url": "https://api.github.com/repos/aehrc/ontology-core", "Date": "2013-05-09T08:13:43Z"},
{"Line": "=>962", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cache.containsKey(letters))) { possible(letters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3315/buggy-version/src.main.java.Player.java", "BodyUseAPI": ["main.java.Player.possible(java.lang.String)"], "Fixed commit": "a6f23cf776a4f0e7c332438dd0faac6a379ffed8", "Url": "https://api.github.com/repos/pianowow/concentrateJ", "Date": "2015-05-18T16:13:52Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i >= 0) found.remove(i);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3315/buggy-version/src.main.java.Player.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.remove(int)"], "Fixed commit": "a6f23cf776a4f0e7c332438dd0faac6a379ffed8", "Url": "https://api.github.com/repos/pianowow/concentrateJ", "Date": "2015-05-18T16:13:52Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (killer.equals(main.Board.board[x][y].getName())) { main.Board.board[x][y] = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1375/buggy-version/src.main.Board.java", "BodyUseAPI": [], "Fixed commit": "434d363fd25bccf83bc387f890d0708ca0702a96", "Url": "https://api.github.com/repos/SunnyNagam/BattleField", "Date": "2015-11-08T04:09:31Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(refreshed.contains(e))) refreshed.add(e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8754/buggy-version/src.com.artemis.World.java", "BodyUseAPI": ["com.artemis.utils.Bag<com.artemis.Entity>.add(com.artemis.Entity)"], "Fixed commit": "ccdbe4ec6672d3060be7f73ff956194728cf7563", "Url": "https://api.github.com/repos/gemserk/artemis", "Date": "2011-12-30T21:24:36Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((results[i]) > max) { max = results[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8241/buggy-version/src.HouseRobber.java", "BodyUseAPI": [], "Fixed commit": "c22a56f3564049165347f0dd03b5e0a5f7b3fdf2", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-07-06T06:03:49Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.audiveris.omr.sig.inter.AbstractChordInter.getCenter()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (center != null) { org.audiveris.omr.sheet.rhythm.MeasureStack stack = sig.getSystem().getMeasureStackAt(center); if (stack != null) { stack.addInter(this); } }else { org.audiveris.omr.sig.inter.AbstractChordInter.logger.info(\"*** No bounds for chord {}\", this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5486/buggy-version/src.main.org.audiveris.omr.sig.inter.AbstractChordInter.java", "BodyUseAPI": ["sig.getSystem().getMeasureStackAt(java.awt.Point)"], "Fixed commit": "6851521e091db2c39f56958ba6ebf7b47f5ce1bf", "Url": "https://api.github.com/repos/Audiveris/audiveris", "Date": "2017-12-06T11:01:06Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (report.isEmpty()) { return false; }else { it.buch85.timbrum.request.RecordTimbratura recordTimbratura = report.get(((report.size()) - 1)); return recordTimbratura.getDirection().equals(versoTimbratura); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7950/buggy-version/Timbrum.src.it.buch85.timbrum.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<it.buch85.timbrum.request.RecordTimbratura>.get(((report.size()) - 1))", "java.util.ArrayList<it.buch85.timbrum.request.RecordTimbratura>.size()"], "Fixed commit": "1f39261b933828a83625140fba125a11d603e847", "Url": "https://api.github.com/repos/buch85/Timbrum", "Date": "2014-06-20T09:03:47Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null != (carbonFactDataHandlerModel.getIsUseInvertedIndex())) { for (int i = 0; i < (isUseInvertedIndex.length); i++) { if (i < (carbonFactDataHandlerModel.getIsUseInvertedIndex().length)) { isUseInvertedIndex[i] = carbonFactDataHandlerModel.getIsUseInvertedIndex()[i]; }else { isUseInvertedIndex[i] = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7832/buggy-version/processing.src.main.java.org.carbondata.processing.store.CarbonFactDataHandlerColumnar.java", "BodyUseAPI": [], "Fixed commit": "1734a0d06594e4617ca4b24695ad755894aa127b", "Url": "https://api.github.com/repos/Zhangshunyu/incubator-carbondata", "Date": "2016-06-14T02:45:17Z"},
{"Line": "=>2992", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getModelProcessor().isNumericOperator(operations)) && ((!(isNumeric(leftTypeCheckInfo))) || (!(isNumeric(rightTypeCheckInfo))))) { if ((!(leftConceptName.getUri().equals(SadlConstants.SADL_IMPLICIT_MODEL_UNITTEDQUANTITY_URI))) || (!(rightConceptName.getUri().equals(SadlConstants.SADL_IMPLICIT_MODEL_UNITTEDQUANTITY_URI)))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2445/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": [], "Fixed commit": "62b08baddc7a591c714860f1e9c59302f2a55aef", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-08-23T20:20:35Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rangeType) == (com.galenframework.specs.Range.RangeType.BETWEEN)) { return java.lang.String.format(\"which is not in range of %s\", prettyString(dimension)); }else if ((rangeType) == (com.galenframework.specs.Range.RangeType.GREATER_THAN)) { return java.lang.String.format(\"but it should be greater than %s%s\", from.toString(), dimension); }else if ((rangeType) == (com.galenframework.specs.Range.RangeType.GREATER_THAN_OR_EQUALS)) { return java.lang.String.format(\"but it should be greater than or equal to %s%s\", from.toString(), dimension); }else if ((rangeType) == (com.galenframework.specs.Range.RangeType.LESS_THAN)) { return java.lang.String.format(\"but it should be less than %s%s\", to.toString(), dimension); }else if ((rangeType) == (com.galenframework.specs.Range.RangeType.LESS_THAN_OR_EQUALS)) { return java.lang.String.format(\"but it should be less than or equal to %s%s\", to.toString(), dimension); }else return \"but the expected range is unknown\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2970/buggy-version/galen-core.src.main.java.com.galenframework.specs.Range.java", "BodyUseAPI": [], "Fixed commit": "a8cced1d00b8011ca9b6c46530fe77bf0957886f", "Url": "https://api.github.com/repos/galenframework/galen", "Date": "2016-07-06T18:53:26Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.andiwand.commons.io.ByteStreamUtil.readFully(java.io.InputStream,byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (read < len) throw new java.io.EOFException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2454/buggy-version/src.at.andiwand.commons.io.ByteStreamUtil.java", "BodyUseAPI": [], "Fixed commit": "f5130840f20a4ecb72d0bd4d53570aa868038a87", "Url": "https://api.github.com/repos/andiwand/commons", "Date": "2012-10-20T13:49:04Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.andiwand.commons.io.CharStreamUtil.readFully(java.io.Reader,char[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (read < len) throw new java.io.EOFException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2454/buggy-version/src.at.andiwand.commons.io.CharStreamUtil.java", "BodyUseAPI": [], "Fixed commit": "f5130840f20a4ecb72d0bd4d53570aa868038a87", "Url": "https://api.github.com/repos/andiwand/commons", "Date": "2012-10-20T13:49:04Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.github.seqware.queryengine.model.impl.lazy.LazyFeatureSet.EXPENSIVE_ITERATION_WARNED)) { java.util.logging.Logger.getLogger(com.github.seqware.queryengine.model.impl.lazy.LazyFeatureSet.class.getName()).log(java.util.logging.Level.WARNING, \"Iterating through a LazyFeatureSet is expensive, avoid this\"); com.github.seqware.queryengine.model.impl.lazy.LazyFeatureSet.EXPENSIVE_ITERATION_WARNED = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1242/buggy-version/seqware-queryengine.src.main.java.com.github.seqware.queryengine.model.impl.lazy.LazyFeatureSet.java", "BodyUseAPI": [], "Fixed commit": "53ccea517de7a8e723fcb7659acf15bc6563d488", "Url": "https://api.github.com/repos/SeqWare/seqware", "Date": "2012-08-01T14:54:36Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.github.seqware.queryengine.impl.SimpleModelManager.AtomStatePair>.get(a.getSGID().toString())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (get == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1242/buggy-version/seqware-queryengine.src.main.java.com.github.seqware.queryengine.impl.SimpleModelManager.java", "BodyUseAPI": [], "Fixed commit": "53ccea517de7a8e723fcb7659acf15bc6563d488", "Url": "https://api.github.com/repos/SeqWare/seqware", "Date": "2012-08-01T14:54:36Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.borg.model.AppointmentModel.getReference().getApptByUid(java.lang.String)", "net.sf.borg.model.ical.EntityIcalAdapter.toBorg(net.fortuna.ical4j.model.Component)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (newap.getLastMod().after(ap.getLastMod())) { if (((net.sf.borg.model.Repeat.isRepeating(ap)) && (ap.isTodo())) && (!(newap.isTodo()))) { count++; net.sf.borg.model.ical.CalDav.log.info((\"SYNC do todo: \" + (ap.toString()))); net.sf.borg.model.AppointmentModel.getReference().do_todo(ap.getKey(), true); }else { try { newap.setKey(ap.getKey()); net.sf.borg.model.ical.SyncLog.getReference().setProcessUpdates(false); count++; net.sf.borg.model.ical.CalDav.log.info((\"SYNC save: \" + (comp.toString()))); net.sf.borg.model.ical.CalDav.log.info((\"SYNC save: \" + (newap.toString()))); net.sf.borg.model.AppointmentModel.getReference().saveAppt(newap); } finally { net.sf.borg.model.ical.SyncLog.getReference().setProcessUpdates(true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6197/buggy-version/BORGCalendar.model.src.main.java.net.sf.borg.model.ical.CalDav.java", "BodyUseAPI": ["net.sf.borg.model.entity.Appointment.getKey()", "net.sf.borg.model.entity.Appointment.setKey(ap.getKey())", "net.sf.borg.model.Repeat.isRepeating(net.sf.borg.model.entity.Appointment)", "net.sf.borg.model.entity.Appointment.toString()", "java.util.logging.Logger.info((\"SYNC do todo: \" + (ap.toString())))", "net.sf.borg.model.entity.Appointment.isTodo()", "net.sf.borg.model.AppointmentModel.getReference().do_todo(ap.getKey(),boolean)", "net.sf.borg.model.entity.Appointment.isTodo()", "net.sf.borg.model.AppointmentModel.getReference().saveAppt(net.sf.borg.model.entity.Appointment)", "java.util.logging.Logger.info((\"SYNC save: \" + (newap.toString())))", "net.sf.borg.model.entity.Appointment.toString()", "net.sf.borg.model.entity.Appointment.getKey()"], "Fixed commit": "b4eb6672588ca2a0a9e173ac9edaa424e18eb21d", "Url": "https://api.github.com/repos/mikeberger/borg_calendar", "Date": "2015-11-14T15:36:41Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eventList.getDisplay().isDisposed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5288/buggy-version/problem.src.main.java.rinde.sim.pdptw.common.StatsPanel.java", "BodyUseAPI": [], "Fixed commit": "0836836d57d7cec7be03a9947f3e51ecc2642ef2", "Url": "https://api.github.com/repos/rinde/RinSim", "Date": "2013-10-29T14:08:02Z"},
{"Line": "=>868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDragged)) { currentState = soundPlayer.getPlayerState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4845/buggy-version/src.org.teachothers.fishwatchr.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "e85169894aa42b81bd038ffb29cad83e5e4bd2aa", "Url": "https://api.github.com/repos/himawari-san/FishWatchr", "Date": "2015-12-04T14:00:49Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((RoomList.isFull) == false) RoomNameList.add(RoomList.RoomName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6974/buggy-version/src.Aschente-server.src.aschente.server.ServerThread.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(RoomList.RoomName)"], "Fixed commit": "f65cefb1c3a9b3bd8e93bdb45581dc2ceefd8f35", "Url": "https://api.github.com/repos/michaelaw320/Aschente-JanKenPon-server", "Date": "2014-08-25T17:15:07Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.hitao.activity.RecyclerViewAdapter.decodeSampledBitmapfromFielPath(java.lang.String,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (((file.getPath()) != null) || (bitmap != null)) { addBitmapToMemoryCache(file.getPath(), bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8359/buggy-version/src.main.java.com.example.hitao.activity.RecyclerViewAdapter.java", "BodyUseAPI": ["java.io.File.getPath()", "com.example.hitao.activity.RecyclerViewAdapter.6.addBitmapToMemoryCache(java.lang.String,android.graphics.Bitmap)"], "Fixed commit": "b425d782549efac8dcfcc69c2a49ecf3fe3141a9", "Url": "https://api.github.com/repos/VickyGit/Hitao", "Date": "2016-05-23T09:21:38Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((numCars) != 0) { if ((cars.get(0).getXPosition()) > (cars.get(((numCars) - 1)).getXPosition())) { maxIndex = findMaxIndex(0, ((numCars) - 1)); minIndex = maxIndex + 1; }else { maxIndex = (numCars) - 1; minIndex = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2009/buggy-version/Lane.java", "BodyUseAPI": ["java.util.ArrayList<Car>.get(int)", "Lane.findMaxIndex(int,int)", "cars.get(((numCars) - 1)).getXPosition()"], "Fixed commit": "108199b427167f6c79ac00dbc49b1aca1abc5a76", "Url": "https://api.github.com/repos/Saraislet/TrafficSimulator1", "Date": "2016-10-27T03:24:18Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(files[i].contains(\"notebuddy\"))) && (!(files[i].contains(\"yoerinijs\")))) { storedData.add(files[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2578/buggy-version/app.src.main.java.nl.yoerinijs.notebuddy.files.DirectoryReader.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "83f7bb572a67a9b0c460645c0934fc158cc78cea", "Url": "https://api.github.com/repos/YoeriNijs/NoteBuddy", "Date": "2017-04-01T13:59:23Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<java.lang.String>.toArray()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((o[((logList.size()) - 1)]) instanceof java.lang.String) { logString += ((java.lang.String) (o[((logList.size()) - i)])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6638/buggy-version/WorldOfEverbies.src.com.cheesymountain.woe.Log.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.size()"], "Fixed commit": "be71c58a660984b48aeac89225efb625c5de754c", "Url": "https://api.github.com/repos/Mackro/WoE", "Date": "2012-10-02T14:11:46Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.resch.kellerapp.model.Model.get().get(java.lang.Class,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (i == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7189/buggy-version/app.src.main.java.at.resch.kellerapp.view.modules.ModuleGuthaben.java", "BodyUseAPI": [], "Fixed commit": "834eb37d18cb7ae1db0aff67f3b24012c2a46364", "Url": "https://api.github.com/repos/FelixResch/KellerApp", "Date": "2014-08-16T12:42:28Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new blogr.vpm.fr.blogr.network.DefaultNetworkChecker().checkNetworkForDownload(activity, true)) { for (blogr.vpm.fr.blogr.picture.Picture p : post.getAllPictures()) { if (p.shouldBeUploaded()) { p.upload(activity); } } new blogr.vpm.fr.blogr.git.AsyncGithubBlogPuller(activity).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, ((blogr.vpm.fr.blogr.bean.GithubBlog) (blog))); if (blog.hasMetadataProvider()) { new blogr.vpm.fr.blogr.insertion.DefaultInserter(activity).prepend(post, blog.getMetadataProvider(post)); } blogr.vpm.fr.blogr.activity.GithubPublicationDialogFragment fragment = blogr.vpm.fr.blogr.activity.GithubPublicationDialogFragment.newInstance(this, blog.getTitle().replace(GithubBlog.REPO_SUFFIX, \"\")); fragment.show(activity.getFragmentManager(), \"credentialInput\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4522/buggy-version/app.src.main.java.blogr.vpm.fr.blogr.publish.GithubPublisher.java", "BodyUseAPI": ["blogr.vpm.fr.blogr.insertion.DefaultInserter.prepend(blogr.vpm.fr.blogr.bean.Post,blog.getMetadataProvider(post))", "blogr.vpm.fr.blogr.activity.GithubPublicationDialogFragment.show(activity.getFragmentManager(),java.lang.String)", "blogr.vpm.fr.blogr.picture.Picture.upload(android.app.Activity)", "blogr.vpm.fr.blogr.git.AsyncGithubBlogPuller.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR,blogr.vpm.fr.blogr.bean.Blog)", "android.app.Activity.getFragmentManager()"], "Fixed commit": "132cc7af97ce92d2943b7f6aeaae2f6654efa568", "Url": "https://api.github.com/repos/vpmalley/tpblogr", "Date": "2015-04-28T12:14:59Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.nwnx.nwnx2.jvm.NWScript.getIsDead(oPC)) { contagionJVM.System.CustomEffectSystem.RemoveCustomEffect(oPC, effect.getCustomEffect().getCustomEffectID()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6973/buggy-version/src.contagionJVM.System.CustomEffectSystem.java", "BodyUseAPI": ["contagionJVM.System.CustomEffectSystem.RemoveCustomEffect(org.nwnx.nwnx2.jvm.NWObject,effect.getCustomEffect().getCustomEffectID())"], "Fixed commit": "f2cc0b6dd31cee3229cfbb93ae98da1f6eae9eb4", "Url": "https://api.github.com/repos/zunath/Contagion_JVM", "Date": "2015-07-12T20:17:39Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.renameTo(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!couldRename) { throw new java.io.IOException((((\"Could not rename temp file \" + (newFile.toString())) + \" to file \") + localName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2399/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.java", "BodyUseAPI": [], "Fixed commit": "98d67de8bb9d2719c427766b5aeab260af0c7940", "Url": "https://api.github.com/repos/emckee2006/biojava", "Date": "2016-03-01T00:55:54Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((whichLanguage) == 0) textKRViewResult.setText(\"\ubb3c\uccb4\ub97c \ucc0d\uc5b4\ubcf4\uc138\uc694!\"); else textKRViewResult.setText(\"Take a picture!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3210/buggy-version/app.src.main.java.com.nouvelle.limjihun.enlightenment.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "adc29351783ea342f8e02f5001caa2c114b657ab", "Url": "https://api.github.com/repos/JihunLim/Enlightenment", "Date": "2017-09-10T06:02:22Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (context != null) { r = get(get, ((org.apache.hadoop.hbase.regionserver.HRegion) (region)), closeCallBack, context); }else { r = region.get(get); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3452/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.RSRpcServices.java", "BodyUseAPI": ["org.apache.hadoop.hbase.regionserver.RSRpcServices.get(org.apache.hadoop.hbase.client.Get,org.apache.hadoop.hbase.regionserver.Region,org.apache.hadoop.hbase.regionserver.RSRpcServices.RegionScannersCloseCallBack,org.apache.hadoop.hbase.ipc.RpcCallContext)"], "Fixed commit": "ac08b992c5c85e5ab4e6062a19b66d7478ee5980", "Url": "https://api.github.com/repos/apache/hbase", "Date": "2015-07-27T10:31:23Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Chest.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(inventory instanceof org.bukkit.inventory.DoubleChestInventory)) { for (org.bukkit.block.Block b : com.github.igotyou.FactoryMod.structures.MultiBlockStructure.searchForBlockOnSides(getChest(), Material.CHEST)) { if ((b.getType()) == (org.bukkit.Material.CHEST)) { org.bukkit.block.Chest secondChest = ((org.bukkit.block.Chest) (getChest().getState())); if ((secondChest.getInventory()) instanceof org.bukkit.inventory.DoubleChestInventory) { if ((((org.bukkit.inventory.DoubleChestInventory) (secondChest.getInventory())).getLeftSide().equals(inventory)) || (((org.bukkit.inventory.DoubleChestInventory) (secondChest.getInventory())).getRightSide().equals(inventory))) { return secondChest.getInventory(); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7222/buggy-version/src.com.github.igotyou.FactoryMod.factories.FurnCraftChestFactory.java", "BodyUseAPI": ["((org.bukkit.inventory.DoubleChestInventory) (secondChest.getInventory())).getLeftSide().equals(org.bukkit.inventory.Inventory)", "((org.bukkit.inventory.DoubleChestInventory) (secondChest.getInventory())).getRightSide().equals(org.bukkit.inventory.Inventory)"], "Fixed commit": "9b366ebbe92ee2c8cac99dafa78970bca61f05ee", "Url": "https://api.github.com/repos/BlackXnt/FactoryMod", "Date": "2016-03-26T13:44:34Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((height < 0) || (width < 0)) { throw new java.lang.RuntimeException(\"Matrix dimensions must be >= 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6470/buggy-version/src.Matrix.java", "BodyUseAPI": [], "Fixed commit": "a3c5cf7983b9b20a4a1718cd15fe70c620a4e110", "Url": "https://api.github.com/repos/erinhsu01/2605-project", "Date": "2015-11-04T14:51:25Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(footView instanceof android.widget.EditText)) { footView.setFocusable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1139/buggy-version/app.src.main.java.org.openlmis.core.view.adapter.PhysicalInventoryAdapter.java", "BodyUseAPI": [], "Fixed commit": "fd8de4bd58f4481cbb1a6bb9f48a9a8734e79295", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-10-22T08:36:13Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (param != null) { final java.lang.String paramString = ((java.lang.String) (param)); if ((paramString.contains(\"*\")) || (paramString.contains(\"%\"))) { havePlaceholder = true; } if (caseInsensitive) { newParams.add(paramString.toUpperCase()); }else { newParams.add(paramString); } predicates[index] = createEqualPredicate(criteriaBuilder, filter, path, false, param); }else { predicates[index] = createEmptyPredicate(criteriaBuilder, filter, path, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2290/buggy-version/modules.addons.org.jowidgets.cap.service.jpa.impl.src.main.java.org.jowidgets.cap.service.jpa.impl.query.CriteriaQueryCreator.java", "BodyUseAPI": ["org.jowidgets.cap.service.jpa.impl.query.CriteriaQueryCreator<PARAM_TYPE>.createEqualPredicate(javax.persistence.criteria.CriteriaBuilder,org.jowidgets.cap.common.api.filter.IArithmeticFilter,javax.persistence.criteria.Path<?>,boolean,java.lang.Object)"], "Fixed commit": "3874c720e0b9a9df854cfcbedd85032a39631dcd", "Url": "https://api.github.com/repos/jo-source/jo-client-platform", "Date": "2016-04-28T19:45:51Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList<pl.edu.agh.two.abdms.gui.controller.Configuration>.getSelectedIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index < 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6804/buggy-version/src.main.java.pl.edu.agh.two.abdms.gui.components.configurations.ConfigurationsDialog.java", "BodyUseAPI": [], "Fixed commit": "7788c73d374d881237f8559417fba1ec26389fd7", "Url": "https://api.github.com/repos/Elthiryel/TWO-ABDMS", "Date": "2014-12-10T17:59:17Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.exists()) { if (photoToInsert != null) { android.graphics.Bitmap takenImage = android.graphics.BitmapFactory.decodeFile(photoToInsert.getPath()); java.lang.System.out.println((\"bitmap count: \" + (takenImage.getByteCount()))); android.widget.ImageView ivPreview = ((android.widget.ImageView) (v.findViewById(R.id.profile_image))); ivPreview.setImageBitmap(takenImage); java.lang.System.out.println(\"Pr\u00f8ver \u00e5 sette inn bilde\"); } }else { java.lang.System.out.println(\"Bildet eksisterer ikke\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5073/buggy-version/app.src.main.java.rustelefonen.no.drikkevett_android.BacHomeFragment.java", "BodyUseAPI": [], "Fixed commit": "5a441ef403f3eced1de43197211e92f579693def", "Url": "https://api.github.com/repos/rustelefonen/drikkevett-android", "Date": "2016-07-04T07:54:54Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (authentication != null) { if (authentication.getAuthorities().contains(\"ADMIN\")) { return \"redirect:admin\"; }else { return \"redirect:patients_table\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5921/buggy-version/src.main.java.org.medservice.controllers.MainController.java", "BodyUseAPI": ["org.springframework.security.core.Authentication.getAuthorities()", "authentication.getAuthorities().contains(java.lang.String)"], "Fixed commit": "3932c7754d779d2fada5df077d8e14464f7c1830", "Url": "https://api.github.com/repos/MaksimP/medservice", "Date": "2017-11-22T10:08:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.jtrfp.trcl.core.Features.singleton) == null) org.jtrfp.trcl.core.Features.setSingleton(new org.jtrfp.trcl.core.Features());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5588/buggy-version/src.main.java.org.jtrfp.trcl.core.Features.java", "BodyUseAPI": [], "Fixed commit": "f9bf994d043e090d73e9c942cd1d6e6e4bbaf8f8", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2016-07-10T06:31:28Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHeaderView) != null) { ss.headerAlpha = mHeaderView.getAlpha(); ss.headerTranslationY = mHeaderView.getTranslationY(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3941/buggy-version/weasel.src.main.java.com.minoon.weasel.layout.CollapsingHeaderLayout.java", "BodyUseAPI": [], "Fixed commit": "6c2849945de4ed0eeed5e4dc114397a3de1b1ffc", "Url": "https://api.github.com/repos/m1noon/Weasel", "Date": "2015-09-07T11:50:50Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDragView) != null) { ss.dragViewPosition = mDragView.getTop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3941/buggy-version/weasel.src.main.java.com.minoon.weasel.layout.CollapsingHeaderLayout.java", "BodyUseAPI": [], "Fixed commit": "6c2849945de4ed0eeed5e4dc114397a3de1b1ffc", "Url": "https://api.github.com/repos/m1noon/Weasel", "Date": "2015-09-07T11:50:50Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (log.getPlaying()) { updateHandImages(dealerHand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3257/buggy-version/app.src.main.java.com.codeclan.example.cardgameandroid.activities.mainActivity.java", "BodyUseAPI": [], "Fixed commit": "ca98cfbb367146306ae4f0e16700f9fab82da359", "Url": "https://api.github.com/repos/chrisbacon/androidBlackjack", "Date": "2016-12-21T12:07:01Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(edu.cmu.cs.stage3.swing.DialogManager.s_stack.isEmpty())) { parent = ((java.awt.Component) (edu.cmu.cs.stage3.swing.DialogManager.s_stack.peek())); pane.setComponentOrientation(parent.getComponentOrientation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6054/buggy-version/src.edu.cmu.cs.stage3.swing.DialogManager.java", "BodyUseAPI": ["java.util.Stack.peek()"], "Fixed commit": "5427021134e40b8c5f98aefd49d1f9d83831639d", "Url": "https://api.github.com/repos/Arty-fishL/Alice-Extended-Source-Project", "Date": "2012-03-18T20:14:13Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tObj.sendJSONdata(uris[1]).equals(\"Data Sent\")) obj.delete_all_rows();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5063/buggy-version/src.com.example.followthecode.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "61c2f04179472d7cfa99d3102ddf6e49ac455089", "Url": "https://api.github.com/repos/hrishipallod/Android-AB-Client", "Date": "2014-09-07T13:19:59Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pli.global_players.get(p.getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (arena.isArcadeMain()) { com.comze_instancelabs.minigamesapi.util.Util.teleportPlayerFixed(p, arena.getWaitingLobbyTemp()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6985/buggy-version/API.src.main.java.com.comze_instancelabs.minigamesapi.ArenaListener.java", "BodyUseAPI": ["com.comze_instancelabs.minigamesapi.util.Util.teleportPlayerFixed(org.bukkit.entity.Player,arena.getWaitingLobbyTemp())", "com.comze_instancelabs.minigamesapi.Arena.getWaitingLobbyTemp()"], "Fixed commit": "56797cbdadee337da1f7a10d50be6814d2bb6395", "Url": "https://api.github.com/repos/instance01/MinigamesAPI", "Date": "2014-11-25T17:07:39Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4188/buggy-version/src.main.java.com.codecool.shop.model.Supplier.java", "BodyUseAPI": [], "Fixed commit": "91810d35d527e1f59b374512d439557f12fd464c", "Url": "https://api.github.com/repos/CodecoolBP20162/java-se-codecool-shop-oliver-judit-petya", "Date": "2017-05-17T13:08:02Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(other instanceof com.codecool.shop.model.Supplier)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4188/buggy-version/src.main.java.com.codecool.shop.model.Supplier.java", "BodyUseAPI": [], "Fixed commit": "91810d35d527e1f59b374512d439557f12fd464c", "Url": "https://api.github.com/repos/CodecoolBP20162/java-se-codecool-shop-oliver-judit-petya", "Date": "2017-05-17T13:08:02Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((handValues.get(\"1\")) == 0) || ((handValues.get(\"2\")) == 0)) || ((handValues.get(\"5\")) == 0)) || ((handValues.get(\"6\")) == 0)) { scoreCategoryOptions.put(ScoreCategory.SMALL_STRAIGHT, 30); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7964/buggy-version/scoring.YahtzeeScore.java", "BodyUseAPI": [], "Fixed commit": "f5dccfce8e5dabfdbbdcc4aac1d4c766eabe0d61", "Url": "https://api.github.com/repos/sarawille/Dice-Games", "Date": "2016-04-20T22:06:53Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Object, java.lang.Object>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (key != null) key2 = key.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6651/buggy-version/src.main.java.org.raisercostin.utils.ObjectUtils.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "851b4bbd8bc8b1c7872c4a591262eff7bc4511a8", "Url": "https://api.github.com/repos/raisercostin/raisercostin-commons", "Date": "2017-07-15T20:41:33Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((element.getKey()) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6651/buggy-version/src.main.java.org.raisercostin.utils.ObjectUtils.java", "BodyUseAPI": [], "Fixed commit": "851b4bbd8bc8b1c7872c4a591262eff7bc4511a8", "Url": "https://api.github.com/repos/raisercostin/raisercostin-commons", "Date": "2017-07-15T20:41:33Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (overlayEnabled) overlayID = \"+\" + (overlayID.substring(1)); else overlayID = \"-\" + (overlayID.substring(1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9266/buggy-version/CB_UI.src.CB_UI.GL_UI.Main.Actions.CB_Action_ShowMap.java", "BodyUseAPI": [], "Fixed commit": "8080d2c942c049950d3e6d4ef0d2eeb000548e3e", "Url": "https://api.github.com/repos/Ging-Buh/cachebox", "Date": "2017-06-17T15:14:26Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connection == null) { throw new java.lang.RuntimeException(((\"Address \" + address) + \" doesn't exist.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1436/buggy-version/src.main.java.fr.delthas.network.ServerConnection.java", "BodyUseAPI": [], "Fixed commit": "612d8662a73e91a8165006f34ecdb4efec490df0", "Url": "https://api.github.com/repos/delthas/network", "Date": "2017-01-20T17:40:23Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listeners.size()) > 0) listeners.get(0).HandleSensorData(data);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9155/buggy-version/RestAndroid.src.fi.side.sensors.Sensor.java", "BodyUseAPI": ["listeners.get(0).HandleSensorData(java.lang.String)", "java.util.ArrayList<fi.side.sensors.SensorListener>.get(int)"], "Fixed commit": "4cccc42ea3828af86d237568bb61f6844e55ee5d", "Url": "https://api.github.com/repos/sizzlelab/sensors", "Date": "2012-04-09T15:56:55Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wheres != null) && ((wheres.size()) < 1)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4347/buggy-version/src.main.java.com.bucuoa.west.orm.app.extend.spring.WestDao.java", "BodyUseAPI": [], "Fixed commit": "cc4dec6d7e98f486bbb2b9d1cfd07d286a0f0446", "Url": "https://api.github.com/repos/northandwest/West_Shard_ORM", "Date": "2017-01-20T07:49:13Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.InetAddress.getHostAddress()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (us.kbase.mobu.util.NetUtils.IPADDRESS_PATTERN.matcher(ip).matches()) ret.add(ip);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4859/buggy-version/src.java.us.kbase.mobu.util.NetUtils.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "b3095d13b2c1b055bde697183b43e3545c433874", "Url": "https://api.github.com/repos/rsutormin/kb_sdk", "Date": "2016-04-29T21:42:49Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((returnList.size()) == 0) { returnList.add(new projectPlanner.Activity(\"There are no activities\", getCurrentSelectedProject())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/199/buggy-version/src.projectPlanner.view.projectPanel.ListPanel.java", "BodyUseAPI": ["java.util.List<projectPlanner.Activity>.add(projectPlanner.Activity)"], "Fixed commit": "0ee49e8a77eea8ee0cfd608dfafc0b9901aa817b", "Url": "https://api.github.com/repos/OliverFlecke/ProjectPlanner", "Date": "2015-05-05T21:31:56Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.job) != null) { return java.util.Arrays.asList(new io.relution.jenkins.awssqs.SQSTriggerActivityAction(this.job)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2805/buggy-version/src.main.java.io.relution.jenkins.awssqs.SQSTrigger.java", "BodyUseAPI": [], "Fixed commit": "9a3d61f8b35bcb9c1edb2ebb5ed92b8a1b29d520", "Url": "https://api.github.com/repos/jenkinsci/aws-codecommit-trigger-plugin", "Date": "2017-07-12T11:14:30Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validatorInstance.getProperties().getBoolean(\"feature.suppress_notloaded\"))) for (java.lang.String notLoaded : configuration.getNotLoaded()) section.add(\"SYSTEM-007\", java.lang.String.format(\"Validation artifact '%s' not loaded.\", notLoaded), FlagType.WARNING);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9216/buggy-version/validator-core.src.main.java.no.difi.vefa.validator.Validation.java", "BodyUseAPI": [], "Fixed commit": "f70dc14e1d5876a828c9353b09f558330589cd0e", "Url": "https://api.github.com/repos/difi/vefa-validator", "Date": "2015-08-19T11:12:15Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configBeforeSwitched) != (getCfg())) { this.storeSettings(configBeforeSwitched); configBeforeSwitched = getCfg(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2014/buggy-version/rdt.org.eclipse.ptp.rdt.sync.ui.src.org.eclipse.ptp.rdt.sync.ui.properties.EnvManagerPropertiesPage.java", "BodyUseAPI": [], "Fixed commit": "58438a4b92ee1ba9d8263e2c227443b9201a5ecd", "Url": "https://api.github.com/repos/rolandschulz/PTP", "Date": "2012-11-08T20:10:14Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(mCurrentLocale)) { c = db.query(com.anysoftkeyboard.dictionaries.sqlite.WordsSQLiteConnection.TABLE_NAME, new java.lang.String[]{ com.anysoftkeyboard.dictionaries.sqlite.WordsSQLiteConnection.Words._ID, com.anysoftkeyboard.dictionaries.sqlite.WordsSQLiteConnection.Words.WORD, com.anysoftkeyboard.dictionaries.sqlite.WordsSQLiteConnection.Words.FREQUENCY }, ((\"(\" + (com.anysoftkeyboard.dictionaries.sqlite.WordsSQLiteConnection.Words.LOCALE)) + \" IS NULL)\"), null, null, null, null); }else { c = db.query(com.anysoftkeyboard.dictionaries.sqlite.WordsSQLiteConnection.TABLE_NAME, new java.lang.String[]{ com.anysoftkeyboard.dictionaries.sqlite.WordsSQLiteConnection.Words._ID, com.anysoftkeyboard.dictionaries.sqlite.WordsSQLiteConnection.Words.WORD, com.anysoftkeyboard.dictionaries.sqlite.WordsSQLiteConnection.Words.FREQUENCY }, ((((\"(\" + (com.anysoftkeyboard.dictionaries.sqlite.WordsSQLiteConnection.Words.LOCALE)) + \" IS NULL) or (\") + (com.anysoftkeyboard.dictionaries.sqlite.WordsSQLiteConnection.Words.LOCALE)) + \"=?)\"), new java.lang.String[]{ mCurrentLocale }, null, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4743/buggy-version/src.com.anysoftkeyboard.dictionaries.sqlite.WordsSQLiteConnection.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Fixed commit": "e6f2cc8a9d2f04760c33595ac40a3b754f558243", "Url": "https://api.github.com/repos/AnySoftKeyboard/AnySoftKeyboard", "Date": "2013-05-02T15:20:33Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(CommonString.ROUNDUUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rs_string.contains(\"FreeGame\")) && (!(rs_string.contains(\"EnterFreeGame\")))) begin_index = 23;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6244/buggy-version/GameResult_Web.WebContent.com.dao.GameResultRecords.java", "BodyUseAPI": [], "Fixed commit": "39807a3bb2f6bcf984752ee0711fbda8333d6bf3", "Url": "https://api.github.com/repos/fanntone/GameResult_Web", "Date": "2017-02-06T09:12:16Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(CommonString.ROUNDUUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rs_string.contains(\"BonusGame\")) && (!(rs_string.contains(\"EnterBonusGame\")))) begin_index = 18;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6244/buggy-version/GameResult_Web.WebContent.com.dao.GameResultRecords.java", "BodyUseAPI": [], "Fixed commit": "39807a3bb2f6bcf984752ee0711fbda8333d6bf3", "Url": "https://api.github.com/repos/fanntone/GameResult_Web", "Date": "2017-02-06T09:12:16Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((response != null) && ((response.body()) != null)) { java.lang.String json = response.body().string(); return com.lance.network.okhttputil.utils.JSONUtil.getObjectFromJson(json, clazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2143/buggy-version/okhttputil.src.main.java.com.lance.network.okhttputil.callback.JsonCallback.java", "BodyUseAPI": ["okhttp3.Response.body()", "response.body().string()"], "Fixed commit": "5fa6c3ffcc556e85f77005c8132040557dbc1361", "Url": "https://api.github.com/repos/lindan83/OkHttpUtil", "Date": "2016-11-14T02:33:11Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (th.zirata.World.playerBullets.get(i).outOfBounds()) { th.zirata.World.playerBullets.remove(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/704/buggy-version/app.src.main.java.th.zirata.World.java", "BodyUseAPI": ["java.util.ArrayList<th.zirata.Bullet>.remove(int)"], "Fixed commit": "9c5ac838fda17022618903b074730c611ec1a4a8", "Url": "https://api.github.com/repos/mbfrahry/Zirata", "Date": "2015-10-04T22:25:36Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.puppycrawl.tools.checkstyle.ThreadModeSettings.CHECKER_MODULE_NAME.equals(name)) { throw new java.lang.IllegalArgumentException(\"Multi thread mode for Checker module is not implemented\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6852/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.ThreadModeSettings.java", "BodyUseAPI": [], "Fixed commit": "4f90a1367d63bb7109a0e0975e43e96fcff18760", "Url": "https://api.github.com/repos/Vladlis/checkstyle", "Date": "2017-07-20T22:44:20Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wildfly.plugin.server.StartMojo.createClient()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.wildfly.plugin.core.ServerHelper.isStandaloneRunning(client)) { throw new org.apache.maven.plugin.MojoExecutionException(java.lang.String.format(\"%s server is already running?\", serverType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3809/buggy-version/plugin.src.main.java.org.wildfly.plugin.server.StartMojo.java", "BodyUseAPI": [], "Fixed commit": "fc8b2216abbabfb685b3096b7c65a459153f59e6", "Url": "https://api.github.com/repos/mareknovotny/wildfly-maven-plugin", "Date": "2016-11-11T18:19:12Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((usageRecords.size()) > 0) { java.lang.String query = generateBatchInsertQuery(usageRecords); entityManager.createNativeQuery(query).executeUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3266/buggy-version/persistence.src.main.java.org.openstack.atlas.service.domain.usage.repository.HostUsageRefactorRepository.java", "BodyUseAPI": ["org.openstack.atlas.service.domain.usage.repository.HostUsageRefactorRepository.generateBatchInsertQuery(java.util.List<org.openstack.atlas.service.domain.usage.entities.LoadBalancerHostUsage>)"], "Fixed commit": "72dd70cdd604000362c8e8212661cdc1ba88df8e", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2013-07-30T21:18:12Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scAlgorithm.input.getTVNum()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t_num_vert > 12) calculate_automorphisms = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9039/buggy-version/harp-daal-app.src.main.java.edu.iu.daal_subgraph.SCDaalCollectiveMapper.java", "BodyUseAPI": [], "Fixed commit": "3008f48a1f4313fc2bbb48f072392fcccde76bdf", "Url": "https://api.github.com/repos/francktcheng/harp", "Date": "2017-09-28T05:21:44Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is3d) { if (e.isTextureChange()) { figure3d.flushTextureCaches(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1622/buggy-version/swing.src.net.sf.openrocket.gui.scalefigure.RocketPanel.java", "BodyUseAPI": [], "Fixed commit": "35b46ca44fc1ecb6162f3880459b9bbba4c75295", "Url": "https://api.github.com/repos/teyrana/openrocket", "Date": "2015-10-19T15:26:11Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(str.equals(\"\"))) { org.json.JSONArray jsonArrayOfResult = jsonObjectOfReturnJson.getJSONArray(jsonObjectOfReturnJson.getString(\"error_grids\")); if ((jsonArrayOfResult.length()) >= 2) { errorNo = java.lang.Integer.valueOf(jsonArrayOfResult.getJSONObject(1).getString(\"error_no\")); } errorInfo = jsonArrayOfResult.getJSONObject(1).getString(\"error_info\"); throw new java.lang.IllegalStateException(jsonArrayOfResult.getJSONObject(1).getString(\"error_info\")); }else { errorNo = java.lang.Integer.valueOf(jsonObjectOfReturnJson.getString(\"msg_no\")); errorInfo = jsonObjectOfReturnJson.getString(\"msg_info\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7586/buggy-version/shareAuto.app.src.main.java.com.ss.dataSource.HttpDataSource.java", "BodyUseAPI": [], "Fixed commit": "ec4c59a090bf1eecb658f0d462db4f578d7f02f2", "Url": "https://api.github.com/repos/wenhulove333/androidApp", "Date": "2016-10-09T13:38:37Z"},
{"Line": "=>1125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (param2 instanceof com.redhat.ceylon.compiler.typechecker.model.FunctionalParameter) { paramType = typeFact().getCallableType(param2.getType()); }else { paramType = param2.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7946/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.ClassTransformer.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.typechecker.model.Parameter.getType()", "typeFact().getCallableType(param2.getType())", "com.redhat.ceylon.compiler.typechecker.model.Parameter.getType()"], "Fixed commit": "380deba811959f07857bcd2ea0065fc08c46b53f", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2012-05-10T12:05:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMapView) != null) { mMapView.onDestroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/213/buggy-version/app.src.main.java.me.anky.scf.ContactUsFragment.java", "BodyUseAPI": [], "Fixed commit": "6c335345e3a6cfa6fefb4d5ad653c526a71b2857", "Url": "https://api.github.com/repos/anky21/SCF", "Date": "2017-04-10T23:18:39Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMapView) != null) { mMapView.onSaveInstanceState(outState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/213/buggy-version/app.src.main.java.me.anky.scf.ContactUsFragment.java", "BodyUseAPI": [], "Fixed commit": "6c335345e3a6cfa6fefb4d5ad653c526a71b2857", "Url": "https://api.github.com/repos/anky21/SCF", "Date": "2017-04-10T23:18:39Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!censored) && (!expired)) && (!(msg.isCompletelyDrawn()))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9243/buggy-version/src.main.java.com.glitchcog.fontificator.gui.chat.ChatPanel.java", "BodyUseAPI": [], "Fixed commit": "9772413510b31d89f7a0822c97c7f2b4314c565c", "Url": "https://api.github.com/repos/GlitchCog/ChatGameFontificator", "Date": "2016-09-25T12:24:43Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.annotation.processing.ProcessingEnvironment.getOptions()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (options.containsKey(toothpick.compiler.common.ToothpickProcessor.PARAMETER_EXCLUDES)) { toothpickExcludeFilters = options.get(toothpick.compiler.common.ToothpickProcessor.PARAMETER_EXCLUDES); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7689/buggy-version/toothpick-compiler.src.main.java.toothpick.compiler.common.ToothpickProcessor.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "4c9c2f0331d30aad352be5c602f8a08f0f518d43", "Url": "https://api.github.com/repos/stephanenicolas/toothpick", "Date": "2016-04-19T16:17:20Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.biomeManager) != null) return this.biomeManager.getBiomeTC(x, z);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3363/buggy-version/Bukkit.src.com.Khorn.TerrainControl.Bukkit.BukkitWorld.java", "BodyUseAPI": [], "Fixed commit": "52963b04c00869bea6691cf287a1f7ac5c3f2b2a", "Url": "https://api.github.com/repos/Wickth/TerrainControl", "Date": "2012-03-17T12:11:57Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.biomeManager) != null) return this.biomeManager.getBiomesUnZoomedTC(biomeArray, x, z, x_size, z_size);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3363/buggy-version/Bukkit.src.com.Khorn.TerrainControl.Bukkit.BukkitWorld.java", "BodyUseAPI": [], "Fixed commit": "52963b04c00869bea6691cf287a1f7ac5c3f2b2a", "Url": "https://api.github.com/repos/Wickth/TerrainControl", "Date": "2012-03-17T12:11:57Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.biomeManager) != null) return this.biomeManager.getBiomesTC(biomeArray, x, z, x_size, z_size);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3363/buggy-version/Bukkit.src.com.Khorn.TerrainControl.Bukkit.BukkitWorld.java", "BodyUseAPI": [], "Fixed commit": "52963b04c00869bea6691cf287a1f7ac5c3f2b2a", "Url": "https://api.github.com/repos/Wickth/TerrainControl", "Date": "2012-03-17T12:11:57Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.biomeManager) != null) return this.biomeManager.getTemperaturesTC(x, z, x_size, z_size);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3363/buggy-version/Bukkit.src.com.Khorn.TerrainControl.Bukkit.BukkitWorld.java", "BodyUseAPI": [], "Fixed commit": "52963b04c00869bea6691cf287a1f7ac5c3f2b2a", "Url": "https://api.github.com/repos/Wickth/TerrainControl", "Date": "2012-03-17T12:11:57Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((biomeArray == null) || ((biomeArray.length) < (x_size * z_size))) biomeArray = new int[x_size * z_size];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3363/buggy-version/Bukkit.src.com.Khorn.TerrainControl.Bukkit.BukkitWorld.java", "BodyUseAPI": [], "Fixed commit": "52963b04c00869bea6691cf287a1f7ac5c3f2b2a", "Url": "https://api.github.com/repos/Wickth/TerrainControl", "Date": "2012-03-17T12:11:57Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((biomeArray == null) || ((biomeArray.length) < (x_size * z_size))) biomeArray = new int[x_size * z_size];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3363/buggy-version/Bukkit.src.com.Khorn.TerrainControl.Bukkit.BukkitWorld.java", "BodyUseAPI": [], "Fixed commit": "52963b04c00869bea6691cf287a1f7ac5c3f2b2a", "Url": "https://api.github.com/repos/Wickth/TerrainControl", "Date": "2012-03-17T12:11:57Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pt.feup.stockportfolio.QuoteActivity.extra_fragment) != null) { returnToQuoteFragment(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4204/buggy-version/Android.StockPortfolio.src.pt.feup.stockportfolio.QuoteActivity.java", "BodyUseAPI": [], "Fixed commit": "8d0a94a4f7f04133bfcccd3b3e34ff6aa8041146", "Url": "https://api.github.com/repos/joaoanes/BusTicketSimulator2014", "Date": "2013-11-22T12:12:14Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ppl <= 0) dppl = 1.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/925/buggy-version/app.src.main.java.com.uottawa.bond.simpletip.Tab3Summary.java", "BodyUseAPI": [], "Fixed commit": "396c035d9ff34bea4cc846e518a11ccb1cfaa965", "Url": "https://api.github.com/repos/byan1197/SimpleTip", "Date": "2017-05-26T17:37:52Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == child) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/488/buggy-version/engine.src.main.java.org.terasology.rendering.nui.widgets.models.Tree.java", "BodyUseAPI": [], "Fixed commit": "0aedf3077ab3e8bd76686f033c52581910cf15b7", "Url": "https://api.github.com/repos/MovingBlocks/Terasology", "Date": "2016-07-07T12:41:16Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((prefs.getString(\"dex_collection_method\", \"BluetoothWixel\").compareTo(\"WifiWixel\")) != 0) && ((prefs.getString(\"dex_collection_method\", \"BluetoothWixel\").compareTo(\"WifiBlueToothWixel\")) != 0)) { java.lang.String receiversIpAddresses; receiversIpAddresses = prefs.getString(\"wifi_recievers_addresses\", \"\"); if ((receiversIpAddresses == null) || (receiversIpAddresses.equals(\"\"))) { collectionCategory.removePreference(wifiRecievers); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4502/buggy-version/app.src.main.java.com.eveningoutpost.dexdrip.utils.Preferences.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Fixed commit": "ec51132b2491a4f6f1fbd87ad90aa4c74e53c396", "Url": "https://api.github.com/repos/jamorham/xDrip-Experimental", "Date": "2015-09-12T08:39:38Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (property.equals(\"plugins\")) { return getPlugins(); }else if (property.equals(\"extensionsAsDynamicObject\")) { return getExtensionsAsDynamicObject(); }else if (property.equals(\"asMap\")) { return getAsMap(); }else if (extensionsStorage.hasExtension(property)) { return extensionsStorage.findByName(property); }else { throw new org.codehaus.groovy.runtime.metaclass.MissingPropertyExceptionNoStack(property, getClass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1407/buggy-version/subprojects.core.src.main.java.org.gradle.api.internal.plugins.DefaultConvention.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.gradle.api.internal.plugins.ExtensionsStorage.hasExtension(java.lang.String)", "org.gradle.api.internal.plugins.ExtensionsStorage.findByName(java.lang.String)"], "Fixed commit": "32a5a74b58b29e008d2bdc42dadf656748d2ca8f", "Url": "https://api.github.com/repos/lhotari/gradle", "Date": "2016-05-06T01:18:18Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVisible()) { setVisible(false); setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3509/buggy-version/beast.src.main.java.edu.pse.beast.celectiondescriptioneditor.View.CCodeEditorWindow.java", "BodyUseAPI": [], "Fixed commit": "342398b774cc1f276414de2b54200266e7a4e593", "Url": "https://api.github.com/repos/Skypr/BEAST", "Date": "2017-02-12T12:27:13Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!status) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4571/buggy-version/src.org.giswater.task.ParentSchemaTask.java", "BodyUseAPI": [], "Fixed commit": "fa6da518e61f7986c8fb1260ebb81b86e78a6eee", "Url": "https://api.github.com/repos/Giswater/giswater", "Date": "2016-08-16T17:06:07Z"},
{"Line": "=>715", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.GINGERBREAD_MR1)) { mBitmapCanvas.setBitmap(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3550/buggy-version/MPChartLib.src.main.java.com.github.mikephil.charting.renderer.LineChartRenderer.java", "BodyUseAPI": [], "Fixed commit": "927b99d441510854a1f15d5fd8294e78e8283d06", "Url": "https://api.github.com/repos/dzungpv/MPAndroidChart", "Date": "2016-11-04T03:48:33Z"},
{"Line": "=>985", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.GINGERBREAD_MR1)) { mBitmapCanvas.setBitmap(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3550/buggy-version/MPChartLib.src.main.java.com.github.mikephil.charting.renderer.PieChartRenderer.java", "BodyUseAPI": [], "Fixed commit": "927b99d441510854a1f15d5fd8294e78e8283d06", "Url": "https://api.github.com/repos/dzungpv/MPAndroidChart", "Date": "2016-11-04T03:48:33Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (order < (filters.size())) { nextPoiTypeFilter = filters.get(order); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8970/buggy-version/src.main.java.io.mapsquare.osmcontributor.ui.activities.MapActivity.java", "BodyUseAPI": ["java.util.List<io.mapsquare.osmcontributor.ui.utils.PoiTypeFilter>.get(int)"], "Fixed commit": "04ab623fa1863b3bae1b1d6e1e9f3ded0f124a6a", "Url": "https://api.github.com/repos/jawg/osm-contributor", "Date": "2016-06-27T11:40:01Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((signalButton) != null) { signalButton.setForeground(fg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7758/buggy-version/Ardulink.src.org.zu.ardulink.gui.customcomponents.SignalButton.java", "BodyUseAPI": [], "Fixed commit": "5448cb0902c6cad4aa5431efc7e8359b01634a18", "Url": "https://api.github.com/repos/Ardulink/Ardulink-2", "Date": "2014-01-18T15:29:19Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((signalButton) != null) { signalButton.setBackground(bg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7758/buggy-version/Ardulink.src.org.zu.ardulink.gui.customcomponents.SignalButton.java", "BodyUseAPI": [], "Fixed commit": "5448cb0902c6cad4aa5431efc7e8359b01634a18", "Url": "https://api.github.com/repos/Ardulink/Ardulink-2", "Date": "2014-01-18T15:29:19Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { mViewPager.setCurrentItem(savedInstanceState.getInt(\"tab_id\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/156/buggy-version/NewsApp.app.src.main.java.com.java.a35.newsapp.ItemListActivity.java", "BodyUseAPI": ["android.support.v4.view.ViewPager.setCurrentItem(savedInstanceState.getInt(\"tab_id\"))", "android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "05b865ef38fddac32dc7d41d080da669cf2e27c6", "Url": "https://api.github.com/repos/twd2/newsapp", "Date": "2017-09-05T14:27:23Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.getGeneratedKeys()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rs.next()) { id = rs.getInt(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4936/buggy-version/src.main.java.com.okawong.restuarant.service.RestaurantServiceImpl.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "de78f5b15e3adbbe2f808db9ba4fc194eba00331", "Url": "https://api.github.com/repos/okawong/Jitaku_Cafe", "Date": "2017-04-22T03:36:41Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (extras != null) { java.lang.Integer initialSysNotificationID = extras.getInt(\"initialSysNotificationId\"); if (initialSysNotificationID != null) { constants.put(\"initialSysNotificationID\", initialSysNotificationID); constants.put(\"initialSysNotificationAction\", extras.getString(\"initialSysNotificationAction\")); constants.put(\"initialSysNotificationPayload\", extras.getString(\"initialSysNotificationPayload\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6153/buggy-version/android.src.main.java.io.neson.react-native.notification.NotificationModule.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,extras.getString(\"initialSysNotificationAction\"))", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,extras.getString(\"initialSysNotificationPayload\"))", "android.os.Bundle.getInt(java.lang.String)", "android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "9a6ebc07e9c88bae73bf7d28d81dde252a95eb56", "Url": "https://api.github.com/repos/neson/react-native-system-notification", "Date": "2016-01-18T15:34:51Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intent == null) { return START_STICKY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1486/buggy-version/src.com.ville.sentry.WorkService.java", "BodyUseAPI": [], "Fixed commit": "ff5e6e5f69a687358e84a2b77ddf9185666531e6", "Url": "https://api.github.com/repos/MinionTim/Sentry", "Date": "2015-02-25T16:09:37Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.TypedArray.getBoolean(R.styleable.fancy_title_text_view_default_padding,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (useDefaultPadding) this.setPadding(((int) (ve.com.abicelis.chefbuddy.util.DimensionUtil.convertDpToPixel(24))), ((int) (ve.com.abicelis.chefbuddy.util.DimensionUtil.convertDpToPixel(24))), 0, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1222/buggy-version/app.src.main.java.ve.com.abicelis.chefbuddy.views.FancyTitleTextView.java", "BodyUseAPI": [], "Fixed commit": "282e70e028cdb9ebbcf737039bbf2d15f85721be", "Url": "https://api.github.com/repos/abicelis/ChefBuddy", "Date": "2017-07-23T19:26:59Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((param.length) == 2) params.put(param[0], param[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2472/buggy-version/ImagesExample.src.com.mobiosis.imagesexample.ImagesExample.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "6df9c226a24100598829b2f3b7adbda5fd59feef", "Url": "https://api.github.com/repos/mobiosis/images-android", "Date": "2012-12-30T00:02:06Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (busqueda.equals(\"Portafolio\")) { pru.setDescripcionUnidad(rs.getString(\"descripcionUnidad\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7823/buggy-version/src.Negocio.ClsNegocioPruebaEntrada.java", "BodyUseAPI": [], "Fixed commit": "b7fb1f3d95ace1de1a2faa3248b0544fc841bc6d", "Url": "https://api.github.com/repos/Drei109/SistemaInformesUPT", "Date": "2017-01-16T15:28:06Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((visibility & (android.view.View.SYSTEM_UI_FLAG_FULLSCREEN)) == 0) requestFullscreen(decorView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4681/buggy-version/app.src.main.java.com.fallingbear.typingchallenge.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8fe2224a30693aa346371e28c6a3d3b3507b51f4", "Url": "https://api.github.com/repos/MelonTherapy/TypingChallenge", "Date": "2015-12-06T02:44:12Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLastNonConfigurationInstance()) == null) { questionListPresenter.loadQuestions(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5873/buggy-version/app.src.main.java.com.myapplication.screens.questionlist.QuestionListView.java", "BodyUseAPI": [], "Fixed commit": "29abbd5177bb9feed9c35e409ecf9644997dfa57", "Url": "https://api.github.com/repos/dfloureiro/endlesslisttestapp", "Date": "2017-07-15T15:00:16Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (startIp == endIp) { return org.zstack.utils.network.NetworkUtils.longToIpv4String(startIp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2693/buggy-version/utils.src.main.java.org.zstack.utils.network.NetworkUtils.java", "BodyUseAPI": ["org.zstack.utils.network.NetworkUtils.longToIpv4String(java.lang.Long)"], "Fixed commit": "57f9536517922fec0c8b9606c61212eaea82dfa7", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-11T07:55:56Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startIp.equals(endIp)) && ((allocatedIps.length) == 0)) { return startIp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2693/buggy-version/utils.src.main.java.org.zstack.utils.network.NetworkUtils.java", "BodyUseAPI": [], "Fixed commit": "57f9536517922fec0c8b9606c61212eaea82dfa7", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-11T07:55:56Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (convertView == null) view = inflater.inflate(resource, parent, false); else view = convertView;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3303/buggy-version/src.main.java.com.nextgis.maplibui.dialog.CreateFromQMSLayerDialog.java", "BodyUseAPI": [], "Fixed commit": "3d214efdf4199c22078f4dcec374047d18e2ecab", "Url": "https://api.github.com/repos/nextgis/android_maplibui", "Date": "2016-05-20T10:41:55Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.avaje.ebean.enhance.agent.ClassMeta.getFieldPersistent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((fieldMeta == null) || (!(fieldMeta.isPersistent()))) { if (meta.isLog(3)) { meta.log((((((((\"... visitFieldInsn (in constructor but non-persistent)- \" + opcode) + \" owner:\") + owner) + \":\") + name) + \":\") + desc)); } super.visitFieldInsn(opcode, owner, name, desc); }else { java.lang.String methodName = \"_ebean_set_\" + name; java.lang.String methodDesc = (\"(\" + desc) + \")V\"; if (meta.isLog(2)) { meta.log(((\"... Constructor PUTFIELD replaced with:\" + methodName) + methodDesc)); } super.visitMethodInsn(com.avaje.ebean.enhance.agent.INVOKEVIRTUAL, className, methodName, methodDesc, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1820/buggy-version/src.main.java.com.avaje.ebean.enhance.agent.ConstructorAdapter.java", "BodyUseAPI": [], "Fixed commit": "98dc9bc734b161f6b1a66c694b5f5806b491629e", "Url": "https://api.github.com/repos/ebean-orm/ebean-agent", "Date": "2015-08-30T23:33:34Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((snakeSquares[kibbleX][kibbleY]) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4091/buggy-version/com.amdudda.Snake.java", "BodyUseAPI": [], "Fixed commit": "97c3960812a881c29925cce5236dd768dc725236", "Url": "https://api.github.com/repos/amdudda/java_project_Snake", "Date": "2015-11-04T21:06:49Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isLetter(inputElement)) || (isNumber(inputElement))) { inputStack.pop(); workStack.push(element); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6251/buggy-version/SJ.src.MainPCG.Solver.java", "BodyUseAPI": [], "Fixed commit": "c2a24df19c5a7f28a3bc61f84828719797251d9b", "Url": "https://api.github.com/repos/lukas417/SJ", "Date": "2014-12-02T16:26:42Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (startMode == null) { startMode = \"UNKNOWN\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7241/buggy-version/app.src.main.java.com.xcv58.joulerenergymanager.JoulerEnergyManageDaemon.java", "BodyUseAPI": [], "Fixed commit": "a168584d5a83917e2b50102a4a5a9b5606d9b919", "Url": "https://api.github.com/repos/xcv58/BlackList-Android", "Date": "2014-11-29T23:16:42Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sourceDirectory.exists()) { java.io.File targetDirectory = new java.io.File(targetPath); validateDirectory(sourceDirectory); validateDirectory(targetDirectory); if (!(targetDirectory.exists())) { java.nio.file.Files.createDirectory(targetDirectory.toPath()); } for (java.io.File file : sourceDirectory.listFiles()) { if (file.isDirectory()) { sync(file.getPath().toString(), java.nio.file.Paths.get(targetPath, file.getName()).toString()); }else { java.nio.file.Files.copy(file.toPath(), java.nio.file.Paths.get(targetDirectory.getPath(), file.getName()), java.nio.file.StandardCopyOption.REPLACE_EXISTING); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1490/buggy-version/src.main.java.org.c_3po.io.DirectorySynchronizer.java", "BodyUseAPI": ["org.c_3po.io.DirectorySynchronizer.validateDirectory(java.io.File)", "java.io.File.listFiles()"], "Fixed commit": "ae43122043019ef9761d766e4914eb14f1df05d2", "Url": "https://api.github.com/repos/rmoestl/C-3PO", "Date": "2014-11-11T17:30:46Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.Float) { return value.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4467/buggy-version/runtime.core.src.main.java.fr.imag.adele.apam.util.Util.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "cbbb37a80f03de8d905e330fff29b88c887f6a94", "Url": "https://api.github.com/repos/AdeleResearchGroup/ApAM", "Date": "2014-01-31T14:53:08Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x < 0) || (y < 0)) || (x >= (width))) || (y >= (height))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3383/buggy-version/src.level.maps.ClientLevel.java", "BodyUseAPI": [], "Fixed commit": "4a2456bf8075a464610d1cd5f0da4927dadd492e", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-03-26T03:08:32Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.asmart.cosmofighter.AudioSettings.getSharedPreferences(getString(R.string.APP_PREFERENCES),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (settings.getBoolean(getString(R.string.MUSICON), true)) { musicswitch.setChecked(true); }else { musicswitch.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5124/buggy-version/CosmoFighter.app.src.main.java.com.asmart.cosmofighter.AudioSettings.java", "BodyUseAPI": [], "Fixed commit": "4fb5102d1bd0ceb9e4c7123a5acd0d4e71ed0a81", "Url": "https://api.github.com/repos/ShruthiKatapally/CosmoFighters", "Date": "2016-01-25T17:47:49Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.asmart.cosmofighter.AudioSettings.getSharedPreferences(getString(R.string.APP_PREFERENCES),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (settings.getBoolean(getString(R.string.SOUNDON), true)) { audioswitch.setChecked(true); }else { audioswitch.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5124/buggy-version/CosmoFighter.app.src.main.java.com.asmart.cosmofighter.AudioSettings.java", "BodyUseAPI": [], "Fixed commit": "4fb5102d1bd0ceb9e4c7123a5acd0d4e71ed0a81", "Url": "https://api.github.com/repos/ShruthiKatapally/CosmoFighters", "Date": "2016-01-25T17:47:49Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (slashPosition > 0) portStr = portStr.substring(0, slashPosition);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4171/buggy-version/dtgov-war.src.main.java.org.overlord.sramp.governance.Target.java", "BodyUseAPI": [], "Fixed commit": "0b72f67b0c44b742f697a84821f1fa5c630b2a4e", "Url": "https://api.github.com/repos/Governance/dtgov", "Date": "2013-11-26T15:44:13Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.AndroidShareApp.gui.SharedByMeConfigActivity.mClickPosition) != (-1)) activateToggleButton.setChecked(org.AndroidShareApp.gui.SharedByMeConfigActivity.mSharedByMeItems.get(org.AndroidShareApp.gui.SharedByMeConfigActivity.mClickPosition).isActive());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5784/buggy-version/src.org.AndroidShareApp.gui.SharedByMeConfigActivity.java", "BodyUseAPI": [], "Fixed commit": "b4f7fcc287fd39fc51bf4cc0d130d56b86e815b6", "Url": "https://api.github.com/repos/jonaias/AndroidShareApp", "Date": "2011-11-02T15:10:59Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bitmap != null) { senderBitmap = bitmap; }else { senderBitmap = android.graphics.BitmapFactory.decodeResource(getResources(), R.drawable.default_profile_picture_female); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8910/buggy-version/app.src.main.java.com.example.david.rawr.MainActivities.Chat_window.java", "BodyUseAPI": [], "Fixed commit": "495cd22b4a62636ad8414a29493adc599a27b123", "Url": "https://api.github.com/repos/Rawr-IngeSoft/RawrProject", "Date": "2015-05-31T21:55:24Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bitmap != null) { receiverBitmap = bitmap; }else { receiverBitmap = android.graphics.BitmapFactory.decodeResource(getResources(), R.drawable.default_profile_picture_female); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8910/buggy-version/app.src.main.java.com.example.david.rawr.MainActivities.Chat_window.java", "BodyUseAPI": [], "Fixed commit": "495cd22b4a62636ad8414a29493adc599a27b123", "Url": "https://api.github.com/repos/Rawr-IngeSoft/RawrProject", "Date": "2015-05-31T21:55:24Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gnucash.android.db.AccountsDbAdapter.delete(AccountEntry.TABLE_NAME,((((org.gnucash.android.db.DatabaseSchema.AccountEntry.COLUMN_UID) + \" IN (\") + accountUIDList) + \")\"),<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (deletedCount > 0) { android.content.ContentValues contentValues = new android.content.ContentValues(); contentValues.putNull(AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID); mDb.update(mTableName, contentValues, ((((org.gnucash.android.db.DatabaseSchema.AccountEntry.COLUMN_DEFAULT_TRANSFER_ACCOUNT_UID) + \" IN (\") + accountUIDList) + \")\"), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8715/buggy-version/app.src.main.java.org.gnucash.android.db.AccountsDbAdapter.java", "BodyUseAPI": [], "Fixed commit": "f10b4e433aa353cf0ef913f563be4025b5baa0ec", "Url": "https://api.github.com/repos/codinguser/gnucash-android", "Date": "2016-02-05T11:45:03Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pneumaticCraft.common.util.IOHelper.getInventoryForTE(drone.getWorld().getTileEntity(pos.chunkPosX, pos.chunkPosY, pos.chunkPosZ))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (inv == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2160/buggy-version/src.pneumaticCraft.common.ai.DroneAIExternalProgram.java", "BodyUseAPI": [], "Fixed commit": "b175f5a027aed73582199dc42650fc092db1fe30", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-08-10T08:42:32Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getUid().equals(data.getKey())) { java.util.HashMap<java.lang.String, java.lang.Object> map = ((java.util.HashMap<java.lang.String, java.lang.Object>) (data.getValue())); if (map != null) { java.lang.String jobSetting = map.get(\"jobSetting\").toString(); java.lang.String addressSetting = map.get(\"addressSetting\").toString(); setViewSetting(jobSetting, addressSetting); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2423/buggy-version/app.src.main.java.com.example.phuong.viectimnguoiapp.fragments.SettingFragment.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.getValue()"], "Fixed commit": "6cce61e8ad45977a1e3def74b58548f94948f545", "Url": "https://api.github.com/repos/phuongpham149/ViecTimNguoiApp", "Date": "2017-05-16T09:02:16Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (map != null) { com.example.phuong.viectimnguoiapp.utils.SharedPreferencesUtils.getInstance().setSetting(this, map.get(\"jobSetting\").toString(), map.get(\"addressSetting\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2423/buggy-version/app.src.main.java.com.example.phuong.viectimnguoiapp.activities.LoginActivity1.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.Object.toString()", "com.example.phuong.viectimnguoiapp.utils.SharedPreferencesUtils.getInstance().setSetting(com.example.phuong.viectimnguoiapp.activities.LoginActivity1,java.lang.String,java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "6cce61e8ad45977a1e3def74b58548f94948f545", "Url": "https://api.github.com/repos/phuongpham149/ViecTimNguoiApp", "Date": "2017-05-16T09:02:16Z"},
{"Line": "=>1242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(testDataExists)) java.lang.System.out.print(((((\"Read data: \" + (root.data.size())) + \" cases for training. \") + (testData.size())) + \" cases for testing.\")); else java.lang.System.out.print(((\"Read data: \" + (root.data.size())) + \" cases for training. \"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/5963/buggy-version/id3.src.id3.id3.java", "BodyUseAPI": [], "Fixed commit": "d1707f6e608d824c30572a9e65db1d854b691cf1", "Url": "https://api.github.com/repos/alexwareb9/proyecto-id3", "Date": "2016-05-02T00:13:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((target.getName()) == null) || (target.getName().isEmpty())) { return java.util.Collections.EMPTY_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/9057/buggy-version/org.osate.xtext.aadl2.src.org.osate.xtext.aadl2.scoping.Aadl2GlobalScopeProvider.java", "BodyUseAPI": [], "Fixed commit": "568b23f4b9d7a623751899bdc8626e3ff70af1a3", "Url": "https://api.github.com/repos/lwrage/osate2-core", "Date": "2012-10-08T19:54:13Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (readvalue == (-1)) { closeConnection(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6932/buggy-version/src.net.mcforge.networking.IOClient.java", "BodyUseAPI": [], "Fixed commit": "f97505d97b21bf75d84f974d6967832bc18d82e6", "Url": "https://api.github.com/repos/B00mX0r/MCForge-Core", "Date": "2012-12-20T22:37:56Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Map.class.isAssignableFrom(clazz)) { obj = new java.util.HashMap<java.lang.String, java.lang.Object>(); ((java.util.Map<java.lang.String, java.lang.Object>) (obj)).put(\"table\", this.table); }else { obj = clazz.newInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8572/buggy-version/src.main.java.org.eweb4j.orm.dao.DAOImpl.java", "BodyUseAPI": ["java.lang.Class<?>.newInstance()"], "Fixed commit": "a0b45756a1e1b265389c702b30fa8609c7150381", "Url": "https://api.github.com/repos/laiweiwei/eweb4j-framework", "Date": "2012-09-06T16:19:31Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(e instanceof org.kaleta.scheduler.service.ServiceFailureException)) { Initializer.LOG.severe(errorDialog.getExceptionStackTrace()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/658/buggy-version/src.main.java.org.kaleta.scheduler.frontend.common.SwingWorkerHandler.java", "BodyUseAPI": [], "Fixed commit": "2298b558f557b42632d8f3d0095c51aea920e454", "Url": "https://api.github.com/repos/KaProjects/Scheduler-desktop", "Date": "2016-01-13T09:32:24Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((engine.GlobalData.client) != null) GlobalData.client.tickMovement(GlobalData.delta);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2202/buggy-version/src.engine.state.MainMenu.java", "BodyUseAPI": [], "Fixed commit": "91495cdabe33ffd379fb556cb62704cf2a3980c4", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-09-15T21:02:22Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((engine.GlobalData.server) != null) GlobalData.server.tickMovement(GlobalData.delta);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2202/buggy-version/src.engine.state.MainMenu.java", "BodyUseAPI": [], "Fixed commit": "91495cdabe33ffd379fb556cb62704cf2a3980c4", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-09-15T21:02:22Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.htmlparser.Parser.parse(org.htmlparser.filters.TagNameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nodeList.elementAt(15).toPlainTextString().contains(\"nein\")) || (nodeList.elementAt(15).toPlainTextString().contains(\"ja\"))) { return nodeList.elementAt(16).getFirstChild().getNextSibling().getFirstChild().toPlainTextString().trim(); }else { return nodeList.elementAt(15).getFirstChild().getNextSibling().getFirstChild().toPlainTextString().trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1766/buggy-version/src.com.example.uzhvorlesungen.parsers.VVZDetailsParser.java", "BodyUseAPI": ["nodeList.elementAt(16).getFirstChild().getNextSibling().getFirstChild()", "nodeList.elementAt(16).getFirstChild().getNextSibling()", "nodeList.elementAt(16).getFirstChild()", "nodeList.elementAt(16).getFirstChild().getNextSibling().getFirstChild().toPlainTextString()", "nodeList.elementAt(15).getFirstChild().getNextSibling()", "org.htmlparser.util.NodeList.elementAt(int)", "nodeList.elementAt(15).getFirstChild().getNextSibling().getFirstChild()", "org.htmlparser.util.NodeList.elementAt(int)", "nodeList.elementAt(15).getFirstChild().getNextSibling().getFirstChild().toPlainTextString().trim()", "nodeList.elementAt(16).getFirstChild().getNextSibling().getFirstChild().toPlainTextString().trim()", "nodeList.elementAt(15).getFirstChild()", "nodeList.elementAt(15).getFirstChild().getNextSibling().getFirstChild().toPlainTextString()"], "Fixed commit": "a3ab9a28e0ba2d7f4e720c51579b4b046b91254f", "Url": "https://api.github.com/repos/gmazlami/UZHVorlesungenApp", "Date": "2014-10-16T20:44:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.LOLLIPOP)) { clientBuilder.sslSocketFactory(new nerd.tuxmobil.fahrplan.congress.net.TLSSocketFactory(), trustManager); }else { clientBuilder.sslSocketFactory(nerd.tuxmobil.fahrplan.congress.net.CustomHttpClient.createSSLSocketFactory(trustManager), trustManager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2404/buggy-version/app.src.main.java.nerd.tuxmobil.fahrplan.congress.net.CustomHttpClient.java", "BodyUseAPI": [], "Fixed commit": "dbdac113c3ea91684e3df80bed71fb327f1db5df", "Url": "https://api.github.com/repos/stefanmedack/CampFahrplan", "Date": "2017-10-27T15:11:16Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(newVals.isEmpty())) { list.clear(); list.addAll(newVals); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8819/buggy-version/src.main.java.spiderman.plugin.util.ModelParser.java", "BodyUseAPI": ["java.util.Collection<java.lang.Object>.addAll(java.util.List<java.lang.Object>)"], "Fixed commit": "a8d43a4477d7eb97a0d2e15828366aa335293307", "Url": "https://api.github.com/repos/laiweiwei/spiderman-plugin", "Date": "2013-01-10T13:14:11Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i != ((cards.size()) - 1)) && (i != position)) { if (data.isEmpty()) { cards.get(i).updateProgress(progress); }else { if (i != 0) cards.get(i).updateProgress(progress); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3784/buggy-version/app.src.main.java.net.leolink.android.ninegagtvanimation.MainActivity.java", "BodyUseAPI": ["java.util.LinkedList<net.leolink.android.ninegagtvanimation.Card>.get(int)", "cards.get(i).updateProgress(float)", "cards.get(i).updateProgress(float)", "java.util.LinkedList<net.leolink.android.ninegagtvanimation.Card>.get(int)"], "Fixed commit": "f17463389f79afae9068fcf2d9c3abf55032d6cc", "Url": "https://api.github.com/repos/mrleolink/9GAGTVAnimation", "Date": "2014-06-09T16:21:44Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (m != null) java.lang.System.out.print((\"m: \" + (m.getName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1362/buggy-version/compilers.official-network-plugins.src.main.java.org.thingml.networkplugins.c.arduino.ArduinoSerialPlugin.java", "BodyUseAPI": ["java.io.PrintStream.print((\"m: \" + (m.getName())))", "org.sintef.thingml.Message.getName()"], "Fixed commit": "29485850df272e82fd1f7bdef230b4a34ab32813", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2016-04-20T13:32:52Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) { data.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1995/buggy-version/src.main.java.io.norberg.h2client.Stream.java", "BodyUseAPI": [], "Fixed commit": "2b7fb9e58102519b66426ee300ae8527ffad2523", "Url": "https://api.github.com/repos/danielnorberg/http2", "Date": "2016-02-01T02:59:32Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (union == null) { union = new com.hp.hpl.jena.sparql.syntax.ElementUnion(); clause.addElement(union); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7691/buggy-version/jena-extras.jena-querybuilder.src.main.java.org.apache.jena.arq.querybuilder.handlers.WhereHandler.java", "BodyUseAPI": [], "Fixed commit": "4a1314f6d2f2aab96ff35b9455d43af1d1652ffd", "Url": "https://api.github.com/repos/apache/jena", "Date": "2015-06-21T10:17:45Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (args[0])) { paramType = method.getParameterTypes()[0]; }else { paramType = args[0].getClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8433/buggy-version/stanley.src.main.java.com.brianjmelton.stanley.ProxyGenerator.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "7583e8cc1d17c123a1a5d920c5532fedda065f37", "Url": "https://api.github.com/repos/iambmelt/Stanley", "Date": "2015-08-14T07:59:52Z"},
{"Line": "=>1292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((adminAdjustment.getInvoiceDate()) == null) { adminAdjustment.setInvoiceDate(new java.util.Date()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3730/buggy-version/src.main.java.com.agg.application.service.impl.QuoteServiceImpl.java", "BodyUseAPI": ["com.agg.application.entity.AdminAdjustment.setInvoiceDate(java.util.Date)"], "Fixed commit": "81d33b0a73d3972101a05e3060dd3f1db52954a7", "Url": "https://api.github.com/repos/bidnfix/agg", "Date": "2017-05-16T18:13:00Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userList.size()) == 1) { userProfile = userList.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/2938/buggy-version/app.src.main.java.com.bestteam.choremanager.Navigation_MainActivity.java", "BodyUseAPI": ["java.util.List<com.bestteam.choremanager.User>.get(int)"], "Fixed commit": "f9acb109e608035c3d2ec8a6cfdcd82c433e5755", "Url": "https://api.github.com/repos/TianrenWang/ChoreManager", "Date": "2017-12-03T18:32:15Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (context.kompiled.exists()) { checkAnotherKompiled(context.kompiled); }else if (!(context.kompiled.mkdirs())) { kem.registerCriticalError((\"Could not create directory \" + (context.kompiled))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/58/buggy-version/k-core.src.main.java.org.kframework.kompile.KompileFrontEnd.java", "BodyUseAPI": ["org.kframework.utils.errorsystem.KExceptionManager.registerCriticalError((\"Could not create directory \" + (context.kompiled)))", "context.kompiled.mkdirs()", "org.kframework.kompile.KompileFrontEnd.checkAnotherKompiled(context.kompiled)"], "Fixed commit": "f1a2946fba801a1c4ee09a153ba28bbbabfd2b06", "Url": "https://api.github.com/repos/andreistefanescu/k", "Date": "2014-10-13T13:07:08Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(options.mainDefinitionFile().exists())) { kem.registerCriticalError((\"Definition file doesn't exist: \" + (options.mainDefinitionFile().getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/58/buggy-version/k-core.src.main.java.org.kframework.kompile.KompileFrontEnd.java", "BodyUseAPI": ["options.mainDefinitionFile().getAbsolutePath()", "org.kframework.kompile.KompileOptions.mainDefinitionFile()", "org.kframework.utils.errorsystem.KExceptionManager.registerCriticalError((\"Definition file doesn't exist: \" + (options.mainDefinitionFile().getAbsolutePath())))"], "Fixed commit": "f1a2946fba801a1c4ee09a153ba28bbbabfd2b06", "Url": "https://api.github.com/repos/andreistefanescu/k", "Date": "2014-10-13T13:07:08Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((source != null) && (!(source.isEmpty()))) { replace = rule.replace(\"{this}\", source); replace = replace.replace(\"{source}\", source); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7268/buggy-version/Mage.src.mage.abilities.AbilityImpl.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "0758f4bb723371907709fd913d4a0e391acabc47", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2012-08-31T08:43:46Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cMaxSerial == 0) { throw new java.lang.IllegalArgumentException((((\"Not possible to schedule any work assignment because effective length of single profile=\" + dEffectiveProfileLen) + \" is greater than effective aggregation window length=\") + dEffectiveWinLen)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/6473/buggy-version/backend.src.main.java.fk.prof.backend.model.assignment.WorkAssignmentSchedule.java", "BodyUseAPI": [], "Fixed commit": "ea1c727600471e58d1743d57da5a2602144ccb26", "Url": "https://api.github.com/repos/Flipkart/fk-prof", "Date": "2017-03-19T19:59:33Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dso.getType()) == (org.dspace.core.Constants.COMMUNITY)) { typeTextLower = \"communities\"; }else { typeTextLower = dso.getTypeText().toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3971/buggy-version/dspace-xmlui.dspace-xmlui-api.src.main.java.org.dspace.app.xmlui.aspect.statistics.StatisticsTransformer.java", "BodyUseAPI": ["dso.getTypeText().toLowerCase()", "org.dspace.app.xmlui.aspect.statistics.DSpaceObject.getTypeText()"], "Fixed commit": "ab42833e018aa14a8d0ffeb8f2883801c5f11660", "Url": "https://api.github.com/repos/osulibraries/DSpaceOSUKB", "Date": "2012-05-07T20:59:18Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dso.getType()) == (org.dspace.core.Constants.COMMUNITY)) { typeTextLower = \"communities\"; }else { typeTextLower = dso.getTypeText().toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3971/buggy-version/dspace-xmlui.dspace-xmlui-api.src.main.java.org.dspace.app.xmlui.aspect.statistics.StatisticsTransformer.java", "BodyUseAPI": ["dso.getTypeText().toLowerCase()", "org.dspace.app.xmlui.aspect.statistics.DSpaceObject.getTypeText()"], "Fixed commit": "ab42833e018aa14a8d0ffeb8f2883801c5f11660", "Url": "https://api.github.com/repos/osulibraries/DSpaceOSUKB", "Date": "2012-05-07T20:59:18Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PackagesCfg.PACKAGES.get(pdb.getPackageName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (p != null) { addPpb.getPermissions().addAll(p.getPermissions()); subPpb.getPermissions().removeAll(p.getPermissions()); addPpb.getGroups().addAll(p.getGroups()); subPpb.getGroups().removeAll(p.getGroups()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/533/buggy-version/src.main.gg.frog.mc.permissionstime.model.cfg.PermissionPackageBean.java", "BodyUseAPI": ["java.util.List<java.lang.String>.removeAll(java.util.List<java.lang.String>)", "java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)", "gg.frog.mc.permissionstime.model.cfg.PermissionPackageBean.getGroups()", "java.util.List<java.lang.String>.removeAll(java.util.List<java.lang.String>)", "gg.frog.mc.permissionstime.model.cfg.PermissionPackageBean.getPermissions()", "java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)", "gg.frog.mc.permissionstime.model.cfg.PermissionPackageBean.getGroups()", "gg.frog.mc.permissionstime.model.cfg.PermissionPackageBean.getPermissions()"], "Fixed commit": "06c6c9af6378094fa27df686f0ab929a5cec1a50", "Url": "https://api.github.com/repos/geekfrog/PermissionsTime", "Date": "2017-07-14T23:27:47Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PackagesCfg.PACKAGES.get(pdb.getPackageName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (pc != null) { java.lang.String expireString = gg.frog.mc.permissionstime.utils.StrUtil.timestampToString(pdb.getExpire()); sender.sendMessage(gg.frog.mc.permissionstime.utils.StrUtil.messageFormat(((gg.frog.mc.permissionstime.config.PluginCfg.PLUGIN_PREFIX) + \"\u6743\u9650\u5305: {0}({1}), \u5230\u671f\u65f6\u95f4: {2}\"), pc.getDisplayName(), pdb.getPackageName(), expireString)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/533/buggy-version/src.main.gg.frog.mc.permissionstime.command.MeCmd.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(gg.frog.mc.permissionstime.utils.StrUtil.messageFormat(((gg.frog.mc.permissionstime.config.PluginCfg.PLUGIN_PREFIX) + \"\u6743\u9650\u5305: {0}({1}), \u5230\u671f\u65f6\u95f4: {2}\"), pc.getDisplayName(), pdb.getPackageName(), expireString))", "gg.frog.mc.permissionstime.model.cfg.PermissionPackageBean.getDisplayName()", "gg.frog.mc.permissionstime.utils.StrUtil.messageFormat(((gg.frog.mc.permissionstime.config.PluginCfg.PLUGIN_PREFIX) + \"\u6743\u9650\u5305: {0}({1}), \u5230\u671f\u65f6\u95f4: {2}\"),pc.getDisplayName(),pdb.getPackageName(),java.lang.String)"], "Fixed commit": "06c6c9af6378094fa27df686f0ab929a5cec1a50", "Url": "https://api.github.com/repos/geekfrog/PermissionsTime", "Date": "2017-07-14T23:27:47Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bets.hasPlayerBets()) builder.append(stateEarnings(winners.get(i), topkeks, KXP, betEarnings, \"Won Bet\")); else builder.append(stateEarnings(winners.get(i), topkeks, KXP));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/8077/buggy-version/src.main.java.com.godson.kekbot.Games.Game.java", "BodyUseAPI": [], "Fixed commit": "0ccf50e41c704ce53887677eb2c4a92fd430f760", "Url": "https://api.github.com/repos/Godson777/KekBot", "Date": "2017-09-30T09:25:46Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aSrc.getClass()) == (aDst.getClass())) { return !(aSrc.equals(aDst)); }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/205/buggy-version/src.main.java.org.azkfw.web.tags.logic.IfNotEqualTag.java", "BodyUseAPI": ["java.lang.Object.equals(java.lang.Object)"], "Fixed commit": "c80700b2dba14bcaa594062bd249028de50b2c83", "Url": "https://api.github.com/repos/azuki-framework/azuki-web", "Date": "2014-05-30T05:46:55Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aSrc.getClass()) == (aDst.getClass())) { return aSrc.equals(aDst); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/205/buggy-version/src.main.java.org.azkfw.web.tags.logic.IfEqualTag.java", "BodyUseAPI": ["java.lang.Object.equals(java.lang.Object)"], "Fixed commit": "c80700b2dba14bcaa594062bd249028de50b2c83", "Url": "https://api.github.com/repos/azuki-framework/azuki-web", "Date": "2014-05-30T05:46:55Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"session\".equals(scp.toLowerCase())) { if (org.azkfw.core.util.StringUtility.isNotEmpty(aKey)) { value = getSessionAttribute(aName, aKey); }else { value = getSessionAttribute(aName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/205/buggy-version/src.main.java.org.azkfw.web.tags.AbstractTag.java", "BodyUseAPI": [], "Fixed commit": "c80700b2dba14bcaa594062bd249028de50b2c83", "Url": "https://api.github.com/repos/azuki-framework/azuki-web", "Date": "2014-05-30T05:46:55Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((u.indexOf(\"%\")) != (-1)) { try { final java.lang.String enc = req.getCharacterEncoding(); final java.lang.String ud = java.net.URLDecoder.decode(u, (enc == null ? Strings.UTF8 : enc)); u = (ud.contains(\"\\ufffd\")) ? java.net.URLDecoder.decode(u, \"ISO-8859-1\") : ud; } catch (final java.lang.Exception ignore) { org.basex.http.webdav.Util.debug(ignore); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/1463/buggy-version/basex-api.src.main.java.org.basex.http.webdav.BXServletRequest.java", "BodyUseAPI": [], "Fixed commit": "556a0f5ea7818be28f2a00c7de4e9487e17bbf39", "Url": "https://api.github.com/repos/BaseXdb/basex", "Date": "2015-08-24T16:40:56Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.robrua.orianna.type.dto.match.ParticipantIdentity.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (player == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3058/buggy-version/src.com.robrua.orianna.type.core.match.Participant.java", "BodyUseAPI": [], "Fixed commit": "122f86cb2a96ef7cbad386024386d1161923dd6e", "Url": "https://api.github.com/repos/meraki-analytics/orianna", "Date": "2015-04-09T21:47:11Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.robrua.orianna.type.core.match.Participant.getIdentity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (identity == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/3058/buggy-version/src.com.robrua.orianna.type.core.match.Participant.java", "BodyUseAPI": [], "Fixed commit": "122f86cb2a96ef7cbad386024386d1161923dd6e", "Url": "https://api.github.com/repos/meraki-analytics/orianna", "Date": "2015-04-09T21:47:11Z"},
{"Line": "=>1684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.ilist) == null) return docID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4049/buggy-version/src.main.java.de.rwth.i9.palm.analytics.algorithm.ngram.Ngram.java", "BodyUseAPI": [], "Fixed commit": "4886e4a507c7015c507041a06d976f88fa175b9f", "Url": "https://api.github.com/repos/palm-toolkit/palm-analytics", "Date": "2017-06-23T19:49:30Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.daifan.Singleton.getInstance().getCurrUser()) != null) { menu.add(com.daifan.Singleton.getInstance().getCurrUser().getName().toLowerCase()).setShowAsAction(MenuItem.SHOW_AS_ACTION_IF_ROOM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7435/buggy-version/daifan51Project.daifan51.src.main.java.com.daifan.activity.PostListActivity.java", "BodyUseAPI": [], "Fixed commit": "b3b745da63d0ea300f2a204f29633b49952f84c9", "Url": "https://api.github.com/repos/ronghao100/51daifan-android", "Date": "2013-07-24T02:07:11Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bootstrappedStreamSet.remove(coordinatorStreamMessage)) { org.apache.samza.coordinator.stream.CoordinatorStreamSystemConsumer.log.debug(\"Removed duplicate message: {}\", coordinatorStreamMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/7871/buggy-version/samza-core.src.main.java.org.apache.samza.coordinator.stream.CoordinatorStreamSystemConsumer.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,org.apache.samza.coordinator.stream.messages.CoordinatorStreamMessage)"], "Fixed commit": "f02386464d31b5a496bb0578838f51a0331bfffa", "Url": "https://api.github.com/repos/apache/samza", "Date": "2016-03-25T18:52:19Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedQuestion.getPossibleAnswers().get(i).getPaIsCorrect()) cpt3++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V130/4604/buggy-version/src.managedBeans.AnswerAddMB.java", "BodyUseAPI": [], "Fixed commit": "2e8f186542cc5f9491d69aca794f970bb44a6370", "Url": "https://api.github.com/repos/Wolfprogramming/ExamPlatform", "Date": "2014-02-20T19:31:25Z"},
{"Line": "=>702", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mReadyForPlaybackIndicator) != null) { synchronized(mReadyForPlaybackIndicator) { mReadyForPlaybackIndicator.notifyAll(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4660/buggy-version/video-player-manager.src.main.java.com.volokh.danylo.video_player_manager.ui.VideoPlayerView.java", "BodyUseAPI": [], "Fixed commit": "fd3b36b383f07ef801726eab6d4aa00d950f659a", "Url": "https://api.github.com/repos/bigleapdigital/VideoPlayerManager", "Date": "2016-05-06T09:38:06Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.comp4903.project.graphics.TouchGesture.AIPlaying) handle_Waiting(((int) (e.getX())), ((int) (e.getY()))); else handle_Game_Screen(((int) (e.getX())), ((int) (e.getY())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/268/buggy-version/Project.src.com.comp4903.project.graphics.TouchGesture.java", "BodyUseAPI": [], "Fixed commit": "5a7d01569205de798ffb227095a6c4635065bde6", "Url": "https://api.github.com/repos/jasonq/comp4903", "Date": "2013-05-23T23:47:20Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) instanceof com.quizz.core.activities.BaseQuizzActivity) { ((com.quizz.core.activities.BaseQuizzActivity) (getActivity())).setHideAbOnRotationChange(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/131/buggy-version/src.com.quizz.core.fragments.BaseSettingsFragment.java", "BodyUseAPI": [], "Fixed commit": "27222cf421ca99699257017ddd246c3134a7aacb", "Url": "https://api.github.com/repos/mfportzert/Quizz-Core", "Date": "2013-03-08T21:16:07Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pos > 6) && (numMarb > 0)) { pos = 0; if (side == 0) { side = 1; }else if (side == 1) { side = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/690/buggy-version/app.src.main.java.edu.up.cs301.Mancala.MancLocalGame.java", "BodyUseAPI": [], "Fixed commit": "0fe418f9c104eb444bb5601818740ecafa35a423", "Url": "https://api.github.com/repos/EndoSean/MancalaGame", "Date": "2017-12-08T20:18:12Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getPlayer().getInventory()", "org.bukkit.event.player.PlayerInteractEvent.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (inv.getItemInOffHand().equals(hand)) { inv.setItemInOffHand(new org.bukkit.inventory.ItemStack(org.bukkit.Material.AIR)); }else { PhatLoots.logger.warning(\"Player attempted to use LootBag with an unexpected hand.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1388/buggy-version/src.com.codisimus.plugins.phatloots.listeners.LootBagListener.java", "BodyUseAPI": ["org.bukkit.inventory.PlayerInventory.setItemInOffHand(org.bukkit.inventory.ItemStack)"], "Fixed commit": "4f1760ac11e92fbb93c22385e6f456b107b63750", "Url": "https://api.github.com/repos/Codisimus/PhatLoots", "Date": "2016-03-12T15:52:48Z"},
{"Line": "=>664", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastAsterisk == (-1)) { return templateLoader.findTemplateSource(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4538/buggy-version/src.main.java.freemarker.cache.TemplateCache.java", "BodyUseAPI": [], "Fixed commit": "ad05c98e82ad1f39196f3c4680ac457e10ff9790", "Url": "https://api.github.com/repos/freemarker/freemarker", "Date": "2013-06-21T09:15:03Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.lp20.aikuma.audio.InterleavedPlayer.completedOnce)) { advanceOriginalSegment(); playOriginal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5750/buggy-version/Aikuma.src.org.lp20.aikuma.audio.InterleavedPlayer.java", "BodyUseAPI": [], "Fixed commit": "fda0e79933a8a044b3687d368e11e448ff0cf109", "Url": "https://api.github.com/repos/langtech/aikuma", "Date": "2013-05-17T07:14:51Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((e.why) != null) && (e.why.contains(\"No indexed columns\"))) { return entities; }else { com.impetus.client.cassandra.thrift.ThriftClient.log.error((\"Error while finding relations. Details:\" + (e.getMessage()))); throw new com.impetus.kundera.KunderaException(\"Error while finding relations\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2917/buggy-version/kundera-cassandra.src.main.java.com.impetus.client.cassandra.thrift.ThriftClient.java", "BodyUseAPI": ["org.apache.cassandra.thrift.InvalidRequestException.getMessage()", "org.apache.commons.logging.Log.error((\"Error while finding relations. Details:\" + (e.getMessage())))"], "Fixed commit": "f190849551a034e9dae1eb2acad5d7f7d5b852e9", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2012-08-23T11:13:28Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.as(ScopeProvider__BehaviorDescriptor.getScope_id6GEzh_Hz_wK.invoke(project, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, \"jetbrains.mps.build.structure.BuildSource_JavaLibrary\").getDeclarationNode(), \"parts\", ((int) (0))).resolve(project, \"log4j-lib\"),jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, \"jetbrains.mps.build.structure.BuildSource_JavaLibrary\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (log4jLib != null) { org.jetbrains.mps.openapi.model.SNode log4jJarRef = jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.as(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(jetbrains.mps.internal.collections.runtime.Sequence.fromIterable(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.ofConcept(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(log4jLib, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryCP\"))).first(), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, 3717132724152913085L, \"classpath\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 5610619299014446503L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryExternalJar\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 5610619299014446503L, 5610619299014446504L, \"extJar\")); org.jetbrains.mps.openapi.model.SNode log4jArtifact = jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.as(artifacts.findArtifact(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(log4jJarRef, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getReferenceLink(8755280088213897754L, -5075149991798053422L, 5610619299014309452L, 5610619299014309453L, \"jar\"))), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 7389400916848036997L, \"jetbrains.mps.build.structure.BuildLayout_Node\")); if (log4jArtifact != null) { helper.putArtifact(\"log4j\", log4jArtifact); builder.add(log4jArtifact, log4jLib); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6102/buggy-version/plugins.mps-build.languages.build.mps.source_gen.jetbrains.mps.build.mps.behavior.BuildMPSPlugin__BehaviorDescriptor.java", "BodyUseAPI": ["jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(jetbrains.mps.internal.collections.runtime.Sequence.fromIterable(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.ofConcept(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(log4jLib, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryCP\"))).first(),jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, 3717132724152913085L, \"classpath\"))", "jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.ofConcept(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(log4jLib, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\")),jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryCP\"))", "jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(org.jetbrains.mps.openapi.model.SNode,jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\"))", "jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.as(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(jetbrains.mps.internal.collections.runtime.Sequence.fromIterable(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.ofConcept(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(log4jLib, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryCP\"))).first(), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, 3717132724152913085L, \"classpath\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 5610619299014446503L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryExternalJar\")),jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 5610619299014446503L, 5610619299014446504L, \"extJar\"))", "jetbrains.mps.build.util.RequiredDependenciesBuilder.add(org.jetbrains.mps.openapi.model.SNode,org.jetbrains.mps.openapi.model.SNode)", "jetbrains.mps.internal.collections.runtime.Sequence.fromIterable(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.ofConcept(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(log4jLib, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryCP\"))).first()", "jetbrains.mps.internal.collections.runtime.Sequence.fromIterable(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.ofConcept(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(log4jLib, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryCP\")))", "jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.as(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(jetbrains.mps.internal.collections.runtime.Sequence.fromIterable(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.ofConcept(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(log4jLib, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryCP\"))).first(), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, 3717132724152913085L, \"classpath\")),jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 5610619299014446503L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryExternalJar\"))"], "Fixed commit": "9ad2dcb187ba25675c2ccab428480a4aea2bcb15", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2016-11-09T19:03:38Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.as(ScopeProvider__BehaviorDescriptor.getScope_id6GEzh_Hz_wK.invoke(project, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, \"jetbrains.mps.build.structure.BuildSource_JavaLibrary\").getDeclarationNode(), \"parts\", ((int) (0))).resolve(project, \"jdom-lib\"),jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, \"jetbrains.mps.build.structure.BuildSource_JavaLibrary\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (jdomLib != null) { org.jetbrains.mps.openapi.model.SNode jdomJarRef = jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.as(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(jetbrains.mps.internal.collections.runtime.Sequence.fromIterable(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.ofConcept(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(jdomLib, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryCP\"))).first(), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, 3717132724152913085L, \"classpath\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 5610619299014446503L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryExternalJar\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 5610619299014446503L, 5610619299014446504L, \"extJar\")); org.jetbrains.mps.openapi.model.SNode jdomArtifact = jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.as(artifacts.findArtifact(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(jdomJarRef, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getReferenceLink(8755280088213897754L, -5075149991798053422L, 5610619299014309452L, 5610619299014309453L, \"jar\"))), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 7389400916848036997L, \"jetbrains.mps.build.structure.BuildLayout_Node\")); if (jdomArtifact != null) { helper.putArtifact(\"jdom\", jdomArtifact); builder.add(jdomArtifact, jdomLib); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6102/buggy-version/plugins.mps-build.languages.build.mps.source_gen.jetbrains.mps.build.mps.behavior.BuildMPSPlugin__BehaviorDescriptor.java", "BodyUseAPI": ["jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.ofConcept(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(jdomLib, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\")),jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryCP\"))", "jetbrains.mps.build.util.RequiredDependenciesBuilder.add(org.jetbrains.mps.openapi.model.SNode,org.jetbrains.mps.openapi.model.SNode)", "jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.as(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(jetbrains.mps.internal.collections.runtime.Sequence.fromIterable(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.ofConcept(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(jdomLib, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryCP\"))).first(), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, 3717132724152913085L, \"classpath\")),jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 5610619299014446503L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryExternalJar\"))", "jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.as(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(jetbrains.mps.internal.collections.runtime.Sequence.fromIterable(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.ofConcept(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(jdomLib, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryCP\"))).first(), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, 3717132724152913085L, \"classpath\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 5610619299014446503L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryExternalJar\")),jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 5610619299014446503L, 5610619299014446504L, \"extJar\"))", "jetbrains.mps.internal.collections.runtime.Sequence.fromIterable(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.ofConcept(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(jdomLib, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryCP\"))).first()", "jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(org.jetbrains.mps.openapi.model.SNode,jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\"))", "jetbrains.mps.internal.collections.runtime.Sequence.fromIterable(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.ofConcept(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(jdomLib, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryCP\")))", "jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(jetbrains.mps.internal.collections.runtime.Sequence.fromIterable(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.ofConcept(jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getChildren(jdomLib, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 6057319140845467763L, 6057319140845478673L, \"elements\")), jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, \"jetbrains.mps.build.structure.BuildSource_JavaLibraryCP\"))).first(),jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getContainmentLink(8755280088213897754L, -5075149991798053422L, 3717132724152913083L, 3717132724152913085L, \"classpath\"))"], "Fixed commit": "9ad2dcb187ba25675c2ccab428480a4aea2bcb15", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2016-11-09T19:03:38Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((quantityField.getText().toString().trim().length()) > 0) { f.setQuantity(java.lang.Integer.parseInt(quantityField.getText().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1404/buggy-version/app.src.main.java.edu.fe.EntryActivity.java", "BodyUseAPI": ["edu.fe.backend.FoodItem.setQuantity(int)", "quantityField.getText().toString()", "java.lang.Integer.parseInt(quantityField.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "8ebc7d2f746c610c13a2bebad7eea4a89d8809ee", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110W240T3", "Date": "2016-02-29T10:48:49Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["H.Request.contextPath()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(\"/\".equals(ctx))) { sb.append(ctx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6003/buggy-version/src.main.java.org.osgl.http.util.Path.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "86b5b64adb54974cee71be07b04057583fe611b3", "Url": "https://api.github.com/repos/osglworks/java-http", "Date": "2015-05-04T21:28:29Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.error) == (de.fruitfly.ovr.structs.ErrorInfo.OVR_SHUTDOWN_APP_REQUESTED)) { this.shutdownReq = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4434/buggy-version/JRift.src.de.fruitfly.ovr.structs.ErrorInfo.java", "BodyUseAPI": [], "Fixed commit": "e0381288989793f4861e1118e03d225f07b74c0a", "Url": "https://api.github.com/repos/mabrowning/JRift", "Date": "2016-03-30T12:50:23Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.altoros.CommandLineParser.parse(com.altoros.Options,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (commandLine.hasOption(\"local\")) { java.lang.String arguments = commandLine.getOptionValue(\"local\", java.lang.Boolean.TRUE.toString()); com.altoros.Storm.runOnCluster = java.lang.Boolean.parseBoolean(arguments); java.lang.System.out.println((\"Run On Cluster: \" + (com.altoros.Storm.runOnCluster))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2357/buggy-version/src.main.java.com.altoros.Storm.java", "BodyUseAPI": ["com.altoros.CommandLine.getOptionValue(java.lang.String,java.lang.String)"], "Fixed commit": "50dc29f305d06b09e74cb857f0eda996ec00ad19", "Url": "https://api.github.com/repos/zeremit/StormFramework", "Date": "2014-03-07T21:07:02Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentripplanner.graph_builder.impl.osm.OSMWay.getTag(java.lang.String)", "org.opentripplanner.graph_builder.impl.osm.OSMWay.getTag(java.lang.String)", "org.opentripplanner.graph_builder.impl.osm.OSMWay.getTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((cycleway.startsWith(\"opposite\")) || (cyclewayLeft.startsWith(\"opposite\"))) || (cyclewayRight.startsWith(\"opposite\"))) { permissionsBack = permissionsBack.add(StreetTraversalPermission.BICYCLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8227/buggy-version/opentripplanner-graph-builder.src.main.java.org.opentripplanner.graph_builder.impl.osm.OpenStreetMapGraphBuilderImpl.java", "BodyUseAPI": [], "Fixed commit": "51e734430774f24242bb7641e59a8dd46ef94f3e", "Url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner", "Date": "2011-10-11T16:42:36Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.qualinsight.plugins.sonarqube.badges.font.FontManager.DUMMY_FONT.equals(this.preferredFont))) { index = com.qualinsight.plugins.sonarqube.badges.font.FontManager.preferredFontNames.indexOf(this.preferredFont.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5822/buggy-version/src.main.java.com.qualinsight.plugins.sonarqube.badges.font.FontManager.java", "BodyUseAPI": ["java.util.List<java.lang.String>.indexOf(java.lang.String)", "java.awt.Font.getName()"], "Fixed commit": "f51f79cd00be474bb641324bd742243708d5e175", "Url": "https://api.github.com/repos/QualInsight/qualinsight-plugins-sonarqube-badges", "Date": "2016-05-11T21:54:34Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { return getFirst(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4327/buggy-version/src.main.java.datastructure.list.MyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "2fc54f89db584ea3bc922e33364380d0bced4648", "Url": "https://api.github.com/repos/Bohdankm22/intrv", "Date": "2017-11-10T01:21:03Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == ((size()) - 1)) { return getLast(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4327/buggy-version/src.main.java.datastructure.list.MyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "2fc54f89db584ea3bc922e33364380d0bced4648", "Url": "https://api.github.com/repos/Bohdankm22/intrv", "Date": "2017-11-10T01:21:03Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == ((size()) - 1)) { return removeLast(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4327/buggy-version/src.main.java.datastructure.list.MyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "2fc54f89db584ea3bc922e33364380d0bced4648", "Url": "https://api.github.com/repos/Bohdankm22/intrv", "Date": "2017-11-10T01:21:03Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.siacs.conversations.entities.Message.getConversation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(this.mXmppConnectionService.renewSymmetricKey(conversation))) { android.util.Log.d(Config.LOGTAG, ((account.getJid().toBareJid()) + \": could not set symmetric key\")); cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2618/buggy-version/src.main.java.eu.siacs.conversations.xmpp.jingle.JingleConnection.java", "BodyUseAPI": [], "Fixed commit": "5c2720efd04ceb5155dc612375c888b2faa961f1", "Url": "https://api.github.com/repos/siacs/Conversations", "Date": "2015-07-19T12:51:04Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalNumOfDays > 0) { memberShareArray[i] = (amount * (memberPayingDayArray[i])) / totalNumOfDays; }else { memberShareArray[i] = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5805/buggy-version/app.src.main.java.com.ericliudeveloper.sharedbillhelper.ui.presenter.CalculationResultPresenter.java", "BodyUseAPI": [], "Fixed commit": "1b19e0086a40c0461db50477221b3a7f8a318158", "Url": "https://api.github.com/repos/Ericliu001/SharedBillHelper2015", "Date": "2015-06-21T12:20:38Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transferTypes[0].isSupportedType(event.currentDataType)) { java.lang.String[] files = ((java.lang.String[]) (event.data)); for (java.lang.String file : files) { ch.elexis.omnivore.data.DocHandle.assimilate(file); viewer.refresh(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/288/buggy-version/ch.elexis.omnivore.src.ch.elexis.omnivore.views.OmnivoreView.java", "BodyUseAPI": [], "Fixed commit": "9344934173bd518416f3a77f3f45f2a6193ce916", "Url": "https://api.github.com/repos/elexis/elexis-3-base", "Date": "2014-07-24T11:28:41Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["contact.service.jpa.JpaContactDao.find(contact.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (oldContact == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2623/buggy-version/src.contact.service.jpa.JpaContactDao.java", "BodyUseAPI": [], "Fixed commit": "8db04838ee00058f9f7016a54b9694e336cf134f", "Url": "https://api.github.com/repos/mapfap/ContactService", "Date": "2014-11-20T16:18:20Z"},
{"Line": "=>709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (directionName.contains(\"\u0410\u0432\u0442\u043e\u0441\u0442\u0430\u043d\u0446\u0438\u044f \u0418\u0437\u0442\u043e\u043a \u0413\u0430\u0440\u0430 \u0418\u0441\u043a\u044a\u0440\")) { directionName = directionName.replaceAll(\"\u0410\u0432\u0442\u043e\u0441\u0442\u0430\u043d\u0446\u0438\u044f \u0418\u0437\u0442\u043e\u043a \u0413\u0430\u0440\u0430 \u0418\u0441\u043a\u044a\u0440\", \"\u0410\u0432\u0442\u043e\u0441\u0442\u0430\u043d\u0446\u0438\u044f \u0418\u0437\u0442\u043e\u043a - \u0413\u0430\u0440\u0430 \u0418\u0441\u043a\u044a\u0440\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/579/buggy-version/sofbus24.src.main.java.bg.znestorov.sofbus24.utils.Utils.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "e88bf5819aa3f040a38beedc916dfa03591bc2d5", "Url": "https://api.github.com/repos/zdravko-nestorov/Sofbus-24-GitHub", "Date": "2016-02-02T17:12:33Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((otherAddress != null) && (!(partner.getIsContact()))) { otherAddress.setFullName(addressService.computeFullName(otherAddress)); partnerService.addPartnerAddress(partner, otherAddress, true, false, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3547/buggy-version/axelor-crm.src.main.java.com.axelor.apps.crm.service.ConvertLeadWizardService.java", "BodyUseAPI": ["com.axelor.apps.base.service.PartnerService.addPartnerAddress(com.axelor.apps.base.db.Partner,com.axelor.apps.base.db.Address,boolean,boolean,boolean)", "com.axelor.apps.base.db.Address.setFullName(addressService.computeFullName(otherAddress))", "com.axelor.apps.base.service.AddressService.computeFullName(com.axelor.apps.base.db.Address)"], "Fixed commit": "db5f226df8b46dcf7eef861a8d6ba7f8f8888964", "Url": "https://api.github.com/repos/ama-axelor/axelor-business-suite", "Date": "2016-09-15T15:37:09Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mailProperties.containsKey(\"mail.smtp.auth\")) { auth = mailProperties.getString(\"mail.smtp.auth\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9185/buggy-version/latke.src.main.java.org.b3log.latke.mail.local.MailSender.java", "BodyUseAPI": ["java.util.ResourceBundle.getString(java.lang.String)"], "Fixed commit": "2d45fb61fcf5432d9e0af914797332cad5d33cc8", "Url": "https://api.github.com/repos/b3log/latke", "Date": "2015-02-25T03:56:40Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mailProperties.containsKey(\"mail.smtp.starttls.enable\")) { starttls = mailProperties.getString(\"mail.smtp.starttls.enable\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9185/buggy-version/latke.src.main.java.org.b3log.latke.mail.local.MailSender.java", "BodyUseAPI": ["java.util.ResourceBundle.getString(java.lang.String)"], "Fixed commit": "2d45fb61fcf5432d9e0af914797332cad5d33cc8", "Url": "https://api.github.com/repos/b3log/latke", "Date": "2015-02-25T03:56:40Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((form.getAuthority()) == null) { form.setAuthority(\"marcform\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7935/buggy-version/proarc-common.src.main.java.cz.cas.lib.proarc.common.object.emods.BdmArticleMapper.java", "BodyUseAPI": ["cz.cas.lib.proarc.mods.FormDefinition.setAuthority(java.lang.String)"], "Fixed commit": "864bdfb675c64832181727da3a8eec0078372649", "Url": "https://api.github.com/repos/proarc/proarc", "Date": "2017-10-10T21:41:56Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cnt < (retInt.length)) retInt[cnt] = i;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7905/buggy-version/java.ec3.common.tile.TileMRUGeneric.java", "BodyUseAPI": [], "Fixed commit": "6b985afceec5476e4bf598da13f79a92eec8650e", "Url": "https://api.github.com/repos/Modbder/EssentialCraft3", "Date": "2015-07-10T07:58:55Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cnt < (retInt.length)) retInt[cnt] = i;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7905/buggy-version/java.ec3.common.tile.TileMRUGeneric.java", "BodyUseAPI": [], "Fixed commit": "6b985afceec5476e4bf598da13f79a92eec8650e", "Url": "https://api.github.com/repos/Modbder/EssentialCraft3", "Date": "2015-07-10T07:58:55Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scouter.util.StringUtil.tokenizer(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c == null) return classSet;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1763/buggy-version/scouter.agent.java.src.scouter.agent.asm.util.MethodSet.java", "BodyUseAPI": [], "Fixed commit": "9d7f8823dba6a297c192c376f393a2c9d39611bb", "Url": "https://api.github.com/repos/scouter-project/scouter", "Date": "2015-09-18T13:50:44Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mirrorTerrain) tr.setRunState(new org.jtrfp.trcl.flow.Mission.ChamberState() {}); else tr.setRunState(new org.jtrfp.trcl.flow.Mission.PlayerActivity() {});", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8140/buggy-version/src.main.java.org.jtrfp.trcl.obj.TunnelExitObject.java", "BodyUseAPI": [], "Fixed commit": "2d4b46ab180ca62149394e7633b602bcc946f7d1", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-12-13T20:05:24Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(label.isEmpty())) { rectf.set(((rect.left) + (padding)), ((rect.top) + (padding)), ((rect.right) - (padding)), rect.centerY()); canvas.drawRoundRect(rectf, round_w, round_h, com.cadeli.ui.CdlPalette.getHilightPaint()); drawCenterTextUp(canvas, label, com.cadeli.ui.CdlPalette.getTxtPaint(((w) - (2 * (padding))), ((h) - (2 * (padding))))); drawCenterTextDn(canvas, stateTxt, com.cadeli.ui.CdlPalette.getTxtPaint(((w) - (2 * (padding))), ((h) - (2 * (padding))))); }else { drawCenterText(canvas, stateTxt, com.cadeli.ui.CdlPalette.getTxtPaint(((w) - (2 * (padding))), ((h) - (2 * (padding))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8335/buggy-version/CdlUIg.src.com.cadeli.ui.buttons.CdlNStatesButton.java", "BodyUseAPI": ["com.cadeli.ui.buttons.CdlNStatesButton.drawCenterTextUp(android.graphics.Canvas,com.cadeli.ui.buttons.CdlNStatesButton,com.cadeli.ui.CdlPalette.getTxtPaint(((w) - (2 * (padding))), ((h) - (2 * (padding)))))"], "Fixed commit": "93e54a181cec815967bd09f0d12b4bcd4f60aeac", "Url": "https://api.github.com/repos/cadeli/CdlUI", "Date": "2014-03-28T09:33:47Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((url.contains(\"?\")) && (url.contains(\"uid\"))) && (url.contains(\"signkey\"))) { }else if (url.contains(\"?\")) { url += java.lang.String.format(\"&uid=%s&signkey=%s&version=%s\", com.guobi.virtualcoin.pojo.AppGlobal.mUser.ID, com.guobi.virtualcoin.pojo.AppGlobal.mUser.signkey, com.guobi.virtualcoin.pojo.AppGlobal.APP_VERSION); }else { url += java.lang.String.format(\"?uid=%s&signkey=%s&version=%s\", com.guobi.virtualcoin.pojo.AppGlobal.mUser.ID, com.guobi.virtualcoin.pojo.AppGlobal.mUser.signkey, com.guobi.virtualcoin.pojo.AppGlobal.APP_VERSION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4697/buggy-version/app.src.main.java.com.guobi.virtualcoin.pojo.AppGlobal.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "2e7c52552398c25f3ad5543a744ff741458d3bf5", "Url": "https://api.github.com/repos/ljxwjj/VirtualCoin", "Date": "2017-08-12T15:17:30Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.errors) == null) { this.errors = new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8017/buggy-version/src.main.java.ru.hh.errors.common.Errors.java", "BodyUseAPI": [], "Fixed commit": "3909059eaa485c4705d935cba522a7f387197c96", "Url": "https://api.github.com/repos/hhru/hh-common-errors", "Date": "2016-04-08T11:45:15Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(directoryField.isEnabled())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1534/buggy-version/src.components.GraphicalUI.java", "BodyUseAPI": [], "Fixed commit": "950afa765bd1621d8b74cb52c6544cef975c8c90", "Url": "https://api.github.com/repos/KieranSherman/installer", "Date": "2016-05-27T18:35:41Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mReleaseRunnable) == null) { mReleaseRunnable = new com.aretha.content.CacheManager.BrokenReferenceReleaseRunnable(com.aretha.content.CacheManager.RELEASE_INTERVAL, mDataMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6227/buggy-version/Aretha.src.com.aretha.content.CacheManager.java", "BodyUseAPI": [], "Fixed commit": "d0c381cc4974cb692cddb1895c29e86ed93e7a5a", "Url": "https://api.github.com/repos/TangKe/Aretha", "Date": "2012-10-22T06:48:05Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3788/buggy-version/saturn-console-core.src.main.java.com.vip.saturn.job.console.domain.RegistryCenterConfiguration.java", "BodyUseAPI": [], "Fixed commit": "6583995a14d8ee3f1e9d2c3dc710acfb3bbc3327", "Url": "https://api.github.com/repos/vipshop/Saturn", "Date": "2016-12-15T03:01:16Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((object.length()) > 1) object = object.substring(1, ((object.length()) - 1)); else { object = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5559/buggy-version/karma-mr.src.main.java.edu.isi.karma.mapreduce.driver.N3ToJSONReducer.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "cdef875757b4ab679c170600be99ad3e1bb7c267", "Url": "https://api.github.com/repos/usc-isi-i2/Web-Karma", "Date": "2015-12-05T17:33:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sensorMgr) != null) { sensorMgr.unregisterListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3488/buggy-version/AndroidApp.src.com.waldm.proverbica.app.ShakeDetector.java", "BodyUseAPI": [], "Fixed commit": "c7e78e94449167512be32cc6cb1d29e20877da22", "Url": "https://api.github.com/repos/waldm/split-phrase", "Date": "2013-12-24T13:37:35Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.doubango.imsdroid.Services.IScreenService.getCurrentScreen()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((keyCode == (android.view.KeyEvent.KEYCODE_BACK)) && (org.doubango.imsdroid.Screens.BaseScreen.MainUIScreen.equals(currentScreen.getId()))) { android.util.Log.i(\"terry\", \"Press BACK key, close app\"); ((org.doubango.imsdroid.Main) (((org.doubango.imsdroid.Engine) (org.doubango.imsdroid.Engine.getInstance())).getMainActivity())).exit(); return true; }else if (((keyCode == (android.view.KeyEvent.KEYCODE_BACK)) && ((event.getRepeatCount()) == 0)) && ((currentScreen.getType()) != (org.doubango.imsdroid.Screens.BaseScreen.SCREEN_TYPE.HOME_T))) { if (currentScreen.hasBack()) { if (!(currentScreen.back())) { return false; } }else { screenService.back(); } return true; }else if ((keyCode == (android.view.KeyEvent.KEYCODE_VOLUME_DOWN)) || (keyCode == (android.view.KeyEvent.KEYCODE_VOLUME_UP))) { if ((currentScreen.getType()) == (org.doubango.imsdroid.Screens.BaseScreen.SCREEN_TYPE.AV_T)) { android.util.Log.d(org.doubango.imsdroid.Screens.BaseScreen.TAG, \"intercepting volume changed event\"); if (((org.doubango.imsdroid.Screens.ScreenAV) (currentScreen)).onVolumeChanged((keyCode == (android.view.KeyEvent.KEYCODE_VOLUME_DOWN)))) { return true; } } }else if ((keyCode == (android.view.KeyEvent.KEYCODE_MENU)) && ((event.getRepeatCount()) == 0)) { if ((currentScreen instanceof android.app.Activity) && (currentScreen.hasMenu())) { return false; } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5553/buggy-version/src.org.doubango.imsdroid.Screens.BaseScreen.java", "BodyUseAPI": ["org.doubango.imsdroid.Screens.IBaseScreen.getType()", "org.doubango.imsdroid.Screens.IBaseScreen.hasBack()", "org.doubango.imsdroid.Screens.IBaseScreen.hasMenu()", "org.doubango.imsdroid.Screens.IBaseScreen.back()", "org.doubango.imsdroid.Screens.IBaseScreen.getType()", "org.doubango.imsdroid.Screens.IBaseScreen.onVolumeChanged((keyCode == (android.view.KeyEvent.KEYCODE_VOLUME_DOWN)))"], "Fixed commit": "c0051951c22a6c8349e9ba84fe56090a1f3e4dc0", "Url": "https://api.github.com/repos/terryli0925/IMSdroid", "Date": "2015-04-22T12:38:43Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.size()) > 0) { java.lang.String chunk = org.apache.commons.lang3.StringUtils.join(values, \",\"); chunks.add(chunk); values.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5664/buggy-version/code.core.src.io.agi.framework.persistence.models.ModelData.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.join(java.util.ArrayList<java.lang.String>,java.lang.String)", "java.util.ArrayList<java.lang.String>.clear()"], "Fixed commit": "dd3c9e53396e8f642aeb60c99517cec4c2926280", "Url": "https://api.github.com/repos/ProjectAGI/agi", "Date": "2017-05-18T05:05:19Z"},
{"Line": "=>1308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getLogger().isDebugEnabled()) getLogger().debug((\"broadcast Operation: node = \" + node));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3955/buggy-version/src.main.java.net.spy.memcached.MemcachedConnection.java", "BodyUseAPI": [], "Fixed commit": "128a273b23c8d40144603b566b64b00cf258e23f", "Url": "https://api.github.com/repos/vaslabs/spymemcached", "Date": "2016-01-19T12:09:58Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readAllValues) { if (meta.containsKey(org.gitools.persistence.text.ObjectMatrixTextPersistence.TYPE_TAG)) elementClass = org.gitools.persistence.text.ObjectMatrixTextPersistence.typeToClass.get(meta.get(org.gitools.persistence.text.ObjectMatrixTextPersistence.TYPE_TAG)); if (elementClass == null) { elementClass = org.gitools.persistence.text.ObjectMatrixTextPersistence.elementClasses.get(org.gitools.persistence.text.ObjectMatrixTextPersistence.getElementClassId(allAttributeNames)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2962/buggy-version/gitools-core.src.main.java.org.gitools.persistence.text.ObjectMatrixTextPersistence.java", "BodyUseAPI": [], "Fixed commit": "44282dd1f56a41b23bcc5d4744d39e350c4c30d9", "Url": "https://api.github.com/repos/gitools/gitools", "Date": "2012-04-12T10:32:17Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (utilityFile.exists()) { try { final java.util.jar.JarInputStream utilityJar = new java.util.jar.JarInputStream(utilityURL.openStream()); existing = new edgruberman.bukkit.sleep.util.Version((((utilityJar.getManifest().getMainAttributes().getValue(\"Specification-Version\")) + \".\") + (utilityJar.getManifest().getMainAttributes().getValue(\"Implementation-Version\")))); utilityJar.close(); } catch (final java.io.IOException e) { throw new java.lang.RuntimeException(e); } if ((existing.compareTo(new edgruberman.bukkit.sleep.util.Version(versionPlayerActivity))) >= 0) return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/39/buggy-version/src.edgruberman.bukkit.sleep.Main.java", "BodyUseAPI": [], "Fixed commit": "e9ba3335bd38cae8716e660388074fa9ed0277d2", "Url": "https://api.github.com/repos/EdGruberman/Sleep", "Date": "2012-09-20T22:33:53Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.guy.smsclassproject.TextingActivity.currentNumber) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4499/buggy-version/app.src.main.java.com.example.guy.smsclassproject.TextingActivity.java", "BodyUseAPI": [], "Fixed commit": "ae52f59c5a38932fd449d7ad0ebaaf47b3955e76", "Url": "https://api.github.com/repos/SMSExample/Project", "Date": "2015-10-30T02:34:42Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ansonliu.navfit99.NavFitManagement.writeNavFitToRedis(updatedNavFit, targetUUID, editorID, authToken)) return new com.ansonliu.navfit99.JSONResponse(0, (clientReportID + \"Report deleted.\"), null, null).toJSONString(); else return new com.ansonliu.navfit99.JSONResponse((-1), \"Update fail\", null, null).toJSONString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2509/buggy-version/src.main.java.com.ansonliu.navfit99.HttpEditHandler.java", "BodyUseAPI": [], "Fixed commit": "39ea5b907b6d088cfa94e459752ac48974c46f85", "Url": "https://api.github.com/repos/ansonl/navfit99-server", "Date": "2017-11-15T00:59:59Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ansonliu.navfit99.NavFitManagement.writeNavFitToRedis(updatedNavFit, targetUUID, editorID, authToken)) { return new com.ansonliu.navfit99.JSONResponse(0, (clientFolderID + \"Folder deleted.\"), null, null).toJSONString(); }else { return new com.ansonliu.navfit99.JSONResponse((-1), \"Update fail\", null, null).toJSONString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2509/buggy-version/src.main.java.com.ansonliu.navfit99.HttpEditHandler.java", "BodyUseAPI": [], "Fixed commit": "39ea5b907b6d088cfa94e459752ac48974c46f85", "Url": "https://api.github.com/repos/ansonl/navfit99-server", "Date": "2017-11-15T00:59:59Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(transaction.getStatus().isErrorState())) { transaction.setStatus(TransactionStatus.ROLLED_BACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4420/buggy-version/src.main.java.com.mangofactory.moolah.processing.FinancialTransactionController.java", "BodyUseAPI": ["com.mangofactory.moolah.FinancialTransaction.setStatus(TransactionStatus.ROLLED_BACK)"], "Fixed commit": "f9b504a02695738fe9436ea2e65475d0ccd2fa89", "Url": "https://api.github.com/repos/martypitt/moolah", "Date": "2013-05-28T08:28:47Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction.equals(\"inbound\")) { java.lang.String tmpLocalId = new java.lang.String(localID); localID = new java.lang.String(remoteID); remoteID = tmpLocalId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7934/buggy-version/dialoghandler.src.main.java.com.almende.dialog.adapter.TwilioAdapter.java", "BodyUseAPI": [], "Fixed commit": "d224511261b3666a0c99393e5df91f12ebf0ff51", "Url": "https://api.github.com/repos/almende/dialog", "Date": "2014-12-05T17:22:59Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (q == 0) delta = (cn.active) / q;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1727/buggy-version/src.main.java.org.animotron.animi.acts.Subtraction.java", "BodyUseAPI": [], "Fixed commit": "a2a805368c6c548b249c36dc43a61363867a50eb", "Url": "https://api.github.com/repos/animotron/animi", "Date": "2012-10-30T18:42:44Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.get(KeyValueMap.DEFAULT_MAPNAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cache == null) { cache = new java.util.concurrent.ConcurrentHashMap<>(); swap.put(KeyValueMap.DEFAULT_MAPNAME, cache); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4360/buggy-version/extensions.namespace-lookup.src.main.java.io.druid.query.extraction.namespace.ExtractionNamespaceFunctionFactory.java", "BodyUseAPI": [], "Fixed commit": "5d777d548241ad80385426b9c2e65584bfca2d72", "Url": "https://api.github.com/repos/sirpkt/druid", "Date": "2016-02-23T05:32:29Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((function.getReturnType()) == null) { addSemanticError(((\"Void function \\\"\" + funcId) + \"\\\" cannot be RHS of assignment.\"), node.getLineNumber()); myAttributes.put(\"type\", null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4176/buggy-version/src.com.tiger.compiler.frontend.semanticanalysis.TigerSemanticAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "2c2149f20fff294dbc04e17c38871cdb9e15421d", "Url": "https://api.github.com/repos/ClysmiC/tiger-compiler", "Date": "2015-11-08T06:37:55Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.buffer.ByteBuf.readByte()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (updateRemove != 1) { java.lang.String scoreboardName = net.md_5.bungee.netty.Var.readString(in, false); net.md_5.bungee.netty.Var.writeString(scoreboardName, out, true); out.writeBytes(in.readBytes(4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/496/buggy-version/proxy.src.main.java.net.md_5.bungee.netty.packetrewriter.UpdateScoreRewriter.java", "BodyUseAPI": [], "Fixed commit": "eb7a178e655158364da16285addda9e94528aad5", "Url": "https://api.github.com/repos/TheUnnamedDude/BungeeCord", "Date": "2013-12-30T18:57:15Z"},
{"Line": "=>586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (schemaIndex >= 0) { schemaName = tableName.substring(0, schemaIndex); tableName = tableName.substring((schemaIndex + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1821/buggy-version/LinkFuture.src.main.java.LinkFuture.Core.DBHelper.DBHelper.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "23ffa72a9eff0ebf5c2d6f561c80bf8a790934c5", "Url": "https://api.github.com/repos/cyokin/JAVA", "Date": "2015-07-08T22:41:31Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tip.getId()) == (korisnik.getId())) { javax.swing.JOptionPane.showMessageDialog(null, \"Ne mozete obrisati svoj nalog!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5420/buggy-version/Projekat.src.main.java.ba.unsa.etf.si.app.Inventura.GUI.UklanjanjeKorisnika.java", "BodyUseAPI": [], "Fixed commit": "2f89a0d46dca10ffbca011377cf44c5ad6095596", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/Si2015Tim4", "Date": "2016-05-17T03:01:46Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((upToDatePropertySettings) != null) { for (org.codehaus.mojo.buildhelper.UpToDatePropertySetting config : upToDatePropertySettings) { this.execute(config); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8245/buggy-version/src.main.java.org.codehaus.mojo.buildhelper.UpToDatePropertiesMojo.java", "BodyUseAPI": [], "Fixed commit": "2e9a6c595cfa35de6e888ff5c007f6e89f07194c", "Url": "https://api.github.com/repos/mojohaus/build-helper-maven-plugin", "Date": "2016-07-13T15:03:55Z"},
{"Line": "=>1871", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messageIds.size()) >= (messageStoreConfig.getMaxTransferCountOnMessageInMemory())) { com.alibaba.rocketmq.store.DefaultMessageStore.log.warn(\"Fetching too many message ids.\"); return messageIds; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5909/buggy-version/rocketmq-store.src.main.java.com.alibaba.rocketmq.store.DefaultMessageStore.java", "BodyUseAPI": [], "Fixed commit": "4e34d849dc8d87770a529526312cf937f5405f69", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2016-11-03T06:11:40Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mBound) unbindService(mConnection);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4615/buggy-version/app.src.main.java.com.hannah.hannahworld.MakeNumberActivity.java", "BodyUseAPI": [], "Fixed commit": "18e0432b801c7b9d90dff2940913b6be4f16a062", "Url": "https://api.github.com/repos/tritic/HannahWorld", "Date": "2015-07-28T04:50:42Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.contains(atom)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6870/buggy-version/graal.graal-store.graal-store-blueprints.src.main.java.fr.lirmm.graphik.graal.store.gdb.BlueprintsGraphDBStore.java", "BodyUseAPI": [], "Fixed commit": "d7de10f4b52a1cd908a31eab848557072606bbb9", "Url": "https://api.github.com/repos/graphik-team/graal", "Date": "2016-10-20T13:30:34Z"},
{"Line": "=>674", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (planaryConfiguration == 2) bandoff = new int[]{ 0, 0, 0 }; else bandoff = new int[]{ 0, 1, 2 };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2008/buggy-version/src.cafe.image.reader.TIFFReader.java", "BodyUseAPI": [], "Fixed commit": "bf161d66269456a8e6efc3419d1c1d051ff3ebd6", "Url": "https://api.github.com/repos/dragon66/icafe", "Date": "2014-12-02T18:10:40Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (planaryConfiguration == 2) bandoff = new int[]{ 0, 0, 0, 0 }; else bandoff = new int[]{ 0, 1, 2, 3 };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2008/buggy-version/src.cafe.image.reader.TIFFReader.java", "BodyUseAPI": [], "Fixed commit": "bf161d66269456a8e6efc3419d1c1d051ff3ebd6", "Url": "https://api.github.com/repos/dragon66/icafe", "Date": "2014-12-02T18:10:40Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Robot.oi.VacuumButton.get()) { if (org.usfirst.frc.team3966.robot.RobotMap.vacuumUseAxis) { Robot.vacuum.VacuumOn(((Robot.oi.controller.getRawAxis(RobotMap.vacuumOnAxis)) + 1.0)); }else { Robot.vacuum.VacuumOn(1.0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6000/buggy-version/src.org.usfirst.frc.team3966.robot.commands.VacuumSuck.java", "BodyUseAPI": [], "Fixed commit": "17d043234f4bc59c4a14ddd2beb7299cfe0c0e01", "Url": "https://api.github.com/repos/lnstempunks/JavaShrimpCI", "Date": "2015-12-19T00:13:09Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pageInfo) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1900/buggy-version/djvu-html5.src.pl.djvuhtml5.client.SinglePageLayout.java", "BodyUseAPI": [], "Fixed commit": "82121b640c61ad1276bc9e9601c4bb498c560b08", "Url": "https://api.github.com/repos/mateusz-matela/djvu-html5", "Date": "2016-04-10T21:09:57Z"},
{"Line": "=>772", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.isUseTriggerValue()) { triggered.setAssignmentValues(event.computeEventAssignmentValues(index, currentTime.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2408/buggy-version/analysis.src.main.java.edu.utah.ece.async.ibiosim.analysis.simulation.hierarchical.HierarchicalSimulation.java", "BodyUseAPI": ["edu.utah.ece.async.ibiosim.analysis.simulation.hierarchical.util.comp.TriggeredEventNode.setAssignmentValues(event.computeEventAssignmentValues(index, currentTime.getValue()))", "edu.utah.ece.async.ibiosim.analysis.simulation.hierarchical.math.EventNode.computeEventAssignmentValues(int,currentTime.getValue())"], "Fixed commit": "9b489a9b00ea5679a542151fdbb1df3d72807f25", "Url": "https://api.github.com/repos/MyersResearchGroup/iBioSim", "Date": "2017-09-20T19:31:05Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (replacePowertool == null) { io.github.hsyyid.spongeessentialcmds.utils.Powertool powertool = new io.github.hsyyid.spongeessentialcmds.utils.Powertool(player, player.getItemInHand().get().getItem().getName(), command); Main.powertools.add(powertool); }else { Main.powertools.remove(replacePowertool); io.github.hsyyid.spongeessentialcmds.utils.Powertool powertool = new io.github.hsyyid.spongeessentialcmds.utils.Powertool(player, player.getItemInHand().get().getItem().getName(), command); Main.powertools.add(powertool); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6871/buggy-version/src.main.java.io.github.hsyyid.spongeessentialcmds.cmdexecutors.PowertoolExecutor.java", "BodyUseAPI": ["Main.powertools.remove(io.github.hsyyid.spongeessentialcmds.utils.Powertool)"], "Fixed commit": "7cceea7aa523da494af2e32930f2e19ee6da1400", "Url": "https://api.github.com/repos/hsyyid/EssentialCmds", "Date": "2015-08-17T19:47:08Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (category.equals(gridtask.logic.Execution.CATEGORY_PRIORITY)) { if (!(task.isImportant())) { put = false; break; } }else if (!(task.getCategories().contains(category))) { put = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4354/buggy-version/src.gridtask.logic.Execution.java", "BodyUseAPI": ["task.getCategories().contains(java.lang.String)"], "Fixed commit": "03b45ad9a9065e0bee54e98b620b541fc99c625f", "Url": "https://api.github.com/repos/cs2103jan2016-w09-4j/main", "Date": "2016-04-11T16:51:05Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) { if ((data) instanceof redis.clients.jedis.exceptions.JedisDataException) { throw new redis.clients.jedis.exceptions.JedisDataException(((redis.clients.jedis.exceptions.JedisDataException) (data))); } response = builder.build(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8962/buggy-version/src.main.java.redis.clients.jedis.Response.java", "BodyUseAPI": [], "Fixed commit": "f3a5d62e2b9a6a608343d4a816be45cfa53ce41b", "Url": "https://api.github.com/repos/xetorthio/jedis", "Date": "2011-12-14T04:43:52Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(CapabilityType.PLATFORM)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (platform instanceof org.openqa.selenium.Platform) { capabilityOs = ((org.openqa.selenium.Platform) (platform)).getPartOfOsName()[0]; }else { capabilityOs = ((java.lang.String) (platform)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7750/buggy-version/src.main.java.com.rmn.qa.AutomationRunRequest.java", "BodyUseAPI": [], "Fixed commit": "de0942ca5db3684e4d1762c4209c28430d4feb6c", "Url": "https://api.github.com/repos/ambirag/SeleniumGridScaler", "Date": "2015-12-22T10:22:50Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((breakDown.length) != 1) { secondWord = breakDown[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4138/buggy-version/src.tdnext.ParserAPI.java", "BodyUseAPI": [], "Fixed commit": "05137682b8443740180343fe6934ca114a4ea208", "Url": "https://api.github.com/repos/cs2103aug2015-t16-2j/main", "Date": "2015-11-08T02:47:54Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mule.common.query.dsql.parser.IDsqlNode.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type == (org.mule.common.query.dsql.grammar.DsqlParser.OPENING_PARENTHESIS)) { dsqlNode.accept(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7505/buggy-version/src.main.java.org.mule.common.query.dsql.parser.DefaultDsqlGrammarVisitor.java", "BodyUseAPI": [], "Fixed commit": "5d5a5f07c60573075629a15b8234203cd575c1c9", "Url": "https://api.github.com/repos/mulesoft/mule-common", "Date": "2013-06-28T19:14:21Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(observer.isDestroyed())) { observer.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2366/buggy-version/modules.VisualizationImpl.src.main.java.org.gephi.visualization.bridge.DataBridge.java", "BodyUseAPI": ["org.gephi.graph.api.GraphObserver.destroy()"], "Fixed commit": "8157d3007841a7b34cdf74beb4d95153cc40f3d2", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-11-21T09:26:48Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((observer) != null) && (observer.isDestroyed())) || (((graphModel) != null) && ((graph.getView()) != (graphModel.getVisibleView())))) { if (((observer) != null) && (!(observer.isDestroyed()))) { observer.destroy(); } observer = null; if ((graphModel) != null) { graph.writeLock(); graph = graphModel.getGraphVisible(); observer = graphModel.createGraphObserver(graph, false); force = true; graph.writeUnlock(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2366/buggy-version/modules.VisualizationImpl.src.main.java.org.gephi.visualization.bridge.DataBridge.java", "BodyUseAPI": ["org.gephi.graph.api.GraphObserver.destroy()", "org.gephi.graph.api.GraphModel.createGraphObserver(org.gephi.graph.api.Graph,boolean)", "org.gephi.graph.api.GraphModel.getGraphVisible()", "org.gephi.graph.api.GraphObserver.isDestroyed()", "org.gephi.graph.api.Graph.writeLock()"], "Fixed commit": "8157d3007841a7b34cdf74beb4d95153cc40f3d2", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-11-21T09:26:48Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isView) { limits.setMaxWeight(maxWeight); limits.setMinWeight(minWeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2366/buggy-version/modules.VisualizationImpl.src.main.java.org.gephi.visualization.bridge.DataBridge.java", "BodyUseAPI": [], "Fixed commit": "8157d3007841a7b34cdf74beb4d95153cc40f3d2", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-11-21T09:26:48Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNeedUpdateWeatherForcastInfoToDev) { lastWeatherForcastInfo = weatherForcastInfo; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/843/buggy-version/src.main.java.com.jadic.biz.ThreadParseWeatherFile.java", "BodyUseAPI": [], "Fixed commit": "29920c58dce4f08cd45c7bea6c43da28fa4200f7", "Url": "https://api.github.com/repos/jjaaddiicc/wxw", "Date": "2015-07-08T14:32:27Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((attribute != null) && (!(\"\".equals(attribute.trim())))) { attribute = (cn.com.dhcc.adam.dailytask.datang.query.ReportQuery.production) ? attribute.trim().toLowerCase() : attribute; value = resultMap.get(attribute); valueValid = (value != null) && (!(\"\".equals(value.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3275/buggy-version/src.main.java.cn.com.dhcc.adam.dailytask.datang.query.ReportQuery.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.toLowerCase()"], "Fixed commit": "75171dee736269edc125e9ea6444815d0fda0c41", "Url": "https://api.github.com/repos/cedooo/Daily", "Date": "2015-12-24T03:34:56Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (path != null) { java.io.File[] list = path.listFiles(); for (java.io.File file : list) { if (file.isFile()) { files.add(file); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2780/buggy-version/FBG2.0.src.controller.commands.saveLoad.SaveFiles.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "f37e26add6caa1b82bf41ccf8dc71ce01afc945d", "Url": "https://api.github.com/repos/TeamFinalBoss/GameIteration2", "Date": "2015-03-19T18:02:19Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentIndex) < 0) { mCurrentIndex = (mQuestionBank.length) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3008/buggy-version/app.src.main.java.com.bignerdranch.geoquiz.QuizActivity.java", "BodyUseAPI": [], "Fixed commit": "ddf1a578c424bad50f70ec6ee81db2d5211981d8", "Url": "https://api.github.com/repos/rask004/AndroidProgramming", "Date": "2016-12-03T09:46:29Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.defaultProps.isEmpty()) { try { java.lang.Class<?> c = java.lang.Class.forName(\"org.drools.compiler.lang.MVELDumper\", false, classLoader); java.net.URL confURL = c.getResource((\"/META-INF/drools.default.\" + confFileName)); loadProperties(confURL, this.defaultProps); } catch (java.lang.ClassNotFoundException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6980/buggy-version/kie-internal.src.main.java.org.kie.internal.utils.ChainedProperties.java", "BodyUseAPI": [], "Fixed commit": "642a58fe549be174afa9780da47e606335339162", "Url": "https://api.github.com/repos/droolsjbpm/droolsjbpm-knowledge", "Date": "2013-06-13T15:32:23Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { mMutedColor = p.getVibrantColor(getResources().getColor(R.color.theme_accent)); mPhotoView.setImageBitmap(imageContainer.getBitmap()); mRootView.findViewById(R.id.meta_bar).setBackgroundColor(mMutedColor); updateStatusBar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3319/buggy-version/XYZReader.src.main.java.com.example.xyzreader.ui.ArticleDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "f3b2ff7027685ece07a90e01d76cced5783e530e", "Url": "https://api.github.com/repos/FrederickFernandez/xyz-reader", "Date": "2015-07-27T17:32:03Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tvbrowser.tvbrowser.FragmentFavorites.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tvb != null) { ((org.tvbrowser.tvbrowser.TvBrowser) (tvb)).updateFavoritesMenu(mCurrentFavoriteSelection.containsFavorite()); handler.post(new java.lang.Runnable() { @java.lang.Override public void run() { if ((!(isDetached())) && ((getActivity()) != null)) { getLoaderManager().restartLoader(0, null, org.tvbrowser.tvbrowser.FragmentFavorites.this); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1612/buggy-version/TV-Browser.src.org.tvbrowser.tvbrowser.FragmentFavorites.java", "BodyUseAPI": [], "Fixed commit": "010d4cefd7dbb5c04e2e11b7106ced423c2c63c9", "Url": "https://api.github.com/repos/Thorsten1976/tvbrowserandroid", "Date": "2015-02-20T09:30:18Z"},
{"Line": "=>3546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tvbrowser.devplugin.PluginHandler.getAvailablePlugins()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (plugins != null) { for (org.tvbrowser.devplugin.PluginServiceConnection plugin : plugins) { plugin.loadIcon(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1612/buggy-version/TV-Browser.src.org.tvbrowser.tvbrowser.TvBrowser.java", "BodyUseAPI": [], "Fixed commit": "010d4cefd7dbb5c04e2e11b7106ced423c2c63c9", "Url": "https://api.github.com/repos/Thorsten1976/tvbrowserandroid", "Date": "2015-02-20T09:30:18Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (me.Qball.Wild.Utils.TeleportTarget.cmdUsed.contains(target.getUniqueId())) me.Qball.Wild.Utils.TeleportTarget.cmdUsed.remove(target.getUniqueId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3000/buggy-version/src.me.Qball.Wild.Utils.TeleportTarget.java", "BodyUseAPI": ["org.bukkit.entity.Player.getUniqueId()", "java.util.ArrayList<java.util.UUID>.remove(target.getUniqueId())"], "Fixed commit": "b77ace44fd4157d2b53fe2071b305d641f2e77d3", "Url": "https://api.github.com/repos/Qballl/WildernessTp", "Date": "2017-01-20T16:01:55Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.getSolver().getDecisionPath().getLastDecision()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (dec != (org.chocosolver.solver.search.strategy.decision.RootDecision.ROOT)) { stampIt(dec.getDecisionVariable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8035/buggy-version/src.main.java.org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearch.java", "BodyUseAPI": ["org.chocosolver.solver.search.strategy.decision.Decision.getDecisionVariable()", "org.chocosolver.solver.search.strategy.strategy.ConflictOrderingSearch<V>.stampIt(dec.getDecisionVariable())"], "Fixed commit": "9533cd0d1fecdc72d88c9140f0041cb63a0e732a", "Url": "https://api.github.com/repos/chocoteam/choco-solver", "Date": "2017-09-01T11:40:45Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nbphpcouncil.modules.php.yii.util.YiiDocUtils.getTokenSequence(javax.swing.text.Document)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ts == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/787/buggy-version/src.org.nbphpcouncil.modules.php.yii.editor.completion.YiiFilePathCompletionProvider.java", "BodyUseAPI": [], "Fixed commit": "92ae3c362ee9cdb5fdb4b0eeb890e415d8aec8a7", "Url": "https://api.github.com/repos/nbphpcouncil/nb-yii-plugin", "Date": "2013-06-08T12:28:54Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, kbasesearchengine.events.AccessGroupEventQueue>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (q.isEmpty()) { queues.remove(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6722/buggy-version/lib.src.kbasesearchengine.events.EventQueue.java", "BodyUseAPI": [], "Fixed commit": "f4a64828abfeed24db1afb03fe92f5416bda355d", "Url": "https://api.github.com/repos/kbase/KBaseSearchEngine", "Date": "2017-11-17T03:05:54Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kbasesearchengine.events.EventQueue.getAGID(kbasesearchengine.events.StoredStatusEvent)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(queues.containsKey(id))) { throw new kbasesearchengine.events.exceptions.NoSuchEventException(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6722/buggy-version/lib.src.kbasesearchengine.events.EventQueue.java", "BodyUseAPI": [], "Fixed commit": "f4a64828abfeed24db1afb03fe92f5416bda355d", "Url": "https://api.github.com/repos/kbase/KBaseSearchEngine", "Date": "2017-11-17T03:05:54Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (check) upload();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/729/buggy-version/app.src.main.java.com.example.khaled.takequiz.QuizActivity.java", "BodyUseAPI": [], "Fixed commit": "37ff2709b7b162bdfb3de5159dd89d8d7e658dbb", "Url": "https://api.github.com/repos/ebadawy/sw-project", "Date": "2015-02-14T20:54:40Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(lError)) { setConfigurationState(pLightSheetIndex, ConfigurationState.FAILED); }else if (lError < (mStoppingConditionErrorThreshold.get())) { setConfigurationState(pLightSheetIndex, ConfigurationState.SUCCEEDED); }else { setConfigurationState(pLightSheetIndex, ConfigurationState.ACCEPTABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3439/buggy-version/src.clearcontrol.microscope.lightsheet.calibrator.modules.impl.CalibrationA.java", "BodyUseAPI": [], "Fixed commit": "4e940f50c3928072c9205db1f98b6a676ebcda59", "Url": "https://api.github.com/repos/ClearControl/clearcontrol-lightsheet", "Date": "2017-11-26T17:58:14Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(lError)) { setConfigurationState(ConfigurationState.FAILED); }else if (lError < (mStoppingConditionErrorThreshold.get())) { setConfigurationState(ConfigurationState.SUCCEEDED); }else { setConfigurationState(ConfigurationState.ACCEPTABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3439/buggy-version/src.clearcontrol.microscope.lightsheet.calibrator.modules.impl.CalibrationP.java", "BodyUseAPI": [], "Fixed commit": "4e940f50c3928072c9205db1f98b6a676ebcda59", "Url": "https://api.github.com/repos/ClearControl/clearcontrol-lightsheet", "Date": "2017-11-26T17:58:14Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(lError)) { setConfigurationState(pLightSheetIndex, ConfigurationState.FAILED); }else if (lError < (mStoppingConditionErrorThreshold.get())) { setConfigurationState(pLightSheetIndex, ConfigurationState.SUCCEEDED); }else { setConfigurationState(pLightSheetIndex, ConfigurationState.ACCEPTABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3439/buggy-version/src.clearcontrol.microscope.lightsheet.calibrator.modules.impl.CalibrationZ.java", "BodyUseAPI": [], "Fixed commit": "4e940f50c3928072c9205db1f98b6a676ebcda59", "Url": "https://api.github.com/repos/ClearControl/clearcontrol-lightsheet", "Date": "2017-11-26T17:58:14Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(lError)) { setConfigurationState(pLightSheetIndex, ConfigurationState.FAILED); }else if (lError < (mStoppingConditionErrorThreshold.get())) { setConfigurationState(pLightSheetIndex, ConfigurationState.SUCCEEDED); }else { setConfigurationState(pLightSheetIndex, ConfigurationState.ACCEPTABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3439/buggy-version/src.clearcontrol.microscope.lightsheet.calibrator.modules.impl.CalibrationXY.java", "BodyUseAPI": [], "Fixed commit": "4e940f50c3928072c9205db1f98b6a676ebcda59", "Url": "https://api.github.com/repos/ClearControl/clearcontrol-lightsheet", "Date": "2017-11-26T17:58:14Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.isCommitted())) { session.setAttribute(\"suspended\", \"true\"); response.sendRedirect(\"/eureka_webservice/LoadUserPaymentServlet\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2211/buggy-version/src.servlet.process.user.ProcessLoginServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)"], "Fixed commit": "312993e739edcb84d2d878576859f2222488c6dc", "Url": "https://api.github.com/repos/tweetweetarnold/eureka_webservice", "Date": "2016-02-20T07:30:20Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerCSVAbstract.getType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t == (com.orientechnologies.orient.core.metadata.schema.OType.DECIMAL)) return new java.math.BigDecimal(iValue); else if ((t == (com.orientechnologies.orient.core.metadata.schema.OType.DATE)) || (t == (com.orientechnologies.orient.core.metadata.schema.OType.DATETIME))) return new java.util.Date(java.lang.Long.parseLong(iValue));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5191/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OSQLHelper.java", "BodyUseAPI": [], "Fixed commit": "fea808f9b93728cf2756fe65f5477820d4cec9d3", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-03-02T13:04:29Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((gamesElements.size()) < 10) { gamesElements = doc.select(\"table tbody tr td:first-child\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6542/buggy-version/wtp-server.src.main.java.pt.pxinxas.wtp.server.retrievers.VrecommendedRetriever.java", "BodyUseAPI": [], "Fixed commit": "0449705889cf966c06718aa522e091f6d2913c61", "Url": "https://api.github.com/repos/pedrolsamaral/what-to-play", "Date": "2015-08-24T16:27:19Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((targetMarker != null) && (targetVector != null)) { mtb_cellcounter.CellCntrMarker m = new mtb_cellcounter.CellCntrMarker(targetMarker.getX(), targetMarker.getY(), this.img.getCurrentSlice()); this.currentMarkerVector.addMarker(m); targetVector.removeMarker(targetVector.getVectorIndex(targetMarker)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3976/buggy-version/src.main.java.mtb_cellcounter.CellCntrImageCanvas.java", "BodyUseAPI": ["mtb_cellcounter.CellCntrMarkerVector.getVectorIndex(mtb_cellcounter.CellCntrMarker)", "mtb_cellcounter.CellCntrMarker.getX()", "mtb_cellcounter.CellCntrMarker.getY()", "mtb_cellcounter.CellCntrMarkerVector.removeMarker(targetVector.getVectorIndex(targetMarker))"], "Fixed commit": "1a4f7985580fdbdbaae8fff6bc0af2665d6dac36", "Url": "https://api.github.com/repos/mitobo-hub/mitobo-plugins", "Date": "2015-07-10T15:20:30Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(socket.isConnected())) || (socket.isClosed())) || (!(analyzer.keepConnection()))) { attend.info(\"Analyzer returned. Closing socket\"); socket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5885/buggy-version/src.ar.edu.it.itba.pdc.v2.implementations.proxy.Attend.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "ec5b2addab8f7f732d9c9699e724045ca11a20d3", "Url": "https://api.github.com/repos/mdesanti/TPE-Protos", "Date": "2012-06-01T17:40:08Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (backlogItems == null) { backlogItems = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4431/buggy-version/TeamTaskBoard.app.src.main.java.kmitl.taweewong.teamtaskboard.services.DatabaseService.java", "BodyUseAPI": [], "Fixed commit": "59628b1a788b7fad37265b0f92cdbf1525302ba4", "Url": "https://api.github.com/repos/taweewong/final_project_android", "Date": "2017-11-22T16:49:01Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requireOutputImage) { java.lang.String resImage = ((java.lang.String) (result.get(\"image\"))); java.awt.image.BufferedImage resultImage = ch.unifr.diva.ImageEncoding.decodeBas64(resImage); return new ch.unifr.diva.returnTypes.DivaServicesResponse(resultImage, output, null); }else { return new ch.unifr.diva.returnTypes.DivaServicesResponse(null, output, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8000/buggy-version/src.main.java.ch.unifr.diva.DivaServicesCommunicator.java", "BodyUseAPI": [], "Fixed commit": "722edbbc2b0d11972b236106e9205aefb2b32671", "Url": "https://api.github.com/repos/lunactic/DivaServicesCommunicator", "Date": "2016-03-23T09:59:04Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.LocalDateTime.parse(java.lang.String,java.time.format.DateTimeFormatter)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dateTime.isBefore(java.time.LocalDateTime.now())) errors.add(fieldName, \"Can't be in the past\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1365/buggy-version/src.main.java.pl.com.bottega.cinemac.model.commands.CreateShowingsCommand.java", "BodyUseAPI": [], "Fixed commit": "9c721532671f676b3172eb955ee918cba49e0588", "Url": "https://api.github.com/repos/macieydudek/cinemac", "Date": "2017-04-23T09:12:08Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (weekDay == null) errors.add(\"weekDays\", \"Can't be null\"); else java.time.DayOfWeek.valueOf(weekDay.toUpperCase());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1365/buggy-version/src.main.java.pl.com.bottega.cinemac.model.commands.CreateShowingsCommand.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "java.time.DayOfWeek.valueOf(java.lang.String)"], "Fixed commit": "9c721532671f676b3172eb955ee918cba49e0588", "Url": "https://api.github.com/repos/macieydudek/cinemac", "Date": "2017-04-23T09:12:08Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connectionManager) != null) connectionManager.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6252/buggy-version/client.src.main.java.com.orientechnologies.orient.client.remote.OEngineRemote.java", "BodyUseAPI": [], "Fixed commit": "cda6d0ec8ae79fb573ddfa7dcc78156e3b1b72e4", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-07-08T09:56:16Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Logger.DEBUG) { android.util.Log.d(net.fabiszewski.ulogger.ProviderPreference.TAG, ((\"[current value: \" + (currentIndex)) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7801/buggy-version/app.src.main.java.net.fabiszewski.ulogger.ProviderPreference.java", "BodyUseAPI": [], "Fixed commit": "619d88a7820f3acde4556be3b8ebff0868bd4dde", "Url": "https://api.github.com/repos/bfabiszewski/ulogger-android", "Date": "2017-04-01T12:18:07Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Logger.DEBUG) { android.util.Log.d(net.fabiszewski.ulogger.ProviderPreference.TAG, ((\"[using default: \" + (currentIndex)) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7801/buggy-version/app.src.main.java.net.fabiszewski.ulogger.ProviderPreference.java", "BodyUseAPI": [], "Fixed commit": "619d88a7820f3acde4556be3b8ebff0868bd4dde", "Url": "https://api.github.com/repos/bfabiszewski/ulogger-android", "Date": "2017-04-01T12:18:07Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (Logger.DEBUG) { android.util.Log.d(net.fabiszewski.ulogger.ProviderPreference.TAG, (\"[Providers available: \" + (locManager.getAllProviders()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7801/buggy-version/app.src.main.java.net.fabiszewski.ulogger.ProviderPreference.java", "BodyUseAPI": [], "Fixed commit": "619d88a7820f3acde4556be3b8ebff0868bd4dde", "Url": "https://api.github.com/repos/bfabiszewski/ulogger-android", "Date": "2017-04-01T12:18:07Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Logger.DEBUG) { android.util.Log.d(net.fabiszewski.ulogger.ProviderPreference.TAG, ((\"[preference changed: \" + newValue) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7801/buggy-version/app.src.main.java.net.fabiszewski.ulogger.ProviderPreference.java", "BodyUseAPI": [], "Fixed commit": "619d88a7820f3acde4556be3b8ebff0868bd4dde", "Url": "https://api.github.com/repos/bfabiszewski/ulogger-android", "Date": "2017-04-01T12:18:07Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Logger.DEBUG) { android.util.Log.d(net.fabiszewski.ulogger.LoggerService.TAG, ((((\"[location status for \" + provider) + \" changed: \") + statusString) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7801/buggy-version/app.src.main.java.net.fabiszewski.ulogger.LoggerService.java", "BodyUseAPI": [], "Fixed commit": "619d88a7820f3acde4556be3b8ebff0868bd4dde", "Url": "https://api.github.com/repos/bfabiszewski/ulogger-android", "Date": "2017-04-01T12:18:07Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activityUtils.getCurrentActivityName().contains(name)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/400/buggy-version/robotium-solo.src.main.java.com.robotium.solo.Waiter.java", "BodyUseAPI": [], "Fixed commit": "ea7f42c7a5579989b415063132d661ae50d34c6c", "Url": "https://api.github.com/repos/RobotiumTech/robotium", "Date": "2014-02-02T08:29:02Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getValues(true).equals(getDefaults().getValues(true)))) { saveDefaults(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1776/buggy-version/src.main.java.com.feildmaster.channelchat.configuration.BetterYamlConfiguration.java", "BodyUseAPI": [], "Fixed commit": "c04fed9860de092a8f039d2d0b21749cad967eb8", "Url": "https://api.github.com/repos/ChannelChat/Channel-Chat", "Date": "2011-12-12T19:51:49Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.cam.cl.dtg.segue.dao.content.IContentManager.getContentById(this.contentManager.getCurrentContentSHA(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == c) { return com.google.api.client.util.Lists.newArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7500/buggy-version/src.main.java.uk.ac.cam.cl.dtg.isaac.dao.EventBookingPersistenceManager.java", "BodyUseAPI": [], "Fixed commit": "2d655c72a0b289136b3ed36fca906fae843ce24a", "Url": "https://api.github.com/repos/ucam-cl-dtg/isaac-api", "Date": "2017-02-25T15:48:00Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["msi.gama.runtime.IScope.getAgentScope()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (agent.dead()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2457/buggy-version/msi.gaml.architecture.simplebdi.src.msi.gaml.architecture.simplebdi.SimpleBdiArchitecture.java", "BodyUseAPI": [], "Fixed commit": "3a4b403077a904966de90be58a6030c895c9e39b", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2015-10-29T17:23:05Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["msi.gama.runtime.IScope.getAgentScope()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (agent.dead()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2457/buggy-version/msi.gaml.architecture.simplebdi.src.msi.gaml.architecture.simplebdi.SimpleBdiArchitecture.java", "BodyUseAPI": [], "Fixed commit": "3a4b403077a904966de90be58a6030c895c9e39b", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2015-10-29T17:23:05Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["msi.gama.runtime.IScope.getAgentScope()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (agent.dead()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2457/buggy-version/msi.gaml.architecture.simplebdi.src.msi.gaml.architecture.simplebdi.SimpleBdiArchitecture.java", "BodyUseAPI": [], "Fixed commit": "3a4b403077a904966de90be58a6030c895c9e39b", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2015-10-29T17:23:05Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rs.wasNull()) libraryDilution.setPreMigrationId(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5015/buggy-version/sqlstore.src.main.java.uk.ac.bbsrc.tgac.miso.sqlstore.SQLLibraryDilutionDAO.java", "BodyUseAPI": [], "Fixed commit": "bd716377f5158d2123a4bd4a4ef5627c1c98d831", "Url": "https://api.github.com/repos/TGAC/miso-lims", "Date": "2016-11-29T21:42:30Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.beans.admin.AdminController.getUserFull(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((theModifiedUser.isPropertyUpdatableByUser(property.getKey())) || ((isAdmin()) && (theModifiedUser.isPropertyUpdatableByAdmin(property.getKey())))) { theModifiedUser.setValue(property.getKey(), property.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2255/buggy-version/war-core.src.main.java.com.silverpeas.socialnetwork.myProfil.control.MyProfilSessionController.java", "BodyUseAPI": ["com.stratelia.webactiv.beans.admin.UserFull.setValue(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Fixed commit": "0a111d207b8834e123dce3223d10b87eaf0d6d0b", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Core", "Date": "2015-08-26T09:38:01Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zhaoyan.juyou.AccountHelper.getCurrentAccount(com.zhaoyan.juyou.fragment.WoFragment)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (accountInfo == null) { android.util.Log.e(com.zhaoyan.juyou.fragment.WoFragment.TAG, \"updateAccountInfo accountInfo is null!!!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3782/buggy-version/JuYou.src.com.zhaoyan.juyou.fragment.WoFragment.java", "BodyUseAPI": [], "Fixed commit": "519fe18c093a429213e375d167f6cf88c7776888", "Url": "https://api.github.com/repos/liangPATHofei1100/ZhaoYanJuYou", "Date": "2014-05-09T02:24:51Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sceneInfo.getScnaction().isEmpty())) { java.util.List<com.gdgl.mydata.scene.SceneDevice> sceneDevicesList = com.gdgl.util.UiUtils.parseActionParamsToSceneDevices(sceneInfo.getSid(), sceneInfo.getScnaction()); for (com.gdgl.mydata.scene.SceneDevice sceneDevice : sceneDevicesList) { mSqLiteDatabase.insert(DataHelper.SCENE_DEVICES_TABLE, null, sceneDevice.convertContentValues()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1383/buggy-version/SmartHome.src.com.gdgl.manager.SceneLinkageManager.java", "BodyUseAPI": ["com.gdgl.util.UiUtils.parseActionParamsToSceneDevices(sceneInfo.getSid(),sceneInfo.getScnaction())", "com.gdgl.mydata.scene.SceneInfo.getSid()", "com.gdgl.mydata.scene.SceneInfo.getScnaction()"], "Fixed commit": "5b091f211cd41f466d8d9e6f55e223e9d064cb80", "Url": "https://api.github.com/repos/cuiyiming007/SmartHome", "Date": "2015-06-19T08:26:33Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.gdgl.mydata.EventType.LOCALIASCIEBYPASSZONE) == (event.getType())) { if (event.isSuccess()) { android.os.Bundle bundle = ((android.os.Bundle) (event.getData())); if ((bundle.getString(\"IEEE\").equals(mDevices.getmIeee())) && (bundle.getString(\"EP\").equals(mDevices.getmEP()))) { mDevices.setmOnOffStatus(bundle.getString(\"PARAM\")); mView.post(new java.lang.Runnable() { @java.lang.Override public void run() { setDeviceControlText((mDevices.getmOnOffStatus().equals(\"0\") ? true : false)); } }); } } }else if ((com.gdgl.mydata.EventType.LOCALIASCIEOPERATION) == (event.getType())) { if ((event.isSuccess()) == true) { java.lang.String status = ((java.lang.String) (event.getData())); if ((mDevices.getmModelId().indexOf(DataHelper.One_key_operator)) == 0) { mDevices.setmOnOffStatus(status); mView.post(new java.lang.Runnable() { @java.lang.Override public void run() { setDeviceControlText((mDevices.getmOnOffStatus().equals(\"1\") ? true : false)); } }); } } }else if ((com.gdgl.mydata.EventType.ON_OFF_STATUS) == (event.getType())) { if ((event.isSuccess()) == true) { com.gdgl.mydata.Callback.CallbackResponseType2 data = ((com.gdgl.mydata.Callback.CallbackResponseType2) (event.getData())); if ((data.getDeviceIeee().equals(mDevices.getmIeee())) && (data.getDeviceEp().equals(mDevices.getmEP()))) { if (null != (data.getValue())) { mDevices.setmOnOffStatus(data.getValue()); mView.post(new java.lang.Runnable() { @java.lang.Override public void run() { setDeviceControlText((mDevices.getmOnOffStatus().equals(\"1\") ? true : false)); } }); } } } }else if ((com.gdgl.mydata.EventType.MOVE_TO_LEVEL) == (event.getType())) { if ((event.isSuccess()) == true) { com.gdgl.mydata.Callback.CallbackResponseType2 data = ((com.gdgl.mydata.Callback.CallbackResponseType2) (event.getData())); if (!(data.getDeviceIeee().equals(mDevices.getmIeee()))) { return; } java.lang.String valueString = data.getValue(); if (null != (data.getValue())) { mDevices.setmLevel(valueString); if ((java.lang.Integer.parseInt(valueString)) < 7) { mDevices.setmOnOffStatus(\"0\"); }else { mDevices.setmOnOffStatus(\"1\"); } int level = java.lang.Integer.parseInt(valueString); final int state = (level * 100) / 254; device_seekBar.post(new java.lang.Runnable() { @java.lang.Override public void run() { device_seekBar.setProgress(state); device_seekBar.invalidate(); } }); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1383/buggy-version/SmartHome.src.com.gdgl.drawer.DeviceControlFragment.java", "BodyUseAPI": ["com.gdgl.mydata.Event.isSuccess()", "com.gdgl.mydata.Event.getData()", "com.gdgl.mydata.Event.getType()", "com.gdgl.mydata.Event.isSuccess()", "com.gdgl.mydata.Event.isSuccess()", "com.gdgl.mydata.Event.getData()", "com.gdgl.mydata.Event.getData()", "com.gdgl.mydata.Event.isSuccess()", "com.gdgl.mydata.Event.getType()", "com.gdgl.mydata.Event.getType()", "com.gdgl.mydata.Event.getData()"], "Fixed commit": "5b091f211cd41f466d8d9e6f55e223e9d064cb80", "Url": "https://api.github.com/repos/cuiyiming007/SmartHome", "Date": "2015-06-19T08:26:33Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (googleApiClient.isConnected()) LocationServices.FusedLocationApi.removeLocationUpdates(googleApiClient, this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4709/buggy-version/app.src.main.java.net.exent.flywithme.FlyWithMe.java", "BodyUseAPI": ["LocationServices.FusedLocationApi.removeLocationUpdates(com.google.android.gms.common.api.GoogleApiClient,net.exent.flywithme.FlyWithMe)"], "Fixed commit": "e69007ad107cc19e6df6defa06627de4bad5c2b5", "Url": "https://api.github.com/repos/canidae/FlyWithMe", "Date": "2015-11-16T18:08:20Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (googleApiClient.isConnected()) LocationServices.FusedLocationApi.removeLocationUpdates(googleApiClient, this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4709/buggy-version/app.src.main.java.net.exent.flywithme.fragment.TakeoffList.java", "BodyUseAPI": ["LocationServices.FusedLocationApi.removeLocationUpdates(com.google.android.gms.common.api.GoogleApiClient,net.exent.flywithme.fragment.TakeoffList)"], "Fixed commit": "e69007ad107cc19e6df6defa06627de4bad5c2b5", "Url": "https://api.github.com/repos/canidae/FlyWithMe", "Date": "2015-11-16T18:08:20Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (googleApiClient.isConnected()) LocationServices.FusedLocationApi.removeLocationUpdates(googleApiClient, this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4709/buggy-version/app.src.main.java.net.exent.flywithme.fragment.TakeoffMap.java", "BodyUseAPI": ["LocationServices.FusedLocationApi.removeLocationUpdates(com.google.android.gms.common.api.GoogleApiClient,net.exent.flywithme.fragment.TakeoffMap)"], "Fixed commit": "e69007ad107cc19e6df6defa06627de4bad5c2b5", "Url": "https://api.github.com/repos/canidae/FlyWithMe", "Date": "2015-11-16T18:08:20Z"},
{"Line": "=>2009", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["megamek.common.BombType.getBombTypeFromInternalName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bombType <= (BombType.B_NONE)) || (bombType >= (BombType.B_NUM))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/492/buggy-version/megamek.src.megamek.common.MULParser.java", "BodyUseAPI": [], "Fixed commit": "44223a284d4d4c9ed53f5394ef3b0093fc51839f", "Url": "https://api.github.com/repos/NickAragua/megamek", "Date": "2017-12-22T19:41:12Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (line != null) { final java.lang.String[] types = line.split(\"\\\\|\"); for (int loop = 1; loop < (types.length); loop++) { final java.lang.String type = types[loop].trim(); if ((type.length()) > 0) { final com.googlecode.paradox.metadata.ParadoxField field = fieldList.get((loop - 1)); com.googlecode.paradox.data.ViewData.parseExpression(field, type); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6643/buggy-version/src.main.java.com.googlecode.paradox.data.ViewData.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "2ce9897e0baded3cb736ec847ea6a89155e172ae", "Url": "https://api.github.com/repos/leonhad/paradoxdriver", "Date": "2016-09-30T00:33:35Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (declaringClass.contains(\".\")) { className = declaringClass.substring(((declaringClass.lastIndexOf(\".\")) + 1)); packageName = declaringClass.substring(0, declaringClass.lastIndexOf(\".\")); }else { className = declaringClass; packageName = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3188/buggy-version/src.main.java.org.mintcode.errabbit.core.console.StackTraceGraph.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "4a256ccfb5e946e1ac307672f27a32bf94804c61", "Url": "https://api.github.com/repos/soleaf/ErRabbit", "Date": "2015-11-23T01:49:18Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getPlayer(a.getAllPlayers().get((((int) (java.lang.Math.random())) * ((a.getAllPlayers().size()) - 1))))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (p != null) { boolean spawn = true; if (com.comze_instancelabs.minigamesapi.MinigamesAPI.getAPI().pinstances.get(m).global_lost.containsKey(p.getName())) { p = org.bukkit.Bukkit.getPlayer(a.getAllPlayers().get((((int) (java.lang.Math.random())) * ((a.getAllPlayers().size()) - 1)))); if (p != null) { if (com.comze_instancelabs.minigamesapi.MinigamesAPI.getAPI().pinstances.get(m).global_lost.containsKey(p.getName())) { spawn = false; } }else { spawn = false; } } if (spawn) { com.comze_instancelabs.minigamesapi.util.Util.spawnPowerup(m, a, p.getLocation().clone().add(0.0, 5.0, 0.0), getItemStack()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3086/buggy-version/src.com.comze_instancelabs.mgsplegg.IArena.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "com.comze_instancelabs.minigamesapi.MinigamesAPI.getAPI().pinstances.get(m).global_lost.containsKey(p.getName())"], "Fixed commit": "c782d1e2ab4aaed568fd127d0ceaa41a6424edd5", "Url": "https://api.github.com/repos/MC-Minigames/MGSplegg", "Date": "2014-09-18T17:28:17Z"},
{"Line": "=>681", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((versionDefinitions) != null) { versionDefinitions.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4448/buggy-version/ambari-server.src.main.java.org.apache.ambari.server.api.services.AmbariMetaInfo.java", "BodyUseAPI": [], "Fixed commit": "ac1d5f6785c56211f61e362207f12f7aafeb97ee", "Url": "https://api.github.com/repos/apache/ambari", "Date": "2017-08-30T21:52:54Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wand.curCharges) < (wand.maxCharges)) wand.partialCharge += 0.33F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5071/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.items.weapon.melee.MagesStaff.java", "BodyUseAPI": [], "Fixed commit": "1a690e3fab5548fd156c31f29cd42e5bf4106bfe", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2015-06-18T04:45:37Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["project.model.tourist.Tourist.of(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,project.model.tourist.Source.valueOf(touristSources.get(i)))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.google.common.collect.Lists.newArrayList(touristService.getTouristDao().findAll()).contains(tourist)) { targetTouristList.add(tourist); }else { project.model.tourist.Tourist savedTourist = touristService.saveTourist(tourist); targetTouristList.add(savedTourist); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4066/buggy-version/src.main.java.project.controller.TourController.java", "BodyUseAPI": ["project.service.TouristService.saveTourist(project.model.tourist.Tourist)", "java.util.List<project.model.tourist.Tourist>.add(project.model.tourist.Tourist)"], "Fixed commit": "f321c09ac044e84a54b33d0b335bd7f11f3a580b", "Url": "https://api.github.com/repos/bizianov/crm", "Date": "2016-12-07T21:14:31Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["project.model.hotel.Hotel.of(java.lang.String,project.model.hotel.Rate.valueOf(rate).getRate(),java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.google.common.collect.Lists.newArrayList(hotelService.getHotelDao().findAll()).contains(hotel)) { targetHotel = hotelService.findHotelByName(hotel.getName()); }else { project.model.hotel.Hotel savedHotel = hotelService.saveHotel(hotel); targetHotel = savedHotel; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4066/buggy-version/src.main.java.project.controller.TourController.java", "BodyUseAPI": ["project.service.HotelService.saveHotel(project.model.hotel.Hotel)", "project.service.HotelService.findHotelByName(hotel.getName())", "project.model.hotel.Hotel.getName()"], "Fixed commit": "f321c09ac044e84a54b33d0b335bd7f11f3a580b", "Url": "https://api.github.com/repos/bizianov/crm", "Date": "2016-12-07T21:14:31Z"},
{"Line": "=>921", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (fieldAnnotation != null) { if (!(fieldAnnotation.serialize())) { continue; } if ((fieldAnnotation.name().length()) != 0) { propertyName = fieldAnnotation.name(); if (aliasMap != null) { propertyName = aliasMap.get(propertyName); if (propertyName == null) { continue; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4919/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": ["fieldAnnotation.name().length()", "com.alibaba.fastjson.annotation.JSONField.serialize()", "com.alibaba.fastjson.annotation.JSONField.name()", "com.alibaba.fastjson.annotation.JSONField.name()"], "Fixed commit": "21e98414ef5f3d5a8d4805bb9bdd84ad68de42b9", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2013-05-15T16:08:58Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.runningforlife.jason.SingletonExamples.LazySingletonSafe.sInstance) == null) { com.runningforlife.jason.SingletonExamples.LazySingletonSafe.sInstance = new com.runningforlife.jason.SingletonExamples.LazySingletonSafe(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8405/buggy-version/SingletonExamples.src.main.java.com.runningforlife.jason.SingletonExamples.LazySingletonSafe.java", "BodyUseAPI": [], "Fixed commit": "278cfae9c5691787d62df1bfffa0816900b2acf7", "Url": "https://api.github.com/repos/runningforlife/JavaExamples", "Date": "2017-05-10T13:21:34Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.World.getBlockAt(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (this.gears.containsKey(new com.aleksey.castlegates.types.BlockCoord(block))) return com.aleksey.castlegates.manager.GearManager.PowerResult.CannotDrawGear;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8565/buggy-version/src.main.java.com.aleksey.castlegates.manager.GearManager.java", "BodyUseAPI": [], "Fixed commit": "1133e542b11cd3ca2fae55310a3a3b4c75c1bd17", "Url": "https://api.github.com/repos/iykHvfIvfR/CastleGates", "Date": "2016-06-19T04:51:10Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.aleksey.castlegates.CastleGates.getCitadelManager().canInteract(players, block.getLocation()))) { event.getPlayer().sendMessage(((org.bukkit.ChatColor.RED) + \"Gear\")); }else if ((gear.getLink()) == null) { event.getPlayer().sendMessage(((org.bukkit.ChatColor.GREEN) + \"Gear not linked\")); if ((gear.getBrokenLink()) != null) { event.getPlayer().sendMessage(((((org.bukkit.ChatColor.GREEN) + \"But contains \") + (gear.getBrokenLink().getBlocks().size())) + \" drawn blocks\")); } }else { com.aleksey.castlegates.types.GearState gear2 = ((gear.getLink().getGear1()) == gear) ? gear.getLink().getGear2() : gear.getLink().getGear1(); event.getPlayer().sendMessage((((((((org.bukkit.ChatColor.GREEN) + \"Gear linked to gear at x = \") + (gear2.getCoord().getX())) + \", y = \") + (+(gear2.getCoord().getY()))) + \", z = \") + (+(gear2.getCoord().getZ())))); if (gear.getLink().isDrawn()) { event.getPlayer().sendMessage(((org.bukkit.ChatColor.GREEN) + \"Link is in drawn state\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8565/buggy-version/src.main.java.com.aleksey.castlegates.manager.CastleGatesManager.java", "BodyUseAPI": [], "Fixed commit": "1133e542b11cd3ca2fae55310a3a3b4c75c1bd17", "Url": "https://api.github.com/repos/iykHvfIvfR/CastleGates", "Date": "2016-06-19T04:51:10Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(socket instanceof javax.net.ssl.SSLSocket)) socket.shutdownInput();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1379/buggy-version/server.src.main.java.com.orientechnologies.orient.server.OClientConnectionManager.java", "BodyUseAPI": ["java.net.Socket.shutdownInput()"], "Fixed commit": "0412ea6b8266b93945646831262bde8f411afdc3", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-10-11T18:19:06Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(socket instanceof javax.net.ssl.SSLSocket)) socket.shutdownInput();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1379/buggy-version/server.src.main.java.com.orientechnologies.orient.server.OClientConnectionManager.java", "BodyUseAPI": ["java.net.Socket.shutdownInput()"], "Fixed commit": "0412ea6b8266b93945646831262bde8f411afdc3", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-10-11T18:19:06Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (html == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2231/buggy-version/app.src.main.java.Service.LoginStatusRegex.java", "BodyUseAPI": [], "Fixed commit": "c938024a8b5325daf0f75e96ecbb69d0c6109066", "Url": "https://api.github.com/repos/whatwewant/DomPortal", "Date": "2014-12-13T03:43:41Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (words[i].toLowerCase().equals(ParserString.NORMAL_PRIORITY)) { input.setPriority(ParserString.NORMAL_PRIORITY_CHAR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6493/buggy-version/src.ticker.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "1ff69e51a55ca8c609577a6a1983bf4776e7db00", "Url": "https://api.github.com/repos/cs2103aug2014-w15-3J/Ticker", "Date": "2014-11-10T08:20:58Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["environment.getEnv(com.laytonsmith.core.environments.CommandHelperEnvironment.class).GetPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mcp == null) { throw new com.laytonsmith.core.exceptions.ConfigRuntimeException(\"No player was specified\", Exceptions.ExceptionType.PlayerOfflineException, t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7077/buggy-version/src.main.java.com.laytonsmith.core.functions.Permissions.java", "BodyUseAPI": [], "Fixed commit": "b0c1d3b9db6865e0ea4a42a22a05c22864654041", "Url": "https://api.github.com/repos/sk89q/commandhelper", "Date": "2012-10-24T21:50:11Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mApplication.getLocationLatitude()) != null) && ((mApplication.getLocationLongitude()) != null)) { updateItems(null); }else { mSwipeRefreshLayout.setRefreshing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3904/buggy-version/app.src.main.java.it.returntrue.revalue.ui.ListFragment.java", "BodyUseAPI": [], "Fixed commit": "4c94eb6e4af24eb879c6e97b7efcb1bdaef139d2", "Url": "https://api.github.com/repos/aleripe/Revalue", "Date": "2016-05-25T17:07:14Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.javiersantos.whatsappbetaupdater.BuildConfig.DEBUG_MODE) { return false; }else { com.javiersantos.whatsappbetaupdater.object.Version installed = new com.javiersantos.whatsappbetaupdater.object.Version(installedVersion); com.javiersantos.whatsappbetaupdater.object.Version latest = new com.javiersantos.whatsappbetaupdater.object.Version(latestVersion); return (installed.compareTo(latest)) < 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2603/buggy-version/app.src.main.java.com.javiersantos.whatsappbetaupdater.util.UtilsWhatsApp.java", "BodyUseAPI": [], "Fixed commit": "12a48b8d30c710136027f2638100dfeb11b38b48", "Url": "https://api.github.com/repos/javiersantos/WhatsAppBetaUpdater", "Date": "2016-01-24T10:40:38Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(effects.isEmpty())) { for (org.bukkit.potion.PotionEffect effect : effects) meta.addCustomEffect(effect, false); meta.setMainEffect(effects.get(0).getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2228/buggy-version/src.main.java.net.dandielo.core.items.serialize.core.Potion.java", "BodyUseAPI": ["java.util.List<org.bukkit.potion.PotionEffect>.get(int)", "effects.get(0).getType()", "org.bukkit.inventory.meta.PotionMeta.setMainEffect(effects.get(0).getType())"], "Fixed commit": "0e8ceac2f6f970ba1d7c03ce9799cb86aec7a388", "Url": "https://api.github.com/repos/Dandielo/dtlCore", "Date": "2016-03-03T18:32:05Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((child.kind) == (wyil.lang.Type.K_VOID)) { automata.states[index] = new wyil.util.type.Automata.State(wyil.lang.Type.K_VOID); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3450/buggy-version/src.wyil.util.type.TypeAlgorithms.java", "BodyUseAPI": [], "Fixed commit": "ccd272f5e5aa365f268a750754d57eb3c21a2537", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-09-15T07:07:04Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.libertymutual.goforcode.wimp.repositories.ActorRepository.findOne(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (actor == null) { throw new com.libertymutual.goforcode.wimp.api.StuffNotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7096/buggy-version/src.main.java.com.libertymutual.goforcode.wimp.api.ActorApiController.java", "BodyUseAPI": [], "Fixed commit": "0b55f30548fe2f9a6e87a21307d3750fbc0492e0", "Url": "https://api.github.com/repos/deckerjames/wimp", "Date": "2017-08-30T15:05:50Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view.getId()) == (R.id.ll_none)) { android.content.Intent intent = new android.content.Intent(getActivity(), com.lk.notes.EditNoteActivity.class); startActivityForResult(intent, com.lk.notes.Fragment.NotesFragment.Change); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3101/buggy-version/Notes.app.src.main.java.com.lk.notes.Fragment.NotesFragment.java", "BodyUseAPI": [], "Fixed commit": "81b3476a5ddde1011035a40e5c0e8e8195aee939", "Url": "https://api.github.com/repos/Lkxxx/Notes", "Date": "2015-07-01T11:12:25Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { builder.setColor(android.graphics.Color.rgb(0, 172, 193)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3101/buggy-version/Notes.app.src.main.java.com.lk.notes.receiver.ClockReceiver.java", "BodyUseAPI": [], "Fixed commit": "81b3476a5ddde1011035a40e5c0e8e8195aee939", "Url": "https://api.github.com/repos/Lkxxx/Notes", "Date": "2015-07-01T11:12:25Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) { com.kkbox.toolkit.utils.KKDebug.i(((getClass().getSimpleName()) + \" is detach with activity\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2744/buggy-version/src.com.kkbox.toolkit.app.KKFragment.java", "BodyUseAPI": [], "Fixed commit": "231068bbef94cf821e3091ed492dac334c99701d", "Url": "https://api.github.com/repos/KKBOX/android_kktoolkit", "Date": "2017-08-23T03:36:47Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scanner.hasNextLine()) contents.append(java.lang.System.lineSeparator());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4988/buggy-version/Project_1.src.BufMgr.java", "BodyUseAPI": [], "Fixed commit": "f0d8e4ef3b6188220181a0c150920b00914eab2f", "Url": "https://api.github.com/repos/mikebean233/CSCD427_Assignments", "Date": "2017-04-17T21:45:41Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.engagepoint.filters.LoginFilter.history.contains(requestUrl))) { com.engagepoint.filters.LoginFilter.history.addLast(requestUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7190/buggy-version/cmis-types-manager-web.src.main.java.com.engagepoint.filters.LoginFilter.java", "BodyUseAPI": ["java.util.Deque<java.lang.String>.addLast(java.lang.String)"], "Fixed commit": "ea22bca6c8a69329270278f023007c328fcb94c4", "Url": "https://api.github.com/repos/engagepoint/cmis-types-manager-b", "Date": "2013-12-25T11:19:02Z"},
{"Line": "=>1883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"railo.extension.io.cache.eh.EHCacheLite\".equals(clazzName)) cacheClazz = railo.runtime.cache.eh.EHCacheLite.class; else cacheClazz = railo.commons.lang.ClassUtil.loadClass(config.getClassLoader(), clazzName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3565/buggy-version/railo-java.railo-core.src.railo.runtime.config.ConfigWebFactory.java", "BodyUseAPI": ["railo.commons.lang.ClassUtil.loadClass(config.getClassLoader(),java.lang.String)"], "Fixed commit": "e2901fc0d672b9149fbc233b8be05b48e2571727", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-02-28T08:55:35Z"},
{"Line": "=>1877", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (clazzName != null) clazzName = clazzName.trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3565/buggy-version/railo-java.railo-core.src.railo.runtime.config.ConfigWebFactory.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "e2901fc0d672b9149fbc233b8be05b48e2571727", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-02-28T08:55:35Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weaponTemplate) { ((com.madinnovations.rmu.data.entities.item.WeaponTemplate) (itemTemplate)).setAttack(new com.madinnovations.rmu.data.entities.combat.Attack(in.nextInt())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8859/buggy-version/app.src.main.java.com.madinnovations.rmu.data.dao.item.serializers.ItemTemplateSerializer.java", "BodyUseAPI": [], "Fixed commit": "24e27dfe3a631c6a048e149eca177862d630111a", "Url": "https://api.github.com/repos/MADMusic4001/RMU", "Date": "2017-08-11T02:55:22Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.mylyn.modeling.context.DomainDelegatedStructureBridge.getObjectForHandle(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (object != null) { for (java.lang.Class<?> domainClass : getDomainContextBridge().getDomainNodeClasses()) { if (domainClass.isAssignableFrom(object.getClass())) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8746/buggy-version/org.eclipse.mylyn.modeling.core.src.org.eclipse.mylyn.modeling.context.DomainDelegatedStructureBridge.java", "BodyUseAPI": ["java.lang.Class<?>.isAssignableFrom(java.lang.Class<? extends java.lang.Object>)", "java.lang.Object.getClass()"], "Fixed commit": "e4396b3a7b595821c32339cfd66fe33346aa379b", "Url": "https://api.github.com/repos/MilesParker/mylyn.incubator", "Date": "2011-08-29T19:31:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mciProv) == null) mciProv = new org.magic.api.pictures.impl.MagicCardInfoPicturesProvider();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7557/buggy-version/src.org.magic.api.pictures.impl.GathererPicturesProvider.java", "BodyUseAPI": [], "Fixed commit": "dad815ea923a2e3901bf9a46d00787b3fbfd1885", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-09-25T17:51:36Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(word))) { tts = new android.speech.tts.TextToSpeech(mActivity, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7360/buggy-version/app.src.main.java.com.example.crossdsection.readathon.activities.QuestionActivity.java", "BodyUseAPI": [], "Fixed commit": "7d1a32a8eadc29edac9d621122647cf21b87079c", "Url": "https://api.github.com/repos/crossdsection/READathon", "Date": "2017-12-17T06:03:51Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((d2[0]) > 0) && ((d2[1]) > 0)) && ((d2[2]) > 0)) { inputLow = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1826/buggy-version/src.main.java.org.encog.ml.model.config.FeedforwardConfig.java", "BodyUseAPI": [], "Fixed commit": "3f8e57c8a4c4f1ccf1a916c5dd83f6520802c535", "Url": "https://api.github.com/repos/encog/encog-java-core", "Date": "2015-02-16T18:04:53Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new java.io.File(\"MyIntegrationTests-soapui-project.xml\").exists()) { runner.setProjectFile(\"MyIntegrationTests-soapui-project.xml\"); }else { runner.setProjectFile(\"src/main/resources/MyIntegrationTests-soapui-project.xml\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5932/buggy-version/src.main.java.CRMService.java", "BodyUseAPI": [], "Fixed commit": "5310307f4a54a5e531b5288117b3da0804e3361c", "Url": "https://api.github.com/repos/dunse/my-integration-tests", "Date": "2012-11-18T11:27:37Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (android.R.id.home)) { finish(); }else if (id == (R.id.action_logout)) { com.parse.ParseUser currentUser = com.parse.ParseUser.getCurrentUser(); currentUser.logOut(); android.content.Intent intent = new android.content.Intent(this, cs121.jam.chirps.LoginActivity.class); startActivity(intent); finish(); }else if (id == (R.id.delete)) { cs121.jam.chirps.ChirpDetailsActivity.DeleteChirpDialog deleteChirpDialog = new cs121.jam.chirps.ChirpDetailsActivity.DeleteChirpDialog(this); }else if (id == (R.id.favorite_toggle)) { try { com.parse.ParseUser currentUser = com.parse.ParseUser.getCurrentUser(); boolean fav = chirp.isFavoriting(currentUser); if (fav) { item.setIcon(R.drawable.btn_star_big_off); item.setTitle(\"Favorite\"); chirp.removeFromFavorites(currentUser); }else { item.setIcon(R.drawable.btn_star_big_on); item.setTitle(\"Un-Favorite\"); chirp.addToFavorites(currentUser); } } catch (org.json.JSONException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6046/buggy-version/app.src.main.java.cs121.jam.chirps.ChirpDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "e3662a871a0dde984d47d73cf69d753ca9fac240", "Url": "https://api.github.com/repos/ghostling/Chirps", "Date": "2014-12-02T18:04:59Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(visible)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7741/buggy-version/src.com.skorulis.heli2.ui.Button.java", "BodyUseAPI": [], "Fixed commit": "88974f363dfee4b6c2d0954679b7d3ead9ebd857", "Url": "https://api.github.com/repos/skorulis/Forplay-support", "Date": "2011-05-28T11:42:33Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.moodlogger.charts.LineChartHelper.getEntries()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (entries.isEmpty()) { entries.add(new com.github.mikephil.charting.data.Entry(0.0F, 0.0F)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8851/buggy-version/app.src.main.java.com.moodlogger.charts.LineChartHelper.java", "BodyUseAPI": ["java.util.List<com.github.mikephil.charting.data.Entry>.add(com.github.mikephil.charting.data.Entry)"], "Fixed commit": "aa22f17227d180db0b1b8bd8507a9deab534c3ab", "Url": "https://api.github.com/repos/nbrowning1/miniature-sniffle-COM555-mobile", "Date": "2017-03-29T23:36:23Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newUser[0]) { user.delete().addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<java.lang.Void>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<java.lang.Void> task) { if (task.isSuccessful()) { android.util.Log.d(\"Delete User\", \"User account deleted.\"); } } }); }else { com.firebase.ui.auth.AuthUI.getInstance().signOut(this).addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<java.lang.Void>() { public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<java.lang.Void> task) { android.widget.Toast.makeText(teamlite.xyzrewardz.MainActivity.this, \"Signed Out\", Toast.LENGTH_SHORT).show(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/830/buggy-version/app.src.main.java.teamlite.xyzrewardz.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f083079e052896bedfc130ff5c631b00ef830d94", "Url": "https://api.github.com/repos/MayankJasoria/XYZRewardz", "Date": "2017-09-24T18:58:58Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (opts.isShowVersion()) { java.lang.System.out.println((\"Stew \" + (stew5.App.getVersion()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1410/buggy-version/src.main.java.stew5.App.java", "BodyUseAPI": [], "Fixed commit": "a72172d0201513d6cc7030d146c624062db08fdc", "Url": "https://api.github.com/repos/argius/Stew5", "Date": "2017-05-06T07:45:23Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(groupData.isEmpty())) { if ((group) == null) { groupContactData.addAll(groupManager.getGroup(1).getContacts()); }else { groupContactData.addAll(groupManager.getGroup(group.getIdGroup()).getContacts()); } tableGroupContact.setItems(groupContactData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2300/buggy-version/src.main.java.app.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "89dc4302248df3726ad7f97fd5014ad2285fde87", "Url": "https://api.github.com/repos/MerkulovAA/HomeWork", "Date": "2017-07-14T09:37:22Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entity.getLocation().getWorld().getName().equalsIgnoreCase(location.getWorld().getName())) { if ((entity.getLocation().distance(location)) < 333) { org.bukkit.craftbukkit.v1_7_R3.entity.CraftPlayer craftPlayer = ((org.bukkit.craftbukkit.v1_7_R3.entity.CraftPlayer) (entity)); craftPlayer.getHandle().playerConnection.sendPacket(getParticle(location, xStack, yStack, zStack, speed, count)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6411/buggy-version/src.com.comze_instancelabs.minigamesparty.nms.NMSFunctions178.java", "BodyUseAPI": ["entity.getLocation().distance(org.bukkit.Location)", "org.bukkit.entity.Entity.getLocation()", "com.comze_instancelabs.minigamesparty.nms.NMSFunctions178.getParticle(org.bukkit.Location,int,int,int,float,int)", "craftPlayer.getHandle().playerConnection.sendPacket(net.minecraft.server.v1_7_R3.PacketPlayOutWorldParticles)"], "Fixed commit": "23f0cd00ef5d0d4bfa8ccd077780c5bc4ff776f3", "Url": "https://api.github.com/repos/instance01/MinigamesParty", "Date": "2014-07-26T07:21:57Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.pikater.shared.quartz.PikaterJobScheduler.init(org.pikater.shared.AppHelper.getAbsolutePath(org.pikater.shared.AppHelper.getAbsoluteWEBINFCLASSESPath(), org.pikater.shared.quartz.PikaterJobScheduler.class)))) { throw new java.lang.IllegalStateException(\"Application won't serve until the above errors are fixed.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3163/buggy-version/src.org.pikater.web.StartupAndQuitListener.java", "BodyUseAPI": [], "Fixed commit": "17a894e3c3a4bfce162206c29b15183314b75d9b", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-05-26T14:36:51Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((newTaskDetails == null) || (newTaskDetails.isEmpty())) { this.taskDetails = ParserConstants.STRING_EMPTY; }else { newTaskDetails = Parser.IndexParser.cleanupExtraWhitespace(newTaskDetails); this.taskDetails = newTaskDetails; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/947/buggy-version/src.Parser.IndexParser.java", "BodyUseAPI": ["Parser.IndexParser.cleanupExtraWhitespace(java.lang.String)"], "Fixed commit": "a6d31063f07beabf20c72a70bd9e34a1ae6199d4", "Url": "https://api.github.com/repos/cs2103jan2016-t09-2j/main", "Date": "2016-03-27T17:23:03Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(person.getPlans().contains(plan))) person.addPlan(plan);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2075/buggy-version/playgrounds.thibautd.src.main.java.playground.thibautd.negotiation.offlinecoalition.SimpleJointPlanCreator.java", "BodyUseAPI": ["org.matsim.api.core.v01.population.Person.addPlan(org.matsim.api.core.v01.population.Plan)"], "Fixed commit": "45d4b99870403994a855d5dd12c91bf85cc57be0", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2017-01-12T15:44:31Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.length) > 0) { logCounts.put(LogType.TERTIARY.name(), 0L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8991/buggy-version/framework.sics.org.gumtree.sics.core.src.org.gumtree.sics.io.SicsLogManager.java", "BodyUseAPI": [], "Fixed commit": "5f34a815f2c6548986c172b9a29d110b5b87f744", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2014-06-02T06:29:32Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.length) > 0) { logCounts.put(LogType.SECONDARY.name(), 0L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8991/buggy-version/framework.sics.org.gumtree.sics.core.src.org.gumtree.sics.io.SicsLogManager.java", "BodyUseAPI": [], "Fixed commit": "5f34a815f2c6548986c172b9a29d110b5b87f744", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2014-06-02T06:29:32Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isValid) { java.lang.Object repoEntry = org.olat.course.nodes.video.VideoEditController.getVideoReference(moduleConfiguration, false); if (repoEntry == null) { isValid = false; org.olat.course.nodes.video.VideoEditController.removeVideoReference(moduleConfiguration); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4510/buggy-version/src.main.java.org.olat.course.nodes.video.VideoEditController.java", "BodyUseAPI": [], "Fixed commit": "f7651ae07752bc2864b381f32ea065ec28e92c81", "Url": "https://api.github.com/repos/klemens/openolat", "Date": "2016-04-25T11:37:29Z"},
{"Line": "=>4201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.expireTimeUnlocked()) > 0) cctx.ttl().removeTrackedEntry(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2438/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.GridCacheMapEntry.java", "BodyUseAPI": [], "Fixed commit": "1938a17b01fac1e08c30011180bbcc3ed7374d83", "Url": "https://api.github.com/repos/svladykin/ignite", "Date": "2016-10-11T11:50:18Z"},
{"Line": "=>4259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.expireTimeUnlocked()) > 0) cctx.ttl().removeTrackedEntry(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2438/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.GridCacheMapEntry.java", "BodyUseAPI": [], "Fixed commit": "1938a17b01fac1e08c30011180bbcc3ed7374d83", "Url": "https://api.github.com/repos/svladykin/ignite", "Date": "2016-10-11T11:50:18Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.debug.core.ILaunchManager.getLaunchConfiguration(config.getMemento())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (conf != null) { org.eclipse.debug.ui.DebugUITools.buildAndLaunch(conf, config.getMode(), monitor); try { java.lang.Thread.sleep(((config.getDelay()) * 1000)); } catch (java.lang.InterruptedException e) { break; } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/128/buggy-version/CompositeLauncher.src.compositelauncher.actions.launching.CompositeLauncherDelegate.java", "BodyUseAPI": ["org.eclipse.debug.ui.DebugUITools.buildAndLaunch(org.eclipse.debug.core.ILaunchConfiguration,config.getMode(),org.eclipse.core.runtime.IProgressMonitor)"], "Fixed commit": "502475db51737a7c69ce0ec396b16a1c7cf143b8", "Url": "https://api.github.com/repos/tdq/CompositeLauncher", "Date": "2014-04-05T15:38:04Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((logWriter) != null) logWriter.dbWriterLog(reactant.get(\"UNIQUE-ID\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/238/buggy-version/src.checkpoint.andela.db.DBWriter.java", "BodyUseAPI": [], "Fixed commit": "fff17bd57fd88a0a9858d4540d4cbca72923035f", "Url": "https://api.github.com/repos/o-kamiye/FileReader", "Date": "2015-10-06T11:45:31Z"},
{"Line": "=>916", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((self.getStatus()) == (PrimaryStorageStatus.Disconnected)) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(operr(\"cannot maitain disconnected primary storage\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7752/buggy-version/storage.src.main.java.org.zstack.storage.primary.PrimaryStorageBase.java", "BodyUseAPI": [], "Fixed commit": "ae8a4829e9b1f419fcf8f54919c991d8be227286", "Url": "https://api.github.com/repos/HeathHose/zstack", "Date": "2017-04-09T12:37:13Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loader.GameLoader.getInstance().getSpielerid()) == 1) { documents.addAll(storage.MongoDBConnector.getInstance().getMongoDatabase().getCollection(\"CardToPlayer\").find(new org.bson.Document(\"playername\", \"player1\")).into(new java.util.ArrayList())); }else if ((loader.GameLoader.getInstance().getSpielerid()) == 2) { documents.addAll(storage.MongoDBConnector.getInstance().getMongoDatabase().getCollection(\"CardToPlayer\").find(new org.bson.Document(\"playername\", \"player2\")).into(new java.util.ArrayList())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5801/buggy-version/src.loader.AllCards.java", "BodyUseAPI": [], "Fixed commit": "65a578c897e8439a172ad241d85583cb6cfca577", "Url": "https://api.github.com/repos/ModdyLP/rpgcardgameFMCDC", "Date": "2017-08-17T12:54:46Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == (com.beardedhen.androidbootstrap.api.defaults.DefaultBootstrapTheme.LINK)) { return android.graphics.Color.argb(0, 0, 0, 0); }else { int c = context.getResources().getColor(defaultColor); return android.graphics.Color.argb(((int) (0.65 * 255)), android.graphics.Color.red(c), android.graphics.Color.green(c), android.graphics.Color.blue(c)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7571/buggy-version/AndroidBootstrap.src.main.java.com.beardedhen.androidbootstrap.api.defaults.DefaultBootstrapTheme.java", "BodyUseAPI": [], "Fixed commit": "9643e589c5c76de3f16aea52e4ce32d7a5734cc6", "Url": "https://api.github.com/repos/playbar/Android-Bootstrap", "Date": "2015-09-07T17:20:32Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (whereCount > 1) { where.and(whereCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4906/buggy-version/modules.core.src.main.java.org.mycontroller.standalone.db.dao.BaseAbstractDaoImpl.java", "BodyUseAPI": ["com.j256.ormlite.stmt.Where<Tdao, Tid>.and(int)"], "Fixed commit": "4498cee6b6bccc342917bb5d9bd5562d0ed85c67", "Url": "https://api.github.com/repos/mycontroller-org/mycontroller", "Date": "2017-01-19T08:00:54Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.utopia.lijiang.global.Status.getCurrentStatus().getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (loc == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2837/buggy-version/src.com.utopia.lijiang.LijiangOverlayActivity.java", "BodyUseAPI": [], "Fixed commit": "4d6f181937dce1a38cb026b85a7dd390df174b3c", "Url": "https://api.github.com/repos/chao-zhou/Lijiang", "Date": "2012-04-10T09:29:08Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uiElements.getParent()) == null) { this.addView(uiElements); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/351/buggy-version/Operation-Valkyrie.src.valkyrie.ui.UpdateableRelativeLayout.java", "BodyUseAPI": ["valkyrie.ui.UpdateableRelativeLayout.addView(android.widget.TableLayout)"], "Fixed commit": "9f0478522caa66db8628eda8e3f678dcd2588022", "Url": "https://api.github.com/repos/MiloTischler/Operation-Valkyrie", "Date": "2012-06-10T12:38:25Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input[(offset + 6)]) != 0) { this.wakeTurbulence = new java.lang.String(input, (offset + 6), 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1540/buggy-version/src.main.java.jlg.jade.asterix.cat150.Cat150Item120.java", "BodyUseAPI": [], "Fixed commit": "aab8c461b19e6e584414cc3e6b9de6a9d39c1753", "Url": "https://api.github.com/repos/jlgconsulting/JADE-JavaAsterixDecoderEncoder", "Date": "2016-10-18T13:58:23Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((readEntity.getTyp()) == (org.apache.hadoop.hive.ql.hooks.Entity.Type.TABLE)) || ((readEntity.getTyp()) == (org.apache.hadoop.hive.ql.hooks.Entity.Type.PARTITION))) { java.util.List<org.apache.hadoop.hive.metastore.api.FieldSchema> cols = readEntity.getTable().getCols(); if ((cols != null) && (!(cols.isEmpty()))) { addColumnHierarchy(inputHierarchy, readEntity, cols); }else { java.util.List<org.apache.sentry.core.model.db.DBModelAuthorizable> entityHierarchy = new java.util.ArrayList<org.apache.sentry.core.model.db.DBModelAuthorizable>(); entityHierarchy.add(hiveAuthzBinding.getAuthServer()); entityHierarchy.addAll(getAuthzHierarchyFromEntity(readEntity)); inputHierarchy.add(entityHierarchy); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2871/buggy-version/sentry-binding.sentry-binding-hive.src.main.java.org.apache.sentry.binding.hive.HiveAuthzBindingHook.java", "BodyUseAPI": ["org.apache.sentry.binding.hive.HiveAuthzBindingHook.addColumnHierarchy(java.util.List<java.util.List<org.apache.sentry.core.model.db.DBModelAuthorizable>>,org.apache.hadoop.hive.ql.hooks.ReadEntity,java.util.List<org.apache.hadoop.hive.metastore.api.FieldSchema>)", "readEntity.getTable().getCols()", "org.apache.hadoop.hive.ql.hooks.ReadEntity.getTable()", "java.util.List<org.apache.sentry.core.model.db.DBModelAuthorizable>.addAll(java.util.List<org.apache.sentry.core.model.db.DBModelAuthorizable>)", "org.apache.sentry.binding.hive.HiveAuthzBindingHook.getAuthzHierarchyFromEntity(org.apache.hadoop.hive.ql.hooks.ReadEntity)"], "Fixed commit": "f27b166235222439840bd4472f3392247846e29c", "Url": "https://api.github.com/repos/intel-hadoop/incubator-sentry", "Date": "2014-08-12T07:32:48Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nums[i]) != target) { nums[(index++)] = nums[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2286/buggy-version/src.main.linearlist.RemoveElement.java", "BodyUseAPI": [], "Fixed commit": "2c4546944554f2bee04979ea8e1c8d2a3a88ec13", "Url": "https://api.github.com/repos/RealWorld-Yuchen-Yang/DataStructuresAndAlgorithms", "Date": "2017-07-23T15:00:32Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.parostroj.timetable.model.events.Event.getObject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((currentTrain.getPreviousJoinedTrain()) != null) { updatePreviousTrain(currentTrain, currentTrain.getPreviousJoinedTrain(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5639/buggy-version/grafikon-model.src.main.java.net.parostroj.timetable.model.validators.PreviousNextTrainValidator.java", "BodyUseAPI": ["net.parostroj.timetable.model.Train.getPreviousJoinedTrain()", "net.parostroj.timetable.model.validators.PreviousNextTrainValidator.updatePreviousTrain(net.parostroj.timetable.model.Train,currentTrain.getPreviousJoinedTrain(),<nulltype>)"], "Fixed commit": "c1b495ad136d82e66aa770e515fb2962ba67fcfb", "Url": "https://api.github.com/repos/jub77/grafikon", "Date": "2017-09-21T11:22:59Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.parostroj.timetable.model.events.Event.getObject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((currentTrain.getNextJoinedTrain()) != null) { updateNextTrain(currentTrain, currentTrain.getNextJoinedTrain(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5639/buggy-version/grafikon-model.src.main.java.net.parostroj.timetable.model.validators.PreviousNextTrainValidator.java", "BodyUseAPI": ["net.parostroj.timetable.model.validators.PreviousNextTrainValidator.updateNextTrain(net.parostroj.timetable.model.Train,currentTrain.getNextJoinedTrain(),<nulltype>)", "net.parostroj.timetable.model.Train.getNextJoinedTrain()"], "Fixed commit": "c1b495ad136d82e66aa770e515fb2962ba67fcfb", "Url": "https://api.github.com/repos/jub77/grafikon", "Date": "2017-09-21T11:22:59Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.bergerkiller.bukkit.tc.EntityUtil.isMob(event.getEntered())) { com.bergerkiller.bukkit.tc.CollisionMode x = member.getGroup().getProperties().getCollisionMode(event.getEntered()); if (x != (CollisionMode.ENTER)) { event.setCancelled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7484/buggy-version/src.main.java.com.bergerkiller.bukkit.tc.TCListener.java", "BodyUseAPI": ["org.bukkit.event.vehicle.VehicleEnterEvent.setCancelled(boolean)", "member.getGroup().getProperties().getCollisionMode(event.getEntered())", "org.bukkit.event.vehicle.VehicleEnterEvent.getEntered()"], "Fixed commit": "887d1212ce987f59acd6bd324aa28ade93e094c9", "Url": "https://api.github.com/repos/bergerhealer/TrainCarts", "Date": "2017-03-31T20:50:39Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) { new com.cundong.izhihu.task.GetNewsDetailTask(getActivity(), this).executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR, java.lang.String.valueOf(mNewsId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1877/buggy-version/src.com.cundong.izhihu.fragment.NewsDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "52596269c88b88dba3ea29375ea8dc37909dc95f", "Url": "https://api.github.com/repos/cundong/ZhihuPaper", "Date": "2014-10-01T13:09:37Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1877/buggy-version/src.com.cundong.izhihu.fragment.NewsDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "52596269c88b88dba3ea29375ea8dc37909dc95f", "Url": "https://api.github.com/repos/cundong/ZhihuPaper", "Date": "2014-10-01T13:09:37Z"},
{"Line": "=>708", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filterValue.contains(\"Grade \")) { newFilterVal = filterValue.replaceAll(\"Grade \", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1633/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.search.AbstractSearchView.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "5e4b1e17a168fab2dee30b97e95dd6991f8f8c7a", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2014-12-24T13:29:34Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tlb.server.repo.SetRepo.sortedListFor(java.util.List<tlb.domain.SuiteNamePartitionEntry>)", "tlb.server.repo.SetRepo.sortedList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((givenList.size()) != (serverCopy.size())) { return error; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8692/buggy-version/server.src.tlb.server.repo.SetRepo.java", "BodyUseAPI": [], "Fixed commit": "ffe39eaba570e52f4949f48e4e9ea0fb734dc272", "Url": "https://api.github.com/repos/test-load-balancer/tlb", "Date": "2011-12-09T00:41:58Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dp.getDay().getEnd()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((a.getEnd()) <= dayEnd) { gui.main.AppointmentBlock app = new gui.main.AppointmentBlock(a, dp, main); add(app); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/343/buggy-version/IFC_Source_Code.src.gui.main.RoomSubpanel.java", "BodyUseAPI": [], "Fixed commit": "bdc197eb42e9c01cc040dc00323ad0d397739a84", "Url": "https://api.github.com/repos/luyuzheng/IFC-Scheduler", "Date": "2013-01-26T22:08:34Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, java.util.concurrent.ScheduledFuture<?>>.remove(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (scheduledFuture != null) { log.trace(\"Cancelling future for completed ID {}\", completedJobID); scheduledFuture.cancel(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5603/buggy-version/satfc.src.main.java.ca.ubc.cs.beta.stationpacking.polling.ProblemIncrementor.java", "BodyUseAPI": ["java.util.concurrent.ScheduledFuture.cancel(boolean)"], "Fixed commit": "6dd801b9b4b13d2c44edabd6ea49c690e73ce638", "Url": "https://api.github.com/repos/newmanne/SATFC", "Date": "2015-10-29T20:25:33Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.titan.common.path.TITANPathUtilities.resolvePathURI(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (resolvedPath != null) { message = \"Resolved location: \" + (org.eclipse.core.filesystem.URIUtil.toPath(resolvedPath)); }else { message = \"Resolved location: cannot be calculated from \" + (target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8570/buggy-version/org.eclipse.titan.common.src.org.eclipse.titan.common.fieldeditors.TITANResourceLocatorFieldEditor.java", "BodyUseAPI": ["org.eclipse.core.filesystem.URIUtil.toPath(java.net.URI)"], "Fixed commit": "e6b3b009c9485b5f7feb3d1ae4f2395770fb1c50", "Url": "https://api.github.com/repos/eclipse/titan.EclipsePlug-ins", "Date": "2016-08-31T13:47:44Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.idoideas.xoutof10.OverlayService.view) != null) && ((com.idoideas.xoutof10.OverlayService.windowManager) != null)) { com.idoideas.xoutof10.OverlayService.windowManager.removeView(com.idoideas.xoutof10.OverlayService.view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1399/buggy-version/app.src.main.java.com.idoideas.xoutof10.OverlayService.java", "BodyUseAPI": [], "Fixed commit": "4c91746efa8e110e1f20f55d448f7c3525cb52d0", "Url": "https://api.github.com/repos/idoideas/XOutOf10", "Date": "2017-09-20T00:03:20Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.netflix.eureka.PeerAwareInstanceRegistry.getApplication(com.netflix.appinfo.ApplicationInfoManager.getInstance().getInfo().getAppName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (eurekaApps == null) { areAllPeerNodesPrimed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5481/buggy-version/eureka-core.src.main.java.com.netflix.eureka.PeerAwareInstanceRegistry.java", "BodyUseAPI": [], "Fixed commit": "00459ca8f486e4dbe2f2fd3bb5c297b6b256c43d", "Url": "https://api.github.com/repos/Netflix/eureka", "Date": "2012-10-16T22:44:39Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Character.getNumericValue(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (i != 0) { tokens.add(com.github.melowe.print.number.ResultFormatter.SingleDigit.values()[i].name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4563/buggy-version/src.main.java.com.github.melowe.print.number.ResultFormatter.java", "BodyUseAPI": ["com.github.melowe.print.number.ResultFormatter.SingleDigit.name()", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "912d332c9eebd57b9143a33cde587350fd1ab60d", "Url": "https://api.github.com/repos/melowe/print-number", "Date": "2015-11-28T09:57:35Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((eventDetails.length) >= 5) adapter.add(new net.davidgouveia.futebolnatv.app.classes.MyEvent(eventDetails[0], eventDetails[1], eventDetails[2], eventDetails[3], eventDetails[4]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1747/buggy-version/app.src.main.java.net.davidgouveia.futebolnatv.app.MainActivity.java", "BodyUseAPI": ["net.davidgouveia.futebolnatv.app.classes.EventsAdapter.add(net.davidgouveia.futebolnatv.app.classes.MyEvent)"], "Fixed commit": "1bd60fcb4ca0b40d97c2f9c22631a0c747caa525", "Url": "https://api.github.com/repos/zatarra/futebolnatv", "Date": "2014-03-03T11:01:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((latitude) != 0) && ((longitude) != 0)) { java.io.File file = credentials.saveFile(latitude, longitude, getApplicationContext()); new com.bcp.bcp.UploadToFTAsync(UploadToFTAsync.uploadFile, file, getApplicationContext()).execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7613/buggy-version/app.src.main.java.com.bcp.bcp.MyLocationService.java", "BodyUseAPI": [], "Fixed commit": "502e30a9fe88c78970e10635502e8e6f68506cb5", "Url": "https://api.github.com/repos/anjuthanal/BCP_MAPS", "Date": "2016-03-15T10:23:09Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.deemsys.project.Staff.StaffDAOImpl.getByUserName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (username.equals(staff.getUsername())) { username = staff.getUsername(); }else { username = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1113/buggy-version/src.main.java.com.deemsys.project.Staff.StaffDAOImpl.java", "BodyUseAPI": ["com.deemsys.project.entity.Staff.getUsername()"], "Fixed commit": "44419b2cc8422f89fcb93f058c9b3d23d118e56c", "Url": "https://api.github.com/repos/storagerepo/WPR_V1.0_INJURY", "Date": "2015-09-28T11:00:58Z"},
{"Line": "=>1743", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.almalence.opencam.cameracontroller.CameraController.key_iso.containsKey(iso)) return com.almalence.opencam.cameracontroller.CameraController.key_iso.get(iso); else if (com.almalence.opencam.cameracontroller.CameraController.key_iso2.containsKey(iso)) return com.almalence.opencam.cameracontroller.CameraController.key_iso2.get(iso);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3216/buggy-version/src.com.almalence.opencam.cameracontroller.CameraController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)"], "Fixed commit": "aa7b04b4189fc2832da7bc857dc524a49cb5bbb5", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2014-08-23T04:57:53Z"},
{"Line": "=>4248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newMode != (com.almalence.opencam.CameraParameters.SCENE_MODE_AUTO)) com.almalence.opencam.cameracontroller.CameraController.getInstance().setCameraISO(CameraParameters.ISO_AUTO);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3216/buggy-version/src.com.almalence.opencam.ui.AlmalenceGUI.java", "BodyUseAPI": [], "Fixed commit": "aa7b04b4189fc2832da7bc857dc524a49cb5bbb5", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2014-08-23T04:57:53Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (repositoryOpened) { repositoryOpened = false; de.catma.CatmaApplication.userCount.decrementAndGet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3679/buggy-version/src.de.catma.CatmaApplication.java", "BodyUseAPI": [], "Fixed commit": "2a5ff37239c8cc0c41db24b0cb9719449a1651b9", "Url": "https://api.github.com/repos/e-gius/catma", "Date": "2013-05-18T16:44:50Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["UserService.Factory.getInstance().getUserByPrincipalName(userRole.getPrincipalName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { user = UserService.Factory.getInstance().getUserByEmailAddress(userRole.getPrincipalName()); if (user != null) { userRole.setPrincipalName(user.getPrincipalName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5910/buggy-version/src.main.java.uk.ac.ox.it.ords.api.project.services.impl.hibernate.ProjectRoleServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f318fc9abafff48fa70294d1647af7ccbf77bed7", "Url": "https://api.github.com/repos/ox-it/ords-project-api", "Date": "2017-04-20T10:13:55Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getEntity(ref)) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8664/buggy-version/impl.src.java.com.rusticisoftware.scormcloud.logic.entity.ScormCloudEntityProducer.java", "BodyUseAPI": [], "Fixed commit": "b7376cf93536e8c8ec8b368d1e64ff1595d0ddee", "Url": "https://api.github.com/repos/johntbush/SCORMCloud_SakaiPlugin", "Date": "2013-08-28T23:28:25Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fields == null) { entry = new java.util.HashMap<java.lang.String, com.yahoo.ycsb.ByteIterator>(); }else { entry = new java.util.HashMap<java.lang.String, com.yahoo.ycsb.ByteIterator>(fields.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9100/buggy-version/orientdb.src.main.java.com.yahoo.ycsb.db.OrientDBClient.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.size()"], "Fixed commit": "ad5ff6786ce14fdb49af2024ee7b2ffb2c43e0c9", "Url": "https://api.github.com/repos/Tomting/YCSB", "Date": "2013-04-12T09:09:08Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.List<org.jboss.errai.enterprise.client.cdi.AbstractCDIEventCallback<?>>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.jboss.errai.marshalling.client.api.MarshallerFramework.canMarshall(eventType)) { for (org.jboss.errai.enterprise.client.cdi.AbstractCDIEventCallback<?> callback : mapEntry.getValue()) { remoteEventCount++; org.jboss.errai.bus.client.api.base.MessageBuilder.createMessage().toSubject(org.jboss.errai.enterprise.client.cdi.api.CDI.SERVER_DISPATCHER_SUBJECT).command(CDICommands.RemoteSubscribe).with(CDIProtocol.BeanType, eventType).with(CDIProtocol.Qualifiers, callback.getQualifiers()).noErrorHandling().sendNowWith(org.jboss.errai.bus.client.ErraiBus.get()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3308/buggy-version/errai-cdi.errai-cdi-client.src.main.java.org.jboss.errai.enterprise.client.cdi.api.CDI.java", "BodyUseAPI": ["org.jboss.errai.bus.client.api.base.MessageBuilder.createMessage().toSubject(org.jboss.errai.enterprise.client.cdi.api.CDI.SERVER_DISPATCHER_SUBJECT).command(CDICommands.RemoteSubscribe).with(CDIProtocol.BeanType, eventType).with(CDIProtocol.Qualifiers, callback.getQualifiers()).noErrorHandling()", "org.jboss.errai.bus.client.api.base.MessageBuilder.createMessage().toSubject(org.jboss.errai.enterprise.client.cdi.api.CDI.SERVER_DISPATCHER_SUBJECT).command(CDICommands.RemoteSubscribe).with(CDIProtocol.BeanType, eventType).with(CDIProtocol.Qualifiers,callback.getQualifiers())", "org.jboss.errai.bus.client.api.base.MessageBuilder.createMessage().toSubject(org.jboss.errai.enterprise.client.cdi.api.CDI.SERVER_DISPATCHER_SUBJECT).command(CDICommands.RemoteSubscribe).with(CDIProtocol.BeanType,java.lang.String)", "org.jboss.errai.bus.client.api.base.MessageBuilder.createMessage().toSubject(org.jboss.errai.enterprise.client.cdi.api.CDI.SERVER_DISPATCHER_SUBJECT).command(CDICommands.RemoteSubscribe).with(CDIProtocol.BeanType, eventType).with(CDIProtocol.Qualifiers, callback.getQualifiers()).noErrorHandling().sendNowWith(org.jboss.errai.bus.client.ErraiBus.get())"], "Fixed commit": "a435a18513f255eec20808b26c5cb8b912ef548c", "Url": "https://api.github.com/repos/mbarkley/errai", "Date": "2013-09-03T22:31:13Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (aisHandler != null) { btnSelectFromAis.setEnabled(false); }else { if ((this.aisHandler.getShipList().size()) == 0) { btnSelectFromAis.setEnabled(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8973/buggy-version/epd-shore.src.main.java.dk.dma.epd.shore.gui.voct.SRUAddEditDialog.java", "BodyUseAPI": [], "Fixed commit": "340c8eb6d0551e6a10ae20ab497b9f67f0acce25", "Url": "https://api.github.com/repos/dma-enav/EPD", "Date": "2014-06-20T12:59:56Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((error.cause()) != null) { debugLog.error(java.lang.String.format(\"Client triggered an unexpected error [%s]: %s, reference %s.\", error.status(), error.message(), error.reference()), error.cause()); }else { debugLog.error(java.lang.String.format(\"Client triggered an unexpected error [%s]: %s, reference %s.\", error.status(), error.message(), error.reference())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8713/buggy-version/community.bolt.src.main.java.org.neo4j.bolt.v1.runtime.ErrorReporter.java", "BodyUseAPI": ["org.neo4j.bolt.v1.runtime.Neo4jError.reference()", "org.neo4j.logging.Log.error(java.lang.String)", "org.neo4j.bolt.v1.runtime.Neo4jError.status()", "org.neo4j.logging.Log.error(java.lang.String,error.cause())", "org.neo4j.bolt.v1.runtime.Neo4jError.reference()", "java.lang.String.format(java.lang.String,error.status(),error.message(),error.reference())", "org.neo4j.bolt.v1.runtime.Neo4jError.message()", "org.neo4j.bolt.v1.runtime.Neo4jError.status()", "org.neo4j.bolt.v1.runtime.Neo4jError.message()", "java.lang.String.format(java.lang.String,error.status(),error.message(),error.reference())", "org.neo4j.bolt.v1.runtime.Neo4jError.cause()"], "Fixed commit": "a90063c1173b7ab79be69301fcdadbfc309ed100", "Url": "https://api.github.com/repos/neo4j/neo4j", "Date": "2016-11-28T15:25:34Z"},
{"Line": "=>1362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.bl.api.Utils.getUnixDateStringFromDateExt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((startDateUnix.length()) == 9) { startDateUnix = \"0\" + startDateUnix; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7767/buggy-version/app.models.Target.java", "BodyUseAPI": [], "Fixed commit": "5b7ea42c65c72512d2b6a2676f85e91e0f601e7d", "Url": "https://api.github.com/repos/ukwa/w3act", "Date": "2014-07-15T07:54:22Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((argType.get(i)) == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9227/buggy-version/src.com.miracle.intermediate.structure.MiracleIRFunction.java", "BodyUseAPI": [], "Fixed commit": "0385b388849027391b601fdb895efe469b716589", "Url": "https://api.github.com/repos/Kipsora/x86-64-Java-Miracle-Compiler", "Date": "2017-05-23T13:52:14Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((leftIndex >= 0) && (!(isWordCharacter(text.charAt(leftIndex))))) || (leftIndex == (-1))) && (((rightIndex < (text.length())) && (!(isWordCharacter(text.charAt(rightIndex))))) || (rightIndex == (text.length())))) { markText((leftIndex + 1), rightIndex, color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7949/buggy-version/app.src.main.java.com.xpn.spellnote.ui.document.edit.EditCorrectText.java", "BodyUseAPI": ["com.xpn.spellnote.ui.document.edit.EditCorrectText.markText(int,int,int)"], "Fixed commit": "d314f960de9de15495219c216114ede78093cdb8", "Url": "https://api.github.com/repos/MartinXPN/SpellNote", "Date": "2017-06-06T10:25:09Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((payloadData) != null) { if (messageType.equalsIgnoreCase(MessageType.BINARY.name())) { return context.replaceDynamicContentInString(payloadData).getBytes(); }else { return context.replaceDynamicContentInString(payloadData); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4706/buggy-version/modules.citrus-core.src.main.java.com.consol.citrus.validation.builder.PayloadTemplateMessageBuilder.java", "BodyUseAPI": [], "Fixed commit": "b208b4eba5db468fd4184d9d1603e99baf62d20c", "Url": "https://api.github.com/repos/citrusframework/citrus", "Date": "2016-09-28T07:00:33Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.walkmod.javalang.ast.expr.ArrayCreationExpr.getInitializer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (expr != null) { expr.accept(this, aux.getInitializer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8768/buggy-version/src.main.java.org.walkmod.pmd.visitors.PMDRuleVisitor.java", "BodyUseAPI": ["org.walkmod.javalang.ast.expr.ArrayInitializerExpr.accept(org.walkmod.pmd.visitors.PMDRuleVisitor,aux.getInitializer())"], "Fixed commit": "c6adf6a78d770bc86dbe5a664ae9e78df8b8205c", "Url": "https://api.github.com/repos/walkmod/walkmod-pmd-plugin", "Date": "2017-03-14T13:04:03Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clubMap.isEmpty()) && (url[0].toString().contains(\"OTTV+Glarus\"))) { clubMap.put(\"Glarus\", \"http://click-tt.ch/cgi-bin/WebObjects/nuLigaTTCH.woa/wa/clubTeams?club=33229\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5704/buggy-version/src.com.jost.beat.sttv.ClubParserTask.java", "BodyUseAPI": ["java.util.TreeMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "e70bc18f5662329e39ea4f18267cf50e419d3a99", "Url": "https://api.github.com/repos/beatjost/TTResults", "Date": "2015-03-22T19:34:51Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["annotationSet.getView().getModel()", "org.baderlab.csplugins.enrichmentmap.EnrichmentMapManager.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((emManager != null) && ((emManager.getMap(selectedNetwork.getSUID())) != null)) { org.baderlab.csplugins.enrichmentmap.heatmap.HeatMapParameters heatMapParameters = emManager.getMap(selectedNetwork.getSUID()).getParams().getHmParams(); if (heatMapParameters != null) { heatMapParameters.setSort(HeatMapParameters.Sort.NONE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6168/buggy-version/EnrichmentMapPlugin.src.main.java.org.baderlab.csplugins.enrichmentmap.autoannotate.task.RemoveAnnotationTask.java", "BodyUseAPI": ["emManager.getMap(selectedNetwork.getSUID()).getParams().getHmParams()", "org.baderlab.csplugins.enrichmentmap.EnrichmentMapManager.getMap(selectedNetwork.getSUID())", "emManager.getMap(selectedNetwork.getSUID()).getParams()", "org.cytoscape.model.CyNetwork.getSUID()"], "Fixed commit": "167c41938118910086f3971ef627605d9a81be88", "Url": "https://api.github.com/repos/BaderLab/EnrichmentMapApp", "Date": "2015-06-23T19:23:21Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (decimalPlaces == 0) { return format(((double) ((long) (number)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9265/buggy-version/CodenameOne.src.com.codename1.l10n.L10NManager.java", "BodyUseAPI": [], "Fixed commit": "90c2f4f00b3e1299665b545ca3f332143eaadfae", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-08-03T16:37:23Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeZero.size()) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9261/buggy-version/src.common.Spacecraft.java", "BodyUseAPI": [], "Fixed commit": "f08d47f3230ad03c8cab78c1d16721e284f23fa8", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2015-10-23T17:17:04Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeZero.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9261/buggy-version/src.common.Spacecraft.java", "BodyUseAPI": [], "Fixed commit": "f08d47f3230ad03c8cab78c1d16721e284f23fa8", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2015-10-23T17:17:04Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != object) { object = org.apache.commons.lang.StringUtils.strip(object); object = org.apache.commons.lang.StringUtils.chomp(object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6269/buggy-version/src.main.java.org.linkedgov.questions.model.QueryFilter.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.strip(java.lang.String)"], "Fixed commit": "50faef291b7db1c75545723035c11c054e783f2d", "Url": "https://api.github.com/repos/linkedgov/question-site", "Date": "2011-10-24T14:30:05Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subjectManager.getSubjects().isEmpty()) { createAlertDialog(getContext().getString(R.string.warning), \"Bitte f\u00fcgen Sie ein Fach hinzu!\", android.R.drawable.ic_dialog_alert); }else createInputDialog();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3928/buggy-version/app.src.main.java.de.tk.annapp.Fragments.gradesFragment.java", "BodyUseAPI": [], "Fixed commit": "fcf6144fd347efc59f407474f0c93cf1d8ff0faa", "Url": "https://api.github.com/repos/Crightub/AnnApp", "Date": "2017-12-02T16:14:34Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StackTraceElement.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(lastLine.contains(\"ConnectionHandler.java:168\"))) && (!(lastLine.contains(\"ConnectionHandler.java:215\")))) { org.redPandaLib.Main.sendBroadCastMsg((((((\"Wuff! Wuff! ConnectionHandler didn't run for quite a while: \" + delay) + \"\\nState: \") + (Test.connectionHandler.getState())) + \"\\nStackTrace: \") + ownStackTrace)); return; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9194/buggy-version/src.org.redPandaLib.services.WatchDog.java", "BodyUseAPI": [], "Fixed commit": "a5d640561077d6242b3ae86bb4a78443599f5c19", "Url": "https://api.github.com/repos/redPanda-project/redPandaj", "Date": "2015-07-24T06:56:54Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sqlQueryExecutor.isTableExists(\"dynamic_class_aggregations\"))) { java.lang.String createDynamicClassesSQL = \"CREATE TABLE dynamic_class_aggregations (Table_Name TEXT NOT NULL, Tag TEXT NOT NULL, Attributes TEXT NOT NULL, Ranges TEXT NOT NULL, Count INT NOT NULL);\"; sqlQueryExecutor.createTable(createDynamicClassesSQL); reload = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1494/buggy-version/src.main.java.edu.uiuc.zenvisage.server.DatabaseAutoLoader.java", "BodyUseAPI": ["edu.uiuc.zenvisage.data.remotedb.SQLQueryExecutor.createTable(java.lang.String)"], "Fixed commit": "f9078185b84d1a26d800fe0594bc12cca430aeb5", "Url": "https://api.github.com/repos/zenvisage/zenvisage", "Date": "2017-09-09T00:31:06Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.refractions.udig.project.ui.internal.ProjectUIPlugin.getDefault().getPreferenceStore().getInt(((net.refractions.udig.project.ui.preferences.PreferenceConstants.P_TILESET_HEIGHT) + (info.getName())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (height == 0) { height = 256; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5373/buggy-version/plugins.net.refractions.udig.catalog.wms.src.net.refractions.udig.catalog.internal.wms.tileset.WMSCTileSetAdapter.java", "BodyUseAPI": [], "Fixed commit": "cb43734a8aa904922d304373a8e4e50da08ee137", "Url": "https://api.github.com/repos/egouge/udig-platform", "Date": "2011-12-13T22:52:15Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.refractions.udig.project.ui.internal.ProjectUIPlugin.getDefault().getPreferenceStore().getString(((net.refractions.udig.project.ui.preferences.PreferenceConstants.P_TILESET_IMAGE_TYPE) + (info.getName())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((\"\".equals(imageType)) || (imageType == null)) { imageType = \"image/png\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5373/buggy-version/plugins.net.refractions.udig.catalog.wms.src.net.refractions.udig.catalog.internal.wms.tileset.WMSCTileSetAdapter.java", "BodyUseAPI": [], "Fixed commit": "cb43734a8aa904922d304373a8e4e50da08ee137", "Url": "https://api.github.com/repos/egouge/udig-platform", "Date": "2011-12-13T22:52:15Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.refractions.udig.project.ui.internal.ProjectUIPlugin.getDefault().getPreferenceStore().getInt(((net.refractions.udig.project.ui.preferences.PreferenceConstants.P_TILESET_WIDTH) + (info.getName())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (width == 0) { width = 256; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5373/buggy-version/plugins.net.refractions.udig.catalog.wms.src.net.refractions.udig.catalog.internal.wms.tileset.WMSCTileSetAdapter.java", "BodyUseAPI": [], "Fixed commit": "cb43734a8aa904922d304373a8e4e50da08ee137", "Url": "https://api.github.com/repos/egouge/udig-platform", "Date": "2011-12-13T22:52:15Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status.startsWith(\"TASK_EXTRACTING\")) { taskStat = TaskStatus.TASK_EXTRACTING; }else { taskStat = TaskStatus.TASK_UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/594/buggy-version/src.com.bigpupdev.synodroid.data.TaskDetail.java", "BodyUseAPI": [], "Fixed commit": "6db7558964c3119f896a8aafc719057269172460", "Url": "https://api.github.com/repos/stevegaron/Synodroid", "Date": "2013-03-04T00:52:07Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status.startsWith(\"TASK_EXTRACTING\")) { taskStat = TaskStatus.TASK_EXTRACTING; }else { taskStat = TaskStatus.TASK_UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/594/buggy-version/src.com.bigpupdev.synodroid.data.Task.java", "BodyUseAPI": [], "Fixed commit": "6db7558964c3119f896a8aafc719057269172460", "Url": "https://api.github.com/repos/stevegaron/Synodroid", "Date": "2013-03-04T00:52:07Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (statusP.startsWith(\"TASK_EXTRACTING\")) { return ctxP.getString(R.string.detail_status_extracting); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/594/buggy-version/src.com.bigpupdev.synodroid.data.TaskStatus.java", "BodyUseAPI": [], "Fixed commit": "6db7558964c3119f896a8aafc719057269172460", "Url": "https://api.github.com/repos/stevegaron/Synodroid", "Date": "2013-03-04T00:52:07Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<jsettlers.common.mapobject.EMapObjectType, jsettlers.ai.highlevel.AiPositions>.get(jsettlers.common.mapobject.EMapObjectType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sortedResourcePoints == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4055/buggy-version/jsettlers.logic.src.main.java.jsettlers.ai.highlevel.AiStatistics.java", "BodyUseAPI": [], "Fixed commit": "31f9370e9f1a9e33d6cc4d61f132b3ac9ace26bc", "Url": "https://api.github.com/repos/jsettlers/settlers-remake", "Date": "2016-04-24T19:45:01Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (distance < 0.001) { edu.gatech.gem5.game.LastAdventures.swap(new edu.gatech.gem5.game.controllers.PlanetController()); }else { java.lang.System.out.println(\"Not in range.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6011/buggy-version/src.main.java.edu.gatech.gem5.game.controllers.DisplayUniverseController.java", "BodyUseAPI": [], "Fixed commit": "451dc12c4d48073cb1a54ad49dc7d1797751b673", "Url": "https://api.github.com/repos/gem-5/last-adventures", "Date": "2014-10-08T17:41:04Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jaquadro.minecraft.storagedrawers.api.storage.IDrawer.getStoredItemCopy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (stack == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4224/buggy-version/common.logisticspipes.proxy.specialinventoryhandler.StorageDrawersInventoryHandler.java", "BodyUseAPI": [], "Fixed commit": "a76a717ecdd276092c5ca36e8994426e3b9bb9e1", "Url": "https://api.github.com/repos/SonOfTheStars/LogisticsPipes", "Date": "2015-11-29T00:41:26Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operands.isEmpty()) { throw new greenapi.gpi.metric.expression.parser.RecognitionException(\"Invalid assignment expression!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9209/buggy-version/gpi.src.main.java.greenapi.gpi.metric.expression.lexer.ExpressionParser.java", "BodyUseAPI": [], "Fixed commit": "d862338f7a96bcf36e79c4e119eb021ae43b77fc", "Url": "https://api.github.com/repos/alessandroleite/greenapi", "Date": "2013-04-10T13:52:15Z"},
{"Line": "=>1535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((executeStep.status.state) == (com.emc.storageos.workflow.Workflow.StepState.SUSPENDED_NO_ERROR)) { executeStep.status.state = com.emc.storageos.workflow.Workflow.StepState.CANCELLED; persistWorkflowStep(workflow, executeStep); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3352/buggy-version/controllersvc.src.main.java.com.emc.storageos.workflow.WorkflowService.java", "BodyUseAPI": [], "Fixed commit": "26b19bbf80de7943ca2aeaaf1cd601ea20229ea3", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-09-02T20:18:37Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((data == null) || ((data.size()) == 0)) { data = innerIngester.getStream().drain(); macrobase.ingest.DiskCachingIngester.log.info(\"Writing out loaded data...\"); writeOutData(data); macrobase.ingest.DiskCachingIngester.log.info(\"...done writing!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6777/buggy-version/src.main.java.macrobase.ingest.DiskCachingIngester.java", "BodyUseAPI": [], "Fixed commit": "67d57a380e638296f708ecc4e0f07251bfa38e13", "Url": "https://api.github.com/repos/stanford-futuredata/macrobase", "Date": "2016-06-02T03:09:11Z"},
{"Line": "=>809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((theplayer.health) <= 0) theplayer.health = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/322/buggy-version/src.filereading.Game.java", "BodyUseAPI": [], "Fixed commit": "93c91d59a326f480cef555ba71958cfd2819f405", "Url": "https://api.github.com/repos/Perzivial/FredAdventure", "Date": "2016-05-18T13:57:24Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((br == 0) && (\"mp3\".equals(song.getTranscodedSuffix().toLowerCase()))) { if ((song.getBitRate()) != null) { br = java.lang.Math.min(320, song.getBitRate()); }else { br = 320; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1746/buggy-version/src.github.daneren2005.dsub.service.DownloadFile.java", "BodyUseAPI": ["MusicDirectory.Entry.getBitRate()", "MusicDirectory.Entry.getBitRate()", "java.lang.Math.min(int,song.getBitRate())"], "Fixed commit": "d9c36e236bb1c2b728ca6a2c0ff3599976df1bcd", "Url": "https://api.github.com/repos/hedwig34/Subsonic", "Date": "2014-01-03T02:39:59Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.walkmod.javalang.compiler.symbols.SymbolTable.lookUpSymbolForRead(java.lang.String,org.walkmod.javalang.ast.expr.NormalAnnotationExpr,ReferenceType.TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (s == null) { sd = new org.walkmod.javalang.compiler.symbols.SymbolType(type); }else { sd = s.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1079/buggy-version/src.main.java.org.walkmod.javalang.compiler.symbols.SymbolVisitorAdapter.java", "BodyUseAPI": ["org.walkmod.javalang.compiler.symbols.Symbol<?>.getType()"], "Fixed commit": "55ded0bbc760d6da5c8330605599dec768b77928", "Url": "https://api.github.com/repos/rpau/javalang-compiler", "Date": "2015-10-26T16:40:01Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y) <= 0) y = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9247/buggy-version/src.Camera.java", "BodyUseAPI": [], "Fixed commit": "9011850e36b7df070fc706c20a5aa3d997840c3a", "Url": "https://api.github.com/repos/solacedforever/Java-WizardGame", "Date": "2017-11-17T21:40:22Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x) <= 0) x = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9247/buggy-version/src.Camera.java", "BodyUseAPI": [], "Fixed commit": "9011850e36b7df070fc706c20a5aa3d997840c3a", "Url": "https://api.github.com/repos/solacedforever/Java-WizardGame", "Date": "2017-11-17T21:40:22Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x) >= 1032) x = 1032;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9247/buggy-version/src.Camera.java", "BodyUseAPI": [], "Fixed commit": "9011850e36b7df070fc706c20a5aa3d997840c3a", "Url": "https://api.github.com/repos/solacedforever/Java-WizardGame", "Date": "2017-11-17T21:40:22Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y) >= (563 + 48)) y = 563 + 48;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9247/buggy-version/src.Camera.java", "BodyUseAPI": [], "Fixed commit": "9011850e36b7df070fc706c20a5aa3d997840c3a", "Url": "https://api.github.com/repos/solacedforever/Java-WizardGame", "Date": "2017-11-17T21:40:22Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alarm_service.isRunning) == false) { com.example.alexthomas.myapplication.MainActivity.alarm_confirmation.setText(\"Your alarm is unset.\"); }else { alarm_service.isRunning = true; com.example.alexthomas.myapplication.MainActivity.alarm_intent = new android.content.Intent(this, com.example.alexthomas.myapplication.alarm_receiver.class); com.example.alexthomas.myapplication.MainActivity.alarm_intent.putExtra(\"Alarm_off\", true); pendingIntent = android.app.PendingIntent.getBroadcast(this, 1, com.example.alexthomas.myapplication.MainActivity.alarm_intent, PendingIntent.FLAG_UPDATE_CURRENT); sendBroadcast(com.example.alexthomas.myapplication.MainActivity.alarm_intent); android.util.Log.e(\"Cancel service\", \"Cancelled\"); pendingIntent.cancel(); com.example.alexthomas.myapplication.MainActivity.snooze_alarm.setText(\"Alarm Off\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4580/buggy-version/java.com.example.alexthomas.myapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f01550740a62187b1fdef490ef1de0c37a1acc41", "Url": "https://api.github.com/repos/kevindhu/getwoke", "Date": "2017-01-04T05:46:42Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((potentiallyInsufficientUtility) != null) { potentiallyInsufficientUtility.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/121/buggy-version/src.main.org.deidentifier.arx.algorithm.FLASHAlgorithmImpl.java", "BodyUseAPI": [], "Fixed commit": "a9fc5a97d4a7e5f3166876278da5e1471c3fbb2d", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-08-29T10:51:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack.attemptDamageItem(1, player.getRNG())) { (stack.stackSize)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3551/buggy-version/common.buildcraft.transport.stripes.StripesHandlerShears.java", "BodyUseAPI": [], "Fixed commit": "e1d457234ac56b1540b7761b3531a97767c8bd56", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2015-05-17T09:47:01Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stack.stackSize) > 0) { activator.sendItem(stack, direction.getOpposite()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3551/buggy-version/common.buildcraft.transport.stripes.StripesHandlerShears.java", "BodyUseAPI": ["buildcraft.api.transport.IStripesActivator.sendItem(net.minecraft.item.ItemStack,direction.getOpposite())"], "Fixed commit": "e1d457234ac56b1540b7761b3531a97767c8bd56", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2015-05-17T09:47:01Z"},
{"Line": "=>1167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(field.getType().equals(fieldInfo.fieldClass))) { mw.visitTypeInsn(com.alibaba.fastjson.serializer.CHECKCAST, type(fieldInfo.fieldClass)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7378/buggy-version/src.main.java.com.alibaba.fastjson.serializer.ASMSerializerFactory.java", "BodyUseAPI": ["com.alibaba.fastjson.serializer.ASMSerializerFactory.type(fieldInfo.fieldClass)", "com.alibaba.fastjson.asm.MethodVisitor.visitTypeInsn(com.alibaba.fastjson.serializer.CHECKCAST,type(fieldInfo.fieldClass))"], "Fixed commit": "ea4bbbc3d48f197c80b32b600322b44fb31b4216", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-05-04T08:32:04Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((failingReadsWriter) != null) failingReadsWriter.addAlignment(rec);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9160/buggy-version/src.main.java.com.github.lindenb.jvarkit.tools.samjs.SamJavascript.java", "BodyUseAPI": [], "Fixed commit": "3c67063c3c7091c41dae684c324d99376d226dd2", "Url": "https://api.github.com/repos/lindenb/jvarkit", "Date": "2014-02-11T14:03:41Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldName != null) { throw new org.elasticsearch.common.ParsingException(parser.getTokenLocation(), ((((\"[prefix] query doesn't support multiple fields, found [\" + fieldName) + \"] and [\") + (parser.currentName())) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2747/buggy-version/core.src.main.java.org.elasticsearch.index.query.PrefixQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "8f485b361416fff6653fdd55f4c255ac9843d0c5", "Url": "https://api.github.com/repos/Popo-lth/elasticsearch", "Date": "2016-08-08T17:42:26Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((stopped) == false) && (((getWorld().getObjects(GarpGemScore.class).get(0).returnGarpScore()) + (getWorld().getObjects(GoarpGemScore.class).get(0).returnGoarpScore())) == 10)) { Greenfoot.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1406/buggy-version/GarpsGame_Extra3.GameOverWindow.java", "BodyUseAPI": [], "Fixed commit": "dbd77a19ff3484df3e5de36dfccee24ade9cc45d", "Url": "https://api.github.com/repos/2025989/GarpsGame", "Date": "2015-11-18T17:14:32Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lavida.swing.service.ArticlesTableModel.getRawValueAt(? extends java.lang.Integer,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (saleDateObj != null) { java.util.Date date = ((java.util.Calendar) (tableModel.getRawValueAt(entry.getIdentifier(), columnIndex))).getTime(); return (date.after(addDays(correctedDate1, (-1)))) && (date.before(addDays(correctedDate2, 1))); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6945/buggy-version/finance.swing.src.main.java.com.lavida.swing.form.component.ArticleFiltersComponent.java", "BodyUseAPI": [], "Fixed commit": "127444490f3cf3d2fd16d7b21c9e6df0eb8114da", "Url": "https://api.github.com/repos/pavel-slyvka/lavida", "Date": "2013-08-27T20:58:22Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cachePath.exists()) || (cachePath.mkdirs())) { cache = android.net.http.HttpResponseCache.install(cachePath, cacheSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3302/buggy-version/netbird2.src.main.java.cc.colorcat.netbird2.HttpConnection.java", "BodyUseAPI": ["android.net.http.HttpResponseCache.install(java.io.File,long)"], "Fixed commit": "4786fbd6920bfebf06f405eb44abdec35547661c", "Url": "https://api.github.com/repos/fireworld/NetBird2", "Date": "2017-09-14T15:05:49Z"},
{"Line": "=>1022", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((product.getBandName(org.esa.s1tbx.insar.gpf.InterferogramOp.ELEVATION)) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8489/buggy-version/s1tbx-op-insar.src.main.java.org.esa.s1tbx.insar.gpf.InterferogramOp.java", "BodyUseAPI": [], "Fixed commit": "dd710746e8e4cc98a8eaba392c7e99011346b08c", "Url": "https://api.github.com/repos/lveci/s1tbx", "Date": "2017-11-17T16:27:17Z"},
{"Line": "=>858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (log) { net.pms.configuration.PmsConfiguration.LOGGER.info(\"Language not specified, defaulting to OS language.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/481/buggy-version/src.main.java.net.pms.configuration.PmsConfiguration.java", "BodyUseAPI": [], "Fixed commit": "a838ffff99817acdb7adbf4444bbbc3ddc6ee783", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2015-10-14T19:09:50Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plugin.getEventMain().eventstarted) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4369/buggy-version/src.events.brainsynder.GameListener.java", "BodyUseAPI": [], "Fixed commit": "d17f335c5e3aba3ca9b172c87664eac2273d1640", "Url": "https://api.github.com/repos/CatsCraft-Private/MiniEvents", "Date": "2017-08-30T16:16:04Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof com.helger.jcodemodel.AbstractJClass) { com.helger.jcodemodel.AbstractJClass klass = ((com.helger.jcodemodel.AbstractJClass) (type)); boolean result = _Comparable.narrow(klass.wildcardSuper()).isAssignableFrom(klass); return result; }else throw new com.github.sviperll.adt4j.model.util.SourceException((\"Unexpected jcodemodel type: \" + type));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5982/buggy-version/adt4j.src.main.java.com.github.sviperll.adt4j.model.util.Types.java", "BodyUseAPI": [], "Fixed commit": "52b1cc06385e1f9408fbba3ae85be8e3d22784cd", "Url": "https://api.github.com/repos/sviperll/adt4j", "Date": "2015-01-21T11:21:42Z"},
{"Line": "=>1448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((word1.matches((\"^.*\" + (Constant.SENDINGS)))) && (word2.matches((\"^.*\" + (Constant.PENDINGS))))) { if (((word2.matches((\"^.*\" + \"es$\"))) && (word1.matches((\"^.*\" + \"is$\")))) && ((java.lang.Math.abs((len1 - len2))) == 0)) { singular = word1; plural = word2; }else if (((word1.matches((\"^.*\" + \"us$\"))) && (word2.matches((\"^.*\" + \"a$\")))) && ((java.lang.Math.abs((len1 - len2))) < 2)) { singular = word1; plural = word2; } }else if ((word1.matches((\"^.*\" + (Constant.PENDINGS)))) && (word2.matches((\"^.*\" + (Constant.SENDINGS))))) { if (((word1.matches((\"^.*\" + \"es$\"))) && (word2.matches((\"^.*\" + \"is$\")))) && ((java.lang.Math.abs((len1 - len2))) == 0)) { singular = word2; plural = word1; }else if (((word1.matches((\"^.*\" + \"a$\"))) && (word2.matches((\"^.*\" + \"on$\")))) && ((java.lang.Math.abs((len1 - len2))) < 2)) { singular = word2; plural = word1; }else if (((word1.matches((\"^.*\" + \"a$\"))) && (word2.matches((\"^.*\" + \"um$\")))) && ((java.lang.Math.abs((len1 - len2))) < 2)) { singular = word2; plural = word1; }else if (((word1.matches((\"^.*\" + \"i$\"))) && (word2.matches((\"^.*\" + \"us$\")))) && ((java.lang.Math.abs((len1 - len2))) < 2)) { singular = word2; plural = word1; } }else { if (word2.matches(\"^.*s$\")) { if (getSingularPluralPairHelper(word1, word2)) { singular = word1; plural = word2; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7616/buggy-version/src.semanticMarkup.ling.learn.UnsupervisedClauseMarkup.java", "BodyUseAPI": ["java.lang.String.matches(java.lang.String)", "java.lang.String.matches(java.lang.String)", "java.lang.String.matches(java.lang.String)", "java.lang.String.matches(java.lang.String)", "java.lang.String.matches(java.lang.String)", "java.lang.String.matches((\"^.*\" + (Constant.PENDINGS)))", "java.lang.String.matches(java.lang.String)", "java.lang.String.matches(java.lang.String)", "java.lang.String.matches(java.lang.String)", "java.lang.String.matches((\"^.*\" + (Constant.SENDINGS)))", "java.lang.String.matches(java.lang.String)", "java.lang.String.matches(java.lang.String)", "semanticMarkup.ling.learn.UnsupervisedClauseMarkup.getSingularPluralPairHelper(java.lang.String,java.lang.String)", "java.lang.String.matches(java.lang.String)", "java.lang.String.matches(java.lang.String)", "java.lang.String.matches(java.lang.String)"], "Fixed commit": "758cfdba2d0329b67b5bad5d1632d5ba254988b4", "Url": "https://api.github.com/repos/phenoscape/charaparser-unsupervised", "Date": "2013-04-09T16:56:34Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.jssl.autounit.classanalyser.ClassAnalyser<T>.getPublicMethods()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.kc.walle.common.util.CollectionUtils.isNotEmpty(methods)) { for (java.lang.reflect.Method m : getPublicMethods()) { classresults.add(analyseMethod(m)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1076/buggy-version/src.main.java.nl.jssl.autounit.classanalyser.ClassAnalyser.java", "BodyUseAPI": [], "Fixed commit": "b6cdedb2c76f9492b4168eec7f2f4b309e8ecc8c", "Url": "https://api.github.com/repos/yrj2011/my-junitfactory", "Date": "2017-03-13T09:22:03Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.matsim.core.mobsim.qsim.qnetsimengine.QueueWithBuffer.fastCapacityUpdate) updateFlowAccumulation(now);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9085/buggy-version/matsim.src.main.java.org.matsim.core.mobsim.qsim.qnetsimengine.QueueWithBuffer.java", "BodyUseAPI": [], "Fixed commit": "4216b30161e7c4f707fcadab89b73dbb15a577c2", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2016-02-16T14:18:01Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sendFurtherUpdates) { updateConnections(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3869/buggy-version/src.main.java.org.cyclops.integrateddynamics.modcompat.mcmultipart.PartCable.java", "BodyUseAPI": [], "Fixed commit": "9e8ed3731425900d28622602057c26bab4ede2cc", "Url": "https://api.github.com/repos/CyclopsMC/IntegratedDynamics", "Date": "2016-01-31T20:27:08Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mResponseInterceptor) != null) { try { mResponseInterceptor.process(response, context); } catch (org.apache.http.HttpException e) { com.sf.loglib.L.error(com.sf.httpclient.newcore.TAG, (\"addResponseInterceptor exception: \" + e)); } catch (java.io.IOException e) { com.sf.loglib.L.error(com.sf.httpclient.newcore.TAG, (\"addResponseInterceptor exception: \" + e)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2475/buggy-version/SFHttpClient.src.com.sf.httpclient.newcore.SFHttpHandler.java", "BodyUseAPI": [], "Fixed commit": "b5ff3b129481cf921fe228a21fbcdf6293e20f4a", "Url": "https://api.github.com/repos/xieningtao/new_sflib", "Date": "2016-12-10T05:10:51Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRequestInterceptor) != null) { try { mRequestInterceptor.process(request, context); } catch (org.apache.http.HttpException e) { com.sf.loglib.L.error(com.sf.httpclient.newcore.TAG, (\"addRequestInterceptor exception: \" + e)); } catch (java.io.IOException e) { com.sf.loglib.L.error(com.sf.httpclient.newcore.TAG, (\"addRequestInterceptor exception: \" + e)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2475/buggy-version/SFHttpClient.src.com.sf.httpclient.newcore.SFHttpHandler.java", "BodyUseAPI": [], "Fixed commit": "b5ff3b129481cf921fe228a21fbcdf6293e20f4a", "Url": "https://api.github.com/repos/xieningtao/new_sflib", "Date": "2016-12-10T05:10:51Z"},
{"Line": "=>1145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getPoint().getAngleBetween(b.getMiddle())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((java.lang.Math.PI) * 5) / 4) < rotation) && (rotation < (((java.lang.Math.PI) * 7) / 4))) { if ((c.getCenter().getY()) > (player.getPoint().getY())) { canMoveY = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1874/buggy-version/src.gameobjects.World.java", "BodyUseAPI": [], "Fixed commit": "90a7281640aa6e428b3f850a11dc05b92bcd308d", "Url": "https://api.github.com/repos/aaronwilhelm1/SpecialOps", "Date": "2017-01-09T21:38:58Z"},
{"Line": "=>1139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getPoint().getAngleBetween(b.getMiddle())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((java.lang.Math.PI) * 3) / 4) < rotation) && (rotation < (((java.lang.Math.PI) * 5) / 4))) { if ((c.getCenter().getX()) < (player.getPoint().getX())) { canMoveX = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1874/buggy-version/src.gameobjects.World.java", "BodyUseAPI": [], "Fixed commit": "90a7281640aa6e428b3f850a11dc05b92bcd308d", "Url": "https://api.github.com/repos/aaronwilhelm1/SpecialOps", "Date": "2017-01-09T21:38:58Z"},
{"Line": "=>1126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getPoint().getAngleBetween(b.getMiddle())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((0 < rotation) && (rotation < ((java.lang.Math.PI) / 4))) && ((c.getCenter().getX()) < (b.getTopLeft().getX()))) { java.lang.System.out.println(\"To the Left\"); if ((c.getCenter().getX()) > (player.getPoint().getX())) { canMoveX = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1874/buggy-version/src.gameobjects.World.java", "BodyUseAPI": ["geometry.Circle.getCenter()", "c.getCenter().getX()"], "Fixed commit": "90a7281640aa6e428b3f850a11dc05b92bcd308d", "Url": "https://api.github.com/repos/aaronwilhelm1/SpecialOps", "Date": "2017-01-09T21:38:58Z"},
{"Line": "=>1152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getPoint().getAngleBetween(b.getMiddle())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((java.lang.Math.PI) * 7) / 4) < rotation) { if ((c.getCenter().getX()) > (player.getPoint().getX())) { canMoveX = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1874/buggy-version/src.gameobjects.World.java", "BodyUseAPI": [], "Fixed commit": "90a7281640aa6e428b3f850a11dc05b92bcd308d", "Url": "https://api.github.com/repos/aaronwilhelm1/SpecialOps", "Date": "2017-01-09T21:38:58Z"},
{"Line": "=>1132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getPoint().getAngleBetween(b.getMiddle())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((java.lang.Math.PI) / 4) < rotation) && (rotation < (((java.lang.Math.PI) * 3) / 4))) { if ((c.getCenter().getY()) < (player.getPoint().getY())) { canMoveY = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1874/buggy-version/src.gameobjects.World.java", "BodyUseAPI": [], "Fixed commit": "90a7281640aa6e428b3f850a11dc05b92bcd308d", "Url": "https://api.github.com/repos/aaronwilhelm1/SpecialOps", "Date": "2017-01-09T21:38:58Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_changes) != null) { _stable = _changes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3521/buggy-version/src.com.dexode.adapter.RecyclerAdapterCommandManager.java", "BodyUseAPI": [], "Fixed commit": "fc6f5ed1f3b6fd71b413ea4732d86ea823a3c54a", "Url": "https://api.github.com/repos/gelldur/Common-Android", "Date": "2016-04-19T12:37:03Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getSession().getAttribute(\"sessionCloudNumber\")) == null) request.setAttribute(\"error\", \"Session expired\"); else if (\"buildPlain\".equals(request.getParameter(\"cmd\"))) buildPlain(request, response); else if (\"buildCloudNames\".equals(request.getParameter(\"cmd\"))) buildCloudNames(request, response); else if (\"buildRootLinkContract\".equals(request.getParameter(\"cmd\"))) buildRootLinkContract(request, response); else if (\"buildPublicLinkContract\".equals(request.getParameter(\"cmd\"))) buildPublicLinkContract(request, response); else if (\"buildGenericLinkContract\".equals(request.getParameter(\"cmd\"))) buildGenericLinkContract(request, response); else if (\"buildKeyPairs\".equals(request.getParameter(\"cmd\"))) buildKeyPairs(request, response);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3151/buggy-version/webtools.src.main.java.xdi2.webtools.operator.XDIOperator.java", "BodyUseAPI": ["xdi2.webtools.operator.XDIOperator.buildPlain(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.String.equals(request.getParameter(\"cmd\"))", "java.lang.String.equals(request.getParameter(\"cmd\"))", "xdi2.webtools.operator.XDIOperator.buildGenericLinkContract(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.String.equals(request.getParameter(\"cmd\"))", "xdi2.webtools.operator.XDIOperator.buildKeyPairs(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)", "java.lang.String.equals(request.getParameter(\"cmd\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.String.equals(request.getParameter(\"cmd\"))", "xdi2.webtools.operator.XDIOperator.buildRootLinkContract(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "xdi2.webtools.operator.XDIOperator.buildPublicLinkContract(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "xdi2.webtools.operator.XDIOperator.buildCloudNames(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "java.lang.String.equals(request.getParameter(\"cmd\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "f870252630d65e25de2ee1f7912eb0dacdbf69a9", "Url": "https://api.github.com/repos/projectdanube/xdi2", "Date": "2014-08-21T21:33:14Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(dbPath))) { org.liberty.android.fantastischmemo.AnyMemoDBOpenHelper helper = org.liberty.android.fantastischmemo.AnyMemoDBOpenHelperManager.getHelper(this, dbPath); try { final org.liberty.android.fantastischmemo.dao.CardDao cardDao = helper.getCardDao(); revCount = ((int) (cardDao.getScheduledCardCount(null))); newCount = ((int) (cardDao.getNewCardCount(null))); } finally { org.liberty.android.fantastischmemo.AnyMemoDBOpenHelperManager.releaseHelper(helper); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7461/buggy-version/src.org.liberty.android.fantastischmemo.service.AnyMemoService.java", "BodyUseAPI": [], "Fixed commit": "7ed7e19d1881d3e11c5ae903cc4d74bbd2e47436", "Url": "https://api.github.com/repos/helloworld1/AnyMemo", "Date": "2014-03-19T23:35:42Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasIdChanged()) { return this.oldId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2930/buggy-version/runwaysdk-server.src.main.java.com.runwaysdk.dataaccess.EntityDAO.java", "BodyUseAPI": [], "Fixed commit": "cdc4a55833e4bbce9d604b54b996a5839f4be2bc", "Url": "https://api.github.com/repos/terraframe/Runway-SDK", "Date": "2014-06-28T17:20:00Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((listView) != null) && (nics != null)) { nicListAdapter = new org.ovirt.mobile.movirt.ui.NicListAdapter(getActivity(), 0, nics); listView.setAdapter(nicListAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2251/buggy-version/moVirt.src.main.java.org.ovirt.mobile.movirt.ui.NicDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "19ab2b2f69128681ad9594a36ce3c71a69c946a7", "Url": "https://api.github.com/repos/oVirt/moVirt", "Date": "2015-03-25T14:16:17Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((listView) != null) && (disks != null)) { diskListAdapter = new org.ovirt.mobile.movirt.ui.DiskListAdapter(getActivity(), 0, disks); listView.setAdapter(diskListAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2251/buggy-version/moVirt.src.main.java.org.ovirt.mobile.movirt.ui.DiskDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "19ab2b2f69128681ad9594a36ce3c71a69c946a7", "Url": "https://api.github.com/repos/oVirt/moVirt", "Date": "2015-03-25T14:16:17Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doIncludePath) psInc = ps;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1465/buggy-version/railo-java.railo-core.src.railo.runtime.type.UDFImpl.java", "BodyUseAPI": [], "Fixed commit": "a91b87fea66408ca7ef160c964e7eb6c6a6080a3", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-10-10T14:09:33Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doIncludePath && ((getOwnerComponent()) != null)) { psInc = railo.runtime.type.util.ComponentUtil.getPageSource(getOwnerComponent()); if (psInc == (pci.getCurrentTemplatePageSource())) { psInc = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1465/buggy-version/railo-java.railo-core.src.railo.runtime.type.UDFImpl.java", "BodyUseAPI": [], "Fixed commit": "a91b87fea66408ca7ef160c964e7eb6c6a6080a3", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-10-10T14:09:33Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shape.getType()) == (pingere.Shape.Type.Eraser)) g2d.setColor(java.awt.Color.white);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3004/buggy-version/src.pingere.ShapeDraw.java", "BodyUseAPI": [], "Fixed commit": "308529ed4086041b12df02b6d6d54183d5d307a8", "Url": "https://api.github.com/repos/nicholasday/pingere", "Date": "2016-11-30T20:24:54Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<T>.remove(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result) adjustSize((-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1566/buggy-version/src.main.java.org.jtrfp.trcl.coll.PartitionedList.java", "BodyUseAPI": [], "Fixed commit": "c45566f873b0cb3f492dd1e6fbf2473a4572802b", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-04-21T05:28:55Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mapper.reader(org.teavm.chromerdp.Response.class).readValue(org.codehaus.jackson.JsonNode)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((response.getError()) != null) { if (org.teavm.chromerdp.ChromeRDPDebugger.logger.isWarnEnabled()) { org.teavm.chromerdp.ChromeRDPDebugger.logger.warn(\"Error message #{} received from browser: {}\", jsonMessage.get(\"id\"), response.getError().toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1891/buggy-version/teavm-chrome-rdp.src.main.java.org.teavm.chromerdp.ChromeRDPDebugger.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,jsonMessage.get(\"id\"),response.getError().toString())", "org.teavm.chromerdp.Response.getError()", "response.getError().toString()"], "Fixed commit": "50a65c27e3eaf5725f2c48baee37dfcab073b5e9", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2014-09-11T13:12:53Z"},
{"Line": "=>826", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tingeltangel.core.Book.getEntryByOID(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (entry != null) { if (!(entry.isSub())) { out = new java.io.FileOutputStream(new java.io.File(dir, ((i + 15001) + \".png\"))); tingeltangel.core.Codes.drawPng(tingeltangel.core.Translator.ting2code((i + 15001)), 100, 100, out); out.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3322/buggy-version/src.main.java.tingeltangel.core.Book.java", "BodyUseAPI": ["tingeltangel.core.Entry.isSub()"], "Fixed commit": "7b30e7ae3ee7afe3435bead900567e3c8552c027", "Url": "https://api.github.com/repos/Martin-Dames/Tingeltangel", "Date": "2016-03-03T00:16:10Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.btobastian.javacord.entities.Server.getChannelById(packet.getString(\"id\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (channel == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8153/buggy-version/src.main.java.de.btobastian.javacord.utils.handler.channel.ChannelDeleteHandler.java", "BodyUseAPI": [], "Fixed commit": "5f8ea3b8b626c5bb816ec3b71b3f476f377914f0", "Url": "https://api.github.com/repos/shawishi/Javacord", "Date": "2017-08-25T11:04:25Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.btobastian.javacord.entities.Server.getVoiceChannelById(packet.getString(\"id\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (channel == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8153/buggy-version/src.main.java.de.btobastian.javacord.utils.handler.channel.ChannelDeleteHandler.java", "BodyUseAPI": [], "Fixed commit": "5f8ea3b8b626c5bb816ec3b71b3f476f377914f0", "Url": "https://api.github.com/repos/shawishi/Javacord", "Date": "2017-08-25T11:04:25Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (position != null) { Position[] neighbsOfNeighbs = Neighbor.getNeighb(position, map); for (int j = 0; j < (neighbsOfNeighbs.length); j++) { if ((neighbsOfNeighbs[j]) != null) { if ((map.getPos(neighbsOfNeighbs[j])) == 'P') numberOfPolices++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8871/buggy-version/ThiefandPolice.src.Thief.java", "BodyUseAPI": ["Neighbor.getNeighb(Position,Map)"], "Fixed commit": "27ece223f3699b1f2c6edda2ac97d90469feea7e", "Url": "https://api.github.com/repos/Tabrizian/ThiefandPolice", "Date": "2015-04-10T18:58:15Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scaleType != (mScaleType)) { setScaleType(scaleType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2590/buggy-version/src.com.example.touch.TouchImageView.java", "BodyUseAPI": ["com.example.touch.TouchImageView.setScaleType(com.example.touch.ScaleType)"], "Fixed commit": "52d5d63101fa54a02de62785157491ab06c4ea08", "Url": "https://api.github.com/repos/MikeOrtiz/TouchImageView", "Date": "2014-04-16T07:02:15Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (channelMap.containsKey(block.getName())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2817/buggy-version/src.main.java.cas.cs4tb3.mellowd.parser.TrackManager.java", "BodyUseAPI": [], "Fixed commit": "aa21b8f3085b342ebc919e928ef61050321664dd", "Url": "https://api.github.com/repos/SpencerPark/MellowD", "Date": "2016-04-03T23:06:31Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tree.numRoles) == 1) { mutualWin = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2244/buggy-version/src.org.ggp.base.player.gamer.statemachine.sancho.TreeNode.java", "BodyUseAPI": [], "Fixed commit": "0e6acc98d3edcb2c604ada7720d56b5b56280d29", "Url": "https://api.github.com/repos/SteveDraper/ggp-base", "Date": "2014-06-16T21:40:35Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.round(float)", "java.lang.Math.round(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((x >= 0) && (y >= 0)) { if (black) { tmp = new com.javago.client.Stone(x, y, java.awt.Color.BLACK); }else { tmp = new com.javago.client.Stone(x, y, java.awt.Color.WHITE); } if (!(list.contains(tmp))) { list.add(tmp); black = !(black); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3172/buggy-version/src.main.java.com.javago.client.Board.java", "BodyUseAPI": [], "Fixed commit": "eff713057c461f006d7d687820d3f0bc68f8782b", "Url": "https://api.github.com/repos/TheJacob96/JavaGo", "Date": "2016-12-09T00:20:36Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((builder.length()) > 6) { builder.setLength(((builder.length()) - 6)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/931/buggy-version/app.src.main.java.com.melancholiclabs.eleganterowid.pages.LawFragment.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.setLength(int)"], "Fixed commit": "d83636a03cb5e5c2253e069610ee02455a1be2d9", "Url": "https://api.github.com/repos/melancholiclabs/ElegantErowid", "Date": "2016-05-21T21:13:58Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((builder.length()) > 6) { builder.setLength(((builder.length()) - 6)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/931/buggy-version/app.src.main.java.com.melancholiclabs.eleganterowid.pages.LawFragment.java", "BodyUseAPI": ["java.lang.StringBuilder.setLength(int)", "java.lang.StringBuilder.length()"], "Fixed commit": "d83636a03cb5e5c2253e069610ee02455a1be2d9", "Url": "https://api.github.com/repos/melancholiclabs/ElegantErowid", "Date": "2016-05-21T21:13:58Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mView) != null) { mView.getLocationInWindow(location); int x = (location[0]) + ((mView.getWidth()) / 2); int y = (location[1]) + ((mView.getHeight()) / 2); return new android.graphics.Point(x, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/514/buggy-version/library.src.com.espian.showcaseview.targets.ViewTarget.java", "BodyUseAPI": [], "Fixed commit": "eed2498467ed800f1f64c161c8f51fca6981bb2e", "Url": "https://api.github.com/repos/bwp/ShowcaseView", "Date": "2014-01-07T21:58:48Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.status.equals(\"IDLE\"))) { return this.stmtId.toString(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1834/buggy-version/plugins.org.jkiss.dbeaver.ext.exasol.src.org.jkiss.dbeaver.ext.exasol.model.app.ExasolServerSession.java", "BodyUseAPI": [], "Fixed commit": "f0cd2a04ad32edf9617699478f3aff905a8349cd", "Url": "https://api.github.com/repos/dbeaver/dbeaver", "Date": "2016-10-13T06:13:33Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (errorCode != 3) { android.util.Log.w(com.loicortola.controller.resolver.MulticastDNSResolver.TAG, (((\"Fail!: \" + (serviceInfo.toString())) + \" : \") + errorCode)); }else { listener.onServiceResolved(serviceInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3059/buggy-version/android.app.src.main.java.com.loicortola.controller.resolver.MulticastDNSResolver.java", "BodyUseAPI": ["android.util.Log.w(java.lang.String,(((\"Fail!: \" + (serviceInfo.toString())) + \" : \") + errorCode))"], "Fixed commit": "f1b1fe74ab551d8dbee03bf256fdfe7e42f51439", "Url": "https://api.github.com/repos/loicortola/led-controller", "Date": "2017-08-05T20:41:50Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWall) return new java.awt.Rectangle(((x) + 20), y, 60, 100); else return new java.awt.Rectangle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4415/buggy-version/DigIt3.src.com.dig.www.npc.SirCobalt.java", "BodyUseAPI": [], "Fixed commit": "ff02788d5f8c0220b644388441cf7ae72e9cf070", "Url": "https://api.github.com/repos/Bisharp/AppliedJava", "Date": "2015-12-09T19:35:24Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileModel.getName().toLowerCase().endsWith(\".java\")) { javaModuleView.removeAll(); org.openflexo.technologyadapter.java.view.JAVAFileViewConstructor constructor = new org.openflexo.technologyadapter.java.view.JAVAFileViewConstructor(fileModel, javaModuleView); javaModuleView.add(fileModel.getName(), constructor.getJavaVisualizationViewer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6432/buggy-version/javaconnector-ui.src.main.java.org.openflexo.technologyadapter.java.view.GraphVertexMouseListener.java", "BodyUseAPI": ["org.openflexo.technologyadapter.java.view.JAVAModuleView.add(fileModel.getName(),constructor.getJavaVisualizationViewer())", "org.openflexo.technologyadapter.java.model.JAVAFileModel.getName()"], "Fixed commit": "33fecf701509fe7bda7c7fb10732a2e3db95d8f6", "Url": "https://api.github.com/repos/MaydayWeiwei/java_connector", "Date": "2015-02-09T09:19:45Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["provider.getComputeServices().getImageSupport().getImage(withLaunchOptions.getMachineImageId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((image != null) && ((image.getTag(\"contentLink\")) != null)) params.setSourceImage(((java.lang.String) (image.getTag(\"contentLink\")))); else throw new org.dasein.cloud.google.compute.server.CloudException((\"Problem getting the contentLink tag value from the image for \" + (withLaunchOptions.getMachineImageId())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8563/buggy-version/src.main.java.org.dasein.cloud.google.compute.server.ServerSupport.java", "BodyUseAPI": ["org.dasein.cloud.google.compute.server.AttachedDiskInitializeParams.setSourceImage(((java.lang.String) (image.getTag(\"contentLink\"))))", "org.dasein.cloud.google.compute.server.MachineImage.getTag(java.lang.String)"], "Fixed commit": "60db65c57fabe21aea89c6596aa1be346d93f429", "Url": "https://api.github.com/repos/unwin/dasein-cloud-google", "Date": "2014-07-31T22:51:50Z"},
{"Line": "=>945", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action.equals(OpenStegoFrame.ActionCommands.BROWSE_WM_GSG_SIGFILE)) { if (!(fileName.toLowerCase().endsWith(net.sourceforge.openstego.ui.OpenStegoUI.SIG_FILE_EXTENSION))) { fileName = fileName + (net.sourceforge.openstego.ui.OpenStegoUI.SIG_FILE_EXTENSION); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3609/buggy-version/src.net.sourceforge.openstego.ui.OpenStegoUI.java", "BodyUseAPI": [], "Fixed commit": "99755d20e22d4bf102dd1bf5b2b2d2eb5c494c5e", "Url": "https://api.github.com/repos/syvaidya/openstego", "Date": "2016-12-29T14:50:08Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((simpleCourse.getGrade()) == null) || (simpleCourse.getGrade().isEmpty())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8462/buggy-version/src.main.java.ca.ams.services.StudentService.java", "BodyUseAPI": [], "Fixed commit": "690b1166a5ab20770c5cbbe8edec3d9d385a702d", "Url": "https://api.github.com/repos/vincent-wen/ams", "Date": "2014-12-04T15:17:00Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.tamaya.format.ConfigurationFormats.readConfigurationData(java.net.URL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (config == null) { java.util.logging.Logger.getLogger(getClass().getName()).log(java.util.logging.Level.INFO, (\"Failed to read configuration from \" + url)); return java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8299/buggy-version/sandbox.metamodels.simple.src.main.java.org.apache.tamaya.metamodel.simple.internal.ConfigDirPropertySourceProvider.java", "BodyUseAPI": [], "Fixed commit": "ef18894e5082e55affc00896157275042af06a05", "Url": "https://api.github.com/repos/apache/incubator-tamaya", "Date": "2015-08-02T16:09:32Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) != null) { causeException = e.getCause(); }else { causeException = e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2206/buggy-version/src.main.java.org.traktion0.safenet.client.commands.SafenetCommand.java", "BodyUseAPI": ["java.lang.Exception.getCause()"], "Fixed commit": "ed648b1ee12b210b7d1bee4387c729873d687b63", "Url": "https://api.github.com/repos/traktion/safenet-java-client", "Date": "2016-10-14T17:58:49Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (temp.copyAllowed()) { java.lang.String dirID = support.Utilities.getDirectoryUniqueID(file.getPath(), file.getDepth(), root.getPath()); didProcessFile(temp, new fileManagement.SynchiveDirectory(dirID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4595/buggy-version/fileManagement.fileProcessor.FileProcessorBase.java", "BodyUseAPI": ["fileManagement.fileProcessor.FileProcessorBase.didProcessFile(fileManagement.SynchiveFile,fileManagement.SynchiveDirectory)"], "Fixed commit": "5b481dc4a1d10e7d94c74050dcaaff5994aa68e4", "Url": "https://api.github.com/repos/tonyhsu17/Synchive", "Date": "2016-05-11T07:28:37Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getEventType()) == (javafx.scene.input.MouseEvent.MOUSE_EXITED)) { mouseInFrame = false; mouseExited(theInd); event.consume(); }else if ((event.getEventType()) == (javafx.scene.input.KeyEvent.KEY_PRESSED)) { keyPressed(theInd, ((javafx.scene.input.KeyEvent) (event))); event.consume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4797/buggy-version/src.smp.components.staff.StaffInstrumentEventHandler.java", "BodyUseAPI": ["javafx.event.Event.consume()", "javafx.event.Event.getEventType()", "javafx.event.Event.consume()"], "Fixed commit": "420930314f5e2a3b0bbaf9313dafd83b8ea5570f", "Url": "https://api.github.com/repos/DC37/Super-Mario-Paint", "Date": "2013-11-25T19:28:16Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gotCumulative) { com.Ben12345rocks.VotingPlugin.OtherRewards.OtherVoteReward.plugin.debug((((user.getPlayerName()) + \" got cumulative \") + votesRequired)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8659/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.OtherRewards.OtherVoteReward.java", "BodyUseAPI": [], "Fixed commit": "f2523b63c3e51d05932ec56e437e19e56571715f", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2017-02-10T01:00:28Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((users != null) && (!(users.isEmpty()))) { if ((users.charAt(0)) == ',') { users = users.substring(1, users.length()); }else if ((users.charAt(((users.length()) - 1))) == ',') { users = users.substring(0, ((users.length()) - 1)); }else users = users.replace(\",,\", \",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2292/buggy-version/web-installation-tracker.src.com.luv2code.springdemo.service.MailService.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "554f05f4bf63f9fc421d26e1bd14ff465475b1ab", "Url": "https://api.github.com/repos/himanshugrover007/web-installation-tracker", "Date": "2017-06-20T04:25:19Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(button.getParams().getViewIds()[1])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (click == null) { click = icon; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6072/buggy-version/library.src.main.java.org.hitogo.alert.popup.PopupAlertImpl.java", "BodyUseAPI": [], "Fixed commit": "add39c7c490fb89ff2bcc37f80e5dc13f6661f64", "Url": "https://api.github.com/repos/Mordag/hitogo", "Date": "2017-12-12T12:48:47Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(button.getParams().getViewIds()[1])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (click == null) { click = icon; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6072/buggy-version/library.src.main.java.org.hitogo.alert.view.ViewAlertImpl.java", "BodyUseAPI": [], "Fixed commit": "add39c7c490fb89ff2bcc37f80e5dc13f6661f64", "Url": "https://api.github.com/repos/Mordag/hitogo", "Date": "2017-12-12T12:48:47Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(button.getParams().getViewIds()[1])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (click == null) { click = icon; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6072/buggy-version/library.src.main.java.org.hitogo.alert.dialog.DialogAlertImpl.java", "BodyUseAPI": [], "Fixed commit": "add39c7c490fb89ff2bcc37f80e5dc13f6661f64", "Url": "https://api.github.com/repos/Mordag/hitogo", "Date": "2017-12-12T12:48:47Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (insn instanceof jx86.lang.Instruction.AddrReg) { write(((jx86.lang.Instruction.AddrReg) (insn))); }else if (insn instanceof jx86.lang.Instruction.AddrRegReg) { write(((jx86.lang.Instruction.AddrRegReg) (insn))); }else if (insn instanceof jx86.lang.Instruction.ImmIndReg) { write(((jx86.lang.Instruction.ImmIndReg) (insn))); }else if (insn instanceof jx86.lang.Instruction.RegImmInd) { write(((jx86.lang.Instruction.RegImmInd) (insn))); }else if (insn instanceof jx86.lang.Instruction.RegIndRegImm) { write(((jx86.lang.Instruction.RegIndRegImm) (insn))); }else if (insn instanceof jx86.lang.Instruction.IndRegImmReg) { write(((jx86.lang.Instruction.IndRegImmReg) (insn))); }else { throw new java.lang.IllegalArgumentException((\"unknown instruction encountered: \" + insn)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8283/buggy-version/src.jx86.io.AsmFileWriter.java", "BodyUseAPI": [], "Fixed commit": "928d0c3a32e56ab2c7a6499ae698ded208a99ba1", "Url": "https://api.github.com/repos/DavePearce/jx86", "Date": "2016-05-11T01:17:10Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(running)) { running = true; workerList = new java.util.concurrent.PriorityBlockingQueue<com.almundo.model.Worker>(workerService.findAllWorkers()); for (int threadNumber = 0; threadNumber < 10; threadNumber++) { statusBeans.add(new com.almundo.bean.LineStatusBean()); com.almundo.control.DispatchWorker callableTask = new com.almundo.control.DispatchWorker(threadNumber, incomingCalls, workerList, statusBeans); threadPool.submit(callableTask); java.lang.System.out.println(((\"Created Line: \" + threadNumber) + \" ..waiting for calls\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7861/buggy-version/AsyncCallCenter.src.main.java.com.almundo.control.Dispatcher.java", "BodyUseAPI": [], "Fixed commit": "6652a64e155f82b22c6c3de7a39b0f371a78dcd6", "Url": "https://api.github.com/repos/gustavoagg/AsyncCallCenter", "Date": "2017-03-27T03:08:58Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(environment.isAnswered(id.getName()))) { return environment.getType(id.getName()).accept(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2800/buggy-version/Loading.QL.src.QL.evaluation.Evaluator.java", "BodyUseAPI": ["QL.evaluation.IdExpr.getName()", "QL.Environment.getType(id.getName())", "environment.getType(id.getName()).accept(QL.evaluation.Evaluator)"], "Fixed commit": "440d7550ecb9632b66547b121860cf8eea9c50d1", "Url": "https://api.github.com/repos/software-engineering-amsterdam/myriad-ql", "Date": "2017-03-14T14:31:51Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.curBB) != null) { if ((bb.size()) != 0) { nez.debugger.DebugVMInstruction last = this.curBB.get(((this.curBB.size()) - 1)); if (!((last.op.equals(Opcode.Ijump)) || (last.op.equals(Opcode.Icall)))) { this.curBB.setSingleSuccessor(bb); } }else { this.curBB.setSingleSuccessor(bb); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4484/buggy-version/src.nez.debugger.IRBuilder.java", "BodyUseAPI": [], "Fixed commit": "54741dfa7ec9bf5ecd440565e149163eacdf4ef0", "Url": "https://api.github.com/repos/shun-honda/nez-1", "Date": "2015-07-04T18:34:30Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPrimary) { parent.addView(view, 0); }else { parent.addView(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4907/buggy-version/app.src.main.java.com.squizbit.opendialer.library.widget.ContactDetailViewBuilder.java", "BodyUseAPI": [], "Fixed commit": "a5170a01da16c572d2731e4533c9d4d3d93d417c", "Url": "https://api.github.com/repos/dwaynehoy/OpenDialer", "Date": "2015-12-19T06:41:03Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((letter == 0) && (number != 0)) && (number != (sizeNumber - 1))) { map[letter][number].addNeighbors(map[(letter + 1)][(number - 1)]); map[letter][number].addNeighbors(map[(letter + 1)][number]); }else if (((letter == (sizeLetter - 1)) && (number != 0)) && (number != (sizeNumber - 1))) { map[letter][number].addNeighbors(map[(letter - 1)][(number - 1)]); map[letter][number].addNeighbors(map[(letter - 1)][number]); }else if ((letter == 0) && (number == 0)) { map[letter][number].addNeighbors(map[(letter + 1)][number]); }else if ((letter == (sizeLetter - 1)) && (number == 0)) { map[letter][number].addNeighbors(map[(letter - 1)][number]); }else if ((letter == 0) && (number == (sizeNumber - 1))) { map[letter][number].addNeighbors(map[(letter + 1)][(number - 1)]); map[letter][number].addNeighbors(map[(letter + 1)][number]); }else if ((letter == (sizeLetter - 1)) && (number == (sizeNumber - 1))) { map[letter][number].addNeighbors(map[(letter - 1)][(number - 1)]); map[letter][number].addNeighbors(map[(letter - 1)][number]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4026/buggy-version/src.main.java.it.polimi.ingsw.cg_23.controller.MapInitializer.java", "BodyUseAPI": ["map[letter][number].addNeighbors(map[(letter - 1)][number])", "map[letter][number].addNeighbors(map[(letter + 1)][(number - 1)])", "map[letter][number].addNeighbors(map[(letter + 1)][number])", "map[letter][number].addNeighbors(map[(letter - 1)][(number - 1)])", "map[letter][number].addNeighbors(map[(letter + 1)][number])", "map[letter][number].addNeighbors(map[(letter + 1)][number])", "map[letter][number].addNeighbors(map[(letter + 1)][(number - 1)])", "map[letter][number].addNeighbors(map[(letter - 1)][(number - 1)])", "map[letter][number].addNeighbors(map[(letter - 1)][number])", "map[letter][number].addNeighbors(map[(letter - 1)][number])"], "Fixed commit": "eb5ddb3e491a1fbc62d3adecd8c8e0254316ebc2", "Url": "https://api.github.com/repos/TopoDiFogna/Escape_From_Aliens", "Date": "2015-05-27T13:56:38Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((letter != 0) && (letter != (sizeLetter - 1))) && (number == 0)) { map[letter][number].addNeighbors(map[(letter - 1)][number]); map[letter][number].addNeighbors(map[(letter + 1)][number]); }else if (((letter != 0) && (letter != (sizeLetter - 1))) && (number == (sizeNumber - 1))) { map[letter][number].addNeighbors(map[(letter + 1)][(number - 1)]); map[letter][number].addNeighbors(map[(letter + 1)][number]); map[letter][number].addNeighbors(map[(letter - 1)][(number - 1)]); map[letter][number].addNeighbors(map[(letter - 1)][number]); }else if (((letter == 0) && (number != 0)) && (number != (sizeNumber - 1))) { map[letter][number].addNeighbors(map[(letter + 1)][(number - 1)]); map[letter][number].addNeighbors(map[(letter + 1)][number]); }else if (((letter == (sizeLetter - 1)) && (number != 0)) && (number != (sizeNumber - 1))) { map[letter][number].addNeighbors(map[(letter - 1)][(number - 1)]); map[letter][number].addNeighbors(map[(letter - 1)][number]); }else if ((letter == 0) && (number == 0)) { map[letter][number].addNeighbors(map[(letter + 1)][number]); }else if ((letter == (sizeLetter - 1)) && (number == 0)) { map[letter][number].addNeighbors(map[(letter - 1)][number]); }else if ((letter == 0) && (number == (sizeNumber - 1))) { map[letter][number].addNeighbors(map[(letter + 1)][(number - 1)]); map[letter][number].addNeighbors(map[(letter + 1)][number]); }else if ((letter == (sizeLetter - 1)) && (number == (sizeNumber - 1))) { map[letter][number].addNeighbors(map[(letter - 1)][(number - 1)]); map[letter][number].addNeighbors(map[(letter - 1)][number]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4026/buggy-version/src.main.java.it.polimi.ingsw.cg_23.controller.MapInitializer.java", "BodyUseAPI": ["map[letter][number].addNeighbors(map[(letter + 1)][number])", "map[letter][number].addNeighbors(map[(letter - 1)][(number - 1)])", "map[letter][number].addNeighbors(map[(letter + 1)][(number - 1)])", "map[letter][number].addNeighbors(map[(letter + 1)][number])", "map[letter][number].addNeighbors(map[(letter - 1)][(number - 1)])", "map[letter][number].addNeighbors(map[(letter - 1)][number])", "map[letter][number].addNeighbors(map[(letter + 1)][(number - 1)])", "map[letter][number].addNeighbors(map[(letter - 1)][number])", "map[letter][number].addNeighbors(map[(letter + 1)][number])", "map[letter][number].addNeighbors(map[(letter - 1)][number])", "map[letter][number].addNeighbors(map[(letter + 1)][(number - 1)])", "map[letter][number].addNeighbors(map[(letter - 1)][(number - 1)])", "map[letter][number].addNeighbors(map[(letter - 1)][number])", "map[letter][number].addNeighbors(map[(letter + 1)][number])", "map[letter][number].addNeighbors(map[(letter - 1)][number])", "map[letter][number].addNeighbors(map[(letter + 1)][number])"], "Fixed commit": "eb5ddb3e491a1fbc62d3adecd8c8e0254316ebc2", "Url": "https://api.github.com/repos/TopoDiFogna/Escape_From_Aliens", "Date": "2015-05-27T13:56:38Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7734/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "5ff9db3832ad474005e00e1b42620e3d6eb24b20", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-13T03:01:29Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((constraint != null) && ((constraint.length()) > 0)) { queryResults = mDatabaseHelper.getIngredientsTranslations(10, mLanguage, constraint.toString()); }else { queryResults = new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5970/buggy-version/AmuseApp.app.src.main.java.com.amusebouche.adapters.AutoCompleteArrayAdapter.java", "BodyUseAPI": ["java.lang.CharSequence.toString()", "com.amusebouche.services.DatabaseHelper.getIngredientsTranslations(int,java.lang.String,java.lang.String)"], "Fixed commit": "6f49793e0b518f300e954278e929d7f5a7d0574a", "Url": "https://api.github.com/repos/nessa/serenity-app", "Date": "2016-08-08T11:29:43Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getPic()) != null) { values.put(AccountSQLiteHelper.COLUMN_PIC, user.getPic()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6183/buggy-version/Locus.src.com.example.locus.core.AccountDataSource.java", "BodyUseAPI": ["com.example.locus.entity.User.getPic()", "android.content.ContentValues.put(AccountSQLiteHelper.COLUMN_PIC,user.getPic())"], "Fixed commit": "d1db72d7ad4a6ab4c548be589ba79476a46469fd", "Url": "https://api.github.com/repos/Wenyao/LocUs", "Date": "2013-05-02T00:47:48Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getPic()) != null) { values.put(AccountSQLiteHelper.COLUMN_PIC, user.getPic()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6183/buggy-version/Locus.src.com.example.locus.core.AccountDataSource.java", "BodyUseAPI": ["android.content.ContentValues.put(AccountSQLiteHelper.COLUMN_PIC,user.getPic())", "com.example.locus.entity.User.getPic()"], "Fixed commit": "d1db72d7ad4a6ab4c548be589ba79476a46469fd", "Url": "https://api.github.com/repos/Wenyao/LocUs", "Date": "2013-05-02T00:47:48Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getPic()) != null) { values.put(AccountSQLiteHelper.COLUMN_PIC, user.getPic()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6183/buggy-version/Locus.src.com.example.locus.core.AccountDataSource.java", "BodyUseAPI": ["android.content.ContentValues.put(AccountSQLiteHelper.COLUMN_PIC,user.getPic())", "com.example.locus.entity.User.getPic()"], "Fixed commit": "d1db72d7ad4a6ab4c548be589ba79476a46469fd", "Url": "https://api.github.com/repos/Wenyao/LocUs", "Date": "2013-05-02T00:47:48Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.getResultSet()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((res == null) || ((res.getMetaData()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2435/buggy-version/src.fatworm.sister.SqlClient.java", "BodyUseAPI": [], "Fixed commit": "35536634773e3b57620b82eef08b4a9bb98254bd", "Url": "https://api.github.com/repos/liuexp/fatworm-sister", "Date": "2013-04-23T10:07:45Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) return \"null\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2435/buggy-version/src.fatworm.sister.SqlClient.java", "BodyUseAPI": [], "Fixed commit": "35536634773e3b57620b82eef08b4a9bb98254bd", "Url": "https://api.github.com/repos/liuexp/fatworm-sister", "Date": "2013-04-23T10:07:45Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.emf.eef.runtime.binding.settings.EEFBindingSettingsProvider.getBindingSettings(org.eclipse.emf.ecore.EPackage)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(bindingSettings instanceof org.eclipse.emf.eef.runtime.ui.swt.internal.binding.settings.GenericBindingSettings)) { java.lang.Iterable<org.eclipse.emf.eef.runtime.ui.swt.internal.binding.settings.GenericBindingSettings> filter = com.google.common.collect.Iterables.filter(bindingSettingsProvider.getAllBindingSettings(ePackage), org.eclipse.emf.eef.runtime.ui.swt.internal.binding.settings.GenericBindingSettings.class); java.util.Iterator<org.eclipse.emf.eef.runtime.ui.swt.internal.binding.settings.GenericBindingSettings> it = filter.iterator(); if (it.hasNext()) { bindingSettings = it.next(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7631/buggy-version/plugins.org.eclipse.emf.eef.editor.src-gen.org.eclipse.emf.eef.runtime.editingModel.presentation.EditingModelModelWizard.java", "BodyUseAPI": [], "Fixed commit": "af7dff0e01aaf88c29b5d94e8aeebec8d2cfedfd", "Url": "https://api.github.com/repos/eclipse/eef", "Date": "2015-02-26T10:13:02Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mapit.backend.StatusEndpoint.showLatestStatus(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((s.getPersonMail()) != null) statusList.add(s);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6538/buggy-version/backend.src.main.java.com.mapit.backend.StatusEndpoint.java", "BodyUseAPI": ["java.util.ArrayList<com.mapit.backend.StatusData>.add(com.mapit.backend.StatusData)"], "Fixed commit": "fe7f5a307e03ed280f3aff264d5b4b444d282d05", "Url": "https://api.github.com/repos/shubhashis-k/MAPit", "Date": "2015-02-19T19:32:47Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x == (matches.size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8047/buggy-version/src.com.company.ManualDateAssignFrame.java", "BodyUseAPI": [], "Fixed commit": "f1bd718f938a348d9e138cc62714dbdedb81c436", "Url": "https://api.github.com/repos/ziomek232323/Projekt", "Date": "2016-03-08T10:07:38Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (password == null) { isValid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8478/buggy-version/src.com.nickelheim.models.UserList.java", "BodyUseAPI": [], "Fixed commit": "1a26d4c0f800721c55f6895f8bb9dacb5c5a8c33", "Url": "https://api.github.com/repos/PATHobai/Nickelheim", "Date": "2014-02-19T04:04:41Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (username == null) { isValid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8478/buggy-version/src.com.nickelheim.models.UserList.java", "BodyUseAPI": [], "Fixed commit": "1a26d4c0f800721c55f6895f8bb9dacb5c5a8c33", "Url": "https://api.github.com/repos/PATHobai/Nickelheim", "Date": "2014-02-19T04:04:41Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userList.containsKey(username)) { isValid = false; }else { addUser(username, password); isValid = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8478/buggy-version/src.com.nickelheim.models.UserList.java", "BodyUseAPI": ["com.nickelheim.models.UserList.addUser(java.lang.String,java.lang.String)"], "Fixed commit": "1a26d4c0f800721c55f6895f8bb9dacb5c5a8c33", "Url": "https://api.github.com/repos/PATHobai/Nickelheim", "Date": "2014-02-19T04:04:41Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.jar.JarFile.getEntry(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (zipEntry == null) { zipEntry = jarFile.getEntry(java.lang.String.format(\"messages_en.yml\", lang)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/795/buggy-version/src.main.java.org.bitbucket.ucchy.undine.Messages.java", "BodyUseAPI": [], "Fixed commit": "b65fb8baa605abc0b5e9443639941a6d5dadeec8", "Url": "https://api.github.com/repos/madtomic/UndineMailer", "Date": "2015-04-26T20:33:08Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(file.exists())) { try { org.bitbucket.ucchy.undine.Messages.defaultMessages.save(file); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/795/buggy-version/src.main.java.org.bitbucket.ucchy.undine.Messages.java", "BodyUseAPI": [], "Fixed commit": "b65fb8baa605abc0b5e9443639941a6d5dadeec8", "Url": "https://api.github.com/repos/madtomic/UndineMailer", "Date": "2015-04-26T20:33:08Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (metadataObject instanceof voldemort.store.readonly.ReadOnlyStorageMetadata) { return ((voldemort.store.readonly.ReadOnlyStorageMetadata) (metadataObject)); }else if (metadataObject instanceof java.util.Map) { try { return new voldemort.store.readonly.ReadOnlyStorageMetadata(((java.util.Map<java.lang.String, java.lang.Object>) (metadataObject))); } catch (java.lang.Exception e) { throw new java.lang.IllegalArgumentException(((((\"Could not parse ReadOnlyStorageMetadata for key '\" + key) + \"'. \") + \"It contains: \") + (metadataObject.toString()))); } }else { throw new java.lang.IllegalArgumentException(((((\"The metadata key '\" + key) + \"' does not contain nested metadata! \") + \"It contains: \") + (metadataObject.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6611/buggy-version/src.java.voldemort.store.readonly.ReadOnlyStorageMetadata.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.Object.toString()"], "Fixed commit": "5d4eb2e6aa0df200e9933ef3861b780c7d5cca90", "Url": "https://api.github.com/repos/FelixGV/voldemort", "Date": "2015-11-14T02:57:06Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentManager.findFragmentById(R.id.container)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (frg == null) { android.support.v4.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction(); com.vsokoltsov.stackqa.views.QuestionsListFragment fragment = new com.vsokoltsov.stackqa.views.QuestionsListFragment(); fragmentTransaction.add(R.id.container, fragment); fragmentTransaction.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5601/buggy-version/app.src.main.java.com.vsokoltsov.stackqa.views.QuestionsListActivity.java", "BodyUseAPI": [], "Fixed commit": "74f464982327de19d799b662a1ce4173a28fda77", "Url": "https://api.github.com/repos/vsokoltsov/StackQA-Android", "Date": "2015-11-06T22:49:29Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isRefreshing) || (isLoadingMore)) { android.util.Log.d(com.yat3s.chopin.ChopinLayout.TAG, \"event--> onInterceptTouchEvent: MOVE ,true intercepted while refreshing!\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5335/buggy-version/chopin.src.main.java.com.yat3s.chopin.ChopinLayout.java", "BodyUseAPI": [], "Fixed commit": "952888966327d456ad56159c89a19cf9f4bafc2f", "Url": "https://api.github.com/repos/Yat3s/Chopin", "Date": "2017-07-11T16:33:38Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.waveprotocol.box.webclient.search.WaveContext.getConversations()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (observableConversations == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3948/buggy-version/src.org.waveprotocol.box.webclient.client.WindowTitleHandler.java", "BodyUseAPI": [], "Fixed commit": "7ebc3ee8767851ad3c9b8ef6c38c8a500a5bb91b", "Url": "https://api.github.com/repos/alown/wave", "Date": "2012-09-19T09:48:32Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.waveprotocol.wave.model.conversation.ObservableConversation.getRootThread()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rootThread == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3948/buggy-version/src.org.waveprotocol.box.webclient.client.WindowTitleHandler.java", "BodyUseAPI": [], "Fixed commit": "7ebc3ee8767851ad3c9b8ef6c38c8a500a5bb91b", "Url": "https://api.github.com/repos/alown/wave", "Date": "2012-09-19T09:48:32Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.waveprotocol.wave.model.conversation.ObservableConversationView.getRoot()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (root == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3948/buggy-version/src.org.waveprotocol.box.webclient.client.WindowTitleHandler.java", "BodyUseAPI": [], "Fixed commit": "7ebc3ee8767851ad3c9b8ef6c38c8a500a5bb91b", "Url": "https://api.github.com/repos/alown/wave", "Date": "2012-09-19T09:48:32Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.waveprotocol.wave.model.conversation.ObservableConversationThread.getFirstBlip()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (firstBlip == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3948/buggy-version/src.org.waveprotocol.box.webclient.client.WindowTitleHandler.java", "BodyUseAPI": [], "Fixed commit": "7ebc3ee8767851ad3c9b8ef6c38c8a500a5bb91b", "Url": "https://api.github.com/repos/alown/wave", "Date": "2012-09-19T09:48:32Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (deltaHistory != null) { for (org.waveprotocol.box.server.waveserver.ByteStringMessage<org.waveprotocol.wave.federation.Proto.ProtocolAppliedWaveletDelta> d : deltaHistory) { deltaHistoryBytes.add(d.getByteString()); } }else { org.waveprotocol.box.server.waveserver.WaveServerImpl.LOG.info(\"deltaHistory = null. Is this the start of a new wave?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3948/buggy-version/src.org.waveprotocol.box.server.waveserver.WaveServerImpl.java", "BodyUseAPI": [], "Fixed commit": "7ebc3ee8767851ad3c9b8ef6c38c8a500a5bb91b", "Url": "https://api.github.com/repos/alown/wave", "Date": "2012-09-19T09:48:32Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (str == null) throw new java.lang.IllegalArgumentException((\"On file \" + file));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3020/buggy-version/src.com.podevs.android.poAndroid.pokeinfo.InfoFiller.java", "BodyUseAPI": [], "Fixed commit": "6e33e4a421b8ef311cd81b696427b4cf17a3d211", "Url": "https://api.github.com/repos/MidwayMarshall/android-client", "Date": "2017-01-09T22:10:11Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timedout == true) { error = new java.io.IOException(((\"Failover timeout of \" + (timeout)) + \" ms reached.\")); }else if (!(willReconnect())) { error = new java.io.IOException(((\"Reconnect attempts of \" + (maxReconnectAttempts)) + \" exceeded\")); }else { error = new java.io.IOException(\"Unexpected failure.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7937/buggy-version/activemq-client.src.main.java.org.apache.activemq.transport.failover.FailoverTransport.java", "BodyUseAPI": [], "Fixed commit": "8514e38135cf3c4da913806f3677a89785613e10", "Url": "https://api.github.com/repos/gtully/activemq", "Date": "2015-09-29T15:34:36Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.caller) == null) { CSVActivity.fm.setRootCapability(capability); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5342/buggy-version/application.CSVAndroid.src.main.java.no.ntnu.item.csv.firststart.FirstStartActivity.java", "BodyUseAPI": [], "Fixed commit": "30066087feccb34f82f18a3e7d1747be90d9b071", "Url": "https://api.github.com/repos/zerqent/cloud-storage-vault", "Date": "2011-04-11T09:56:17Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(main.commons.util.FileUtil.isValidPath(newStoragePath))) { return new main.logic.command.CommandResult(main.logic.command.StorageCommand.MESSAGE_INVALID_PATH); }else { main.commons.core.EventsCenter.getInstance().post(new main.commons.events.storage.FilePathChangedEvent(newStoragePath, model.getTaskTracker())); return new main.logic.command.CommandResult(main.logic.command.StorageCommand.MESSAGE_SUCCESS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7963/buggy-version/task-tracker.src.main.java.main.logic.command.StorageCommand.java", "BodyUseAPI": ["main.commons.core.EventsCenter.getInstance().post(main.commons.events.storage.FilePathChangedEvent)"], "Fixed commit": "7310d83f3fc6acddb1d4ce5f0035584223d54784", "Url": "https://api.github.com/repos/CS2103AUG2016-T09-C3/main", "Date": "2016-11-06T03:05:43Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIsRestart)) { view = new mozilla.org.webmaker.view.WebmakerWebView(this, this, pageName, routeParams); android.widget.RelativeLayout layout = ((android.widget.RelativeLayout) (findViewById(id))); layout.addView(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/225/buggy-version/app.src.main.java.mozilla.org.webmaker.WebmakerActivity.java", "BodyUseAPI": [], "Fixed commit": "10b7091ae349feea3b6d1d99f1a6ddefea6770ad", "Url": "https://api.github.com/repos/mozilla/webmaker-android", "Date": "2015-05-19T18:54:11Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rcms.utilities.daqaggregator.datasource.F3DataRetriever.getHLTInfo(daq.getRunNumber())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (d != null) { daq.setHltRate(d); return true; }else { daq.setHltRate(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2039/buggy-version/src.main.java.rcms.utilities.daqaggregator.datasource.F3DataRetriever.java", "BodyUseAPI": ["rcms.utilities.daqaggregator.data.DAQ.setHltRate(java.lang.Double)"], "Fixed commit": "31ab420c72e79b09a92ccb45fa8d0af48e4894f5", "Url": "https://api.github.com/repos/cmsdaq/DAQAggregator", "Date": "2017-03-02T12:50:53Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isPrioritizedMessages()) && ((message.getPriority()) > (lastRecoveredPriority.get()))) { resetTrackedLastRecoveredPriority(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/94/buggy-version/activemq-jdbc-store.src.main.java.org.apache.activemq.store.jdbc.JDBCMessageStore.java", "BodyUseAPI": [], "Fixed commit": "eece28ac7501103490e1cb7bdc547c07c6968525", "Url": "https://api.github.com/repos/apache/activemq", "Date": "2015-07-03T09:30:03Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.hssf.usermodel.HSSFSheet.getRow(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (row == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9271/buggy-version/nl.helixsoft.misc.src.nl.helixsoft.misc.ExcelRecordStream.java", "BodyUseAPI": [], "Fixed commit": "f327d209d654556abc501775b0b86f7009363dfd", "Url": "https://api.github.com/repos/amarillion/helixsoft-commons", "Date": "2015-01-06T13:41:04Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["internetz.SkillFactory.getSkill(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (s == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5372/buggy-version/src.github.TaskSkillsPool.java", "BodyUseAPI": [], "Fixed commit": "fa3d182368637a21ceca5acf550ae489a621447f", "Url": "https://api.github.com/repos/wikiteams/aon-emerging-wikiteams", "Date": "2014-01-20T20:32:53Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (previousLocation == null) { this.previousLocation = org.bukkit.Bukkit.getWorld(\"Earth\").getSpawnLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4998/buggy-version/src.co.sblock.users.User.java", "BodyUseAPI": [], "Fixed commit": "8e40290ac450bc96f2a49e800df337aae2fcba59", "Url": "https://api.github.com/repos/SblockCo/Sblock", "Date": "2014-07-28T14:47:21Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.bukkit.Bukkit.getOfflinePlayer(userID).isOnline()) { setIPAddr(org.bukkit.Bukkit.getPlayer(userID).getAddress().getAddress().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4998/buggy-version/src.co.sblock.users.User.java", "BodyUseAPI": ["org.bukkit.Bukkit.getPlayer(userID).getAddress()", "org.bukkit.Bukkit.getPlayer(userID).getAddress().getAddress()", "org.bukkit.Bukkit.getPlayer(userID).getAddress().getAddress().toString()", "co.sblock.users.User.UserSpawner.setIPAddr(org.bukkit.Bukkit.getPlayer(userID).getAddress().getAddress().toString())", "org.bukkit.Bukkit.getPlayer(java.util.UUID)"], "Fixed commit": "8e40290ac450bc96f2a49e800df337aae2fcba59", "Url": "https://api.github.com/repos/SblockCo/Sblock", "Date": "2014-07-28T14:47:21Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) == (EntityDamageEvent.DamageCause.PROJECTILE)) { org.bukkit.entity.Arrow arrow = ((org.bukkit.entity.Arrow) (e.getDamager())); if ((arrow.getShooter()) instanceof org.bukkit.entity.Player) { damager = ((org.bukkit.entity.Player) (arrow.getShooter())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6126/buggy-version/src.main.java.io.notoh.noclean.EventListener.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Fixed commit": "7fc854c0bffb76dd8e9224abd52cafe151cb9f81", "Url": "https://api.github.com/repos/Notoh/NoClean", "Date": "2017-10-14T00:04:45Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recordClassSetters[i]) == null) { throw new java.lang.RuntimeException(((((\"Unable to find a setter for property '\" + (headersMapping[i])) + \"' of type '\") + (recordClass.getName())) + \"'. Please check that this property exist and that a setter is provided.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6203/buggy-version/easybatch-core.src.main.java.io.github.benas.easybatch.core.mapper.ObjectMapper.java", "BodyUseAPI": [], "Fixed commit": "dcc4e53e0a53eb170fbf98037b4e94cf7f8cc9e8", "Url": "https://api.github.com/repos/benas/easy-batch", "Date": "2014-02-17T22:52:51Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (collection.getGeoR().equalsIgnoreCase(\"null\")) collection.setGeoR(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7770/buggy-version/aidr-manager.src.main.java.qa.qcri.aidr.manager.controller.CollectionController.java", "BodyUseAPI": ["qa.qcri.aidr.manager.hibernateEntities.AidrCollection.setGeoR(<nulltype>)"], "Fixed commit": "dff678197f1090e22c45c1b016b8bf93f73730dd", "Url": "https://api.github.com/repos/qcri-social/AIDR", "Date": "2015-03-12T12:06:06Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (entry != null) for (java.lang.String otherName : entry.getValue()) if (java.util.Objects.equals(relations[i], otherName)) relations[i] = entry.getKey();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2007/buggy-version/src.in.relationfinder.RelationsHandler.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.util.ArrayList<java.lang.String>>.getKey()", "java.util.Map.Entry<java.lang.String, java.util.ArrayList<java.lang.String>>.getValue()"], "Fixed commit": "eeb4a17c82d629f745455948e5d7cc994ad9bb58", "Url": "https://api.github.com/repos/RaghavPro/RelationFinder", "Date": "2015-12-26T00:42:41Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((sprite1 == null) || (sprite2 == null)) { core.logging.Logger.getInstance().addMessage(new core.logging.Message(core.logging.Message.WARNING, ((((\"Either \" + (sprite1.name)) + \" or \") + (sprite2.name)) + \" is null.\"))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5049/buggy-version/src.ontology.effects.binary.KillIfFromAbove.java", "BodyUseAPI": ["core.logging.Logger.getInstance().addMessage(core.logging.Message)"], "Fixed commit": "4a899c81315a12afe6cd6eb9e89ec7cdfa3cc595", "Url": "https://api.github.com/repos/mcgreentn/gvgai-myFork", "Date": "2017-03-30T23:56:20Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.networkDS.getDocument().getModel().getReaction(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (modelReaction != null) { org.sbml.jsbml.LocalParameter parameter = modelReaction.getKineticLaw().getLocalParameter(\"FLUX_VALUE\"); if (parameter == null) { modelReaction.getKineticLaw().createLocalParameter(\"FLUX_VALUE\").setValue(reaction.getFinalFlux()); }else { parameter.setValue(reaction.getFinalFlux()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3748/buggy-version/NDBugsSource.src.ND.modules.otimization.visualization.FluxVisualizationTask.java", "BodyUseAPI": ["modelReaction.getKineticLaw().getLocalParameter(java.lang.String)", "modelReaction.getKineticLaw().createLocalParameter(\"FLUX_VALUE\").setValue(reaction.getFinalFlux())", "org.sbml.jsbml.Reaction.getKineticLaw()", "org.sbml.jsbml.Reaction.getKineticLaw()", "modelReaction.getKineticLaw().createLocalParameter(java.lang.String)"], "Fixed commit": "c7c7cc6163b648b9d5f8f47ced4ea63a0f7cb394", "Url": "https://api.github.com/repos/SandraCastilloPriego/antnd", "Date": "2016-03-10T11:54:18Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["datalogger.server.Main.MainClient.log(java.lang.String,java.lang.String,java.lang.Double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == 0) { rmsg = new com.femtioprocent.propaganda.data.Message(\"logged\", \"NOT added\"); }else { rmsg = new com.femtioprocent.propaganda.data.Message(\"logged\", (\"added id \" + id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8161/buggy-version/src.main.java.datalogger.server.Main.java", "BodyUseAPI": [], "Fixed commit": "3c8253150c5c2f7b2795339499b86ce6d79e571b", "Url": "https://api.github.com/repos/data50p/datalogger", "Date": "2014-09-24T10:31:41Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(databaseId)) { com.photon.phresco.commons.model.ArtifactGroupInfo artifactGroupInfo = new com.photon.phresco.commons.model.ArtifactGroupInfo(); artifactGroupInfo.setArtifactGroupId(databaseId); artifactGroupInfo.setArtifactInfoIds(java.util.Arrays.asList(getReqParameterValues(databaseId))); selectedDatabases.add(artifactGroupInfo); appInfo.setSelectedDatabases(selectedDatabases); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2173/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Features.java", "BodyUseAPI": ["com.photon.phresco.framework.actions.applications.Features.getReqParameterValues(java.lang.String)", "com.photon.phresco.commons.model.ArtifactGroupInfo.setArtifactInfoIds(java.util.List)", "com.photon.phresco.commons.model.ArtifactGroupInfo.setArtifactGroupId(java.lang.String)", "java.util.Arrays.asList(getReqParameterValues(databaseId))"], "Fixed commit": "cd756b1fca8530f9c6a93a525662c5e395f487d9", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-04-05T13:50:02Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_data.get(org.cxio.metadata.MetaDataElement.ID_COUNTER)) != null) { return java.lang.Long.valueOf(((java.lang.String) (_data.get(org.cxio.metadata.MetaDataElement.ID_COUNTER)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6427/buggy-version/cxio.src.main.java.org.cxio.metadata.MetaDataElement.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.Object)", "java.util.SortedMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "c3fce8cec9a61d40698168d90e029651e1ef3333", "Url": "https://api.github.com/repos/cytoscape/cxio", "Date": "2015-10-08T18:51:29Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_data.get(org.cxio.metadata.MetaDataElement.CONSISTENCY_GROUP)) != null) { return java.lang.Long.valueOf(((java.lang.String) (_data.get(org.cxio.metadata.MetaDataElement.CONSISTENCY_GROUP)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6427/buggy-version/cxio.src.main.java.org.cxio.metadata.MetaDataElement.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.Object)", "java.util.SortedMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "c3fce8cec9a61d40698168d90e029651e1ef3333", "Url": "https://api.github.com/repos/cytoscape/cxio", "Date": "2015-10-08T18:51:29Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_data.get(org.cxio.metadata.MetaDataElement.ELEMENT_COUNT)) != null) { return java.lang.Long.valueOf(((java.lang.String) (_data.get(org.cxio.metadata.MetaDataElement.ELEMENT_COUNT)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6427/buggy-version/cxio.src.main.java.org.cxio.metadata.MetaDataElement.java", "BodyUseAPI": ["java.util.SortedMap<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Long.valueOf(java.lang.Object)"], "Fixed commit": "c3fce8cec9a61d40698168d90e029651e1ef3333", "Url": "https://api.github.com/repos/cytoscape/cxio", "Date": "2015-10-08T18:51:29Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_data.get(org.cxio.metadata.MetaDataElement.LAST_UPDATE)) != null) { return java.lang.Long.valueOf(((java.lang.String) (_data.get(org.cxio.metadata.MetaDataElement.LAST_UPDATE)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6427/buggy-version/cxio.src.main.java.org.cxio.metadata.MetaDataElement.java", "BodyUseAPI": ["java.util.SortedMap<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Long.valueOf(java.lang.Object)"], "Fixed commit": "c3fce8cec9a61d40698168d90e029651e1ef3333", "Url": "https://api.github.com/repos/cytoscape/cxio", "Date": "2015-10-08T18:51:29Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((managerId) > 0) { managerName = ((CacheData.employees.get(managerId).getFirstName()) + \" \") + (CacheData.employees.get(managerId).getLastName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1473/buggy-version/HRproject.src.controller.EmployeeDetailController.java", "BodyUseAPI": [], "Fixed commit": "f66235579c441e116574b449f6b6d8838b242521", "Url": "https://api.github.com/repos/thomaskaviani/SoftwareProject2", "Date": "2017-11-14T14:11:46Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) instanceof com.orientechnologies.orient.core.id.ORID) { value = ((com.orientechnologies.orient.core.db.record.OIdentifiable) (value)).getRecord(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1203/buggy-version/core.src.main.java.com.orientechnologies.orient.core.command.traverse.OTraverseMultiValueProcess.java", "BodyUseAPI": [], "Fixed commit": "97dcd7cdd596b9aef9f7e322e13e056558c7a33d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-09-22T15:32:42Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(ddf.getName()))) { this.mUris.remove(ddf.getUri()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2823/buggy-version/core.src.main.java.io.ddf.DDFCache.java", "BodyUseAPI": ["io.ddf.DDF.getUri()", "java.util.Map<java.lang.String, java.util.UUID>.remove(ddf.getUri())"], "Fixed commit": "db6f63629bc605589b0f766a21f5a0de86be8a93", "Url": "https://api.github.com/repos/phvu/DDF", "Date": "2015-07-20T08:27:17Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.ru.crpx.server.crp.CrpManager.getCrp(java.lang.String,nl.ru.crpx.server.requesthandlers.RequestHandlerCrpInfo)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (crpInfo == null) return nl.ru.crpx.dataobject.DataObject.errorObject(\"fatal\", ((\"The CRP is not known for this user: \" + sCrpName) + \".\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6877/buggy-version/src.java.nl.ru.crpx.server.requesthandlers.RequestHandlerCrpInfo.java", "BodyUseAPI": [], "Fixed commit": "02f3c8653096d238f18a45d903a66f78116fa345", "Url": "https://api.github.com/repos/ErwinKomen/CrppServer", "Date": "2015-11-25T08:52:32Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.microsoft.applicationinsights.telemetry.Telemetry.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.microsoft.applicationinsights.agent.internal.common.StringUtils.isNullOrEmpty(context.getProperties().get(Constants.DOCKER_HOST_PROPERTY_KEY)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8908/buggy-version/core.src.main.java.com.microsoft.applicationinsights.extensibility.initializer.docker.DockerContextInitializer.java", "BodyUseAPI": [], "Fixed commit": "f38e93e54d6991e421622ed6a85b0819472c7b10", "Url": "https://api.github.com/repos/Microsoft/ApplicationInsights-Java", "Date": "2015-08-10T10:23:33Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.cffreedom.utils.Utils.hasLength(name)) == true) { attachPart.setFileName(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6739/buggy-version/src.main.java.com.cffreedom.utils.net.EmailUtils.java", "BodyUseAPI": ["com.cffreedom.utils.net.MimeBodyPart.setFileName(java.lang.String)"], "Fixed commit": "d7a847d1a9ec83a7f3db154840fe19fe50a12bd0", "Url": "https://api.github.com/repos/communicationfreedom/cffreedom-utils", "Date": "2014-09-13T06:12:51Z"},
{"Line": "=>3094", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!lookedup) { parameter.getDeclaration().getMembers().add(parameter.getModel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7911/buggy-version/src.com.redhat.ceylon.compiler.loader.AbstractModelLoader.java", "BodyUseAPI": [], "Fixed commit": "764977fcdf4cc65be2bc46d95efb71109d85a746", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2015-04-14T10:36:18Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getType()) == (RenderGameOverlayEvent.ElementType.EXPERIENCE)) { if (com.sandboxlabs.stickysprint.StickySprint.sprint) { if ((fontRenderer) == null) { fontRenderer = mc.fontRenderer; } int x = 18; net.minecraft.client.gui.ScaledResolution res = new net.minecraft.client.gui.ScaledResolution(mc); int y = (res.getScaledHeight()) - 18; int color = 16777215; fontRenderer.drawStringWithShadow(\"\u00a77Sprinting\", x, y, color); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7666/buggy-version/src.main.java.com.sandboxlabs.stickysprint.StickySprint.java", "BodyUseAPI": [], "Fixed commit": "cc69b476994f2bbbce73e464968ef2226e5502ce", "Url": "https://api.github.com/repos/cobvig/StickySprintMod", "Date": "2017-12-26T15:42:31Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.Query.getSingleResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6762/buggy-version/opentripplanner-datastore.app.models.ScheduledFieldTrip.java", "BodyUseAPI": [], "Fixed commit": "7f25206334000eb16575b78f3d2f7871bea969d1", "Url": "https://api.github.com/repos/openplans/OpenTripPlanner", "Date": "2012-11-30T19:49:32Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newlySelectedCal.before(selectedCals.get(1))) { removeFirstdate(); }else { clearOldSelections(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7389/buggy-version/library.src.main.java.com.squareup.timessquare.CalendarPickerView.java", "BodyUseAPI": [], "Fixed commit": "926a96c5cae323eb7272690eda05547cdf2d78e0", "Url": "https://api.github.com/repos/AndreRoss/android-times-square", "Date": "2016-01-19T14:46:02Z"},
{"Line": "=>763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedCells.size()) < 2) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7389/buggy-version/library.src.main.java.com.squareup.timessquare.CalendarPickerView.java", "BodyUseAPI": [], "Fixed commit": "926a96c5cae323eb7272690eda05547cdf2d78e0", "Url": "https://api.github.com/repos/AndreRoss/android-times-square", "Date": "2016-01-19T14:46:02Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((viewHolder.mDownloadImageTask) != null) { viewHolder.mDownloadImageTask.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3881/buggy-version/app.src.main.java.org.rogotulka.rozhkovaanna.ui.NewsAdapter.java", "BodyUseAPI": ["org.rogotulka.rozhkovaanna.ui.NewsAdapter.DownloadImageTask.cancel(boolean)"], "Fixed commit": "3ad91b4466aa3ca902029d30fa9a1ba219fef179", "Url": "https://api.github.com/repos/rogotulka/RozhkovaAnna", "Date": "2015-10-25T20:05:53Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ingredientComponent.get(i).getComponents()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((ingredient.size()) > 2) requiredToShow = java.lang.Boolean.parseBoolean(ingredient.get(2).getData());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3339/buggy-version/src.engine.save.levelData.RecipeData.java", "BodyUseAPI": ["ingredient.get(2).getData()", "java.lang.Boolean.parseBoolean(ingredient.get(2).getData())", "java.util.ArrayList<engine.save.SaveComponent>.get(int)"], "Fixed commit": "a55d7f4205ad857b21a76de28f5079bda735c474", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-06-01T22:17:51Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.sheffield.leapmotion.Properties.SHOW_PROGRESS) { App.out.print(((\"\\r\" + (com.sheffield.leapmotion.util.ProgressBar.getProgressBar(21, ((counter++) / ((float) (lines.length)))))) + \"[1 of 4]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2707/buggy-version/leap.src.main.java.com.sheffield.leapmotion.frame.generators.RawReconstructiveFrameGenerator.java", "BodyUseAPI": [], "Fixed commit": "71a9f310d474d2d75739c006a00a44a3a86ba3a0", "Url": "https://api.github.com/repos/thomasdeanwhite/NuiMimic", "Date": "2017-04-13T15:57:39Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.sheffield.leapmotion.Properties.SHOW_PROGRESS) { App.out.print(((\"\\r\" + (com.sheffield.leapmotion.util.ProgressBar.getProgressBar(21, ((counter++) / ((float) (tim.length)))))) + \"[2 of 4]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2707/buggy-version/leap.src.main.java.com.sheffield.leapmotion.frame.generators.RawReconstructiveFrameGenerator.java", "BodyUseAPI": [], "Fixed commit": "71a9f310d474d2d75739c006a00a44a3a86ba3a0", "Url": "https://api.github.com/repos/thomasdeanwhite/NuiMimic", "Date": "2017-04-13T15:57:39Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.sheffield.leapmotion.Properties.SHOW_PROGRESS) { App.out.print(((\"\\r\" + (com.sheffield.leapmotion.util.ProgressBar.getProgressBar(21, ((counter++) / ((float) (lines.length)))))) + \"[3 of 4]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2707/buggy-version/leap.src.main.java.com.sheffield.leapmotion.frame.generators.RawReconstructiveFrameGenerator.java", "BodyUseAPI": [], "Fixed commit": "71a9f310d474d2d75739c006a00a44a3a86ba3a0", "Url": "https://api.github.com/repos/thomasdeanwhite/NuiMimic", "Date": "2017-04-13T15:57:39Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.sheffield.leapmotion.Properties.SHOW_PROGRESS) { App.out.print(((\"\\r\" + (com.sheffield.leapmotion.util.ProgressBar.getProgressBar(21, ((counter++) / ((float) (lines.length)))))) + \"[4 of 4]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2707/buggy-version/leap.src.main.java.com.sheffield.leapmotion.frame.generators.RawReconstructiveFrameGenerator.java", "BodyUseAPI": [], "Fixed commit": "71a9f310d474d2d75739c006a00a44a3a86ba3a0", "Url": "https://api.github.com/repos/thomasdeanwhite/NuiMimic", "Date": "2017-04-13T15:57:39Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((browser) != null) browser.setCurrLocation(((file) + \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7853/buggy-version/src.main.java.ca.licef.lompad.JPanelForm.java", "BodyUseAPI": [], "Fixed commit": "4441518da317325c8d4083d1d61775970caff12f", "Url": "https://api.github.com/repos/LICEF/lompad", "Date": "2014-11-11T02:40:49Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allowNull) { return trueValue; }else { return falseValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/293/buggy-version/graal.com.oracle.graal.hotspot.src.com.oracle.graal.hotspot.replacements.InstanceOfSnippets.java", "BodyUseAPI": [], "Fixed commit": "8f9e4edaf89d6b287397d65a6520f474760e2736", "Url": "https://api.github.com/repos/zapster/graal-core", "Date": "2016-03-11T14:58:46Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fedoraproject.maven.resolver.Resolver.resolve(org.fedoraproject.maven.resolver.ResolutionRequest)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((result.getArtifactFile()) != null) { dependencyArtifact = dependencyArtifact.setFile(result.getArtifactFile()); dependencyArtifact = dependencyArtifact.setVersion(result.getCompatVersion()); }else { dependencyArtifact = dependencyArtifact.setVersion(ArtifactUtils.DEFAULT_VERSION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8543/buggy-version/xmvn-mojo.src.main.java.org.fedoraproject.maven.rpminstall.plugin.BuilddepMojo.java", "BodyUseAPI": ["org.eclipse.aether.artifact.Artifact.setFile(result.getArtifactFile())", "org.fedoraproject.maven.resolver.ResolutionResult.getArtifactFile()", "org.eclipse.aether.artifact.Artifact.setVersion(result.getCompatVersion())", "org.fedoraproject.maven.resolver.ResolutionResult.getCompatVersion()"], "Fixed commit": "824b98d37a81c9a6b0fd2180e46003578e30bdd5", "Url": "https://api.github.com/repos/mizdebsk/xmvn", "Date": "2013-09-02T14:33:04Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (reward <= 0) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"You must set a positive bounty\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1842/buggy-version/src.main.java.to.joe.decapitation.command.BountyCommand.java", "BodyUseAPI": [], "Fixed commit": "0ac3b6f8832846524a5ef20d245f08c9c1352a8a", "Url": "https://api.github.com/repos/Eviltechie/Decapitation", "Date": "2012-11-30T04:20:35Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWindowFor(maxElement)) != win) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/9154/buggy-version/bundles.org.eclipse.e4.ui.workbench.addons.swt.src.org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.java", "BodyUseAPI": [], "Fixed commit": "6248d321a17636eb5e6686a738c0be50e7ad1a69", "Url": "https://api.github.com/repos/mickaelistria/eclipse.platform.ui", "Date": "2013-10-30T13:57:16Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tg.relation) { net.osmand.osm.MapRoutingTypes.TAGS_RELATION_TO_ACCEPT.add(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/930/buggy-version/OsmAndMapCreator.src.net.osmand.osm.MapRoutingTypes.java", "BodyUseAPI": [], "Fixed commit": "27554dce57c6457645097d05837b7bc642fcc852", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2013-02-25T22:53:56Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(peer.equals(formatNodeIdentifierData()))) { com.rkwon.app.NodeMetadata peerNode = new com.rkwon.app.NodeMetadata(parseNodeIdentifierData(peer)); send(peerNode, electedPacket); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4690/buggy-version/src.main.java.com.rkwon.app.CMNode.java", "BodyUseAPI": ["com.rkwon.app.CMNode.parseNodeIdentifierData(java.lang.String)"], "Fixed commit": "f25dcaf8d9001cad534d668af6c50909bc015444", "Url": "https://api.github.com/repos/rynkwn/collective-memory", "Date": "2017-12-13T03:34:17Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (inString != null) { value = java.lang.Integer.valueOf(inString.trim()).intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6705/buggy-version/src.main.java.edu.cmu.sv.arinc838.ui.MenuRunner.java", "BodyUseAPI": ["java.lang.Integer.intValue()", "java.lang.String.trim()", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "932b7359ff1d7ee65ca29552b47cb373986528d9", "Url": "https://api.github.com/repos/squirrely/arinc_838", "Date": "2012-04-12T02:19:48Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.getRequestURI().contains(\"/browser/\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8728/buggy-version/src.main.java.de.htwberlin.mae.interceptor.RestLimitInterceptor.java", "BodyUseAPI": [], "Fixed commit": "04746aa2c122d4395070e3ae0b6aa805ece577cc", "Url": "https://api.github.com/repos/fmielke/example-2016", "Date": "2016-07-13T19:13:52Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (trasc.getText().equals(\"\")) text = \"\"; else text += trasc.getText();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7656/buggy-version/src.s2t.TranscriptAudio.java", "BodyUseAPI": ["s2t.Transcription.getText()"], "Fixed commit": "fefbcf18554c125f5882bb5b4a03236b86d64a14", "Url": "https://api.github.com/repos/alessandro308/Speech2Text-Telegram-Bot", "Date": "2016-04-21T20:01:55Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (colors[((java.lang.Integer.parseInt(getValue())) - 1)].toString().contains(\"#\")) { color_id = colors[((java.lang.Integer.parseInt(getValue())) - 1)].toString(); }else { color_id = \"#\" + (colors[((java.lang.Integer.parseInt(getValue())) - 1)].toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3702/buggy-version/library.src.main.java.com.dvd.android.library.colorlistpreference.ColorListPreference.java", "BodyUseAPI": ["java.lang.CharSequence.toString()", "java.lang.CharSequence.toString()"], "Fixed commit": "88104bb8450a4826a34bd42ecb660579610e65fe", "Url": "https://api.github.com/repos/DVDAndroid/ColorListPreference", "Date": "2015-01-29T15:36:01Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.as.cmp.jdbc.metadata.parser.ParsedRelationshipRole.getKeyFields()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (keyFields.isEmpty()) { return java.util.Collections.EMPTY_MAP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6936/buggy-version/cmp.src.main.java.org.jboss.as.cmp.jdbc.metadata.JDBCRelationshipRoleMetaData.java", "BodyUseAPI": [], "Fixed commit": "3a88fa2a86f2739c4f216b6a541ba32b7f2fbb21", "Url": "https://api.github.com/repos/stuartwdouglas/wildfly", "Date": "2011-12-07T06:59:52Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.action_disconnect)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5651/buggy-version/app.src.main.java.com.jasperwong.smartbicycle.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b6c5e711d92dfb1ef3a221eae6d6ff33ae8a367c", "Url": "https://api.github.com/repos/JasperWong/SmartBicycle_Android", "Date": "2016-04-23T17:45:23Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jobId == null) || ((jobId.length()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4226/buggy-version/src.JobTracker.java", "BodyUseAPI": [], "Fixed commit": "515d8cbcfc8e3c27dad3e491406db782d8c27bdb", "Url": "https://api.github.com/repos/ruoyangwang/ece496root", "Date": "2015-02-20T02:31:16Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jobId == null) || ((jobId.length()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4226/buggy-version/src.JobTracker.java", "BodyUseAPI": [], "Fixed commit": "515d8cbcfc8e3c27dad3e491406db782d8c27bdb", "Url": "https://api.github.com/repos/ruoyangwang/ece496root", "Date": "2015-02-20T02:31:16Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (pmid != null) { pmid = pmid.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5140/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.NcbiEUtils.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "62088a4b85e52d269e9397397c92f5132698a24a", "Url": "https://api.github.com/repos/JiaoJiao123/oncokb", "Date": "2017-01-10T01:29:32Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_storeSecondaryBackup) { _memcached.delete(_sessionIdFormat.createBackupKey(sessionId)); _memcached.delete(_sessionIdFormat.createBackupKey(validityInfoKey)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4408/buggy-version/core.src.main.java.de.javakaffee.web.msm.LockingStrategy.java", "BodyUseAPI": [], "Fixed commit": "0fbc6c9cfbdb1b444b46a73107107503f0f6f310", "Url": "https://api.github.com/repos/magro/memcached-session-manager", "Date": "2011-03-28T10:06:00Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getNumInMemory().equals(\"0\")) { }else memory = java.lang.Double.toString(((java.lang.Double.parseDouble(memory)) + (java.lang.Double.parseDouble(numToAdd))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3933/buggy-version/src.project1.calculator.CalculatorFunctions.java", "BodyUseAPI": [], "Fixed commit": "b3ea08a96264c452b8cda8b31b4c81792adb7a4a", "Url": "https://api.github.com/repos/jose-acevedoflores/Calculator", "Date": "2011-10-31T00:40:34Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == newValue) { net.sf.openrocket.gui.main.flightconfigpanel.FlightConfigurablePanel.log.warn(((\"Detected null newValue to render... (oldValue: \" + oldValue) + \")\")); newValue = oldValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6113/buggy-version/swing.src.net.sf.openrocket.gui.main.flightconfigpanel.FlightConfigurablePanel.java", "BodyUseAPI": [], "Fixed commit": "04b4a45b2e04e0588b14a208743b8a2253ab9ca8", "Url": "https://api.github.com/repos/teyrana/openrocket", "Date": "2016-01-02T20:04:41Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_sensitivityMissing) { reportFile.addElement(ReportFile.TAG_SONAR_ERROR, ((\"Signal \" + (_sensitivityName)) + \" is not in the sensitivity list of the synchronous process\"), info); reportFile.addElement(ReportFile.TAG_SONAR_MSG, (((\"Add \" + (_sensitivityName)) + \" in the sensitivity list of \") + processId), info); }else { reportFile.addElement(ReportFile.TAG_SONAR_ERROR, ((\"Signal \" + (_sensitivityName)) + \" should not be in the sensitivity list of the synchronous process\"), info); reportFile.addElement(ReportFile.TAG_SONAR_MSG, (((\"Remove \" + (_sensitivityName)) + \" from the sensitivity list of \") + processId), info); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8032/buggy-version/src.org.zamia.plugin.tool.vhdl.rules.impl.SensitivityRuleViolation.java", "BodyUseAPI": [], "Fixed commit": "a57d3ce4b6eba47e1f32321fd217a69ea16ec1dd", "Url": "https://api.github.com/repos/VHDLTool/Zamiacad-Rulechecker", "Date": "2017-11-07T16:20:02Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editAmount.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (amt.equals(\"\")) expense_main.setAmount(\"0\"); else expense_main.setAmount(editAmount.getText().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6522/buggy-version/app.src.main.java.com.appers.ayvaz.thetravelingsalesman.ExpenseAdd.java", "BodyUseAPI": [], "Fixed commit": "47f4e2392e7f8c91de728e449a3edbc5a89f816c", "Url": "https://api.github.com/repos/BitCloude/TheTravelingSalesman", "Date": "2016-03-01T03:45:12Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((total) == (-1)) { heap.add(row); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3860/buggy-version/src.main.java.org.opencloudb.mpp.tmp.RowDataSorter.java", "BodyUseAPI": [], "Fixed commit": "e66d8f335b2f37860c667048dadddbc3b3c842e1", "Url": "https://api.github.com/repos/Allchin/Mycat-Server", "Date": "2015-02-13T09:45:06Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentTabSpinnerStops.getSelectedItemPosition()) < 0) { android.util.Log.w(LOG_TAG, ((((\"Spinner in \" + (currentTab)) + \" is at position \") + (currentTabSpinnerStops.getSelectedItemPosition())) + \". Resetting to 0.\")); currentTabSpinnerStops.setSelection(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3867/buggy-version/mobile.src.main.java.org.thecosmicfrog.luasataglance.activity.LuasTimesFragment.java", "BodyUseAPI": ["android.util.Log.w(java.lang.String,((((\"Spinner in \" + (currentTab)) + \" is at position \") + (currentTabSpinnerStops.getSelectedItemPosition())) + \". Resetting to 0.\"))", "android.widget.Spinner.getSelectedItemPosition()", "android.widget.Spinner.setSelection(int)"], "Fixed commit": "50ff02ca05b5c05290bad3a8322bf3acaa2e5f78", "Url": "https://api.github.com/repos/thecosmicfrog/LuasataGlance", "Date": "2015-12-07T18:52:03Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (senior == \"YES\") number = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/698/buggy-version/Project_2.morpheus.implementation.nrLib.java", "BodyUseAPI": [], "Fixed commit": "ffbe08defe191ae930864c7953cdf928b632b8d0", "Url": "https://api.github.com/repos/374-QED/16F_SE_Move_Night-Raid", "Date": "2016-12-02T03:35:05Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jtrfp.trcl.obj.WorldObject.getBehavior()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((beh.probeForBehavior(org.jtrfp.trcl.beh.DamageableBehavior.class).getHealth()) < 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7354/buggy-version/src.main.java.org.jtrfp.trcl.obj.DEFObject.java", "BodyUseAPI": [], "Fixed commit": "b1481ffd1525f390c48f6259d256fd5ce44d79a6", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-07-10T13:59:36Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (url != null) { java.io.File f = new java.io.File(url.toURI()); parentPathLength = f.getAbsolutePath().length(); readFolder(fig, f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3003/buggy-version/src.main.java.twigkit.fig.loader.PropertiesLoader.java", "BodyUseAPI": ["java.net.URL.toURI()"], "Fixed commit": "346c144fcb311d65d3291e1a8dfcd65d9519c5ae", "Url": "https://api.github.com/repos/twigkit/fig", "Date": "2011-03-17T13:22:11Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mVideoView) != null) { mVideoView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2985/buggy-version/src.com.github.opensourcefieldlinguistics.fielddb.lessons.ui.DatumDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "c5808152d71bf469d61f6407581be14db163957a", "Url": "https://api.github.com/repos/OpenSourceFieldlinguistics/AndroidLanguageLearningClientForFieldDB", "Date": "2014-06-13T15:58:13Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.tags)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (tagsEditText != null) { tagsEditText.setText(mItem.getTagsString()); tagsEditText.addTextChangedListener(new android.text.TextWatcher() { @java.lang.Override public void afterTextChanged(android.text.Editable arg0) { } @java.lang.Override public void beforeTextChanged(java.lang.CharSequence arg0, int arg1, int arg2, int arg3) { } @java.lang.Override public void onTextChanged(java.lang.CharSequence arg0, int arg1, int arg2, int arg3) { java.lang.String currentText = tagsEditText.getText().toString(); mItem.setTagsFromSting(currentText); android.content.ContentValues values = new android.content.ContentValues(); values.put(DatumTable.COLUMN_TAGS, currentText); getActivity().getContentResolver().update(mUri, values, null, null); recordUserEvent(\"editDatum\", \"tags\"); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2985/buggy-version/src.com.github.opensourcefieldlinguistics.fielddb.lessons.ui.DatumDetailFragment.java", "BodyUseAPI": ["android.widget.EditText.setText(mItem.getTagsString())", "android.widget.EditText.getText()", "android.widget.EditText.addTextChangedListener(android.text.TextWatcher)", "tagsEditText.getText().toString()"], "Fixed commit": "c5808152d71bf469d61f6407581be14db163957a", "Url": "https://api.github.com/repos/OpenSourceFieldlinguistics/AndroidLanguageLearningClientForFieldDB", "Date": "2014-06-13T15:58:13Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Config.APP_TYPE.equals(\"speechrec\")) { rootView = inflater.inflate(R.layout.fragment_datum_detail_simple, container, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2985/buggy-version/src.com.github.opensourcefieldlinguistics.fielddb.lessons.ui.DatumDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "c5808152d71bf469d61f6407581be14db163957a", "Url": "https://api.github.com/repos/OpenSourceFieldlinguistics/AndroidLanguageLearningClientForFieldDB", "Date": "2014-06-13T15:58:13Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mImageView) != null) { mImageView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2985/buggy-version/src.com.github.opensourcefieldlinguistics.fielddb.lessons.ui.DatumDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "c5808152d71bf469d61f6407581be14db163957a", "Url": "https://api.github.com/repos/OpenSourceFieldlinguistics/AndroidLanguageLearningClientForFieldDB", "Date": "2014-06-13T15:58:13Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (feeder == null) { weightedSolution.weight += 1000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4216/buggy-version/src.main.java.org.openpnp.planner.SimpleJobPlanner.java", "BodyUseAPI": [], "Fixed commit": "f2e3aa40a01cbc8c656c2bc3fd04a6c8f6e2d1b0", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2016-02-15T07:36:26Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nozzleTip == null) { weightedSolution.weight += 1000; }else if ((nozzle.getNozzleTip()) != nozzleTip) { (weightedSolution.weight)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4216/buggy-version/src.main.java.org.openpnp.planner.SimpleJobPlanner.java", "BodyUseAPI": [], "Fixed commit": "f2e3aa40a01cbc8c656c2bc3fd04a6c8f6e2d1b0", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2016-02-15T07:36:26Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == object) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7234/buggy-version/task_13.aleksey.syshkov.src.main.java.com.hillel.ComplexNumber.java", "BodyUseAPI": [], "Fixed commit": "c2afedd2079acc8945e0d3fd702fbbd36e30e28b", "Url": "https://api.github.com/repos/seregabendas/capella", "Date": "2017-12-11T20:52:54Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object == null) || ((getClass()) != (object.getClass()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7234/buggy-version/task_13.aleksey.syshkov.src.main.java.com.hillel.ComplexNumber.java", "BodyUseAPI": [], "Fixed commit": "c2afedd2079acc8945e0d3fd702fbbd36e30e28b", "Url": "https://api.github.com/repos/seregabendas/capella", "Date": "2017-12-11T20:52:54Z"},
{"Line": "=>1067", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query.getOptions().remove(com.psddev.dari.db.SqlDatabase.NEEDS_SECONDARY_FETCH)) != null) { secondaryFetchIds = new java.util.ArrayList<java.util.UUID>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3351/buggy-version/db.src.main.java.com.psddev.dari.db.SqlDatabase.java", "BodyUseAPI": [], "Fixed commit": "97dd0bba2c7448178a6c0c71c8f20ff8b8fa2f52", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2013-11-15T01:08:45Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pos > 0) ramFile.seek(pos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3021/buggy-version/code.log_analyzer.src.ch.ethz.mlmq.log_analyzer.HeaderInfo.java", "BodyUseAPI": ["java.io.RandomAccessFile.seek(long)"], "Fixed commit": "67fa59a3fa0dfee4233c8c2de57ceee48dfa6333", "Url": "https://api.github.com/repos/ganzm/AdvancedSystemsLab2013", "Date": "2013-11-13T17:50:49Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curCodeItem) == null) { nextCodeBlock(); if ((curCodeBlock) != null) { curCodeItem = curCodeBlock.next(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3390/buggy-version/src.main.java.com.ctriposs.tsdb.iterator.FileSeekIterator.java", "BodyUseAPI": [], "Fixed commit": "ae50b28afa1f3d26bc1afc5fc90be8018a52643f", "Url": "https://api.github.com/repos/jinfei21/timesquencedb", "Date": "2014-11-11T11:24:13Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!retryingGetWithSlug) { com.willshex.blogwt.client.DefaultEventBus.get().fireEventFromSource(new com.willshex.blogwt.client.api.blog.event.GetPostEventHandler.GetPostSuccess(input, output), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5092/buggy-version/src.main.java.com.willshex.blogwt.client.controller.PostController.java", "BodyUseAPI": [], "Fixed commit": "c2941f7a7ac9d7a8a531fd349410054268ba55b5", "Url": "https://api.github.com/repos/billy1380/blogwt", "Date": "2017-07-08T19:51:56Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getClickedBlock()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3725/buggy-version/src.murdermystery.EventListener.java", "BodyUseAPI": [], "Fixed commit": "933fe4c58e0bfd506eb816c1f670e4aff76f70ad", "Url": "https://api.github.com/repos/Gumballll/Murder-Mystery", "Date": "2017-07-20T18:48:26Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["murdermystery.game.GameManager.getPlayerRoleByUUID(damaged.getUniqueId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((damagedRole.getRoleType()) == (Role.Type.MURDERER)) { murdermystery.game.Game game = murdermystery.game.GameManager.getGameByPlayerUUID(damaged.getUniqueId()); game.killPlayer(damaged.getUniqueId()); damaged.sendTitle(((org.bukkit.ChatColor.RED) + \"You died!\"), ((org.bukkit.ChatColor.AQUA) + \"The detective shot you!\"), 20, 100, 20); shooter.sendTitle(((((org.bukkit.ChatColor.GREEN) + \"You killed the \") + (org.bukkit.ChatColor.RED)) + \"Murderer!\"), \"\", 20, 100, 20); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3725/buggy-version/src.murdermystery.EventListener.java", "BodyUseAPI": [], "Fixed commit": "933fe4c58e0bfd506eb816c1f670e4aff76f70ad", "Url": "https://api.github.com/repos/Gumballll/Murder-Mystery", "Date": "2017-07-20T18:48:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (pType == null) { vg.civcraft.mc.namelayer.GroupManager.PlayerType.displayPlayerTypes(p); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1737/buggy-version/src.vg.civcraft.mc.namelayer.command.commands.InvitePlayer.java", "BodyUseAPI": [], "Fixed commit": "f129d49f4967d284ec80b0d614a862dd183fcf4d", "Url": "https://api.github.com/repos/Civcraft/NameLayer", "Date": "2015-02-01T00:56:24Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.inventory.InventoryClickEvent.getRawSlot()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rs != 0) && (event.isShiftClick())) { org.bukkit.inventory.ItemStack current = event.getCurrentItem(); if (Perms.NOCOOK.has(p, current)) { event.setCancelled(true); this.notify(p, EventTypes.COOK, current); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4757/buggy-version/NoItem.src.net.worldoftomorrow.nala.ni.listeners.InventoryListener.java", "BodyUseAPI": ["org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()", "org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)"], "Fixed commit": "e03f2aeb96bc0796b2cc55db5111819604a819cb", "Url": "https://api.github.com/repos/nala3/NoItem", "Date": "2012-09-14T01:20:02Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5320/buggy-version/app.src.main.java.sk.plesko.bigfilefinder.helper.FileHelper.java", "BodyUseAPI": [], "Fixed commit": "9861e216e53ac88839f83296fee7789cc519a007", "Url": "https://api.github.com/repos/iplesko/BigFileFinder", "Date": "2015-02-16T19:53:55Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.taggedalbum.repository.UserRepository.findById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userOptional.isPresent()) { userRepository.deleteUserById(facebookId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/144/buggy-version/src.main.java.br.com.taggedalbum.services.impl.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "9d3784949d67bcc21d1db79d0a22e0267d6d4410", "Url": "https://api.github.com/repos/faelperetta/facebook-tagged-photos", "Date": "2016-08-20T16:44:25Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tracker) == null) { android.util.Log.d(\"Nightscout\", \"tracker was null\"); com.google.android.gms.analytics.GoogleAnalytics analytics = com.google.android.gms.analytics.GoogleAnalytics.getInstance(this); tracker = analytics.newTracker(R.xml.app_tracker); return tracker; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4555/buggy-version/app.src.main.java.com.nightscout.android.Nightscout.java", "BodyUseAPI": [], "Fixed commit": "7f41047fe8ce75522bf41ccadda56439fe0defb6", "Url": "https://api.github.com/repos/nightscout/android-uploader", "Date": "2014-10-19T04:37:15Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.Class<? extends ca.uwaterloo.asw4j.Instruction<?, ?>>, ca.uwaterloo.asw4j.internal.InstructionClassNode>.put(instructionNode.getInstructionClass(),ca.uwaterloo.asw4j.internal.InstructionClassNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (node != null) { throw new java.lang.IllegalArgumentException(((instructionNode.getInstructionClass().getName()) + \" is already registered.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4027/buggy-version/src.main.java.ca.uwaterloo.asw4j.AbstractInstructionResolver.java", "BodyUseAPI": [], "Fixed commit": "26f4109c00e3c80623448841ba5f1ee0b5fea4bd", "Url": "https://api.github.com/repos/LindenY/asw4j", "Date": "2014-12-28T07:09:30Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entityType.isCenter()) { final org.mifosplatform.portfolio.calendar.domain.CalendarInstance calendarInstance = this.calendarInstanceRepository.findByCalendarIdAndEntityIdAndEntityTypeId(command.entityId(), entityId, entityType.getValue()); this.calendarDateRepository.deleteCalendarDateByCalendarInstanceId(calendarInstance.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6581/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.calendar.service.CalendarWritePlatformServiceJpaRepositoryImpl.java", "BodyUseAPI": ["org.mifosplatform.portfolio.calendar.domain.CalendarInstanceRepository.findByCalendarIdAndEntityIdAndEntityTypeId(command.entityId(),java.lang.Long,entityType.getValue())", "org.mifosplatform.portfolio.calendar.domain.CalendarEntityType.getValue()"], "Fixed commit": "56861115929b0ceb0ea188291b34b417470a02a9", "Url": "https://api.github.com/repos/confluxtoo/mifosx", "Date": "2014-07-18T12:45:35Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == path) { com.polyvi.xface.util.XLog.w(com.polyvi.xface.util.XFileUtils.CLASS_NAME, \"No External Storage\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3766/buggy-version/framework.src.com.polyvi.xface.util.XFileUtils.java", "BodyUseAPI": [], "Fixed commit": "19a13631114bd2d2700ffbdf4a68c81e88dd3671", "Url": "https://api.github.com/repos/polyvi/xface-android", "Date": "2014-01-02T07:48:51Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (landscape) camera.setDisplayOrientation(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5164/buggy-version/app.src.main.java.com.example.gaby.c_color.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9b960ee8563e776b40403df70b060a279ee65616", "Url": "https://api.github.com/repos/gnahum12345/C-Color-Android", "Date": "2016-01-15T00:48:05Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((balance) < (-100)) { balance += amount; if ((numWithdraws) > 10) { balance += 2.0F; } (numWithdraws)--; return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3599/buggy-version/given.src.banking.primitive.core.Checking.java", "BodyUseAPI": [], "Fixed commit": "f92c46c0fc7ffc9196afb5bad6980dd083f24ac9", "Url": "https://api.github.com/repos/reschul1/cst316_codereviewlab_reschul1", "Date": "2016-02-05T00:51:30Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partition) != null) { for (int i = 0; i < (com.hazelcast.impl.partition.PartitionInfo.MAX_REPLICA_COUNT); i++) { com.hazelcast.nio.Address replicaAddress = partition.getReplicaAddress(i); if ((replicaAddress != null) && (!(contains(replicaAddress)))) { sb.append((replicaAddress + \" not a member!\\n\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7537/buggy-version/hazelcast.src.main.java.com.hazelcast.impl.concurrentmap.MapSystemLogFactory.java", "BodyUseAPI": [], "Fixed commit": "3e741be99e9b5267a80b82cdf1473a96c9ae4a43", "Url": "https://api.github.com/repos/mdogan/hazelcast", "Date": "2012-07-09T07:09:08Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((host.world()) != null) && (host.world().isRemote)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2991/buggy-version/src.main.java.pl.asie.computronics.oc.driver.RobotUpgradeSpeech.java", "BodyUseAPI": [], "Fixed commit": "0907722653dcc3be38fee874cb4b10ac37b03ee5", "Url": "https://api.github.com/repos/Vexatos/Computronics", "Date": "2017-09-02T18:31:10Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasWorldObj()) && (worldObj.isRemote)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2991/buggy-version/src.main.java.pl.asie.computronics.tile.TileSpeechBox.java", "BodyUseAPI": [], "Fixed commit": "0907722653dcc3be38fee874cb4b10ac37b03ee5", "Url": "https://api.github.com/repos/Vexatos/Computronics", "Date": "2017-09-02T18:31:10Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (participants == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1080/buggy-version/src.org.jgroups.protocols.pbcast.FLUSH.java", "BodyUseAPI": [], "Fixed commit": "8d97a9de4bdc5b470079f89326baeac8db8702d2", "Url": "https://api.github.com/repos/vblagoje/JGroups", "Date": "2012-04-05T13:46:10Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loopingStreamIndex) < (maxStreams)) { ++(loopingStreamIndex); }else { loopingStreamIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2843/buggy-version/app.src.main.java.com.gw150914.jabberwocky.core.SoundEngine.java", "BodyUseAPI": [], "Fixed commit": "8277b443d1eb8195fe1e77f37607ba09033aaa5b", "Url": "https://api.github.com/repos/jabberwockyproject/root", "Date": "2016-12-15T12:26:28Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((TDDT.currentThread.state) != (org.xxxmathxxx.tddt.data.CodeStage.REFACTOR)) { switchLabel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1711/buggy-version/tddt.src.main.java.org.xxxmathxxx.tddt.gui.scenes.Editor.java", "BodyUseAPI": [], "Fixed commit": "c8d766f0b10adde9c3b6119508b43da587259550", "Url": "https://api.github.com/repos/ProPra16/programmierpraktikum-abschlussprojekt-xxxmathxxx", "Date": "2016-07-11T10:22:08Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.analytics.dataservice.AnalyticsServiceHolder.getAnalyticsClusterManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (acm.isLeader(org.wso2.carbon.analytics.spark.core.internal.SparkAnalyticsExecutor.CLUSTER_GROUP_NAME)) this.initClient((((\"spark://\" + (this.myHost)) + \":\") + masterPort));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4691/buggy-version/components.analytics.analytics-processors.org.wso2.carbon.analytics.spark.core.src.main.java.org.wso2.carbon.analytics.spark.core.internal.SparkAnalyticsExecutor.java", "BodyUseAPI": [], "Fixed commit": "3e4c0e80aabb6e37b1836a6f792f2e8e0ea8a398", "Url": "https://api.github.com/repos/nirandaperera/carbon-analytics", "Date": "2015-03-20T11:36:51Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.wso2.carbon.analytics.spark.core.internal.SparkDataListener.done)) { org.wso2.carbon.analytics.spark.core.internal.SparkDataListener.log.info(\"Starting the executor for hte first time!\"); java.util.concurrent.ExecutorService executor = java.util.concurrent.Executors.newCachedThreadPool(); executor.execute(new org.wso2.carbon.analytics.spark.core.internal.SparkBackendExecutor(argArray)); org.wso2.carbon.analytics.spark.core.internal.SparkDataListener.done = true; }else { java.lang.System.out.println(\"Ignoring the starting executor request!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4691/buggy-version/components.analytics.analytics-processors.org.wso2.carbon.analytics.spark.core.src.main.java.org.wso2.carbon.analytics.spark.core.internal.SparkDataListener.java", "BodyUseAPI": [], "Fixed commit": "3e4c0e80aabb6e37b1836a6f792f2e8e0ea8a398", "Url": "https://api.github.com/repos/nirandaperera/carbon-analytics", "Date": "2015-03-20T11:36:51Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((c.get(java.util.Calendar.DAY_OF_YEAR)) == (tb.getDate().get(java.util.Calendar.DAY_OF_YEAR))) && ((c.get(java.util.Calendar.YEAR)) == (tb.getDate().get(java.util.Calendar.YEAR)))) && ((c.get(java.util.Calendar.ERA)) == (tb.getDate().get(java.util.Calendar.ERA)))) { ds.setTick(tb.getTrack(), c, true); }else { ds.setTick(tb.getTrack(), tb.getDate(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7338/buggy-version/app.src.main.java.de.smasi.tickmate.widgets.TickButton.java", "BodyUseAPI": ["de.smasi.tickmate.widgets.TickButton.getTrack()", "de.smasi.tickmate.database.DataSource.setTick(de.smasi.tickmate.models.Track,java.util.Calendar,boolean)", "de.smasi.tickmate.widgets.TickButton.getDate()", "de.smasi.tickmate.database.DataSource.setTick(de.smasi.tickmate.models.Track,java.util.Calendar,boolean)", "de.smasi.tickmate.widgets.TickButton.getTrack()"], "Fixed commit": "49c4579b98928143d1b193ff0248525f6fe57ca0", "Url": "https://api.github.com/repos/lordi/tickmate", "Date": "2017-04-24T18:24:05Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((c.getString(2)) != null) stop_t = (dateFormat.parse(c.getString(2)).getTime()) + \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2205/buggy-version/app.src.main.java.com.wolfsoft.teammeetingschedule.utilities.BatteryChargeDAO.java", "BodyUseAPI": ["android.database.Cursor.getString(int)", "java.text.SimpleDateFormat.parse(c.getString(2))", "java.util.Date.getTime()"], "Fixed commit": "88b7a8a66bd9b8d0194f2ef9df2786602c429cee", "Url": "https://api.github.com/repos/nishanthsiva/ItemWise", "Date": "2017-02-26T05:12:54Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((c.getString(3)) != null) stop_c = c.getString(3);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2205/buggy-version/app.src.main.java.com.wolfsoft.teammeetingschedule.utilities.BatteryChargeDAO.java", "BodyUseAPI": ["android.database.Cursor.getString(int)"], "Fixed commit": "88b7a8a66bd9b8d0194f2ef9df2786602c429cee", "Url": "https://api.github.com/repos/nishanthsiva/ItemWise", "Date": "2017-02-26T05:12:54Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meta.getOwner()) == null) { return org.luaj.vm2.LuaValue.NIL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5201/buggy-version/src.main.java.nz.co.jammehcow.lukkit.environment.wrappers.BukkitWrapper.java", "BodyUseAPI": [], "Fixed commit": "db6949524169f7802937370739feb7dd7eec7aad", "Url": "https://api.github.com/repos/jammehcow/Lukkit", "Date": "2017-07-10T23:42:36Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((preLoadedFields) != null) && ((preLoadedFields.size()) == 1)) { if (\"@rid\".equalsIgnoreCase(preLoadedFields.iterator().next())) return iRecord.getIdentity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8147/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.filter.OSQLFilterItemField.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.util.Iterator<java.lang.String>.next()", "java.util.Set<java.lang.String>.iterator()"], "Fixed commit": "efc7d4cb6fdd46d0402376cff10f61061fb29a49", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-05-20T11:01:51Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (this.getBeanObjects())) { this.setBeanObjects(new java.util.HashMap<java.lang.String, java.lang.Object>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5080/buggy-version/UsefulTool.src.main.java.handy.tools.factorties.XmlBeanFactory.java", "BodyUseAPI": [], "Fixed commit": "ef86ae6ca7dd71c927d288456bce986373fcdd6e", "Url": "https://api.github.com/repos/wwgit/walterwhite", "Date": "2016-12-29T09:28:31Z"},
{"Line": "=>1544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (artifactName.endsWith(\"/\")) { throw new java.lang.IllegalArgumentException((\"Artifact name must not end with '/': \" + artifactName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3653/buggy-version/platform.dtf-core.src.main.java.com.pslcl.dtf.core.Core.java", "BodyUseAPI": [], "Fixed commit": "805af6750616f58647fda0e61145f8719984078d", "Url": "https://api.github.com/repos/PSLCL/testing-framework", "Date": "2016-07-28T15:47:08Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof com.czbix.v2ex.model.Comment) { builder.post(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7032/buggy-version/app.src.main.java.com.czbix.v2ex.network.RequestHelper.java", "BodyUseAPI": [], "Fixed commit": "d71fcba311a3172ebbb220d7890f999de3822eb1", "Url": "https://api.github.com/repos/CzBiX/v2ex-android", "Date": "2015-06-14T13:36:41Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts.length) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7027/buggy-version/cermine-impl.src.main.java.pl.edu.icm.cermine.metadata.zoneclassification.features.AuthorNameRelativeFeature.java", "BodyUseAPI": [], "Fixed commit": "06831e437ad7bd7cf98054102a53749d8b2232f6", "Url": "https://api.github.com/repos/CeON/CERMINE", "Date": "2012-10-29T15:39:43Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chessengine.Square.getColumn()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (column == 0) { directAttack.add(squares[(row + 1)][(column + 1)]); }else if (column == 7) { directAttack.add(squares[(row + 1)][(column - 1)]); }else { directAttack.add(squares[(row + 1)][(column - 1)]); directAttack.add(squares[(row + 1)][(column + 1)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/486/buggy-version/src.chessengine.Board.java", "BodyUseAPI": ["java.util.ArrayList<chessengine.Square>.add(squares[(row + 1)][(column - 1)])", "java.util.ArrayList<chessengine.Square>.add(squares[(row + 1)][(column - 1)])", "java.util.ArrayList<chessengine.Square>.add(squares[(row + 1)][(column + 1)])", "java.util.ArrayList<chessengine.Square>.add(squares[(row + 1)][(column + 1)])"], "Fixed commit": "ee894bf7d9d5719a1c9c10f5508ae0f4e6b6f0fb", "Url": "https://api.github.com/repos/GreatScottinho/repoChessEngine", "Date": "2015-11-05T04:18:27Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bio.main.util.BnBMainUtil.getTotalDistance(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (totalDistance < bestDistance) { bestDistance = totalDistance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/927/buggy-version/Assignment3.src.com.bio.main.util.BnBMainUtil.java", "BodyUseAPI": [], "Fixed commit": "f9b3314ba8a798df38d8205f82bee9857bb79e94", "Url": "https://api.github.com/repos/momazia/Bioinformatic", "Date": "2016-02-25T18:44:05Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((razorback) != null) if (razorback.jump()) jumpSound.play();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3043/buggy-version/RazorbackAttack.src.com.team14.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "c1cdcdb1ccd47447e8f7f01da521ad40cfcb1774", "Url": "https://api.github.com/repos/csce3513/Team14", "Date": "2012-04-30T00:04:16Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((razorback) != null) razorback.dash();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3043/buggy-version/RazorbackAttack.src.com.team14.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "c1cdcdb1ccd47447e8f7f01da521ad40cfcb1774", "Url": "https://api.github.com/repos/csce3513/Team14", "Date": "2012-04-30T00:04:16Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.matsim.api.core.v01.Id<org.matsim.api.core.v01.network.Link>, playground.michalm.taxi.optimizer.zonal.Zone>.get(link.getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (zone != null) { java.util.PriorityQueue<org.matsim.contrib.dvrp.data.Vehicle> queue = zoneToIdleVehicleQueue.get(zone.getId()); queue.add(veh); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/7664/buggy-version/playgrounds.michalm.src.main.java.playground.michalm.taxi.optimizer.zonal.ZonalTaxiOptimizer.java", "BodyUseAPI": ["playground.michalm.taxi.optimizer.zonal.Zone.getId()", "java.util.Map<org.matsim.api.core.v01.Id<playground.michalm.taxi.optimizer.zonal.Zone>, java.util.PriorityQueue<org.matsim.contrib.dvrp.data.Vehicle>>.get(zone.getId())"], "Fixed commit": "fc24b5c38ab92acc0d48e18f251a2eb2fec48cab", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2015-08-04T22:06:10Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxTries == 0) { throw new be.vdab.terrarium.BoardException(\"Organism overload!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4562/buggy-version/src.main.java.be.vdab.terrarium.Board.java", "BodyUseAPI": [], "Fixed commit": "939ec786dd4d2b69be1c3a6470a6b824a1933132", "Url": "https://api.github.com/repos/telefoon13/terrariumGame", "Date": "2017-09-08T14:03:19Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_YEARYY.length()) == 2) { if (\"00\".equals(_YEARYY)) { _is_year = true; } }else { year = org.mitre.xtemporal.DateNormalization.INVALID_DATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8043/buggy-version/Xponents.XTemporal.src.main.java.org.mitre.xtemporal.DateNormalization.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "a267a5d75feaa4a761516386c4f08575ba71e7e8", "Url": "https://api.github.com/repos/OpenSextant/opensextant", "Date": "2013-05-30T16:21:49Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message instanceof ch.mimo.netty.handler.codec.icap.IcapResponse) { if ((((ch.mimo.netty.handler.codec.icap.IcapResponse) (message)).getContent().readableBytes()) > 0) { buffer = ((ch.mimo.netty.handler.codec.icap.IcapResponse) (message)).getContent(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5421/buggy-version/src.main.java.ch.mimo.netty.handler.codec.icap.IcapChunkAggregator.java", "BodyUseAPI": [], "Fixed commit": "c126c72bfd4a0ed7e9e4ea94bfe49783c353796e", "Url": "https://api.github.com/repos/jmimo/netty-icap", "Date": "2011-06-25T05:29:38Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodeA < nodeB) { int temp = nodeB; nodeB = nodeA; nodeA = temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2061/buggy-version/src.hcpSolver.Main.java", "BodyUseAPI": [], "Fixed commit": "51fa5dcebb57d7b4eec178396f90159afbee14da", "Url": "https://api.github.com/repos/fedoto91/hcpSolver", "Date": "2014-10-27T18:30:03Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getEntity().getBasePotionData().getType().getEffectType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (type != null) set.add(type.createEffect(1, 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6463/buggy-version/src.de.halfminer.worldguardfix.Listeners.java", "BodyUseAPI": ["java.util.Set<org.bukkit.potion.PotionEffect>.add(type.createEffect(1, 1))", "org.bukkit.potion.PotionEffectType.createEffect(int,int)"], "Fixed commit": "feec42de902d1ec076e0e5b1a166f8b7701fafd0", "Url": "https://api.github.com/repos/Kakifrucht/WorldGuardFix", "Date": "2016-05-13T18:58:27Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sqlRequest.getBackdoorToggles()) != null) org.apache.kylin.common.debug.BackdoorToggles.addToggles(sqlRequest.getBackdoorToggles());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/5813/buggy-version/server-base.src.main.java.org.apache.kylin.rest.service.QueryService.java", "BodyUseAPI": ["org.apache.kylin.rest.request.SQLRequest.getBackdoorToggles()", "org.apache.kylin.common.debug.BackdoorToggles.addToggles(sqlRequest.getBackdoorToggles())"], "Fixed commit": "1e0e9a64f07eb0d53ef5f58850b6e9baf1e36d6c", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-12-28T02:22:33Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (append) { sb.append(\";\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8102/buggy-version/src.com.iconmaster.source.link.platform.hppl.PlatformHPPL.java", "BodyUseAPI": [], "Fixed commit": "9a74ee2d97bda3724f6f1dd9f2c44054f3193878", "Url": "https://api.github.com/repos/iconmaster5326/Source", "Date": "2014-10-15T21:32:33Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((su.mctop.bot.vk_api.VKToken.default_tokens) != null) ret = su.mctop.bot.vk_api.VKToken.default_tokens.get();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4859/buggy-version/src.main.java.su.mctop.bot.vk_api.VKToken.java", "BodyUseAPI": [], "Fixed commit": "2a1ca78f59625477e43c9a65c4b76f0ff7be473e", "Url": "https://api.github.com/repos/Enelar/vk_group_bot", "Date": "2013-05-20T02:04:06Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (props.get(2).isEmpty()) { result += (jms + \"tcp://localhost:61616\") + \"\\n\"; }else { result += (jms + (props.get(2))) + \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2687/buggy-version/src.main.java.org.powertac.tourney.services.Rest.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "9c2dc004c3ef86b66c609b80f72a59cd72e5aa78", "Url": "https://api.github.com/repos/powertac/powertac-tournament-scheduler", "Date": "2012-06-02T19:24:56Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 17) { mMraidWebView.getSettings().setMediaPlaybackRequiresUserGesture(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3942/buggy-version/mopub-sdk.src.main.java.com.mopub.mraid.MraidBridge.java", "BodyUseAPI": [], "Fixed commit": "e52461d9d0e94d5ee2d254f6a72885a160ff4882", "Url": "https://api.github.com/repos/jnrepo/mopub-android-sdk", "Date": "2015-06-01T21:25:30Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sprite == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8455/buggy-version/src.de.phbouillon.android.games.alite.screens.opengl.objects.Billboard.java", "BodyUseAPI": [], "Fixed commit": "b93f6d5c3b8ca401a4b32d41a83a0b0a47236445", "Url": "https://api.github.com/repos/CmdrStardust/Alite", "Date": "2016-02-06T21:39:11Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inGame.isPlayerAlive()) { int tf = ((de.phbouillon.android.games.alite.Alite) (game)).getTimeFactor(); while (((--tf) >= 0) && (inGame.isPlayerAlive())) { inGame.performUpdate(deltaTime, allObjects); } }else { inGame.performUpdate(deltaTime, allObjects); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8455/buggy-version/src.de.phbouillon.android.games.alite.screens.opengl.ingame.FlightScreen.java", "BodyUseAPI": ["de.phbouillon.android.games.alite.screens.opengl.ingame.InGameManager.performUpdate(float,java.util.ArrayList<de.phbouillon.android.games.alite.screens.opengl.objects.AliteObject>)", "de.phbouillon.android.games.alite.screens.opengl.ingame.InGameManager.isPlayerAlive()", "de.phbouillon.android.games.alite.screens.opengl.ingame.InGameManager.performUpdate(float,java.util.ArrayList<de.phbouillon.android.games.alite.screens.opengl.objects.AliteObject>)"], "Fixed commit": "b93f6d5c3b8ca401a4b32d41a83a0b0a47236445", "Url": "https://api.github.com/repos/CmdrStardust/Alite", "Date": "2016-02-06T21:39:11Z"},
{"Line": "=>1336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof org.mozilla.javascript.NativeJavaObject) { return com.servoy.j2db.util.Utils.getAsUUID(((org.mozilla.javascript.NativeJavaObject) (o)).unwrap(), throwOnException); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/3094/buggy-version/servoy_shared.src.com.servoy.j2db.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "58bd88dac2b5a41caa21607b9c014d7ac7722c9d", "Url": "https://api.github.com/repos/Servoy/servoy-client", "Date": "2014-07-07T07:21:39Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sk89q.minecraft.util.commands.CommandContext.hasFlag(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!buildInWildness) && (!(player.hasPermission(\"myresidence.major\")))) { throw new at.co.hohl.myresidence.commands.PermissionsDeniedException(\"Your are not allowed to create residences inside towns!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8525/buggy-version/src.main.java.at.co.hohl.myresidence.commands.ResidenceCommands.java", "BodyUseAPI": [], "Fixed commit": "3e7db0fc5c7b8e0831fc9ccc3f52bf80b71cd780", "Url": "https://api.github.com/repos/hohl/MyResidence", "Date": "2011-07-31T21:22:25Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (residence == null) { throw new java.lang.NullPointerException(\"null is not a residence!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8525/buggy-version/src.main.java.at.co.hohl.myresidence.bukkit.persistent.PersistNation.java", "BodyUseAPI": [], "Fixed commit": "3e7db0fc5c7b8e0831fc9ccc3f52bf80b71cd780", "Url": "https://api.github.com/repos/hohl/MyResidence", "Date": "2011-07-31T21:22:25Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDatabase().find(at.co.hohl.myresidence.bukkit.persistent.ResidenceArea.class).where().eq(\"residenceId\", residence.getId()).findUnique()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (residenceArea != null) { getDatabase().delete(residenceArea); }else { plugin.warning(\"Deleted residence which does not have an area!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/8525/buggy-version/src.main.java.at.co.hohl.myresidence.bukkit.persistent.PersistNation.java", "BodyUseAPI": ["com.avaje.ebean.EbeanServer.delete(at.co.hohl.myresidence.bukkit.persistent.ResidenceArea)"], "Fixed commit": "3e7db0fc5c7b8e0831fc9ccc3f52bf80b71cd780", "Url": "https://api.github.com/repos/hohl/MyResidence", "Date": "2011-07-31T21:22:25Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentHex.IsVortexHex())) validHexes.add(currentHex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/4708/buggy-version/src.model.MoveCalculator.MovementCalculator.java", "BodyUseAPI": ["java.util.ArrayList<sshexmap.MapHex>.add(sshexmap.MapHex)"], "Fixed commit": "b1d5251b8cca58b4b5786f21d56796333132885b", "Url": "https://api.github.com/repos/cjeffery/sworsorc", "Date": "2014-04-16T00:55:37Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (example.getName().matches(\"MDR[TS]_.*\\\\$\")) { return true; }else if (example.getName().startsWith(\"MLOG$_\")) { return true; }else if (example.getName().startsWith(\"RUPD$_\")) { return true; }else if (example.getName().startsWith(\"WM$_\")) { return true; }else if (example.getName().equals(\"CREATE$JAVA$LOB$TABLE\")) { return true; }else if (example.getName().equals(\"JAVA$CLASS$MD5$TABLE\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/1095/buggy-version/liquibase-core.src.main.java.liquibase.database.core.OracleDatabase.java", "BodyUseAPI": ["liquibase.structure.DatabaseObject.getName()", "liquibase.structure.DatabaseObject.getName()", "example.getName().equals(java.lang.String)", "example.getName().equals(java.lang.String)", "liquibase.structure.DatabaseObject.getName()", "liquibase.structure.DatabaseObject.getName()", "example.getName().startsWith(java.lang.String)", "liquibase.structure.DatabaseObject.getName()", "example.getName().startsWith(java.lang.String)", "example.getName().startsWith(java.lang.String)"], "Fixed commit": "e003e959b602d2c6770a9739d4db80570eb75baf", "Url": "https://api.github.com/repos/Tom9729/liquibase", "Date": "2015-04-11T20:54:58Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.sephiroth.android.library.imagezoom.ImageViewTouch.getBitmapRect()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((bitmapRect.right) >= (imageViewRect.right)) { return (java.lang.Math.abs(((bitmapRect.right) - (imageViewRect.right)))) > (it.sephiroth.android.library.imagezoom.ImageViewTouch.SCROLL_DELTA_THRESHOLD); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6244/buggy-version/ImageViewTouch.src.it.sephiroth.android.library.imagezoom.ImageViewTouch.java", "BodyUseAPI": ["java.lang.Math.abs(((bitmapRect.right) - (imageViewRect.right)))"], "Fixed commit": "bad45761220016605add9860d11a68a5ae6afda3", "Url": "https://api.github.com/repos/ethangao/ImageViewZoom", "Date": "2013-10-09T18:18:23Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/2538/buggy-version/src.plugins.WSFreenet.Handler.java", "BodyUseAPI": [], "Fixed commit": "8899428d4697d23940a7da4a5ed04ae7e856db6b", "Url": "https://api.github.com/repos/ktogias/wsFreenet", "Date": "2015-09-03T00:53:59Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.olympuspvp.squads.olySquads.getPlayerSquad(pDamaged.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (damagedSquad == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V131/6852/buggy-version/src.com.olympuspvp.squads.PVPListener.java", "BodyUseAPI": [], "Fixed commit": "f6a1b85c9aaf7059b87940a3421dcee130249c9e", "Url": "https://api.github.com/repos/CalDaBeast/olySquads", "Date": "2013-01-06T18:43:06Z"}]}
