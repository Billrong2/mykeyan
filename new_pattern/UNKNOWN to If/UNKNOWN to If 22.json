{"UNKNOWN to If":[{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resource == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6364/buggy-version/src.mobi.hsz.idea.gitignore.util.Resources.java", "BodyUseAPI": [], "Fixed commit": "8c07ff469d75c5851ffc80b76d2cb02314ccb664", "Url": "https://api.github.com/repos/hsz/idea-gitignore", "Date": "2015-07-02T09:54:22Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextArea.getCaretPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pos >= (conteudo.length())) pos = conteudo.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4250/buggy-version/DocsClient.src.br.com.hrdev.docsclient.views.dashboard.EditableArea.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "9df4c18086a4842980a8050db2b3e3918efd2121", "Url": "https://api.github.com/repos/henrique502/Docs-Senac", "Date": "2015-07-03T03:37:52Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getCaretPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pos >= (titulo.length())) pos = titulo.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4250/buggy-version/DocsClient.src.br.com.hrdev.docsclient.views.dashboard.EditableArea.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "9df4c18086a4842980a8050db2b3e3918efd2121", "Url": "https://api.github.com/repos/henrique502/Docs-Senac", "Date": "2015-07-03T03:37:52Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myPosition >= (theBytes.length)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6547/buggy-version/src.oscP5.OscPatcher.java", "BodyUseAPI": [], "Fixed commit": "a894afbf96224c6753ed0cddc1e3ff2ae46a0d79", "Url": "https://api.github.com/repos/fdb/oscp5", "Date": "2012-12-23T06:49:11Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.etsmtl.applets.etsmobile.model.Sponsor.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (url != null) { android.content.Intent internetIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(url)); startActivity(internetIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3482/buggy-version/app.src.main.java.ca.etsmtl.applets.etsmobile.ui.fragment.SponsorsFragment.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)"], "Fixed commit": "48d0baa3fca2d803bf555ab743551f645e48252b", "Url": "https://api.github.com/repos/MarcantVez/ETSMobile-Android2", "Date": "2015-12-01T20:11:41Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value > (1.0E9 / 60.0)) { t.setColor((dimmed ? dimmedOrange : ColorRGBA.Orange)); }else if (value > (totalTime / 3)) { t.setColor((dimmed ? dimmedGreen : ColorRGBA.Green)); }else if (value < 30000) { t.setColor(ColorRGBA.DarkGray); insignificant = true; }else { t.setColor((dimmed ? dimmedWhite : ColorRGBA.White)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1984/buggy-version/jme3-core.src.main.java.com.jme3.post.DetailedProfilerState.java", "BodyUseAPI": [], "Fixed commit": "8dcc67a3183bc296e885d2e8baf51226e36624a8", "Url": "https://api.github.com/repos/jMonkeyEngine/jmonkeyengine", "Date": "2017-02-07T19:43:42Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((scopeElement != null) && (!(scopeElement.getText().trim().isEmpty()))) { scope = scopeElement.getText().trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8693/buggy-version/src.main.java.org.teinelund.maven_setup_project.dependencies.DependenciesImpl.java", "BodyUseAPI": [], "Fixed commit": "1dbdbee3c6baca89a6a45447a11c5060110f4e05", "Url": "https://api.github.com/repos/teinelund/maven-project-setup", "Date": "2015-11-04T05:34:08Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.modularaudio.service.configuration.impl.ConfigurationServiceImpl.getSingleStringValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((values.length()) > 0) { return values.split(\",\"); }else { return new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8315/buggy-version/2COMMONPROJECTS.common-services.src.uk.co.modularaudio.service.configuration.impl.ConfigurationServiceImpl.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "0f33cdf963c505ee1b16166a53f61d810ce4facb", "Url": "https://api.github.com/repos/danielhams/mad-java", "Date": "2015-01-25T10:25:06Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pomFile == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5285/buggy-version/src.main.java.org.jetbrains.idea.maven.utils.MavenUtil.java", "BodyUseAPI": [], "Fixed commit": "423aadcc6ed114a688e2b773f86d08a0068d496b", "Url": "https://api.github.com/repos/consulo/consulo-maven", "Date": "2017-06-10T16:12:14Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.vfs.VirtualFile.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parent == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5285/buggy-version/src.main.java.org.jetbrains.idea.maven.utils.MavenUtil.java", "BodyUseAPI": [], "Fixed commit": "423aadcc6ed114a688e2b773f86d08a0068d496b", "Url": "https://api.github.com/repos/consulo/consulo-maven", "Date": "2017-06-10T16:12:14Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pomFile == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5285/buggy-version/src.main.java.org.jetbrains.idea.maven.utils.MavenUtil.java", "BodyUseAPI": [], "Fixed commit": "423aadcc6ed114a688e2b773f86d08a0068d496b", "Url": "https://api.github.com/repos/consulo/consulo-maven", "Date": "2017-06-10T16:12:14Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.vfs.VirtualFile.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parent == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5285/buggy-version/src.main.java.org.jetbrains.idea.maven.utils.MavenUtil.java", "BodyUseAPI": [], "Fixed commit": "423aadcc6ed114a688e2b773f86d08a0068d496b", "Url": "https://api.github.com/repos/consulo/consulo-maven", "Date": "2017-06-10T16:12:14Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activePanelList.size()) > 1) { for (int i = 0; i < (activePanelList.size()); i++) { javax.swing.JPanel active = activePanelList.get(i); if ((active.getComponentCount()) > 1) { for (int j = 0; j < (active.getComponentCount()); j++) { if ((active.getComponent(j)) instanceof OpenLogViewer.OptionPanel.OptionFrameV2.GCheckBox) { ((OpenLogViewer.OptionPanel.OptionFrameV2.GCheckBox) (active.getComponent(j))).getGDE().setSplitNumber((i + 1)); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3861/buggy-version/src.OpenLogViewer.OptionPanel.OptionFrameV2.java", "BodyUseAPI": ["java.util.ArrayList<javax.swing.JPanel>.get(int)", "java.util.ArrayList<javax.swing.JPanel>.size()"], "Fixed commit": "ea4dc139e1a66be8d1688b29593c8dfba96c1297", "Url": "https://api.github.com/repos/gufi/OpenLogViewer", "Date": "2011-03-15T08:38:41Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tabName) == null) this.tabName = this.filterName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7480/buggy-version/acs.tabbychat.settings.TCChatFilter.java", "BodyUseAPI": [], "Fixed commit": "13e3d9e1a06ffef0b58854eec02b6757d21be094", "Url": "https://api.github.com/repos/rocketman10404/tabbychat", "Date": "2013-08-15T10:44:48Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cmp1.length) < 2) { java.lang.System.out.println((\"Comparison is: \" + (cmp1[0]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3892/buggy-version/org.aksw.iguana.src.main.java.org.aksw.iguana.utils.comparator.TripleComparator.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "5e2d63ed3857fa1b035fd575eb28ad20961c00b9", "Url": "https://api.github.com/repos/dice-group/IGUANA", "Date": "2016-03-15T15:48:13Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((service.findByUsername(username)) == null) { service.addUser(new com.team6.app.User(firstName, lastName, username, email, dob)); com.team6.app.User user = service.findByUsername(username); java.lang.System.out.println((((((((((\"Here's the user that just signed up: \" + (user.getFirstName())) + \" \") + (user.getLastName())) + \" \") + (user.getUsername())) + \" \") + (user.getEmail())) + \" \") + (user.getDOB()))); return \"login\"; }else { model.addAttribute(\"userexists\", \"<script>alert('Username already exists, try a different one.');</script>\"); return \"home\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/246/buggy-version/src.main.java.com.team6.app.AccountController.java", "BodyUseAPI": ["com.team6.app.AccountService.findByUsername(java.lang.String)", "com.team6.app.AccountService.addUser(com.team6.app.User)"], "Fixed commit": "0fd1381da36f6341e203ad2534e4eddd1e834e49", "Url": "https://api.github.com/repos/chrisn21/team6", "Date": "2014-02-12T22:03:40Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((details1.getTimeStamp()) > (details2.getTimeStamp())) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/861/buggy-version/fr.esrf.logviewer.MyTableModel.java", "BodyUseAPI": [], "Fixed commit": "6642279f35931ae01ed829b8caaddce74829b9bf", "Url": "https://api.github.com/repos/tango-controls/LogViewer", "Date": "2016-04-26T12:44:02Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (hitMap.containsKey(loc.docId)) { search.index.Match hit = hitMap.get(loc.docId); hit.addTerm(loc, query.terms[0]); }else hitMap.put(loc.docId, new search.index.Match(loc, query.terms[0], search.index.MatchType.fromQuery(query)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1736/buggy-version/src.search.index.Index.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, search.index.Match>.put(loc.docId,search.index.Match)", "java.util.HashMap<java.lang.Integer, search.index.Match>.get(loc.docId)", "search.index.Match.addTerm(search.index.Location,query.terms[0])"], "Fixed commit": "1eaf88adc600a790fec077d38c387d9aee12b7cd", "Url": "https://api.github.com/repos/Ecdosis/search", "Date": "2015-12-11T03:20:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((link.page.length()) > 0) { pageResult = client.getPageForName(((java.lang.Character.toTitleCase(link.page.charAt(0))) + (link.page.substring(1)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/832/buggy-version/src.ru.abishev.wiki.pages.PagesAnalyser.java", "BodyUseAPI": ["ru.abishev.wiki.pages.PagesClient.getPageForName(((java.lang.Character.toTitleCase(link.page.charAt(0))) + (link.page.substring(1))))", "java.lang.Character.toTitleCase(link.page.charAt(0))", "link.page.charAt(int)", "link.page.substring(int)"], "Fixed commit": "c19516c600586b0fca4b902fa3bb19375742f607", "Url": "https://api.github.com/repos/ttim/Diploma", "Date": "2012-04-12T04:59:45Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.lightmare.utils.ObjectUtils.notNull(org.lightmare.rest.RestConfig.config)) { this.addPreResources(org.lightmare.rest.RestConfig.config); java.util.Map<java.lang.String, java.lang.Object> properties = org.lightmare.rest.RestConfig.config.getProperties(); if (org.lightmare.utils.ObjectUtils.available(properties)) { addProperties(properties); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1738/buggy-version/src.main.java.org.lightmare.rest.RestConfig.java", "BodyUseAPI": [], "Fixed commit": "205c55b86a1aaac709ad1f58c48dd65fc8cb1c0a", "Url": "https://api.github.com/repos/levants/lightmare", "Date": "2013-07-24T14:54:39Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!dbInMemory) { options.add(\"AUTO_SERVER=TRUE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8338/buggy-version/jena-sparql-api-cache-h2.src.main.java.org.aksw.jena_sparql_api.cache.h2.CacheUtilsH2.java", "BodyUseAPI": [], "Fixed commit": "90130be8966b0d2a3b3d7a2ea755eacf24b8bf4a", "Url": "https://api.github.com/repos/SmartDataAnalytics/jena-sparql-api", "Date": "2016-08-02T12:00:05Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getPlayer(sender.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (player == null) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"This command cannot be run from console.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/588/buggy-version/src.main.java.net.cubespace.geSuitHomes.commands.HomeCommand.java", "BodyUseAPI": [], "Fixed commit": "b7bb23120255e5133f90f67ab24951ec9e6fd08d", "Url": "https://api.github.com/repos/AddstarMC/geSuitHomes", "Date": "2015-01-15T06:39:44Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spoon.support.visitor.MethodTypingContext.getIndexOfTypeParam(scopeParam.getTypeParameterDeclarer(),spoon.reflect.reference.CtTypeReference<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idxOfScopeBoundTypeParam >= 0) { int idxOfSuperBoundTypeParam = getIndexOfTypeParam(superParam.getTypeParameterDeclarer(), superBound); if (idxOfScopeBoundTypeParam >= 0) { return idxOfScopeBoundTypeParam == idxOfSuperBoundTypeParam; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1789/buggy-version/src.main.java.spoon.support.visitor.MethodTypingContext.java", "BodyUseAPI": [], "Fixed commit": "64e0cf72d29f425adec3361a8d5e258a8dd101ce", "Url": "https://api.github.com/repos/pvojtechovsky/spoon", "Date": "2017-10-22T18:02:43Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lon < 0) lon += 360;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8501/buggy-version/daedalus-balloon-core.src.main.java.daedalusballoon.core.FlightPathPredictor.java", "BodyUseAPI": [], "Fixed commit": "7e730ec84b46d349edb9dd11920f0d96d7482c2c", "Url": "https://api.github.com/repos/daedalusballoon/daedalus-balloon-station", "Date": "2017-06-12T19:22:39Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dockIndicatorOverlay.isShowing()) dockIndicatorOverlay.hide();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8189/buggy-version/src.main.java.org.dockfx.DockPane.java", "BodyUseAPI": ["javafx.stage.Popup.hide()"], "Fixed commit": "19f96c232b4e5123fb5932c04343251cac851ac9", "Url": "https://api.github.com/repos/MilWolf/DockFX", "Date": "2016-01-22T14:17:03Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msg) == (lisong_mechlab.model.upgrades.Upgrades.Message.ChangeMsg.HEATSINKS)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2263/buggy-version/src.lisong_mechlab.model.upgrades.Upgrades.java", "BodyUseAPI": [], "Fixed commit": "b9580a243ae27cfc8d29fdd8387b097a9981d862", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2014-05-10T11:02:02Z"},
{"Line": "=>1202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentNeedToMap.containsKey(cur.getElement().getType())) cur.getElement().setType(currentNeedToMap.get(cur.getElement().getType()).get(preSubEleNotLineNotBand.getType()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3788/buggy-version/filereaders.individual.EctypalElement.java", "BodyUseAPI": ["currentNeedToMap.get(cur.getElement().getType()).get(preSubEleNotLineNotBand.getType())", "filereaders.individual.EctypalElement.get(cur.getElement().getType())", "filereaders.tools.LinkedArrayList.Entry<filereaders.individual.EctypalSubElement.EctypalSubElement>.getElement()", "cur.getElement().getType()", "cur.getElement().setType(currentNeedToMap.get(cur.getElement().getType()).get(preSubEleNotLineNotBand.getType()))", "filereaders.tools.LinkedArrayList.Entry<filereaders.individual.EctypalSubElement.EctypalSubElement>.getElement()"], "Fixed commit": "29b67d107613b4172b32c4424fede30b7a06a83c", "Url": "https://api.github.com/repos/ljuan/gbhit", "Date": "2013-07-15T13:46:17Z"},
{"Line": "=>1170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentNeedToMap.containsKey(cur.getElement().getType())) cur.getElement().setType(currentNeedToMap.get(cur.getElement().getType()).get(preSubEleNotLineNotBand.getType()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3788/buggy-version/filereaders.individual.EctypalElement.java", "BodyUseAPI": ["cur.getElement().setType(currentNeedToMap.get(cur.getElement().getType()).get(preSubEleNotLineNotBand.getType()))", "cur.getElement().getType()", "filereaders.tools.LinkedArrayList.Entry<filereaders.individual.EctypalSubElement.EctypalSubElement>.getElement()", "currentNeedToMap.get(cur.getElement().getType()).get(preSubEleNotLineNotBand.getType())", "filereaders.individual.EctypalElement.get(cur.getElement().getType())", "filereaders.tools.LinkedArrayList.Entry<filereaders.individual.EctypalSubElement.EctypalSubElement>.getElement()"], "Fixed commit": "29b67d107613b4172b32c4424fede30b7a06a83c", "Url": "https://api.github.com/repos/ljuan/gbhit", "Date": "2013-07-15T13:46:17Z"},
{"Line": "=>694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!dead) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2019/buggy-version/asd.src.Game.java", "BodyUseAPI": [], "Fixed commit": "a4269ec40dbd3c087995154fa51486acdde7b2a7", "Url": "https://api.github.com/repos/jack994/MysticalAdventure", "Date": "2017-08-29T15:38:40Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dasein.cloud.aws.compute.AMI.getImage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (img == null) { for (int i = 0; i < 5; i++) { try { java.lang.Thread.sleep((5000L * i)); } catch (java.lang.InterruptedException ignore) { } img = getImage(id); if (img != null) { break; } } if (img == null) { throw new org.dasein.cloud.CloudException(((\"No image exists for \" + id) + \" as created during the capture process\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7259/buggy-version/src.main.java.org.dasein.cloud.aws.compute.AMI.java", "BodyUseAPI": [], "Fixed commit": "b6e098ea0ddb1e55c323789861ccaa7306991440", "Url": "https://api.github.com/repos/TranscendComputing/dasein-cloud-aws", "Date": "2013-01-11T14:56:53Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_listViewAdapter) != null) { m_listViewAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6067/buggy-version/BetterBatteryStats.src.com.asksven.betterbatterystats.AlarmsActivity.java", "BodyUseAPI": [], "Fixed commit": "d474c52c8a056e87a13309312ac425ebf0a7f61d", "Url": "https://api.github.com/repos/asksven/BetterBatteryStats", "Date": "2012-07-30T19:24:39Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((col == (-1)) || (row == (-1))) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2806/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.common.datatable.DataTableDataProvider.java", "BodyUseAPI": [], "Fixed commit": "2740044b198fdafebb7df787927b30df38de94d0", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-09-24T11:59:40Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joget.commons.util.SetupManager.getSettingValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((emailPort == null) || (emailPort.isEmpty())) { if (\"imap\".equals(emailProtocol)) emailPort = \"143\"; else if (\"imaps\".equals(emailProtocol)) emailPort = \"993\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7686/buggy-version/wflow-consoleweb.src.main.java.org.joget.apps.route.EmailApprovalRouteBuilder.java", "BodyUseAPI": [], "Fixed commit": "7e61a8800e49bfe1f30934fbd11a9d5fb58ea97d", "Url": "https://api.github.com/repos/kinnara-digital-studio/kecak-workflow", "Date": "2017-08-23T10:26:29Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((emailFolder == null) || (emailFolder.isEmpty())) emailFolder = \"INBOX\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7686/buggy-version/wflow-consoleweb.src.main.java.org.joget.apps.route.EmailApprovalRouteBuilder.java", "BodyUseAPI": [], "Fixed commit": "7e61a8800e49bfe1f30934fbd11a9d5fb58ea97d", "Url": "https://api.github.com/repos/kinnara-digital-studio/kecak-workflow", "Date": "2017-08-23T10:26:29Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextTetrimino) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3602/buggy-version/project.src.main.java.com.esiea.tetris.model.concrete.NextTetriminoIndicatorComponent.java", "BodyUseAPI": [], "Fixed commit": "d088af1a11f53027a8fb16b65c9e659ab0f71771", "Url": "https://api.github.com/repos/b2800/tmpl", "Date": "2016-04-11T13:54:57Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((listDataChild) != null) && ((listDataHeader) != null)) && ((listDataChild.size()) != 0)) { return this.listDataChild.get(this.listDataHeader.get(groupPosition)).size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/731/buggy-version/app.src.main.java.nl.hs_hague.urbangame.adapter.ExpandableRoomAdapter.java", "BodyUseAPI": [], "Fixed commit": "91c55414dc4f9d46f456e8307b5b89e95e5f4e6e", "Url": "https://api.github.com/repos/Vural-xx/UrbanGame", "Date": "2016-10-09T16:01:09Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configuration) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7320/buggy-version/commons-app.src.main.java.cz.cuni.xrg.intlib.commons.app.dpu.DPURecord.java", "BodyUseAPI": [], "Fixed commit": "c992ddd229a6d54a31eb3e62f46998d68fec230a", "Url": "https://api.github.com/repos/mff-uk/intlib", "Date": "2013-07-05T19:09:07Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(packages.contains(name))) { packages.add(name); java.lang.System.out.println((((name + \"\\tpackage\") + (SublimeJava.sep)) + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3872/buggy-version/SublimeJava.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "8dcd5b1404e638662f6a5c9ee88ee5240e6df8ea", "Url": "https://api.github.com/repos/quarnster/SublimeJava", "Date": "2012-07-18T09:52:48Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.isDirectory()) { java.lang.System.out.println((((name + \"\\tpackage\") + (SublimeJava.sep)) + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3872/buggy-version/SublimeJava.java", "BodyUseAPI": [], "Fixed commit": "8dcd5b1404e638662f6a5c9ee88ee5240e6df8ea", "Url": "https://api.github.com/repos/quarnster/SublimeJava", "Date": "2012-07-18T09:52:48Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!foundEnemy) { java.lang.System.out.println(\"No enemy found.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4419/buggy-version/src.de.hhu.propra.team61.artificialIntelligence.SimpleAI.java", "BodyUseAPI": [], "Fixed commit": "4e19f02773ee242c496280cc154900a3ae1a0045", "Url": "https://api.github.com/repos/mabre/team61", "Date": "2014-09-04T13:46:38Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.axiom.om.OMElement.getAttributeValue(javax.xml.namespace.QName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (client.isExistingSequence(fileName, MultitenantConstants.SUPER_TENANT_DOMAIN_NAME)) { client.deleteSequence(fileName, MultitenantConstants.SUPER_TENANT_DOMAIN_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5269/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.APIGatewayManager.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.impl.utils.APIGatewayAdminClient.deleteSequence(java.lang.String,MultitenantConstants.SUPER_TENANT_DOMAIN_NAME)"], "Fixed commit": "e82d74d73efd2fdbca7ec1bd38a017482989f4ef", "Url": "https://api.github.com/repos/dewmini/carbon-apimgt", "Date": "2016-12-08T10:18:11Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.axiom.om.OMElement.getAttributeValue(javax.xml.namespace.QName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (client.isExistingSequence(fileName, MultitenantConstants.SUPER_TENANT_DOMAIN_NAME)) { client.deleteSequence(fileName, MultitenantConstants.SUPER_TENANT_DOMAIN_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5269/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.APIGatewayManager.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.impl.utils.APIGatewayAdminClient.deleteSequence(java.lang.String,MultitenantConstants.SUPER_TENANT_DOMAIN_NAME)"], "Fixed commit": "e82d74d73efd2fdbca7ec1bd38a017482989f4ef", "Url": "https://api.github.com/repos/dewmini/carbon-apimgt", "Date": "2016-12-08T10:18:11Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(channel.isOpen())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1919/buggy-version/src.main.java.com.egeio.realtime.websocket.WebSocketHandler.java", "BodyUseAPI": [], "Fixed commit": "226240b41b1bfab8586789b7420d44c35edbc2e9", "Url": "https://api.github.com/repos/ZJUZT/services-realtime", "Date": "2015-08-05T03:18:21Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.parent.isPresent()) { rickbw.incubator.activity.ActivityImpl.currentExecution.set(this.parent.get()); }else { rickbw.incubator.activity.ActivityImpl.currentExecution.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6541/buggy-version/src.main.java.rickbw.incubator.activity.ActivityImpl.java", "BodyUseAPI": ["com.google.common.base.Optional<rickbw.incubator.activity.Execution>.get()", "java.lang.ThreadLocal<rickbw.incubator.activity.Execution>.set(this.parent.get())"], "Fixed commit": "6ceb42a8de7873325919080d8f5bbf5840ad14a3", "Url": "https://api.github.com/repos/rickbw/incubator", "Date": "2015-07-31T17:22:44Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sentence.startsWith(\"*GS02\")) { pattern = org.traccar.protocol.GoSafeProtocolDecoder.PATTERN_OLD; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4751/buggy-version/src.org.traccar.protocol.GoSafeProtocolDecoder.java", "BodyUseAPI": [], "Fixed commit": "ad7bdd5a5fe04841c941860a98501eef2a00207b", "Url": "https://api.github.com/repos/traccar/traccar", "Date": "2016-01-22T21:46:10Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) { THUMBNAIL_WIDTH = sdgnys.outpostlite.ParcelImageActivity.LANDSCAPE_THUMBNAIL_WIDTH; THUMBNAIL_HEIGHT = sdgnys.outpostlite.ParcelImageActivity.LANDSCAPE_THUMBNAIL_HEIGHT; }else { THUMBNAIL_WIDTH = sdgnys.outpostlite.ParcelImageActivity.PORTRAIT_THUMBNAIL_WIDTH; THUMBNAIL_HEIGHT = sdgnys.outpostlite.ParcelImageActivity.PORTRAIT_THUMBNAIL_HEIGHT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8742/buggy-version/app.src.main.java.sdgnys.outpostlite.ParcelImageActivity.java", "BodyUseAPI": [], "Fixed commit": "5f61fe60b5697e5c514b86e4a7d17ccb6f472baf", "Url": "https://api.github.com/repos/JonForce/OutpostLite", "Date": "2017-12-27T21:46:59Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t.getSequenceNumber()) == (startSequence)) { (startSequence)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6605/buggy-version/eip-message-flow.src.main.java.com.thejavapro.messageflow.resequence.Consumer.java", "BodyUseAPI": [], "Fixed commit": "a587757bd4b1e81a97e789ab76a1a13311432667", "Url": "https://api.github.com/repos/charlescao2016/eip-message-flow", "Date": "2016-08-04T03:05:15Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((first.hasCoefficient()) == (second.hasCoefficient())) && ((first.length()) != (second.length()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4338/buggy-version/src.com.github.nateowami.solve4x.algorithm.CombineLikeTerms.java", "BodyUseAPI": [], "Fixed commit": "509ccc3bf7d9eee4331b093827999fb9f4120131", "Url": "https://api.github.com/repos/Nateowami/Solve4x", "Date": "2015-07-22T10:30:38Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Session.get(java.lang.Class,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (product != null) session.delete(product);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2395/buggy-version/internetShop.src.main.java.lv.javaguru.java2.database.hibernate.ProductDAOImpl.java", "BodyUseAPI": ["org.hibernate.Session.delete(lv.javaguru.java2.domain.Product)"], "Fixed commit": "59a3339ed841df791a066181de5887efa8008d65", "Url": "https://api.github.com/repos/javagurulv/javaguru_java2_2015_internetShop", "Date": "2015-03-04T23:11:22Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.popularpenguin.bakingapp.Data.Recipe.getVideoUri(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (uri.toString().isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4673/buggy-version/app.src.main.java.com.popularpenguin.bakingapp.InstructionsFragment.java", "BodyUseAPI": [], "Fixed commit": "a9e23050d42ca56743da1372110f3d732ebad067", "Url": "https://api.github.com/repos/PopularPenguin/BakingApp", "Date": "2017-11-29T02:28:38Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jsonObj.has(\"turn_angle\")) { double angle = jsonObj.getDouble(\"turn_angle\"); ri.setDirOfRotation(angle); ri.setRadian(((angle < 0 ? -(java.lang.Math.PI) : java.lang.Math.PI) - angle)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3750/buggy-version/web.src.main.java.com.graphhopper.http.GraphHopperWeb.java", "BodyUseAPI": ["org.json.JSONObject.getDouble(java.lang.String)"], "Fixed commit": "d51fca0588fe9085a1e6eec7e5c4c1ad80d66c4b", "Url": "https://api.github.com/repos/devemux86/graphhopper", "Date": "2016-01-25T17:35:52Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jsonObj.has(\"exit_number\")) { ri.setExitNumber(jsonObj.getInt(\"exit_number\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3750/buggy-version/web.src.main.java.com.graphhopper.http.GraphHopperWeb.java", "BodyUseAPI": ["com.graphhopper.http.RoundaboutInstruction.setExitNumber(jsonObj.getInt(\"exit_number\"))", "org.json.JSONObject.getInt(java.lang.String)"], "Fixed commit": "d51fca0588fe9085a1e6eec7e5c4c1ad80d66c4b", "Url": "https://api.github.com/repos/devemux86/graphhopper", "Date": "2016-01-25T17:35:52Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (xPixels == 0) { xTile = 0; }else { xTile = ((int) ((java.lang.Math.ceil((xPixels / ((double) (Tile.TILE_SIZE))))) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2879/buggy-version/src.main.java.edu.oregonstate.carto.tilemanager.TileIterator.java", "BodyUseAPI": ["java.lang.Math.ceil(double)"], "Fixed commit": "b8b38d0af589b4d02dd3e51bc80580d87e1a58c0", "Url": "https://api.github.com/repos/OSUCartography/MapComposer", "Date": "2013-12-27T03:29:33Z"},
{"Line": "=>1231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ofComp.getID().replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((writingVariables.get(outfileId)) == null) { writingVariables.put(outfileId, new java.util.ArrayList<java.lang.String>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4203/buggy-version/src.main.java.org.neuroml.export.neuron.NeuronWriter.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>>.put(java.lang.String,java.util.ArrayList<java.lang.String>)"], "Fixed commit": "5052d4ce513348432a81efb2502f10cfe4704571", "Url": "https://api.github.com/repos/NeuroML/org.neuroml.export", "Date": "2017-08-05T15:25:15Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((document) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5474/buggy-version/src.main.java.zemfi.de.vertaktoid.FacsimileView.java", "BodyUseAPI": [], "Fixed commit": "5151a6235964bb6486ccd2eb6017d3fc0ae2bf46", "Url": "https://api.github.com/repos/cemfi/vertaktoid", "Date": "2017-03-17T14:59:21Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectTree.toLowerCase().matches(\"(.*)count\\\\((.*)\")) { java.lang.System.out.println(selectTree); selectTree = selectTree.replaceAll(\"count\\\\(\", \"sum\\\\(\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5441/buggy-version/lens-driver-jdbc.src.main.java.org.apache.lens.driver.jdbc.ColumnarSQLRewriter.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "226880e0bc3f8d7beaf6f18c2ef9cef1bd958926", "Url": "https://api.github.com/repos/rajitha703/lens", "Date": "2014-11-26T11:07:48Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((error.networkResponse) != null) { com.bill.zhihu.api.utils.ZhihuLog.d(com.bill.zhihu.api.cmd.TAG, error.networkResponse.statusCode); com.bill.zhihu.api.utils.ZhihuLog.d(com.bill.zhihu.api.cmd.TAG, new java.lang.String(error.networkResponse.data)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3699/buggy-version/zhihuapi.src.main.java.com.bill.zhihu.api.cmd.CmdLoadAvatarImage.java", "BodyUseAPI": ["com.bill.zhihu.api.utils.ZhihuLog.d(com.bill.zhihu.api.cmd.TAG,java.lang.String)", "com.bill.zhihu.api.utils.ZhihuLog.d(com.bill.zhihu.api.cmd.TAG,error.networkResponse.statusCode)"], "Fixed commit": "87214f3d8879c7d0a405e8bae7bbd08156fba8e8", "Url": "https://api.github.com/repos/lber19535/ZhiHu", "Date": "2015-09-12T13:22:36Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((aggReq.getIntervalSize()) == null) || ((aggReq.getIntervalSize()) < 1)) optimalSize = org.rtm.db.DBClient.computeOptimalIntervalSize(effective.getSpan(), java.lang.Integer.parseInt(prop.getProperty(\"targetChartDots\"))); else optimalSize = aggReq.getIntervalSize();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/502/buggy-version/rtm.src.main.java.org.rtm.request.RequestHandler.java", "BodyUseAPI": ["org.rtm.request.AggregationRequest.getIntervalSize()"], "Fixed commit": "8fd304ddb52e9b95ba3ee4e723f0b45055422fb1", "Url": "https://api.github.com/repos/exense/rtm", "Date": "2017-04-06T13:40:22Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.isRaining()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isRaining) { return 0.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4354/buggy-version/src.main.java.starryskyline.teastory.block.Teapan.java", "BodyUseAPI": [], "Fixed commit": "90494d6cde6649bd6f07f0f17304a418821e9799", "Url": "https://api.github.com/repos/LuoXiao-Wing/TeaStory", "Date": "2017-02-19T02:36:00Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"\".equalsIgnoreCase(com.github.dandelion.core.utils.ResourceScanner.mainFolder))) { com.github.dandelion.core.utils.ResourceScanner.loadResources(directoryName.substring(directoryName.indexOf(((com.github.dandelion.core.utils.ResourceScanner.mainFolder) + (java.io.File.separatorChar))), directoryName.length())); }else { com.github.dandelion.core.utils.ResourceScanner.loadResources(directoryName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3531/buggy-version/dandelion-core.src.main.java.com.github.dandelion.core.utils.ResourceScanner.java", "BodyUseAPI": [], "Fixed commit": "2f9cb62ac216d666ebbb79fcbf7b88daa21a57c2", "Url": "https://api.github.com/repos/dandelion/dandelion", "Date": "2013-11-24T19:22:33Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((emrPatient.getId()) != null) { java.util.List<org.openmrs.Obs> obsForCauseOfDeath = obsService.getObservationsByPersonAndConcept(emrPatient, causeOfDeathConcept); if ((obsForCauseOfDeath != null) && (!(obsForCauseOfDeath.isEmpty()))) { for (org.openmrs.Obs obs : obsForCauseOfDeath) { if (!(obs.isVoided())) { causeOfDeath = obs.getValueCoded(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2704/buggy-version/shrclient-omod.src.main.java.org.openmrs.module.shrclient.service.impl.MciPatientServiceImpl.java", "BodyUseAPI": ["org.openmrs.api.ObsService.getObservationsByPersonAndConcept(org.openmrs.module.shrclient.model.Patient,org.openmrs.Concept)"], "Fixed commit": "eda36c42dda23ca2397bd3b8db97eec35d36911c", "Url": "https://api.github.com/repos/SharedHealth/openmrs-module-bdshrclient", "Date": "2015-05-26T11:55:29Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4464/buggy-version/app.src.main.java.com.qtfreet.musicuu.ui.activity.PlayMusicActivity.java", "BodyUseAPI": [], "Fixed commit": "29c3d9267a4a0dd7f63a7f1381fb31521cef0616", "Url": "https://api.github.com/repos/TTKMedia/MusicUU", "Date": "2017-02-08T10:15:22Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationSequence.length) > numSamples) { final int interval = (locationSequence.length) / (numSamples + 1); final int start = ((locationSequence.length) - ((numSamples - 1) * interval)) / 2; for (int i = 0; i < (locationSequence.length); ++i) { if (((i - start) % interval) != 0) { locationSequence[i].patchData = null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7601/buggy-version/src.main.java.org.cripac.isee.pedestrian.tracking.Tracklet.java", "BodyUseAPI": [], "Fixed commit": "2e753c97c4f772a44b59981c361d3d039cf8f928", "Url": "https://api.github.com/repos/kyu-sz/LaS-VPE-Platform", "Date": "2017-03-01T11:30:53Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i == 0) && (j == 0)) { }else { ids.add(java.lang.String.valueOf(i).concat(\":\").concat(java.lang.String.valueOf(j))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2777/buggy-version/src.main.java.org.dasein.cloud.cloudsigma.compute.block.DataDriveSupport.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)", "java.lang.String.valueOf(int)", "java.lang.String.concat(java.lang.String)", "java.lang.String.valueOf(int)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "c099df7067c6a05518a76d2a1fcac201d787974c", "Url": "https://api.github.com/repos/daniellemayne/dasein-cloud-cloudsigma", "Date": "2014-02-11T12:54:25Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.equals(\"action\")) || (type.equals(\"other\"))) { if (first) { first = false; }else { out.write(\", \"); } out.write((((\"'\" + (API.API_KEY_PARAM)) + \"' => $\") + (API.API_KEY_PARAM))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5460/buggy-version/src.org.zaproxy.zap.extensions.api.PhpAPIGenerator.java", "BodyUseAPI": [], "Fixed commit": "883f18988aa6c5ef7acebca4b273e2e858f6e8fc", "Url": "https://api.github.com/repos/yukisov/php-api-generator-for-owasp-zap", "Date": "2014-07-02T17:13:37Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.data.gemfire.repository.query.StringBasedGemfireRepositoryQuery.toCollection(template.find(query.toString(), parameters))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isSingleResultNonEntityQuery(method, result)) { return result.iterator().next(); }else { throw new java.lang.IllegalStateException((\"Unsupported query: \" + (query.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1229/buggy-version/src.main.java.org.springframework.data.gemfire.repository.query.StringBasedGemfireRepositoryQuery.java", "BodyUseAPI": ["java.util.Collection<?>.iterator()", "java.util.Iterator<?>.next()"], "Fixed commit": "1920ce4ba190d543160e431eb8cac495dd88662b", "Url": "https://api.github.com/repos/spring-projects/spring-data-gemfire", "Date": "2014-06-17T03:01:34Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (manager != null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8303/buggy-version/components.entities.api.src.main.java.org.phenotips.entities.internal.AbstractPrimaryEntityGroup.java", "BodyUseAPI": [], "Fixed commit": "ea8feebd1750415173842d19932900d859800ba2", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2016-09-15T23:56:55Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previous == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7214/buggy-version/src.main.java.jp.ac.osaka_u.ist.sdl.scanalyzer.metrics.DefaultCloneClassMetricsCalculator.java", "BodyUseAPI": [], "Fixed commit": "0606646d163b8ea3a61a7f5ebc0ec2db52ba0c41", "Url": "https://api.github.com/repos/k-hotta/SCAnalyzer", "Date": "2014-12-09T19:10:55Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((db) == null) { org.dsa.iot.etsdb.db.Db.LOGGER.error(\"Tried to write a value to the database before it was initialized.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5120/buggy-version/src.main.java.org.dsa.iot.etsdb.db.Db.java", "BodyUseAPI": [], "Fixed commit": "206d835f0759b0b5febeb3a2085f3a10ad8ece8a", "Url": "https://api.github.com/repos/kaendfinger/dslink-java-etsdb", "Date": "2017-11-02T16:58:58Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.silverpeas.util.StringUtil.isDefined(componentId)) { org.silverpeas.accesscontrol.ComponentAccessController componentAccessController = org.silverpeas.util.ServiceProvider.getService(org.silverpeas.accesscontrol.ComponentAccessController.class); if (componentAccessController.isUserAuthorized(pdcSC.getUserId(), componentId)) { ic.setPeasID(componentId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4474/buggy-version/war-core.src.main.java.com.stratelia.silverpeas.pdcPeas.servlets.InterestCentersHelper.java", "BodyUseAPI": ["com.silverpeas.interestCenter.model.InterestCenter.setPeasID(java.lang.String)", "org.silverpeas.accesscontrol.ComponentAccessController.isUserAuthorized(pdcSC.getUserId(),java.lang.String)"], "Fixed commit": "3130abece22418d55003c940b086085ff40eb72e", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Core", "Date": "2015-07-06T13:11:56Z"},
{"Line": "=>2202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.silverpeas.interestCenter.util.InterestCenterManager.getInstance().getICByID(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((com.stratelia.silverpeas.pdcPeas.control.StringUtil.isDefined(ic.getPeasID())) && (!(getComponentAccessController().isUserAuthorized(getUserId(), ic.getPeasID())))) { ic.setPeasID(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4474/buggy-version/war-core.src.main.java.com.stratelia.silverpeas.pdcPeas.control.PdcSearchSessionController.java", "BodyUseAPI": ["com.silverpeas.interestCenter.model.InterestCenter.setPeasID(<nulltype>)"], "Fixed commit": "3130abece22418d55003c940b086085ff40eb72e", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Core", "Date": "2015-07-06T13:11:56Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clusterSize == 0) { return 0; }else { return (clusterSize / 2) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9145/buggy-version/src.main.java.org.apache.zab.ClusterConfiguration.java", "BodyUseAPI": [], "Fixed commit": "46222e544667f0ef1c97fb000e66cf1b5783d015", "Url": "https://api.github.com/repos/EasonLiao/javazab", "Date": "2014-08-17T23:41:12Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.zab.ClusterConfiguration.getQuorumSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (quorumSize == 0) { return cnf.getVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9145/buggy-version/src.main.java.org.apache.zab.AckProcessor.java", "BodyUseAPI": [], "Fixed commit": "46222e544667f0ef1c97fb000e66cf1b5783d015", "Url": "https://api.github.com/repos/EasonLiao/javazab", "Date": "2014-08-17T23:41:12Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zombieList[i].getZombie(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (z == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3051/buggy-version/src.pvz.Level.java", "BodyUseAPI": [], "Fixed commit": "fb2c218bfb624ac4a1c248e7e78940615bed9310", "Url": "https://api.github.com/repos/tmzhuang/pvz-reloaded", "Date": "2013-11-25T19:54:44Z"},
{"Line": "=>1523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["drUtil.getLocalSite().getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (localSiteState.isDROperationOngoing()) { com.emc.storageos.coordinator.client.service.impl.CoordinatorClientImpl.log.info(\"Control nodes' state UPDATING since DR operation ongoing: {}\", localSiteState); return ClusterInfo.ClusterState.UPDATING; }else if ((differentCurrents.isEmpty()) && (differentVersions.isEmpty())) { if (isDbSchemaVersionChanged()) { com.emc.storageos.coordinator.client.model.MigrationStatus status = getMigrationStatus(); if (status == null) { com.emc.storageos.coordinator.client.service.impl.CoordinatorClientImpl.log.info(\"Control nodes state is UPGRADING_PREP_DB \"); return ClusterInfo.ClusterState.UPGRADING_PREP_DB; } com.emc.storageos.coordinator.client.service.impl.CoordinatorClientImpl.log.info(\"Control nodes state is {}\", status); switch (status) { case RUNNING : return ClusterInfo.ClusterState.UPGRADING_CONVERT_DB; case FAILED : return ClusterInfo.ClusterState.UPGRADING_FAILED; case DONE : break; default : com.emc.storageos.coordinator.client.service.impl.CoordinatorClientImpl.log.error((\"The current db schema version doesn't match the target db schema version, \" + \"but the current migration status is {} \"), status); } } com.emc.storageos.coordinator.client.service.impl.CoordinatorClientImpl.log.info(\"Control nodes' state STABLE\"); return ClusterInfo.ClusterState.STABLE; }else if (differentCurrents.isEmpty()) { com.emc.storageos.coordinator.client.service.impl.CoordinatorClientImpl.log.info(\"Control nodes' state SYNCING: {}\", com.emc.storageos.services.util.Strings.repr(differentVersions)); return ClusterInfo.ClusterState.SYNCING; }else if (differentVersions.isEmpty()) { com.emc.storageos.coordinator.client.service.impl.CoordinatorClientImpl.log.info(\"Control nodes' state UPGRADING: {}\", com.emc.storageos.services.util.Strings.repr(differentCurrents)); return ClusterInfo.ClusterState.UPGRADING; }else { com.emc.storageos.coordinator.client.service.impl.CoordinatorClientImpl.log.error(\"Control nodes' in an UNKNOWN state. Target given: {} {}\", targetGiven, com.emc.storageos.services.util.Strings.repr(infos)); return ClusterInfo.ClusterState.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3731/buggy-version/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.service.impl.CoordinatorClientImpl.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,com.emc.storageos.coordinator.client.model.SiteState)"], "Fixed commit": "0e6bf7582e48985c62a15f002971ce9df5a3c265", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-03-07T15:55:29Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value == null) { serializer = classSerializerMap.get(null); }else { serializer = classSerializerMap.get(value.getClass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/532/buggy-version/src.main.org.mongodb.serialization.PrimitiveSerializers.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.util.Map<java.lang.Class, org.mongodb.serialization.Serializer>.get(java.lang.Class<? extends java.lang.Object>)"], "Fixed commit": "bb6afa09789639074539c60a7bb96d3165701383", "Url": "https://api.github.com/repos/jyemin/mongo-java-driver", "Date": "2012-12-12T16:29:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.Authentication.getPrincipal()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (princ instanceof com.colorado.denver.services.MyUserPrincipal) { com.colorado.denver.services.MyUserPrincipal myPrinc = ((com.colorado.denver.services.MyUserPrincipal) (princ)); return myPrinc.getUsername(); }else { com.colorado.denver.services.UserService.LOGGER.error((\"Wrong Principal is used to get User?!!!\" + (auth.toString()))); return princ.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3112/buggy-version/src.com.colorado.denver.services.UserService.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "385541dfef2a68decd5df5861679565c426bb366", "Url": "https://api.github.com/repos/yaumo/Denver", "Date": "2017-04-21T16:01:02Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mrs.opWidth) < 0) { mrs.opWidth = getOpWidth(bits); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8097/buggy-version/src.com.zms.zpc.execute.Instruction.java", "BodyUseAPI": [], "Fixed commit": "979feba3ca75b751de0c02599c8293ae80f6b9f5", "Url": "https://api.github.com/repos/zms351/ZPC", "Date": "2017-07-21T15:30:32Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gppmds.wikilegis.controller.DataDownloadController.connectionType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (connectionType < 2) { if ((((gppmds.wikilegis.view.RecyclerViewAdapterBill.segments.get(i).getType()) >= ITEM) && ((gppmds.wikilegis.view.RecyclerViewAdapterBill.segments.get(i).getType()) <= SUBSECAO)) || ((gppmds.wikilegis.view.RecyclerViewAdapterBill.segments.get(i).getType()) == TITULO)) { personViewHolder.cardView.setClickable(false); }else { personViewHolder.cardView.setClickable(true); } }else { personViewHolder.cardView.setClickable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1884/buggy-version/app.src.main.java.gppmds.wikilegis.view.RecyclerViewAdapterBill.java", "BodyUseAPI": [], "Fixed commit": "30933096b6618f4a2c9e9ceadf237cd6f7149eec", "Url": "https://api.github.com/repos/izacristina/2016.2-WikiLegis", "Date": "2016-11-25T18:07:49Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.palette_item_thumb)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(data.getImageUrl().equals(((java.lang.String) (thumb.getTag()))))) { thumb.setImageBitmap(null); thumb.setTag(data.getImageUrl()); new com.tzapps.tzpalette.ui.PaletteListFragment.PaletteThumbUpdateTask(mContext, thumb).execute(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3969/buggy-version/src.com.tzapps.tzpalette.ui.PaletteListFragment.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(<nulltype>)", "com.tzapps.tzpalette.data.PaletteData.getImageUrl()", "android.widget.ImageView.setTag(data.getImageUrl())", "com.tzapps.tzpalette.ui.PaletteListFragment.PaletteThumbUpdateTask.execute(com.tzapps.tzpalette.data.PaletteData)"], "Fixed commit": "6e64e205a670c4d3d9b23b06028429bfb9b9db30", "Url": "https://api.github.com/repos/TianziHou/tzPalette", "Date": "2013-10-06T15:57:39Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (line.equals(\"\")) { }else { throw new edu.ncu.oolab.NoSuchCommandException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3467/buggy-version/src.edu.ncu.oolab.CommandLineInterface.java", "BodyUseAPI": [], "Fixed commit": "bbc0f5b823cc825a1e581d60c0e9654017dae994", "Url": "https://api.github.com/repos/RyanYang/agile-2012-spring", "Date": "2012-05-06T07:10:11Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getWidth()) == 0) && ((getHeight()) == 0)) { setVisibility(View.VISIBLE); if ((mFab) != null) { mFab.setVisibility(View.INVISIBLE); } }else { mAnimating = true; mAnimator.show(); for (com.github.rubensousa.floatingtoolbar.FloatingToolbar.MorphListener morphListener : mMorphListeners) { morphListener.onMorphStart(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3976/buggy-version/floatingtoolbar.src.main.java.com.github.rubensousa.floatingtoolbar.FloatingToolbar.java", "BodyUseAPI": [], "Fixed commit": "5227a6f657e1aeb970bd466ff9ed70637850fcc2", "Url": "https://api.github.com/repos/rubensousa/FloatingToolbar", "Date": "2017-02-28T20:59:30Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String, java.util.List<com.taru.model.Transaction>>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(categoryName.equals(categoryToPrint))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7057/buggy-version/src.main.java.com.taru.ReaderHelper.java", "BodyUseAPI": [], "Fixed commit": "75facc78d6028731f44967b77e7ed8e976b5d6ac", "Url": "https://api.github.com/repos/shirbal/Server", "Date": "2015-10-16T00:04:31Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Calculate.moveRight()", "Calculate.moveLeft()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (right == left) { if ((java.lang.Math.random()) > 0.5) { java.lang.System.out.println(\"wow\"); score[0] = 1; }else { java.lang.System.out.println(\"sad\"); score[0] = 0; } }else if (afterScore == left) { java.lang.System.out.println(\"blah\"); score[0] = 0; }else { java.lang.System.out.println(\"weird\"); score[0] = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2079/buggy-version/src.Calculate.java", "BodyUseAPI": [], "Fixed commit": "d11a6107ea1cfb5184c875e872d2e9d5a7a5e807", "Url": "https://api.github.com/repos/42mileslong/2048er", "Date": "2014-04-30T14:39:41Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CloudFoundryProperties.isModuleProjectAccessible.testProperty(new org.eclipse.wst.server.core.IModule[]{ module }, cloudServer)) { pushAppButton.setEnabled(true); }else { pushAppButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8409/buggy-version/org.cloudfoundry.ide.eclipse.server.ui.src.org.cloudfoundry.ide.eclipse.server.ui.internal.editor.ApplicationDetailsPart.java", "BodyUseAPI": [], "Fixed commit": "d5785028ff72dee00db3f5c000b404e945465ecb", "Url": "https://api.github.com/repos/elsony/eclipse-integration-cloudfoundry", "Date": "2015-02-09T11:37:55Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.rbdc.sra.helperClasses.CRUDFlinger.user) == null) { org.rbdc.sra.helperClasses.CRUDFlinger.setUser(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/570/buggy-version/app.src.main.java.org.rbdc.sra.helperClasses.CRUDFlinger.java", "BodyUseAPI": [], "Fixed commit": "461077635d3c4b8429fc5d7a59916ab2b01dfa44", "Url": "https://api.github.com/repos/siricenter/SRA_Android", "Date": "2015-03-18T20:10:54Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(sessionId)) { errorMsg += \"Active session id detected \" + sessionId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6509/buggy-version/opencga-app.src.main.java.org.opencb.opencga.app.cli.main.executors.catalog.UserCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "12d86e306add95f4a8e4291fcff97e58e5c10072", "Url": "https://api.github.com/repos/opencb/opencga", "Date": "2017-05-18T13:10:46Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.example.musicnotes.NoteToScreen.findNote(myActivity.getCurrentMeasure().getChord(chordsPos), notePos)) != null) { com.example.musicnotes.NoteToScreen.deleteNote(myActivity.getCurrentMeasure().getChord(chordsPos), notePos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1812/buggy-version/src.Listeners.EditorTouchListener.java", "BodyUseAPI": ["myActivity.getCurrentMeasure().getChord(int)", "com.example.musicnotes.NoteToScreen.deleteNote(myActivity.getCurrentMeasure().getChord(chordsPos),int)", "com.example.musicnotes.EditorActivity.getCurrentMeasure()"], "Fixed commit": "8194c3a53d6f99184f1ba412121e8ab6e5deee80", "Url": "https://api.github.com/repos/CSE120PowerRangers/MusicNotes", "Date": "2014-04-23T17:35:03Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof org.fusesource.hawtbuf.UTF8Buffer) { value = value.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1657/buggy-version/activemq-client.src.main.java.org.apache.activemq.command.ActiveMQMessage.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "fcc773a05bc55b74d4d09cbd48dd66ea1a764e2d", "Url": "https://api.github.com/repos/apache/activemq", "Date": "2013-11-25T19:48:38Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((monitorID.getJobExecutionContext().getSecurityContext(monitorID.getHost().getType().getHostAddress())) instanceof org.apache.airavata.gfac.ssh.security.SSHSecurityContext) { org.apache.airavata.gfac.ssh.security.SSHSecurityContext sshSecurityContext = ((org.apache.airavata.gfac.ssh.security.SSHSecurityContext) (monitorID.getJobExecutionContext().getSecurityContext(monitorID.getHost().getType().getHostAddress()))); cluster = ((org.apache.airavata.gsi.ssh.impl.PBSCluster) (sshSecurityContext.getPbsCluster())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7470/buggy-version/modules.gfac.gfac-monitor.src.main.java.org.apache.airavata.gfac.monitor.impl.pull.qstat.ResourceConnection.java", "BodyUseAPI": [], "Fixed commit": "a594912ffb80a0ad8d285091f0854f7de0cd38bb", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2014-11-13T17:09:15Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((norma != 0) && showNorma) && (norma != 9999)) { if (norma > maxY1) { maxY1 = norma; } if ((norma < minY1) || (minY1 == (-1))) { minY1 = norma; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4149/buggy-version/app.src.main.java.maciej01.soft.niezbednikkreglarza.StatystykiActivity.java", "BodyUseAPI": [], "Fixed commit": "b650541c3558857732a7d709ba14de45f00da4b7", "Url": "https://api.github.com/repos/asdfMaciej/niezbednik-kreglarza", "Date": "2017-04-09T20:05:05Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(column.getOrigin().equals(AttributeOrigin.DELEGATE))) { org.gephi.data.attributes.api.AttributeType targetType = column.getType(); if (!(value.getClass().equals(targetType.getType()))) { try { value = targetType.parse(value.toString()); } catch (java.lang.Exception ex) { return new org.gephi.data.attributes.AttributeValueImpl(((org.gephi.data.attributes.AttributeColumnImpl) (column)), null); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6061/buggy-version/modules.AttributesImpl.src.main.java.org.gephi.data.attributes.AttributeFactoryImpl.java", "BodyUseAPI": ["org.gephi.data.attributes.api.AttributeColumn.getType()"], "Fixed commit": "dd10de286cb0b35cf8a7a25798e8e654f697a276", "Url": "https://api.github.com/repos/randsley/gephi", "Date": "2013-01-20T20:02:23Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((result != null) && ((result.getClass()) != (column.getType().getType()))) { java.lang.Object convertedValue = column.getType().parse(value.toString()); if (convertedValue != null) { result = convertedValue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6061/buggy-version/modules.AttributesImpl.src.main.java.org.gephi.data.attributes.AttributeValueImpl.java", "BodyUseAPI": ["column.getType().parse(java.lang.String)", "org.gephi.data.attributes.AttributeColumnImpl.getType()"], "Fixed commit": "dd10de286cb0b35cf8a7a25798e8e654f697a276", "Url": "https://api.github.com/repos/randsley/gephi", "Date": "2013-01-20T20:02:23Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.DateFormat.parse(java.lang.String)", "java.text.DateFormat.parse(java.lang.String)", "java.text.DateFormat.parse(java.lang.String)", "java.text.DateFormat.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((et.before(Bet)) && (st.equals(Bst))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8799/buggy-version/src.coreFunctions.Driver.java", "BodyUseAPI": [], "Fixed commit": "5112c69da2c00d4be9de91e595485369288ac211", "Url": "https://api.github.com/repos/Arizecr/COSC-2299-Part-A", "Date": "2017-03-30T07:39:15Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.DateFormat.parse(java.lang.String)", "java.text.DateFormat.parse(java.lang.String)", "java.text.DateFormat.parse(java.lang.String)", "java.text.DateFormat.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((et.equals(Bet)) && (st.equals(Bst))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8799/buggy-version/src.coreFunctions.Driver.java", "BodyUseAPI": [], "Fixed commit": "5112c69da2c00d4be9de91e595485369288ac211", "Url": "https://api.github.com/repos/Arizecr/COSC-2299-Part-A", "Date": "2017-03-30T07:39:15Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 1) { filewriter.reWriteToWorkingdayTXT(coreFunctions.Driver.hours.get(i), \"workdaysList.txt\"); count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8799/buggy-version/src.coreFunctions.Driver.java", "BodyUseAPI": [], "Fixed commit": "5112c69da2c00d4be9de91e595485369288ac211", "Url": "https://api.github.com/repos/Arizecr/COSC-2299-Part-A", "Date": "2017-03-30T07:39:15Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.DateFormat.parse(java.lang.String)", "java.text.DateFormat.parse(java.lang.String)", "java.text.DateFormat.parse(java.lang.String)", "java.text.DateFormat.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((et.equals(Bet)) && (st.after(Bst))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8799/buggy-version/src.coreFunctions.Driver.java", "BodyUseAPI": [], "Fixed commit": "5112c69da2c00d4be9de91e595485369288ac211", "Url": "https://api.github.com/repos/Arizecr/COSC-2299-Part-A", "Date": "2017-03-30T07:39:15Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSelectedLocaleResources) != null) { java.lang.String content = mTranslatedStringEditText.getText().toString(); mSelectedLocaleResources.setContent(mSelectedResourceId, content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5904/buggy-version/src.app.src.main.java.io.github.lonamiwebs.stringlate.activities.TranslateActivity.java", "BodyUseAPI": [], "Fixed commit": "16d4feba5535af778c38dea05625ed5636d54c10", "Url": "https://api.github.com/repos/LonamiWebs/Stringlate", "Date": "2016-12-16T15:05:15Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataReceived == 0) startTime = java.lang.System.currentTimeMillis();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6298/buggy-version/src.Receiver.java", "BodyUseAPI": [], "Fixed commit": "0fe4ec71da0ada55cae8ea27fb4544d066a1bda5", "Url": "https://api.github.com/repos/DvdMgr/HIPSTER", "Date": "2014-12-23T16:04:55Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((readTimeoutMillis) == 0) wait(); else if (remaining > 0) { wait(remaining); remaining = (start + (readTimeoutMillis)) - ((java.lang.System.nanoTime()) / 1000000); }else throw new java.net.SocketTimeoutException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2708/buggy-version/okhttp-protocols.src.main.java.com.squareup.okhttp.internal.spdy.SpdyStream.java", "BodyUseAPI": [], "Fixed commit": "becb3962e285c8836b26d44200b8320004e0ac4a", "Url": "https://api.github.com/repos/lingmingyb/okhttp", "Date": "2013-12-26T13:23:21Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((readTimeoutMillis) != 0) { start = (java.lang.System.nanoTime()) / 1000000; remaining = readTimeoutMillis; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2708/buggy-version/okhttp-protocols.src.main.java.com.squareup.okhttp.internal.spdy.SpdyStream.java", "BodyUseAPI": [], "Fixed commit": "becb3962e285c8836b26d44200b8320004e0ac4a", "Url": "https://api.github.com/repos/lingmingyb/okhttp", "Date": "2013-12-26T13:23:21Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((tokenformatter) == null) { tokenformatter = new com.gwtplatform.mvp.client.proxy.ParameterTokenFormatter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/53/buggy-version/modules.sgt.client.src.main.java.com.solmix.sgt.client.event.UrlClickEvent.java", "BodyUseAPI": [], "Fixed commit": "2edcc8dd64e943d108adfefae2a08758314f189e", "Url": "https://api.github.com/repos/solmix/solmix", "Date": "2013-06-18T16:20:17Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<de.thinkofapps.trackprojects.model.Task>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((task.getProject()) != null) { holder.txtHeader.setText(task.getProject().getName()); holder.txtFooter.setText(task.getName()); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2457/buggy-version/app.src.main.java.de.thinkofapps.trackprojects.view.TasksViewAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(task.getProject().getName())", "task.getProject().getName()", "de.thinkofapps.trackprojects.model.Task.getName()", "android.widget.TextView.setText(task.getName())", "de.thinkofapps.trackprojects.model.Task.getProject()"], "Fixed commit": "295b914a016d62b6f6678a94f1c7cfa9050b9944", "Url": "https://api.github.com/repos/thinkofapps/trackprojects", "Date": "2015-09-10T12:09:49Z"},
{"Line": "=>770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((file.length()) < (org.brandroid.utils.Preferences.Pref_Text_Max_Size)) && ((getExplorer()) != null)) getExplorer().editFile(file); else downloadFile(((org.brandroid.openmanager.data.OpenNetworkPath) (file)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2589/buggy-version/src.org.brandroid.openmanager.fragments.ContentFragment.java", "BodyUseAPI": ["getExplorer().editFile(org.brandroid.openmanager.data.OpenPath)"], "Fixed commit": "e92388405f439134527365a08a0fb6ea440f9ad2", "Url": "https://api.github.com/repos/BrandoCommando/OpenExplorer", "Date": "2012-08-17T00:18:25Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DatabaseConnector.currentLabPerson.Authorized) setupRelay();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9023/buggy-version/ToyotaRFID.app.src.main.java.com.example.nzar.toyotarfid.TimeActivity.java", "BodyUseAPI": [], "Fixed commit": "17ac293b501820fd3182684e279e76980338b981", "Url": "https://api.github.com/repos/justingreenedepd/rfidReaderProject", "Date": "2017-08-03T23:22:00Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.gebit.integrity.parameter.resolving.ParameterResolver.resolveSingleParameterValue(de.gebit.integrity.dsl.ValueOrEnumValueOrOperation,de.gebit.integrity.parameter.conversion.UnresolvableVariableHandling)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tempResult instanceof de.gebit.integrity.dsl.ValueOrEnumValueOrOperation) { return convertEncapsulatedValueToTargetType(aTargetType, aParameterizedType, ((de.gebit.integrity.dsl.ValueOrEnumValueOrOperation) (tempResult)), anUnresolvableVariableHandlingPolicy, someVisitedValues); }else { return convertSingleValueToTargetType(aTargetType, aParameterizedType, tempResult, anUnresolvableVariableHandlingPolicy, someVisitedValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8179/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": ["de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.convertSingleValueToTargetType(java.lang.Class<?>,java.lang.Class<?>,java.lang.Object,de.gebit.integrity.parameter.conversion.UnresolvableVariableHandling,java.util.Set<java.lang.Object>)"], "Fixed commit": "ffbad40e572ff2cc1b858883e0e3bf4ad51c8cfa", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-11-02T17:46:14Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mDateWidget.isCalendarShown()) || (!(mDateWidget.isDayHidden()))) { linearLayout.addView(mTimeWidget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3553/buggy-version/collect_app.src.main.java.org.odk.collect.android.widgets.DateTimeWidget.java", "BodyUseAPI": [], "Fixed commit": "7a32667c6a433fa29707b579760f713d74a54121", "Url": "https://api.github.com/repos/grzesiek2010/collect", "Date": "2017-04-12T16:12:13Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.awt.Desktop.isDesktopSupported()) { java.awt.Desktop.getDesktop().open(dstFile); log.info(\"Opened manual.\"); }else { log.severe((\"Error opening manual; open the file \" + (dstFile.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2403/buggy-version/src.com.chs.extemp.gui.ResearchGUI.java", "BodyUseAPI": [], "Fixed commit": "5c8c8605231165491a847f62b45158ed440ba1bb", "Url": "https://api.github.com/repos/Sircular/ExtempFiller", "Date": "2014-09-26T22:43:08Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((power) != (lastPower)) { lastPower = power; sendDataToAllPlayer(DataType.POWER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5926/buggy-version/src.main.java.vswe.production.tileentity.TileEntityTable.java", "BodyUseAPI": [], "Fixed commit": "ce5e244300c33250ead31d587cfd5adefeddb04f", "Url": "https://api.github.com/repos/Vswe/Production", "Date": "2014-08-03T18:31:30Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.mails.contains(mail))) { Client.FileManager.storeMail(mail, true); this.mails.add(mail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/192/buggy-version/src.Client.Client.java", "BodyUseAPI": ["Client.FileManager.storeMail(Client.Mail,boolean)", "java.util.List<Client.Mail>.add(Client.Mail)"], "Fixed commit": "19d0641daff0d0f28579a777df51773004dc28c2", "Url": "https://api.github.com/repos/NicolasDiab/IPC_SMTP_POP3", "Date": "2017-03-20T10:20:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inSelectAll && (!(isUseServerCursor()))) { clear(); setUseServerCursor(inSelectAll); }else { setUseServerCursor(inSelectAll); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5319/buggy-version/src.java.org.openedit.hittracker.HitTracker.java", "BodyUseAPI": ["org.openedit.hittracker.HitTracker<T>.setUseServerCursor(boolean)", "org.openedit.hittracker.HitTracker<T>.setUseServerCursor(boolean)"], "Fixed commit": "849d3844478e6fd09f49690f0ad488698085383b", "Url": "https://api.github.com/repos/entermedia-community/entermedia-core", "Date": "2017-12-06T16:15:50Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirstPage()) { dividedIndex = index; }else { dividedIndex = index % ((pageNumber) * (ITEM_SLOT_SIZE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/337/buggy-version/core.src.com.mygdx.stage.InventoryStage.java", "BodyUseAPI": [], "Fixed commit": "ce61399f448ee3108c5457e371ebe54767439c4d", "Url": "https://api.github.com/repos/CienProject2014/OneLevelHero", "Date": "2015-08-19T12:18:15Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (peekShown) { respondToTouch(view, event, position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4490/buggy-version/library.src.main.java.com.peekandpop.shalskar.peekandpop.PeekAndPop.java", "BodyUseAPI": [], "Fixed commit": "fac9f7d7d52c54cd027442a94ce80809a4733b2b", "Url": "https://api.github.com/repos/shalskar/PeekAndPop", "Date": "2016-01-29T03:02:11Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.block.state.IBlockState.getCollisionBoundingBox(net.minecraft.world.IBlockAccess,net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bb == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8044/buggy-version/src.main.java.zmaster587.advancedRocketry.util.SealableBlockHandler.java", "BodyUseAPI": [], "Fixed commit": "0f20ab255805f8279d86e287a29cac5c01888d4f", "Url": "https://api.github.com/repos/zmaster587/AdvancedRocketry", "Date": "2016-11-08T06:30:39Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pEdge instanceof ca.mcgill.cs.stg.jetuml.graph.ReturnEdge) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3025/buggy-version/src.ca.mcgill.cs.stg.jetuml.diagrams.SequenceDiagramGraph.java", "BodyUseAPI": [], "Fixed commit": "ee9d7043427c4d9f6c9a1ddf6ccf7d0094f9371f", "Url": "https://api.github.com/repos/prmr/JetUML", "Date": "2015-05-05T17:22:06Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endReached) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1016/buggy-version/src.main.java.parsii.tokenizer.Lookahead.java", "BodyUseAPI": [], "Fixed commit": "79f0d63b5907621bebff02a14c26ed325d3e5ff6", "Url": "https://api.github.com/repos/scireum/parsii", "Date": "2017-11-14T15:05:40Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.lang.Enum) { entity.setFieldValue(f.getKey(), java.lang.Enum.valueOf(((java.lang.Class<java.lang.Enum>) (e)), ((java.lang.String) (value)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6626/buggy-version/astyanax-thrift.src.main.java.com.netflix.astyanax.thrift.ThriftUtils.java", "BodyUseAPI": [], "Fixed commit": "52c311ca02cbcefea356a2f7dc88b7ef41757134", "Url": "https://api.github.com/repos/Netflix/astyanax", "Date": "2013-04-09T17:46:51Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.tajo.plan.util.LogicalRootNode.getChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sortNode.getSortKeys().length) != 1) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6331/buggy-version/tajo-plan.src.main.java.org.apache.tajo.plan.util.PlannerUtil.java", "BodyUseAPI": [], "Fixed commit": "edf6fc3db2004a51390848cad7063595e39fcdd4", "Url": "https://api.github.com/repos/tyotta/tajo", "Date": "2015-09-03T06:16:03Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fontFile) == null) { int font = arr.getInt(R.styleable.AdvancedTextView_font, (-1)); if ((font >= 0) && ((ayar.oktay.advancedtextview.Font.parse(font)) != null)) { this.fontFile = ayar.oktay.advancedtextview.Font.parse(font).getFileName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4286/buggy-version/src.main.java.ayar.oktay.advancedtextview.AdvancedTextView.java", "BodyUseAPI": [], "Fixed commit": "0f37324ff37ee2ca157003aeb1c6c441ce0766a9", "Url": "https://api.github.com/repos/oktayayr/advancedtextview", "Date": "2016-10-26T18:14:19Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(taxonName)) { extractTerms(taxonName, specimen); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5306/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.data.NodeFactory.java", "BodyUseAPI": ["org.eol.globi.data.NodeFactory.extractTerms(java.lang.String,org.eol.globi.domain.Specimen)"], "Fixed commit": "1f1923aff45a476149ab7f1f23019c2b3d0ff714", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2014-06-30T15:32:14Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(project.isDisposed())) { com.intellij.openapi.options.ShowSettingsUtil.getInstance().showSettingsDialog(project, nameToSelect); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6407/buggy-version/src.main.java.de.plushnikov.intellij.plugin.LombokPluginProjectValidatorComponent.java", "BodyUseAPI": ["com.intellij.openapi.options.ShowSettingsUtil.getInstance().showSettingsDialog(com.intellij.openapi.project.Project,java.lang.String)"], "Fixed commit": "df356846a2c535d5cefc6234265dca892ae4142a", "Url": "https://api.github.com/repos/mplushnikov/lombok-intellij-plugin", "Date": "2016-06-14T15:23:38Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xmlValue.isEmpty()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5145/buggy-version/src.plugins.adufour.vars.lang.Var.java", "BodyUseAPI": [], "Fixed commit": "98189d578e9ec4047b990648f3ef775853bb20a7", "Url": "https://api.github.com/repos/adufour/EzPlug", "Date": "2012-09-06T17:08:08Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((storage.getFileType(confFile)) == (net.schattenkind.androidLove.LoveStorage.FileType.FILE)) { loadFileFromSdCard(confFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4739/buggy-version/src.net.schattenkind.androidLove.LoveVM.java", "BodyUseAPI": ["net.schattenkind.androidLove.LoveVM.loadFileFromSdCard(java.lang.String)"], "Fixed commit": "512ba40fc62bb58ac91de292becfe1b1e71ecacc", "Url": "https://api.github.com/repos/hagish/love-android", "Date": "2011-11-11T23:18:14Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.thommil.libgdx.runtime.scene.layer.SpriteCacheLayer.renderer) != null) { com.thommil.libgdx.runtime.scene.layer.SpriteCacheLayer.renderer.dispose(); com.thommil.libgdx.runtime.scene.layer.SpriteCacheLayer.renderer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5516/buggy-version/core.src.com.thommil.libgdx.runtime.scene.layer.SpriteCacheLayer.java", "BodyUseAPI": [], "Fixed commit": "ac2463831e5ae9d83a900c4a480fcd7ecac0e620", "Url": "https://api.github.com/repos/Thommil/GameRuntime", "Date": "2016-02-19T00:37:17Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((convert.getSourcePosition().getValue()) instanceof java.lang.Iterable<?>) || (context.supports(therian.operation.Convert.to(java.lang.Iterable.class, convert.getSourcePosition()))))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2013/buggy-version/core.src.main.java.therian.operator.convert.DefaultToArrayConverter.java", "BodyUseAPI": [], "Fixed commit": "2cc390f5b808de507e4f8c0278987da08998d9d8", "Url": "https://api.github.com/repos/mbenson/therian", "Date": "2013-05-06T18:12:28Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 10) { if (!(linedUpAngle(5))) { gameState = 2; i++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8191/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.BlueShoot6.java", "BodyUseAPI": [], "Fixed commit": "64759e185e16a87d437536da85206ac298bed758", "Url": "https://api.github.com/repos/Team10464/ftc_app", "Date": "2017-01-30T21:18:38Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((JobSnapshot.getValue()) != null) { tempJob = JobSnapshot.getValue().toString().split(\";\")[2]; JobArrayList.add(tempJob); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5129/buggy-version/WeVo.app.src.main.java.com.example.deversity.wevo.ui.jobTab.java", "BodyUseAPI": ["JobSnapshot.getValue().toString().split(java.lang.String)", "com.google.firebase.database.DataSnapshot.getValue()", "JobSnapshot.getValue().toString()"], "Fixed commit": "c1ebc027400cb9eea7e03b1eae6ab7c98b7c78db", "Url": "https://api.github.com/repos/KamikidFu/NTU-CZ2006-Diversity", "Date": "2017-11-11T06:34:37Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sortBy == null) || (\"relevance\".equalsIgnoreCase(sortBy))) { reverse = !reverse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4864/buggy-version/webapp.src.main.java.uk.ac.ebi.arrayexpress.utils.saxon.search.Querier.java", "BodyUseAPI": [], "Fixed commit": "e8c775aef36d346305c589f0161f0178f88324f8", "Url": "https://api.github.com/repos/EBIBioStudies/FrontEndUI", "Date": "2015-07-21T11:40:52Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) java.lang.System.out.println(\"I got null in construction\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2087/buggy-version/src.Project.DocumentEventCapturer.java", "BodyUseAPI": [], "Fixed commit": "638e575e58ee728ac575316db53bd0626a3f82e8", "Url": "https://api.github.com/repos/simonpurup/dDist", "Date": "2017-04-27T11:46:21Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Project.EventMessage.getTextEvent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mte instanceof Project.TextInsertEvent) { if ((((Project.TextInsertEvent) (mte)).getText()) == null) { java.lang.System.out.println(\"Got null\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2087/buggy-version/src.Project.EventReplayer.java", "BodyUseAPI": [], "Fixed commit": "638e575e58ee728ac575316db53bd0626a3f82e8", "Url": "https://api.github.com/repos/simonpurup/dDist", "Date": "2017-04-27T11:46:21Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((webcam.getImage()) == null) { progress = ru.ifmo.android_2015.citycam.download.DownloadCamImageTask.Progress.Error; }else { progress = ru.ifmo.android_2015.citycam.download.DownloadCamImageTask.Progress.Done; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3612/buggy-version/app.src.main.java.ru.ifmo.android_2015.citycam.download.DownloadCamImageTask.java", "BodyUseAPI": [], "Fixed commit": "6c1bfdb16cb5a3b52ead9dcacdaf73cbf23df5da", "Url": "https://api.github.com/repos/novikd/homework2", "Date": "2015-10-29T18:08:46Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((camera) != null) { cameraPreview = new edu.oakland.textblock.CameraPreview(this, camera); android.widget.FrameLayout preview = ((android.widget.FrameLayout) (findViewById(R.id.camera_preview))); preview.addView(cameraPreview); }else { android.widget.TextView showCameraStatus = new android.widget.TextView(this); showCameraStatus.setText(\"Fail to access a camera.\\n OpenCamera() return null.\"); android.view.ViewGroup show = ((android.view.ViewGroup) (findViewById(R.id.camera_preview))); show.addView(showCameraStatus); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9113/buggy-version/app.src.main.java.edu.oakland.textblock.TakePhotoActivity.java", "BodyUseAPI": [], "Fixed commit": "3ed17d6dab6aa65cf4abec7cf29e62812db6d8b9", "Url": "https://api.github.com/repos/kthornt2/TextBlock", "Date": "2017-01-29T02:40:43Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((buffer.size()) == 0) res = ((A[]) (new java.lang.Object[0])); else res = ((A[]) (java.lang.reflect.Array.newInstance(buffer.get(0).getClass(), buffer.size())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/455/buggy-version/src.github.com.beenotung.javalib.Utils.java", "BodyUseAPI": ["A.getClass()", "java.lang.reflect.Array.newInstance(java.lang.Class<? extends java.lang.Object>,int)", "java.util.ArrayList<A>.get(int)", "java.util.ArrayList<A>.size()"], "Fixed commit": "72f0d7bddca659ff58f0761a96a8b12c180af045", "Url": "https://api.github.com/repos/beenotung/javalib", "Date": "2016-09-11T03:52:10Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.logger.isInfoEnabled()) { this.logger.info((((((\"Resource \" + (r.getFilename())) + \" parsed into schema \") + (schema.getNamespace())) + \".\") + (schema.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3292/buggy-version/spring-cloud-stream-schema.src.main.java.org.springframework.cloud.stream.schema.avro.AvroSchemaMessageConverter.java", "BodyUseAPI": ["this.logger.info((((((\"Resource \" + (r.getFilename())) + \" parsed into schema \") + (schema.getNamespace())) + \".\") + (schema.getName())))"], "Fixed commit": "5b3a875da2c40dc62cfa6137b005e425bff590a0", "Url": "https://api.github.com/repos/mbogoevici/spring-cloud-stream", "Date": "2016-07-28T16:29:36Z"},
{"Line": "=>1230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spot.numberLives) < 0) { state = WorldState.GAME_OVER; if (tornadoRunning) { specialItems.remove(spot.tornado); tornadoes.free(((br.ufpe.cin.dustdog.world.Tornado) (spot.tornado))); spot.tornado = null; if (br.ufpe.cin.dustdog.Settings.soundEnabled) Assets.tornadoMusic.stop(); tornadoRunning = false; } updateHighscores(); br.ufpe.cin.dustdog.Assets.playSound(Assets.gameOverScoreSound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6378/buggy-version/core.src.br.ufpe.cin.dustdog.world.World.java", "BodyUseAPI": ["com.badlogic.gdx.utils.Pool<br.ufpe.cin.dustdog.world.Tornado>.free(((br.ufpe.cin.dustdog.world.Tornado) (spot.tornado)))", "java.util.List<br.ufpe.cin.dustdog.world.SpecialItem>.remove(spot.tornado)"], "Fixed commit": "04c137d61da50e544e637b3fd729aff1fd3916d4", "Url": "https://api.github.com/repos/AlbertoTrindade/dustdog", "Date": "2015-02-21T16:25:29Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rabbitescape.engine.ChangeDescription.State.RABBIT_OUT_OF_BOUNDS) == (rabbit.state)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5252/buggy-version/rabbit-escape-engine.src.rabbitescape.engine.textworld.RabbitRenderer.java", "BodyUseAPI": [], "Fixed commit": "0f9c6ad10a89a6495d331381e3ee21573b24cae2", "Url": "https://api.github.com/repos/andybalaam/rabbit-escape", "Date": "2015-11-11T07:42:02Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text.length()) > 400) { text = text.substring(0, 400); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4779/buggy-version/EQTools.src.eqtools.Auctionator.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "184879151ef337e78b8e47806ea110d7fa885469", "Url": "https://api.github.com/repos/aaronze/SingorrEQTools", "Date": "2016-09-27T12:47:11Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CivAPI.plugin.getDatabase().find(net.croxis.plugins.civilmineation.CityComponent.class).where().eq(\"charter_x\", event.getClickedBlock().getX()).eq(\"charter_y\", ((event.getClickedBlock().getY()) + 1)).eq(\"charter_z\", event.getClickedBlock().getZ()).findUnique()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (city == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/745/buggy-version/src.main.java.net.croxis.plugins.civilmineation.SignInteractListener.java", "BodyUseAPI": [], "Fixed commit": "05b976a5e256258c07ab333e430109c70474a88a", "Url": "https://api.github.com/repos/croxis/Civilmineation", "Date": "2012-06-17T01:48:22Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((hlFields) != null) && (!(hlFields.isEmpty()))) { modifyHlFields(exactSearch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7731/buggy-version/src.main.java.sub.fwb.ParametersModifier.java", "BodyUseAPI": [], "Fixed commit": "aa95842d8391c843341fc3fcc8ac08723f372942", "Url": "https://api.github.com/repos/subugoe/fwb-solr-mods", "Date": "2016-10-14T10:11:17Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (editor != null) { oos = new java.io.ObjectOutputStream(new java.io.BufferedOutputStream(editor.newOutputStream(com.anupcowkur.reservoir.SimpleDiskCache.METADATA_IDX))); oos.writeObject(metadata); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8705/buggy-version/Library.src.main.java.com.anupcowkur.reservoir.SimpleDiskCache.java", "BodyUseAPI": ["DiskLruCache.Editor.newOutputStream(int)"], "Fixed commit": "a5334daf222c23016752fb8c8ff6e4aa0f8f903b", "Url": "https://api.github.com/repos/dacer/Reservoir", "Date": "2016-07-15T06:14:32Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.revolsys.io.xml.StaxUtils.skipToStartElement(in)) != (javax.xml.stream.XMLStreamConstants.START_ELEMENT)) { hasNext = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8859/buggy-version/com.revolsys.open.core.src.main.java.com.revolsys.io.xml.XmlMapIterator.java", "BodyUseAPI": [], "Fixed commit": "9dcf70b3295c6cbc22425c801ca57a3ca1bd81b4", "Url": "https://api.github.com/repos/revolsys/com.revolsys.open", "Date": "2011-12-13T01:05:25Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isConnected) { _alarmListener.onMessage(org.csstudio.alarm.service.internal.AlarmMessageDAL2Impl.newAlarmMessage(_pvAccess, new java.util.Date())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7557/buggy-version/applications.plugins.org.csstudio.alarm.service.src.org.csstudio.alarm.service.internal.AlarmConnectionDAL2Impl.java", "BodyUseAPI": [], "Fixed commit": "f4d7cbf75ba5e3e108d49a5a655e6bbc17cb54c7", "Url": "https://api.github.com/repos/Desy-extern/cs-studio", "Date": "2017-05-05T13:06:27Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((passedTime) > 1000) { stopRecording(); stopPlaying(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5765/buggy-version/app.src.main.java.org.unicef.rapidreg.childcase.AudioRecorderActivity.java", "BodyUseAPI": [], "Fixed commit": "a5429292d388e0886bc6ea308b96e7f3f0908eb7", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2016-06-28T06:47:29Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mListener.getPilot()) != null) { phone = mListener.getPilot().getPhone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5532/buggy-version/airmapsdk.src.main.java.com.airmap.airmapsdk.UI.Fragments.ReviewFlightFragment.java", "BodyUseAPI": ["com.airmap.airmapsdk.models.pilot.AirMapPilot.getPhone()", "com.airmap.airmapsdk.ui.fragments.ReviewFlightFragment.OnFragmentInteractionListener.getPilot()"], "Fixed commit": "e1a722ea5bba06a7472b51dceadcb5b9c17d035e", "Url": "https://api.github.com/repos/airmap/AirMapSDK-Android", "Date": "2017-01-24T06:47:07Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((toTemp.getHourOfDay()) == 0) && ((toTemp.getHourOfDay()) == 0)) { toTemp = new org.joda.time.LocalTime(23, 59); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4368/buggy-version/app.src.main.java.Data.User.java", "BodyUseAPI": [], "Fixed commit": "8b4eb989c8f160102db62758472d8527962f969b", "Url": "https://api.github.com/repos/kungocan/DiabetoLog", "Date": "2017-06-06T06:50:56Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((toTemp.getHourOfDay()) == 0) && ((toTemp.getHourOfDay()) == 0)) { toTemp = new org.joda.time.LocalTime(23, 59); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4368/buggy-version/app.src.main.java.Data.User.java", "BodyUseAPI": [], "Fixed commit": "8b4eb989c8f160102db62758472d8527962f969b", "Url": "https://api.github.com/repos/kungocan/DiabetoLog", "Date": "2017-06-06T06:50:56Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.devunit.fb_client.fragments.UploadFileFragment.getUploadFilePaths()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((uploadFiles.length) > 0) { mainActivity.getFbClient().uploadFile(getUploadFilePaths()); attachToUploader(); }else { android.widget.Toast.makeText(mainActivity.getApplicationContext(), \"No file(s) provided\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8918/buggy-version/app.src.main.java.eu.devunit.fb_client.fragments.UploadFileFragment.java", "BodyUseAPI": [], "Fixed commit": "3533ad886d131571a5e0aa7705fba3ce3bc5c4c1", "Url": "https://api.github.com/repos/sebastianrakel/fb-client-android", "Date": "2016-09-21T21:34:39Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(source.getQuadName().equals(target.getQuadName()))) { final polly.rx.core.orion.model.Quadrant quad = quadProvider.getQuadrant(target.getQuadName()); currentGroup = new polly.rx.core.orion.pathplanning.PathPlanner.Group(quad, options); this.groups.add(currentGroup); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1978/buggy-version/projects.de.skuzzle.polly.plugin.rx.src.polly.rx.core.orion.pathplanning.PathPlanner.java", "BodyUseAPI": [], "Fixed commit": "81cc93dd32edc3a93847366d149c3d005c40aaea", "Url": "https://api.github.com/repos/skuzzle/polly", "Date": "2014-03-23T18:39:51Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (item != null) { if (item instanceof java.lang.String) { writer.write(com.microsoft.telemetry.JsonHelper.convert(((java.lang.String) (item)))); }else if (item instanceof java.lang.Double) { writer.write(com.microsoft.telemetry.JsonHelper.convert(((java.lang.Double) (item)))); }else if (item instanceof java.lang.Integer) { writer.write(com.microsoft.telemetry.JsonHelper.convert(((java.lang.Integer) (item)))); }else if (item instanceof java.lang.Long) { writer.write(com.microsoft.telemetry.JsonHelper.convert(((java.lang.Long) (item)))); }else { throw new java.io.IOException((\"Cannot serialize: \" + (item.toString()))); } }else { writer.write(\"null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8400/buggy-version/SharedTelemetryContracts.src.main.java.com.microsoft.telemetry.JsonHelper.java", "BodyUseAPI": ["T.toString()"], "Fixed commit": "af54497b3bd40d0e926c0e5331e9d32634fa45bb", "Url": "https://api.github.com/repos/Microsoft/Telemetry-Client-for-Android", "Date": "2015-06-16T19:59:47Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((embeddedComposing) != null) || ((((mComposingTextPopup) != null) && (mComposingTextPopup.isShowing())) || ((mComposingTextView.getVisibility()) == (VISIBLE)))) { mComposingTextView.setVisibility(net.toload.main.hd.candidate.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1656/buggy-version/LimeStudio.app.src.main.java.net.toload.main.hd.candidate.CandidateView.java", "BodyUseAPI": ["android.widget.TextView.setVisibility(net.toload.main.hd.candidate.INVISIBLE)"], "Fixed commit": "5502e4d75f61fd6713510e00865c7d5f72035d4e", "Url": "https://api.github.com/repos/lime-ime/limeime", "Date": "2015-06-07T14:40:08Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ut.dph.dao.impl.transactionInDAOImpl.getTransactionTarget(summary.getbatchId(),summary.gettransactionInId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (targetDetails != null) { batchIdList.add(summary.getbatchId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5041/buggy-version/src.main.java.com.ut.dph.dao.impl.transactionInDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "964a2bda184461340a9dde564dbbb85161c842bd", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2016-05-16T14:10:54Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.FilterInputStream.read(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result != (-1)) { updateByteCount(result, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7869/buggy-version/AndroidApp.src.ca.psiphon.ploggy.DataTransferStats.java", "BodyUseAPI": ["ca.psiphon.ploggy.DataTransferStats.InputStreamWrapper.updateByteCount(int,boolean)"], "Fixed commit": "1694c4ede43df6c81cd2582e9025c6f025a9f879", "Url": "https://api.github.com/repos/rod-hynes/ploggy", "Date": "2014-04-10T18:10:53Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.FilterInputStream.read(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result != (-1)) { updateByteCount(result, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7869/buggy-version/AndroidApp.src.ca.psiphon.ploggy.DataTransferStats.java", "BodyUseAPI": ["ca.psiphon.ploggy.DataTransferStats.InputStreamWrapper.updateByteCount(int,boolean)"], "Fixed commit": "1694c4ede43df6c81cd2582e9025c6f025a9f879", "Url": "https://api.github.com/repos/rod-hynes/ploggy", "Date": "2014-04-10T18:10:53Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (freeWarOnTerror.Game.getTrack().hasTroops()) { availableOrigin = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6851/buggy-version/src.freeWarOnTerror.Players.Actions.ActionDeploy.java", "BodyUseAPI": [], "Fixed commit": "4ee520cf0ed160a9be912aef6ff81886fe122f50", "Url": "https://api.github.com/repos/wachsmuth/freeWarOnTerror", "Date": "2014-11-05T22:06:52Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((freeWarOnTerror.Game.getTrack().troopAmount()) < 15) { availableDestination = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6851/buggy-version/src.freeWarOnTerror.Players.Actions.ActionDeploy.java", "BodyUseAPI": [], "Fixed commit": "4ee520cf0ed160a9be912aef6ff81886fe122f50", "Url": "https://api.github.com/repos/wachsmuth/freeWarOnTerror", "Date": "2014-11-05T22:06:52Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((google_api_client) != null) && (google_api_client.isConnected())) { com.google.android.gms.games.achievement.Achievements achievements = com.google.android.gms.games.Games.Achievements; if ((Questions.CORRECT_ANSWERS) == (Questions.QUESTION_COUNT)) { achievements.unlock(google_api_client, \"CgkIl-nPp9wBEAIQAg\"); achievements.increment(google_api_client, \"CgkIl-nPp9wBEAIQAw\", 1); achievements.increment(google_api_client, \"CgkIl-nPp9wBEAIQBA\", 1); achievements.increment(google_api_client, \"CgkIl-nPp9wBEAIQBQ\", 1); achievements.increment(google_api_client, \"CgkIl-nPp9wBEAIQIg\", 1); achievements.increment(google_api_client, \"CgkIl-nPp9wBEAIQIw\", 1); achievements.increment(google_api_client, \"CgkIl-nPp9wBEAIQJA\", 1); achievements.increment(google_api_client, \"CgkIl-nPp9wBEAIQJQ\", 1); }else if ((Questions.INCORRECT_ANSWERS) == (Questions.QUESTION_COUNT)) { achievements.unlock(google_api_client, \"CgkIl-nPp9wBEAIQBg\"); achievements.increment(google_api_client, \"CgkIl-nPp9wBEAIQBw\", 1); achievements.increment(google_api_client, \"CgkIl-nPp9wBEAIQCA\", 1); }else if ((Questions.CORRECT_ANSWERS) == ((Questions.QUESTION_COUNT) / 2)) { achievements.unlock(google_api_client, \"CgkIl-nPp9wBEAIQJg\"); }else if ((Questions.INCORRECT_ANSWERS) == ((Questions.QUESTION_COUNT) / 2)) { achievements.unlock(google_api_client, \"CgkIl-nPp9wBEAIQJw\"); }else if ((Questions.SKIPPED_ANSWERS) == (Questions.QUESTION_COUNT)) { achievements.unlock(google_api_client, \"CgkIl-nPp9wBEAIQIQ\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5101/buggy-version/app.src.main.java.com.prembros.programming.quizapp.MainActivity.java", "BodyUseAPI": ["com.google.android.gms.games.achievement.Achievements.increment(com.prembros.programming.quizapp.MainActivity,java.lang.String,int)", "com.google.android.gms.games.achievement.Achievements.unlock(com.prembros.programming.quizapp.MainActivity,java.lang.String)", "com.google.android.gms.games.achievement.Achievements.increment(com.prembros.programming.quizapp.MainActivity,java.lang.String,int)", "com.google.android.gms.games.achievement.Achievements.increment(com.prembros.programming.quizapp.MainActivity,java.lang.String,int)", "com.google.android.gms.games.achievement.Achievements.unlock(com.prembros.programming.quizapp.MainActivity,java.lang.String)", "com.google.android.gms.games.achievement.Achievements.increment(com.prembros.programming.quizapp.MainActivity,java.lang.String,int)", "com.google.android.gms.games.achievement.Achievements.unlock(com.prembros.programming.quizapp.MainActivity,java.lang.String)", "com.google.android.gms.games.achievement.Achievements.increment(com.prembros.programming.quizapp.MainActivity,java.lang.String,int)", "com.google.android.gms.games.achievement.Achievements.increment(com.prembros.programming.quizapp.MainActivity,java.lang.String,int)", "com.google.android.gms.games.achievement.Achievements.increment(com.prembros.programming.quizapp.MainActivity,java.lang.String,int)", "com.google.android.gms.games.achievement.Achievements.unlock(com.prembros.programming.quizapp.MainActivity,java.lang.String)", "com.google.android.gms.games.achievement.Achievements.increment(com.prembros.programming.quizapp.MainActivity,java.lang.String,int)", "com.google.android.gms.games.achievement.Achievements.increment(com.prembros.programming.quizapp.MainActivity,java.lang.String,int)", "com.google.android.gms.games.achievement.Achievements.unlock(com.prembros.programming.quizapp.MainActivity,java.lang.String)"], "Fixed commit": "5ac4e933499473c7123c61d911ffbfd5d6b76ed9", "Url": "https://api.github.com/repos/premacck1/QuizApp", "Date": "2016-09-04T06:40:50Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (osgiInfFolder.exists()) { for (java.io.File file : com.diffplug.gradle.FileMisc.list(osgiInfFolder)) { if (file.getName().endsWith(PluginMetadataPlugin.DOT_XML)) { builder.append(((PluginMetadataPlugin.OSGI_INF) + (file.getName()))); builder.append(\",\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5738/buggy-version/gradle-plugin.src.com.diffplug.gradle.autosgi.PluginMetadataToManifestTask.java", "BodyUseAPI": ["com.diffplug.gradle.FileMisc.list(java.io.File)"], "Fixed commit": "20e4b0832a2ae36aac3a6689dc653118c4fbceeb", "Url": "https://api.github.com/repos/diffplug/autosgi", "Date": "2016-11-19T23:01:52Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.diffplug.gradle.autosgi.PluginMetadataTask.generate()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result.isEmpty()) { com.diffplug.gradle.FileMisc.forceDelete(osgiInfFolder); }else { com.diffplug.gradle.FileMisc.cleanDir(osgiInfFolder); for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : result.entrySet()) { java.nio.file.Files.write(osgiInfFolder.toPath().resolve(((entry.getKey()) + (PluginMetadataPlugin.DOT_XML))), entry.getValue().getBytes(java.nio.charset.StandardCharsets.UTF_8)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5738/buggy-version/gradle-plugin.src.com.diffplug.gradle.autosgi.PluginMetadataTask.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.entrySet()"], "Fixed commit": "20e4b0832a2ae36aac3a6689dc653118c4fbceeb", "Url": "https://api.github.com/repos/diffplug/autosgi", "Date": "2016-11-19T23:01:52Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((points == null) || (rects == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2741/buggy-version/src.main.java.org.datasyslab.geospark.spatialOperator.JoinQuery.java", "BodyUseAPI": [], "Fixed commit": "e3f06115cee1aade41b999cebe50dcf1933bf5c7", "Url": "https://api.github.com/repos/AjinxPatil/GeoSpark", "Date": "2016-11-11T17:28:30Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(list.isEmpty())) showDetails(curIndex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4684/buggy-version/app.src.main.java.com.dweb_x.movielist.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "d80a4748b7eb3aef8ae68ff7354357f4c21596d4", "Url": "https://api.github.com/repos/dweb-x/MovieList", "Date": "2015-03-05T01:14:48Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((healthList != null) && ((healthList.getShowapi_res_body()) != null)) && ((healthList.getShowapi_res_body().getPagebean().getContentlist()) != null)) { getView().getHealthListData(healthList.getShowapi_res_body().getPagebean().getContentlist()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5700/buggy-version/app.src.main.java.note.lym.org.noteproject.presenter.note.health.HelthListPresenter.java", "BodyUseAPI": ["healthList.getShowapi_res_body().getPagebean()", "getView().getHealthListData(healthList.getShowapi_res_body().getPagebean().getContentlist())", "healthList.getShowapi_res_body().getPagebean().getContentlist()", "note.lym.org.noteproject.model.bean.HealthList.getShowapi_res_body()"], "Fixed commit": "9e746afad61480db0561d8778d7a00a119cc704e", "Url": "https://api.github.com/repos/hyyaoming/NoteProject", "Date": "2017-06-07T13:12:42Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((email) == null) { edu.ctl.pinjobs.Handler.HandlerActivity hej = new edu.ctl.pinjobs.Handler.HandlerActivity(); hej.openDetailedAdView(context, androidAD, adDistance); }else if (email.equals(ad.getAdvertiser().getEmail())) { edu.ctl.pinjobs.Handler.UserListActivity usListAct = new edu.ctl.pinjobs.Handler.UserListActivity(); usListAct.openModifyAdView(context, androidAD, adDistance); }else { edu.ctl.pinjobs.Handler.HandlerActivity hej = new edu.ctl.pinjobs.Handler.HandlerActivity(); hej.openDetailedAdView(context, androidAD, adDistance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2562/buggy-version/Dat367_Grupp10.app.src.main.java.edu.ctl.pinjobs.Handler.ListView.java", "BodyUseAPI": [], "Fixed commit": "566878f859106900e63c38a1f4281ad9a54ebaae", "Url": "https://api.github.com/repos/sCarlman/oop-project", "Date": "2015-05-15T14:25:18Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.shirolang.values.Path.getSegmentAtHead()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (head.getKey().get().equals(getName())) { path.advanceHead(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4440/buggy-version/src.main.java.org.shirolang.base.SGraph.java", "BodyUseAPI": [], "Fixed commit": "79a52f0bddd2a6607772af4a6990ae0ef137d199", "Url": "https://api.github.com/repos/jeffreyguenther/shiro", "Date": "2015-09-01T00:25:22Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { tags.add(ExifInterface.TAG_SUBSEC_TIME_DIG); tags.add(ExifInterface.TAG_SUBSEC_TIME_ORIG); tags.add(ExifInterface.TAG_SUBSEC_TIME); tags.add(ExifInterface.TAG_DATETIME_DIGITIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/932/buggy-version/simplecropview.src.main.java.com.isseiaoki.simplecropview.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "573ee8dcf1e32595eba49372405277ba40b84033", "Url": "https://api.github.com/repos/igreenwood/SimpleCropView", "Date": "2017-07-30T13:23:59Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.lipreading.gui.LipReaderPanel.getPoints(edu.lipreading.gui.IplImage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (points != null) { recordedSample.getMatrix().add(points); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6753/buggy-version/lipreading-gui.src.main.java.edu.lipreading.gui.LipReaderPanel.java", "BodyUseAPI": ["recordedSample.getMatrix().add(java.util.List<java.lang.Integer>)"], "Fixed commit": "b82550dd21a7fd6f86277498758cdbb89610edd2", "Url": "https://api.github.com/repos/sagioto/LipReading", "Date": "2013-05-24T13:34:18Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stack.size()) != 0) { postfix[i] = stack.pop(); i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6048/buggy-version/src.pallavig.postfixconversion.PostfixConverterLib.java", "BodyUseAPI": ["java.util.Stack<java.lang.String>.pop()"], "Fixed commit": "36351b8f1477728f10cfd6edd83c47cfe86e0da5", "Url": "https://api.github.com/repos/pallavig/expression-evaluator", "Date": "2014-01-23T03:56:08Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.stage) < ((gestoreInput.getCategorie().get(categoria).getStages().size()) - 1)) { dopo = gestoreInput.getCategorie().get(categoria).getStages().get(((stage) + 1)).isBloccato(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6486/buggy-version/Emotqz.src.android.listeners.ButtonSolutionListener.java", "BodyUseAPI": ["gestoreInput.getCategorie().get(int)", "gestoreInput.getCategorie().get(categoria).getStages().get(int)", "gestoreInput.getCategorie().get(categoria).getStages()", "gestoreInput.getCategorie().get(categoria).getStages().get(((stage) + 1)).isBloccato()", "gestori.GestoreInput.getCategorie()"], "Fixed commit": "28a91d953de918517b6c1f86e5a34acd28460ec9", "Url": "https://api.github.com/repos/dadobdp/Emotiquizz", "Date": "2015-10-17T11:46:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.stage) < ((gestoreInput.getCategorie().get(categoria).getStages().size()) - 1)) { prima = gestoreInput.getCategorie().get(categoria).getStages().get(((stage) + 1)).isBloccato(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6486/buggy-version/Emotqz.src.android.listeners.ButtonSolutionListener.java", "BodyUseAPI": ["gestoreInput.getCategorie().get(int)", "gestori.GestoreInput.getCategorie()", "gestoreInput.getCategorie().get(categoria).getStages().get(((stage) + 1)).isBloccato()", "gestoreInput.getCategorie().get(categoria).getStages()", "gestoreInput.getCategorie().get(categoria).getStages().get(int)"], "Fixed commit": "28a91d953de918517b6c1f86e5a34acd28460ec9", "Url": "https://api.github.com/repos/dadobdp/Emotiquizz", "Date": "2015-10-17T11:46:40Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.requiresTech())) { if ((((com.esbjon.inventories.HabitableInventory) (inventory)).getTeammatesCount()) > 0) { com.esbjon.entities.Squad squad = com.esbjon.entities.Squad.unloadSquad(((com.esbjon.inventories.HabitableInventory) (inventory))); if (squad != null) { entityDispatcher.dispatchMessage(EntityMsg.MIN_DELAY, this, squad, EntityMsg.PACK); return true; } } }else if (((com.esbjon.inventories.HabitableInventory) (inventory)).hasTech()) { com.esbjon.entities.Squad squad = com.esbjon.entities.Squad.unloadSquad(((com.esbjon.inventories.HabitableInventory) (inventory))); if (squad != null) { entityDispatcher.dispatchMessage(EntityMsg.MIN_DELAY, this, squad, EntityMsg.PACK); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3269/buggy-version/core.src.com.esbjon.entities.Habitable.java", "BodyUseAPI": [], "Fixed commit": "162e73abbe9bc1a1b37290da8088cf7ae4defa63", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2017-04-10T23:47:11Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.remoting.Channel.current()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c == null) { return java.lang.Long.valueOf((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1308/buggy-version/core.src.main.java.hudson.slaves.SlaveComputer.java", "BodyUseAPI": [], "Fixed commit": "45d1385f3a744f6bc2748991a0374d347343132f", "Url": "https://api.github.com/repos/oleg-nenashev/jenkins", "Date": "2017-08-21T12:53:26Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.remoting.Channel.current()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1308/buggy-version/core.src.main.java.hudson.slaves.SlaveComputer.java", "BodyUseAPI": [], "Fixed commit": "45d1385f3a744f6bc2748991a0374d347343132f", "Url": "https://api.github.com/repos/oleg-nenashev/jenkins", "Date": "2017-08-21T12:53:26Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lt instanceof ws.prova.kernel2.ProvaList) && (rhs instanceof ws.prova.kernel2.ProvaList)) { ws.prova.kernel2.ProvaPredicate pred = new ws.prova.reference2.ProvaPredicateImpl(\"\", 1, kb); ws.prova.kernel2.ProvaLiteral lit = new ws.prova.reference2.ProvaLiteralImpl(pred, ((ws.prova.kernel2.ProvaList) (lt))); ws.prova.kernel2.ProvaRule clause = ws.prova.reference2.ProvaRuleImpl.createVirtualRule(1, lit, null); pred.addClause(clause); ws.prova.kernel2.ProvaLiteral newLiteral = new ws.prova.reference2.ProvaLiteralImpl(pred, ((ws.prova.kernel2.ProvaList) (rhs))); newLiterals.add(newLiteral); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7442/buggy-version/src.main.java.ws.prova.reference2.builtins.ProvaEqualsImpl.java", "BodyUseAPI": [], "Fixed commit": "b60391c461c1bb1e936729786a7f49cf79f6542e", "Url": "https://api.github.com/repos/maltoe/prova", "Date": "2012-04-03T19:39:28Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3992/buggy-version/src.sk.engine.physics.collision.ColliderLineCast.java", "BodyUseAPI": [], "Fixed commit": "60eec06e3ba6768a80d23c1852263e7cd41727ed", "Url": "https://api.github.com/repos/Time14/TIMEngine", "Date": "2014-12-01T11:47:05Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(\"compareTo\")) { if ((args[0]) instanceof janala.interpreters.IntegerObjectValue) { janala.interpreters.IntegerObjectValue i2 = ((janala.interpreters.IntegerObjectValue) (args[0])); janala.interpreters.IntValue ret = intValue.ISUB(i2.intValue); if ((ret.concrete) > 0) ret.concrete = 1; else if ((ret.concrete) == 0) ret.concrete = 0; else ret.concrete = -1; return ret; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2730/buggy-version/src.janala.interpreters.IntegerObjectValue.java", "BodyUseAPI": [], "Fixed commit": "67da3de40c21ca76e1d826abb7b4e0fdab7296ea", "Url": "https://api.github.com/repos/ksen007/janala2", "Date": "2012-07-02T22:53:07Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (requestParams.containsKey(\"assigneeLike\")) { request.setAssigneeLike(requestParams.get(\"assigneeLike\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2150/buggy-version/modules.activiti-rest.src.main.java.org.activiti.rest.service.api.runtime.task.TaskCollectionResource.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "org.activiti.rest.service.api.runtime.task.TaskQueryRequest.setAssigneeLike(java.lang.String)"], "Fixed commit": "47253b7edc10720a4f9d0c203eb225f14e7215a6", "Url": "https://api.github.com/repos/Activiti/Activiti", "Date": "2016-07-01T14:39:19Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.meetingroom.domainmodel.entities.Reservation>.get(reservation.getReservationNumber())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existingReservation != null) { existingReservation = com.meetingroom.domainmodel.factories.ReservationBuilder.fromExistingReservation(reservation).build(); this.reservations.put(existingReservation.getReservationNumber(), existingReservation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9236/buggy-version/MeetingRoom.src.main.java.com.meetingroom.domainmodel.repositories.ReservationRepositoryImpl.java", "BodyUseAPI": [], "Fixed commit": "47f39aaa0b807f744c1932cf402822e008faddf6", "Url": "https://api.github.com/repos/surajnimankar/Oxygen", "Date": "2017-10-05T10:48:11Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.meetingroom.domainmodel.entities.Reservation>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (existingReservation != null) { existingReservation = com.meetingroom.domainmodel.factories.ReservationBuilder.fromExistingReservation(existingReservation).withStatus(Status.STATUS_CANCELED).build(); this.reservations.put(existingReservation.getReservationNumber(), existingReservation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9236/buggy-version/MeetingRoom.src.main.java.com.meetingroom.domainmodel.repositories.ReservationRepositoryImpl.java", "BodyUseAPI": ["com.meetingroom.domainmodel.factories.ReservationBuilder.fromExistingReservation(existingReservation).withStatus(Status.STATUS_CANCELED).build()", "com.meetingroom.domainmodel.factories.ReservationBuilder.fromExistingReservation(com.meetingroom.domainmodel.entities.Reservation)", "com.meetingroom.domainmodel.factories.ReservationBuilder.fromExistingReservation(existingReservation).withStatus(Status.STATUS_CANCELED)"], "Fixed commit": "47f39aaa0b807f744c1932cf402822e008faddf6", "Url": "https://api.github.com/repos/surajnimankar/Oxygen", "Date": "2017-10-05T10:48:11Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.knime.core.data.DataTableSpec.findColumnIndex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (colIdx == (-1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7607/buggy-version/org.knime.knip.base.src.org.knime.knip.base.nodes.util.slicelooper.SliceIteratorUtils.java", "BodyUseAPI": [], "Fixed commit": "77fe98a3264eda8fbe2394f813b3345797e13333", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2014-07-08T11:18:06Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gf.groundClauses.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(gc.globalToLocalPredIndex.containsKey(i))) { java.lang.System.out.println(\"problem....\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8385/buggy-version/org.utd.cs.mln.inference.GibbsSampler_v2.java", "BodyUseAPI": [], "Fixed commit": "2417fe248e9a2db818d083986ed52aa921fc1c7b", "Url": "https://api.github.com/repos/nomanahmedsheikh/without", "Date": "2017-03-19T20:09:02Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((counts.get(key)) > maxCount) { maxCount = counts.get(key); maxRValue = key; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2812/buggy-version/src.main.java.com.joemort.KNearestNeighborsClassifier.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Double, java.lang.Integer>.get(java.lang.Double)"], "Fixed commit": "099fa20c2104554339816b730a3e7f41e0586891", "Url": "https://api.github.com/repos/joemort/cs450", "Date": "2015-04-29T21:17:21Z"},
{"Line": "=>1180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((loadBalancer.getUserPages()) != null) { loadBalancer.getUserPages().setErrorpage(errorFileName); }else { org.openstack.atlas.adapter.stm.UserPages userPages = new org.openstack.atlas.adapter.stm.UserPages(); userPages.setErrorpage(errorFileName); userPages.setLoadbalancer(loadBalancer); loadBalancer.setUserPages(userPages); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/999/buggy-version/adapter.zxtm-service.src.main.java.org.openstack.atlas.adapter.stm.StmAdapterImpl.java", "BodyUseAPI": ["org.openstack.atlas.adapter.stm.LoadBalancer.getUserPages()", "loadBalancer.getUserPages().setErrorpage(java.lang.String)", "org.openstack.atlas.adapter.stm.UserPages.setLoadbalancer(org.openstack.atlas.adapter.stm.LoadBalancer)", "org.openstack.atlas.adapter.stm.LoadBalancer.setUserPages(org.openstack.atlas.adapter.stm.UserPages)"], "Fixed commit": "ff7477374cd58d5e2110a3f961c2aa522f047347", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2013-07-24T19:17:18Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loadout.getNumCriticalSlotsFree()) < ((3 * 2) + (engine.getNumCriticalSlots(loadout.getUpgrades())))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2602/buggy-version/src.lisong_mechlab.model.loadout.LoadoutPart.java", "BodyUseAPI": [], "Fixed commit": "3b7a8b03c5a83495b7925e66626d8bad5fe60843", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-09-16T21:01:42Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (networksInsertionOnly) return remaining.copy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6256/buggy-version/src.main.java.com.elytradev.teckle.api.capabilities.impl.ItemNetworkAssistant.java", "BodyUseAPI": [], "Fixed commit": "56c3cc11581b395921702e3d129d7b8671d35b44", "Url": "https://api.github.com/repos/elytra/Teckle", "Date": "2017-10-31T07:41:23Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == (com.revolware.poll.question.TextQuestion.TYPE_NUMBER)) editText.setInputType(InputType.TYPE_CLASS_NUMBER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7257/buggy-version/app.src.main.java.com.revolware.poll.question.TextQuestion.java", "BodyUseAPI": [], "Fixed commit": "c2daf7a85cd30895ef2ad12694f37735a4094efc", "Url": "https://api.github.com/repos/peter-grajcar-13/PollApp", "Date": "2017-01-18T19:56:41Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (numberPo != 0) stateProB = expressionsToEvaluate.getProofState(numberPo);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1024/buggy-version/src.main.java.br.ufrn.forall.b2asm.bintegration.core.Control.java", "BodyUseAPI": ["br.ufrn.forall.b2asm.bintegration.pos.POs.getProofState(int)"], "Fixed commit": "67716c1c503247dfb3ce2cef65ffac15168afac9", "Url": "https://api.github.com/repos/ValerioMedeiros/BIntegration", "Date": "2013-06-06T10:14:55Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (incrementMaxConnections) setMaxConnections(((getMaxConnections()) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8018/buggy-version/core.src.main.java.com.google.bitcoin.core.PeerGroup.java", "BodyUseAPI": [], "Fixed commit": "3560d18ea292694267b4e87272f7025dfce48f7f", "Url": "https://api.github.com/repos/keystore00/monacoinj-new", "Date": "2012-07-23T14:42:21Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((indexedValues.length) % 2) != 0) throw new java.lang.IllegalArgumentException(\"Even number of index/value elements required\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8527/buggy-version/src.com.tr.rp.statement.IndexedAssign.java", "BodyUseAPI": [], "Fixed commit": "8725a60f7cd995475de6035627a9ebbd8c684be9", "Url": "https://api.github.com/repos/tjitze/RankPL", "Date": "2017-02-17T23:47:03Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_readyCheckIn.size()) <= (_message.PlayerIndex)) { _readyCheckIn.add(true); }else { _readyCheckIn.set(_message.PlayerIndex, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2635/buggy-version/aigilas.src.aigilas.net.Server.java", "BodyUseAPI": ["java.util.List<java.lang.Boolean>.add(boolean)", "java.util.List<java.lang.Boolean>.set(_message.PlayerIndex,boolean)"], "Fixed commit": "dd227ed943d9f7cdbd6ac565fe49ce8cad0c1912", "Url": "https://api.github.com/repos/XBigTK13X/Aigilas", "Date": "2013-04-06T21:35:03Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["newJob().withIdentity(name).ofType(cls).storeDurably().requestRecovery(false).usingJobData(datamap).build()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(sched.checkExists(job.getKey()))) { logger.info((\"failed to add job:\" + name)); throw new org.wiperdog.jobmanager.JobManagerException((\"failed to add job:\" + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3776/buggy-version/src.main.java.org.wiperdog.jobmanager.internal.JobFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "d52168f2f2869476fc64c5f4e9679d600ed7f0a5", "Url": "https://api.github.com/repos/dothihuong-luvina/org.wiperdog.jobmanager", "Date": "2014-04-03T08:26:41Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["newJob().withIdentity(name).ofType(cls).storeDurably().requestRecovery(false).usingJobData(datamap).build()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(sched.checkExists(job.getKey()))) { sched.addJob(job, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3776/buggy-version/src.main.java.org.wiperdog.jobmanager.internal.JobFacadeImpl.java", "BodyUseAPI": ["org.quartz.Scheduler.addJob(org.quartz.JobDetail,boolean)"], "Fixed commit": "d52168f2f2869476fc64c5f4e9679d600ed7f0a5", "Url": "https://api.github.com/repos/dothihuong-luvina/org.wiperdog.jobmanager", "Date": "2014-04-03T08:26:41Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(scheduler.isStarted())) { scheduler.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3776/buggy-version/src.main.java.org.wiperdog.jobmanager.internal.Activator.java", "BodyUseAPI": ["org.quartz.Scheduler.start()"], "Fixed commit": "d52168f2f2869476fc64c5f4e9679d600ed7f0a5", "Url": "https://api.github.com/repos/dothihuong-luvina/org.wiperdog.jobmanager", "Date": "2014-04-03T08:26:41Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (result != null) { character.setAvatar(edittextValue); imageAvatar.setImageBitmap(result); }else { android.widget.Toast.makeText(getActivity().getApplicationContext(), getActivity().getApplicationContext().getString(R.string.character_image_error), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8964/buggy-version/app.src.main.java.kei.mobilehero.fragments.AttributeFragment.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "0b56536fc35bf59e076a24ee5e46dd671ea8584f", "Url": "https://api.github.com/repos/dbuhon/MobileHero", "Date": "2015-07-19T17:16:57Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (result != null) { imageAvatar.setImageBitmap(result); }else { android.widget.Toast.makeText(getActivity().getApplicationContext(), getActivity().getApplicationContext().getString(R.string.character_image_error), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8964/buggy-version/app.src.main.java.kei.mobilehero.fragments.AttributeFragment.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "0b56536fc35bf59e076a24ee5e46dd671ea8584f", "Url": "https://api.github.com/repos/dbuhon/MobileHero", "Date": "2015-07-19T17:16:57Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newDay.isNone()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6241/buggy-version/src.me.ash.calendar.view.Interval.java", "BodyUseAPI": [], "Fixed commit": "b6d51d8e2d6652b4cc3fc1c762613d06bcf78fda", "Url": "https://api.github.com/repos/sergey-bash/range-calendar", "Date": "2012-05-20T17:58:07Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.PASystem.currentOS.indexOf(\"mac\")) >= 0) { javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName()); }else { for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) { if (\"Nimbus\".equals(info.getName())) { javax.swing.UIManager.setLookAndFeel(info.getClassName()); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5838/buggy-version/src.model.PASystem.java", "BodyUseAPI": [], "Fixed commit": "561be0d413c423d0567e84a46ca15b8119da58fb", "Url": "https://api.github.com/repos/kokhong20/SEPT-Assg", "Date": "2013-04-18T09:46:43Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(type.equals(ServerWorld.TEXT_TYPE))) { this.imageIndex = Imports.Images.getImageIndex(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3838/buggy-version/Source.Server.ServerObject.java", "BodyUseAPI": [], "Fixed commit": "40a9d24800720ba7f6628d04d1f80bc9d6397866", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2016-10-25T18:21:18Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\\\\\".equals(java.io.File.separator)) { pathSepForRegExp = \"\\\\\\\\\"; }else { pathSepForRegExp = java.io.File.separator; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/635/buggy-version/proctor-codegen.src.main.java.com.indeed.proctor.consumer.gen.FreeMarkerCodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "82da4e77857708251f84674e556b6318ff468894", "Url": "https://api.github.com/repos/indeedeng/proctor", "Date": "2014-06-09T15:36:35Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRefreshMenuItem) != null) { mRefreshMenuItem.setActionView(mProgressActionView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2968/buggy-version/app.src.main.java.cz.thepetas.carregisterrestclient.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "81d5415fa0ac2d4783641fb488b7e5b489aa7548", "Url": "https://api.github.com/repos/thepetas/CarRegisterRestClient", "Date": "2016-06-15T21:19:50Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.CALL_PHONE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5156/buggy-version/RuntimePermissions.app.src.main.java.sample.github.nisrulz.runtimepermissions.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4ba40e75fdf0479db3c4c978fd6a2795f0741414", "Url": "https://api.github.com/repos/way2jatin/android-examples", "Date": "2017-06-16T07:57:35Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != (this.cppClasses)) && ((this.cppClasses.size()) > 0)) { for (de.uniluebeck.sourcegen.c.CppClass c : this.cppClasses) { buffer.append(c.toString()); } buffer.append(Cpp.newline); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3632/buggy-version/codegeneration.src.main.java.de.uniluebeck.sourcegen.c.CppSourceFileImpl.java", "BodyUseAPI": [], "Fixed commit": "1fce89516f07285dde1744b31ff7f11a7750f7c2", "Url": "https://api.github.com/repos/nepa/fabric", "Date": "2011-12-12T18:51:26Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != (this.cppClasses)) && ((this.cppClasses.size()) > 0)) { for (de.uniluebeck.sourcegen.c.CppClass c : this.cppClasses) { toStringHelper(buffer, c, tabCount); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3632/buggy-version/codegeneration.src.main.java.de.uniluebeck.sourcegen.c.CppSourceFileImpl.java", "BodyUseAPI": [], "Fixed commit": "1fce89516f07285dde1744b31ff7f11a7750f7c2", "Url": "https://api.github.com/repos/nepa/fabric", "Date": "2011-12-12T18:51:26Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.doridian.yiffbukkit.chatcomponent.RedisManager.jedisPool) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4547/buggy-version/src.main.java.de.doridian.yiffbukkit.chatcomponent.RedisManager.java", "BodyUseAPI": [], "Fixed commit": "81516f726196a917af2ed8838203ae70eeabe7fc", "Url": "https://api.github.com/repos/YiffBukkit/YiffBukkitChatComponent", "Date": "2014-05-18T12:34:11Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8607/buggy-version/molgenis-charts.src.main.java.org.molgenis.charts.highcharts.convert.HighchartSeriesUtil.java", "BodyUseAPI": [], "Fixed commit": "5af0d01bbfb321dc9b82256c88fa133afee5b128", "Url": "https://api.github.com/repos/molgenis/molgenis", "Date": "2014-11-12T14:59:55Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8607/buggy-version/molgenis-charts.src.main.java.org.molgenis.charts.highcharts.convert.HighchartSeriesUtil.java", "BodyUseAPI": [], "Fixed commit": "5af0d01bbfb321dc9b82256c88fa133afee5b128", "Url": "https://api.github.com/repos/molgenis/molgenis", "Date": "2014-11-12T14:59:55Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dict.refCount) > 1) { wyjc.runtime.Util.incRefs(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/611/buggy-version/src.wyjc.runtime.Dictionary.java", "BodyUseAPI": [], "Fixed commit": "06c0ec2d1f11aa067c6e9688075fd9726977da00", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-11-01T06:13:20Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.refCount) > 1) { wyjc.runtime.Util.incRefs(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/611/buggy-version/src.wyjc.runtime.List.java", "BodyUseAPI": [], "Fixed commit": "06c0ec2d1f11aa067c6e9688075fd9726977da00", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-11-01T06:13:20Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.jabref.JabRefPreferences.getInstance().getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS_REBIND_CA)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rebindCA) { CAPos = size; size++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/284/buggy-version/src.main.java.org.xnap.commons.gui.shortcut.EmacsKeyBindings.java", "BodyUseAPI": [], "Fixed commit": "1f03543e4f9cf65d96b00cac8d133bd208d64ca5", "Url": "https://api.github.com/repos/JabRef/jabref", "Date": "2015-07-17T19:13:46Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.jabref.JabRefPreferences.getInstance().getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS_REBIND_CA)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rebindCA) { keybindings[CAPos] = org.xnap.commons.gui.shortcut.EmacsKeyBindings.EMACS_KEY_BINDING_C_A; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/284/buggy-version/src.main.java.org.xnap.commons.gui.shortcut.EmacsKeyBindings.java", "BodyUseAPI": [], "Fixed commit": "1f03543e4f9cf65d96b00cac8d133bd208d64ca5", "Url": "https://api.github.com/repos/JabRef/jabref", "Date": "2015-07-17T19:13:46Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.jabref.JabRefPreferences.getInstance().getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS_REBIND_CF)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rebindCF) { CFPos = size; size++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/284/buggy-version/src.main.java.org.xnap.commons.gui.shortcut.EmacsKeyBindings.java", "BodyUseAPI": [], "Fixed commit": "1f03543e4f9cf65d96b00cac8d133bd208d64ca5", "Url": "https://api.github.com/repos/JabRef/jabref", "Date": "2015-07-17T19:13:46Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.jabref.JabRefPreferences.getInstance().getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS_REBIND_CF)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rebindCF) { keybindings[CFPos] = org.xnap.commons.gui.shortcut.EmacsKeyBindings.EMACS_KEY_BINDING_C_F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/284/buggy-version/src.main.java.org.xnap.commons.gui.shortcut.EmacsKeyBindings.java", "BodyUseAPI": [], "Fixed commit": "1f03543e4f9cf65d96b00cac8d133bd208d64ca5", "Url": "https://api.github.com/repos/JabRef/jabref", "Date": "2015-07-17T19:13:46Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mActivityMain.mOperator.getUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (parent != null) mViewName.setText(parent.mLabel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3911/buggy-version/app.src.main.java.com.kidsdynamic.swing.androidswingapp.FragmentProfileMain.java", "BodyUseAPI": ["android.widget.TextView.setText(parent.mLabel)"], "Fixed commit": "ddacef6e3c9c1a32849b569d6ee125d9d3d2eac2", "Url": "https://api.github.com/repos/kidsdynamic/AndroidSwingApp", "Date": "2017-03-11T20:12:41Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((x >= 0) && (y >= 0)) && (x <= ((grid.getGridRows()) - 1))) && (y <= ((grid.getGridCols()) - 1))) { dist = (java.lang.Math.abs((row - x))) + (java.lang.Math.abs((col - y))); if (dist <= 10) { grid.getField((row - (row - x)), (col - (col - y))).setIntencity(dist); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9064/buggy-version/Swarm_Sim.src.neuralfire.core.Fire.java", "BodyUseAPI": ["java.lang.Math.abs(int)", "neuralfire.core.Grid.getField(int,int)", "java.lang.Math.abs(int)", "grid.getField((row - (row - x)), (col - (col - y))).setIntencity(int)"], "Fixed commit": "618399e4864f037cf2e468944fe241ada203145a", "Url": "https://api.github.com/repos/RomanovX/NeuralFire", "Date": "2015-05-06T14:30:42Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Connections.getConnection().getPeerConnection(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((peer.getID()) != senderID) peer.getOutgoing().send((((((((((((((SUCCESSDELETE) + (REGEX)) + netID) + (REGEX)) + netPORT) + (REGEX)) + (peer.getID())) + (REGEX)) + (peer.getPort())) + (REGEX)) + (fr.getFileName())) + (REGEX)) + (fr.getID())), java.net.InetAddress.getLocalHost(), senderPORT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3179/buggy-version/src.PeerProtocol.java", "BodyUseAPI": ["PeerConnection.getOutgoing()", "peer.getOutgoing().send((((((((((((((SUCCESSDELETE) + (REGEX)) + netID) + (REGEX)) + netPORT) + (REGEX)) + (peer.getID())) + (REGEX)) + (peer.getPort())) + (REGEX)) + (fr.getFileName())) + (REGEX)) + (fr.getID())),java.net.InetAddress,int)", "PeerConnection.getID()", "PeerConnection.getPort()"], "Fixed commit": "d71f39def47dcff108c194565761032f31cacdcd", "Url": "https://api.github.com/repos/rottenapple619/cmsc140lab3", "Date": "2016-09-26T13:22:38Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (htmlBytes == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/644/buggy-version/articleextractor.src.main.java.com.newsdistill.articleextractor.ContentExtractor.java", "BodyUseAPI": [], "Fixed commit": "e0948609015a9a83332a8c39f9df5a473dc2a540", "Url": "https://api.github.com/repos/sridhar-newsdistill/boiler-pipe", "Date": "2015-12-21T10:44:27Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deaths) >= 1) { this.kdr = (kills) / (deaths); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6236/buggy-version/src.main.java.com.applenick.iStats.stats.StatPlayer.java", "BodyUseAPI": [], "Fixed commit": "ca739c4c6673427512c1e85063a89403bfaec587", "Url": "https://api.github.com/repos/applenick/iStats", "Date": "2015-11-16T06:08:41Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resetFlag) { resetLevel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5668/buggy-version/core.src.edu.ritigm330.Level.java", "BodyUseAPI": [], "Fixed commit": "e411540cc967273f16970e3ac9229cb65118d669", "Url": "https://api.github.com/repos/Vrox/TileTemple", "Date": "2016-11-07T05:24:42Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (us.myles.ViaVersion.api.ViaVersion.getInstance().isPorted(e.getPlayer())) sendDelayedArmorUpdate(e.getPlayer());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4940/buggy-version/src.main.java.us.myles.ViaVersion.armor.ArmorListener.java", "BodyUseAPI": ["us.myles.ViaVersion.armor.ArmorListener.sendDelayedArmorUpdate(e.getPlayer())", "org.bukkit.event.player.PlayerRespawnEvent.getPlayer()"], "Fixed commit": "78ab7c840ad7647d38f7a372b3994fb5731fa7e1", "Url": "https://api.github.com/repos/Matsv/ViaVersion", "Date": "2016-03-13T15:48:07Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (us.myles.ViaVersion.api.ViaVersion.getInstance().isPorted(e.getPlayer())) us.myles.ViaVersion.armor.ArmorListener.sendArmorUpdate(e.getPlayer());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4940/buggy-version/src.main.java.us.myles.ViaVersion.armor.ArmorListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerChangedWorldEvent.getPlayer()", "us.myles.ViaVersion.armor.ArmorListener.sendArmorUpdate(e.getPlayer())"], "Fixed commit": "78ab7c840ad7647d38f7a372b3994fb5731fa7e1", "Url": "https://api.github.com/repos/Matsv/ViaVersion", "Date": "2016-03-13T15:48:07Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((processor.getModel().getUrl()) == null) { processor.getModel().setUrl(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2724/buggy-version/phresco-pom.src.main.java.com.phresco.pom.util.SiteConfigurator.java", "BodyUseAPI": ["com.phresco.pom.util.PomProcessor.getModel()", "processor.getModel().setUrl(java.lang.String)"], "Fixed commit": "ffeba275c223d5e079482cc3b56dc128a722822e", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-07-16T14:04:50Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInitialState()) { loadPanel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8498/buggy-version/MuseeDesOndes.app.src.main.java.com.example.nspace.museedesondes.utility.PoiPanelManager.java", "BodyUseAPI": [], "Fixed commit": "aa31e0c6ca5abe0ed666c0ab909b5f65b2df1b51", "Url": "https://api.github.com/repos/mv740/390-E-Wok", "Date": "2016-03-24T00:01:13Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)", "models.TicTacToe.getBoard()", "java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((newBoard[x][y]) == ' ') { newBoard[x][y] = this.player; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8451/buggy-version/src.models.AI.java", "BodyUseAPI": [], "Fixed commit": "3871e906cb4db97f12b3dcd40e9ebad86d1df782", "Url": "https://api.github.com/repos/Iniedergeval-Cool/tictactoe", "Date": "2017-04-04T11:20:29Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.samrj.devil.math.Vector3f.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (angle == 0.0F) return new com.samrj.devil.math.Quat4f();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9031/buggy-version/src.com.samrj.devil.math.Quat4f.java", "BodyUseAPI": [], "Fixed commit": "42d92df5796ea290008431e6318108f2d056d74f", "Url": "https://api.github.com/repos/SmashMaster/DevilUtil", "Date": "2014-09-25T08:56:41Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.sharesdk.onekeyshare.theme.classic.EditPage.getBitmapRes(cn.sharesdk.onekeyshare.theme.classic.EditPage,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (resId > 0) { llTitle.setBackgroundResource(resId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3551/buggy-version/Android_Java_Demo.src.cn.sharesdk.onekeyshare.theme.classic.EditPage.java", "BodyUseAPI": ["cn.sharesdk.framework.TitleLayout.setBackgroundResource(int)"], "Fixed commit": "9bc36f07cb9878b22bfe4c98fed8921e1fef2675", "Url": "https://api.github.com/repos/MobClub/New-Unity-For-ShareSDK", "Date": "2016-01-19T08:29:47Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["targetDerivation.getElement().getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (caseType instanceof edu.cmu.cs.sasylf.ast.Judgment) { if ((targetDerivation) instanceof edu.cmu.cs.sasylf.ast.ClauseAssumption) { edu.cmu.cs.sasylf.util.ErrorHandler.report(\"Cannot perform case analysis on a constructed judgment\", targetDerivation); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5023/buggy-version/src.edu.cmu.cs.sasylf.ast.DerivationByAnalysis.java", "BodyUseAPI": [], "Fixed commit": "59715530e77815222af35d13504e84e9e7a3a3c1", "Url": "https://api.github.com/repos/boyland/sasylf", "Date": "2016-11-16T14:27:25Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((papInput) < 1) && ((papInput) > 0)) { pap = 1 - (papInput); }else if (((papInput) < 100) && ((papInput) > 1)) { pap = (100 - (papInput)) / 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7773/buggy-version/src.com.github.Comrod.LoLCalculator.Calculator.java", "BodyUseAPI": [], "Fixed commit": "8a72adca0153bd32e2e7de21d2ac8b6eba035b1c", "Url": "https://api.github.com/repos/Comrod/LoL-Calculator", "Date": "2014-11-15T18:14:30Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r == null) return jobs;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6372/buggy-version/src.main.java.com.ooyala.jenkins.plugins.pipelineaggregatorview.PipelineAggregator.java", "BodyUseAPI": [], "Fixed commit": "ae2ee21f3ba5d65ccc0018360ab4516149c75c5d", "Url": "https://api.github.com/repos/jenkinsci/pipeline-aggregator-view-plugin", "Date": "2017-04-27T10:03:29Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.isFile()) { attributes.setSize(vault.toCleartextSize(attributes.getSize())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8421/buggy-version/cryptomator.src.main.java.ch.cyberduck.core.cryptomator.features.CryptoAttributesFeature.java", "BodyUseAPI": [], "Fixed commit": "26c888468d0f001e6c54a3b408e8e4aa894c001c", "Url": "https://api.github.com/repos/iterate-ch/cyberduck", "Date": "2017-11-22T21:55:49Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (MainActivity.selectedStock.get(resourceID)) { MainActivity.selectedStock.put(resourceID, false); }else { MainActivity.selectedStock.put(resourceID, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9180/buggy-version/app.src.main.java.helpers.StockControls.java", "BodyUseAPI": ["MainActivity.selectedStock.put(int,boolean)", "MainActivity.selectedStock.put(int,boolean)"], "Fixed commit": "bb335a3a38d81bf54e0bf9c4c4495760e748cb12", "Url": "https://api.github.com/repos/john-espina/XBurger", "Date": "2017-11-13T21:10:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (daysLeft == 1) dayORdays = \" day\"; else dayORdays = \" days\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8806/buggy-version/src.com.bryanmarty.greenbutton.GreenButtonBudgetActivity.java", "BodyUseAPI": [], "Fixed commit": "5adf2b1a3d1856c32eab5b8cbd5ca6ff8b4affa3", "Url": "https://api.github.com/repos/bxm156/GreenButtonProject", "Date": "2012-09-29T22:04:00Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s.trim().isEmpty()) { java.lang.System.err.println(\"Empty query.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1305/buggy-version/abduction.src.main.java.uk.co.mtford.jalp.JalpInterpreter.java", "BodyUseAPI": [], "Fixed commit": "88782828078bd0805669514506316dc5882a0ad7", "Url": "https://api.github.com/repos/mtford90/jalp-abduction", "Date": "2012-06-25T13:14:54Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yuniz.jarvisai.MainActivity.getJSONfromURL(java.lang.String,java.util.List<org.apache.http.NameValuePair>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (json == null) { android.widget.Toast.makeText(getApplicationContext(), \"You need internet connection to continue.\", Toast.LENGTH_LONG).show(); }else { tts.speak(json.getString(\"botsay\"), TextToSpeech.QUEUE_FLUSH, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5000/buggy-version/src.com.yuniz.jarvisai.MainActivity.java", "BodyUseAPI": ["android.speech.tts.TextToSpeech.speak(json.getString(\"botsay\"),TextToSpeech.QUEUE_FLUSH,<nulltype>)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "b5f6dd392080866f791bd3373c7890efad1a29a9", "Url": "https://api.github.com/repos/yunizcom/JAICB", "Date": "2013-07-27T17:16:48Z"},
{"Line": "=>1405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { isJustCallNext = data.getBooleanExtra(MemberConstant.ANAMNESIS_JUST_CALL_NEXT, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7502/buggy-version/App.src.main.java.com.mdground.yizhida.activity.appointment.PatientAppointmentActivity.java", "BodyUseAPI": ["android.content.Intent.getBooleanExtra(MemberConstant.ANAMNESIS_JUST_CALL_NEXT,boolean)"], "Fixed commit": "0f276dbc7afa07cf55b5fddd7a999cc3e5601238", "Url": "https://api.github.com/repos/Bread-Yang/Ex_AndroidStudio", "Date": "2017-06-19T00:52:50Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bill.getControlCode().trim().equals(\"\")) { info += \" \"; }else { info += bill.getControlCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4153/buggy-version/src.com.upb.taxbilling.view.ExportBill.java", "BodyUseAPI": ["com.upb.taxbilling.model.data.Bill.getControlCode()"], "Fixed commit": "3ae475cb6c10887af302b8957c761352bf2f95be", "Url": "https://api.github.com/repos/francomontiel/TaxBilling", "Date": "2014-06-27T04:01:24Z"},
{"Line": "=>744", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channelsToProcess.size()) > 1) spim.process.fusion.deconvolution.EfficientBayesianBased.defaultSamePSFForAllChannels = gd.getNextBoolean();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4147/buggy-version/src.main.java.spim.process.fusion.deconvolution.EfficientBayesianBased.java", "BodyUseAPI": [], "Fixed commit": "0207baa42edc0f55f6e816e44de8e18557e206a8", "Url": "https://api.github.com/repos/nicost/SPIM_Registration", "Date": "2015-04-18T20:39:43Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spim.fiji.spimdata.SpimData2.getAllIlluminationsSorted(spim.process.fusion.deconvolution.EfficientBayesianBased,spim.process.fusion.deconvolution.EfficientBayesianBased)", "spim.fiji.spimdata.SpimData2.getAllAnglesSorted(spim.process.fusion.deconvolution.EfficientBayesianBased,spim.process.fusion.deconvolution.EfficientBayesianBased)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((anglesToProcess.size()) * (illumsToProcess.size())) > 1) spim.process.fusion.deconvolution.EfficientBayesianBased.defaultSamePSFForAllAnglesIllums = gd.getNextBoolean();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4147/buggy-version/src.main.java.spim.process.fusion.deconvolution.EfficientBayesianBased.java", "BodyUseAPI": [], "Fixed commit": "0207baa42edc0f55f6e816e44de8e18557e206a8", "Url": "https://api.github.com/repos/nicost/SPIM_Registration", "Date": "2015-04-18T20:39:43Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { android.net.Uri imgUri = data.getData(); android.graphics.Bitmap myBitmap = null; try { myBitmap = MediaStore.Images.Media.getBitmap(this.getContentResolver(), imgUri); } catch (java.io.IOException e) { e.printStackTrace(); } java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream(); myBitmap.compress(Bitmap.CompressFormat.PNG, 100, bos); myBitmap.compress(Bitmap.CompressFormat.PNG, 100, bos); byte[] imgByte = bos.toByteArray(); this.image = android.util.Base64.encodeToString(imgByte, Base64.DEFAULT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2163/buggy-version/AroundMe.app.src.main.java.com.example.zuoyangding.aroundme.Activity.group_chat.java", "BodyUseAPI": ["android.content.Intent.getData()"], "Fixed commit": "aef17f15ad47f821784bb80b12c78b41ba74391e", "Url": "https://api.github.com/repos/ZUOYANGDING/cs307", "Date": "2017-04-24T13:39:42Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (context != null) { if (context instanceof java.lang.Iterable) { java.util.Iterator iterator = ((java.lang.Iterable) (context)).iterator(); while (iterator.hasNext()) list.add(iterator.next()); }else if (context.getClass().isArray()) { java.lang.Object[] objects = ((java.lang.Object[]) (context)); for (java.lang.Object obj : objects) list.add(obj); }else list.add(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6771/buggy-version/jtwig-core.src.main.java.com.lyncode.jtwig.tree.content.ForExpression.java", "BodyUseAPI": [], "Fixed commit": "8f194442cd4a0e8ca457556ca18ae107890de61e", "Url": "https://api.github.com/repos/lyncode/jtwig", "Date": "2013-12-22T02:28:15Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rstudio.studio.client.workbench.views.source.editors.text.ace.AceMouseEventNative.getNativeEvent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((evt.getButton()) != (com.google.gwt.dom.client.NativeEvent.BUTTON_LEFT)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7707/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.AceEditorWidget.java", "BodyUseAPI": [], "Fixed commit": "1bdd8dc5f2240917bd87427a8833b600f28d202f", "Url": "https://api.github.com/repos/jar1karp/rstudio", "Date": "2013-10-31T21:00:32Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rstudio.studio.client.workbench.views.source.editors.text.ace.AceMouseEventNative.getNativeEvent()", "com.google.gwt.user.client.Element.as(arg.getNativeEvent().getEventTarget())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((evt.getClientX()) < ((targetElement.getAbsoluteLeft()) + ((targetElement.getClientWidth()) / 2))) { toggleBreakpointAtPosition(arg.getDocumentPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7707/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.AceEditorWidget.java", "BodyUseAPI": [], "Fixed commit": "1bdd8dc5f2240917bd87427a8833b600f28d202f", "Url": "https://api.github.com/repos/jar1karp/rstudio", "Date": "2013-10-31T21:00:32Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pow.frontend.window.StatusWindow.getGameState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(gs.player.canSee(a.loc))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2214/buggy-version/src.main.java.pow.frontend.window.StatusWindow.java", "BodyUseAPI": [], "Fixed commit": "a24dd386b2d0bb49b42a9a209a59c9ec275ddf61", "Url": "https://api.github.com/repos/jonathanacross/pow", "Date": "2016-12-28T07:44:06Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dep > 0) this.saldo += dep;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7714/buggy-version/src.Q_1.Contas.java", "BodyUseAPI": [], "Fixed commit": "f89216fc39459db3c5aa4bc732a8d357986fba4e", "Url": "https://api.github.com/repos/cleversonahum/Exercicio_2", "Date": "2016-01-28T19:38:03Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (currentSegment != null) { currentSegment.removeDetection(contour); if ((currentSegment.getDetectionList().size()) == 0) { trackGroup.removeTrackSegment(currentSegment); currentSegment = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7331/buggy-version/src.plugins.adufour.activecontours.ReSampler.java", "BodyUseAPI": ["plugins.fab.trackmanager.TrackSegment.removeDetection(plugins.adufour.activecontours.ActiveContour)", "currentSegment.getDetectionList().size()", "plugins.fab.trackmanager.TrackGroup.removeTrackSegment(plugins.fab.trackmanager.TrackSegment)", "plugins.fab.trackmanager.TrackSegment.getDetectionList()"], "Fixed commit": "c1feb3cfe7e2fc4542770516128ecd48e504c36a", "Url": "https://api.github.com/repos/adufour/Active-Contours", "Date": "2013-07-24T12:49:23Z"},
{"Line": "=>1136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (items.contains(treeItem_Duplicates[0])) { org.nschmidt.ldparteditor.logger.NLogger.debug(getClass(), \"+Quick fix all duplicates.\"); items.remove(treeItem_Duplicates[0]); for (org.nschmidt.ldparteditor.widgets.TreeItem sort : treeItem_Duplicates[0].getItems()) { if (!(items.contains(sort))) items.add(sort); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/394/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.java", "BodyUseAPI": ["treeItem_Duplicates[0].getItems()", "java.util.HashSet<org.nschmidt.ldparteditor.widgets.TreeItem>.remove(treeItem_Duplicates[0])", "java.util.HashSet<org.nschmidt.ldparteditor.widgets.TreeItem>.contains(org.nschmidt.ldparteditor.widgets.TreeItem)", "java.util.HashSet<org.nschmidt.ldparteditor.widgets.TreeItem>.add(org.nschmidt.ldparteditor.widgets.TreeItem)"], "Fixed commit": "5be3edb38c3344fa0ffc1eea2d7e28e640f3ef1c", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-08-17T21:39:15Z"},
{"Line": "=>1182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sort.getText(2).startsWith(\"[E01]\")) { if (!(sorts.contains(sort.getText(2)))) sorts.add(sort.getText(2)); }else { if (!(sorts.contains(sort.getText(0)))) sorts.add(sort.getText(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/394/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.widgets.TreeItem.getText(int)", "java.util.HashSet<java.lang.String>.contains(sort.getText(0))", "java.util.HashSet<java.lang.String>.contains(sort.getText(2))", "java.util.HashSet<java.lang.String>.add(sort.getText(0))", "java.util.HashSet<java.lang.String>.add(sort.getText(2))", "org.nschmidt.ldparteditor.widgets.TreeItem.getText(int)", "org.nschmidt.ldparteditor.widgets.TreeItem.getText(int)", "org.nschmidt.ldparteditor.widgets.TreeItem.getText(int)"], "Fixed commit": "5be3edb38c3344fa0ffc1eea2d7e28e640f3ef1c", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-08-17T21:39:15Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCapabilities()) == null) { capabilities = new java.lang.String[]{ }; }else { capabilities = getCapabilities().split(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8797/buggy-version/src.main.java.jp.haya10.jenkins.seleneserunnerplugin.SeleneseRunnerBuilder.java", "BodyUseAPI": [], "Fixed commit": "8f10f531dda8de492d39cddc36a791cd2f09f5ea", "Url": "https://api.github.com/repos/hayato1980/seleneserunner-java-plugin", "Date": "2014-02-09T15:40:26Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isEmpty(capability))) { opt.set(DriverOption.DEFINE, capability); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8797/buggy-version/src.main.java.jp.haya10.jenkins.seleneserunnerplugin.SeleneseRunnerBuilder.java", "BodyUseAPI": ["jp.vmi.selenium.webdriver.DriverOptions.set(DriverOption.DEFINE,java.lang.String)"], "Fixed commit": "8f10f531dda8de492d39cddc36a791cd2f09f5ea", "Url": "https://api.github.com/repos/hayato1980/seleneserunner-java-plugin", "Date": "2014-02-09T15:40:26Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Player.PlayerID.toString()", "ms.getMatch().getTeams()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (teams.get(\"Team0\").contains(currentUserId)) { winner = ms.getWinnerIndex(); }else { winner = ((ms.getWinnerIndex()) + 1) % 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8205/buggy-version/JassServer.src.main.java.stats.UserStats.java", "BodyUseAPI": [], "Fixed commit": "3f0b82a3ff113ecb6e27fd5956ac1f60d94306be", "Url": "https://api.github.com/repos/vincenzobaz/JassServer", "Date": "2016-12-23T13:05:36Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (value == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8578/buggy-version/ss-module-ner.src.main.java.eu.openminted.uc.socialsciences.ner.helper.util.MyIobEncoder.java", "BodyUseAPI": [], "Fixed commit": "1a2080a2b926272770c45ded1c5b04a10022cd99", "Url": "https://api.github.com/repos/openminted/uc-tdm-socialsciences", "Date": "2017-05-17T10:46:41Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((namedEntity.getValue()) == null) { eu.openminted.uc.socialsciences.ner.eval.PerformanceMeasure.logger.warn(java.lang.String.format(\"found a named entity with null value at (begin, end)=(%d, %d)! Will skip this annotation...\", namedEntity.getBegin(), namedEntity.getEnd())); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8578/buggy-version/ss-module-ner.src.main.java.eu.openminted.uc.socialsciences.ner.eval.PerformanceMeasure.java", "BodyUseAPI": ["webanno.custom.NamedEntity.getEnd()", "webanno.custom.NamedEntity.getBegin()", "java.lang.String.format(java.lang.String,namedEntity.getBegin(),namedEntity.getEnd())", "org.apache.log4j.Logger.warn(java.lang.String)"], "Fixed commit": "1a2080a2b926272770c45ded1c5b04a10022cd99", "Url": "https://api.github.com/repos/openminted/uc-tdm-socialsciences", "Date": "2017-05-17T10:46:41Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentPredictionCategories.contains(category)) java.lang.System.out.printf(\"\\t-\\tAlpha for category %s: %f %n\", category, alpha.calculateCategoryAgreement(category)); else java.lang.System.out.printf(\"\\t-\\tCategory %s doesn\\'t exist in prediction data! %n\", category);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8578/buggy-version/ss-module-ner.src.main.java.eu.openminted.uc.socialsciences.ner.eval.PerformanceMeasure.java", "BodyUseAPI": ["org.dkpro.statistics.agreement.unitizing.KrippendorffAlphaUnitizingAgreement.calculateCategoryAgreement(java.lang.String)", "java.io.PrintStream.printf(java.lang.String,java.lang.String)", "java.io.PrintStream.printf(java.lang.String,java.lang.String,alpha.calculateCategoryAgreement(category))"], "Fixed commit": "1a2080a2b926272770c45ded1c5b04a10022cd99", "Url": "https://api.github.com/repos/openminted/uc-tdm-socialsciences", "Date": "2017-05-17T10:46:41Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.PendingIntent.getBroadcast(android.content.Context,int,android.content.Intent,PendingIntent.FLAG_UPDATE_CURRENT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((pendingIntent == null) || ((task.getReminder()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3623/buggy-version/src.de.azapps.mirakel.reminders.ReminderAlarm.java", "BodyUseAPI": [], "Fixed commit": "f24acbccc1bd66bbb52f448a5d70d16a7e94fc93", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-08-03T16:11:41Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((datatype) == null) { return df.getOWLLiteral(literalForm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2473/buggy-version/fixers.src.main.java.org.semanticweb.owlapitools.builders.BuilderLiteral.java", "BodyUseAPI": [], "Fixed commit": "51372bd975ad71f3649a73b7127627d6ee0b8beb", "Url": "https://api.github.com/repos/owlcs/owlapi", "Date": "2014-09-15T18:18:03Z"},
{"Line": "=>1871", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ecocean.media.MediaAsset.safeURL(org.ecocean.Shepherd,javax.servlet.http.HttpServletRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((u == null) || ((u.toString().indexOf(\"halfpage\")) < 0)) u = ma.webURL();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2122/buggy-version/src.main.java.org.ecocean.MarkedIndividual.java", "BodyUseAPI": [], "Fixed commit": "d40ec1a91e70e9ae5e6cd23a1c37f3b269e07210", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2016-09-28T21:45:19Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cx2x.xcodeml.helper.XnodeUtil.findParentFunction(claw.getPragma())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fctDef == null) { throw new cx2x.xcodeml.exception.IllegalTransformationException((\"Cannot apply reshape clause.\" + \"Parent function definition not found.\"), claw.getPragma().getLineNo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8624/buggy-version/omni-cx2x.src.cx2x.translator.language.helper.TransformationHelper.java", "BodyUseAPI": [], "Fixed commit": "55bb1e931a67ed3f1e628ca003c06a89a7e184a3", "Url": "https://api.github.com/repos/claw-project/claw-compiler", "Date": "2016-06-16T09:02:37Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.okbqa.tripletempeh.graph.Graph.getForward()", "java.util.Map<java.lang.Integer, java.lang.Integer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (forward.containsKey(projvar)) { projvar = forward.get(projvar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4195/buggy-version/src.main.java.org.okbqa.tripletempeh.transformer.rules.RuleEngine.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Integer>.get(int)"], "Fixed commit": "f7046cab9a70981eb85136a0b1801a153281fe29", "Url": "https://api.github.com/repos/okbqa/templator", "Date": "2015-02-16T15:16:42Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "org.okbqa.tripletempeh.graph.Graph.getForward()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (forward.containsKey(projvar)) { projvar = forward.get(projvar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4195/buggy-version/src.main.java.org.okbqa.tripletempeh.transformer.rules.RuleEngine.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Integer>.get(int)"], "Fixed commit": "f7046cab9a70981eb85136a0b1801a153281fe29", "Url": "https://api.github.com/repos/okbqa/templator", "Date": "2015-02-16T15:16:42Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((-(fromTempX)) < ((holder.buttonContainer.getWidth()) / 2)) { rollback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2842/buggy-version/app.src.main.java.cbgm.de.listapi.listener.SwipeListener.java", "BodyUseAPI": [], "Fixed commit": "ac10a1341d5a737d5c9648cf1744138e777cc5a7", "Url": "https://api.github.com/repos/cbgm/ListAPI", "Date": "2017-07-19T13:38:50Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page.getUsername().equals(\"admin@uwm.edu\")) _resp.getWriter().println(\"<input class='delete-section' type='submit' value='Delete Section' />\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8919/buggy-version/Project361.src.edu.uwm.cs361.EditSectionServlet.java", "BodyUseAPI": [], "Fixed commit": "7f55f71cea2e4c23d103ab230059db9ac6f86264", "Url": "https://api.github.com/repos/ovid-nis/Project361", "Date": "2014-12-07T21:25:45Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page.getUsername().equals(\"admin@uwm.edu\")) http += \"<input class='view-delete-staff' name='delete' type='submit' value='Delete' />\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8919/buggy-version/Project361.src.edu.uwm.cs361.ViewStaffServlet.java", "BodyUseAPI": [], "Fixed commit": "7f55f71cea2e4c23d103ab230059db9ac6f86264", "Url": "https://api.github.com/repos/ovid-nis/Project361", "Date": "2014-12-07T21:25:45Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.eclipse.gef.mvc.fx.parts.IResizableContentPart.getVisual()) instanceof javafx.scene.layout.Region) { ((javafx.scene.layout.Region) (org.eclipse.gef.mvc.fx.parts.IResizableContentPart.getVisual())).setPrefSize(totalSize.width, totalSize.height); ((javafx.scene.layout.Region) (org.eclipse.gef.mvc.fx.parts.IResizableContentPart.getVisual())).autosize(); }else { org.eclipse.gef.mvc.fx.parts.IResizableContentPart.getVisual().resize(totalSize.width, totalSize.height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3569/buggy-version/org.eclipse.gef.mvc.fx.src.org.eclipse.gef.mvc.fx.parts.IResizableContentPart.java", "BodyUseAPI": [], "Fixed commit": "59c1bc76213ea9226bc3052a749e74bf74427237", "Url": "https://api.github.com/repos/eclipse/gef", "Date": "2017-02-27T18:05:37Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intent.getAction()) == \"CLICKtoCLOSE\") { android.util.Log.d(PACKAGE_NAME, (\"ServiceCreditTicker : \" + (intent.getAction()))); switch (intent.getAction()) { case \"CLICKtoCLOSE\" : requestTOdisconnect(); break; default : break; } return super.onStartCommand(intent, flags, startId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9122/buggy-version/app.src.main.java.com.huza.carrot_and_stick.ServiceCreditTicker.java", "BodyUseAPI": ["android.app.Service.onStartCommand(android.content.Intent,int,int)", "android.util.Log.d(java.lang.String,(\"ServiceCreditTicker : \" + (intent.getAction())))", "android.content.Intent.getAction()", "android.content.Intent.getAction()"], "Fixed commit": "8246bcbb9186de3942e1c60a4e51b34494b67eed", "Url": "https://api.github.com/repos/robinhur/Carrot_and_Stick", "Date": "2017-01-12T18:54:41Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<Player>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (desRoute.ownerID.contains(curPlayer.id)) { javax.swing.JOptionPane.showMessageDialog(null, \"You already own that route!\", \"Alert!\", javax.swing.JOptionPane.INFORMATION_MESSAGE); return success; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8931/buggy-version/GameBoard.java", "BodyUseAPI": [], "Fixed commit": "7d7696ed0ad6189741ce413ea24e92fe57b051a6", "Url": "https://api.github.com/repos/SeanWalsh95/Ticket-To-Ride", "Date": "2016-05-01T18:35:28Z"},
{"Line": "=>2559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInit) { addInterceptorToAllWrappers(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6569/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereFramework.java", "BodyUseAPI": [], "Fixed commit": "baf3b049038d6184f9bed784960a4740ed2fc8b3", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2015-04-21T20:46:00Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((finderMethod.getParameterTypes().length) != 1) { throw org.jboss.as.cmp.CmpMessages.MESSAGES.illegalNumberOfArgumentsForFindByPrimaryKey(finderMethod.getParameterTypes().length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4207/buggy-version/cmp.src.main.java.org.jboss.as.cmp.component.interceptors.CmpEntityBeanHomeFinderInterceptorFactory.java", "BodyUseAPI": ["org.jboss.as.cmp.CmpMessages.MESSAGES.illegalNumberOfArgumentsForFindByPrimaryKey(int)", "java.lang.reflect.Method.getParameterTypes()"], "Fixed commit": "30dd9596bb0a7ced0f79def6fd5de4fbd83d4b98", "Url": "https://api.github.com/repos/wfink/jboss-as", "Date": "2013-01-14T18:05:20Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cache.containsKey(key)) { final org.jboss.as.ejb3.component.entity.entitycache.ReferenceCountingEntityCache.CacheEntry cacheEntry = cache.get(key); return !(cacheEntry.instance.isRemoved()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4207/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.component.entity.entitycache.ReferenceCountingEntityCache.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentMap<java.lang.Object, org.jboss.as.ejb3.component.entity.entitycache.ReferenceCountingEntityCache.CacheEntry>.get(java.lang.Object)"], "Fixed commit": "30dd9596bb0a7ced0f79def6fd5de4fbd83d4b98", "Url": "https://api.github.com/repos/wfink/jboss-as", "Date": "2013-01-14T18:05:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isTransactionActive())) || (!(cache.containsKey(key)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4207/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.component.entity.entitycache.TransactionLocalEntityCache.java", "BodyUseAPI": [], "Fixed commit": "30dd9596bb0a7ced0f79def6fd5de4fbd83d4b98", "Url": "https://api.github.com/repos/wfink/jboss-as", "Date": "2013-01-14T18:05:20Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adminService.getNumPendingCompleteTransactions()) > 0) { throw new java.lang.IllegalStateException(\"There are still pending complete transactions\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5697/buggy-version/agent-parent.it-harness.src.main.java.org.glowroot.agent.it.harness.impl.JavaagentContainer.java", "BodyUseAPI": [], "Fixed commit": "a0c0e44d0db1aa23ea2ac4835c5bc72654dc090e", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2015-10-11T19:51:56Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adminService.getNumPendingCompleteTransactions()) > 0) { throw new java.lang.IllegalStateException(\"There are still pending complete transactions\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5697/buggy-version/agent-parent.it-harness.src.main.java.org.glowroot.agent.it.harness.impl.LocalContainer.java", "BodyUseAPI": [], "Fixed commit": "a0c0e44d0db1aa23ea2ac4835c5bc72654dc090e", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2015-10-11T19:51:56Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((presentEnemies.size()) >= indicatedMob) { int x = AdventureGame.myXCoord; int y = AdventureGame.myYCoord; java.util.ArrayList<Mob> enemiesOnTargetTile = AdventureGame.bigMap[x][y].mobs; Mob theRightTarget = enemiesOnTargetTile.get(indicatedMob); result = Adventurer.attack(AdventureGame.bigMap[AdventureGame.myXCoord][AdventureGame.myYCoord].mobs, theRightTarget, Adventurer.damage); result = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8984/buggy-version/src.AdventureGame.java", "BodyUseAPI": ["java.util.ArrayList<Mob>.get(int)"], "Fixed commit": "f124d7f49ff5fcfb6642d6e439c0510f05d3cf41", "Url": "https://api.github.com/repos/WillHicks/Project_1", "Date": "2014-06-27T19:15:15Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MainPackage.Ship.CollisionEventWithShip()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (collisionShipDied) { deadShips.add(collisionShip); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1822/buggy-version/OmegaCentauri.src.MainPackage.OmegaCentauri.java", "BodyUseAPI": [], "Fixed commit": "2a67b325a4d92cc0f12f79f265bd8948f6209b9c", "Url": "https://api.github.com/repos/codeNinja77/Omega-Centauri", "Date": "2014-08-20T01:41:55Z"},
{"Line": "=>1918", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.wso2.carbon.registry.core.pagination.PaginationContext.getInstance()) != null) { paginationSizeAtt = org.wso2.carbon.registry.core.pagination.PaginationContext.getInstance().getLength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/580/buggy-version/components.governance.org.wso2.carbon.governance.api.src.main.java.org.wso2.carbon.governance.api.util.GovernanceUtils.java", "BodyUseAPI": [], "Fixed commit": "a7a9765e4c4b9ac58983aeed8cafa5df8e7f6376", "Url": "https://api.github.com/repos/cnapagoda/carbon-governance", "Date": "2016-05-26T06:40:16Z"},
{"Line": "=>1945", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((paginationSizeAtt != 0) && ((org.wso2.carbon.registry.core.pagination.PaginationContext.getInstance()) != null)) { int paginationSizePros = org.wso2.carbon.registry.core.pagination.PaginationContext.getInstance().getLength(); org.wso2.carbon.registry.core.pagination.PaginationContext.getInstance().setLength((paginationSizeAtt + paginationSizePros)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/580/buggy-version/components.governance.org.wso2.carbon.governance.api.src.main.java.org.wso2.carbon.governance.api.util.GovernanceUtils.java", "BodyUseAPI": ["org.wso2.carbon.registry.core.pagination.PaginationContext.getInstance().setLength(int)"], "Fixed commit": "a7a9765e4c4b9ac58983aeed8cafa5df8e7f6376", "Url": "https://api.github.com/repos/cnapagoda/carbon-governance", "Date": "2016-05-26T06:40:16Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.Camera.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((params.getFocusMode()) != null) { params.setFocusMode(Camera.Parameters.FOCUS_MODE_AUTO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1030/buggy-version/src.main.java.com.github.randoapp.CameraActivity.java", "BodyUseAPI": ["Camera.Parameters.setFocusMode(Camera.Parameters.FOCUS_MODE_AUTO)"], "Fixed commit": "2b12486d45f9e108a8c643775e864b0858fdce68", "Url": "https://api.github.com/repos/RandoApp/Rando-android", "Date": "2014-05-06T13:50:37Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (columnHeaders != null) { this.fieldDefs = new java.util.ArrayList<org.araqne.log.api.FieldDefinition>(); for (java.lang.String c : columnHeaders) fieldDefs.add(new org.araqne.log.api.FieldDefinition(c, \"string\")); }else this.fieldDefs = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9006/buggy-version/araqne-log-api.src.main.java.org.araqne.log.api.DelimiterParser.java", "BodyUseAPI": [], "Fixed commit": "a583309ff75eb6cca44393eee7b405ce8aa571d2", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-01-14T06:17:41Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (frame.getTitle().contains(\"*\")) { frame.setTitle(frame.getTitle().substring(0, ((frame.getTitle().length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4266/buggy-version/src.gsingh.learnkirtan.Main.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "javax.swing.JFrame.getTitle()", "javax.swing.JFrame.getTitle()", "javax.swing.JFrame.setTitle(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "5b9a34296fa61752d20f4ef2a1084a6a19b24931", "Url": "https://api.github.com/repos/gsingh93/Learn-Kirtan", "Date": "2012-04-02T23:00:05Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stortGeld < 0) { throw new java.lang.IllegalArgumentException(\"U kunt geen negatief bedrag storten\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5251/buggy-version/src.main.java.nl.hardwin.javalearning.domain.Rekening.java", "BodyUseAPI": [], "Fixed commit": "f2b1ca228cfa0cfd3fe067ab6c2dd3d61c786fdf", "Url": "https://api.github.com/repos/mraalten/javalearning", "Date": "2016-11-18T15:34:59Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (onvoldoendeSaldoEnKredietlimietBereikt(bedrag)) { throw new java.lang.IllegalStateException(\"Onvoldoende saldo en kredietlimiet bereikt\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5251/buggy-version/src.main.java.nl.hardwin.javalearning.domain.Rekening.java", "BodyUseAPI": [], "Fixed commit": "f2b1ca228cfa0cfd3fe067ab6c2dd3d61c786fdf", "Url": "https://api.github.com/repos/mraalten/javalearning", "Date": "2016-11-18T15:34:59Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["laser.ddg.gui.DDGExplorer.getCurrentDDGPanel()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (panel != null) { panel.showSearchResults(nodeList); }else { wfpanel.showSearchResults(nodeList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3142/buggy-version/src.laser.ddg.commands.FindTimeCommand.java", "BodyUseAPI": ["laser.ddg.gui.DDGPanel.showSearchResults(java.util.ArrayList<laser.ddg.search.OperationSearchElement>)"], "Fixed commit": "c8ffac57818cc274df191a7f93745c7f1d4d898e", "Url": "https://api.github.com/repos/End-to-end-provenance/DDG-Explorer", "Date": "2017-07-07T15:30:36Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tempAL.size()) > index) { tempAL.remove(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1356/buggy-version/src.cc.moecraft.hykilpikonna.lores.Features.Command.SetNameAndLore.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.remove(int)"], "Fixed commit": "8d8b59f0a68abc350ddc852de8090348736b083c", "Url": "https://api.github.com/repos/hykilpikonna/HyLores", "Date": "2017-06-19T04:47:59Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (period == (Period.YEAR)) fP.tabPanel.selectTab(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3617/buggy-version/src.it.rate.view.WidgetUpdate.java", "BodyUseAPI": [], "Fixed commit": "5ddfb8cf9289a542448a29c8dd72d67a65798cc1", "Url": "https://api.github.com/repos/jbreitbart/rate-it", "Date": "2012-07-11T16:57:12Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stock.current_change_percentage) != null) android.util.Log.d(\"DEBUG\", stock.current_change_percentage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6952/buggy-version/app.src.main.java.com.fantasystock.fantasystock.ViewHolder.ChartView.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,stock.current_change_percentage)"], "Fixed commit": "96fe997601c0523ed5542204e3be9e2cfee94a0c", "Url": "https://api.github.com/repos/ted7726/FantasyStock", "Date": "2016-03-31T09:29:18Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Optional.ofNullable(onlineResource).isPresent()) { java.lang.Iterable<java.lang.String> split = com.google.common.base.Splitter.on(\"|\").trimResults().split(onlineResource); java.util.Iterator<java.lang.String> iterator = split.iterator(); this.onlineResoureTitle = iterator.next(); this.onlineResoureHref = iterator.next(); setRecreate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7118/buggy-version/src.main.java.org.n52.iceland.ogc.ows.ServiceProviderFactory.java", "BodyUseAPI": ["com.google.common.base.Splitter.on(\"|\").trimResults().split(java.lang.String)"], "Fixed commit": "e3090ce29d99f66d1378dee1629c7e256d99b465", "Url": "https://api.github.com/repos/nuest/iceland", "Date": "2015-09-09T15:11:33Z"},
{"Line": "=>768", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.lsts.neptus.console.plugins.planning.UavPiccoloControl.PiccoloWPType.getType(message.getMessageType().getShortName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wpt == (pt.lsts.neptus.console.plugins.planning.UavPiccoloControl.PiccoloWPType.WAYPOINT_UNKOWN)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7370/buggy-version/src.pt.lsts.neptus.console.plugins.planning.UavPiccoloControl.java", "BodyUseAPI": [], "Fixed commit": "b87a46ab7522f2f613060fd298ae059e3c2aae9b", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2017-04-19T15:47:06Z"},
{"Line": "=>772", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.lsts.neptus.types.vehicle.VehiclesHolder.getVehicleWithImc(pt.lsts.neptus.comm.manager.imc.ImcId16)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (vt == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7370/buggy-version/src.pt.lsts.neptus.console.plugins.planning.UavPiccoloControl.java", "BodyUseAPI": [], "Fixed commit": "b87a46ab7522f2f613060fd298ae059e3c2aae9b", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2017-04-19T15:47:06Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (services.equals(\"NOT_FOUND\")) { protocol.setState(DSPMainServer.NOT_FOUND); response = protocol.generateResponse(); }else { response = protocol.generateResponse(services); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3878/buggy-version/src.server.MainServerThread.java", "BodyUseAPI": ["protocol.DSPMainServer.generateResponse(java.lang.String)"], "Fixed commit": "69f0936b2524d83387fa6d70069bc9dd14753945", "Url": "https://api.github.com/repos/somi92/dsa-main-server", "Date": "2013-12-16T21:40:23Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (com.example.tal.wikipediagame.PlayMode.State.IN_SEARCH_OF_DESTINATION)) { startNewGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4907/buggy-version/app.src.main.java.com.example.tal.wikipediagame.PlayMode.java", "BodyUseAPI": [], "Fixed commit": "836d959f94811abbc41792c837f4662fc767710d", "Url": "https://api.github.com/repos/talbor49/WikipediaGame", "Date": "2016-07-02T17:50:55Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (com.example.tal.wikipediagame.PlayMode.State.IN_SEARCH_OF_DESTINATION)) { startNewGame(); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4907/buggy-version/app.src.main.java.com.example.tal.wikipediagame.PlayMode.java", "BodyUseAPI": [], "Fixed commit": "836d959f94811abbc41792c837f4662fc767710d", "Url": "https://api.github.com/repos/talbor49/WikipediaGame", "Date": "2016-07-02T17:50:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queryNode.getNodes()) != null) { for (com.geecommerce.core.system.query.model.QueryNode node : queryNode.getNodes()) { filterBuilders.add(buildQuery(node)); } if (queryNode.getOperator().equals(com.geecommerce.core.system.query.helper.DefaultQueryHelper.AND)) { org.elasticsearch.index.query.FilterBuilder andFilterBuilder = org.elasticsearch.index.query.FilterBuilders.andFilter(filterBuilders.toArray(new org.elasticsearch.index.query.FilterBuilder[filterBuilders.size()])); return andFilterBuilder; }else { org.elasticsearch.index.query.FilterBuilder orFilterBuilder = org.elasticsearch.index.query.FilterBuilders.orFilter(filterBuilders.toArray(new org.elasticsearch.index.query.FilterBuilder[filterBuilders.size()])); return orFilterBuilder; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3022/buggy-version/core.src.main.java.com.geecommerce.core.system.query.helper.DefaultQueryHelper.java", "BodyUseAPI": ["queryNode.getOperator().equals(java.lang.String)", "com.geecommerce.core.system.query.model.QueryNode.getOperator()", "com.geecommerce.core.system.query.model.QueryNode.getNodes()"], "Fixed commit": "89f52ecced7e4b71c97dce33defe82e2d8a400eb", "Url": "https://api.github.com/repos/geetools/geeCommerce-Java-Shop-Software-and-PIM", "Date": "2016-12-29T09:34:19Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wso2telco.services.dep.sandbox.util.CommonUtil.getNullOrTrimmedValue(wrapperDTO.getMnc())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (mnc != null) { validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_OPTIONAL_INT_GE_ZERO, \"mnc\", mnc)); validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_MANDATORY_INT_GE_ZERO, \"mcc\", mcc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5876/buggy-version/dep-sandbox.src.main.java.com.wso2telco.services.dep.sandbox.servicefactory.customerinfo.GetAttributeRequestHandler.java", "BodyUseAPI": ["java.util.List<com.wso2telco.dep.oneapivalidation.util.ValidationRule>.add(com.wso2telco.dep.oneapivalidation.util.ValidationRule)"], "Fixed commit": "5b793c58a71100c69d35bd8b3e658779eb8bcc41", "Url": "https://api.github.com/repos/rshahintha/sandbox-service", "Date": "2017-01-18T07:04:17Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (realTimeInstantiated) { toolbar.setVisibility(View.INVISIBLE); pager.setVisibility(View.INVISIBLE); tabs.setVisibility(View.INVISIBLE); frameLayout.setVisibility(View.VISIBLE); fab.setVisibility(View.INVISIBLE); }else { switchToFragment(\"REAL_TIME_FRAGMENT\"); realTimeInstantiated = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9082/buggy-version/mindMapperApp.src.main.java.edu.engagement.application.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ac17016e5883ebec17488f84f32d517955797f50", "Url": "https://api.github.com/repos/amhokies/MindMapper", "Date": "2015-07-03T15:18:30Z"},
{"Line": "=>905", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ibm.ws.monitor.internal.ProbeListener.getdefaultvalues()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (args != null) args = java.util.Arrays.copyOf(args, args.length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8203/buggy-version/dev.com.ibm.ws.monitor.src.com.ibm.ws.monitor.internal.ProbeManagerImpl.java", "BodyUseAPI": ["java.util.Arrays.copyOf(java.lang.Object[],int)"], "Fixed commit": "0ae9479d7865b62e5a3913b406c731db5cf41dc4", "Url": "https://api.github.com/repos/jkoehler22/open-liberty", "Date": "2017-10-23T17:31:24Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((historyData) != null) historyData.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3634/buggy-version/app.src.main.java.pl.srw.billcalculator.history.HistoryPresenter.java", "BodyUseAPI": [], "Fixed commit": "27a77957e5fe51546fef0c74c65d7841b0ebb25e", "Url": "https://api.github.com/repos/sewerk/Bill-Calculator", "Date": "2017-04-27T20:50:05Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_end) != null) m_model.setEndElectronId(m_end.getModel().getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6183/buggy-version/AIPSProj.sources.chem.figures.ChemicalBond.java", "BodyUseAPI": [], "Fixed commit": "e53ac41960f4ae2b21c019a4c6257f33f3460796", "Url": "https://api.github.com/repos/FallenShard/aips-proj", "Date": "2014-12-31T17:41:11Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_start) != null) m_model.setStartElectronId(m_start.getModel().getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6183/buggy-version/AIPSProj.sources.chem.figures.ChemicalBond.java", "BodyUseAPI": [], "Fixed commit": "e53ac41960f4ae2b21c019a4c6257f33f3460796", "Url": "https://api.github.com/repos/FallenShard/aips-proj", "Date": "2014-12-31T17:41:11Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (recursive) { while (!(Inspector.ObjectsToInspect.isEmpty())) { if ((Inspector.ObjectsToInspect.element().getClass().getName().equals(\"java.lang.Class\")) || (Inspector.ObjectsToInspect.element().getClass().getName().equals(\"java.lang.Object\"))) Inspector.ObjectsToInspect.remove(); else { try { java.lang.System.out.println(\"\\n\\n\"); inspect(Inspector.ObjectsToInspect.remove(), recursive); } catch (java.lang.Exception e) { e.printStackTrace(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9075/buggy-version/Inspector.java", "BodyUseAPI": ["Inspector.inspect(java.lang.Object,boolean)"], "Fixed commit": "6246a16a371c446c652a00f2f1a400dc2a1faa30", "Url": "https://api.github.com/repos/teresa-van/CPSC501Assignment2", "Date": "2017-10-27T18:22:05Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.sysml.api.DMLScript.USE_ACCELERATOR) { org.apache.sysml.runtime.instructions.gpu.context.GPUContext.getGPUContext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5546/buggy-version/src.main.java.org.apache.sysml.api.DMLScript.java", "BodyUseAPI": [], "Fixed commit": "8e112962d9fc67b9f0186667807d8dbe7db06192", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-03-22T23:13:41Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fileFilter) == null) || (fileFilter.display(file))) { files.add(file); adapter.notifyItemInserted(((files.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6091/buggy-version/library.src.main.java.me.denley.notary.DirectoryObserver.java", "BodyUseAPI": ["java.util.List<me.denley.notary.File>.add(me.denley.notary.File)"], "Fixed commit": "a04a07a307002dcce5535f124f6a618c1a34d160", "Url": "https://api.github.com/repos/denley/Notary", "Date": "2015-03-19T08:38:52Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isFacingRight()) { g.drawImage(new javax.swing.ImageIcon(\"resources/crossbowRight.jpg\").getImage(), this.getMap().toGridPoint(this.getPoint()).x, this.getMap().toGridPoint(this.getPoint()).y, null); }else { g.drawImage(new javax.swing.ImageIcon(\"resources/crossbowLeft.jpg\").getImage(), this.getMap().toGridPoint(this.getPoint()).x, this.getMap().toGridPoint(this.getPoint()).y, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7944/buggy-version/UpJammin2.src.model.turrets.ArrowTurret.java", "BodyUseAPI": [], "Fixed commit": "8194a88863eb357dce2e4982bdabcfd94ca53987", "Url": "https://api.github.com/repos/IAmSam42/UpJammin2", "Date": "2017-06-10T17:50:21Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(magicDuelsDecksDirectory.exists())) { magicDuelsDecksDirectory.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7749/buggy-version/src.com.blueraja.magicduelsimporter.magicassist.MagicAssistDeckManager.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "3ba1a47199b9562896af6219f1b547a122daca7d", "Url": "https://api.github.com/repos/BlueRaja/Magic-Duels-Deck-Exporter", "Date": "2016-12-10T21:40:39Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files == null) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7749/buggy-version/src.com.blueraja.magicduelsimporter.utils.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "3ba1a47199b9562896af6219f1b547a122daca7d", "Url": "https://api.github.com/repos/BlueRaja/Magic-Duels-Deck-Exporter", "Date": "2016-12-10T21:40:39Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (urlDeclaration == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2746/buggy-version/server.webportal.src.main.java.ru.kolaer.server.webportal.spring.UrlSecurityApplicationContextListener.java", "BodyUseAPI": [], "Fixed commit": "b362591b45e620b70320c07875c9583504f7ede7", "Url": "https://api.github.com/repos/danilovEY/Kolaer-systems", "Date": "2016-09-13T06:51:07Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activity == (getContext())) { restoreImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1755/buggy-version/Android.LuaViewSDK.src.com.taobao.luaview.view.imageview.LVBaseImageView.java", "BodyUseAPI": [], "Fixed commit": "7506bc76009663ea8c657fc32715283c0b6d74da", "Url": "https://api.github.com/repos/Zhaoyy/LuaViewSDK", "Date": "2016-05-17T13:20:37Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activity == (getContext())) { ((android.app.Activity) (getContext())).getApplication().unregisterActivityLifecycleCallbacks(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1755/buggy-version/Android.LuaViewSDK.src.com.taobao.luaview.view.imageview.LVBaseImageView.java", "BodyUseAPI": [], "Fixed commit": "7506bc76009663ea8c657fc32715283c0b6d74da", "Url": "https://api.github.com/repos/Zhaoyy/LuaViewSDK", "Date": "2016-05-17T13:20:37Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activity == (getContext())) { releaseBitmap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1755/buggy-version/Android.LuaViewSDK.src.com.taobao.luaview.view.imageview.LVBaseImageView.java", "BodyUseAPI": [], "Fixed commit": "7506bc76009663ea8c657fc32715283c0b6d74da", "Url": "https://api.github.com/repos/Zhaoyy/LuaViewSDK", "Date": "2016-05-17T13:20:37Z"},
{"Line": "=>1177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.cismet.cismap.commons.raster.wms.WMSServiceLayer.searchForLayer(wmsCapabilities.getLayer(),de.cismet.cismap.commons.raster.wms.WMSServiceLayer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (layer == null) { layer = wmsCapabilities.getLayer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/439/buggy-version/src.main.java.de.cismet.cismap.commons.raster.wms.WMSServiceLayer.java", "BodyUseAPI": [], "Fixed commit": "19393063e630a6d9d430d990ef695981e4444ccf", "Url": "https://api.github.com/repos/cismet/cismap-commons", "Date": "2012-09-13T14:28:17Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextWriteBatch) != null) { signalError(nextWriteBatch, error); nextWriteBatch = null; enqueueMutex.notifyAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4017/buggy-version/activemq-kahadb-store.src.main.java.org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.java", "BodyUseAPI": [], "Fixed commit": "21ae1ef2e658a14f89bde79a83a32af340fb351a", "Url": "https://api.github.com/repos/bloommi/activemq", "Date": "2017-03-07T12:28:58Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (syncBatch(wb.writes)) { wb.dataFile.decrementLength(wb.size); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4017/buggy-version/activemq-kahadb-store.src.main.java.org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.java", "BodyUseAPI": ["org.apache.activemq.store.kahadb.disk.journal.DataFile.decrementLength(int)"], "Fixed commit": "21ae1ef2e658a14f89bde79a83a32af340fb351a", "Url": "https://api.github.com/repos/bloommi/activemq", "Date": "2017-03-07T12:28:58Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.windup.bootstrap.Bootstrap.validateOptionValues(java.util.Map<java.lang.String, org.jboss.windup.config.ConfigurationOption>,java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!validationSuccess) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7507/buggy-version/bootstrap.src.main.java.org.jboss.windup.bootstrap.Bootstrap.java", "BodyUseAPI": [], "Fixed commit": "40538653b4a6bce901a59220ab838a76baf32647", "Url": "https://api.github.com/repos/jsight/windup", "Date": "2015-06-17T14:21:57Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (defaultRouteStates.containsKey(stateId)) return defaultRouteStates.get(stateId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7068/buggy-version/jsprit-core.src.main.java.algorithms.StateManager.java", "BodyUseAPI": ["java.util.Map<algorithms.StateId, algorithms.State>.get(algorithms.StateId)"], "Fixed commit": "71a3cbe9a89a0e1f3311a3b5017f7abc1066f1cf", "Url": "https://api.github.com/repos/jsprit/jsprit", "Date": "2013-11-13T05:13:52Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (defaultActivityStates.containsKey(stateId)) return defaultActivityStates.get(stateId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7068/buggy-version/jsprit-core.src.main.java.algorithms.StateManager.java", "BodyUseAPI": ["java.util.Map<algorithms.StateId, algorithms.State>.get(algorithms.StateId)"], "Fixed commit": "71a3cbe9a89a0e1f3311a3b5017f7abc1066f1cf", "Url": "https://api.github.com/repos/jsprit/jsprit", "Date": "2013-11-13T05:13:52Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (imageView == null) imageView = new android.widget.ImageView(mContext);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3787/buggy-version/app.src.main.java.com.nikmalov.portfolioproject.PopularVideoApp.MoviePosterAdapter.java", "BodyUseAPI": [], "Fixed commit": "98aa1c6558b65cd495c3236eee6d0e2206c8edd2", "Url": "https://api.github.com/repos/nikmalov/my-app-portfolio", "Date": "2016-03-07T22:01:13Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (session != null) { session.getLog().onErrorEvent((\"ERROR: \" + text)); }else { org.slf4j.LoggerFactory.getLogger(quickfix.MemoryStore.class).error(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2861/buggy-version/quickfixj-core.src.main.java.quickfix.MemoryStore.java", "BodyUseAPI": ["session.getLog().onErrorEvent(java.lang.String)", "quickfix.Session.getLog()"], "Fixed commit": "67f5dbe450a24a49bba5b2dbb74d0b1c10bfa9b5", "Url": "https://api.github.com/repos/jonfreedman/quickfixj", "Date": "2017-12-01T11:59:06Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (filterCountIndex != (-1)) { value = value.substring(0, filterCountIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5561/buggy-version/app.src.main.java.cz.zdrubecky.zoopraha.section.lexicon.LexiconMenuFiltersFragment.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "691144fe19c2290a77f210ae537987a989dedc2e", "Url": "https://api.github.com/repos/zdrubvit/ZooPraha", "Date": "2017-06-29T12:22:39Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (single_ipa.equals(\".\")) { }else if (flag == 0) { if (com.mysungrussian.mysungrussian.RuleEngine.voiced_string.contains(single_ipa)) { flag = 1; }else if (com.mysungrussian.mysungrussian.RuleEngine.unvoiced_string.contains(single_ipa)) { flag = 2; } }else if (flag == 1) { if ((com.mysungrussian.mysungrussian.RuleEngine.sonorant_string.contains(single_ipa)) || (com.mysungrussian.mysungrussian.RuleEngine.vowel_string.contains(single_ipa))) { flag = 0; }else if (com.mysungrussian.mysungrussian.RuleEngine.unvoiced_string.contains(single_ipa)) { int index = com.mysungrussian.mysungrussian.RuleEngine.unvoiced_string.indexOf(single_ipa); java.lang.String replaceChar = java.lang.String.valueOf(com.mysungrussian.mysungrussian.RuleEngine.voiced_string.charAt(index)); vol_ipa = ((vol_ipa.substring(0, i)) + replaceChar) + (vol_ipa.substring((i + 1), vol_ipa.length())); } }else if (flag == 2) { if ((com.mysungrussian.mysungrussian.RuleEngine.sonorant_string.contains(single_ipa)) || (com.mysungrussian.mysungrussian.RuleEngine.vowel_string.contains(single_ipa))) { flag = 0; }else if (com.mysungrussian.mysungrussian.RuleEngine.voiced_string.contains(single_ipa)) { int index = com.mysungrussian.mysungrussian.RuleEngine.voiced_string.indexOf(single_ipa); java.lang.String replaceChar = java.lang.String.valueOf(com.mysungrussian.mysungrussian.RuleEngine.unvoiced_string.charAt(index)); vol_ipa = ((vol_ipa.substring(0, i)) + replaceChar) + (vol_ipa.substring((i + 1), vol_ipa.length())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7986/buggy-version/app.src.main.java.com.mysungrussian.mysungrussian.RuleEngine.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "76bf63ba2daf21d8520018d70c4ad541d07ec170", "Url": "https://api.github.com/repos/StephenWo/MySungRussian", "Date": "2016-03-04T04:15:45Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldObj.isRemote) onNeighborBlockUpdate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3020/buggy-version/src.pneumaticCraft.common.tileentity.TileEntityBase.java", "BodyUseAPI": [], "Fixed commit": "ec90a73ea8a6aa9e54489fc7dbaa5649749d2015", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-06-18T23:11:01Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.length) > 2) return ((response[((response.length) - 1)]) == 0) && ((response[((response.length) - 2)]) == ((byte) (144))); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7089/buggy-version/src.me.monotron.NFCReader.MifareUtils.java", "BodyUseAPI": [], "Fixed commit": "6817f06c2e781411e31fd76dff51a776d1f61d04", "Url": "https://api.github.com/repos/monotron/NFCReader", "Date": "2017-11-10T03:02:15Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kanishka.net.model.HttpStatus.getStatusCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (statusCode == (VirustotalStatus.API_LIMIT_EXCEEDED)) { throw new com.kanishka.virustotal.exception.QuotaExceededException(com.kanishka.virustotalv2.VirustotalPublicV2Impl.ERR_MSG_EXCEED_MAX_REQ_PM); }else if (statusCode == (VirustotalStatus.SUCCESSFUL)) { java.lang.String serviceResponse = responseWrapper.getResponse(); if ((urls.length) > 1) { fileScanReport = gsonProcessor.fromJson(serviceResponse, com.kanishka.virustotal.dto.FileScanReport[].class); }else { com.kanishka.virustotal.dto.FileScanReport fileScanReportElem = gsonProcessor.fromJson(serviceResponse, com.kanishka.virustotal.dto.FileScanReport.class); fileScanReport = new com.kanishka.virustotal.dto.FileScanReport[]{ fileScanReportElem }; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7937/buggy-version/src.main.java.com.kanishka.virustotalv2.VirustotalPublicV2Impl.java", "BodyUseAPI": [], "Fixed commit": "9752dffe1e70fadd52f3e309f1d7e98289ce8241", "Url": "https://api.github.com/repos/kdkanishka/Virustotal-Public-API-V2.0-Client", "Date": "2013-12-17T11:51:42Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kanishka.net.model.HttpStatus.getStatusCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (statusCode == (VirustotalStatus.API_LIMIT_EXCEEDED)) { throw new com.kanishka.virustotal.exception.QuotaExceededException(com.kanishka.virustotalv2.VirustotalPublicV2Impl.ERR_MSG_EXCEED_MAX_REQ_PM); }else if (statusCode == (VirustotalStatus.SUCCESSFUL)) { java.lang.String serviceResponse = responseWrapper.getResponse(); if ((urls.length) > 1) { scanInfo = gsonProcessor.fromJson(serviceResponse, com.kanishka.virustotal.dto.ScanInfo[].class); }else { com.kanishka.virustotal.dto.ScanInfo scanInforElem = gsonProcessor.fromJson(serviceResponse, com.kanishka.virustotal.dto.ScanInfo.class); scanInfo = new com.kanishka.virustotal.dto.ScanInfo[]{ scanInforElem }; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7937/buggy-version/src.main.java.com.kanishka.virustotalv2.VirustotalPublicV2Impl.java", "BodyUseAPI": [], "Fixed commit": "9752dffe1e70fadd52f3e309f1d7e98289ce8241", "Url": "https://api.github.com/repos/kdkanishka/Virustotal-Public-API-V2.0-Client", "Date": "2013-12-17T11:51:42Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((n.getImplements()) != null) { for (java.util.Iterator<ClassOrInterfaceType> h = n.getImplements().iterator(); h.hasNext();) { ClassOrInterfaceType imp = h.next(); jc.implementsInterfaces.add(imp.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3811/buggy-version/src.FileDetails.java", "BodyUseAPI": ["ClassOrInterfaceDeclaration.getImplements()", "n.getImplements().iterator()"], "Fixed commit": "9af1cf60699a51bd89f9ceb0cad392a79b1cf632", "Url": "https://api.github.com/repos/tofuninja/Medusa", "Date": "2014-04-03T23:26:53Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((password.startsWith(\"${\")) && (password.endsWith(\"}\"))) || (!(org.springframework.util.StringUtils.hasLength(password)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8367/buggy-version/spring-boot-actuator.src.main.java.org.springframework.boot.actuate.properties.SecurityProperties.java", "BodyUseAPI": [], "Fixed commit": "0f012c581b4e07f1d2fabffd4495c2d3b10b2027", "Url": "https://api.github.com/repos/SpringSource/spring-boot", "Date": "2013-08-22T16:06:07Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (samplingRate != null) { try { val = (java.lang.Integer.parseInt(samplingRate)) * 1000; } catch (java.lang.NumberFormatException e) { val = Collector.DEFAULT_SAMPLING_RATE_DELTA; } }else { val = Collector.DEFAULT_SAMPLING_RATE_DELTA; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1508/buggy-version/org.envirocar.app.src.org.envirocar.app.application.CommandListener.java", "BodyUseAPI": [], "Fixed commit": "b4ad19444cd9aed4919b48ac06154d3f6556d977", "Url": "https://api.github.com/repos/matthesrieke/enviroCar-app", "Date": "2014-05-22T16:47:01Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.XML.toJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (toJSON.getJSONObject(\"string\").has(\"content\")) { java.lang.Integer id = toJSON.getJSONObject(\"string\").getInt(\"content\"); return java.lang.String.valueOf(id); }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4511/buggy-version/src.main.java.com.silicolife.textmining.processes.resources.dictionary.loaders.chemspider.ChemSpiderAPI.java", "BodyUseAPI": ["toJSON.getJSONObject(\"string\").getInt(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "49bfaa6a33c278787d502c01838159b84d1650b2", "Url": "https://api.github.com/repos/biotextmining/processes", "Date": "2017-08-01T11:56:46Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user != u) { myUserManager.getUserSession(u).send(updateUserColis); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9005/buggy-version/src.Server.ChatManager.RoomManager.java", "BodyUseAPI": ["Server.ChatManager.UserManager.getUserSession(Server.ChatManager.User)", "myUserManager.getUserSession(u).send(Colis.Colis)"], "Fixed commit": "73222261864c7c65e2a82b4f1f5d6d8781fbcd26", "Url": "https://api.github.com/repos/jcossette/ProjetReseauChat", "Date": "2014-12-06T18:38:08Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rankByDate.isEmpty()) { rankByDate.addLast(new stats.Tuple2<java.lang.Long, model.Rank>(updateDate, new model.Rank(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8766/buggy-version/JassServer.src.main.java.stats.UserStats.java", "BodyUseAPI": ["java.util.LinkedList<stats.Tuple2<java.lang.Long, model.Rank>>.addLast(stats.Tuple2<java.lang.Long, model.Rank>)"], "Fixed commit": "37574bddf6dab2c81f2bfb1c833fd62e882e4762", "Url": "https://api.github.com/repos/vincenzobaz/JassServer", "Date": "2016-11-12T18:55:42Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3385/buggy-version/app.src.main.java.com.ins.aimai.common.ExamCountDownTimer.java", "BodyUseAPI": [], "Fixed commit": "2730a4d715c716908734459ad58b7b2a206742fc", "Url": "https://api.github.com/repos/liaoinstan/Aimai", "Date": "2017-08-08T10:38:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((j % 10) == 0) { marioAIOptions.setVisualization(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1419/buggy-version/marioai.src.ch.idsia.scenarios.Custom.java", "BodyUseAPI": [], "Fixed commit": "3839c01a651d150a7c516ab0f7b8cfb16be5cb6f", "Url": "https://api.github.com/repos/abacon45/MarioAI", "Date": "2014-04-25T15:31:38Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.health.service.LocationService.findLocationBySuburb(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((locations.size()) > 0) { com.health.entity.Tlocation location = locations.get(0); model.addAttribute(\"latitude\", location.getLatitude()); model.addAttribute(\"longitude\", location.getLongitude()); model.addAttribute(\"location\", gson.toJson(location)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4430/buggy-version/TravelHealth.src.main.java.com.health.travel.HospitalController.java", "BodyUseAPI": ["java.util.List<com.health.entity.Tlocation>.get(int)"], "Fixed commit": "7910dc9e1bc0fe7e51864099a5c4c99974a2a2cd", "Url": "https://api.github.com/repos/gshhunter/VHCT", "Date": "2016-05-14T07:53:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLastLocation) != null) { return new double[]{ mLastLocation.getLatitude(), mLastLocation.getLongitude() }; }else { mLastLocation = mLocationClient.getLastLocation(); if ((mLastLocation) != null) return new double[]{ mLastLocation.getLatitude(), mLastLocation.getLongitude() }; else return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5185/buggy-version/src.org.witness.informacam.informa.suckers.GeoFusedSucker.java", "BodyUseAPI": [], "Fixed commit": "34d4d73c03be182b32457e2bb2852c823158468d", "Url": "https://api.github.com/repos/guardianproject/InformaCore", "Date": "2013-11-11T17:34:08Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.witness.informacam.informa.SensorLogger<org.witness.informacam.informa.suckers.GeoSucker>.updateLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dLoc != null) return new org.witness.informacam.models.j3m.ILocation(dLoc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5185/buggy-version/src.org.witness.informacam.informa.InformaService.java", "BodyUseAPI": [], "Fixed commit": "34d4d73c03be182b32457e2bb2852c823158468d", "Url": "https://api.github.com/repos/guardianproject/InformaCore", "Date": "2013-11-11T17:34:08Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ODatabaseRecordThreadLocal.INSTANCE.getIfDefined()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((threadDb != null) && (threadDb.getStorage().getName().equals(iDatabaseName))) database = threadDb; else database = com.orientechnologies.orient.server.OServerMain.server().openDatabase(\"document\", iDatabaseName, replicatorUser.name, replicatorUser.password);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4804/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.conflict.ODefaultReplicationConflictResolver.java", "BodyUseAPI": ["com.orientechnologies.orient.server.OServerMain.server().openDatabase(java.lang.String,java.lang.String,replicatorUser.name,replicatorUser.password)"], "Fixed commit": "36a8c3f1d5fc2accf4dea13cc5a9d3e8e1ce1faa", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-06-26T21:24:35Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arg3.length) == 0) { p.sendMessage(((org.bukkit.ChatColor.GOLD) + \"/ma help\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7769/buggy-version/src.cz.sionzee.MajnCraft.Auction.CommandHandler.java", "BodyUseAPI": [], "Fixed commit": "f6e8eb968a1f50451b10136a37c6d89a8244176d", "Url": "https://api.github.com/repos/siOnzeeSlav/MajnCraft", "Date": "2014-02-25T19:58:07Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.sortedRows.containsKey(0L))) { this.sortedRows.put(0L, com.google.common.collect.Lists.<org.apache.kylin.metadata.tuple.ITuple>newArrayList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5307/buggy-version/storage.src.main.java.org.apache.kylin.storage.cache.StreamSQLResult.java", "BodyUseAPI": [], "Fixed commit": "0e42b2dfae6f490ae25e33241f3982f7de66fd59", "Url": "https://api.github.com/repos/KylinOLAP/Kylin", "Date": "2015-05-14T05:57:31Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m == (java.lang.Float.MAX_VALUE)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1000/buggy-version/src.de.dakror.wseminar.util.Benchmark.java", "BodyUseAPI": [], "Fixed commit": "698f5409bbde046be9f125ae9f0f77d1682db3fc", "Url": "https://api.github.com/repos/Dakror/WSeminar", "Date": "2015-10-30T19:47:33Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInCurrentBlock) { updateStreams(); if (isReadFromLocalWorker()) { mPos = pos; updateStreams(); if ((mCurrentBlockInStream) != null) { mCurrentBlockInStream.seek(((mPos) % (mBlockSize))); }else { com.google.common.base.Preconditions.checkState(((remaining()) == 0)); } return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3685/buggy-version/core.client.fs.src.main.java.alluxio.client.file.FileInStream.java", "BodyUseAPI": [], "Fixed commit": "aa23cb0162c4cffdf73601daf45a67163288fb78", "Url": "https://api.github.com/repos/Alluxio/alluxio", "Date": "2017-09-26T23:29:31Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (password.contains(\" \")) { password = password.replace(\" \", \"%20\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6130/buggy-version/app.src.main.java.org.cmucreatelab.mfm_android.activities.LoginActivity.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "af3d8c7b5bf3b152538814fb9b5c0edbc788c1d6", "Url": "https://api.github.com/repos/CMU-CREATE-Lab/mfm-android", "Date": "2016-06-22T14:43:27Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (username.contains(\" \")) { username = username.replace(\" \", \"%20\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6130/buggy-version/app.src.main.java.org.cmucreatelab.mfm_android.activities.LoginActivity.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "af3d8c7b5bf3b152538814fb9b5c0edbc788c1d6", "Url": "https://api.github.com/repos/CMU-CREATE-Lab/mfm-android", "Date": "2016-06-22T14:43:27Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) == null) pass = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2759/buggy-version/railo-java.railo-core.src.railo.runtime.net.smtp.SMTPSender.java", "BodyUseAPI": [], "Fixed commit": "3a2172db0c3ee0f8c32bb59dc68fb63833d86788", "Url": "https://api.github.com/repos/clitnak/mcrailo", "Date": "2012-11-23T11:17:01Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gitPath.isAbsolute())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2405/buggy-version/rdt.org.eclipse.ptp.rdt.sync.git.ui.src.org.eclipse.ptp.rdt.sync.git.ui.GitParticipant.java", "BodyUseAPI": [], "Fixed commit": "096b5e6eb9a488eac3396b3fb9282b4db38664cc", "Url": "https://api.github.com/repos/rolandschulz/PTP", "Date": "2012-10-11T19:56:12Z"},
{"Line": "=>962", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gitPath.isAbsolute())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2405/buggy-version/rdt.org.eclipse.ptp.rdt.sync.ui.src.org.eclipse.ptp.rdt.sync.ui.properties.BuildRemotePropertiesPage.java", "BodyUseAPI": [], "Fixed commit": "096b5e6eb9a488eac3396b3fb9282b4db38664cc", "Url": "https://api.github.com/repos/rolandschulz/PTP", "Date": "2012-10-11T19:56:12Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["common.TextPane.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((text != null) && ((textLength = text.length()) != 0)) { switch (text.charAt((caretPos == 0 ? 0 : caretPos - 1))) { case '\\n' : case '\\t' : text = ((text.substring(0, caretPos)) + '\\t') + (text.substring(caretPos)); break; default : if ((text != null) && ((telnet.Telnet.getTab()) != null)) { if ((tabCount) == 1) { text = telnet.Telnet.getTab().autoComplete(text, caretPos); }else if ((tabCount) == 2) { outputArea.append(telnet.Telnet.getTab().suggestions(text, caretPos)); } } break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4951/buggy-version/src.telnet.InputAreaListener.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.charAt(int)"], "Fixed commit": "01db02c5cd4a5f62d056e296c6116c39eabefc32", "Url": "https://api.github.com/repos/bim9262/synthseq", "Date": "2012-11-02T06:14:03Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.extendedTicks) == 3) { if ((((this.getBlockMetadata()) % 2) == 0) && (!(worldObj.isRemote))) spawnItems(x, y, z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2444/buggy-version/src.main.java.flaxbeard.steamcraft.tile.TileEntitySmasher.java", "BodyUseAPI": [], "Fixed commit": "dfb65c53d1f0cb9df9c636aa322e806bbb510b97", "Url": "https://api.github.com/repos/Flaxbeard/Flaxbeards-Steam-Power", "Date": "2014-06-30T03:44:34Z"},
{"Line": "=>1388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (numeric != null) { val = java.math.BigDecimal.valueOf(numeric); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6356/buggy-version/jdbc.src.main.java.com.terradatum.jdbc.JdbcPreparedStatementAdapter.java", "BodyUseAPI": ["java.math.BigDecimal.valueOf(java.lang.Integer)"], "Fixed commit": "b8abd952906855d74b67743f9f67d48d5c4621f4", "Url": "https://api.github.com/repos/terradatum/terradatum-jdbc", "Date": "2016-07-21T01:12:52Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_complete)) { Board.getInstance().getPlayer().stopMoving(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6549/buggy-version/Main.MoveStatement.java", "BodyUseAPI": [], "Fixed commit": "2f481b4691915924f6c7f31aaf0218d1b187910c", "Url": "https://api.github.com/repos/Tape/Monsterismus", "Date": "2012-08-01T21:27:46Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (endIdx > 0) { int linebreakIdx = input.indexOf(\"\\n\"); if ((linebreakIdx > 0) && (endIdx > linebreakIdx)) { java.lang.String code = input.substring(6, endIdx); scrum.client.wiki.Paragraph p = new scrum.client.wiki.Paragraph(true); p.add(new scrum.client.wiki.Code(code)); model.add(p); burn((endIdx + 8)); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6510/buggy-version/src.main.java.scrum.client.wiki.WikiParser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "scrum.client.wiki.WikiParser.burn(int)"], "Fixed commit": "808f050bf51632462a8d4279f6912ba4975bc36e", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2012-03-19T23:30:14Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((API_GHSC.DataAccess.conn) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1751/buggy-version/src.main.java.BaseObjects.DataAccess.java", "BodyUseAPI": [], "Fixed commit": "2111af83791e8a79fdfd6b13b69ce81a11824c99", "Url": "https://api.github.com/repos/guycurry/api-ghsc", "Date": "2016-06-12T16:55:37Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.Query.getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resultList.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2520/buggy-version/blog-core.src.main.java.com.epam.adok.core.dao.impl.blog.BlogDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "f37f2f0da6b7106fbfeb55039e16bc589dbc7405", "Url": "https://api.github.com/repos/AdilhanKaikenov/spring-blog-project", "Date": "2017-12-22T08:33:30Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.Lagerbestand.getLagerbestand(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (quellLb != null) mengeOld = quellLb.getMenge();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1344/buggy-version/view.BestandsaenderungFrame.java", "BodyUseAPI": ["model.Lagerbestand.getMenge()"], "Fixed commit": "e75920e2aaab8d8b87cecc34868d001938289a6f", "Url": "https://api.github.com/repos/lagerverwaltung/lagerverwaltung", "Date": "2013-12-21T17:36:08Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aMilliseconde != null) { final java.util.Date iDate = new java.util.Date(aMilliseconde); this.set(iDate.toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/440/buggy-version/maohifx.common.src.main.java.com.maohi.software.maohifx.common.SimpleLocalDateProperty.java", "BodyUseAPI": [], "Fixed commit": "616c16d5f47d6622d07ddc24f42fc3d65023efb0", "Url": "https://api.github.com/repos/Heifara/maohifx", "Date": "2015-12-23T22:51:36Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pratilipiIdList.size()) > 1) return new com.pratilipi.api.shared.GenericResponse();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/407/buggy-version/src.main.java.com.pratilipi.api.impl.pratilipi.PratilipiProcessApi.java", "BodyUseAPI": [], "Fixed commit": "af5295d390a8e3fd973d2d2ffb009d07f9cdfd8a", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-04-23T12:41:07Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((marker.getSnippet()) != null) && (marker.getSnippet().contains(\"Distance\"))) { phoneNumber = marker.getSnippet().substring(0, marker.getSnippet().indexOf(\" \")); }else { phoneNumber = marker.getSnippet(); if (phoneNumber == null) { phoneNumber = \"\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2903/buggy-version/app.src.main.java.com.swpbiz.foodcoma.activities.ViewActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.model.Marker.getSnippet()", "com.google.android.gms.maps.model.Marker.getSnippet()", "marker.getSnippet().substring(int,marker.getSnippet().indexOf(\" \"))", "com.google.android.gms.maps.model.Marker.getSnippet()", "marker.getSnippet().indexOf(java.lang.String)"], "Fixed commit": "b79bacaff0b6268629fbdecaf7540efbbe0aa0d6", "Url": "https://api.github.com/repos/rayleeriver/Foodcoma", "Date": "2015-04-06T05:20:47Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index == (-1)) { java.lang.System.err.println((\"Could not find block for \" + (event.getBlock()))); }else { event.getPlayer().getInventory().setItem(index, event.getPlayer().getInventory().getItem(index).clone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4686/buggy-version/Lavasurvival.src.main.java.me.eddiep.minecraft.ls.system.PlayerListener.java", "BodyUseAPI": ["event.getPlayer().getInventory().getItem(index).clone()", "event.getPlayer().getInventory().setItem(int,event.getPlayer().getInventory().getItem(index).clone())", "event.getPlayer().getInventory().getItem(int)"], "Fixed commit": "d16644b7f84974eb5cc8c734f981b32ee2d47e8c", "Url": "https://api.github.com/repos/pupnewfster/Lavasurvival", "Date": "2015-12-21T04:27:56Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (name == null) java.lang.System.err.println(\"Internal error, sample name is null\"); else { if (separator == ',') name = name.replaceAll(\",\", \"_\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1620/buggy-version/src.megan.dialogs.export.CSVExportTaxonomy.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "1f221d5ea21379d233b928a1a5b019e37fd92d9e", "Url": "https://api.github.com/repos/danielhuson/megan-ce", "Date": "2016-08-18T05:46:33Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (name == null) java.lang.System.err.println(\"Internal error, sample name is null\"); else { if (separator == ',') name = name.replaceAll(\",\", \"_\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1620/buggy-version/src.megan.dialogs.export.CSVExportFViewer.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "1f221d5ea21379d233b928a1a5b019e37fd92d9e", "Url": "https://api.github.com/repos/danielhuson/megan-ce", "Date": "2016-08-18T05:46:33Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.gwt.query.client.plugins.effects.Transitions.invalidTransitionNamesRegex.test(s)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/996/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.client.plugins.effects.Transitions.java", "BodyUseAPI": [], "Fixed commit": "ad6d295b486bf98576a7f6a462853eac88e46c5c", "Url": "https://api.github.com/repos/manolo/gquery", "Date": "2013-12-08T12:52:47Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<net.sf.json.JSONObject>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((business.get(\"categories\")) instanceof net.sf.json.JSONArray) { net.sf.json.JSONArray categories = business.getJSONArray(\"categories\"); for (int i = 0; i < (categories.size()); i++) { catList.add(categories.getString(i)); } java.lang.System.out.println((\"categories \" + (catList.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7405/buggy-version/src.main.java.com.queryquest.rest.jersey.search.java", "BodyUseAPI": ["net.sf.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "f97df7a1483993ca2b63a93245d038129594100f", "Url": "https://api.github.com/repos/sushmithas/sumasu", "Date": "2014-04-19T07:32:04Z"},
{"Line": "=>1916", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cancelAllPos >= 0) { text.setSpan(new im.vector.activity.VectorRoomActivity.cancelAllClickableSpan(), cancelAllPos, (cancelAllPos + (cancelAll.length())), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3979/buggy-version/vector.src.main.java.im.vector.activity.VectorRoomActivity.java", "BodyUseAPI": ["android.text.SpannableString.setSpan(im.vector.activity.VectorRoomActivity.cancelAllClickableSpan,int,int,int)"], "Fixed commit": "84923e6c54e2166c913980fa37d0b50c4f2b4944", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-02-01T13:12:57Z"},
{"Line": "=>1921", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (resendAllPos >= 0) { text.setSpan(new im.vector.activity.VectorRoomActivity.resendAllClickableSpan(), resendAllPos, (resendAllPos + (resendAll.length())), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3979/buggy-version/vector.src.main.java.im.vector.activity.VectorRoomActivity.java", "BodyUseAPI": ["android.text.SpannableString.setSpan(im.vector.activity.VectorRoomActivity.resendAllClickableSpan,int,int,int)"], "Fixed commit": "84923e6c54e2166c913980fa37d0b50c4f2b4944", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-02-01T13:12:57Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/880/buggy-version/src.com.wasteofplastic.acidisland.panels.SettingsPanel.java", "BodyUseAPI": [], "Fixed commit": "672dde6e8f05913b6899e776ef9aca25c86282bb", "Url": "https://api.github.com/repos/tastybento/acidisland", "Date": "2015-08-23T19:30:12Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (focusDecade >= 0) { java.lang.String chapter = delegates.QuestionDelegate.questionChapterDecades.get(focusDecade); return delegates.QuestionDelegate.getQuestionsForLifeChapter(chapter); }else { return delegates.QuestionDelegate.getQuestionsForLifeChapter(\"ALLTIMES\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3881/buggy-version/app.delegates.QuestionDelegate.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.String>.get(java.lang.Integer)"], "Fixed commit": "04e4ae83fd4b4888152516e042c7e3248bee538b", "Url": "https://api.github.com/repos/cdparra/reminiscens-lifeapi", "Date": "2013-10-13T18:05:37Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reaction.GetState()) == (ru.parallel.octotron.core.logic.Reaction.STATE_NONE)) reaction.RegisterPreparedResponse(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5392/buggy-version/src.main.java.ru.parallel.octotron.exec.ExecutionController.java", "BodyUseAPI": ["ru.parallel.octotron.core.logic.Reaction.RegisterPreparedResponse(<nulltype>)"], "Fixed commit": "59865445c17cdcdb72af8c7d84e5b392817a2fe4", "Url": "https://api.github.com/repos/srcc-msu/octotron_core", "Date": "2014-10-24T16:51:34Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.parallel.octotron.reactions.PreparedResponseFactory.Construct(attribute.GetParent(),ru.parallel.octotron.core.logic.Reaction,ru.parallel.octotron.core.logic.Response)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((prepared_response.GetResponse().GetStatus()) != (ru.parallel.octotron.core.primitive.EEventStatus.RECOVER)) reaction.RegisterPreparedResponse(prepared_response);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5392/buggy-version/src.main.java.ru.parallel.octotron.exec.ExecutionController.java", "BodyUseAPI": ["ru.parallel.octotron.core.logic.Reaction.RegisterPreparedResponse(ru.parallel.octotron.reactions.PreparedResponse)"], "Fixed commit": "59865445c17cdcdb72af8c7d84e5b392817a2fe4", "Url": "https://api.github.com/repos/srcc-msu/octotron_core", "Date": "2014-10-24T16:51:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasAccessList && hasNode) { hasAccessList = hasNode = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7682/buggy-version/persistence.src.main.java.org.openstack.atlas.service.domain.services.impl.BlackListServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e882b79e080b71937ad8ed787d0ff3e6a5fc75a1", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2011-12-19T21:25:18Z"},
{"Line": "=>944", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selected.getLayout()) != null) if (selected.getLayout().equalsIgnoreCase(\"double-faced\")) { if (nb.contains(\"a\")) nb = nb.replace(\"a\", \"b\"); else nb = nb.replace(\"b\", \"a\"); org.magic.api.beans.MagicCard flipC = provider.getCardByNumber(nb, selectedEdition); back = new java.net.URL(((\"http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=\" + (flipC.getEditions().get(0).getMultiverse_id())) + \"&type=card\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2868/buggy-version/src.org.magic.gui.MagicGUI.java", "BodyUseAPI": ["org.magic.api.beans.MagicCard.getLayout()", "selected.getLayout().equalsIgnoreCase(java.lang.String)"], "Fixed commit": "24519c36c98b86dda3618130394f9a2d5c8b0db9", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2016-04-03T16:00:19Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((w % 2) != 0) w++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5197/buggy-version/de.remote.impl.src.de.remote.impl.BrowserImpl.java", "BodyUseAPI": [], "Fixed commit": "24d1df5ac9d191a1aaa3866193898d29698d2a8c", "Url": "https://api.github.com/repos/dabastynator/RemoteControlSystem", "Date": "2013-01-20T11:57:01Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String[]>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bits.length) == 3) { mimNumber = bits[0]; java.lang.String pos = bits[1]; java.lang.String pubmedId = bits[2]; if (diseases.containsKey(mimNumber)) { if (\"1\".equals(pos)) { addPubCollection(mimNumber, currentPubs); currentPubs = new java.util.ArrayList<java.lang.String>(); } currentPubs.add(getPubId(pubmedId)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3474/buggy-version/bio.sources.human.omim.main.src.org.intermine.bio.dataconversion.OmimConverter.java", "BodyUseAPI": [], "Fixed commit": "bea3e88c3e047038b3f1d84ca6bde851083ffd10", "Url": "https://api.github.com/repos/intermine/intermine", "Date": "2013-02-12T17:18:51Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(outputType.equals(org.openpixi.pixi.diagnostics.methods.OccupationNumbersInTime.OUTPUT_NONE))) { this.writeHeader(outputFileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1842/buggy-version/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.OccupationNumbersInTime.java", "BodyUseAPI": [], "Fixed commit": "fc6ab448807be1cf42b50ffcd0923f65c59881af", "Url": "https://api.github.com/repos/d-mueller/openpixi", "Date": "2015-07-16T14:45:35Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (beginTime.isAfter(endTime)) { org.joda.time.Instant beginInstant = beginTime.toInstant(); org.joda.time.Instant endInstant = endTime.toInstant(); beginTime = new org.joda.time.DateTime(endInstant); endTime = new org.joda.time.DateTime(beginInstant); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/224/buggy-version/src.main.java.eu.verdelhan.ta4j.loaders.CsvTradesLoader.java", "BodyUseAPI": ["org.joda.time.DateTime.toInstant()", "org.joda.time.DateTime.toInstant()"], "Fixed commit": "27e717b7e602345c1c4e0917272a657b63c7596c", "Url": "https://api.github.com/repos/mdeverdelhan/ta4j", "Date": "2014-02-07T12:37:43Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.Thread, org.eclipse.viatra.dse.base.DseIdPoolHelper.IdProvider>.get(java.lang.Thread)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (idProvider == null) { return fallBackId.getAndIncrement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8728/buggy-version/dse.plugins.org.eclipse.viatra.dse.base.src.org.eclipse.viatra.dse.base.DseIdPoolHelper.java", "BodyUseAPI": [], "Fixed commit": "b8fd332a644e61db0d5368e1891df8ea83f2df65", "Url": "https://api.github.com/repos/tamasborbas/org.eclipse.viatra", "Date": "2016-04-08T14:24:37Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (snapshot.getValue().getClass().equals(java.lang.String.class)) { emailInDatabase = snapshot.getValue(java.lang.String.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3103/buggy-version/app.src.main.java.ee461l.surewalk.RegisterActivity.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Fixed commit": "b3449bb5583472a8eff47a4c7b2f8dc680febb35", "Url": "https://api.github.com/repos/alex-cone/SureWalk", "Date": "2016-11-05T18:44:30Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["recs.core.ComponentManager<?>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (removedComponent != null) { recs.core.ComponentDestructionListener listener = recs.core.EntityWorld.destructionListeners.get(removedComponent.getClass()); if (listener != null) listener.destroyed(removedComponent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7381/buggy-version/ReflectionEntityComponentSystem.src.recs.core.EntityWorld.java", "BodyUseAPI": ["java.lang.Object.getClass()", "recs.core.ComponentDestructionListener.destroyed(java.lang.Object)", "recs.core.utils.RECSObjectMap<java.lang.Class<?>, recs.core.ComponentDestructionListener>.get(java.lang.Class<? extends java.lang.Object>)"], "Fixed commit": "e5e06fbb65fa64deae1eb4c1fe502e80bd64d6ac", "Url": "https://api.github.com/repos/ocirne23/Reflection-Entity-Composition-System", "Date": "2013-06-02T23:03:19Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tweet.meta.service.InteractionLiveService.countRetweets(java.util.List<org.springframework.social.twitter.api.Tweet>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allRetweets > 0) { retweetsOfNonFollowedUsers = countRetweetsOfAccountsTheyDoNotFollow(tweetsOfAccount, user); retweetsOfNonFollowedUsersPercentage = (retweetsOfNonFollowedUsers * 100) / allRetweets; }else { retweetsOfNonFollowedUsers = 0; retweetsOfNonFollowedUsersPercentage = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1454/buggy-version/src.main.java.org.tweet.meta.service.InteractionLiveService.java", "BodyUseAPI": [], "Fixed commit": "6d8a33012b2be6f471c6558dbc13398ccd327997", "Url": "https://api.github.com/repos/eugenp/stackexchange2twitter", "Date": "2013-08-09T11:26:07Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((eventList) != null) && ((eventList.size()) > 0)) { eventAdapter = new tetviet.adapter.VideoAdapter(mContext, eventList); gridView.setAdapter(eventAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8084/buggy-version/appTemplate.src.tetviet.activity.VideosActivity.java", "BodyUseAPI": [], "Fixed commit": "89bdde7c353ea14aac3813081f009328e7d901f6", "Url": "https://api.github.com/repos/SEA2015-GROUP7/projectTetViet", "Date": "2016-01-21T14:09:55Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mintue < 10) { mintues = \"0\" + mintues; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5849/buggy-version/app.src.main.java.frascog.smartmirror.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "77e382c79d60bb2c41f441f33736108e39fe65fd", "Url": "https://api.github.com/repos/gregfrasco/SmartMirror", "Date": "2016-03-12T03:17:10Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(PICTURE_PATH.equals(\"\"))) { ApplicationConfig.PICTURE_PATH = PICTURE_PATH; if ((ApplicationConfig.PICTURE_PATH.substring(((ApplicationConfig.PICTURE_PATH.length()) - 1))) != \"/\") ApplicationConfig.PICTURE_PATH += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3100/buggy-version/src.main.java.com.shop.configuration.ApplicationPropertiesInitializer.java", "BodyUseAPI": [], "Fixed commit": "4cdf773979574cf5bcd0a01e002fa303cabc669b", "Url": "https://api.github.com/repos/xSzymo/2.0-Spring-web-shop-project", "Date": "2017-06-13T07:32:09Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.isUserInRole(\"ROLE_ADMIN\")) || (request.isUserInRole(\"ROLE_USER\"))) { response.setStatus(200); }else { response.setStatus(404); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3715/buggy-version/src.main.java.kino.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "1a27afccdefd38531474658417d07e3dc34a823c", "Url": "https://api.github.com/repos/Ilvana/cinema", "Date": "2016-05-25T21:57:47Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.jogre.gameOfThrones.common.combat.BattlePvP) (battle)).getDefTerritory().getOrder()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (defOrder != null) { g.drawImage(images.getSmallOrderImage(defOrder), (((d % 2) * 45) + 420), (((d / 2) * 45) + 3), null); d++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3376/buggy-version/src.graphisme.PlayersChoices.java", "BodyUseAPI": ["graphisme.ImageSelector.getSmallOrderImage(graphisme.Order)", "java.awt.Graphics.drawImage(images.getSmallOrderImage(defOrder),int,int,<nulltype>)"], "Fixed commit": "b7a42d43e5f9c15f8fd2aaef5ce12a2fafee363d", "Url": "https://api.github.com/repos/Robin59/Got-BoardGame", "Date": "2015-03-01T22:30:33Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (aiThread != null) { aiThread.getSolveGame().set(false); aiThread = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7976/buggy-version/src.mine.gui.GameBoard.java", "BodyUseAPI": ["mine.ai.AiThread.getSolveGame()", "aiThread.getSolveGame().set(boolean)"], "Fixed commit": "6275d92eb6766f8c3d54b82081ae2690bfd70218", "Url": "https://api.github.com/repos/shockwang/TestDrivenMine", "Date": "2016-11-02T04:30:57Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(resource.isEmpty())) { java.nio.file.Files.copy(tech.ferus.amicus.core.config.HoconConfigFile.class.getResourceAsStream(resource), path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1813/buggy-version/amicus-core.src.main.java.tech.ferus.amicus.core.config.HoconConfigFile.java", "BodyUseAPI": ["java.lang.Class.getResourceAsStream(java.lang.String)", "java.nio.file.Files.copy(java.io.InputStream,java.nio.file.Path)"], "Fixed commit": "55ab02afbe8e86b28398449f653b5eca15de7ce5", "Url": "https://api.github.com/repos/FerusTech/Amicus", "Date": "2017-06-14T02:00:05Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!force) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2168/buggy-version/src.gameObject.GameObject.java", "BodyUseAPI": [], "Fixed commit": "f27c27d01ac665951b69eb4f852834644f07cb2d", "Url": "https://api.github.com/repos/Quangisch/SEPrunner", "Date": "2014-05-28T11:36:28Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hours + (i * inter)) >= 24) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2872/buggy-version/src.com.team4.healthmonitor.dialogs.MedicineDialog.java", "BodyUseAPI": [], "Fixed commit": "aac751c6c0c0ae7366bc48485157d1b063b7bec1", "Url": "https://api.github.com/repos/jjennings955/HealthManagement", "Date": "2014-05-01T06:23:42Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["redis.clients.jedis.Jedis.keys(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(keys.isEmpty())) { count += jedis.del(keys.toArray(new java.lang.String[keys.size()])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8026/buggy-version/src.main.java.com.alitag.redis_tools.RedisExecutor.java", "BodyUseAPI": ["redis.clients.jedis.Jedis.del(java.lang.String[])", "java.util.Set<java.lang.String>.size()", "java.util.Set<java.lang.String>.toArray(java.lang.String[])"], "Fixed commit": "6bba1cedaf723df597c10c67df0b7fcfd8c38105", "Url": "https://api.github.com/repos/alitag/redis_tools", "Date": "2017-12-29T09:46:42Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tag.getName().equalsIgnoreCase(strTagPart)) contains = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5489/buggy-version/src.main.java.uk.ac.cam.sup.controllers.QuestionViewController.java", "BodyUseAPI": [], "Fixed commit": "dd9893ee39df78edd5bc6cdd0d6098ef4ce0952b", "Url": "https://api.github.com/repos/ucam-cl-dtg/urop-2013-questions", "Date": "2013-08-22T15:30:32Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!contains) { results.add(com.google.common.collect.ImmutableMap.of(\"name\", strTagPart)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5489/buggy-version/src.main.java.uk.ac.cam.sup.controllers.QuestionViewController.java", "BodyUseAPI": [], "Fixed commit": "dd9893ee39df78edd5bc6cdd0d6098ef4ce0952b", "Url": "https://api.github.com/repos/ucam-cl-dtg/urop-2013-questions", "Date": "2013-08-22T15:30:32Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pepsoft.worldpainter.Dimension.getTileForEditing((x >> (org.pepsoft.worldpainter.Constants.TILE_SIZE_BITS)),(y >> (org.pepsoft.worldpainter.Constants.TILE_SIZE_BITS)))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tile.getLayerValue(layer, xInTile, yInTile)) < value) { tile.setLayerValue(layer, xInTile, yInTile, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8440/buggy-version/WorldPainter.WPGUI.src.main.java.org.pepsoft.worldpainter.painting.CombinedLayerPaint.java", "BodyUseAPI": ["org.pepsoft.worldpainter.Tile.setLayerValue(org.pepsoft.worldpainter.painting.CombinedLayerPaint,int,int,int)"], "Fixed commit": "33be24bd1bc34852f412aa53c08fd53a95661ee7", "Url": "https://api.github.com/repos/Captain-Chaos/WorldPainter", "Date": "2015-07-01T17:25:13Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < 27) { ((org.bukkit.block.Chest) (b_.getState())).getBlockInventory().setItem(i, item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7421/buggy-version/API.src.main.java.com.comze_instancelabs.minigamesapi.SmartReset.java", "BodyUseAPI": ["((org.bukkit.block.Chest) (b_.getState())).getBlockInventory().setItem(java.lang.Integer,org.bukkit.inventory.ItemStack)"], "Fixed commit": "da4c40f5a5dc2ea631ad1ba6a99fb34d1140273e", "Url": "https://api.github.com/repos/instance01/MinigamesAPI", "Date": "2014-12-16T16:18:15Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((w_e.length) > 1) { if ((w_e[1].length()) > 0) { b = ((\"e_\" + lang) + \"_\") + (w_e[1].replace(\" \", ((\" e_\" + lang) + \"_\"))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/535/buggy-version/src.preProcess.PreProcess.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "15224ff1bb61b0ad5a94ba98cc0cf5b2b1402e85", "Url": "https://api.github.com/repos/iamlockelightning/WikiExtractor", "Date": "2017-09-22T11:46:31Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cleanDispatcherLists.contains(dispatcherListName))) { codeBuilderForMethods.append(\"\\t\\tfinal Iterator<Dispatcher> \").append(dispatcherListIteratorName).append(\" = \").append(dispatcherListName).append(\".iterator();\\n\").append(\"\\t\\twhile (\").append(dispatcherListIteratorName).append(\".hasNext()) {\\n\").append(\"\\t\\t\\tif (\").append(dispatcherListIteratorName).append(\".next().mSubscriber == subscriber) {\\n\").append(\"\\t\\t\\t\\t\").append(dispatcherListIteratorName).append(\".remove();\\n\").append(\"\\t\\t\\t}\\n\").append(\"\\t\\t}\\n\"); cleanDispatcherLists.add(dispatcherListName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9053/buggy-version/FlashBusGenerator.src.main.java.com.msagi.flashbus.generator.FlashBusBuilder.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.util.HashSet<java.lang.String>.add(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "d03f89018ff5a54c3e05b52721c09b8c917446b3", "Url": "https://api.github.com/repos/msagi/FlashBus", "Date": "2015-11-24T18:18:06Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fromOnCreate)) { android.widget.Button button = ((android.widget.Button) (findViewById(R.id.login_button))); button.setText(R.string.login); button.setClickable(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1748/buggy-version/app.src.main.java.io.github.wwucbe.cbecalculatorv2.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "e47ae2821893b3d9ae9c04ca1726193eb54492f0", "Url": "https://api.github.com/repos/WWUCBE/AndroidApp", "Date": "2017-11-23T04:30:19Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((splitted.length) != 2) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4238/buggy-version/fsdevtools-cli.src.main.java.com.espirit.moddev.cli.api.parsing.parser.UidIdentifierParser.java", "BodyUseAPI": [], "Fixed commit": "21e9bb36f5b0b3f46eb0df3f76f3f55e1c1544f7", "Url": "https://api.github.com/repos/e-Spirit/FSDevTools", "Date": "2017-02-15T08:11:25Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((splitted.length) != 2) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4238/buggy-version/fsdevtools-cli.src.main.java.com.espirit.moddev.cli.api.parsing.parser.RootNodeIdentifierParser.java", "BodyUseAPI": [], "Fixed commit": "21e9bb36f5b0b3f46eb0df3f76f3f55e1c1544f7", "Url": "https://api.github.com/repos/e-Spirit/FSDevTools", "Date": "2017-02-15T08:11:25Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMenu) != (root)) { currentMenu = ((com.teinproductions.tein.integerfactorization.SmartCalcMenu) (currentMenu.getParent())); if ((currentMenu) == (root)) { getSupportActionBar().setDisplayHomeAsUpEnabled(false); setTitle(R.string.app_name); }else { setTitle(currentMenu.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7153/buggy-version/app.src.main.java.com.teinproductions.tein.integerfactorization.MenuActivity.java", "BodyUseAPI": [], "Fixed commit": "53b395a9c11e9d04e52a942a9643f5103c66d94f", "Url": "https://api.github.com/repos/teinvdlugt/SmartCalc", "Date": "2015-01-14T13:27:28Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.io.Serializable>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(headerValue)) { java.lang.String[] multiValuedHeader = headerValue.split(\",\"); return java.util.Collections.enumeration(java.util.Arrays.asList(multiValuedHeader)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8653/buggy-version/components.org.wso2.carbon.identity.gateway.api.src.main.java.org.wso2.carbon.identity.gateway.api.request.GatewayRequest.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "23257d169d2126763ed1216baf2070c16ba5e0fb", "Url": "https://api.github.com/repos/wso2/carbon-identity-framework", "Date": "2017-03-05T13:44:33Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sss.services.SqlBuilder.getProductInsertStatement(sss.domain.Product)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sss.services.DbWriter.executeStatement(productInsertStatement)) { javax.swing.JOptionPane.showMessageDialog(null, \"Product added to database\", \"Save Successful\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1922/buggy-version/SSS.src.sss.domain.AddProductController.java", "BodyUseAPI": [], "Fixed commit": "92214d3ff3fa43f166253808811a0aae735b848c", "Url": "https://api.github.com/repos/jkent13/sss_project", "Date": "2015-10-05T06:58:28Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRenter()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8046/buggy-version/Civilizations.src.main.java.com.kylantraynor.civilizations.groups.settlements.plots.Plot.java", "BodyUseAPI": [], "Fixed commit": "770da6e262e5a4576fe460659c588e7ff7e16675", "Url": "https://api.github.com/repos/KylanTraynor/Civilizations", "Date": "2017-07-20T01:50:44Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((itineraries.findFirstByEventid(id)) == null) { itineraries.save(itinerary); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7120/buggy-version/src.main.java.com.theironyard.controlllers.MoseyController.java", "BodyUseAPI": ["com.theironyard.controlllers.ItineraryRespository.save(com.theironyard.controlllers.Itinerary)"], "Fixed commit": "e22e33091598f3e02202176f1c3b396de27c6823", "Url": "https://api.github.com/repos/winstonwaters/Mosey", "Date": "2016-08-01T20:48:28Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((itineraries.findFirstByEventid(id)) == null) { itineraries.save(itinerary); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7120/buggy-version/src.main.java.com.theironyard.controlllers.MoseyController.java", "BodyUseAPI": ["com.theironyard.controlllers.ItineraryRespository.save(com.theironyard.controlllers.Itinerary)"], "Fixed commit": "e22e33091598f3e02202176f1c3b396de27c6823", "Url": "https://api.github.com/repos/winstonwaters/Mosey", "Date": "2016-08-01T20:48:28Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mappings.getElements()) == null) { return ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7989/buggy-version/jdto.src.main.java.org.jdto.impl.XMLBeanInspector.java", "BodyUseAPI": [], "Fixed commit": "9332a1365d3df8d435bc0a34cdfb54fc74de7914", "Url": "https://api.github.com/repos/jDTOBinder/jDTO-Binder", "Date": "2012-10-01T19:06:24Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.api.codegen.metacode.InitCodeNode.getInitValueConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((initValueConfig.getInitialValue().getType()) == (com.google.api.codegen.metacode.InitValue.InitValueType.Literal)) { value = context.getTypeTable().renderPrimitiveValue(item.getType(), value); }else { value = context.getNamer().localVarName(com.google.api.codegen.util.Name.from(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9038/buggy-version/src.main.java.com.google.api.codegen.transformer.InitCodeTransformer.java", "BodyUseAPI": [], "Fixed commit": "a12832cb4d406d9b7d5a2b296bf31db3dd026b2c", "Url": "https://api.github.com/repos/googleapis/gapic-generator", "Date": "2016-11-11T23:46:11Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3968/buggy-version/src.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "77f63dd80656f05ed2c1a156f3369f3211f9ad9d", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < (lines.length)) return lines[index];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4937/buggy-version/src.main.java.dk.cphbusiness.virtualcpu.Program.java", "BodyUseAPI": [], "Fixed commit": "dbf098d03820880c9bc52384efa2044058c46236", "Url": "https://api.github.com/repos/danielgron/virtual-cpu-template", "Date": "2017-05-28T21:01:34Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list.isEmpty()) { android.widget.Toast.makeText(this, R.string.moviesNotFound, Toast.LENGTH_SHORT).show(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5709/buggy-version/app.src.main.java.basaraba.andrii.notemoviev2.SearchAddActivity.java", "BodyUseAPI": [], "Fixed commit": "bef2fdf79b3facccb2383e992f0ce4faf43248c2", "Url": "https://api.github.com/repos/AndrewAln/Notemovie", "Date": "2017-06-03T10:46:40Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLastLocation) != null) { double latitude = mLastLocation.getLatitude(); double longitude = mLastLocation.getLongitude(); db.addDestination(((latitude + \"-\") + longitude)); }else { if ((gpsTracker.getLocation()) != null) { double latitude = gpsTracker.getLatitude(); double longitude = gpsTracker.getLongitude(); db.addDestination(((latitude + \"-\") + longitude)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/677/buggy-version/app.src.main.java.UI.fragment.Fragment_tracker.java", "BodyUseAPI": [], "Fixed commit": "0aafd5bf0dd9b4c7b366ced48ab107566650974b", "Url": "https://api.github.com/repos/winhtaikaung/GmapDemo", "Date": "2016-02-14T14:50:38Z"},
{"Line": "=>1097", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getContext()) instanceof vn.mbm.phimp.me.opencamera.Camera.CameraActivity) { vn.mbm.phimp.me.opencamera.Camera.CameraActivity cameraActivity = ((vn.mbm.phimp.me.opencamera.Camera.CameraActivity) (this.getContext())); cameraActivity.getSettingDetail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5276/buggy-version/app.src.main.java.vn.mbm.phimp.me.opencamera.Preview.Preview.java", "BodyUseAPI": [], "Fixed commit": "639f6187bb08207260630369ec7aed4db593fd29", "Url": "https://api.github.com/repos/mohitmanuja/phimpme-android", "Date": "2017-06-03T09:11:10Z"},
{"Line": "=>960", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((preview) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5276/buggy-version/app.src.main.java.vn.mbm.phimp.me.opencamera.Camera.CameraActivity.java", "BodyUseAPI": [], "Fixed commit": "639f6187bb08207260630369ec7aed4db593fd29", "Url": "https://api.github.com/repos/mohitmanuja/phimpme-android", "Date": "2017-06-03T09:11:10Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stringList == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5276/buggy-version/app.src.main.java.vn.mbm.phimp.me.opencamera.Camera.TinyDB.java", "BodyUseAPI": [], "Fixed commit": "639f6187bb08207260630369ec7aed4db593fd29", "Url": "https://api.github.com/repos/mohitmanuja/phimpme-android", "Date": "2017-06-03T09:11:10Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intList == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5276/buggy-version/app.src.main.java.vn.mbm.phimp.me.opencamera.Camera.TinyDB.java", "BodyUseAPI": [], "Fixed commit": "639f6187bb08207260630369ec7aed4db593fd29", "Url": "https://api.github.com/repos/mohitmanuja/phimpme-android", "Date": "2017-06-03T09:11:10Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5276/buggy-version/app.src.main.java.vn.mbm.phimp.me.opencamera.Camera.TinyDB.java", "BodyUseAPI": [], "Fixed commit": "639f6187bb08207260630369ec7aed4db593fd29", "Url": "https://api.github.com/repos/mohitmanuja/phimpme-android", "Date": "2017-06-03T09:11:10Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(folder.exists())) { folder.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1482/buggy-version/src.main.java.com.codelanx.codelanxlib.lang.InternalLang.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "1dd0c78f010c6f6a02034e35706e128a16f63662", "Url": "https://api.github.com/repos/CodeLanx/CodelanxLib", "Date": "2014-06-27T18:50:25Z"},
{"Line": "=>602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.mayo.cts2.framework.service.profile.entitydescription.EntityDescriptionReadService.read(edu.mayo.cts2.framework.service.profile.entitydescription.name.EntityDescriptionReadId,edu.mayo.cts2.framework.model.command.ResolvedReadContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (entityDescription != null) { resolvedEntity = ((edu.mayo.cts2.framework.model.entity.EntityDescriptionBase) (entityDescription.getChoiceValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3056/buggy-version/src.main.java.edu.mayo.cts2.framework.plugin.service.valueSetDefinitionResolutionServices.ctsUtility.Utilities.java", "BodyUseAPI": ["edu.mayo.cts2.framework.model.entity.EntityDescription.getChoiceValue()"], "Fixed commit": "3288c38e3aef2bac4b72ea1cde9d2ab84051dd66", "Url": "https://api.github.com/repos/cts2/valueSetDefinitionResolution-service", "Date": "2013-10-06T04:55:46Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getRestClient().getCts2Resource((((((codeSystemAndEntitiesServicesRootURL_) + (codeSystemAndEntitiesServicesRootURL_.endsWith(\"/\") ? \"\" : \"/\")) + url) + \"list=false\") + (parameterizeReadContext(readContext, false))), edu.mayo.cts2.framework.model.entity.EntityDescriptionMsg.class).getEntityDescription()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ed != null) { resolvedEntity = ((edu.mayo.cts2.framework.model.entity.EntityDescriptionBase) (ed.getChoiceValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3056/buggy-version/src.main.java.edu.mayo.cts2.framework.plugin.service.valueSetDefinitionResolutionServices.ctsUtility.Utilities.java", "BodyUseAPI": ["edu.mayo.cts2.framework.model.entity.EntityDescription.getChoiceValue()"], "Fixed commit": "3288c38e3aef2bac4b72ea1cde9d2ab84051dd66", "Url": "https://api.github.com/repos/cts2/valueSetDefinitionResolution-service", "Date": "2013-10-06T04:55:46Z"},
{"Line": "=>664", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getRestClient().getCts2Resource(uriTemp, edu.mayo.cts2.framework.model.entity.EntityDescriptionMsg.class).getEntityDescription()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ed != null) { resolvedEntity = ((edu.mayo.cts2.framework.model.entity.EntityDescriptionBase) (ed.getChoiceValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3056/buggy-version/src.main.java.edu.mayo.cts2.framework.plugin.service.valueSetDefinitionResolutionServices.ctsUtility.Utilities.java", "BodyUseAPI": ["edu.mayo.cts2.framework.model.entity.EntityDescription.getChoiceValue()"], "Fixed commit": "3288c38e3aef2bac4b72ea1cde9d2ab84051dd66", "Url": "https://api.github.com/repos/cts2/valueSetDefinitionResolution-service", "Date": "2013-10-06T04:55:46Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (android.app.Activity.RESULT_FIRST_USER)) { android.widget.Toast.makeText(getApplicationContext(), data.getStringExtra(\"message\"), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4872/buggy-version/EmojidexAndroid.src.main.java.com.emojidex.emojidexandroid.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7731b20a29c81f4c75d0b19414e636f7a5e34089", "Url": "https://api.github.com/repos/emojidex/emojidex-android", "Date": "2016-01-27T03:14:42Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLte) this.NetworkType = \"LTE\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/252/buggy-version/app.src.main.java.com.example.netlog.model.Cell.java", "BodyUseAPI": [], "Fixed commit": "c5db3fc02fb376fcef59ec73e6d2331906a8caca", "Url": "https://api.github.com/repos/tjeubaoit/netlog", "Date": "2017-06-27T18:24:36Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inv[toolSlot]) != null) { inv[toolSlot].attemptDamageItem(1, worldObj.rand); if ((inv[toolSlot].getItemDamage()) >= (inv[toolSlot].getMaxDamage())) { inv[toolSlot] = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6911/buggy-version/src.main.java.com.lothrazar.cyclicmagic.block.tileentity.TileEntityFishing.java", "BodyUseAPI": ["inv[toolSlot].getItemDamage()", "inv[toolSlot].getMaxDamage()", "inv[toolSlot].attemptDamageItem(int,worldObj.rand)"], "Fixed commit": "a612b343aa9865b358d122fcff95b83f5b1a9570", "Url": "https://api.github.com/repos/PrinceOfAmber/Cyclic", "Date": "2016-11-11T17:32:35Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hazelcast.internal.serialization.impl.SerializationServiceV1.createObjectDataInput(com.hazelcast.nio.serialization.Data)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((input.skipBytes(com.hazelcast.internal.serialization.impl.SerializationServiceV1.FACTORY_AND_CLASS_ID_BYTE_LENGTH)) != (com.hazelcast.internal.serialization.impl.SerializationServiceV1.FACTORY_AND_CLASS_ID_BYTE_LENGTH)) { throw new com.hazelcast.nio.serialization.HazelcastSerializationException(\"Malformed serialization format\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5014/buggy-version/hazelcast.src.main.java.com.hazelcast.internal.serialization.impl.SerializationServiceV1.java", "BodyUseAPI": [], "Fixed commit": "f2cae930d6086789f4fdf1cbf9b36faf3626e5df", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2016-11-23T10:12:28Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getBundle(Cobalt.kExtras)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (extras == null) { extras = fr.cobaltians.cobalt.Cobalt.getInstance(this.getApplicationContext()).getConfigurationForController(getInitController()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/945/buggy-version/src.main.java.fr.cobaltians.cobalt.activities.CobaltActivity.java", "BodyUseAPI": [], "Fixed commit": "b54da72e0624cc584e1c25e90348de00fb09a1e3", "Url": "https://api.github.com/repos/cobaltians/Cobalt-Android", "Date": "2015-12-02T15:50:02Z"},
{"Line": "=>1981", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aUser.getUser().getConfirmCode()) == null) { err = \"use has no confirmation code.\"; }else if (!(aUser.getUser().getConfirmCode().equals(confirmCode))) { err = \"wrong confirmation code.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4899/buggy-version/applications.plugins.org.csstudio.ams.distributor.src.org.csstudio.ams.distributor.DistributorWork.java", "BodyUseAPI": ["org.csstudio.ams.dbAccess.configdb.AggrUserGroupUserTObject.getUser()", "aUser.getUser().getConfirmCode()", "aUser.getUser().getConfirmCode().equals(java.lang.String)"], "Fixed commit": "3f9bfc6a9dfb415094dc4726f30485abb8259afa", "Url": "https://api.github.com/repos/Desy-extern/cs-studio", "Date": "2012-10-25T11:41:30Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.script.ScriptEngine.eval(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"NaN\".equals(result.toString()))) { list.add(result.toString()); return result.toString(); }else { return \"Fail to parse \" + str; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1581/buggy-version/Scientific_Calculator.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.lang.Object.toString()", "java.lang.Object.toString()"], "Fixed commit": "93b455a3a6e10e11d419b62e924c6f57eb189242", "Url": "https://api.github.com/repos/ITU-SEN-964-OOP-with-JAVA/Scientific-Calculator", "Date": "2015-08-08T17:14:41Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((implementationProject.removeProperty(cached.getClass())) != null) { implementationProject.addProperty(cached); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8623/buggy-version/src.main.java.com.joelj.jenkins.eztemplates.exclusion.JobPropertyExclusion.java", "BodyUseAPI": ["hudson.model.AbstractProject.addProperty(hudson.model.JobProperty)"], "Fixed commit": "2fdcdd10b1326b4c0367e7eb1e2136c8b437347b", "Url": "https://api.github.com/repos/juanpablo-santos/ez-templates-plugin", "Date": "2016-08-23T23:30:24Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.egen.repository.VehicleRepository.findOne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existing == null) { throw new io.egen.exception.ResourceNotFoundException(((\"Vehicle with vin \" + vin) + \" doesn't exist.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8633/buggy-version/api.src.main.java.io.egen.service.VehicleServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "143e475fc434e0d113f68627609f9625b9397ceb", "Url": "https://api.github.com/repos/Santosh28594/Tracker", "Date": "2017-06-28T21:13:28Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.sonar.batch.repository.DefaultProjectRepositoriesLoader.shouldThrow(e)) { throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8036/buggy-version/sonar-batch.src.main.java.org.sonar.batch.repository.DefaultProjectRepositoriesLoader.java", "BodyUseAPI": [], "Fixed commit": "964ce2999b7bef53d78c42210b8284b369241603", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-10-01T11:17:04Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Double.parseDouble(bet)) < 0) { java.lang.String newBet = com.leonslegion.casino.InputHandler.getStringInput(\"You cannot make a negative bet!\"); return placeBet(newBet); }else if (((getBalance()) - (java.lang.Double.parseDouble(bet))) < 0) { java.lang.String newBet = com.leonslegion.casino.InputHandler.getStringInput(\"Your bet is greater than your balance!\"); return placeBet(newBet); }else { double newBalance = (getBalance()) - (java.lang.Double.parseDouble(bet)); super.setBalance(newBalance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3043/buggy-version/src.main.java.com.leonslegion.casino.RoulettePlayer.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "87f32159f8ad6a251e2a849f3a1eab881af199d6", "Url": "https://api.github.com/repos/jstamatelos/LeonsLegion", "Date": "2017-05-11T20:15:04Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fullHP == 1) healthpoints = maxHP;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5408/buggy-version/Character.java", "BodyUseAPI": [], "Fixed commit": "6ae8be45fac91833467e0b790412f64d477ad742", "Url": "https://api.github.com/repos/NMSU-SDev-2017-1/TextBasedAdventure", "Date": "2017-04-18T19:34:49Z"},
{"Line": "=>1270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((indxRunningItem) > (-1)) { (indxRunningItem)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3499/buggy-version/com.dbfs.JTT.src.com.dbfs.jtt.swt.TasksComposite.java", "BodyUseAPI": [], "Fixed commit": "95a19939b5976efad3905c514bb15107862d2524", "Url": "https://api.github.com/repos/dmitryberkut/jtt", "Date": "2015-10-06T19:40:53Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromPhone.equals(toPhone)) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3753/buggy-version/src.com.rooztr.dao.UserDao.java", "BodyUseAPI": [], "Fixed commit": "cc1a7297684dd20e7753af770eb67143ceda8d81", "Url": "https://api.github.com/repos/StoriesX/Rooztr", "Date": "2016-08-13T20:09:33Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paneId) == null) { return (windowKey.paneId) == null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7921/buggy-version/samza-api.src.main.java.org.apache.samza.operators.windows.WindowKey.java", "BodyUseAPI": [], "Fixed commit": "bce7473a250d6329f1bfb54d4aec693abe50899c", "Url": "https://api.github.com/repos/vjagadish1989/samza", "Date": "2017-03-02T03:50:42Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.badlogic.androidgames.framework.Input.TouchEvent>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (powerTouches.keySet().contains(event.pointer)) { powerTouches.remove(event.pointer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7280/buggy-version/app.src.main.java.th.zirata.Game.GameScreen.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, com.badlogic.androidgames.framework.math.Vector2>.remove(event.pointer)"], "Fixed commit": "3c98eb5f67c2ae1b84a92c2671b9d84587a4622d", "Url": "https://api.github.com/repos/mbfrahry/Zirata", "Date": "2015-10-08T22:40:55Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (categories != null) { if ((categories.size()) > 1) mTxtCategory.setText(categories.get(1).attrLabel); else mTxtCategory.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2197/buggy-version/Android-DataLib-Sample-Netflix.src.fr.eyal.datalib.sample.netflix.fragment.MovieFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(categories.get(1).attrLabel)", "java.util.ArrayList<fr.eyal.datalib.sample.netflix.data.model.movie.MovieCategory>.size()", "java.util.ArrayList<fr.eyal.datalib.sample.netflix.data.model.movie.MovieCategory>.get(int)"], "Fixed commit": "180067abfa5b5e702a03e213fa792e50acaa2526", "Url": "https://api.github.com/repos/eyal-lezmy/Android-DataLib", "Date": "2013-07-25T10:22:07Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (currentapiVersion == 25) androidID = \"android_nougat\"; else if (currentapiVersion == 24) androidID = \"android_marshmallow\"; else if (currentapiVersion == 23) androidID = \"android_marshmallow\"; else if (currentapiVersion == 22) androidID = \"android_lollipop\"; else if (currentapiVersion == 21) androidID = \"android_lollipop\"; else if (currentapiVersion == 20) androidID = \"android_kitkat\"; else if (currentapiVersion == 19) androidID = \"android_kitkat\"; else if (currentapiVersion == 18) androidID = \"android_43\"; else androidID = \"android_legacy\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5612/buggy-version/src.uk.ac.swansea.eduroamcat.IdP.java", "BodyUseAPI": [], "Fixed commit": "de05ad3b9cd028297b1e6018c3bfb58b031bd837", "Url": "https://api.github.com/repos/GEANT/CAT-Android", "Date": "2016-11-03T13:49:43Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filesize % (FileSystem.Util.SDDFSConstants.CHUNK_SIZE)) != 0) { lastOff = chunknumToSplit * (FileSystem.Util.SDDFSConstants.CHUNK_SIZE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/596/buggy-version/src.FileSystem.Index.SDDFSIndex.java", "BodyUseAPI": [], "Fixed commit": "ebc39263e5ebfe2c3798aa4e2b9f39c07d68dd5b", "Url": "https://api.github.com/repos/amaliujia/ArcherDFS", "Date": "2015-03-11T15:00:30Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.isBeforeFirst()) { while (!(rs.isAfterLast())) { rgms.model.Meeting resultMeeting = rgms.model.Meeting.fromResultSet(rs); if (resultMeeting != null) meetings.add(resultMeeting); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1572/buggy-version/src.rgms.datacontext.MeetingManager.java", "BodyUseAPI": ["rgms.model.Meeting.fromResultSet(java.sql.ResultSet)", "java.sql.ResultSet.isAfterLast()"], "Fixed commit": "030f969bd4dffde45cb91b9cff1de98e0e7a315b", "Url": "https://api.github.com/repos/TylerHaigh/seng2050-assignment3", "Date": "2014-11-02T07:14:56Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.isBeforeFirst()) { while (!(rs.isAfterLast())) { rgms.model.Group resultGroup = rgms.model.Group.fromResultSet(rs); if (resultGroup != null) groups.add(resultGroup); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1572/buggy-version/src.rgms.datacontext.GroupManager.java", "BodyUseAPI": ["rgms.model.Group.fromResultSet(java.sql.ResultSet)", "java.sql.ResultSet.isAfterLast()"], "Fixed commit": "030f969bd4dffde45cb91b9cff1de98e0e7a315b", "Url": "https://api.github.com/repos/TylerHaigh/seng2050-assignment3", "Date": "2014-11-02T07:14:56Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (PantallaPausa.musicaOn) { musicaFondo.play(1.0F); musicaTocando = true; musicaRisa.loop(1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8879/buggy-version/core.src.mx.faam.mission.PantallaPerder.java", "BodyUseAPI": [], "Fixed commit": "347aa1ff99669da7479c233d81f1ae8702652dc1", "Url": "https://api.github.com/repos/A01375834/MissionSelfDestruction", "Date": "2017-05-04T14:36:07Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["text.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (input != null) { mTask = parser.parse(input); java.lang.String output = mTask.toString(); android.widget.TextView log = ((android.widget.TextView) (findViewById(R.id.log_cat))); log.setText(output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7476/buggy-version/src.com.frankandrobot.reminderer.AddTaskActivity.java", "BodyUseAPI": ["com.frankandrobot.reminderer.parser.ContextFreeGrammar.parse(java.lang.String)"], "Fixed commit": "c901d5dc8c2cc6e415f170df5e4a7fdf8dd4e57a", "Url": "https://api.github.com/repos/frankandrobot/Reminderer", "Date": "2013-08-04T23:42:05Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.matlabheaderhtml.main.Parser.readMatlabFunFromFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (fun != null) { fun.setPackageName(currPackage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8637/buggy-version/src.com.matlabheaderhtml.main.Batch.java", "BodyUseAPI": ["com.matlabheaderhtml.main.MatlabFunction.setPackageName(java.lang.String)"], "Fixed commit": "d3c8fc92933f72bb6514aecc083f569972f44e5c", "Url": "https://api.github.com/repos/laurentsifre/MatlabHeaderHtml", "Date": "2013-10-09T12:08:48Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.matlabheaderhtml.main.Parser.readMatlabFunFromFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (fun != null) { fun.setPackageName(currPackage); com.matlabheaderhtml.main.Writer.writeFunInDoc(fun, pathToOutputDoc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8637/buggy-version/src.com.matlabheaderhtml.main.Batch.java", "BodyUseAPI": ["com.matlabheaderhtml.main.Writer.writeFunInDoc(com.matlabheaderhtml.main.MatlabFunction,java.lang.String)", "com.matlabheaderhtml.main.MatlabFunction.setPackageName(java.lang.String)"], "Fixed commit": "d3c8fc92933f72bb6514aecc083f569972f44e5c", "Url": "https://api.github.com/repos/laurentsifre/MatlabHeaderHtml", "Date": "2013-10-09T12:08:48Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getExtendedProperties(identifier)) == null) player.registerExtendedProperties(identifier, toughasnails.api.PlayerStatRegistry.createStat(identifier));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3703/buggy-version/src.main.java.toughasnails.handler.ExtendedStatHandler.java", "BodyUseAPI": ["toughasnails.api.PlayerStatRegistry.createStat(java.lang.String)", "net.minecraft.entity.player.EntityPlayer.registerExtendedProperties(java.lang.String,toughasnails.api.PlayerStatRegistry.createStat(identifier))"], "Fixed commit": "c32183bb5bf1cf78bfa8bc7f5f62977d21172dac", "Url": "https://api.github.com/repos/Glitchfiend/ToughAsNails", "Date": "2016-02-16T10:02:50Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.sunbird.common.models.util.ProjectUtil.isStringNullOREmpty(((java.lang.String) (headers.get(JsonKey.AUTHORIZATION))))) { headers.put(JsonKey.AUTHORIZATION, org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_AUTHORIZATION)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/222/buggy-version/service.app.controllers.healthmanager.HealthController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(JsonKey.AUTHORIZATION,org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_AUTHORIZATION))"], "Fixed commit": "b8b5ab13e4e5e5e4736ad9b2e03d596ada4a800d", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-service", "Date": "2017-09-21T12:03:47Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sunbird.common.models.util.HttpUtil.sendPostRequest(((org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_BASE_URL)) + (org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_CONTNET_SEARCH_URL))),java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (response.contains(\"OK\")) { responseList.add(org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE, false, null)); finalResponseMap.put(JsonKey.Healthy, true); }else { responseList.add(org.sunbird.common.models.util.ProjectUtil.createCheckResponse(JsonKey.EKSTEP_SERVICE, true, null)); finalResponseMap.put(JsonKey.Healthy, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/222/buggy-version/service.app.controllers.healthmanager.HealthController.java", "BodyUseAPI": [], "Fixed commit": "b8b5ab13e4e5e5e4736ad9b2e03d596ada4a800d", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-service", "Date": "2017-09-21T12:03:47Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world.getTileEntity(pos)) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6437/buggy-version/src.main.java.com.primetoxinz.stacksonstacks.logic.IngotPlacer.java", "BodyUseAPI": [], "Fixed commit": "1cef3ebdfb989b610114f6fea7179fa391effaaa", "Url": "https://api.github.com/repos/primetoxinz/StacksOnStacks", "Date": "2016-07-21T02:47:50Z"},
{"Line": "=>14963", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mPrivateFlags2) & (android.view.View.PADDING_RESOLVED)) == 0) { resolvePadding(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8913/buggy-version/core.java.android.view.View.java", "BodyUseAPI": [], "Fixed commit": "96f1ee9867f966857c2dbd8cdd168d8fcdf72224", "Url": "https://api.github.com/repos/halogenOS/android_frameworks_base", "Date": "2012-08-08T01:04:15Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uc.getCurrentUser()) != null) { UsernameDisplayTxt.setText(uc.getCurrentUser().getUsername()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3946/buggy-version/app.src.main.java.com.example.ehsueh.appygolucky.HomePage.java", "BodyUseAPI": ["uc.getCurrentUser().getUsername()", "android.widget.TextView.setText(uc.getCurrentUser().getUsername())", "com.example.ehsueh.appygolucky.UserController.getCurrentUser()"], "Fixed commit": "66220fce34d79f37572c87d90b4b94e7cc0bdea1", "Url": "https://api.github.com/repos/erichsueh/CMPUT301F16T03-D01", "Date": "2016-11-13T04:51:54Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fn.cst) == null) { fn.cst = com.googlecode.d2j.dex.DexFix.getDefaultValueOfPrimitive(fn.field.getType().charAt(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2256/buggy-version/dex-translator.src.main.java.com.googlecode.d2j.dex.DexFix.java", "BodyUseAPI": ["com.googlecode.d2j.dex.DexFix.getDefaultValueOfPrimitive(fn.field.getType().charAt(0))", "fn.field.getType()", "fn.field.getType().charAt(int)"], "Fixed commit": "945a861f321777a60cd81e60f643edc0e474d88d", "Url": "https://api.github.com/repos/testwhat/dex2jar", "Date": "2016-08-15T06:10:39Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (className.contains(\"andrada\")) { pm.setComponentEnabledSetting(new android.content.ComponentName(context, java.lang.Class.forName(className)), (enable ? android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_ENABLED : android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED), PackageManager.DONT_KILL_APP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4593/buggy-version/SITracker.src.main.java.com.andrada.sitracker.util.UIUtils.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "android.content.pm.PackageManager.setComponentEnabledSetting(android.content.ComponentName,(enable ? android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_ENABLED : android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DISABLED),PackageManager.DONT_KILL_APP)"], "Fixed commit": "d6b2273593ba867ace4659fa9b68da657a890fba", "Url": "https://api.github.com/repos/SidhNor/SITracker", "Date": "2014-11-06T15:41:51Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paymentProcessor.equals(\"HPP_PA\")) || (paymentProcessor.equals(\"HPP_PB\"))) { step4_popup.termsLink_hpp().click(); }else { step4_popup.termsLink().click(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8525/buggy-version/src.bookingEngine.Page4_pay.java", "BodyUseAPI": [], "Fixed commit": "9ee3fea6457a8856b77933fdef02f7cea7aa4566", "Url": "https://api.github.com/repos/jasonogayon/DWH", "Date": "2015-09-21T06:53:19Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(params[2].equals(\"\"))) && (!(params[3].equals(\"\")))) { from_date = params[2]; to_date = params[3]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6838/buggy-version/app.src.main.java.mobile.giis.app.fragments.MonthlyPlanFragment.java", "BodyUseAPI": [], "Fixed commit": "6eb263f1df3d0ef7bd7cc2963ce048abc6325698", "Url": "https://api.github.com/repos/BIDMOH/TIIS2-Android-Mobile-Client-Application", "Date": "2016-04-03T14:10:07Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.pipers.get(p).strategy.type) == (StrategyType.diffusion)) { if (((this.pipers.get(p).getAbsMovement()) < (convergenceThreshold)) && (numCapturedRats > 0)) { playMusic = true; }else { playMusic = false; } }else { if (numCapturedRats > expNumRats) { playMusic = true; }else { playMusic = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1095/buggy-version/Player.java", "BodyUseAPI": ["this.pipers.get(p).getAbsMovement()", "java.util.Map<java.lang.Integer, pppp.g2.Piper>.get(int)"], "Fixed commit": "4e2106eac68d9feb50f83c0dac43206c18ca2bfa", "Url": "https://api.github.com/repos/quarkral/rats", "Date": "2015-09-30T05:32:03Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isdelete != null) && (\"0\".equals(isdelete))) { place.setIsdelete(0); }else { place.setIsdelete(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2875/buggy-version/demo.src.com.qjkobe.action.place.PlaceAction.java", "BodyUseAPI": [], "Fixed commit": "8edeb19fa5e66d21c930ce92c3fe9c48f968007c", "Url": "https://api.github.com/repos/qjkobe/SummerProject", "Date": "2016-08-30T11:10:36Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.fg.annotare2.magetabcheck.checks.sdrf.SdrfProtocolNode.getProtocol()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((protocol != null) && (efo.isSequencingProtocol(protocol.getType()))) { assertProtocolHasPerformerAttribute(protocolNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/233/buggy-version/src.main.java.uk.ac.ebi.fg.annotare2.magetabcheck.checks.sdrf.SdrfSimpleChecks.java", "BodyUseAPI": [], "Fixed commit": "4803b1f89f1622b614b1baf3f52a1bf8dfd0c786", "Url": "https://api.github.com/repos/arrayexpress/magetabcheck", "Date": "2014-02-12T16:17:27Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i == 0) && (java.nio.file.Files.exists(resource.getResourceWordsTextPath()))) { continue; }else if ((i > 0) && (java.nio.file.Files.exists(resource.resolveResourcePath(deFileNameList.get(i))))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5519/buggy-version/src.sample.GetResources.java", "BodyUseAPI": ["java.nio.file.Files.exists(resource.resolveResourcePath(deFileNameList.get(i)))", "sample.ThisResource.resolveResourcePath(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "05775414c15757c3d93d8ea855d08446d9600626", "Url": "https://api.github.com/repos/yin-xuanHuang/ToolWithImageNet", "Date": "2017-12-08T13:00:49Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numOfPushEvents < 10) { eventList.add(thisEvent); numOfPushEvents++; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6314/buggy-version/src.main.java.ecs189.querying.github.GithubQuerier.java", "BodyUseAPI": [], "Fixed commit": "eb06c471d49c5d922e6d30e7dab2cabcd945dc0c", "Url": "https://api.github.com/repos/sohamkor/GithubActivityMonitor", "Date": "2017-03-16T21:39:40Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (var2 != null) info(((((((LogColor.NEGATIVE) + \"\") + (LogColor.YELLOW)) + \" >>>> \") + (var2.toString())) + \" <<<< \"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2499/buggy-version/src.main.groovy.com.chiorichan.ServerLogger.java", "BodyUseAPI": ["java.lang.Object.toString()", "com.chiorichan.ServerLogger.info(((((((LogColor.NEGATIVE) + \"\") + (LogColor.YELLOW)) + \" >>>>   \") + (var2.toString())) + \"   <<<< \"))"], "Fixed commit": "ebadbe20880137f619350d8860d3dbde712dd57c", "Url": "https://api.github.com/repos/TheAmeliaDeWitt/ChioriWebServer", "Date": "2015-11-03T17:39:03Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((backlog.size()) > 0) { java.util.ArrayList<java.lang.String> rmlist = new java.util.ArrayList(); for (java.lang.String s : backlog) { if (!(isChanging(s))) { java.nio.file.Path p = java.nio.file.Paths.get(s); rmlist.add(s); rules.apply(p); } } backlog.removeAll(rmlist); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3388/buggy-version/src.buckets.Watcher.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.removeAll(java.util.ArrayList<java.lang.String>)"], "Fixed commit": "acf9301c62e973fe15fa622d6ebb7691e64e9e96", "Url": "https://api.github.com/repos/mjhouse/buckets", "Date": "2017-11-21T17:05:11Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((regex) == null) && (!(pattern.isEmpty()))) { regex = java.util.regex.Pattern.compile(pattern); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3388/buggy-version/src.buckets.rules.Rule.java", "BodyUseAPI": ["java.util.regex.Pattern.compile(java.lang.String)"], "Fixed commit": "acf9301c62e973fe15fa622d6ebb7691e64e9e96", "Url": "https://api.github.com/repos/mjhouse/buckets", "Date": "2017-11-21T17:05:11Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(times.isEmpty())) { times.last().setEnd(java.time.LocalDateTime.now()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2711/buggy-version/src.main.java.com.deanveloper.playtimeplus.storage.PlayerEntry.java", "BodyUseAPI": ["java.util.SortedSet<com.deanveloper.playtimeplus.storage.PlayerEntry.TimeEntry>.last()", "com.deanveloper.playtimeplus.storage.PlayerEntry.TimeEntry.setEnd(java.time.LocalDateTime)"], "Fixed commit": "e08ae03168a2c6934f9e3a8ae17a8877efca00bc", "Url": "https://api.github.com/repos/deanveloper/PlayTimePlus", "Date": "2016-09-30T17:21:47Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model.GameWorld.isOutside()) { controller.AudioController.playGameWorldLoop(); }else { controller.AudioController.playOfficeLoop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2291/buggy-version/src.model.guiComponents.Inventory.java", "BodyUseAPI": [], "Fixed commit": "6bfd03c445ca3757143dec1984460b1dccbd7bc3", "Url": "https://api.github.com/repos/marcelvanworkum/Gitman", "Date": "2015-10-12T04:20:07Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parser().rBraceSuccessorStart) >= braceEnd) { if ((initializer.bodyStart) < (parser().rBraceEnd)) { initializer.declarationSourceEnd = parser().rBraceEnd; }else { initializer.declarationSourceEnd = initializer.bodyStart; } if ((initializer.bodyStart) < (parser().rBraceStart)) { initializer.bodyEnd = parser().rBraceStart; }else { initializer.bodyEnd = initializer.bodyStart; } }else { if (braceEnd < (initializer.declarationSourceStart)) { initializer.declarationSourceEnd = initializer.declarationSourceStart; initializer.bodyEnd = initializer.declarationSourceEnd; }else { initializer.declarationSourceEnd = braceEnd; initializer.bodyEnd = braceStart - 1; } if ((initializer.bodyStart) > (initializer.declarationSourceEnd)) { initializer.bodyStart = initializer.declarationSourceEnd; if ((initializer.block) != null) { initializer.block.sourceStart = initializer.declarationSourceStart; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9248/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer.java", "BodyUseAPI": [], "Fixed commit": "245e2f8d15197f114d023f090474032f3cfd3cac", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2015-03-05T07:49:43Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.code.rome.android.repackaged.com.sun.syndication.feed.synd.SyndContent.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((content.indexOf(\"<\")) > 0) { content = content.substring(0, content.indexOf(\"<\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1407/buggy-version/src.com.example.utils.SyndFeedListAdapter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "86f8a435ba6d42ab18fe09416c5cbe9412643721", "Url": "https://api.github.com/repos/get4gopim/android_examples", "Date": "2012-08-24T09:07:50Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[0].equalsIgnoreCase(\"Cure\")) { sendText(humanInfect, p); return true; }else if (args[0].equalsIgnoreCase(\"Info\")) { if ((args.length) == 1) { sendText(getRaceInfo(com.minegusta.minegustastuff.races.Data.getRace(p.getUniqueId().toString())), p); return true; }else if (listContainsString(args[1], races)) { sendText(getRaceInfo(args[1].toLowerCase()), p); return true; }else { sendText(help, p); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/769/buggy-version/src.main.java.com.minegusta.minegustastuff.races.commands.RaceCommands.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.equalsIgnoreCase(java.lang.String)", "com.minegusta.minegustastuff.races.commands.RaceCommands.sendText(java.util.List<java.lang.String>,org.bukkit.entity.Player)", "com.minegusta.minegustastuff.races.commands.RaceCommands.listContainsString(java.lang.String,java.util.List<java.lang.String>)", "com.minegusta.minegustastuff.races.commands.RaceCommands.getRaceInfo(java.lang.String)"], "Fixed commit": "018dadbf7ecf7434cf9598298e3ae047e4ced698", "Url": "https://api.github.com/repos/janie177/MinegustaStuff", "Date": "2014-03-28T01:27:50Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messengerMarker) == null) { messengerMarker = googleMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(lat, lng)).title(\"Kurye adresi\")); }else { messengerMarker.setPosition(new com.google.android.gms.maps.model.LatLng(lat, lng)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1863/buggy-version/app.src.main.java.com.eer.getirt.activities.OrderConfirmedActivity.java", "BodyUseAPI": [], "Fixed commit": "99fed852c283163b8981b15b90574561f2813425", "Url": "https://api.github.com/repos/getir-hackathon-2016/getirt-frontend", "Date": "2016-02-21T10:24:37Z"},
{"Line": "=>4305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mRunning) { this.dispatchNestedFling(mVelocity); mRunning = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5762/buggy-version/core.src.main.java.me.dkzwm.widget.srl.SmoothRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "66011e8b28013cac72601661fd18e71478a00aec", "Url": "https://api.github.com/repos/dkzwm/SmoothRefreshLayout", "Date": "2017-12-06T11:59:59Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["liveBindFunctionByEventType.<com.google.gwt.query.client.js.JsCache>cast().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (liveBindFunction.isEmpty()) { liveBindFunctionByEventType.<com.google.gwt.query.client.js.JsCache>cast().delete(k); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3280/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.client.plugins.events.EventsListener.java", "BodyUseAPI": [], "Fixed commit": "00eae0430276e873ebb1ba083a984e84b0e821a1", "Url": "https://api.github.com/repos/gwtquery/gwtquery", "Date": "2013-01-23T00:50:03Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.query.client.js.JsMap<java.lang.Integer, com.google.gwt.query.client.plugins.events.EventsListener.LiveBindFunction>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (liveBindFunction.isEmpty()) { liveBindFunctionByEventType.remove(eventbits); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3280/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.client.plugins.events.EventsListener.java", "BodyUseAPI": [], "Fixed commit": "00eae0430276e873ebb1ba083a984e84b0e821a1", "Url": "https://api.github.com/repos/gwtquery/gwtquery", "Date": "2013-01-23T00:50:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.pattern()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(dynamicRoutes.keySet().contains(patternStr))) { dynamicRoutesPatterns.add(routePathPattern); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5332/buggy-version/struts2-freeroute-core.src.main.java.com.bastengao.struts2.freeroute.DefaultRouteMappingHandler.java", "BodyUseAPI": [], "Fixed commit": "0d3b418550bf8f253cba74ff3186da00f7002ab1", "Url": "https://api.github.com/repos/bastengao/struts2-freeroute", "Date": "2013-02-28T13:55:27Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hook.getPlayer().hasPermission(\"rulesmenu.acceptedd\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1562/buggy-version/src.com.therazzerapp.rulesmenu.listener.ShowMenu.java", "BodyUseAPI": [], "Fixed commit": "8e721f8a46a48442b93bcc002239c40103363218", "Url": "https://api.github.com/repos/TheRaZZeRApp/RulesMenu", "Date": "2015-04-21T16:16:39Z"},
{"Line": "=>989", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.defaultValue) != null) { value = field.getValue(row); }else { throw new org.simplity.kernel.ApplicationError(((((\"Column \" + (field.columnName)) + \" in table \") + (this.tableName)) + \" is designed to be non-null, but a row is being inserted with a null value in it.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8644/buggy-version/simplity.kernel.src.main.java.org.simplity.kernel.dm.Record.java", "BodyUseAPI": ["org.simplity.kernel.dm.Field.getValue(org.simplity.kernel.data.FieldsInterface)"], "Fixed commit": "7fd864249ce3380f2d4ab86417df7cf742d7a1d1", "Url": "https://api.github.com/repos/simplity/simplity", "Date": "2017-04-19T05:59:20Z"},
{"Line": "=>1034", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.defaultValue) != null) { value = field.getValue(row); }else { throw new org.simplity.kernel.ApplicationError(((((\"Column \" + (field.columnName)) + \" in table \") + (this.tableName)) + \" is designed to be non-null, but a row is being updated with a null value in it.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8644/buggy-version/simplity.kernel.src.main.java.org.simplity.kernel.dm.Record.java", "BodyUseAPI": ["org.simplity.kernel.dm.Field.getValue(org.simplity.kernel.data.FieldsInterface)"], "Fixed commit": "7fd864249ce3380f2d4ab86417df7cf742d7a1d1", "Url": "https://api.github.com/repos/simplity/simplity", "Date": "2017-04-19T05:59:20Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pos == (-1)) return s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7847/buggy-version/src.com.ichi2.libanki.Card.java", "BodyUseAPI": [], "Fixed commit": "00636baa8b92120690effe022f1f25f8505d12b9", "Url": "https://api.github.com/repos/ray-pixar/Anki-Android", "Date": "2014-04-09T18:27:30Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((devicetypeList.get(position).getLastValue()) == null) { ((com.gladysinc.gladys.Adapters.DevicetypeByRoomAdapter.MultilevelViewHolder) (holder)).devicemultilevel_value.setText((((context.getString(R.string.value)) + \" \") + (context.getString(R.string.empty)))); }else { ((com.gladysinc.gladys.Adapters.DevicetypeByRoomAdapter.MultilevelViewHolder) (holder)).devicemultilevel_value.setText((((context.getString(R.string.value)) + \" \") + (devicetypeList.get(position).getLastValue().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6412/buggy-version/app.src.main.java.com.gladysinc.gladys.Adapters.DevicetypeByRoomAdapter.java", "BodyUseAPI": ["devicetypeList.get(position).getLastValue().toString()", "android.widget.TextView.setText((((context.getString(R.string.value)) + \" \") + (devicetypeList.get(position).getLastValue().toString())))", "devicetypeList.get(position).getLastValue()", "java.util.List<com.gladysinc.gladys.Models.Devicetype>.get(int)"], "Fixed commit": "ecc6d1f0480c6da13df467ac1351a5dad2a03759", "Url": "https://api.github.com/repos/MathieuAndrade/Gladys-Android-App", "Date": "2017-10-22T13:08:58Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.security.PublicKey, de.itech.borad.models.User>.get(keepAlive.getUser().getPublicKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (user == null) { de.itech.borad.models.User keepAliveUser = keepAlive.getUser(); keepAliveUser.receivedMessage(); users.put(keepAliveUser.getPublicKey(), keepAliveUser); }else { user.receivedMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/776/buggy-version/src.main.java.de.itech.borad.core.StateManager.java", "BodyUseAPI": ["de.itech.borad.models.User.receivedMessage()"], "Fixed commit": "7eb1e7ea87a8f988fd10efe0dbddd04ff531b41d", "Url": "https://api.github.com/repos/halliba/Borad", "Date": "2017-09-14T10:28:29Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (elapsedSeconds > 0) { double speed = curDist / elapsedSeconds; speedAggregate += speed; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/9084/buggy-version/ibikecph-lib.src.main.java.com.spoiledmilk.ibikecph.tracking.TrackingActivity.java", "BodyUseAPI": [], "Fixed commit": "11cc08ca941e658541b638d780617d7e2aa1b632", "Url": "https://api.github.com/repos/ibikecph/ibikecph-android", "Date": "2015-03-13T12:53:47Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index < 0) || (index >= (size))) { throw new java.lang.ArrayIndexOutOfBoundsException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2385/buggy-version/ha.control3.src.main.java.ru.spbau.mit.SmartList.java", "BodyUseAPI": [], "Fixed commit": "0842848707ed275ede3dea298205bb3236d2ac0d", "Url": "https://api.github.com/repos/bibaev/java-spring", "Date": "2016-05-14T12:39:41Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldValue instanceof com.orientechnologies.orient.core.id.ORecordId) fieldValue = ((com.orientechnologies.orient.core.id.ORecordId) (fieldValue)).getRecord();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/814/buggy-version/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java", "BodyUseAPI": [], "Fixed commit": "9196b29ed7d469ee6f03989e2b44b7f0f6063344", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-07-28T11:25:17Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.OFactory.SchokoFactory.main.MainState.gs) == null) { generateNewGameSave(); }else { de.OFactory.SchokoFactory.main.MainState.field = de.OFactory.SchokoFactory.main.MainState.gs.getMap(); de.OFactory.SchokoFactory.main.MainState.m = de.OFactory.SchokoFactory.main.MainState.gs.getMarket(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2990/buggy-version/src.de.OFactory.SchokoFactory.main.MainState.java", "BodyUseAPI": [], "Fixed commit": "4e3e12f48b5941f29094cea0fe34beaa33054994", "Url": "https://api.github.com/repos/OFactory/SchokoFactory", "Date": "2017-05-26T11:51:15Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isBlank(occExtension.value(term)))) { data.put(term.simpleName(), occExtension.value(term)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/359/buggy-version/crawler-cli.src.main.java.org.gbif.crawler.dwca.fragmenter.StarRecordSerializer.java", "BodyUseAPI": ["org.gbif.dwca.record.Record.value(org.gbif.dwc.terms.Term)", "org.gbif.dwc.terms.Term.simpleName()", "java.util.Map<java.lang.String, java.lang.Object>.put(term.simpleName(),occExtension.value(term))"], "Fixed commit": "5eb6e3040518099889fbef2e7bd5bb5b169b1ac7", "Url": "https://api.github.com/repos/gbif/crawler", "Date": "2015-08-26T12:21:03Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.startsWith(\"extern \")) { return line.substring(6, ((line.length()) - 1)).trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5609/buggy-version/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "f7d3a56ef918ab53e186fc846783b080b92e5544", "Url": "https://api.github.com/repos/nheu/nit-plugin-eclipse", "Date": "2013-06-05T23:03:48Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uri.getPath().length()) > start) { return uri.getPath().startsWith(org.apache.flink.core.fs.Path.SEPARATOR, start); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6359/buggy-version/flink-core.src.main.java.org.apache.flink.core.fs.Path.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String,int)", "java.net.URI.getPath()"], "Fixed commit": "d6768156a04e0f9fe3941ee0ec9d8300cfb0a0e3", "Url": "https://api.github.com/repos/balidani/flink", "Date": "2015-03-17T15:58:57Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (column instanceof org.jkiss.dbeaver.model.struct.DBSObject) { final org.jkiss.dbeaver.model.struct.DBSDataType dataType = org.jkiss.dbeaver.model.sql.DBUtils.getLocalDataType(((org.jkiss.dbeaver.model.struct.DBSObject) (column)).getDataSource(), column.getTypeName()); if (((dataType != null) && ((dataType.getScale()) == (column.getScale()))) && (((dataType.getPrecision()) == (column.getPrecision())) || ((dataType.getMaxLength()) == (column.getMaxLength())))) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8541/buggy-version/plugins.org.jkiss.dbeaver.model.src.org.jkiss.dbeaver.model.sql.SQLUtils.java", "BodyUseAPI": ["org.jkiss.dbeaver.model.struct.DBSTypedObject.getTypeName()", "org.jkiss.dbeaver.model.struct.DBSTypedObject.getScale()", "org.jkiss.dbeaver.model.struct.DBSTypedObject.getPrecision()", "org.jkiss.dbeaver.model.struct.DBSTypedObject.getMaxLength()", "org.jkiss.dbeaver.model.sql.DBUtils.getLocalDataType(((org.jkiss.dbeaver.model.struct.DBSObject) (column)).getDataSource(),column.getTypeName())"], "Fixed commit": "3ceb055919fdf135c957a61ca4c0eb48fcb329d8", "Url": "https://api.github.com/repos/dbeaver/dbeaver", "Date": "2017-01-20T19:37:26Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((player2Turn()) == true) && ((selectedPit <= 5) && (selectedPit >= 0))) { int taken = (circle.get(owned).getstones()) + 1; circle.get(owned).Clear(); circle.get(selectedPit).Clear(); bigPits.get(0).addStones(taken); }else if ((((player2Turn()) == false) && (selectedPit <= 11)) && (selectedPit >= 6)) { int taken = (circle.get(owned).getstones()) + 1; circle.get(owned).Clear(); circle.get(selectedPit).Clear(); bigPits.get(1).addStones(taken); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6464/buggy-version/MancProject.src.MancalaProject.MancalaModel.java", "BodyUseAPI": ["java.util.ArrayList<MancalaProject.Pit>.get(int)", "circle.get(selectedPit).Clear()", "circle.get(selectedPit).Clear()", "java.util.ArrayList<MancalaProject.Pit>.get(int)"], "Fixed commit": "6c7dabe4b7b296564e151142bbc9658d7a46bd26", "Url": "https://api.github.com/repos/dr-p/TeamManProject", "Date": "2015-12-06T02:32:23Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context.skipService()) && (page == (proceduresWizardPage))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/313/buggy-version/org.entirej.ext.oracle.src.org.entirej.ext.oracle.db.OraTypeBlockServiceContentProvider.java", "BodyUseAPI": [], "Fixed commit": "a789cbbddedd2f4663eaa4891a04cb84ff9427c5", "Url": "https://api.github.com/repos/entirej/plugin", "Date": "2015-12-01T11:42:27Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dstc.mkts.api.SurveyDTO.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.eclipse.jetty.util.StringUtil.isBlank(id))) { survey.setId(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2830/buggy-version/src.main.java.net.dstc.mkts.api.DataConverters.java", "BodyUseAPI": ["net.dstc.mkts.data.SurveyDO.setId(java.lang.String)"], "Fixed commit": "29748edd8ad721da9255550124d8b23f96e38deb", "Url": "https://api.github.com/repos/patriziobruno/mktsurveyservice-java", "Date": "2016-10-19T22:02:35Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mActivity.getPlaylistHandler().getList(Constants.spotify).size()) == 0) { mActivity.getPlaylistHandler().getSpotifyLibrary(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4724/buggy-version/app.src.main.java.music.onestream.util.LoginHandler.java", "BodyUseAPI": ["mActivity.getPlaylistHandler().getSpotifyLibrary()", "music.onestream.activity.OSAuthenticationActivity.getPlaylistHandler()"], "Fixed commit": "d0a7e07b8d6b5b5d1881fb05282498e250f22515", "Url": "https://api.github.com/repos/RussCODE/OSMusic", "Date": "2017-08-24T19:51:55Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bos.size()) < 1) { sc.close(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6052/buggy-version/src.java.com.fuheryu.handler.HttpHandler.java", "BodyUseAPI": [], "Fixed commit": "2bf98262969e98952ece5ce159dd0ed4dc4f9164", "Url": "https://api.github.com/repos/funeyu/nioServer", "Date": "2017-07-30T15:55:02Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((players[((counter) % 2)]) instanceof com.radiance.kamisado.AIPlayer)) if (!(firstMove)) gameBoardView.drawBoard(board, init.getPoint(), fin.getPoint(), selectedPiece); else { gameBoardView.drawBoard(board, selectedPiece, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1153/buggy-version/app.src.main.java.com.radiance.kamisado.GameControl.java", "BodyUseAPI": [], "Fixed commit": "0d95d9982ffe83dc6609ffefeeab8fe38cd62fc5", "Url": "https://api.github.com/repos/neery1218/Kamisado", "Date": "2015-06-28T11:07:31Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parameter.getOutput()) != null) { result.setOutput(parameter.getOutput()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/100/buggy-version/src.main.java.com.soulwarelabs.jparley.utility.Manager.java", "BodyUseAPI": ["com.soulwarelabs.jparley.utility.Parameter.setOutput(parameter.getOutput())", "com.soulwarelabs.jparley.utility.Parameter.getOutput()"], "Fixed commit": "9dc25706f5f97dceb5990038315dcb3d7b714f26", "Url": "https://api.github.com/repos/SoulwareLabs/jParley-Utility", "Date": "2014-05-13T08:00:48Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parameter.getInput()) != null) { result.setInput(parameter.getInput()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/100/buggy-version/src.main.java.com.soulwarelabs.jparley.utility.Manager.java", "BodyUseAPI": ["com.soulwarelabs.jparley.utility.Parameter.getInput()", "com.soulwarelabs.jparley.utility.Parameter.setInput(parameter.getInput())"], "Fixed commit": "9dc25706f5f97dceb5990038315dcb3d7b714f26", "Url": "https://api.github.com/repos/SoulwareLabs/jParley-Utility", "Date": "2014-05-13T08:00:48Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.msviridenkov.websitemonitoring.Website.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (url == \"http://\") { url = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8013/buggy-version/src.main.java.com.msviridenkov.websitemonitoring.Website.java", "BodyUseAPI": [], "Fixed commit": "ca59d7412f36778ec8b8a77041f32970b51b4306", "Url": "https://api.github.com/repos/MSviridenkov/website-monitoring", "Date": "2015-11-15T15:26:02Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dev.getMakeModel().contains(\"Router\")) { net.maxgigapop.versans.nps.manager.Resource resRtSvc = net.maxgigapop.versans.nps.manager.RdfOwl.createResource(model, ((resNode.getURI()) + \":l3routing\"), Mrs.RoutingService); model.add(model.createStatement(resNode, Nml.hasService, resRtSvc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7639/buggy-version/src.main.java.net.maxgigapop.versans.nps.manager.TopologyManager.java", "BodyUseAPI": [], "Fixed commit": "72c86ed7bdba579aa09298510f116be7ebdc000f", "Url": "https://api.github.com/repos/RAINS-Project/VersaNS", "Date": "2014-11-18T16:09:18Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.excelDefaultPaperSize) != null) { setExcelDefaultPaperSize(excelDefaultPaperSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6185/buggy-version/src.main.java.org.projectforge.core.ConfigXml.java", "BodyUseAPI": [], "Fixed commit": "733c318293f7ee1965502bec375083998404909d", "Url": "https://api.github.com/repos/micromata/projectforge-webapp", "Date": "2013-05-18T21:40:33Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (activeWorkbenchWindow == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1431/buggy-version/base.uk.ac.stfc.isis.ibex.ui.src.uk.ac.stfc.isis.ibex.ui.Utils.java", "BodyUseAPI": [], "Fixed commit": "f9dd2bd308cbb663289504347b68e0b430f6b642", "Url": "https://api.github.com/repos/ISISComputingGroup/ibex_gui", "Date": "2017-03-02T16:04:38Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.georgeee.itmo.sem6.dkvs.controller.BallotNumber.compareTo(ru.georgeee.itmo.sem6.dkvs.controller.BallotNumber)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (compareResult > 0) { if (b2.getLeaderId().equals(getSelfId())) { gainControl(b2.getBallotId()); }else { passControl(b2); } }else { gainControl(ballotNumber.getBallotId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8314/buggy-version/src.main.java.ru.georgeee.itmo.sem6.dkvs.controller.Leader.java", "BodyUseAPI": [], "Fixed commit": "3decb16790f27b8bdd9e88a5d0eaa1121c06c540", "Url": "https://api.github.com/repos/georgeee/itmo-mt-dkvs-6sem", "Date": "2015-05-29T01:45:53Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getSystemService(Context.LOCATION_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) { locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 2000, 10, locationListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6182/buggy-version/app.src.main.java.com.android4dev.navigationview.FragmentLocation.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER,int,int,android.location.LocationListener)"], "Fixed commit": "9c83113b4bf0fc59ac13b37b2c6017c7759bfc1d", "Url": "https://api.github.com/repos/GLodi/NavigationView", "Date": "2015-11-15T23:01:48Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getSystemService(Context.LOCATION_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)) { locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 2000, 10, locationListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6182/buggy-version/app.src.main.java.com.android4dev.navigationview.FragmentLocation.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER,int,int,android.location.LocationListener)"], "Fixed commit": "9c83113b4bf0fc59ac13b37b2c6017c7759bfc1d", "Url": "https://api.github.com/repos/GLodi/NavigationView", "Date": "2015-11-15T23:01:48Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getSystemService(Context.LOCATION_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)) { android.location.Location location1 = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6182/buggy-version/app.src.main.java.com.android4dev.navigationview.FragmentLocation.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER)"], "Fixed commit": "9c83113b4bf0fc59ac13b37b2c6017c7759bfc1d", "Url": "https://api.github.com/repos/GLodi/NavigationView", "Date": "2015-11-15T23:01:48Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((mssg.charAt(j)) != tempLetter) || (j == ((mssg.length()) - 1))) { if (countLtr > 3) { sameLtr.add(tempLetter); multipleLtr.add(countLtr); countLtr = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7278/buggy-version/JAVA_Homeworks.src.RunLengthEncoding.java", "BodyUseAPI": ["java.util.ArrayList.add(char)"], "Fixed commit": "fd6ead05b258905e07f4f9c33161ee486586bf20", "Url": "https://api.github.com/repos/gssakib/cse114", "Date": "2016-10-01T01:45:35Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attackIndexes.contains(attackerindex)) { a--; }else { attackIndexes.add(attackerindex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4162/buggy-version/src.Graph.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(int)"], "Fixed commit": "142ceb8bf9d2d43719424e5f3fc49f53410e4039", "Url": "https://api.github.com/repos/gougej88/ICNDataCachingSimulator", "Date": "2015-04-07T14:20:59Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((objectBuilder.isCollection(propertyName)) && (!(objectBuilder.isMap(propertyName)))) && (!(propertyValue instanceof java.util.Collection))) { objectBuilder.setProperty(propertyName).asObject(java.util.Arrays.asList(propertyValue)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3075/buggy-version/src.main.java.org.cjimera.Parser.java", "BodyUseAPI": ["ixcode.platform.reflect.ObjectBuilder.setProperty(java.lang.String)", "java.util.Arrays.asList(java.lang.Object)", "objectBuilder.setProperty(propertyName).asObject(java.util.List<java.lang.Object>)"], "Fixed commit": "3467851ea7c77dfcd23d110512a3cfb3a029f071", "Url": "https://api.github.com/repos/ixcode/cjimera", "Date": "2012-10-12T14:01:23Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(objectBuilder.hasProperty(propertyName))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3075/buggy-version/src.main.java.org.cjimera.Parser.java", "BodyUseAPI": [], "Fixed commit": "3467851ea7c77dfcd23d110512a3cfb3a029f071", "Url": "https://api.github.com/repos/ixcode/cjimera", "Date": "2012-10-12T14:01:23Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["db().query(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (trails == null) trails = new java.util.ArrayList<ch.hsr.traildevil.domain.Trail>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1333/buggy-version/src.ch.hsr.traildevil.util.persistence.TrailProvider.java", "BodyUseAPI": [], "Fixed commit": "f72deeaed0e0753b06e4b82ebf9e6c7ffed80a1e", "Url": "https://api.github.com/repos/Mr-Slash/TrailDevils", "Date": "2011-11-17T11:12:25Z"},
{"Line": "=>926", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.toPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.nio.file.Files.exists(moduleConf)) { java.nio.file.Files.walkFileTree(moduleConf, new org.dspace.administer.Installer.CopyVisitor(moduleConf, jarPath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4118/buggy-version/kernel.src.main.java.org.dspace.administer.Installer.java", "BodyUseAPI": ["java.nio.file.Files.walkFileTree(java.nio.file.Path,org.dspace.administer.Installer.CopyVisitor)"], "Fixed commit": "c7f45451f53eb3fdb720cae859956482e851c272", "Url": "https://api.github.com/repos/richardrodgers/mds", "Date": "2014-10-14T20:40:24Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (groupLinks) { decision = org.jboss.as.console.client.domain.topology.HtmlGenerator.SECURITY_SERVICE.getSecurityContext().getOperationPriviledge(\"/server-group={addressable.group}\", \"start-servers\"); }else { decision = org.jboss.as.console.client.domain.topology.HtmlGenerator.SECURITY_SERVICE.getSecurityContext().getOperationPriviledge(\"/{selected.host}/server-config=*\", \"start\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7726/buggy-version/gui.src.main.java.org.jboss.as.console.client.domain.topology.HtmlGenerator.java", "BodyUseAPI": [], "Fixed commit": "41d3c1775ab1d84f4a319fa1c0733740e619b63d", "Url": "https://api.github.com/repos/hal/core", "Date": "2013-10-30T00:40:37Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.getLoading().getValue()) { session.setLoading(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/63/buggy-version/app.src.main.java.org.mozilla.focus.session.SessionCallbackProxy.java", "BodyUseAPI": ["org.mozilla.focus.session.Session.setLoading(boolean)"], "Fixed commit": "5b3ae918d92f3e3fd672c08e45f8a522094fba76", "Url": "https://api.github.com/repos/pocmo/focus-android", "Date": "2017-10-21T05:29:14Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ucar.nc2.Variable.getRank()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n < 2) { result[0] = 1; }else { for (int i = 0; i < n; i++) result[i] = (i < (n - 2)) ? 1 : v.getDimension(i).getLength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6631/buggy-version/cdm.src.main.java.ucar.nc2.jni.netcdf.Nc4ChunkingStrategyGrib.java", "BodyUseAPI": [], "Fixed commit": "5d60fae9b440ce24547e1a05c9ad173b6f34e3e9", "Url": "https://api.github.com/repos/mhermida/thredds", "Date": "2013-05-10T20:16:05Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.String.valueOf(name.charAt(0))) != \"/\") { name = \"/\" + name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6689/buggy-version/src.src.main.java.org.redfrog404.mobycraft.commands.ContainerListCommands.java", "BodyUseAPI": [], "Fixed commit": "bfd97741277dfd99ed605c06801d2bdfcaaca111", "Url": "https://api.github.com/repos/AdityaGupta1/mobycraft", "Date": "2016-04-07T01:25:51Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (krawczls.deploymentManagement.ReplicationStartContext.withRoundRobin) { if (j == 0) { listMessage.add(\"true\"); }else { listMessage.add(\"false\"); } }else { if (j == master) { listMessage.add(\"true\"); }else { listMessage.add(\"false\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7739/buggy-version/HAWKSController.src.main.java.krawczls.deploymentManagement.ReplicationStartProcessor.java", "BodyUseAPI": [], "Fixed commit": "d719916fbe860996f2cba8114e4e484e4bde192f", "Url": "https://api.github.com/repos/TheRingbearer/HAWKS", "Date": "2016-03-08T11:30:56Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem.getByItem(org.bukkit.inventory.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((talisman != null) && ((this.getResearch()) != null)) talisman.bindToResearch(this.getResearch());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1588/buggy-version/src.me.mrCookieSlime.Slimefun.Objects.SlimefunItem.Talisman.java", "BodyUseAPI": ["me.mrCookieSlime.Slimefun.Objects.SlimefunItem.EnderTalisman.bindToResearch(this.getResearch())"], "Fixed commit": "1817a0382674adfeed7ff058dbb9d560d9119e84", "Url": "https://api.github.com/repos/mrCookieSlime/Slimefun-3.0", "Date": "2014-11-06T17:34:58Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (secondPhone == \"\") { secondPhone = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1041/buggy-version/bigsky.src.bigsky.gui.NewContact.java", "BodyUseAPI": [], "Fixed commit": "a955dc6ec6622ff8c0b956a06c1f79a3039d7c29", "Url": "https://api.github.com/repos/aguibert/bigsky", "Date": "2013-10-28T14:32:20Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fenixedu.academic.domain.StudentCurricularPlan.getDegreeCurricularPlan()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(dcp.getExecutionDegreesSet().isEmpty())) { result.add(dcp.getLastExecutionYear()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/5112/buggy-version/src.main.java.org.fenixedu.academic.ui.renderers.providers.enrollment.bolonha.ExecutionPeriodsForEnrolmentProvider.java", "BodyUseAPI": ["org.fenixedu.academic.domain.DegreeCurricularPlan.getLastExecutionYear()", "java.util.SortedSet<org.fenixedu.academic.domain.ExecutionYear>.add(dcp.getLastExecutionYear())"], "Fixed commit": "b87cd5a59550f95a63f7fc57020f74855ec22a46", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2016-07-05T14:18:26Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (siteDTOs == null) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8900/buggy-version/app.src.main.java.com.slack.geekbrainswork.ai.presenter.mappers.SitesDtoToSitesMapper.java", "BodyUseAPI": [], "Fixed commit": "74946ecd8f1b24ba2f91bc56632df8937d91e228", "Url": "https://api.github.com/repos/LemonGroup/Android", "Date": "2016-11-28T14:46:35Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (disabledCount == (chart.getSeriesMap().values().size())) { xAxis.addMinMax((-1), 1); yAxis.addMinMax((-1), 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7768/buggy-version/xchart.src.main.java.org.knowm.xchart.internal.chartpart.AxisPair.java", "BodyUseAPI": [], "Fixed commit": "31753de3304d223ded821fb60662f49d8680e1c7", "Url": "https://api.github.com/repos/knowm/XChart", "Date": "2017-04-22T12:30:43Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hbird.core.generatedcode.xtce.CommandMetaData.getParameterTypeSet()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parameterTypeSet == null) { org.hbird.core.xtce.XtceSpaceSystemModelFactory.LOG.error((\"Hbird only supports ParameterTypeSets in CommandMetaData. Check your XTCE file: \" + (spaceSystemModelFilename))); throw new org.hbird.core.spacesystemmodel.exceptions.InvalidSpaceSystemDefinitionException((\"Hbird only supports ParameterTypeSets in CommandMetaData. Check your XTCE file: \" + (spaceSystemModelFilename))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/122/buggy-version/src.core.xtce.src.main.java.org.hbird.core.xtce.XtceSpaceSystemModelFactory.java", "BodyUseAPI": [], "Fixed commit": "aaf976450e589de3d2fd645509e2e095ce52e516", "Url": "https://api.github.com/repos/JohannesKlug/hbird", "Date": "2012-09-06T09:57:21Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((board[t][r]) == (playingPlayer)) { if ((((((r - 3) >= 0) && ((t + 3) <= 8)) && ((board[t][r]) == (board[(t + 1)][(r - 1)]))) && ((board[t][r]) == (board[(t + 2)][(r - 2)]))) && ((board[t][r]) == (board[(t + 3)][(r - 3)]))) { changeState(false); break; }else if (((board[t][r]) == (board[(t + 1)][(r - 1)])) && ((board[t][r]) == (board[(t + 2)][(r - 2)]))) { changeState(true); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1316/buggy-version/src.tinf11bc.kbs.yavalath.util.GameState.java", "BodyUseAPI": [], "Fixed commit": "6422dc117da8ea01fc979256388aad6369f8bd9d", "Url": "https://api.github.com/repos/belafarinrod91/KBSYavalath", "Date": "2013-09-14T18:50:25Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.placement.interfaces.IContainer.getDsFilteredOutHosts(com.vmware.bdd.placement.entity.VirtualGroup)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((null != noDatastoreHosts) && (!(noDatastoreHosts.isEmpty()))) { filteredHosts.put(PlacementUtil.NO_DATASTORE_HOSTS, noDatastoreHosts); filteredHosts.put(PlacementUtil.NO_DATASTORE_HOSTS_NODE_GROUP, vGroup.getNodeGroupNames()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/420/buggy-version/server.placement.src.main.java.com.vmware.bdd.placement.PlacementService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.put(PlacementUtil.NO_DATASTORE_HOSTS,java.util.List<java.lang.String>)"], "Fixed commit": "35fcdac535b8c6d53101749d3ae74449a9dc1161", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-04-10T06:09:45Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(encoding)) { if (org.apache.commons.lang.StringUtils.equalsIgnoreCase(encoding, \"utf8mb4\")) { dbcpDs.addConnectionProperty(\"characterEncoding\", \"utf8\"); dbcpDs.setConnectionInitSqls(java.util.Arrays.asList(\"set names utf8mb4\")); }else { dbcpDs.addConnectionProperty(\"characterEncoding\", encoding); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6123/buggy-version/node.etl.src.main.java.com.alibaba.otter.node.etl.common.datasource.impl.DBDataSourceService.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.equalsIgnoreCase(java.lang.String,java.lang.String)", "org.apache.commons.dbcp.BasicDataSource.addConnectionProperty(java.lang.String,java.lang.String)"], "Fixed commit": "c227cbd986f63d08046b8af8a5ac397a47e3ea55", "Url": "https://api.github.com/repos/zhangwei5095/alibaba-otter", "Date": "2015-06-30T06:29:27Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(encoding)) { if (org.apache.commons.lang.StringUtils.equalsIgnoreCase(encoding, \"utf8mb4\")) { dbcpDs.addConnectionProperty(\"characterEncoding\", \"utf8\"); dbcpDs.setConnectionInitSqls(java.util.Arrays.asList(\"set names utf8mb4\")); }else { dbcpDs.addConnectionProperty(\"characterEncoding\", encoding); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6123/buggy-version/manager.biz.src.main.java.com.alibaba.otter.manager.biz.common.DataSourceCreator.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.equalsIgnoreCase(java.lang.String,java.lang.String)", "org.apache.commons.dbcp.BasicDataSource.addConnectionProperty(java.lang.String,java.lang.String)"], "Fixed commit": "c227cbd986f63d08046b8af8a5ac397a47e3ea55", "Url": "https://api.github.com/repos/zhangwei5095/alibaba-otter", "Date": "2015-06-30T06:29:27Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.currentThread()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((classLoader) != null) && ((thread.getContextClassLoader()) != (classLoader))) { thread.setContextClassLoader(classLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7856/buggy-version/src.main.java.core.com.giisoo.core.cache.Cache.java", "BodyUseAPI": ["java.lang.Thread.setContextClassLoader(classLoader)"], "Fixed commit": "8b01bc5bdba54d864171de49ca6f9b9a7351e28e", "Url": "https://api.github.com/repos/s20000/webgiisoo", "Date": "2015-07-15T01:23:32Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg instanceof freenet.node.fcp.EnterFiniteCooldown) { }else assert false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7117/buggy-version/src.freenet.node.fcp.ClientGet.java", "BodyUseAPI": [], "Fixed commit": "f68dd108c7ce899f33cadc80cd6441448f321eed", "Url": "https://api.github.com/repos/freenet/fred", "Date": "2011-04-05T18:01:37Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((savedInstanceState != null) && (savedInstanceState.containsKey(com.geekeclectic.android.stashcache.StashOverviewActivity.KEY_VIEW_ID))) { currentView = savedInstanceState.getInt(com.geekeclectic.android.stashcache.StashOverviewActivity.KEY_VIEW_ID); currentTab = savedInstanceState.getInt(com.geekeclectic.android.stashcache.StashOverviewActivity.KEY_FRAGMENT_ID); }else if ((getIntent().getExtras()) != null) { currentView = getIntent().getIntExtra(com.geekeclectic.android.stashcache.StashOverviewActivity.EXTRA_VIEW_ID, 0); currentTab = getIntent().getIntExtra(com.geekeclectic.android.stashcache.StashOverviewActivity.EXTRA_FRAGMENT_ID, 0); }else { currentTab = 0; currentView = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2826/buggy-version/StashCache.app.src.main.java.com.geekeclectic.android.stashcache.StashOverviewActivity.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String)", "android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "437cfe9a6f5cbc6057de050220086de887a8445e", "Url": "https://api.github.com/repos/sylkai/stash_cache", "Date": "2015-03-21T20:18:10Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentValue) == null) currentValue = java.lang.String.copyValueOf(ch, start, length).trim(); else currentValue += java.lang.String.copyValueOf(ch, start, length).trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4019/buggy-version/plugins.graphml.src.main.java.edu.kit.student.graphml.GraphMLHandler.java", "BodyUseAPI": [], "Fixed commit": "423b6ccb03a63fdf386b780137f8b24450926959", "Url": "https://api.github.com/repos/HiWiGAns/GraphVonAnsicht", "Date": "2017-02-07T07:07:46Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMovies) != null) { mAdapter.addMovies(mMovies); mAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7912/buggy-version/app.src.main.java.com.bgirlogic.movies.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e3b67510a85b5b04c32d45448c80f55c71a24162", "Url": "https://api.github.com/repos/gitskim/nanodegree-movies-app", "Date": "2016-01-03T08:25:52Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.siteBaseUrl.contains(\"localhost\")) { this.siteBaseUrl = \"http://localhost:\" + (port); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1362/buggy-version/src.main.java.com.pawandubey.griffin.Configurator.java", "BodyUseAPI": [], "Fixed commit": "b261a4d04c1c76fecddded530450e3d384638f8d", "Url": "https://api.github.com/repos/pawandubey/griffin", "Date": "2015-12-12T20:19:20Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.opengamma.core.security.SecuritySource.getSingle(com.opengamma.id.ExternalIdBundle.of(underlyingIdentifier))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (underlyingSecurity == null) { com.opengamma.financial.analytics.conversion.InterestRateFutureOptionSecurityConverter.s_logger.error(\"Couldn't find underlying security with ExternalId[{}] of security {}\", new java.lang.Object[]{ underlyingIdentifier, security.toString() }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6059/buggy-version/projects.OG-Financial.src.main.java.com.opengamma.financial.analytics.conversion.InterestRateFutureOptionSecurityConverter.java", "BodyUseAPI": [], "Fixed commit": "21923f4eb017d1926d8362e86e9ead934ad5c2ba", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2012-11-02T17:56:22Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (session != null) { user = ((de.tum.in.dbpra.model.bean.UserAccountBean) (session.getAttribute(\"user\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6087/buggy-version/src.de.tum.in.dbpra.filter.AuthenticationFilter.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "44fa2a44147f274d487ea5779dcb1e4e1e8a8106", "Url": "https://api.github.com/repos/rakibulmdalam/musicfestival", "Date": "2017-07-24T19:12:38Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["by.d1makrat.library_fm.MainActivity.GetPlaycountTask.findViewById(R.id.nav_header)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (nav_view != null) { android.widget.TextView user_registered = ((android.widget.TextView) (nav_view.findViewById(R.id.user_registered))); user_registered.setText(java.lang.String.format(\"%s scrobbles since %s\", playcount, registered)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6294/buggy-version/app.src.main.java.by.d1makrat.library_fm.MainActivity.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.user_registered)"], "Fixed commit": "f18e87ebb77f0aa9006317963d92b2b5d0d1811d", "Url": "https://api.github.com/repos/DzmitryLakisau/Last.fm-Library-Viewer", "Date": "2017-09-29T22:32:17Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.inputs.length) > 0) { int tempIdx = (currentPoll) - 1; if ((lastWriteIdx) < tempIdx) { lastWriteIdx = tempIdx; com.ociweb.iot.hardware.I2CConnection connection = this.inputs[lastWriteIdx]; i2c.write(((byte) (connection.address)), connection.readCmd); } byte[] temp = i2c.read(this.inputs[tempIdx].address, this.inputs[tempIdx].readBytes); byte[] disqualifier = this.inputs[tempIdx].disqualifier; if (com.ociweb.pronghorn.pipe.PipeWriter.tryWriteFragment(i2cResponsePipe, I2CResponseSchema.MSG_RESPONSE_10)) { com.ociweb.pronghorn.pipe.PipeWriter.writeInt(i2cResponsePipe, I2CResponseSchema.MSG_RESPONSE_10_FIELD_ADDRESS_11, this.inputs[tempIdx].address); com.ociweb.pronghorn.pipe.PipeWriter.writeBytes(i2cResponsePipe, I2CResponseSchema.MSG_RESPONSE_10_FIELD_BYTEARRAY_12, temp); com.ociweb.pronghorn.pipe.PipeWriter.writeLong(i2cResponsePipe, I2CResponseSchema.MSG_RESPONSE_10_FIELD_TIME_13, java.lang.System.currentTimeMillis()); com.ociweb.pronghorn.pipe.PipeWriter.writeInt(i2cResponsePipe, I2CResponseSchema.MSG_RESPONSE_10_FIELD_REGISTER_14, this.inputs[tempIdx].register); com.ociweb.pronghorn.pipe.PipeWriter.publishWrites(i2cResponsePipe); currentPoll = ((currentPoll) + 1) % ((this.inputs.length) + 1); } }else { currentPoll = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6783/buggy-version/src.main.java.com.ociweb.iot.hardware.I2CJFFIStage.java", "BodyUseAPI": ["com.ociweb.pronghorn.pipe.PipeWriter.writeInt(com.ociweb.pronghorn.pipe.Pipe<com.ociweb.pronghorn.iot.schema.I2CResponseSchema>,I2CResponseSchema.MSG_RESPONSE_10_FIELD_ADDRESS_11,this.inputs[tempIdx].address)", "com.ociweb.pronghorn.iot.i2c.I2CBacking.read(this.inputs[tempIdx].address,this.inputs[tempIdx].readBytes)", "com.ociweb.pronghorn.pipe.PipeWriter.writeInt(com.ociweb.pronghorn.pipe.Pipe<com.ociweb.pronghorn.iot.schema.I2CResponseSchema>,I2CResponseSchema.MSG_RESPONSE_10_FIELD_REGISTER_14,this.inputs[tempIdx].register)"], "Fixed commit": "60594e4268241649e64193b82ceddc659f78c6b0", "Url": "https://api.github.com/repos/oci-pronghorn/FogLight", "Date": "2016-07-13T20:25:47Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getContextClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (tccl == null) { clazz = ((java.lang.Class<org.pac4j.core.config.ConfigFactory>) (java.lang.Class.forName(factoryName))); }else { clazz = ((java.lang.Class<org.pac4j.core.config.ConfigFactory>) (java.lang.Class.forName(factoryName, true, tccl))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/1091/buggy-version/pac4j-core.src.main.java.org.pac4j.core.config.ConfigBuilder.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String,boolean,java.lang.ClassLoader)"], "Fixed commit": "a154e0d661d739da72993150a5a561a30af44171", "Url": "https://api.github.com/repos/pac4j/pac4j", "Date": "2016-05-19T01:23:30Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentQuestionInteger) >= (questions.size())) { currentQuestionInteger = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6441/buggy-version/src.model.Quiz.java", "BodyUseAPI": [], "Fixed commit": "58f5a1da4541b33a33ec893bf131928a7df98334", "Url": "https://api.github.com/repos/Fchaubard/CS108FinalProject", "Date": "2013-03-06T05:05:09Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Boolean) (member.getValue()))) { isUnknownProcessed = true; if ((member.getConcept().getShortName()) != null) bahmniObservation.setValue(member.getConcept().getShortName()); else bahmniObservation.setValue(member.getConcept().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8361/buggy-version/bahmni-emr-api.src.main.java.org.openmrs.module.bahmniemrapi.encountertransaction.mapper.ETObsToBahmniObsMapper.java", "BodyUseAPI": ["member.getConcept().getShortName()", "org.openmrs.module.bahmniemrapi.encountertransaction.contract.BahmniObservation.setValue(member.getConcept().getShortName())", "EncounterTransaction.Observation.getConcept()", "EncounterTransaction.Observation.getConcept()", "org.openmrs.module.bahmniemrapi.encountertransaction.contract.BahmniObservation.setValue(member.getConcept().getName())", "EncounterTransaction.Observation.getConcept()", "member.getConcept().getName()", "member.getConcept().getShortName()"], "Fixed commit": "ff67e65c3b9f8d8704456a03de5d8e61262bbd1c", "Url": "https://api.github.com/repos/Bahmni/bahmni-core", "Date": "2016-01-29T05:22:22Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isUnknownProcessed) { bahmniObservation.setValue(member.getValue()); bahmniObservation.setType(member.getConcept().getDataType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/8361/buggy-version/bahmni-emr-api.src.main.java.org.openmrs.module.bahmniemrapi.encountertransaction.mapper.ETObsToBahmniObsMapper.java", "BodyUseAPI": [], "Fixed commit": "ff67e65c3b9f8d8704456a03de5d8e61262bbd1c", "Url": "https://api.github.com/repos/Bahmni/bahmni-core", "Date": "2016-01-29T05:22:22Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.gebit.integrity.remoting.entities.setlist.SetList.determineEntryResultState(de.gebit.integrity.remoting.entities.setlist.SetListEntry)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (tempResultState != null) { resultBearingEntryResultMap.put(tempEntry, tempResultState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/6949/buggy-version/de.gebit.integrity.remoting.src.de.gebit.integrity.remoting.entities.setlist.SetList.java", "BodyUseAPI": ["java.util.HashMap<de.gebit.integrity.remoting.entities.setlist.SetListEntry, de.gebit.integrity.remoting.entities.setlist.SetListEntryResultStates>.put(de.gebit.integrity.remoting.entities.setlist.SetListEntry,de.gebit.integrity.remoting.entities.setlist.SetListEntryResultStates)"], "Fixed commit": "b673e384819d7a447e5c3bd7189af12f7aa22e9e", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2016-05-03T10:46:00Z"},
{"Line": "=>1336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((identifier.lastIndexOf(splitter)) < (identifier.length())) { return identifier.substring(((identifier.lastIndexOf(splitter)) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7022/buggy-version/coding.netcdf.coding.src.main.java.org.n52.sos.encode.AbstractNetcdfEncoder.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "0e07dce1ef52b192cfd05d0a7c4fcbb16abf9360", "Url": "https://api.github.com/repos/EHJ-52n/SOS", "Date": "2015-09-17T14:37:42Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tile.isEnd())) { for (int i = 0; i < (tile.SIDES); i++) { if ((!(origin == i)) && ((tile.getSide(i)) == (tile.ROAD))) { return currentScore.score += roadScore(currentScore, getNeighbor(i, tile), opposite(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/3588/buggy-version/src.Board.java", "BodyUseAPI": ["Board.roadScore(ScoreTracker,Tile,int)", "Tile.getSide(int)", "Board.getNeighbor(int,Tile)"], "Fixed commit": "9879067b15ffd5d84d9d8aa513e424b465f0e09e", "Url": "https://api.github.com/repos/PeterDrake/Carcassonne-Language", "Date": "2014-02-05T00:16:32Z"},
{"Line": "=>846", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Global.activeSection.equals(\"Docketing\"))) { updateQueueButtonText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/4046/buggy-version/src.main.java.parker.serb.RootPanel.java", "BodyUseAPI": [], "Fixed commit": "7e38b20ac17deb4a66f615256a545f272741d67e", "Url": "https://api.github.com/repos/CurrentlyNotSet/SERB", "Date": "2017-02-05T02:43:26Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["map.Tile.getAreaEffect()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (AE != null) AE.affect(entity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2661/buggy-version/FinalBossGame.src.map.GameMap.java", "BodyUseAPI": ["map.AreaEffect.affect(entity.Entity)"], "Fixed commit": "90c799bbec283c5953eea3c8dc38ce80faab920c", "Url": "https://api.github.com/repos/jasontowens/FinalBossGame", "Date": "2015-02-16T08:07:31Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (filename != null) { fByteArray = org.apache.commons.io.IOUtils.toByteArray(getClass().getResource((\"/\" + filename))); }else { fByteArray = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/2840/buggy-version/src.main.java.org.biokoframework.http.scenario.BinaryRequestStep.java", "BodyUseAPI": [], "Fixed commit": "33fb641a72435aa31efa7891a4fc48067c843041", "Url": "https://api.github.com/repos/bioko/http-test", "Date": "2015-05-28T14:04:30Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_grid.map[newX][newY]) != null) { disappear(); return; }else { move(newX, newY); lastAction = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V116/7435/buggy-version/src.project_rpg.behaviors.SkillToken.java", "BodyUseAPI": ["project_rpg.behaviors.SkillToken.move(int,int)"], "Fixed commit": "f9ab365c57762b9f98ad4074121c6c47d570e273", "Url": "https://api.github.com/repos/chewisinho/project-rpg", "Date": "2016-06-17T04:59:51Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.util.ResourceLocator.getLong(java.lang.String,int)", "java.io.File.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fileSize > maximumFileSize) { org.apache.commons.io.FileUtils.deleteQuietly(tempFile); throw new javax.ws.rs.WebApplicationException(javax.ws.rs.core.Response.Status.PRECONDITION_FAILED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2232/buggy-version/web-core.src.main.java.org.silverpeas.attachment.web.SimpleDocumentResource.java", "BodyUseAPI": [], "Fixed commit": "7d51720bdcde96d572735f8946798fbab8a76caf", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Core", "Date": "2013-07-22T08:56:39Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((boolean) (o))) { return checkNotificationsPermission(context, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3247/buggy-version/app.src.main.java.com.tomer.alwayson.SettingsFragment.java", "BodyUseAPI": [], "Fixed commit": "bbf837ff5241aab5e6155079ecadb29f718df246", "Url": "https://api.github.com/repos/rosenpin/AlwaysOnDisplayAmoled", "Date": "2016-07-07T16:13:39Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Storage.Task.taskTypeKeyList.size()) == 0) { Storage.Task.implementTask(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5371/buggy-version/app.src.main.java.th.ac.kku.nu.injectionroom.activity.game.SelectTask.java", "BodyUseAPI": [], "Fixed commit": "0f87bfc85decf054f050adcee66c4c555b981d1c", "Url": "https://api.github.com/repos/nopphonyel/InjectionApp", "Date": "2017-11-01T02:46:42Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == null) type = com.orientechnologies.orient.core.metadata.schema.OType.EMBEDDEDMAP;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2967/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerSchemaAware2CSV.java", "BodyUseAPI": [], "Fixed commit": "a482b3ae6ec34c2563bc564d204a7e3be2e42199", "Url": "https://api.github.com/repos/w3aponx/orientdb", "Date": "2013-08-08T18:35:28Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isVibrating) == true) { vibrator.cancel(); isVibrating = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1733/buggy-version/app.src.main.java.com.example.adrian.vibrationapp.Settings.java", "BodyUseAPI": [], "Fixed commit": "0e4dd16f7789996087ebf31601dac27186f4dbf7", "Url": "https://api.github.com/repos/adense13/RehabTA", "Date": "2017-12-05T12:46:38Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chylex.bettersprinting.client.ClientModManager.isModDisabled()) { sneakToggle = sprintToggle = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2832/buggy-version/src.main.java.chylex.bettersprinting.client.player.CustomMovementInput.java", "BodyUseAPI": [], "Fixed commit": "47888acb6558dad46c3770a9859e425ac3b2ef4b", "Url": "https://api.github.com/repos/chylex/Better-Sprinting", "Date": "2015-12-03T22:24:44Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((br) != null) { try { br.close(); } catch (java.io.IOException ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6090/buggy-version/Tracking.src.remote.server.Server.java", "BodyUseAPI": [], "Fixed commit": "b5533736270d3ee9fe18a855fb13d455763a2db4", "Url": "https://api.github.com/repos/Ninespin/Tracking-AI", "Date": "2015-06-25T13:55:29Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pw) != null) { pw.write(\"Q:\"); pw.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6090/buggy-version/Tracking.src.remote.server.Server.java", "BodyUseAPI": [], "Fixed commit": "b5533736270d3ee9fe18a855fb13d455763a2db4", "Url": "https://api.github.com/repos/Ninespin/Tracking-AI", "Date": "2015-06-25T13:55:29Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(photo.getUrl())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5273/buggy-version/MuzeiGram.app.src.main.java.com.cstewart.android.muzeigram.controller.InstagramRemoteArtSource.java", "BodyUseAPI": [], "Fixed commit": "b71a72958ec39abf0c87b26826fd63e3ff52b6c0", "Url": "https://api.github.com/repos/cstew/MuzeiGram", "Date": "2015-06-03T02:08:06Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ticket.getMilestone().getProject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(project.getTicketDevelopers().contains(developer))) throw new com.spbpu.exceptions.NoRightsException((((\"User \" + (developer.getUser().getLogin())) + \" has no rights for project \") + (project.getName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5911/buggy-version/project.src.main.java.com.spbpu.user.TicketManager.java", "BodyUseAPI": ["com.spbpu.project.Project.getName()", "developer.getUser().getLogin()", "com.spbpu.user.TicketDeveloper.getUser()"], "Fixed commit": "009c730da5fc06c94940745506d118755b9b55cf", "Url": "https://api.github.com/repos/AbdullinAM/software_architectures", "Date": "2017-06-04T15:38:48Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEventClickListener) != null) { mEventClickListener.onEventViewClick(v, this, mEvent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4558/buggy-version/library.src.main.java.com.framgia.library.calendardayview.EventView.java", "BodyUseAPI": [], "Fixed commit": "04015f1c25a128e40b7d870bfb3110d8c30e83ff", "Url": "https://api.github.com/repos/khacpv/Calendar-Day-View", "Date": "2016-07-22T08:55:24Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getCurrentItem()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6028/buggy-version/src.main.java.tw.mics.spigot.plugin.evilpoint.listener.EvilPointListener.java", "BodyUseAPI": [], "Fixed commit": "0ceb81aad78f576c123d9e57ec52a0070a024c1f", "Url": "https://api.github.com/repos/MkIIServer/EvilPoint", "Date": "2016-11-25T13:08:09Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (scopedChanges != null) { notifyListener(listener, scopedChanges); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2649/buggy-version/src.main.java.de.uniluebeck.itm.tr.util.domobserver.DOMObserverImpl.java", "BodyUseAPI": ["de.uniluebeck.itm.tr.util.domobserver.DOMObserverImpl.notifyListener(de.uniluebeck.itm.tr.util.domobserver.DOMObserverListener,de.uniluebeck.itm.tr.util.domobserver.DOMTuple)"], "Fixed commit": "4a0fec1252762129c122c86539229195dcda879d", "Url": "https://api.github.com/repos/itm/itm-utils", "Date": "2011-11-12T15:23:28Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.TransferHandler.TransferSupport.getTransferable()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (xferable.isDataFlavorSupported(gov.sandia.n2a.ui.eq.PanelEquationTree.nodeFlavor)) xferNode = ((gov.sandia.n2a.ui.eq.PanelEquationTree.TransferableNode) (xferable.getTransferData(gov.sandia.n2a.ui.eq.PanelEquationTree.nodeFlavor)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/726/buggy-version/N2A.src.gov.sandia.n2a.ui.eq.PanelEquationTree.java", "BodyUseAPI": ["java.awt.datatransfer.Transferable.getTransferData(java.awt.datatransfer.DataFlavor)"], "Fixed commit": "ebc2126b022f0b1452a03564776d5a6c60847a72", "Url": "https://api.github.com/repos/frothga/n2a", "Date": "2017-06-23T14:15:37Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hasSensor.get(Sensor.TYPE_AMBIENT_TEMPERATURE)) && (hasSensor.get(Sensor.TYPE_RELATIVE_HUMIDITY))) { hasSensor.put(pl.narfsoftware.thermometer.utils.Sensors.TYPE_ABSOLUTE_HUMIDITY, true); hasSensor.put(pl.narfsoftware.thermometer.utils.Sensors.TYPE_DEW_POINT, true); }else { hasSensor.put(pl.narfsoftware.thermometer.utils.Sensors.TYPE_ABSOLUTE_HUMIDITY, false); hasSensor.put(pl.narfsoftware.thermometer.utils.Sensors.TYPE_DEW_POINT, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2570/buggy-version/src.pl.narfsoftware.thermometer.utils.Sensors.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Boolean>.put(int,boolean)", "java.util.HashMap<java.lang.Integer, java.lang.Boolean>.put(int,boolean)", "java.util.HashMap<java.lang.Integer, java.lang.Boolean>.put(int,boolean)", "java.util.HashMap<java.lang.Integer, java.lang.Boolean>.put(int,boolean)"], "Fixed commit": "f34d7337a514d6f90c486dc7ffa54ed0d00310e5", "Url": "https://api.github.com/repos/mateuszbuda/ThermometerExtended2", "Date": "2014-03-09T21:42:46Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IResource.getProject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (net.vtst.eclipse.easyxtext.ui.nature.NatureAddingEditorCallback.DISABLE.equals(project.getPersistentProperty(new org.eclipse.core.runtime.QualifiedName(net.vtst.eclipse.easyxtext.ui.nature.NatureAddingEditorCallback.QUALIFIER, projectNature.getId())))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6364/buggy-version/src.eclipse.net.vtst.eclipse.easyxtext.ui.src.net.vtst.eclipse.easyxtext.ui.nature.NatureAddingEditorCallback.java", "BodyUseAPI": [], "Fixed commit": "8f714e3e2774be5e1f7258b237c72a3d3f3e639c", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2013-05-14T23:53:26Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.dialogs.MessageDialog.open()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ret == 1) { project.setPersistentProperty(new org.eclipse.core.runtime.QualifiedName(net.vtst.eclipse.easyxtext.ui.nature.NatureAddingEditorCallback.QUALIFIER, projectNature.getId()), net.vtst.eclipse.easyxtext.ui.nature.NatureAddingEditorCallback.DISABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6364/buggy-version/src.eclipse.net.vtst.eclipse.easyxtext.ui.src.net.vtst.eclipse.easyxtext.ui.nature.NatureAddingEditorCallback.java", "BodyUseAPI": [], "Fixed commit": "8f714e3e2774be5e1f7258b237c72a3d3f3e639c", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2013-05-14T23:53:26Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (result != null) { android.util.Log.i(\"Server Response\", result.toString()); if ((delegate) != null) { delegate.postProcessing(result); } }else { android.util.Log.d(\"Received no response from server\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2541/buggy-version/front_end.ClassroomAppointmentSystem.app.src.main.java.ncucsie.cas.InternetComm.java", "BodyUseAPI": ["org.json.JSONObject.toString()", "ncucsie.cas.InternetComm.ApiResponse.postProcessing(org.json.JSONObject)", "android.util.Log.i(java.lang.String,result.toString())"], "Fixed commit": "dec063d757c5cadbaf3e8f0dddb78ce2879ceec0", "Url": "https://api.github.com/repos/snmg-bootcamp/classroom_appointment_system", "Date": "2014-12-14T06:41:51Z"},
{"Line": "=>748", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PATHMengAirline.beans.Aircraft.getAlternativeAircraft()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (aBaseAlt == null) { aBase.setAlternativeAircraft(aircraft.clone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4722/buggy-version/Xiahang.src.main.java.PATHMengAirline.beans.XiaMengAirlineSolution.java", "BodyUseAPI": [], "Fixed commit": "689e2a1a2ff35dbdf5afd9ac7fc8acb412cc799d", "Url": "https://api.github.com/repos/lingouzhu/PATHmengAirline", "Date": "2017-07-30T09:27:45Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ADVersion) == \"2008\") { LDAP_SERVER_POLICY_HINTS_OID = \"1.2.840.113556.1.4.2066\"; }else { LDAP_SERVER_POLICY_HINTS_OID = \"1.2.840.113556.1.4.2239\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7132/buggy-version/cas-server-cc.src.main.java.edu.conncoll.cas.jdbc.jdbcCamel.java", "BodyUseAPI": [], "Fixed commit": "7052c18a777a76cc74cc0db9a3f92067fd543ef5", "Url": "https://api.github.com/repos/ConnCollege/cas", "Date": "2015-06-23T19:06:36Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (installer.startsWith(\"com.android\")) { return \"https://play.google.com/store/apps/details?id=\" + packname; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/378/buggy-version/src.de.onyxbits.listmyapps.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b35bbeb2274fbe76bd0188b4f9839864393ff7ef", "Url": "https://api.github.com/repos/onyxbits/listmyaps", "Date": "2013-08-30T13:09:00Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((groups) != null) && ((groups.size()) != 0)) { android.support.design.widget.Snackbar.make(this.getCurrentFocus(), \"Reminders cleared\", Snackbar.LENGTH_SHORT).show(); groups = clearData(); adapter = new cmsc436.com.callyourmom.GroupsReminderAdapter(this, groups); rvReminders.swapAdapter(adapter, false); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4688/buggy-version/CallYourMom.app.src.main.java.cmsc436.com.callyourmom.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "699358002ebc152cd2a991c9d1cdb0f7bbd3d629", "Url": "https://api.github.com/repos/schott12521/CallYourMom", "Date": "2016-12-05T00:16:48Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fromRow > 0) query.setFirstResult((fromRow + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6115/buggy-version/atom-server.src.main.java.at.ac.fhcampuswien.atom.server.ServerSingleton.java", "BodyUseAPI": ["javax.persistence.Query.setFirstResult(int)"], "Fixed commit": "af6f248bef48367f6a725cf0d0ff8af5ffb38add", "Url": "https://api.github.com/repos/fhcampuswien/atom", "Date": "2016-04-19T11:55:29Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xpathReplaced == true) { sm.append(s); }else { sm.append(\"$\").append(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8693/buggy-version/components.humantask.org.wso2.carbon.humantask.src.main.java.org.wso2.carbon.humantask.core.engine.util.CommonTaskUtil.java", "BodyUseAPI": [], "Fixed commit": "23f8be691b6ef08c5eeed7c1546d226504fe06a5", "Url": "https://api.github.com/repos/warunalakshitha/carbon-business-process", "Date": "2015-06-07T23:22:45Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (user == null) { discord.BotUtils.sendPrivMessage(event.getAuthor().getOrCreatePMChannel(), ((\"User not found: |\" + userid) + \"|\"), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8807/buggy-version/src.main.java.events.EventListener.java", "BodyUseAPI": [], "Fixed commit": "5842e91d5a1c8205251a562b8d4610d62f6726ec", "Url": "https://api.github.com/repos/ModdyLP/MoMuOSB", "Date": "2017-08-25T07:56:34Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (category.equals(NotificationHelper.Category.ANALYSIS)) { org.iplantc.de.client.events.AnalysisUpdateEvent aue = new org.iplantc.de.client.events.AnalysisUpdateEvent(payload); instance.fireEvent(aue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2178/buggy-version/src.main.java.org.iplantc.de.client.views.panels.ViewNotificationMenu.java", "BodyUseAPI": [], "Fixed commit": "ca0487d7d406a566d2d72842ab0880abe3d79ed4", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/de-webapp", "Date": "2012-08-15T17:27:40Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sonia.scm.net.HttpClient.post(sonia.scm.net.HttpRequest)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (response != null) { int sc = response.getStatusCode(); if (sc >= 400) { sonia.scm.bamboo.BambooHook.logger.error(\"bamboo returned status code {}\", sc); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5034/buggy-version/src.main.java.sonia.scm.bamboo.BambooHook.java", "BodyUseAPI": ["sonia.scm.net.HttpResponse.getStatusCode()"], "Fixed commit": "aa1e8201cc2b4f53b15bbaab57dfa0ef94c2a66c", "Url": "https://api.github.com/repos/soudmaijer/scm-bamboo-plugin", "Date": "2013-05-16T12:25:01Z"},
{"Line": "=>2893", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.overture.ast.expressions.PExp.apply(eu.compassresearch.core.typechecker.api.CmlRootVisitor,org.overture.typechecker.TypeCheckInfo)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(typeComparator.isSubType(guardType, new org.overture.ast.types.ABooleanBasicType()))) { TypeErrorMessages.INCOMPATIBLE_TYPE.customizeMessage(\"Boolean\", (guardType + \"\")); node.setType(issueHandler.addTypeError(guard, TypeErrorMessages.INCOMPATIBLE_TYPE.customizeMessage(\"Boolean\", (\"a guard of type \" + guardType)))); return node.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7438/buggy-version/core.typechecker.src.main.visitors.eu.compassresearch.core.typechecker.TCActionVisitor.java", "BodyUseAPI": ["eu.compassresearch.core.typechecker.api.TypeIssueHandler.addTypeError(org.overture.ast.expressions.PExp,TypeErrorMessages.INCOMPATIBLE_TYPE.customizeMessage(\"Boolean\", (\"a guard of type \" + guardType)))", "TypeErrorMessages.INCOMPATIBLE_TYPE.customizeMessage(java.lang.String,(guardType + \"\"))", "TypeErrorMessages.INCOMPATIBLE_TYPE.customizeMessage(java.lang.String,(\"a guard of type \" + guardType))", "eu.compassresearch.ast.actions.ANonDeterministicAltStatementAction.setType(issueHandler.addTypeError(guard, TypeErrorMessages.INCOMPATIBLE_TYPE.customizeMessage(\"Boolean\", (\"a guard of type \" + guardType))))"], "Fixed commit": "71371705bfaff66ffd7d1603110a41b3717978c7", "Url": "https://api.github.com/repos/symphonytool/symphony", "Date": "2013-09-05T11:10:47Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.inRoom()) { player.performRoomAction(RoomAction.LEAVE_ROOM, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1691/buggy-version/Icarus-Server.src.main.java.org.alexdev.icarus.game.util.RoomUtil.java", "BodyUseAPI": ["org.alexdev.icarus.game.player.Player.performRoomAction(RoomAction.LEAVE_ROOM,boolean)"], "Fixed commit": "2806d58c2e06548168f6fb55b870bf595addee01", "Url": "https://api.github.com/repos/Quackster/Icarus", "Date": "2017-12-02T14:42:28Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.glowstone.block.state.GlowDispenser.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inv.getItem(7).getType()) != (org.bukkit.Material.AIR)) allAir = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1736/buggy-version/src.main.java.net.glowstone.block.state.GlowDispenser.java", "BodyUseAPI": [], "Fixed commit": "97a0ea856c097c66e35aa6e64ef5a1acc58eb351", "Url": "https://api.github.com/repos/Christian7573/Glowstone", "Date": "2017-05-07T20:01:49Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allAir) { return 0; }else { int slot = 0; int tries = 0; while (true) { slot = net.glowstone.block.state.GlowDispenser.random.nextInt(9); if ((inv.getItem(slot).getType()) != (org.bukkit.Material.AIR)) break; tries += 1; if (tries == 20) { int i = 0; while (i < 9) { if ((inv.getItem(i).getType()) != (org.bukkit.Material.AIR)) { slot = i; break; } } break; } } return slot; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1736/buggy-version/src.main.java.net.glowstone.block.state.GlowDispenser.java", "BodyUseAPI": [], "Fixed commit": "97a0ea856c097c66e35aa6e64ef5a1acc58eb351", "Url": "https://api.github.com/repos/Christian7573/Glowstone", "Date": "2017-05-07T20:01:49Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.glowstone.block.state.GlowDispenser.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inv.getItem(5).getType()) != (org.bukkit.Material.AIR)) allAir = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1736/buggy-version/src.main.java.net.glowstone.block.state.GlowDispenser.java", "BodyUseAPI": [], "Fixed commit": "97a0ea856c097c66e35aa6e64ef5a1acc58eb351", "Url": "https://api.github.com/repos/Christian7573/Glowstone", "Date": "2017-05-07T20:01:49Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.glowstone.block.state.GlowDispenser.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inv.getItem(4).getType()) != (org.bukkit.Material.AIR)) allAir = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1736/buggy-version/src.main.java.net.glowstone.block.state.GlowDispenser.java", "BodyUseAPI": [], "Fixed commit": "97a0ea856c097c66e35aa6e64ef5a1acc58eb351", "Url": "https://api.github.com/repos/Christian7573/Glowstone", "Date": "2017-05-07T20:01:49Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.glowstone.block.state.GlowDispenser.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inv.getItem(6).getType()) != (org.bukkit.Material.AIR)) allAir = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1736/buggy-version/src.main.java.net.glowstone.block.state.GlowDispenser.java", "BodyUseAPI": [], "Fixed commit": "97a0ea856c097c66e35aa6e64ef5a1acc58eb351", "Url": "https://api.github.com/repos/Christian7573/Glowstone", "Date": "2017-05-07T20:01:49Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.glowstone.block.state.GlowDispenser.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inv.getItem(8).getType()) != (org.bukkit.Material.AIR)) allAir = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1736/buggy-version/src.main.java.net.glowstone.block.state.GlowDispenser.java", "BodyUseAPI": [], "Fixed commit": "97a0ea856c097c66e35aa6e64ef5a1acc58eb351", "Url": "https://api.github.com/repos/Christian7573/Glowstone", "Date": "2017-05-07T20:01:49Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.glowstone.block.state.GlowDispenser.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inv.getItem(2).getType()) != (org.bukkit.Material.AIR)) allAir = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1736/buggy-version/src.main.java.net.glowstone.block.state.GlowDispenser.java", "BodyUseAPI": [], "Fixed commit": "97a0ea856c097c66e35aa6e64ef5a1acc58eb351", "Url": "https://api.github.com/repos/Christian7573/Glowstone", "Date": "2017-05-07T20:01:49Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (datasets.isEmpty()) { doneAdding = true; }else { new java.lang.Thread(() -> addAll(datasets)).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7935/buggy-version/olca-cloud.src.main.java.org.openlca.cloud.api.data.ModelStream.java", "BodyUseAPI": [], "Fixed commit": "90a06e7c6e5872eac6aac28fb1c3df9671a1f578", "Url": "https://api.github.com/repos/GreenDelta/olca-modules", "Date": "2017-04-11T08:48:47Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.startsWith(\"./\")) && (TOC19.Compatibility.isWindows())) { file = file.replaceFirst(\"./\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7785/buggy-version/src.TOC19.TOC19.Compatibility.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "a1dfde7b556e1daeca19b8495db139a7238936b6", "Url": "https://api.github.com/repos/JarrahGos/TOC19", "Date": "2015-04-03T11:47:35Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resourceStream2 != null) { return resourceStream2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8182/buggy-version/src.de.gurkenlabs.util.io.FileUtilities.java", "BodyUseAPI": [], "Fixed commit": "50b14276fba7873f7d02e377f6ca05899beb4fc8", "Url": "https://api.github.com/repos/gurkenlabs/litiengine", "Date": "2017-04-25T02:00:10Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.guacamole.environment.Environment.getProperty(LDAPGuacamoleProperties.LDAP_DEREFERENCE_ALIASES,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (derefAliases.equals(\"never\")) return 0; else { logger.error(\"Invalid value given for ldap-dereference-aliases.\"); logger.debug(\"Received {} but expected one of the following: always, finding, searching, never.\", derefAliases); throw new org.apache.guacamole.GuacamoleException(\"Invalid valid for ldap-dereference-aliases.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7790/buggy-version/extensions.guacamole-auth-ldap.src.main.java.org.apache.guacamole.auth.ldap.ConfigurationService.java", "BodyUseAPI": ["org.apache.guacamole.auth.ldap.ConfigurationService.debug(java.lang.String,java.lang.String)"], "Fixed commit": "c0a1b692d1151162df87a2a3749e53f27833db14", "Url": "https://api.github.com/repos/necouchman/guacamole-client", "Date": "2017-03-20T00:45:52Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_player.get(projector.getValue().getAttackerID())) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5583/buggy-version/pem.PEM.java", "BodyUseAPI": [], "Fixed commit": "98e30d7df82cd2b593f435e84d8ea00e38f13899", "Url": "https://api.github.com/repos/jaidTw/FatelTale", "Date": "2017-06-27T18:59:18Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((d.y) == 0) { if ((d.x) > 0) { return 0; } return 180; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5583/buggy-version/entity.AngleEmitter.java", "BodyUseAPI": [], "Fixed commit": "98e30d7df82cd2b593f435e84d8ea00e38f13899", "Url": "https://api.github.com/repos/jaidTw/FatelTale", "Date": "2017-06-27T18:59:18Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deg < 0) { intMin = intMin * (-1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/657/buggy-version/app.quba.service.QubaPositionSyncer.java", "BodyUseAPI": [], "Fixed commit": "97d4d3d2b201a0d9b4b262a0bc5181194d3ac3ff", "Url": "https://api.github.com/repos/metno/poseidon-rest", "Date": "2017-09-13T12:48:10Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doubleBackToExitPressedOnce) { super.onBackPressed(); return; }else webView.loadUrl(\"javascript:app.back()\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2208/buggy-version/app.src.main.java.org.votingsystem.activity.BrowserVSActivity.java", "BodyUseAPI": [], "Fixed commit": "ba202697b1fbadfdbfbd5186b1fe97e8fa872551", "Url": "https://api.github.com/repos/votingsystem/votingsystem-android-client", "Date": "2015-11-05T12:07:35Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultSet == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5354/buggy-version/src.main.java.com.ohadr.common.utils.JsonUtils.java", "BodyUseAPI": [], "Fixed commit": "916429a3a435625e69e011cb40001fe8e7b88fd2", "Url": "https://api.github.com/repos/OhadR/ohadr.commons", "Date": "2017-01-29T08:31:31Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Minuten > (this.minuten)) this.stunden = (this.stunden) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5936/buggy-version/src.Time.java", "BodyUseAPI": [], "Fixed commit": "563c4f14894efd0553ae33388f17b95b4c20470b", "Url": "https://api.github.com/repos/Craexy/IM-Challenge", "Date": "2017-10-10T17:18:45Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((username.isEmpty()) | (password.isEmpty())) { postFeedback(\"Please enter both a username and password\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3344/buggy-version/src.client.views.mainMenu.MainMenuView.java", "BodyUseAPI": [], "Fixed commit": "f600d464a313d45dfdc845054c79666b1754e19f", "Url": "https://api.github.com/repos/dabockster/Prometheus", "Date": "2015-04-22T20:57:03Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempNode == (this.front)) && (tempNode == (this.back))) { this.front = null; this.back = null; }else if (tempNode == (this.front)) { nextNode.prev = null; this.front = nextNode; }else if (tempNode == (this.back)) { prevNode.next = null; this.back = prevNode; }else { nextNode.prev = prevNode; prevNode.next = nextNode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1527/buggy-version/project1-master-2e26038fd77b3107cc6f17f8d035b7698bfe37cb.src.main.java.datastructures.concrete.DoubleLinkedList.java", "BodyUseAPI": [], "Fixed commit": "03e195b0db86d2f565e3174bd004b8d0c6f148d5", "Url": "https://api.github.com/repos/aqt21/CSE373-Project1", "Date": "2017-10-12T03:49:53Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSchemaForInternalPropagation().getGridRow()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((internalSchemaGridRows != null) && (!(internalSchemaGridRows.isEmpty()))) { java.util.Map<java.lang.String, hydrograph.ui.datastructure.property.ComponentsOutputSchema> schemaMap = new java.util.HashMap<>(); hydrograph.ui.datastructure.property.ComponentsOutputSchema componentsOutputSchema = new hydrograph.ui.datastructure.property.ComponentsOutputSchema(); java.util.List<hydrograph.ui.datastructure.property.FixedWidthGridRow> fixedWidthGridRows = SchemaPropagation.INSTANCE.convertGridRowsSchemaToFixedSchemaGridRows(internalSchemaGridRows); componentsOutputSchema.setFixedWidthGridRowsOutputFields(fixedWidthGridRows); schemaMap.put(Constants.FIXED_OUTSOCKET_ID, componentsOutputSchema); getComponent().getProperties().put(Constants.SCHEMA_TO_PROPAGATE, schemaMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1992/buggy-version/hydrograph.ui.hydrograph.ui.propertywindow.src.main.java.hydrograph.ui.propertywindow.widgets.customwidgets.TextBoxWithIsParameterCheckBoxWidget.java", "BodyUseAPI": ["SchemaPropagation.INSTANCE.convertGridRowsSchemaToFixedSchemaGridRows(java.util.List<hydrograph.ui.datastructure.property.GridRow>)"], "Fixed commit": "a9a956edc4119f39a89c7752923fba85cca9ede2", "Url": "https://api.github.com/repos/prateemt/Hydrograph", "Date": "2017-04-26T06:19:05Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editTextToeic.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (stringScore.equals(\"\")) { android.widget.Toast.makeText(this, \"\ud1a0\uc775\uc810\uc218\ub97c \uc785\ub825\ud574\uc8fc\uc138\uc694.\", Toast.LENGTH_LONG).show(); }else { int toeicScore = java.lang.Integer.parseInt(stringScore); if ((toeicScore < 0) && (toeicScore > 990)) { android.widget.Toast.makeText(this, \"\uc62c\ubc14\ub978 \ud1a0\uc775\uc810\uc218\ub97c \uc785\ub825\ud574\uc8fc\uc138\uc694.\", Toast.LENGTH_LONG).show(); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8181/buggy-version/app.src.main.java.com.example.leanne.capstonedesign_1_.ExtraInfoActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "9637b45e28994bf39925f344675fc88f5f052969", "Url": "https://api.github.com/repos/kiwi1618/CapstoneProject", "Date": "2016-04-13T07:58:59Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new java.io.File(dir, filename).isFile()) { for (java.lang.String extension : extensions) if (filename.toLowerCase().endsWith(extension)) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5243/buggy-version/app.src.main.java.com.horaapps.leafpic.Base.ImageFileFilter.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "04bf2801f81fbc22ac5b7ef69fc2fb164d8b5fd7", "Url": "https://api.github.com/repos/HoraApps/LeafPic", "Date": "2016-06-23T21:43:53Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.theotech.ceaselessandroid.realm.pojo.NotePOJO.getPeopleTagged()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((peopleTagged == null) || ((peopleTagged.size()) == 0)) { holder.notePeopleTagged.setVisibility(View.GONE); holder.thumbnail1.setVisibility(View.INVISIBLE); holder.thumbnail2.setVisibility(View.INVISIBLE); }else { holder.notePeopleTagged.setVisibility(View.VISIBLE); holder.thumbnail1.setVisibility(View.VISIBLE); holder.thumbnail2.setVisibility(View.VISIBLE); if ((peopleTagged.size()) > 0) { android.net.Uri thumbnailUri = org.theotech.ceaselessandroid.util.CommonUtils.getContactPhotoUri(context.getContentResolver(), note.getPeopleTagged().get(0), false); com.squareup.picasso.Picasso.with(context).load(thumbnailUri).placeholder(R.drawable.placeholder_user).fit().into(holder.thumbnail1); } if ((peopleTagged.size()) > 1) { android.net.Uri thumbnailUri = org.theotech.ceaselessandroid.util.CommonUtils.getContactPhotoUri(context.getContentResolver(), note.getPeopleTagged().get(1), false); com.squareup.picasso.Picasso.with(context).load(thumbnailUri).placeholder(R.drawable.placeholder_user).fit().into(holder.thumbnail2); }else { holder.thumbnail2.setVisibility(View.INVISIBLE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7048/buggy-version/app.src.main.java.org.theotech.ceaselessandroid.fragment.JournalFragment.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "f29d96dadb2da30df73404d9e2375bc3add51c21", "Url": "https://api.github.com/repos/ceaseless-prayer/CeaselessAndroid", "Date": "2015-11-13T00:56:04Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((k) >= (towerList.size())) { k = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2315/buggy-version/teedee.src.com.me.teedee.screens.MapScreen.java", "BodyUseAPI": [], "Fixed commit": "e7cf736c4c98269ce80cf0dea1df43cc2bce4bff", "Url": "https://api.github.com/repos/Nieo/teedee", "Date": "2014-05-14T11:00:19Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (outWriter != null) { outWriter.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/464/buggy-version/src.by.bsuir.logic.XmlParser.java", "BodyUseAPI": ["java.io.StringWriter.close()"], "Fixed commit": "a94e833b04c105bfa6ae26413537cb594fd2ccd3", "Url": "https://api.github.com/repos/Dmitriy333/OOP3-4", "Date": "2014-12-07T13:10:39Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((startDateString != null) && (!(startDateString.isEmpty()))) { startDate = javax.xml.bind.DatatypeConverter.parseDateTime(startDateString).getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9234/buggy-version/statemonitor.src.main.java.dk.statsbiblioteket.mediaplatform.workflowstatemonitor.HibernatedStateManagerWebservice.java", "BodyUseAPI": ["javax.xml.bind.DatatypeConverter.parseDateTime(java.lang.String)", "javax.xml.bind.DatatypeConverter.parseDateTime(startDateString).getTime()"], "Fixed commit": "60d1071cd4179f0acefda666384100eeaf858ccb", "Url": "https://api.github.com/repos/statsbiblioteket/workflowstatemonitor", "Date": "2012-05-30T05:24:35Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((startDateString != null) && (!(startDateString.isEmpty()))) { startDate = javax.xml.bind.DatatypeConverter.parseDateTime(startDateString).getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9234/buggy-version/statemonitor.src.main.java.dk.statsbiblioteket.mediaplatform.workflowstatemonitor.HibernatedStateManagerWebservice.java", "BodyUseAPI": ["javax.xml.bind.DatatypeConverter.parseDateTime(startDateString).getTime()", "javax.xml.bind.DatatypeConverter.parseDateTime(java.lang.String)"], "Fixed commit": "60d1071cd4179f0acefda666384100eeaf858ccb", "Url": "https://api.github.com/repos/statsbiblioteket/workflowstatemonitor", "Date": "2012-05-30T05:24:35Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((endDateString != null) && (!(endDateString.isEmpty()))) { endDate = javax.xml.bind.DatatypeConverter.parseDateTime(endDateString).getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9234/buggy-version/statemonitor.src.main.java.dk.statsbiblioteket.mediaplatform.workflowstatemonitor.HibernatedStateManagerWebservice.java", "BodyUseAPI": ["javax.xml.bind.DatatypeConverter.parseDateTime(java.lang.String)", "javax.xml.bind.DatatypeConverter.parseDateTime(endDateString).getTime()"], "Fixed commit": "60d1071cd4179f0acefda666384100eeaf858ccb", "Url": "https://api.github.com/repos/statsbiblioteket/workflowstatemonitor", "Date": "2012-05-30T05:24:35Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((endDateString != null) && (!(endDateString.isEmpty()))) { endDate = javax.xml.bind.DatatypeConverter.parseDateTime(endDateString).getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9234/buggy-version/statemonitor.src.main.java.dk.statsbiblioteket.mediaplatform.workflowstatemonitor.HibernatedStateManagerWebservice.java", "BodyUseAPI": ["javax.xml.bind.DatatypeConverter.parseDateTime(java.lang.String)", "javax.xml.bind.DatatypeConverter.parseDateTime(endDateString).getTime()"], "Fixed commit": "60d1071cd4179f0acefda666384100eeaf858ccb", "Url": "https://api.github.com/repos/statsbiblioteket/workflowstatemonitor", "Date": "2012-05-30T05:24:35Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(obj instanceof gruppn.kasslr.model.Vocabulary)) { return false; }else { return (this.getUniversalId()) == (((gruppn.kasslr.model.Vocabulary) (obj)).getUniversalId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7164/buggy-version/KasslR.app.src.main.java.gruppn.kasslr.model.Vocabulary.java", "BodyUseAPI": [], "Fixed commit": "a6714fe86e7eafb7956c51ec6b45a54d9e0fa0ee", "Url": "https://api.github.com/repos/meemsbror/DAT255", "Date": "2016-10-21T06:41:10Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File f : files) { if (f.getName().endsWith(\".conf\")) { props = com.sixsq.slipstream.configuration.Configuration.loadPropertiesFromURL(f.toURI(), props); java.lang.String connectorInstance = props.getProperty(connectorInstancePropName); if (com.sixsq.slipstream.persistence.Parameter.hasValueSet(connectorInstance)) { newConnectorsInstances.add(connectorInstance); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7686/buggy-version/jar-connector.src.main.java.com.sixsq.slipstream.configuration.Configuration.java", "BodyUseAPI": [], "Fixed commit": "50d550d3215cd02d174d2340c50bcf047467f7de", "Url": "https://api.github.com/repos/slipstream/SlipStreamServer", "Date": "2014-09-18T08:50:51Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(vg.civcraft.mc.mercury.MercuryAPI.instance.playersByServer_.containsKey(server))) vg.civcraft.mc.mercury.MercuryAPI.instance.playersByServer_.put(server, new java.util.ArrayList<vg.civcraft.mc.mercury.PlayerDetails>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5334/buggy-version/src.vg.civcraft.mc.mercury.MercuryAPI.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<vg.civcraft.mc.mercury.PlayerDetails>>.put(java.lang.String,java.util.ArrayList<vg.civcraft.mc.mercury.PlayerDetails>)"], "Fixed commit": "9271af4c949afef9510efcab2bef974c36daf6e1", "Url": "https://api.github.com/repos/Civcraft/Mercury", "Date": "2016-07-02T22:32:08Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (railo.commons.lang.StringUtil.isEmpty(name, true)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8792/buggy-version/railo-java.railo-core.src.railo.runtime.tag.ThreadTag.java", "BodyUseAPI": [], "Fixed commit": "ea61dc0b9c28604c81f2cf0baf54926a51d4e910", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-12-15T13:26:14Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (part instanceof org.eclipse.ui.IEditorPart) { de.ovgu.featureide.ui.UIPlugin.getDefault().logInfo(\"Team2: FeatureStatistics -> partActivated\"); org.eclipse.ui.ide.ResourceUtil.getResource(((org.eclipse.ui.IEditorPart) (part)).getEditorInput()); setEditor(((org.eclipse.ui.IEditorPart) (part))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3462/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.statistics.ui.FeatureStatisticsView.java", "BodyUseAPI": [], "Fixed commit": "cf6d80060c43b77505eef30f8c95d58a02c56dd4", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-10-05T11:45:06Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.vmorev.amazon.utils.SDBDataHelper.convertValueToString(org.apache.commons.beanutils.PropertyUtils.getProperty(obj, field.getName()),java.lang.Class<?>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (value != null) attributes.add(new com.github.vmorev.amazon.ReplaceableAttribute().withName(field.getName()).withValue(value));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9048/buggy-version/src.main.java.com.github.vmorev.amazon.SDBDomain.java", "BodyUseAPI": ["java.util.List<com.github.vmorev.amazon.ReplaceableAttribute>.add(new com.github.vmorev.amazon.ReplaceableAttribute().withName(field.getName()).withValue(value))", "new com.github.vmorev.amazon.ReplaceableAttribute().withName(field.getName()).withValue(java.lang.String)"], "Fixed commit": "926cd086320ac0c69416dfee8e42cf17f5db2828", "Url": "https://api.github.com/repos/vmorev/amazon-common", "Date": "2013-02-20T12:25:43Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFragment3) == null) { android.util.Log.i(com.example.sven.fragementdemo.Main2Activity.TAG, \"mFragment3 is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2572/buggy-version/app.src.main.java.com.example.sven.fragementdemo.Main2Activity.java", "BodyUseAPI": [], "Fixed commit": "f8981bc0726416eccca1dc7b9b6be58a10200d9f", "Url": "https://api.github.com/repos/zhaoPATHowen-sven/FragmentDemo", "Date": "2017-06-14T17:06:29Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (HttpResult > 299) { com.google.gson.JsonObject errorObject = new com.google.gson.JsonObject(); errorObject.addProperty(\"message\", \"Error reserving from airline\"); return javax.ws.rs.core.Response.status(401).entity(rest.Reservations.gson.toJson(errorObject)).type(MediaType.APPLICATION_JSON).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1412/buggy-version/semesterSeedSP.src.java.rest.Reservations.java", "BodyUseAPI": [], "Fixed commit": "9c4db5b9d706e708d4a25b6b70616df7324ed4fc", "Url": "https://api.github.com/repos/ichti-git/TimeTravel", "Date": "2015-12-17T20:08:10Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isWindows) { url = new com.chanryma.wjzq.util.ConfigUtil().getClass().getClassLoader().getResource(com.chanryma.wjzq.util.ConfigUtil.INI_FILE_NAME).toString().substring(6); url = url.replace(\"%20\", \" \"); }else { url = new com.chanryma.wjzq.util.ConfigUtil().getClass().getClassLoader().getResource(com.chanryma.wjzq.util.ConfigUtil.INI_FILE_NAME).toString().substring(5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3373/buggy-version/NeverForget.src.com.chanryma.wjzq.util.ConfigUtil.java", "BodyUseAPI": [], "Fixed commit": "968f95d52e1dfcc820f247af6e547723e1cce185", "Url": "https://api.github.com/repos/Chanryma/NeverForget", "Date": "2017-06-25T17:01:28Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (turn.equals(p)) { decideMakeRndOrAutoMove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7966/buggy-version/src.es.ucm.fdi.tp.assignment5.SwingView.java", "BodyUseAPI": [], "Fixed commit": "3c46c3e73b8d38e5ebc668677bf4cd8bc4fa094e", "Url": "https://api.github.com/repos/sardnarellum/BoardGames", "Date": "2016-04-26T09:05:18Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tabLayout.getSelectedTabPosition()) == 2) { com.transitangel.transitangel.home.LiveTripFragment liveTripFragment = ((com.transitangel.transitangel.home.LiveTripFragment) (adapter.getRegisteredFragment(2))); if (liveTripFragment != null) { liveTripFragment.displayOnGoingTrip(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3433/buggy-version/app.src.main.java.com.transitangel.transitangel.home.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "5f276989b81fc2dc98148ee28825e96a77401fba", "Url": "https://api.github.com/repos/TransitHelper/TransitAngel", "Date": "2016-09-04T03:41:58Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (favorite) { mFavoriteBtn.setImageDrawable(jcotter.listenmoe.util.SDKUtil.getDrawable(getApplicationContext(), R.drawable.favorite_full)); }else { mFavoriteBtn.setImageDrawable(jcotter.listenmoe.util.SDKUtil.getDrawable(getApplicationContext(), R.drawable.favorite_empty)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7681/buggy-version/app.src.main.java.jcotter.listenmoe.ui.RadioActivity.java", "BodyUseAPI": [], "Fixed commit": "0c9edc76f25438713e4818612c9303e32d0949ec", "Url": "https://api.github.com/repos/LISTEN-moe/android-app", "Date": "2017-04-23T20:30:14Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((((titleField.getText().equals(\"\")) && (addressField.getText().equals(\"\"))) && (urlField.getText().equals(\"\"))) && (priceField.getText().equals(\"\"))) && (pointsField.getText().equals(\"\"))) && (levelField.getText().equals(\"\"))) && (yearsField.getText().equals(\"\"))) { statusLbl.setText(\"<html>Status: <span style=\\\"color:#FF0000\\\">Data Missing</span></html>\"); }else { try { courseList.add(new mathsmate.Course(titleField.getText(), addressField.getText(), urlField.getText(), java.lang.Integer.parseInt(priceField.getText()), java.lang.Integer.parseInt(pointsField.getText()), java.lang.Integer.parseInt(levelField.getText()), java.lang.Integer.parseInt(yearsField.getText()))); statusLbl.setText(\"<html>Status: <span style=\\\"color:#00FF00\\\">Added Record</span></html>\"); awaitingRecord = false; } catch (java.lang.NumberFormatException e) { java.lang.System.out.println((\"Error: \" + e)); statusLbl.setText(\"<html>Status: <span style=\\\"color:#FF0000\\\">Number Error</span></html>\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6208/buggy-version/src.mathsmate.CourseFinderAdmin.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()", "java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTextField.getText()", "java.util.ArrayList<mathsmate.Course>.add(mathsmate.Course)", "java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()", "java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTextField.getText()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "c6f7b27f3d8ca203b0ab20aa8e124a36b7379d0e", "Url": "https://api.github.com/repos/MathsMate/MathsMate", "Date": "2015-04-11T15:39:43Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (snapshot == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6579/buggy-version/app.src.main.java.babymonitor.example.com.babymonitor.TemperatureChangeListener.java", "BodyUseAPI": [], "Fixed commit": "61c3efcd5f31f8209b7aec291749c217185cfa67", "Url": "https://api.github.com/repos/Crownie/BabyMonitor", "Date": "2015-07-26T08:22:23Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { com.abyx.loyalty.extra.Utils.showInformationDialog(getString(R.string.unexpected_error), getString(R.string.unexpected_io_error), getContext(), new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { android.content.Intent intent = new android.content.Intent(getContext(), com.abyx.loyalty.activities.MainActivity.class); intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); startActivity(intent); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7155/buggy-version/app.src.main.java.com.abyx.loyalty.fragments.CardFragment.java", "BodyUseAPI": [], "Fixed commit": "10d4dde98b11b1266eedeb490b4a1ed5c0167d8b", "Url": "https://api.github.com/repos/AbyxBelgium/Loyalty", "Date": "2017-08-08T10:54:22Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Integer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pre_end == ((Storage.DATA_SIZE) - 1)) { pre_end = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1118/buggy-version/database.src.project.IndexHelperImpl.java", "BodyUseAPI": [], "Fixed commit": "2b2d94edb844a340ff63c01eac1de233471bd83d", "Url": "https://api.github.com/repos/dionwang88/cs542database", "Date": "2015-10-01T23:29:31Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((file.getParentFile()) != null) && ((!(file.getParentFile().exists())) || (!(file.getParentFile().isDirectory())))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6476/buggy-version/src.org.nschmidt.ldparteditor.helpers.compositetext.SubfileCompiler.java", "BodyUseAPI": [], "Fixed commit": "02d3acf91ae19cd1e3132b59c22db4d4e795e33b", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-02T05:56:25Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readyToPutVideo) { outputStream.putFrame(mask); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/857/buggy-version/src.org.usfirst.frc.team1895.robot.subsystems.FilteredCamera.java", "BodyUseAPI": [], "Fixed commit": "4be6823d45faa5bcd363024e46e31849f181a2b2", "Url": "https://api.github.com/repos/Lambda-Corps/2017Steamworks", "Date": "2017-04-06T17:17:40Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showErrorStack) { java.lang.String errorMessage = org.sagesource.common.utils.ExceptionMessageUtil.builtStackTraceStr(e, true); model.addAttribute(\"error_message\", errorMessage); }else { model.addAttribute(\"error_message\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2115/buggy-version/src.main.java.org.sagesource.web.base.BaseController.java", "BodyUseAPI": [], "Fixed commit": "bbf05eb8ab394a470b22452f5eee460c4e48d7dd", "Url": "https://api.github.com/repos/sagesource/sage-easy-template", "Date": "2017-03-15T02:08:57Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (initialInput != null) { job.setInitialInput(initialInput); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6578/buggy-version/hama.v3.1.src.main.java.in.dream_lab.goffish.job.DefaultJob.java", "BodyUseAPI": ["in.dream_lab.goffish.hama.GraphJob.setInitialInput(java.lang.String)"], "Fixed commit": "422af3be906336ffd5f25b8c483a20d52d8ac8e7", "Url": "https://api.github.com/repos/dream-lab/goffish_v3", "Date": "2017-04-04T10:20:24Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<T>.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (nrOfValues > 1) splitsDP.add(values.get((nrOfValues - 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1732/buggy-version/components-core.src.main.java.org.dllearner.utilities.split.DefaultNumericValuesSplitter.java", "BodyUseAPI": ["java.util.List<T>.get(int)", "java.util.List<T>.add(T)"], "Fixed commit": "d02d25093cf00ae54fdb7aecfeec82171038cacf", "Url": "https://api.github.com/repos/SmartDataAnalytics/DL-Learner", "Date": "2015-07-15T12:25:13Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.otaliastudios.cameraview.CameraController.shouldFlipSizes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (flip) targetMinSize.flip();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5522/buggy-version/cameraview.src.main.java.com.otaliastudios.cameraview.CameraController.java", "BodyUseAPI": [], "Fixed commit": "71c2feb70349d57d890586161452de7af27142fd", "Url": "https://api.github.com/repos/natario1/CameraView", "Date": "2017-11-14T16:07:13Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.otaliastudios.cameraview.CameraController.shouldFlipSizes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (flip) targetMinSize.flip();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5522/buggy-version/cameraview.src.main.java.com.otaliastudios.cameraview.CameraController.java", "BodyUseAPI": [], "Fixed commit": "71c2feb70349d57d890586161452de7af27142fd", "Url": "https://api.github.com/repos/natario1/CameraView", "Date": "2017-11-14T16:07:13Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["field.getParams().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((kvValue.value) instanceof org.nlpcn.es4sql.domain.MethodField) { return builder.script(new org.elasticsearch.script.Script(((org.nlpcn.es4sql.domain.MethodField) (kvValue.value)).getParams().get(1).toString())); }else { return builder.script(new org.elasticsearch.script.Script(kvValue.value.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7527/buggy-version/src.main.java.org.nlpcn.es4sql.query.maker.AggMaker.java", "BodyUseAPI": ["org.elasticsearch.search.aggregations.metrics.ValuesSourceMetricsAggregationBuilder.script(org.elasticsearch.script.Script)", "org.elasticsearch.search.aggregations.metrics.ValuesSourceMetricsAggregationBuilder.script(org.elasticsearch.script.Script)", "((org.nlpcn.es4sql.domain.MethodField) (kvValue.value)).getParams().get(int)", "kvValue.value.toString()", "((org.nlpcn.es4sql.domain.MethodField) (kvValue.value)).getParams()", "((org.nlpcn.es4sql.domain.MethodField) (kvValue.value)).getParams().get(1).toString()"], "Fixed commit": "dacd6b4cd1014eb574ab3904ca7e4824a1c899b3", "Url": "https://api.github.com/repos/allwefantasy/elasticsearch-sql", "Date": "2016-10-11T06:41:53Z"},
{"Line": "=>689", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c != 0) { com.killeent.Array.Array.reverse(arr, 0, ((arr.length) - 1)); com.killeent.Array.Array.reverse(arr, 0, (c - 1)); com.killeent.Array.Array.reverse(arr, c, ((arr.length) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7838/buggy-version/src.main.java.com.killeent.Array.Array.java", "BodyUseAPI": ["com.killeent.Array.Array.reverse(T[],int,int)", "com.killeent.Array.Array.reverse(T[],int,int)"], "Fixed commit": "696207e4a62a80481bf7cc3e3e58f39e4bcdb208", "Url": "https://api.github.com/repos/killeent/javalib", "Date": "2015-02-01T19:58:18Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(input.getText().toString().equals(\"\"))) { android.content.Intent intent = new android.content.Intent(getApplicationContext(), co.miniforge.corey.stringanalyzer.AnalyzerActivity.class); intent.putExtra(co.miniforge.corey.stringanalyzer.InputActivity.intentTag, input.getText().toString()); startActivity(intent); }else if (input.getText().toString().equals(\"\")) { errorToast(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6114/buggy-version/StringAnalyzer.app.src.main.java.co.miniforge.corey.stringanalyzer.InputActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,input.getText().toString())", "android.widget.EditText.getText()", "input.getText().toString().equals(java.lang.String)", "android.widget.EditText.getText()", "input.getText().toString()", "input.getText().toString()"], "Fixed commit": "2a5ea17a3359e13bb7217ec7468859452ad48507", "Url": "https://api.github.com/repos/ebenner91/Assignment03_StringAnalyzer", "Date": "2017-10-21T08:07:42Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.getEntityData().getCompoundTag(\"TPPI\").getBoolean(\"hasBook\"))) { player.getEntityData().setTag(\"TPPI\", TPPITweaks.eventHandler.getTag(player, false)); net.minecraft.item.ItemStack stack = ModItems.tppiBook.getBook(); player.inventory.addItemStackToInventory(stack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4608/buggy-version/src.tppitweaks.util.TPPIPlayerTracker.java", "BodyUseAPI": ["player.inventory.addItemStackToInventory(net.minecraft.item.ItemStack)", "net.minecraft.entity.player.EntityPlayer.getEntityData()", "player.getEntityData().setTag(java.lang.String,TPPITweaks.eventHandler.getTag(player, false))", "TPPITweaks.eventHandler.getTag(net.minecraft.entity.player.EntityPlayer,boolean)"], "Fixed commit": "e24ce8605cc03dcfa829a00dd8a1fa205644b614", "Url": "https://api.github.com/repos/TPPI-Dev/TPPI-Tweaks", "Date": "2014-01-05T04:50:20Z"},
{"Line": "=>586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3417/buggy-version/org.caleydo.core.src.org.caleydo.core.util.clusterer.algorithm.tree.TreeClusterer.java", "BodyUseAPI": [], "Fixed commit": "fc174e41c1427348330729bde8cc36e875c07a8a", "Url": "https://api.github.com/repos/Caleydo/caleydo", "Date": "2013-09-13T07:54:08Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerCommandPreprocessEvent.getPlayer()", "java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.legit2.Demigods.Utilities.DDeityUtil.invokeDeityCommand(player, args)) { event.setCancelled(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8035/buggy-version/src.com.legit2.Demigods.Listeners.DCommandListener.java", "BodyUseAPI": [], "Fixed commit": "7e4153a0d9c334767983f576bcbe3134ce677ccd", "Url": "https://api.github.com/repos/Clashnia/Minecraft-Demigods", "Date": "2013-02-05T04:18:07Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jooq.DSLContext.executeUpdate(edu.ipd.kit.crowdcontrol.proto.databasemodel.tables.records.ExperimentRecord)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == 1) { response.body(((\"experiment \" + expID) + \" started\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5438/buggy-version/src.main.java.edu.ipd.kit.crowdcontrol.proto.controller.CrowdComputingController.java", "BodyUseAPI": [], "Fixed commit": "bc22091be5a84e68de153319058f9cb7e3115244", "Url": "https://api.github.com/repos/coolcrowd/object-service", "Date": "2015-11-20T00:26:37Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["create.selectFrom(experiment).where(experiment.TITEL.eq(expID)).fetchOne()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((experimentRecord != null) && (experimentRecord.getRunning())) { response.body(((\"experiment \" + expID) + \" is already running\")); }else { response.body(((\"experiment \" + expID) + \" does not fulfill requirements\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5438/buggy-version/src.main.java.edu.ipd.kit.crowdcontrol.proto.controller.CrowdComputingController.java", "BodyUseAPI": [], "Fixed commit": "bc22091be5a84e68de153319058f9cb7e3115244", "Url": "https://api.github.com/repos/coolcrowd/object-service", "Date": "2015-11-20T00:26:37Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(vdir.exists())) { vdir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8854/buggy-version/src.net.pocketmine.server.VersionManagerActivity.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "b94fe3939e275bc0fa1e02448a0d803f58bb777a", "Url": "https://api.github.com/repos/PocketMine/PocketMine-Android", "Date": "2014-08-13T10:50:44Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (intent != null) { android.content.Intent target = intent.getParcelableExtra(\"notificationTarget\"); if (target != null) showNotification(target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8394/buggy-version/app.src.main.java.com.jifalops.wsnlocalize.toolbox.ServiceThreadApplication.java", "BodyUseAPI": ["android.content.Intent.getParcelableExtra(java.lang.String)"], "Fixed commit": "7a293141ffdf506335e55d78ee1836a7f811a4d9", "Url": "https://api.github.com/repos/jifalops/wsnlocalize", "Date": "2015-10-14T13:37:31Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bitnp.netcheckin2.service.LoginService.getmBalance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fBalance < (org.bitnp.netcheckin2.util.Global.INF)) { waveProgress.setProgress(0); waveProgress.setProgressTxt(\"\u672a\u77e5\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/44/buggy-version/app.src.main.java.org.bitnp.netcheckin2.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "26f66a22be2f66a5680821351d8217b0dea83b37", "Url": "https://api.github.com/repos/zhehuaz/BIT_NetCheckin2", "Date": "2015-03-30T14:57:13Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pack.indexOf(\"|\")) == (-1)) { throw new java.lang.IllegalArgumentException(\"Wrong expression, format: package.name|match-reg-exp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7565/buggy-version/junit.core.src.main.java.org.jboss.arquillian.junit.suite.resolve.PackageResolverStrategy.java", "BodyUseAPI": [], "Fixed commit": "271629ba46e2e289f917fe3eebf6ebd918b889ca", "Url": "https://api.github.com/repos/aslakknutsen/arquillian-core", "Date": "2015-03-11T13:10:35Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id > 100) id = id - 100;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6540/buggy-version/app.src.main.java.com.ghstudios.android.ui.detail.QuestDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "9d9c48e9fc794778680dbf3472266d718c834409", "Url": "https://api.github.com/repos/jaysondc/MHGenDatabase", "Date": "2016-07-01T18:43:20Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) > 100) id = (id) - 100;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6540/buggy-version/app.src.main.java.com.ghstudios.android.ui.ClickListeners.LocationClickListener.java", "BodyUseAPI": [], "Fixed commit": "9d9c48e9fc794778680dbf3472266d718c834409", "Url": "https://api.github.com/repos/jaysondc/MHGenDatabase", "Date": "2016-07-01T18:43:20Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.aumgn.diamondrush.DiamondRush.getGame()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (game.isPaused()) { throw new fr.aumgn.bukkitutils.command.exception.CommandError(\"Impossible de rejoindre la partie durant une phase de pause.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8604/buggy-version/src.main.java.fr.aumgn.diamondrush.command.JoinStageCommands.java", "BodyUseAPI": [], "Fixed commit": "77ed22842d2c9220f27c4b75695991d10263cdfd", "Url": "https://api.github.com/repos/aumgn/DiamondRush", "Date": "2012-04-24T07:11:39Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user.getCurrentEntry().getMachinesUsed().contains(m)) { cb.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5707/buggy-version/src.GUI.LogInAnotherUserPanel.java", "BodyUseAPI": [], "Fixed commit": "29fcefa3225af47af59b283cf4a9ba537d824bfe", "Url": "https://api.github.com/repos/nhetrick/MachineShop", "Date": "2013-06-14T20:32:47Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.equals(\".\")) && (getCurrentSide().contains(\".\"))) return; else if (onRightSide) right = (right) + s; else left = (left) + s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5328/buggy-version/src.edu.ucsb.cs56.projects.utilities.calculator.Calculator.java", "BodyUseAPI": [], "Fixed commit": "dfb86bb9421b4958a0ea4e8104d8e8e6f8d3e52f", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-utilities-calculator", "Date": "2016-11-18T01:18:58Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["a.getString().substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (needsEscapeChar(x)) { x = \"\\\\\".concat(x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5525/buggy-version/monticore-generator.src.main.java.de.monticore.languages.grammar.lexpatterns.RegExpBuilder.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "a1395573b067d517226437be991c45fd0acd5b5a", "Url": "https://api.github.com/repos/MontiCore/monticore", "Date": "2016-06-06T09:22:18Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.oracle.truffle.llvm.context.LLVMLanguage.contextOverwrite) == null) { return findContext0(createFindContextNode0()); }else { return com.oracle.truffle.llvm.context.LLVMLanguage.contextOverwrite; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3999/buggy-version/projects.com.oracle.truffle.llvm.context.src.com.oracle.truffle.llvm.context.LLVMLanguage.java", "BodyUseAPI": [], "Fixed commit": "18764be79fc40efb765ec0f3d95370905014afb2", "Url": "https://api.github.com/repos/pointhi/sulong", "Date": "2017-01-03T13:53:00Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.oracle.truffle.llvm.context.LLVMLanguage.contextOverwrite) == null) { return findContext(node); }else { return com.oracle.truffle.llvm.context.LLVMLanguage.contextOverwrite; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3999/buggy-version/projects.com.oracle.truffle.llvm.context.src.com.oracle.truffle.llvm.context.LLVMLanguage.java", "BodyUseAPI": [], "Fixed commit": "18764be79fc40efb765ec0f3d95370905014afb2", "Url": "https://api.github.com/repos/pointhi/sulong", "Date": "2017-01-03T13:53:00Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.jimple.toolkits.callgraph.Edge.getTgt()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(visitedMap.get(tgtMeth))) worklist.add(tgtMeth);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5885/buggy-version/src.edu.utexas.cgrex.QueryManager.java", "BodyUseAPI": ["java.util.List<soot.SootMethod>.add(soot.SootMethod)"], "Fixed commit": "259d4f23f68ba179eec657a289dc5b19b101871a", "Url": "https://api.github.com/repos/fredfeng/CallsiteResolver", "Date": "2014-04-15T04:29:08Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bluetoothScanner) == null) { bluetoothScanner = bluetoothAdapter.getBluetoothLeScanner(); settings = new android.bluetooth.le.ScanSettings.Builder().setScanMode(ScanSettings.SCAN_MODE_LOW_LATENCY).setMatchMode(ScanSettings.MATCH_MODE_AGGRESSIVE).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1275/buggy-version/src.android.BLECentralPlugin.java", "BodyUseAPI": [], "Fixed commit": "1aa3c21eb8fc40ff76dec12d648ceda3344876e9", "Url": "https://api.github.com/repos/ddugue/cordova-plugin-ble-central", "Date": "2017-06-12T16:24:49Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getServerPort()) == 80) { returnToUrl = java.lang.String.format(\"http://%s/openid/verify\", request.getServerName()); }else { returnToUrl = java.lang.String.format(\"http://%s:%d/openid/verify\", request.getServerName(), request.getServerPort()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5395/buggy-version/src.main.java.uk.co.froot.demo.openid.resources.PublicOpenIDResource.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,request.getServerName(),request.getServerPort())", "uk.co.froot.demo.openid.resources.PublicOpenIDResource.getServerName()", "java.lang.String.format(java.lang.String,request.getServerName())", "uk.co.froot.demo.openid.resources.PublicOpenIDResource.getServerPort()", "uk.co.froot.demo.openid.resources.PublicOpenIDResource.getServerName()"], "Fixed commit": "24cde041f237747c2fc6d61a1ee0ec56a904293b", "Url": "https://api.github.com/repos/gary-rowe/DropwizardOpenID", "Date": "2013-02-15T16:03:50Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sclass.equals(\"\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3801/buggy-version/src.PluginLoader.java", "BodyUseAPI": [], "Fixed commit": "46ae407ac87590a6d72187eca074e15726a94435", "Url": "https://api.github.com/repos/shadow386/CanaryMod", "Date": "2010-09-18T23:09:53Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inst.target) instanceof uk.ac.man.cs.llvm.ir.types.FunctionType) { uk.ac.man.cs.llvm.ir.types.Type[] types = ((uk.ac.man.cs.llvm.ir.types.FunctionType) (inst.target)).getArgumentTypes(); for (int i = 0; i < (arguments.length); i++) { if ((types[i]) instanceof uk.ac.man.cs.llvm.ir.types.MetaType) { inst.arguments.add(new uk.ac.man.cs.llvm.ir.model.constants.MetadataConstant(arguments[i])); }else { inst.arguments.add(symbols.getSymbol(arguments[i], inst)); } } }else { for (int i = 0; i < (arguments.length); i++) { inst.arguments.add(symbols.getSymbol(arguments[i], inst)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7541/buggy-version/projects.uk.ac.man.cs.llvm.src.uk.ac.man.cs.llvm.ir.model.elements.VoidCallInstruction.java", "BodyUseAPI": ["uk.ac.man.cs.llvm.ir.model.Symbol.getArgumentTypes()", "uk.ac.man.cs.llvm.ir.model.Symbols.getSymbol(int,uk.ac.man.cs.llvm.ir.model.elements.VoidCallInstruction)", "uk.ac.man.cs.llvm.ir.model.Symbols.getSymbol(int,uk.ac.man.cs.llvm.ir.model.elements.VoidCallInstruction)", "java.util.List<uk.ac.man.cs.llvm.ir.model.Symbol>.add(uk.ac.man.cs.llvm.ir.model.constants.MetadataConstant)", "java.util.List<uk.ac.man.cs.llvm.ir.model.Symbol>.add(symbols.getSymbol(arguments[i], inst))", "java.util.List<uk.ac.man.cs.llvm.ir.model.Symbol>.add(symbols.getSymbol(arguments[i], inst))"], "Fixed commit": "0a9721448fc25da15de6d4d476fcd18491999e32", "Url": "https://api.github.com/repos/pointhi/sulong", "Date": "2016-09-15T13:13:17Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8037/buggy-version/app.src.main.java.com.mhacks4.maxamir.geospots.CreateMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "74422e5d15501b5b132aafbeaba1ed6a77ea5611", "Url": "https://api.github.com/repos/AmirAlavi/GeoSpots", "Date": "2014-09-06T13:49:08Z"},
{"Line": "=>851", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nameArr[((nameArr.length) - 1)].length()) == 1) { trimLength = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2770/buggy-version/FFR.src.com.example.fantasyfootballrankings.ClassFiles.HighLevel.java", "BodyUseAPI": [], "Fixed commit": "b1f0324b4cbaa860ee13ce04308e84451135f220", "Url": "https://api.github.com/repos/jbailey2010/FFR", "Date": "2015-10-04T07:41:26Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nameArr[((nameArr.length) - 1)].length()) == 1) { trimLength = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2770/buggy-version/FFR.src.com.example.fantasyfootballrankings.ClassFiles.HighLevel.java", "BodyUseAPI": [], "Fixed commit": "b1f0324b4cbaa860ee13ce04308e84451135f220", "Url": "https://api.github.com/repos/jbailey2010/FFR", "Date": "2015-10-04T07:41:26Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { attribute.add(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8609/buggy-version/src.main.java.com.qubit.terra.ldapclient.LdapClient.java", "BodyUseAPI": ["javax.naming.directory.Attribute.add(java.lang.String)"], "Fixed commit": "e69fd7384490c5a2682e885838c64ba384014070", "Url": "https://api.github.com/repos/qub-it/ldap-client", "Date": "2016-05-23T16:58:35Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraft.client.Minecraft.getMinecraft().currentScreen) instanceof net.minecraft.client.gui.inventory.GuiContainer) { if (!(event.isCanceled())) { if (!(isContainerTextFieldFocused())) { mezz.jei.input.IClickedIngredient ingredient = getIngeredientUnderMouseForKey(); if (ingredient != null) { int eventKey = org.lwjgl.input.Keyboard.getEventKey(); if ((eventKey == (codechicken.nei.NEIClientConfig.getKeyBinding(\"gui.usage\"))) || ((eventKey == (codechicken.nei.NEIClientConfig.getKeyBinding(\"gui.recipe\"))) && (codechicken.nei.util.NEIClientUtils.shiftKey()))) { codechicken.nei.recipe.GuiUsageRecipe.openRecipeGui(\"item\", ingredient.getValue()); } if (eventKey == (codechicken.nei.NEIClientConfig.getKeyBinding(\"gui.recipe\"))) { codechicken.nei.recipe.GuiCraftingRecipe.openRecipeGui(\"item\", ingredient.getValue()); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5304/buggy-version/src.main.java.codechicken.nei.jei.gui.ContainerEventHandler.java", "BodyUseAPI": [], "Fixed commit": "add1eba2070410bab42b6b98f6791f9e61d83835", "Url": "https://api.github.com/repos/TheCBProject/NotEnoughItems", "Date": "2016-12-18T21:03:59Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((keyCode == (android.view.KeyEvent.KEYCODE_BACK)) || (keyCode == (android.view.KeyEvent.KEYCODE_HOME))) || (keyCode == (android.view.KeyEvent.KEYCODE_MENU))) { return NO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7504/buggy-version/Cocoa4Android.src.org.cocoa4android.ui.UITextField.java", "BodyUseAPI": [], "Fixed commit": "030acf540c7fb46e8c31e64e799a2240618ca931", "Url": "https://api.github.com/repos/youmumzgit/Cocoa4Android", "Date": "2014-03-30T09:53:29Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (heightOfHeader < (this.heightOfHeader)) { heightOfHeader = this.heightOfHeader; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1812/buggy-version/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java", "BodyUseAPI": [], "Fixed commit": "2b427263c1e6a8edcccb4f8e2365c1623e66adc4", "Url": "https://api.github.com/repos/ribrne/PullToScaleHeaderLayout", "Date": "2015-12-08T12:59:57Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.whitesource.scm.ScmConnector.create(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (scmConnector != null) { scmConnector.deleteCloneDirectory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2664/buggy-version/src.main.java.org.whitesource.fs.WhitesourceFSAgent.java", "BodyUseAPI": ["org.whitesource.scm.ScmConnector.deleteCloneDirectory()"], "Fixed commit": "5c5b0ea5c61803c9331314f1f48aaac89c0955a4", "Url": "https://api.github.com/repos/whitesource/fs-agent", "Date": "2015-01-05T09:44:48Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((delta2.getElement().getJavaProject()) != null) java.lang.System.out.println((\">>>\" + (delta2.getElement().getJavaProject().getElementName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5593/buggy-version/incquery-deps-core.src.hu.bme.incquery.deps.core.ModelComparer.java", "BodyUseAPI": ["delta2.getElement().getJavaProject()", "org.eclipse.jdt.core.IJavaElementDelta.getElement()", "java.io.PrintStream.println((\">>>\" + (delta2.getElement().getJavaProject().getElementName())))", "delta2.getElement().getJavaProject().getElementName()"], "Fixed commit": "0e435999c8623a886838059daf308c52dd8a921b", "Url": "https://api.github.com/repos/donat/incquery-deps", "Date": "2012-09-04T09:38:38Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hu.bme.incquery.deps.core.Activator.getDefault().getWsService().isTracedProject(delta.getElement().getJavaProject())) { projects.add(child.getElement().getJavaProject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5593/buggy-version/incquery-deps-core.src.hu.bme.incquery.deps.core.ModelComparer.java", "BodyUseAPI": [], "Fixed commit": "0e435999c8623a886838059daf308c52dd8a921b", "Url": "https://api.github.com/repos/donat/incquery-deps", "Date": "2012-09-04T09:38:38Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blockLayer.isEmpty(x, y)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8510/buggy-version/Blockster.core.src.main.java.edu.chalmers.Blockster.core.util.Calculations.java", "BodyUseAPI": [], "Fixed commit": "4767ecc64039414a7a7948fb979089a49ba3e358", "Url": "https://api.github.com/repos/oskarjonefors/TDA367", "Date": "2014-04-07T11:15:04Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getProcessedBlock()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8510/buggy-version/Blockster.core.src.main.java.edu.chalmers.Blockster.core.Model.java", "BodyUseAPI": [], "Fixed commit": "4767ecc64039414a7a7948fb979089a49ba3e358", "Url": "https://api.github.com/repos/oskarjonefors/TDA367", "Date": "2014-04-07T11:15:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(obj instanceof com.macklive.objects.Message)) { toStore.setIndexedProperty(\"owner\", userService.getCurrentUser().getUserId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5904/buggy-version/src.com.macklive.storage.DataManager.java", "BodyUseAPI": [], "Fixed commit": "4afb55d83a0fd6c66e218233f8274b9de27af5e6", "Url": "https://api.github.com/repos/nmcmahon1215/MackLive", "Date": "2016-01-01T23:34:04Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task) != null) task.done();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8218/buggy-version/src.main.java.org.tellervo.desktop.bulkdataentry.view.QuickEntrySample.java", "BodyUseAPI": [], "Fixed commit": "9a439774c424ae23dca6f58fef9b3d4c986c30b9", "Url": "https://api.github.com/repos/ltrr-arizona-edu/tellervo", "Date": "2015-10-21T23:03:52Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cursor.getInt(13)) != 0) { times.setDestination(cursor.getColumnName(13)); }else { if ((cursor.getInt(14)) == 0) { times.setDestination(\"Milton Park\"); }else { times.setDestination(\"Langstone Campus\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2728/buggy-version/utilities.src.main.java.com.malcolm.unibusutilities.DatabaseHelper.java", "BodyUseAPI": ["android.database.Cursor.getInt(int)", "android.database.Cursor.getColumnName(int)", "com.malcolm.unibusutilities.Times.setDestination(cursor.getColumnName(13))"], "Fixed commit": "59ebd3b0a76230ea1d5d0861b894be260ab77297", "Url": "https://api.github.com/repos/malodita/portsunibusandroid", "Date": "2017-05-01T21:58:57Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sdf_manager.SDF_ManagerApp.isEmeraldMode()) { hql += \" where refBirds.refSpeciesRes6='1'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8195/buggy-version/src.main.java.sdf_manager.EditorSpecies.java", "BodyUseAPI": [], "Fixed commit": "ec6b342d8dc576ddcd696cfcdffd8104a3c39191", "Url": "https://api.github.com/repos/eea/eionet.nat2000.sdfmanager", "Date": "2014-09-16T12:43:44Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sdf_manager.SDF_ManagerApp.isEmeraldMode()) { hql += \"' and refSp.refSpeciesRes6 ='1'\"; }else { hql += \"' and refSp.refSpeciesAnnexII ='1'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8195/buggy-version/src.main.java.sdf_manager.EditorSpecies.java", "BodyUseAPI": [], "Fixed commit": "ec6b342d8dc576ddcd696cfcdffd8104a3c39191", "Url": "https://api.github.com/repos/eea/eionet.nat2000.sdfmanager", "Date": "2014-09-16T12:43:44Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mMainList.size()) > 0) { mList.clear(); mList.addAll(mMainList); mBeerList.setAdapter(mAdapter); mAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7000/buggy-version/app.src.main.java.iamdilipkumar.com.beerography.ui.activities.BeerListActivity.java", "BodyUseAPI": ["java.util.List<iamdilipkumar.com.beerography.models.Datum>.addAll(java.util.List<iamdilipkumar.com.beerography.models.Datum>)"], "Fixed commit": "e180e9fc6e4e615469f19ae53009a30311dfb3f8", "Url": "https://api.github.com/repos/dilipkumar4813/Android-Beerography", "Date": "2017-06-20T16:10:58Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mOccupied) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9148/buggy-version/pure2D.src.main.java.com.funzio.pure2D.utils.RectBinPacker.java", "BodyUseAPI": [], "Fixed commit": "06d7976168c81bfe6438d7871b5ff56919de003a", "Url": "https://api.github.com/repos/longngo78/pure2d", "Date": "2015-05-26T08:04:08Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.kumpelblase2.dragonslair.DragonsLairMain.getInstance().getConfig().getString(\"db.type\").equals(\"sqlite\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/831/buggy-version/src.de.kumpelblase2.dragonslair.DungeonManager.java", "BodyUseAPI": [], "Fixed commit": "763be663e0305a3bcec46bda991e58ef66c17257", "Url": "https://api.github.com/repos/kumpelblase2/Dragons-Lair", "Date": "2012-08-30T10:49:09Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.kumpelblase2.dragonslair.DragonsLairMain.getInstance().getConfig().getString(\"db.type\").equals(\"sqlite\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/831/buggy-version/src.de.kumpelblase2.dragonslair.DungeonManager.java", "BodyUseAPI": [], "Fixed commit": "763be663e0305a3bcec46bda991e58ef66c17257", "Url": "https://api.github.com/repos/kumpelblase2/Dragons-Lair", "Date": "2012-08-30T10:49:09Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.kumpelblase2.dragonslair.DragonsLairMain.getInstance().getConfig().getString(\"db.type\").equals(\"sqlite\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/831/buggy-version/src.de.kumpelblase2.dragonslair.DungeonManager.java", "BodyUseAPI": [], "Fixed commit": "763be663e0305a3bcec46bda991e58ef66c17257", "Url": "https://api.github.com/repos/kumpelblase2/Dragons-Lair", "Date": "2012-08-30T10:49:09Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.kumpelblase2.dragonslair.DragonsLairMain.getInstance().getConfig().getString(\"db.type\").equals(\"sqlite\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/831/buggy-version/src.de.kumpelblase2.dragonslair.DungeonManager.java", "BodyUseAPI": [], "Fixed commit": "763be663e0305a3bcec46bda991e58ef66c17257", "Url": "https://api.github.com/repos/kumpelblase2/Dragons-Lair", "Date": "2012-08-30T10:49:09Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((broadcast) != \"\") { com.vexsoftware.votifier.Votifier.getInstance().getServer().broadcastMessage(format(broadcast, username, amount, vote)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7684/buggy-version/listeners.essEcoListener.java", "BodyUseAPI": [], "Fixed commit": "061ad810032679571f904c916e48c1765d04263a", "Url": "https://api.github.com/repos/khobbits/votifier", "Date": "2011-10-18T02:03:19Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transfer) != \"\") { player.sendMessage(format(transfer, username, amount, vote)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7684/buggy-version/listeners.essEcoListener.java", "BodyUseAPI": [], "Fixed commit": "061ad810032679571f904c916e48c1765d04263a", "Url": "https://api.github.com/repos/khobbits/votifier", "Date": "2011-10-18T02:03:19Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thanks) != \"\") { player.sendMessage(format(thanks, username, amount, vote)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7684/buggy-version/listeners.essEcoListener.java", "BodyUseAPI": [], "Fixed commit": "061ad810032679571f904c916e48c1765d04263a", "Url": "https://api.github.com/repos/khobbits/votifier", "Date": "2011-10-18T02:03:19Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.josecognizant.popmovies.app.util.MovieUtilities.getMovieOrderSetting(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (movieOrderSetting.equals(MovieContract.FAVORITE_MOVIES)) { for (com.josecognizant.popmovies.domain.model.Movie movie : movies) { if ((movie.getFavorite()) == 1) { moviesToShow.add(movie); } } }else { for (com.josecognizant.popmovies.domain.model.Movie movie : movies) { if (movieOrderSetting.equals(movie.getOrderType())) { moviesToShow.add(movie); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3638/buggy-version/app.src.main.java.com.josecognizant.popmovies.app.util.MovieUtilities.java", "BodyUseAPI": ["java.lang.String.equals(movie.getOrderType())"], "Fixed commit": "2ac054897286805f87984350143e2346dac3a381", "Url": "https://api.github.com/repos/Jamargle/PopMovies", "Date": "2016-07-24T18:45:49Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bitbucket.jtransaction.transactions.TransactionalCallable<T>.getManagedResources()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resources == null) { throw new org.bitbucket.jtransaction.transactions.TransactionEmptyException(org.bitbucket.jtransaction.transactions.SimpleTransaction.EMPTY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1692/buggy-version/src.main.java.org.bitbucket.jtransaction.transactions.SimpleTransaction.java", "BodyUseAPI": [], "Fixed commit": "e0325a39a368d0b7a79534b33b8e522f475052a9", "Url": "https://api.github.com/repos/git-afsantos/jtransaction", "Date": "2013-08-14T15:01:44Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.PriorityQueue<simulation.ScheduledRoute>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (nextScheduledRoute != null) currentTime = nextScheduledRoute.getTimestamp();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7876/buggy-version/src.simulation.implementations.schedulers.AbstractScheduler.java", "BodyUseAPI": ["simulation.ScheduledRoute.getTimestamp()"], "Fixed commit": "d845f1859fe6341e12e7e441b2bc39f93b6ff09b", "Url": "https://api.github.com/repos/dfialho/bgp-simulator", "Date": "2016-04-26T22:19:03Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wyscript.Interpreter.execute(io.getSource(),java.util.HashMap<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (src instanceof java.util.ArrayList) { java.util.ArrayList<java.lang.Object> list = ((java.util.ArrayList) (src)); list.set(idx, deepClone(rhs)); }else { java.lang.StringBuffer str = ((java.lang.StringBuffer) (src)); str.setCharAt(idx, ((java.lang.Character) (rhs))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4620/buggy-version/src.wyscript.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "6b69becf2c8fd2888dc032bb6bb9548210fd3365", "Url": "https://api.github.com/repos/DavePearce/Wyscript", "Date": "2013-11-28T04:55:56Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultType == (ResultType.OK)) { notToLoad = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4919/buggy-version/app.src.main.java.ru.ifmo.droid2016.tmdb.loader.TmbLoader.java", "BodyUseAPI": [], "Fixed commit": "407d2207ea32602d4f2cf283256476bc58c17e80", "Url": "https://api.github.com/repos/softitova/homework2", "Date": "2016-11-22T19:14:52Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof game.physics.SolidTile) { bullet.setHealth(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7977/buggy-version/src.game.physics.Physics.java", "BodyUseAPI": [], "Fixed commit": "d699bb02ddcf1eea9b7d72d1ba83b721e6de1f87", "Url": "https://api.github.com/repos/jwellstech/zombiegame", "Date": "2016-05-24T14:44:04Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myPrecision) > 9) { return java.lang.Integer.parseInt(dateString.substring(9)); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8175/buggy-version/src.main.java.dk.statsbiblioteket.newspaper.metadatachecker.film.FuzzyDate.java", "BodyUseAPI": [], "Fixed commit": "d010c25ab65a51ff6e5d50b3aef0f5c2ddb0c844", "Url": "https://api.github.com/repos/statsbiblioteket/newspaper-batch-metadata-checker", "Date": "2013-11-21T08:04:34Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myPrecision) > 5) { return java.lang.Integer.parseInt(dateString.substring(5, 7)); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8175/buggy-version/src.main.java.dk.statsbiblioteket.newspaper.metadatachecker.film.FuzzyDate.java", "BodyUseAPI": [], "Fixed commit": "d010c25ab65a51ff6e5d50b3aef0f5c2ddb0c844", "Url": "https://api.github.com/repos/statsbiblioteket/newspaper-batch-metadata-checker", "Date": "2013-11-21T08:04:34Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8565/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "f4d7b6b503c1610eb3f25843f046a0ce6b3bb732", "Url": "https://api.github.com/repos/Zahnstocher/Osmand", "Date": "2014-09-02T06:28:52Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.phfactor.meltdown.RestClient.syncGetUrl(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (payload == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/458/buggy-version/src.net.phfactor.meltdown.RestClient.java", "BodyUseAPI": [], "Fixed commit": "c3f21b06d3d5eb5d64ca8c20b7d82f7df1225d13", "Url": "https://api.github.com/repos/phubbard/Meltdown", "Date": "2012-10-31T18:40:25Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (match == 0) return 0; else return ((double) (match)) / ((double) (total));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3977/buggy-version/src.main.java.alignment.alignment_v2.Compare.java", "BodyUseAPI": [], "Fixed commit": "bf3426214665e595b29ef0f2bfa9efc161185c6c", "Url": "https://api.github.com/repos/stucco/graph-alignment", "Date": "2015-01-28T21:14:27Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareActionProvider) != null) { shareActionProvider.setShareIntent(shareIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3668/buggy-version/app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "a31e089984d91cccc095490a7db632f39d027790", "Url": "https://api.github.com/repos/OverratedGman/Super_Duo-Alexandria", "Date": "2015-12-21T03:55:00Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(authors.equals(\"\"))) { authorsArr = authors.split(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3668/buggy-version/app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "a31e089984d91cccc095490a7db632f39d027790", "Url": "https://api.github.com/repos/OverratedGman/Super_Duo-Alexandria", "Date": "2015-12-21T03:55:00Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((i % (com.unit7.study.diplom.base.generator.impl.GenericLCG.BYTE_SIZE)) == 0) && (i != 0)) { bitIndex = bitIndex + ((com.unit7.study.diplom.base.generator.impl.GenericLCG.BYTE_SIZE) * 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9089/buggy-version/src.main.java.com.unit7.study.diplom.base.generator.impl.GenericLCG.java", "BodyUseAPI": [], "Fixed commit": "960ed46fd8fd482e9b5b0a9b358022e8856ca67c", "Url": "https://api.github.com/repos/unit7-0/STRNG", "Date": "2015-06-01T18:30:11Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((httpClient) != null) httpClient.closeHandler();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7043/buggy-version/src.main.java.com.bwssystems.HABridge.plugins.domoticz.DomoticzHome.java", "BodyUseAPI": [], "Fixed commit": "4de14217b486b54918b3ab4d4f4800cf6a304d2b", "Url": "https://api.github.com/repos/hobbe/ha-bridge", "Date": "2017-03-02T22:36:56Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(folder.exists())) { folder.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4514/buggy-version/util.src.main.java.edu.asu.diging.gilesecosystem.util.files.impl.FileStorageManager.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "107e20a59ec2b7a29993200c951eac706a542e0c", "Url": "https://api.github.com/repos/diging/giles-eco-util", "Date": "2017-03-21T23:56:42Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((start == (-1)) || (end < start)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5052/buggy-version/agile-apps.agile-app-builds.src.main.java.org.headsupdev.agile.app.ci.event.UploadApplicationEvent.java", "BodyUseAPI": [], "Fixed commit": "8458e50a2f63557c517122897789bce5bf65a8d1", "Url": "https://api.github.com/repos/headsupdev/agile", "Date": "2013-11-24T23:08:25Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (haveStateOfSelflet(neighbor)) { it.polimi.elet.selflet.negotiation.nodeState.INodeState nodestateOfNeighbor = getNodeState(neighbor); isFull = isFull & ((nodestateOfNeighbor.getKnownNeighbors().size()) >= (it.polimi.elet.selflet.nodeState.NodeStateManager.MAX_NEIGHBORS_PER_SELFLET)); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4576/buggy-version/src.main.java.it.polimi.elet.selflet.nodeState.NodeStateManager.java", "BodyUseAPI": ["it.polimi.elet.selflet.nodeState.NodeStateManager.getNodeState(it.polimi.elet.selflet.id.ISelfLetID)"], "Fixed commit": "dd0b56d4e1609f0e43dd637d1961972985223e3e", "Url": "https://api.github.com/repos/ncalca/selflet-request-dispatcher", "Date": "2014-07-25T08:23:49Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((node != null) && (!(node.isNull()))) paths = getQueryPaths(node, schema);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5149/buggy-version/src.main.java.org.hypergraphql.datafetching.services.Service.java", "BodyUseAPI": ["org.hypergraphql.datafetching.services.Service.getQueryPaths(com.fasterxml.jackson.databind.JsonNode,org.hypergraphql.datamodel.HGQLSchema)"], "Fixed commit": "ffdf17b94bd351e191d70969ddad2fdc079408ac", "Url": "https://api.github.com/repos/semantic-integration/hypergraphql", "Date": "2017-12-18T15:24:00Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["creator.getPartner().getEmailAddress().getAddress()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(email))) { com.axelor.apps.base.db.ICalendarUser organizer = com.axelor.inject.Beans.get(com.axelor.apps.base.db.repo.ICalendarUserRepository.class).all().filter(\"self.email = ?1 AND self.user.id = ?2\", email, creator.getId()).fetchOne(); if (organizer == null) { organizer = new com.axelor.apps.base.db.ICalendarUser(); organizer.setEmail(email); organizer.setName(creator.getFullName()); organizer.setUser(creator); } entity.setOrganizer(organizer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2013/buggy-version/axelor-crm.src.main.java.com.axelor.apps.crm.db.repo.EventManagementRepository.java", "BodyUseAPI": ["com.axelor.inject.Beans.get(com.axelor.apps.base.db.repo.ICalendarUserRepository.class).all().filter(java.lang.String,java.lang.String,creator.getId())", "com.axelor.inject.Beans.get(com.axelor.apps.base.db.repo.ICalendarUserRepository.class).all().filter(\"self.email = ?1 AND self.user.id = ?2\", email, creator.getId()).fetchOne()", "com.axelor.apps.base.db.ICalendarUser.setEmail(java.lang.String)"], "Fixed commit": "8400827b228727acef151f5a003de368de246973", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2015-11-12T10:40:12Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (precision > (MoneyFactory.MAX_ALLOWED_PRECISION)) return new info.javaperformance.money.MoneyBigDecimal(toBigDecimal()).divide(divider, precision);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9033/buggy-version/src.info.javaperformance.money.MoneyLong.java", "BodyUseAPI": ["info.javaperformance.money.MoneyBigDecimal.divide(double,int)"], "Fixed commit": "96a4a45fc3879da4c773e54d4e520891beaa369e", "Url": "https://api.github.com/repos/MisterY/android-money-manager-ex", "Date": "2015-09-16T11:11:52Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((precision >= 0) && (precision <= (info.javaperformance.money.MoneyFactory.MAX_ALLOWED_PRECISION))) return new info.javaperformance.money.MoneyLong((res * sign), precision).normalize(); else return new info.javaperformance.money.MoneyBigDecimal(str.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9033/buggy-version/src.info.javaperformance.money.MoneyFactory.java", "BodyUseAPI": ["info.javaperformance.money.MoneyLong.normalize()"], "Fixed commit": "96a4a45fc3879da4c773e54d4e520891beaa369e", "Url": "https://api.github.com/repos/MisterY/android-money-manager-ex", "Date": "2015-09-16T11:11:52Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tiledCollisionComponent.doesLeftPlatformExist()) && (!(tiledCollisionComponent.isLeftColliding()))) { movementComponent.moveTo(position, deltaTime); if ((getPositionX()) == (getPrevPositionX())) { movementState = MovementState.STANDING; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1066/buggy-version/core.src.com.lothbrok.game.model.entities.Enemy.java", "BodyUseAPI": [], "Fixed commit": "6f5d9d5e5c0c41c11fd314fa8a6f80f627b9b6ab", "Url": "https://api.github.com/repos/leventemathe/Lothbrok", "Date": "2017-03-22T16:54:09Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction > 0.0F) { if ((tiledCollisionComponent.doesRightPlatformExist()) && (!(tiledCollisionComponent.isRightColliding()))) { movementComponent.moveTo(position, deltaTime); if ((getPositionX()) == (getPrevPositionX())) { movementState = MovementState.STANDING; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1066/buggy-version/core.src.com.lothbrok.game.model.entities.Enemy.java", "BodyUseAPI": [], "Fixed commit": "6f5d9d5e5c0c41c11fd314fa8a6f80f627b9b6ab", "Url": "https://api.github.com/repos/leventemathe/Lothbrok", "Date": "2017-03-22T16:54:09Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.withiter.models.merchant.Youhui.getAllEnabledYouhui(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((list == null) || ((list.size()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3223/buggy-version/modules.quhao.appserver.app.com.withiter.models.merchant.Youhui.java", "BodyUseAPI": [], "Fixed commit": "67357574060f2d57b2d305acfc629be71b8a5c34", "Url": "https://api.github.com/repos/withitergroup/quhao", "Date": "2014-05-06T08:50:50Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.withiter.models.merchant.Youhui.getRandomEnabledYouhui(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (youhui == null) { renderJSON(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3223/buggy-version/modules.quhao.appserver.app.controllers.YouhuiController.java", "BodyUseAPI": [], "Fixed commit": "67357574060f2d57b2d305acfc629be71b8a5c34", "Url": "https://api.github.com/repos/withitergroup/quhao", "Date": "2014-05-06T08:50:50Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(l.trim().endsWith(\"-->\"))) bypass = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4452/buggy-version/j-tahoe-compiler.src.main.java.com.jukta.jtahoe.gen.xml.BasicParser.java", "BodyUseAPI": [], "Fixed commit": "ecaf450ccb6fdd16bdd174d2fc835524c318bf1b", "Url": "https://api.github.com/repos/jukta/j-tahoe", "Date": "2017-10-29T23:37:35Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(bypass)) && (l.startsWith(\"<![CDATA[\"))) { if (!(l.trim().endsWith(\"]]>\"))) bypass = true; handler.text(l); }else if ((bypass) && (l.trim().endsWith(\"]]>\"))) { bypass = false; handler.text(l); }else if ((!(bypass)) && (l.startsWith(\"<!--\"))) { if (!(l.trim().endsWith(\"-->\"))) bypass = true; handler.text(l); }else if ((bypass) && (l.trim().endsWith(\"-->\"))) { bypass = false; handler.text(l); }else if (bypass) { handler.text(l); }else if (l.startsWith(\"</\")) { end(l, handler); }else if (l.startsWith(\"<\")) { start(l, handler); }else { handler.text(l); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4452/buggy-version/j-tahoe-compiler.src.main.java.com.jukta.jtahoe.gen.xml.BasicParser.java", "BodyUseAPI": ["com.jukta.jtahoe.gen.xml.BasicParser.Handler.text(java.lang.String)", "java.lang.String.trim()", "com.jukta.jtahoe.gen.xml.BasicParser.Handler.text(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "com.jukta.jtahoe.gen.xml.BasicParser.end(java.lang.String,com.jukta.jtahoe.gen.xml.BasicParser.Handler)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "com.jukta.jtahoe.gen.xml.BasicParser.Handler.text(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "com.jukta.jtahoe.gen.xml.BasicParser.Handler.text(java.lang.String)", "com.jukta.jtahoe.gen.xml.BasicParser.start(java.lang.String,com.jukta.jtahoe.gen.xml.BasicParser.Handler)", "java.lang.String.trim()", "com.jukta.jtahoe.gen.xml.BasicParser.Handler.text(java.lang.String)", "java.lang.String.trim()", "java.lang.String.endsWith(java.lang.String)", "com.jukta.jtahoe.gen.xml.BasicParser.Handler.text(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "ecaf450ccb6fdd16bdd174d2fc835524c318bf1b", "Url": "https://api.github.com/repos/jukta/j-tahoe", "Date": "2017-10-29T23:37:35Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.equals(\"earth\")) { Player.unitList.add(index, new DataModels.Unit(type, 0, 15)); }else { Player.unitList.add(index, new DataModels.Unit(type, 0, 10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9059/buggy-version/src.GameUI.GameCreationController.java", "BodyUseAPI": ["Player.unitList.add(int,DataModels.Unit)", "Player.unitList.add(int,DataModels.Unit)"], "Fixed commit": "08097735daa3248604226b182499925d296414ee", "Url": "https://api.github.com/repos/rme9/SE1", "Date": "2017-11-29T01:30:35Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["left.evaluate().setScale(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((lft.compareTo(java.math.BigDecimal.ZERO)) == 0) { if ((rgt.compareTo(java.math.BigDecimal.ZERO)) == 0) { throw new java.lang.ArithmeticException(\"0^0 is undefined.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4480/buggy-version/app.src.main.java.fx50.nodes.PowerNode.java", "BodyUseAPI": ["java.math.BigDecimal.compareTo(java.math.BigDecimal)"], "Fixed commit": "dab7349ef8335f9f9cf68d1a52a9b000417be2af", "Url": "https://api.github.com/repos/danvim/Procal", "Date": "2017-01-22T18:16:04Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.ibatis.utils.StringUtils.isEmpty(parsedProperty)) property = org.apache.ibatis.utils.StringUtils.uncapitalize(property);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8114/buggy-version/src.main.java.org.apache.ibatis.features.jpa.builder.impl.PropertySqlBuilder.java", "BodyUseAPI": [], "Fixed commit": "8e1060b09caba9911b46ae0a887ec086bac47b4f", "Url": "https://api.github.com/repos/wupeng1988/mybatis-jpa", "Date": "2017-09-14T09:52:41Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e.isOnScreen())) { gameObjects.remove(e); }else { for (int j = 0; j < (ShmupEngine.playerBullets.length); j++) { shmup.Bullet b = ShmupEngine.playerBullets[j]; if (b.active) { if (b.getRect().collidesWith(e.getRect())) { e.death(); gameObjects.remove(e); b.active = false; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2192/buggy-version/src.shmup.GameScene.java", "BodyUseAPI": ["b.getRect().collidesWith(e.getRect())", "java.util.ArrayList<shmup.GameObject>.remove(shmup.Enemy)", "shmup.Enemy.getRect()", "shmup.Enemy.death()", "java.util.ArrayList<shmup.GameObject>.remove(shmup.Enemy)"], "Fixed commit": "044f5026b3ca79caab3e2d6a51362dc8acbcc9d7", "Url": "https://api.github.com/repos/suitengu/ShmupEngine", "Date": "2013-07-30T08:02:26Z"},
{"Line": "=>639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (equivalentString.getIncludesNull()) { return nz.co.gregs.dbvolution.expressions.BooleanExpression.anyOf(this.isNull(), is); }else { return is; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9195/buggy-version/src.main.java.nz.co.gregs.dbvolution.expressions.StringExpression.java", "BodyUseAPI": [], "Fixed commit": "006667b58b0a07f2619e42bf7de52b553bb67470", "Url": "https://api.github.com/repos/gregorydgraham/DBvolution", "Date": "2016-05-27T05:56:19Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (equivalentString == null) { return this.isNull(); }else { return this.is(nz.co.gregs.dbvolution.expressions.StringExpression.value(equivalentString)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9195/buggy-version/src.main.java.nz.co.gregs.dbvolution.expressions.StringExpression.java", "BodyUseAPI": ["nz.co.gregs.dbvolution.expressions.StringExpression.is(nz.co.gregs.dbvolution.expressions.StringExpression)", "nz.co.gregs.dbvolution.expressions.StringExpression.value(java.lang.String)"], "Fixed commit": "006667b58b0a07f2619e42bf7de52b553bb67470", "Url": "https://api.github.com/repos/gregorydgraham/DBvolution", "Date": "2016-05-27T05:56:19Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.Double.isNaN(gpa))) { gradeDAO.addGpa(new com.a14roxgmail.prasanna.mobileapp.Model.GPA(com.a14roxgmail.prasanna.mobileapp.Constants.Constants.GPA_FLAG, semester, java.lang.String.valueOf(gpa), userIndex, java.lang.String.valueOf(totalCredit))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1239/buggy-version/app.src.main.java.com.a14roxgmail.prasanna.mobileapp.Fragment.GpaSemFragment.java", "BodyUseAPI": ["com.a14roxgmail.prasanna.mobileapp.DAO.GradeDAO.addGpa(com.a14roxgmail.prasanna.mobileapp.Model.GPA)", "java.lang.String.valueOf(double)"], "Fixed commit": "76b42c75659fca9ef24641d0ab0d5dfac218e76e", "Url": "https://api.github.com/repos/prasannadeshappriya/MobileAPP", "Date": "2017-01-22T11:28:07Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.Double.isNaN(sgpa))) { gradeDAO.addGpa(new com.a14roxgmail.prasanna.mobileapp.Model.GPA(com.a14roxgmail.prasanna.mobileapp.Constants.Constants.SGPA_FLAG, semester, java.lang.String.valueOf(sgpa), userIndex, java.lang.String.valueOf(total_cedits))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1239/buggy-version/app.src.main.java.com.a14roxgmail.prasanna.mobileapp.Fragment.GpaSemFragment.java", "BodyUseAPI": ["com.a14roxgmail.prasanna.mobileapp.DAO.GradeDAO.addGpa(com.a14roxgmail.prasanna.mobileapp.Model.GPA)", "java.lang.String.valueOf(double)"], "Fixed commit": "76b42c75659fca9ef24641d0ab0d5dfac218e76e", "Url": "https://api.github.com/repos/prasannadeshappriya/MobileAPP", "Date": "2017-01-22T11:28:07Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["common.IPersistence.load(buildings.getClass())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (loaded != null) { buildings = loaded; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5309/buggy-version/Workshop_Business.src.business.BusinessFacade.java", "BodyUseAPI": [], "Fixed commit": "53c0721de5e075b586a737c3ec21d8f5d82b2857", "Url": "https://api.github.com/repos/Frede175/Workshop-OOP", "Date": "2017-11-22T16:17:35Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hour == 12) { am = false; }else if (hour > 12) { am = false; hour = hour - 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2158/buggy-version/app.src.main.java.net.garrettsites.picturebook.fragments.SleepScheduleConfig.java", "BodyUseAPI": [], "Fixed commit": "f2d4f3bb67f4bbebf424051c1b2d9ee317230409", "Url": "https://api.github.com/repos/saucepwn/picturebook", "Date": "2016-06-27T19:18:43Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lastStartingPos.equals(startingPos))) { modelList.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7173/buggy-version/src.main.java.com.minecolonies.structures.helpers.Structure.java", "BodyUseAPI": [], "Fixed commit": "9e4d5a3f6532a19c313ddfca07d11cb8a5b29368", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2017-09-03T12:36:33Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.inOpenSet) { depart = p; km += distanceHeuristique(lastDepart); lastDepart = depart.gridpoint; computeShortestPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7557/buggy-version/core.src.kraken.pathfinding.dstarlite.DStarLite.java", "BodyUseAPI": [], "Fixed commit": "6c36cc76705959e3cb65c2dbd870b9a7a8ad3b1f", "Url": "https://api.github.com/repos/PFGimenez/The-Kraken-Pathfinding", "Date": "2017-06-16T08:27:29Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.image().list().filter(imageName).endImages()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((images != null) && ((images.size()) > 0)) { for (io.fabric8.docker.api.model.Image image : images) { if ((image.getRepoTags()) != null) { java.lang.String currentImageName = image.getRepoTags().get(0); if ((currentImageName.equals(((imageName + \":\") + (org.ballerinalang.containers.Constants.IMAGE_VERSION_LATEST)))) || (currentImageName.equals(imageName))) { return currentImageName; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6829/buggy-version/src.main.java.org.ballerinalang.containers.docker.impl.DefaultBallerinaDockerClient.java", "BodyUseAPI": [], "Fixed commit": "7b01069cbe901235f4b7a839b2265afa177f61b8", "Url": "https://api.github.com/repos/ballerina-attic/container-support", "Date": "2017-08-17T06:01:38Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((image.getRepoTags()) != null) { java.lang.String currentImageName = image.getRepoTags().get(0); if ((currentImageName.equals(((imageName + \":\") + (org.ballerinalang.containers.Constants.IMAGE_VERSION_LATEST)))) || (currentImageName.equals(imageName))) { return currentImageName; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6829/buggy-version/src.main.java.org.ballerinalang.containers.docker.impl.DefaultBallerinaDockerClient.java", "BodyUseAPI": ["image.getRepoTags().get(int)", "io.fabric8.docker.api.model.Image.getRepoTags()"], "Fixed commit": "7b01069cbe901235f4b7a839b2265afa177f61b8", "Url": "https://api.github.com/repos/ballerina-attic/container-support", "Date": "2017-08-17T06:01:38Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mJPTabItems) != null) for (com.jpeng.jptabbar.JPTabItem item : mJPTabItems) { item.setDismissDelegate(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/158/buggy-version/library.src.main.java.com.jpeng.jptabbar.JPTabBar.java", "BodyUseAPI": [], "Fixed commit": "703c252f44a2e0d125bf82a91fdfdc88c058f27e", "Url": "https://api.github.com/repos/peng8350/JPTabBar", "Date": "2017-03-17T05:02:06Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMiddleItem) == null) { mAttribute.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/158/buggy-version/library.src.main.java.com.jpeng.jptabbar.JPTabBar.java", "BodyUseAPI": [], "Fixed commit": "703c252f44a2e0d125bf82a91fdfdc88c058f27e", "Url": "https://api.github.com/repos/peng8350/JPTabBar", "Date": "2017-03-17T05:02:06Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) org.gbif.checklistbank.neo.traverse.UsageMetricsHandler.LOG.info(\"end: {} {} {} # {}-{}-{}\", u.getTaxonID(), u.getRank(), u.getScientificName(), metrics.getNumDescendants(), metrics.getNumSynonyms(), parentCounts.size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4755/buggy-version/checklistbank-cli.src.main.java.org.gbif.checklistbank.neo.traverse.UsageMetricsHandler.java", "BodyUseAPI": [], "Fixed commit": "27dce8430be68b9442811862d544f88428c8aedb", "Url": "https://api.github.com/repos/gbif/checklistbank", "Date": "2015-07-30T09:35:10Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) org.gbif.checklistbank.neo.traverse.UsageMetricsHandler.LOG.info(\"start: {} {} {} # {}-0-{}\", u.getTaxonID(), u.getRank(), u.getScientificName(), counter, parentCounts.size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4755/buggy-version/checklistbank-cli.src.main.java.org.gbif.checklistbank.neo.traverse.UsageMetricsHandler.java", "BodyUseAPI": [], "Fixed commit": "27dce8430be68b9442811862d544f88428c8aedb", "Url": "https://api.github.com/repos/gbif/checklistbank", "Date": "2015-07-30T09:35:10Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.groovy.runtime.MetaClassHelper.getMaximumInterfaceDistance(java.lang.Class,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (superClassMax != (-1)) superClassMax++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8151/buggy-version/src.main.org.codehaus.groovy.runtime.MetaClassHelper.java", "BodyUseAPI": [], "Fixed commit": "e42649898841cf4c28cb7375d9eeb2931dcf1888", "Url": "https://api.github.com/repos/paulk-asert/groovy-core", "Date": "2013-02-18T15:56:07Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 16) { close.setBackground(activity.getResources().getDrawable(R.drawable.selectable_button_light)); }else { close.setBackgroundDrawable(activity.getResources().getDrawable(R.drawable.selectable_button_light)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4196/buggy-version/DiscreetAppRate.src.main.java.fr.nicolaspomepuy.discreetapprate.AppRate.java", "BodyUseAPI": [], "Fixed commit": "8b11e6c7e573b76e0c5754a920ff27019a418bc1", "Url": "https://api.github.com/repos/PomepuyN/discreet-app-rate", "Date": "2014-04-24T18:27:09Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 16) { close.setBackground(activity.getResources().getDrawable(R.drawable.selectable_button_dark)); }else { close.setBackgroundDrawable(activity.getResources().getDrawable(R.drawable.selectable_button_dark)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4196/buggy-version/DiscreetAppRate.src.main.java.fr.nicolaspomepuy.discreetapprate.AppRate.java", "BodyUseAPI": [], "Fixed commit": "8b11e6c7e573b76e0c5754a920ff27019a418bc1", "Url": "https://api.github.com/repos/PomepuyN/discreet-app-rate", "Date": "2014-04-24T18:27:09Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloudmine.api.rest.CMAccessList.getUser()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (listUser.isLoggedIn()) { com.cloudmine.api.rest.CMWebService.getService().getUserWebService(listUser.getSessionToken()).asyncInsert(list, callback); }else { listUser.login(new com.cloudmine.api.rest.callbacks.ExceptionPassthroughCallback<com.cloudmine.api.rest.response.LoginResponse>(callback) { public void onCompletion(com.cloudmine.api.rest.response.LoginResponse response) { if (listUser.isLoggedIn()) { com.cloudmine.api.rest.CMWebService.getService().getUserWebService(listUser.getSessionToken()).asyncInsert(list, callback); }else { callback.onFailure(new javax.security.auth.login.LoginException(\"Cannot save ACL belonging to user who cannot log in\"), response.getMessageBody()); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8720/buggy-version/src.main.java.com.cloudmine.api.rest.CMStore.java", "BodyUseAPI": ["com.cloudmine.api.rest.CMUser.isLoggedIn()", "com.cloudmine.api.rest.CMWebService.getService().getUserWebService(listUser.getSessionToken()).asyncInsert(com.cloudmine.api.rest.CMAccessList,com.cloudmine.api.rest.callbacks.Callback)", "com.cloudmine.api.rest.CMWebService.getService().getUserWebService(listUser.getSessionToken())", "com.cloudmine.api.rest.CMUser.login(com.cloudmine.api.rest.callbacks.ExceptionPassthroughCallback<com.cloudmine.api.rest.response.LoginResponse>)", "com.cloudmine.api.rest.CMWebService.getService().getUserWebService(listUser.getSessionToken()).asyncInsert(com.cloudmine.api.rest.CMAccessList,com.cloudmine.api.rest.callbacks.Callback)", "com.cloudmine.api.rest.CMUser.getSessionToken()", "com.cloudmine.api.rest.CMUser.getSessionToken()", "com.cloudmine.api.rest.CMWebService.getService().getUserWebService(listUser.getSessionToken())"], "Fixed commit": "07c97464d2aeb33ffa5554b41c8a9cf6909fd18d", "Url": "https://api.github.com/repos/cloudmine/cloudmine-javasdk", "Date": "2012-08-23T15:58:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isInfoEnabled()) { logger.info(\"raw data : {}\", tBase); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4087/buggy-version/flink.src.main.java.com.navercorp.pinpoint.flink.process.TbaseFlatMapper.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,org.apache.thrift.TBase)"], "Fixed commit": "bfd7b4b0298c2dfc542f37044b2cd0f8b7af7dc1", "Url": "https://api.github.com/repos/minwoo-jung/pinpoint", "Date": "2017-09-18T06:15:57Z"},
{"Line": "=>902", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((view.getParent()) != null) && ((view.getParent()) instanceof android.view.ViewGroup)) ((android.view.ViewGroup) (view.getParent())).removeView(view);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6597/buggy-version/library.src.main.java.com.afollestad.materialdialogs.MaterialDialog.java", "BodyUseAPI": ["((android.view.ViewGroup) (view.getParent())).removeView(android.view.View)", "android.view.View.getParent()"], "Fixed commit": "05c5ccc5477ba752e8cdba610c9e7f01ba156b6d", "Url": "https://api.github.com/repos/afollestad/material-dialogs", "Date": "2015-07-10T02:54:40Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isBlank(repairedItemName))) { if ((itemstack1.stackTagCompound) == null) { itemstack1.stackTagCompound = new net.minecraft.nbt.NBTTagCompound(); } itemstack1.stackTagCompound.setString(\"name\", repairedItemName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4749/buggy-version/tektor.minecraft.chalith.container.ChalithWorkplaceContainer.java", "BodyUseAPI": ["itemstack1.stackTagCompound.setString(java.lang.String,java.lang.String)"], "Fixed commit": "0cb18acbef5410d12e2ec6a34696160b855efea5", "Url": "https://api.github.com/repos/Tektor/chalith", "Date": "2013-08-01T02:14:48Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (values == null) throw new com.ithinkrok.util.config.InvalidConfigException(\"Yaml.load() produced null instead of a map\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1326/buggy-version/src.main.java.com.ithinkrok.util.config.YamlConfigIO.java", "BodyUseAPI": [], "Fixed commit": "8a2010bc19de1355981f2a847c9d97ebbbc3664b", "Url": "https://api.github.com/repos/adventurerok/GSM-Common", "Date": "2016-03-12T15:21:37Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gt.org.isis.repository.UsuariosRepository.findAll(gt.org.isis.api.jpa.ManySpecificationANDHandler<gt.org.isis.model.Usuario>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(((us.size()) == 1) && (((gt.org.isis.model.Usuario) (us.iterator().next())).getId().equals(request.getUsuario())))) { throw gt.org.isis.api.misc.exceptions.ExceptionsManager.newValidationException(\"cui_invalido\", \"No puede asignar una persona a dos usuarios!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4819/buggy-version/MS_RRHH_Servicios.src.main.java.gt.org.isis.controller.usuarios.handlers.validations.GenUsNoDuplicadosPersonaValidation.java", "BodyUseAPI": [], "Fixed commit": "a78964a2bd91f9397312a0265d9410fc1cb1e7a1", "Url": "https://api.github.com/repos/eliudiaz/StripesTest", "Date": "2016-12-05T16:50:02Z"},
{"Line": "=>2506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEnabledOverScroll()) { if ((!(isEnabledPinRefreshViewWhileLoading())) || (((vy >= 0) || (!(isDisabledLoadMore()))) && ((vy <= 0) || (!(isDisabledRefresh()))))) { mOverScrollChecker.fling(vy); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1796/buggy-version/core.src.main.java.me.dkzwm.widget.srl.SmoothRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "2af8484a3460044c208b82e28c2d3ea3989367c5", "Url": "https://api.github.com/repos/dkzwm/SmoothRefreshLayout", "Date": "2017-11-30T11:09:15Z"},
{"Line": "=>715", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEnabledOverScroll()) { if ((!(isEnabledPinRefreshViewWhileLoading())) || (((vx >= 0) || (!(isDisabledLoadMore()))) && ((vx <= 0) || (!(isDisabledRefresh()))))) { mOverScrollChecker.fling(vx); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1796/buggy-version/ext-horizontal.src.main.java.me.dkzwm.widget.srl.HorizontalSmoothRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "2af8484a3460044c208b82e28c2d3ea3989367c5", "Url": "https://api.github.com/repos/dkzwm/SmoothRefreshLayout", "Date": "2017-11-30T11:09:15Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (appHolder.isOnWaitingList()) { cell.setStyleClass(\"waitingList\"); cell.add(new com.idega.presentation.text.Text(getResourceBundle().getLocalizedString(\"application_status.waiting_list\", \"Waiting list\"))); }else { cell.setStyleClass(\"registered\"); cell.add(new com.idega.presentation.text.Text(format.format(appHolder.getPrice()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5749/buggy-version/src.java.is.idega.idegaweb.egov.course.presentation.CourseApplicationOverview.java", "BodyUseAPI": ["com.idega.presentation.TableCell2.add(com.idega.presentation.text.Text)", "is.idega.idegaweb.egov.course.data.ApplicationHolder.getPrice()", "java.text.NumberFormat.format(appHolder.getPrice())"], "Fixed commit": "0fa7cb9958f5d41e0f9a1d6f5f0701a2865a68d8", "Url": "https://api.github.com/repos/idega/is.idega.idegaweb.egov.course", "Date": "2011-05-10T00:39:52Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<us.ihmc.robotics.screwTheory.OneDoFJoint, org.apache.commons.lang3.mutable.MutableInt>.get(us.ihmc.robotics.screwTheory.OneDoFJoint)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mutableIndex == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6637/buggy-version/CommonWalkingControlModules.src.us.ihmc.commonWalkingControlModules.inverseKinematics.JointPrivilegedConfigurationHandler.java", "BodyUseAPI": [], "Fixed commit": "c7a26ad3f2d4600efebc05cf4bfa387e75dc2f28", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2016-06-25T21:12:47Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.ihmc.commonWalkingControlModules.controllerCore.command.lowLevel.LowLevelOneDoFJointDesiredDataHolder.getLowLevelJointData(us.ihmc.robotics.screwTheory.OneDoFJoint)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lowLevelJointData == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6637/buggy-version/CommonWalkingControlModules.src.us.ihmc.commonWalkingControlModules.momentumBasedController.optimization.JointAccelerationIntegrationCalculator.java", "BodyUseAPI": [], "Fixed commit": "c7a26ad3f2d4600efebc05cf4bfa387e75dc2f28", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2016-06-25T21:12:47Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(column.equals(com.microsoftopentechnologies.intellij.helpers.storage.TableFileEditor.PARTITION_KEY))) && (!(column.equals(com.microsoftopentechnologies.intellij.helpers.storage.TableFileEditor.ROW_KEY)))) && (!(column.equals(com.microsoftopentechnologies.intellij.helpers.storage.TableFileEditor.TIMESTAMP)))) { columnData.get(column).add((tableEntity.getProperties().containsKey(column) ? com.microsoftopentechnologies.intellij.helpers.storage.TableFileEditor.getFormattedProperty(tableEntity.getProperties().get(column)) : \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8317/buggy-version/src.android.com.microsoftopentechnologies.intellij.helpers.storage.TableFileEditor.java", "BodyUseAPI": ["tableEntity.getProperties().get(java.lang.String)", "com.microsoftopentechnologies.intellij.helpers.storage.TableFileEditor.getFormattedProperty(tableEntity.getProperties().get(column))", "java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "tableEntity.getProperties().containsKey(java.lang.String)", "java.util.List<java.lang.String>.add((tableEntity.getProperties().containsKey(column) ? com.microsoftopentechnologies.intellij.helpers.storage.TableFileEditor.getFormattedProperty(tableEntity.getProperties().get(column)) : \"\"))"], "Fixed commit": "997ac6141ed9d52886c9f04d93e509b479fe5dc9", "Url": "https://api.github.com/repos/leotilli/msopentech-tools-for-intellij", "Date": "2015-05-18T20:31:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((literature.getFulltextURLs()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2679/buggy-version/src.main.java.com.github.bfour.fpliteraturecollector.service.DefaultLiteratureService.java", "BodyUseAPI": [], "Fixed commit": "93d8411444bb6d69d6ea47bdbcc7ca757f61caa1", "Url": "https://api.github.com/repos/bfour/LiteratureCollector", "Date": "2015-11-02T11:46:33Z"},
{"Line": "=>985", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instructionsList) != null) { instructionsList.setAdapter(null); instructionsList.removeHeaderView(instructionsHeader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2650/buggy-version/app.src.main.java.gr.upatras.ceid.geopin.MainMapActivity.java", "BodyUseAPI": [], "Fixed commit": "3c96b74aacf791bebd959a9339bec5a9bb7781ed", "Url": "https://api.github.com/repos/dklisiaris/geopin", "Date": "2015-03-04T13:31:23Z"},
{"Line": "=>981", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instructionsAdapter) != null) { instructionsAdapter.clear(); instructionsAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2650/buggy-version/app.src.main.java.gr.upatras.ceid.geopin.MainMapActivity.java", "BodyUseAPI": [], "Fixed commit": "3c96b74aacf791bebd959a9339bec5a9bb7781ed", "Url": "https://api.github.com/repos/dklisiaris/geopin", "Date": "2015-03-04T13:31:23Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.parse.ParseUser.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/531/buggy-version/app.src.main.java.com.gachon.app.helper.UserManager.java", "BodyUseAPI": [], "Fixed commit": "d88c418777727a1a8bbe51de7a3fc2fc04a44453", "Url": "https://api.github.com/repos/garyGitgit/CodingStarter", "Date": "2017-08-14T01:07:32Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((files == null) || ((files.length) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8648/buggy-version/src.main.java.simple.xfj.framework.util.ClassUtil.java", "BodyUseAPI": [], "Fixed commit": "285a59092fcbc329953a0be85203a0cc2cd2b53a", "Url": "https://api.github.com/repos/MonsoonJava/simpleframework", "Date": "2017-04-18T05:37:07Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((game.getTurn()) == (game.Game.Turn.OVER))) { newGame.getBoard().executeMove(move); newGame.setTurn(newGame.getTurn().getOther()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5131/buggy-version/src.game.player.ai.MinimaxNode.java", "BodyUseAPI": [], "Fixed commit": "755678d3b54fdc0f2629eaad1646b3854cb747eb", "Url": "https://api.github.com/repos/bencw99/Checkers-AI", "Date": "2014-10-15T06:20:05Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.metaContact) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2952/buggy-version/src.net.java.sip.communicator.impl.gui.main.chat.MetaContactChatSession.java", "BodyUseAPI": [], "Fixed commit": "ce6f3801d7f3556a4d9cf24b638b93777c3d7c17", "Url": "https://api.github.com/repos/jitsi/jitsi", "Date": "2013-07-24T18:12:43Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.java.sip.communicator.impl.gui.main.chat.Contact.getPresenceStatus()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (status == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2952/buggy-version/src.net.java.sip.communicator.impl.gui.main.chat.MetaContactChatSession.java", "BodyUseAPI": [], "Fixed commit": "ce6f3801d7f3556a4d9cf24b638b93777c3d7c17", "Url": "https://api.github.com/repos/jitsi/jitsi", "Date": "2013-07-24T18:12:43Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.java.sip.communicator.impl.gui.main.chat.MetaContact.getDefaultContact()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2952/buggy-version/src.net.java.sip.communicator.impl.gui.main.chat.MetaContactChatSession.java", "BodyUseAPI": [], "Fixed commit": "ce6f3801d7f3556a4d9cf24b638b93777c3d7c17", "Url": "https://api.github.com/repos/jitsi/jitsi", "Date": "2013-07-24T18:12:43Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.CharSequence.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(contentStr.equals(content.getText().toString()))) { activity.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { pb.setVisibility(View.GONE); } }); return filterResults; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5536/buggy-version/src.org.qii.weiciyuan.ui.send.AutoCompleteAdapter.java", "BodyUseAPI": [], "Fixed commit": "7672766a7dfc830b872ffc1163cce704516c60dd", "Url": "https://api.github.com/repos/Jewelzqiu/weiciyuan", "Date": "2013-09-16T14:28:17Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.isLive) { item.time = mTimer.currMillisecond; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5773/buggy-version/DanmakuFlameMaster.src.main.java.master.flame.danmaku.controller.DrawTask.java", "BodyUseAPI": [], "Fixed commit": "47765f4a3754c622860d1de928c78eae2df29fb3", "Url": "https://api.github.com/repos/ctiao/DanmakuFlameMaster", "Date": "2014-11-23T12:53:10Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(it.sephiroth.android.library.widget.AdapterView.isInEditMode())) { mAccessibilityManager = ((android.view.accessibility.AccessibilityManager) (it.sephiroth.android.library.widget.AdapterView.getContext().getSystemService(Context.ACCESSIBILITY_SERVICE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8413/buggy-version/library.src.it.sephiroth.android.library.widget.AdapterView.java", "BodyUseAPI": [], "Fixed commit": "642dfb40744b7ab54529bd2a59f5d45205dcd89f", "Url": "https://api.github.com/repos/lassic/HorizontalVariableListView", "Date": "2014-03-18T14:10:04Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (br != null) { try { br.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7898/buggy-version/src.main.java.com.arkea.satd.stoplightio.parsers.ConsoleParser.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "8a8421656d19fdfa4734ad874cfdae8ec71da5c9", "Url": "https://api.github.com/repos/jenkinsci/stoplightio-report-plugin", "Date": "2017-12-27T23:46:32Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((efe.getIndex().getOneBased()) >= (model.getFilteredPersonList().size())) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4773/buggy-version/src.main.java.seedu.address.logic.LogicManager.java", "BodyUseAPI": [], "Fixed commit": "21cee81abb4146f68ff448be5bb8f4823df73acb", "Url": "https://api.github.com/repos/CS2103AUG2017-T13-B1/main", "Date": "2017-10-18T17:02:16Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((server.getServerId()) != null) { saveOrUpdateTask(server, started, repeatInterval); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1141/buggy-version/omod.src.main.java.org.openmrs.module.sync.web.controller.ConfigServerFormController.java", "BodyUseAPI": ["org.openmrs.module.sync.web.controller.ConfigServerFormController.saveOrUpdateTask(org.openmrs.module.sync.server.RemoteServer,java.lang.Boolean,java.lang.Integer)"], "Fixed commit": "09be5e7c739a8b4f1d8e90cab7440a411518ea86", "Url": "https://api.github.com/repos/ehasalud/openmrs-module-sync", "Date": "2014-10-20T11:32:44Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((counter) == 1) com.s7design.menu.volley.VolleySingleton.getInstance(getApplicationContext()).addToRequestQueue(executeRequest);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2852/buggy-version/MenuProject.src.com.s7design.menu.activities.CheckoutActivity.java", "BodyUseAPI": [], "Fixed commit": "c946f0666bfadd1531d2f7b2278bbb03358d7025", "Url": "https://api.github.com/repos/s7droid/Menu", "Date": "2015-07-17T08:43:06Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((slotId >= 0) && ((this.getSlot(slotId)) != null)) && ((this.getSlot(slotId).getStack()) == (playerIn.getHeldItem()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1586/buggy-version/src.main.java.minestrapteam.mods.minestrappolation.inventory.container.ContainerBackpack.java", "BodyUseAPI": [], "Fixed commit": "e41fb2e7928b24d0316c7aa0ddf19130db112987", "Url": "https://api.github.com/repos/MinestrapTeam/Minestrappolation-4", "Date": "2015-10-01T01:22:15Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1604/buggy-version/hadoop-common-project.hadoop-common.src.main.java.io.hops.security.UsersGroups.java", "BodyUseAPI": [], "Fixed commit": "baac6e373e7b628e1ee210fcbd2624448bf44f00", "Url": "https://api.github.com/repos/maismail/hops", "Date": "2016-04-28T14:07:16Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getPermission(arg0)) != (net.md_5.bungee.Permission.ADMIN)) && ((getPermission(arg0)) != (net.md_5.bungee.Permission.MODERATOR))) { arg0.sendMessage(dev.xyzcraft.net.bkbw.StringFormatter.error(\"Permission denied.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/620/buggy-version/src.dev.xyzcraft.net.bkbw.CommandWhitelist.java", "BodyUseAPI": ["net.md_5.bungee.command.CommandSender.sendMessage(dev.xyzcraft.net.bkbw.StringFormatter.error(\"Permission denied.\"))"], "Fixed commit": "4b3f35ea055cf22b6f0f65ba1b4f620f68e26f17", "Url": "https://api.github.com/repos/macintosh264/BungeeKickBan", "Date": "2012-12-19T16:54:16Z"},
{"Line": "=>693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defeater instanceof org.pandcorps.furguardians.Player) { org.pandcorps.furguardians.Enemy.reward(((org.pandcorps.furguardians.Player) (defeater)), this, def, defeatMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3368/buggy-version/game.furguardians.org.pandcorps.furguardians.Enemy.java", "BodyUseAPI": [], "Fixed commit": "bb4aba0c51d4b2f099f80cc95ff8f3379de57075", "Url": "https://api.github.com/repos/pandcorps/pandam", "Date": "2015-09-04T10:53:51Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umass.ckc.wo.smgr.SessionManager.getStudentState()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((state.getCurProblemMode()) != null) effort = effortComputer.computeEffort(state); else effort = curProbData.getEffort();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5626/buggy-version/woServer.src.edu.umass.ckc.wo.tutor.studmod.StudentProblemHistory.java", "BodyUseAPI": ["edu.umass.ckc.wo.tutor.studmod.EffortHeuristic.computeEffort(edu.umass.ckc.wo.state.StudentState)"], "Fixed commit": "6aca1a7696533b87c30f6a894c17f11ccc56cf79", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2017-02-06T22:17:35Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(verticesInCreationOrder.isEmpty())) { for (org.apache.flink.runtime.executiongraph.ExecutionJobVertex ejv : verticesInCreationOrder) { ejv.cancel(); } }else { transitionState(current, JobStatus.FAILED, t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/605/buggy-version/flink-runtime.src.main.java.org.apache.flink.runtime.executiongraph.ExecutionGraph.java", "BodyUseAPI": [], "Fixed commit": "6a1a2c14992c63f35ad9b4636a47bf3ce27eb554", "Url": "https://api.github.com/repos/tillrohrmann/flink", "Date": "2015-02-16T12:28:51Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList.size()", "java.util.ArrayList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((te instanceof freemarker.core.Macro) && (ln > 1)) && ((instructionStack.get((ln - 2))) instanceof freemarker.core.UnifiedCall)) { return ((freemarker.core.UnifiedCall) (instructionStack.get((ln - 2)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1018/buggy-version/src.main.java.freemarker.core.Environment.java", "BodyUseAPI": ["java.util.ArrayList.get(int)"], "Fixed commit": "535f9623c341733c6383657dcbe94307d81371c4", "Url": "https://api.github.com/repos/freemarker/freemarker-old", "Date": "2014-12-15T22:43:36Z"},
{"Line": "=>896", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returnMask.contains(ReadMask.SUMMARYVALUES)) { columnsToDecode = callback.getColumnsToDecode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1836/buggy-version/domino-jna.src.main.java.com.mindoo.domino.jna.NotesCollection.java", "BodyUseAPI": [], "Fixed commit": "54f0948c5f0595301ceb7a4cb01f8d541d503a5e", "Url": "https://api.github.com/repos/klehmann/domino-jna", "Date": "2016-04-04T20:32:41Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cfm.waker.adapter.AlarmListAdapter.getItem(viewPager.getCurrentItem())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentRow instanceof com.cfm.waker.view.RowBlock) { ((com.cfm.waker.view.RowBlock) (currentRow)).performAlarmsInit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7936/buggy-version/src.com.cfm.waker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cbea8f21b3c867c98fc7575f27dadc7c31d647c1", "Url": "https://api.github.com/repos/7heaven/Waker", "Date": "2013-07-26T15:05:40Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (uri != null) { editor.putString(com.ms_square.android.design.overlay.util.PrefUtil.PREF_DESIGN_IMAGE_URI, uri.toString()); }else { editor.remove(com.ms_square.android.design.overlay.util.PrefUtil.PREF_DESIGN_IMAGE_URI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9083/buggy-version/app.src.main.java.com.ms_square.android.design.overlay.util.PrefUtil.java", "BodyUseAPI": ["android.net.Uri.toString()", "SharedPreferences.Editor.putString(java.lang.String,uri.toString())"], "Fixed commit": "53e491d4a776c6160dbe84d2f4e00f1c320973c3", "Url": "https://api.github.com/repos/Manabu-GT/DesignOverlay-Android", "Date": "2015-08-05T15:47:10Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!labelExist) { deleteCurrentState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7875/buggy-version/src.main.java.seedu.address.logic.commands.EditLabelCommand.java", "BodyUseAPI": [], "Fixed commit": "0f29e67f809b31b15be5badcde45e5edb5cf96f0", "Url": "https://api.github.com/repos/CS2103JAN2017-T16-B2/main", "Date": "2017-04-01T07:05:09Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.findViewById(R.id.table_score)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tableLayout == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/744/buggy-version/app.src.main.java.blassoft.hitappme.ScoreActivity.java", "BodyUseAPI": [], "Fixed commit": "c84e24b96a56e85b01d1314772ae37ed679fed21", "Url": "https://api.github.com/repos/blasvicco/HitApp", "Date": "2016-05-11T01:11:43Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.findViewById(R.id.table_result)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tableLayout == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/744/buggy-version/app.src.main.java.blassoft.hitappme.ResultListActivity.java", "BodyUseAPI": [], "Fixed commit": "c84e24b96a56e85b01d1314772ae37ed679fed21", "Url": "https://api.github.com/repos/blasvicco/HitApp", "Date": "2016-05-11T01:11:43Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.abcdsxg.app.appJump.Data.Utils.ToolUtils.getAppIcon(android.app.Activity,appInfo.getPkgName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (drawableIcon != null) { shortcut.putExtra(Intent.EXTRA_SHORTCUT_ICON, cn.abcdsxg.app.appJump.Data.Utils.ToolUtils.drawableToBitamp(drawableIcon)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2140/buggy-version/app.src.main.java.cn.abcdsxg.app.appJump.Data.Utils.ToolUtils.java", "BodyUseAPI": ["android.content.Intent.putExtra(Intent.EXTRA_SHORTCUT_ICON,android.graphics.Bitmap)", "cn.abcdsxg.app.appJump.Data.Utils.ToolUtils.drawableToBitamp(android.graphics.drawable.Drawable)"], "Fixed commit": "5c2e98a1fdabf4a26410218f1bc88773057a4daf", "Url": "https://api.github.com/repos/abcdsxg/appJump", "Date": "2016-12-10T03:27:39Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(failStart)) { startService(new android.content.Intent(this, cn.abcdsxg.app.appJump.Service.TouchService.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2140/buggy-version/app.src.main.java.cn.abcdsxg.app.appJump.Service.TouchService.java", "BodyUseAPI": [], "Fixed commit": "5c2e98a1fdabf4a26410218f1bc88773057a4daf", "Url": "https://api.github.com/repos/abcdsxg/appJump", "Date": "2016-12-10T03:27:39Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ast.getParent().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.CASE_GROUP)) { scopeStack.push(new com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck.ScopeData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/750/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck.java", "BodyUseAPI": [], "Fixed commit": "a4bd81a948e0de1c50223a31e8dd725eb24ac1aa", "Url": "https://api.github.com/repos/Bhavik3/checkstyle", "Date": "2015-12-04T08:01:49Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getClass()) == (shoppingView.basket.model.InvisibleBasketItem.class)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6636/buggy-version/src.shoppingView.basket.model.Basket.java", "BodyUseAPI": [], "Fixed commit": "5daacf13da1ba93f74e3253f0967808bb744b515", "Url": "https://api.github.com/repos/hannacarlssoon/iMat", "Date": "2017-03-08T14:41:49Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.htw.DeviceRouteData.getDistanceToDestination()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dtd == (-1)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8616/buggy-version/src.de.htw.RoutingTable.java", "BodyUseAPI": [], "Fixed commit": "391806cb4b3b7d1e1c74e3bf951821701f335fac", "Url": "https://api.github.com/repos/timb-stud/DSDV", "Date": "2012-05-29T16:25:29Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.freeplane.main.application.MapViewDockingWindows.getContainingDockedWindow(java.awt.Component)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (dockedView.isMinimized()) dockedView.restore(); else dockedView.restoreFocus();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1397/buggy-version/freeplane.src.org.freeplane.main.application.MapViewDockingWindows.java", "BodyUseAPI": ["net.infonode.docking.View.restore()", "net.infonode.docking.View.restoreFocus()"], "Fixed commit": "75b8c104890d9ea69fd45b9bb6a1e66add80bc97", "Url": "https://api.github.com/repos/freeplane/freeplane", "Date": "2014-02-09T08:57:00Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (line == null) { this.columnNames.clear(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1024/buggy-version/src.main.java.org.encog.util.csv.ReadCSV.java", "BodyUseAPI": [], "Fixed commit": "dd5ba9aba1d60610d7ff3015b872be4cb3c697bd", "Url": "https://api.github.com/repos/encog/encog-java-core", "Date": "2011-08-07T11:35:27Z"},
{"Line": "=>3354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((extra) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2188/buggy-version/src.main.java.core.com.giisoo.core.bean.Bean.java", "BodyUseAPI": [], "Fixed commit": "6d1c1bb4c76f125cb5e108adf2bfd6ee6a2e4777", "Url": "https://api.github.com/repos/s20000/webgiisoo", "Date": "2015-08-24T00:12:22Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.ConfigurationSection.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(sub_value instanceof org.bukkit.configuration.ConfigurationSection)) { node.set(key, sub_value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4811/buggy-version/src.main.java.com.bergerkiller.bukkit.common.config.ConfigurationNode.java", "BodyUseAPI": ["com.bergerkiller.bukkit.common.config.ConfigurationNode.set(java.lang.String,java.lang.Object)"], "Fixed commit": "84c51c984b11bb3c8456087a620d32acf9b3b9a5", "Url": "https://api.github.com/repos/bergerhealer/BKCommonLib", "Date": "2017-11-18T01:51:42Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clientRequest.getIdentifier()) == 2) { java.lang.String usname = new java.lang.String(clientRequest.getUserName()); byte[] channelName = clientRequest.getChannelName(); java.lang.String cName = new java.lang.String(channelName); if ((cm.getChannelMap().get(cName).containsKey(cName)) == false) cm.createChannel(cName); cm.getChannelMap().get(cName).put(pair, usname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4124/buggy-version/src.RequestHandler.java", "BodyUseAPI": ["ClientRequest.getUserName()", "ClientRequest.getChannelName()"], "Fixed commit": "cd88226a63ca023c3c64f56ff3b8c98b060b1cf2", "Url": "https://api.github.com/repos/herotitizhang/DuckServer", "Date": "2014-11-04T17:13:53Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem) != null) { com.example.terz99.digitalmenuv2.MyOrderActivity.totalPrice -= (com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem.getmPrice()) * ((double) (com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem.getmQuantity())); com.example.terz99.digitalmenuv2.MyOrderActivity.deletedItem = null; setTotalPrice(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6790/buggy-version/app.src.main.java.com.example.terz99.digitalmenuv2.MyOrderActivity.java", "BodyUseAPI": [], "Fixed commit": "3dce3dac28e90f3eb106658dfe27d36e2c0be7a5", "Url": "https://api.github.com/repos/terz99/digital-menu-v2", "Date": "2017-04-26T00:55:16Z"},
{"Line": "=>1919", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (naturalIdCacheKey.equals(previousCacheKey)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8964/buggy-version/hibernate-core.src.main.java.org.hibernate.engine.internal.StatefulPersistenceContext.java", "BodyUseAPI": [], "Fixed commit": "e644e453673ac5bfcbac2f5c315cef25f98bff5b", "Url": "https://api.github.com/repos/hibernate/hibernate-orm", "Date": "2012-05-09T09:46:49Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vswe.stevescarts.blocks.tileentities.TileEntityCartAssembler.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(stack.isEmpty())) { addText(lines, Localization.GUI.ASSEMBLER.INVALID_HULL.translate(), 10357518); hasErrors = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3361/buggy-version/src.main.java.vswe.stevescarts.guis.GuiCartAssembler.java", "BodyUseAPI": [], "Fixed commit": "3aa50765c4a74f9b07d8d30758286a09c4b206ec", "Url": "https://api.github.com/repos/TechReborn/StevesCarts", "Date": "2017-05-06T19:02:28Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split.length) > 2) { tmp = (tmp + \"_\") + (split[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4560/buggy-version/src.main.java.me.eccentric_nz.TARDIS.advanced.TARDISStorageListener.java", "BodyUseAPI": [], "Fixed commit": "71837ca36b83d728edb7624fbd14c920d48dfdd2", "Url": "https://api.github.com/repos/eccentricdevotion/TARDIS", "Date": "2014-01-02T02:39:30Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.lowerBound) != null) l = java.lang.Integer.valueOf(ctx.lowerBound.getText());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9105/buggy-version/Source.eu.modelwriter.core.alloyinecore.src.main.java.eu.modelwriter.core.alloyinecore.structure.TypedElement.java", "BodyUseAPI": ["java.lang.Integer.valueOf(ctx.lowerBound.getText())", "ctx.lowerBound.getText()"], "Fixed commit": "a37a2e5f4fc386ac103e893bc554feef181e656c", "Url": "https://api.github.com/repos/ModelWriter/WP3", "Date": "2017-01-25T07:57:54Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parameters.get(i).getRequest().equals(\"format\")) { filters.add(((\" LOWER(doc.document_type_id) = '\" + (parameters.get(i).getValue())) + \"' \")); }else if (parameters.get(i).getRequest().equals(\"group\")) { filters.add(((\" scr.group_id = \" + (parameters.get(i).getValue())) + \" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4838/buggy-version/wmss.src.de.wwu.wmss.factory.FactoryWMSS.java", "BodyUseAPI": ["java.util.ArrayList<de.wwu.wmss.core.RequestParameter>.get(int)", "java.util.ArrayList<java.lang.String>.add(((\" LOWER(doc.document_type_id)  = '\" + (parameters.get(i).getValue())) + \"' \"))", "parameters.get(i).getValue()", "java.util.ArrayList<de.wwu.wmss.core.RequestParameter>.get(int)", "parameters.get(i).getValue()", "java.util.ArrayList<java.lang.String>.add(((\" scr.group_id  = \" + (parameters.get(i).getValue())) + \" \"))", "parameters.get(i).getRequest().equals(java.lang.String)", "java.util.ArrayList<de.wwu.wmss.core.RequestParameter>.get(int)", "parameters.get(i).getRequest()"], "Fixed commit": "de20347da8ca7542179c4eddc575a71471d2c4b6", "Url": "https://api.github.com/repos/jimjonesbr/wmss", "Date": "2017-10-05T14:48:51Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(value.equals(\"\"))) { splitRumus.enQueue(new Element(new Info(value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6077/buggy-version/Kalkulator.java", "BodyUseAPI": ["Queue.enQueue(Element)"], "Fixed commit": "81db158363c1763e202347734304477a1e02e4b3", "Url": "https://api.github.com/repos/nmfzone/data-structure-practicum-project", "Date": "2015-06-20T23:43:59Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION_CODES.JELLY_BEAN) <= (Build.VERSION.SDK_INT)) { getViewTreeObserver().removeOnGlobalLayoutListener(this); }else { getViewTreeObserver().removeGlobalOnLayoutListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8654/buggy-version/NavigationBar.src.me.tangke.navigationbar.NavigationBarView.java", "BodyUseAPI": [], "Fixed commit": "ded406b0132158b19d724e1e75b498c9458e5d1e", "Url": "https://api.github.com/repos/TangKe/NavigationBar", "Date": "2015-10-15T06:28:07Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tier == null) { itemStack = getPlugin().getDropManager().constructItemStackFromTier(getPlugin().getTierManager().getRandomTierWithChance(), ItemGenerationReason.COMMAND); }else { itemStack = getPlugin().getDropManager().constructItemStackFromTier(tier, ItemGenerationReason.COMMAND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2896/buggy-version/src.main.java.net.nunnerycode.bukkit.mythicdrops.commands.MythicDropsCommand.java", "BodyUseAPI": ["getPlugin().getDropManager().constructItemStackFromTier(net.nunnerycode.bukkit.mythicdrops.api.tiers.Tier,ItemGenerationReason.COMMAND)"], "Fixed commit": "21fb10ef7544530be487f196d7d365b47071f9fb", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2013-09-05T15:50:07Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((req.block) instanceof org.agilewiki.jfile.block.FBlock) { Finish.req.send(this, next, new org.agilewiki.jactor.RP<java.lang.Object>() { @java.lang.Override public void processResponse(java.lang.Object response) throws java.lang.Exception { responsePending = false; nextSend(); } }); }else { req.send(this, next, new org.agilewiki.jactor.RP<java.lang.Object>() { @java.lang.Override public void processResponse(java.lang.Object response) throws java.lang.Exception { responsePending = false; nextSend(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/296/buggy-version/src.main.java.org.agilewiki.jfile.transactions.BlockFlowBuffer.java", "BodyUseAPI": ["org.agilewiki.jfile.transactions.ProcessBlock.send(org.agilewiki.jfile.transactions.BlockFlowBuffer,org.agilewiki.jfile.transactions.BlockProcessor,org.agilewiki.jactor.RP<java.lang.Object>)"], "Fixed commit": "dedd1d117ef7755fce8c98a24b4f0aa65acc4c85", "Url": "https://api.github.com/repos/laforge49/JFile", "Date": "2012-05-20T06:21:00Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdom.Element.getChild(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (anLnspElement != null) { sensorExtractConfig.setAn_LNSP_name(com.bc.fiduceo.post.plugin.nwp.NwpPostProcessingPlugin.getElementValueTrimmed(anLnspElement)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5704/buggy-version/post-processing-tool.src.main.java.com.bc.fiduceo.post.plugin.nwp.NwpPostProcessingPlugin.java", "BodyUseAPI": ["com.bc.fiduceo.post.plugin.nwp.NwpPostProcessingPlugin.getElementValueTrimmed(org.jdom.Element)", "com.bc.fiduceo.post.plugin.nwp.SensorExtractConfiguration.setAn_LNSP_name(java.lang.String)"], "Fixed commit": "8a1b5132cd925927a55567d247008b0f62c4ccf3", "Url": "https://api.github.com/repos/FIDUCEO/MMS", "Date": "2017-09-18T09:30:01Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<S>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (primitiveClass1 != null) { primitiveClass = primitiveClass1; clazz = class2; }else if (primitiveClass2 != null) { primitiveClass = primitiveClass2; clazz = class1; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4190/buggy-version/src.main.java.cz.rpridal.j8mapper.SimpleMethodManipulator.java", "BodyUseAPI": [], "Fixed commit": "a60984c694609bcd57b6aac1d8ab8fdd47623f7c", "Url": "https://api.github.com/repos/rpridal/J8Mapper", "Date": "2015-10-12T08:21:36Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(socket.isClosed())) { sendString(\"disconnect: ok\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4903/buggy-version/Network.src.Connection.java", "BodyUseAPI": [], "Fixed commit": "8931b3e83ccebe1f09a9a4d70b4fbdf6202fcd03", "Url": "https://api.github.com/repos/prozb/chat", "Date": "2017-12-11T00:42:14Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<MondrianDef.Expression>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (expression != null) { final java.lang.Comparable value = valueList.get(i); final mondrian.spi.Dialect.Datatype datatype = datatypeList.get(i); sqlQuery.addWhere(mondrian.rolap.sql.SqlConstraintUtils.constrainLevel2(sqlQuery, expression, datatype, value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/569/buggy-version/src.main.mondrian.rolap.sql.MemberKeyConstraint.java", "BodyUseAPI": ["mondrian.rolap.sql.SqlQuery.addWhere(mondrian.rolap.sql.SqlConstraintUtils.constrainLevel2(sqlQuery, expression, datatype, value))", "mondrian.rolap.sql.SqlConstraintUtils.constrainLevel2(mondrian.rolap.sql.SqlQuery,MondrianDef.Expression,Dialect.Datatype,java.lang.Comparable)"], "Fixed commit": "c378707ac5eee0bef904ff1b6b3792bf75ba4506", "Url": "https://api.github.com/repos/nextelBIS/mondrian", "Date": "2015-02-16T15:49:44Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (neutronSubnet != null) { subnets.put(neutronSubnet.getId(), neutronSubnet.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7889/buggy-version/cloud-openstack.src.main.java.com.sequenceiq.cloudbreak.cloud.openstack.common.OpenStackPlatformResources.java", "BodyUseAPI": ["org.openstack4j.model.network.Subnet.getId()", "java.util.Map<java.lang.String, java.lang.String>.put(neutronSubnet.getId(),neutronSubnet.getName())", "org.openstack4j.model.network.Subnet.getName()"], "Fixed commit": "3347a5086c0283c51c0ba8f1dc3714fe8de59b71", "Url": "https://api.github.com/repos/hortonworks/cloudbreak", "Date": "2017-09-18T10:14:10Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((theIdColumn) == null) { theIdColumn = columns.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7793/buggy-version/annotation.server.src.main.java.com.google.refine.commands.project.ViewPresetRowAnnotationsCommand.java", "BodyUseAPI": [], "Fixed commit": "aaab78a6925ebf57b24c2fea945aac395571b5ab", "Url": "https://api.github.com/repos/blawney/mev", "Date": "2014-03-31T23:29:03Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((theIdColumn) == null) { theIdColumn = project.columnModel.getColumnByName(\"Symbol\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7793/buggy-version/annotation.server.src.main.java.com.google.refine.commands.project.ViewPresetRowAnnotationsCommand.java", "BodyUseAPI": [], "Fixed commit": "aaab78a6925ebf57b24c2fea945aac395571b5ab", "Url": "https://api.github.com/repos/blawney/mev", "Date": "2014-03-31T23:29:03Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (failure == null) { delegate.accept(new io.crate.data.ListenableBatchIterator(iterator, completionFuture), null); }else { delegate.accept(null, failure); completionFuture.completeExceptionally(failure); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1715/buggy-version/dex.src.main.java.io.crate.data.ListenableBatchConsumer.java", "BodyUseAPI": ["java.util.concurrent.CompletableFuture<java.lang.Void>.completeExceptionally(java.lang.Throwable)", "io.crate.data.BatchConsumer.accept(<nulltype>,java.lang.Throwable)"], "Fixed commit": "3439312d9d1e223b256053e9ec3448874449bff8", "Url": "https://api.github.com/repos/crate/crate", "Date": "2017-03-15T12:24:12Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.outOfInput()) { s.offset = start; org.cubeengine.dirigent.parser.Parser.parseText(s, true); }else { if (org.cubeengine.dirigent.parser.Parser.is(s, org.cubeengine.dirigent.parser.Parser.MACRO_END)) { s.output(DefaultMacro.DEFAULT_MACRO); ++(s.offset); }else if (org.cubeengine.dirigent.parser.ParserHelper.isDigit(s.in.charAt(s.offset))) { org.cubeengine.dirigent.parser.Parser.parseIndexedMacro(s, start); }else { org.cubeengine.dirigent.parser.Parser.parseNamedMacro(s, start); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/613/buggy-version/src.main.java.org.cubeengine.dirigent.parser.Parser.java", "BodyUseAPI": ["org.cubeengine.dirigent.parser.Parser.State.output(DefaultMacro.DEFAULT_MACRO)", "org.cubeengine.dirigent.parser.Parser.parseNamedMacro(org.cubeengine.dirigent.parser.Parser.State,int)", "org.cubeengine.dirigent.parser.Parser.parseText(org.cubeengine.dirigent.parser.Parser.State,boolean)", "java.lang.String.charAt(int)", "org.cubeengine.dirigent.parser.ParserHelper.isDigit(char)", "org.cubeengine.dirigent.parser.Parser.is(org.cubeengine.dirigent.parser.Parser.State,char)", "org.cubeengine.dirigent.parser.Parser.parseIndexedMacro(org.cubeengine.dirigent.parser.Parser.State,int)"], "Fixed commit": "54d1a022ebcde140609090f2559802dafbce12ce", "Url": "https://api.github.com/repos/CubeEngine/Dirigent", "Date": "2017-06-03T17:11:47Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (searchTerm.equals(\"gas\")) { com.google.android.gms.maps.model.Marker aMarker = com.codepath.enroute.util.MapUtil.addMarker(map, yB.getLatLng(), yB.getName(), yB.getDescription(), com.google.android.gms.maps.model.BitmapDescriptorFactory.fromResource(R.drawable.teal_dot)); aMarker.setTag(yB); }else if ((searchTerm.equals(\"coffee\")) || (searchTerm.equals(\"restaurant\"))) { com.google.android.gms.maps.model.Marker aMarker = com.codepath.enroute.util.MapUtil.addMarker(map, yB.getLatLng(), yB.getName(), yB.getDescription(), com.google.android.gms.maps.model.BitmapDescriptorFactory.fromResource(R.drawable.orange_dot)); aMarker.setTag(yB); }else { com.google.android.gms.maps.model.Marker aMarker = com.codepath.enroute.util.MapUtil.addMarker(map, yB.getLatLng(), yB.getName(), yB.getDescription(), com.google.android.gms.maps.model.BitmapDescriptorFactory.fromResource(R.drawable.orange_dot)); aMarker.setTag(yB); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/561/buggy-version/app.src.main.java.com.codepath.enroute.fragments.PlacesMapFragment.java", "BodyUseAPI": ["com.codepath.enroute.fragments.PlacesMapFragment.equals(java.lang.String)", "com.codepath.enroute.fragments.PlacesMapFragment.equals(java.lang.String)"], "Fixed commit": "879869ae8fa178bb285653bf64a6eb6da78c00e7", "Url": "https://api.github.com/repos/codepath2017androidgroup10/EnRoute", "Date": "2017-10-29T05:06:10Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (obj)) { this.fullClassName = obj.getType().getClassName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7202/buggy-version/src.io.lambdacloud.node.FuncCallNode.java", "BodyUseAPI": [], "Fixed commit": "3288756b975e40e02d8eb472f53fba3e47ed653c", "Url": "https://api.github.com/repos/yuemingl/ExprEngine", "Date": "2016-09-27T06:32:30Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (this.obj)) sb.append(\"call \").append(this.obj.toString()).append(\".\").append(this.methodName).append(\"(\"); else sb.append(\"call \").append(this.fullClassName).append(\".\").append(this.methodName).append(\"(\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7202/buggy-version/src.io.lambdacloud.node.FuncCallNode.java", "BodyUseAPI": [], "Fixed commit": "3288756b975e40e02d8eb472f53fba3e47ed653c", "Url": "https://api.github.com/repos/yuemingl/ExprEngine", "Date": "2016-09-27T06:32:30Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getMembers()) != null) { for (final japa.parser.ast.body.BodyDeclaration bd : type.getMembers()) { if (!(bd instanceof japa.parser.ast.body.MethodDeclaration)) { continue; } final japa.parser.ast.body.MethodDeclaration md = ((japa.parser.ast.body.MethodDeclaration) (bd)); methods.add(getMethod(md, typeFactory)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1517/buggy-version/src.main.java.com.github.marook.java_deobscurify.model.ArtifactFactory.java", "BodyUseAPI": ["japa.parser.ast.body.TypeDeclaration.getMembers()"], "Fixed commit": "92dad9d127eaa788a51a026892498adc4032eec9", "Url": "https://api.github.com/repos/marook/java-deobscurify", "Date": "2011-04-22T14:43:30Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ex.getMessage().contains(\"503\")) { java.lang.System.out.println(((\"HTTP-Status 503 (\" + (this.p.getURL())) + \"), trying again\")); this.add(this.p); }else { throw new java.lang.RuntimeException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/269/buggy-version/MangaLib.src.main.java.de.herrlock.manga.downloader.dqc.DownloadQueueContainer.java", "BodyUseAPI": [], "Fixed commit": "73b5826ab72e2679e2c823d16624fea471b3491c", "Url": "https://api.github.com/repos/herrlock/Manga", "Date": "2015-03-09T17:30:09Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(this.stack.empty())) && ((this.stack.size()) != 4)) { this.setWidth(this.stack.get(0)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6156/buggy-version/src.main.java.org.verapdf.pd.font.cff.Type2CharStringParser.java", "BodyUseAPI": ["org.verapdf.pd.font.cff.Type2CharStringParser.setWidth(this.stack.get(0))", "this.stack.get(int)"], "Fixed commit": "1990f349b77f3bc339940ba02edc7fc0836cb213", "Url": "https://api.github.com/repos/shem-sergey/veraPDF-pdflib", "Date": "2017-06-02T17:25:47Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keepResourcesOpen) && ((previousOutput) == output)) { writerSettings.setHeaderWritingEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6997/buggy-version/src.main.java.com.univocity.parsers.common.routine.AbstractRoutines.java", "BodyUseAPI": [], "Fixed commit": "0daaa4ca39590f90450945d7cbea203a1f3d342a", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2017-10-16T03:13:41Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.eclipse.viatra.transformation.runtime.emf.rules.batch.BatchTransformationRule<?, ?>, java.lang.Integer>.get(context.getRuleByActivationId(iTransition))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (priority == null) { priority = java.lang.Integer.valueOf(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5471/buggy-version/dse.plugins.org.eclipse.viatra.dse.src.org.eclipse.viatra.dse.api.strategy.impl.FixedPriorityStrategy.java", "BodyUseAPI": [], "Fixed commit": "0ebdbbfc111a8e2c1e8e8fc2ffb322c8c9de4737", "Url": "https://api.github.com/repos/viatra/org.eclipse.viatra", "Date": "2017-02-15T16:37:17Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.eclipse.viatra.transformation.runtime.emf.rules.batch.BatchTransformationRule<?, ?>, java.lang.Integer>.get(context.getRuleByActivationId(iTransition))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (integer == null) { integer = java.lang.Integer.valueOf(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5471/buggy-version/dse.plugins.org.eclipse.viatra.dse.src.org.eclipse.viatra.dse.api.strategy.impl.FixedPriorityStrategy.java", "BodyUseAPI": [], "Fixed commit": "0ebdbbfc111a8e2c1e8e8fc2ffb322c8c9de4737", "Url": "https://api.github.com/repos/viatra/org.eclipse.viatra", "Date": "2017-02-15T16:37:17Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getId()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4224/buggy-version/src.org.adaptlab.chpir.android.participanttracker.models.Participant.java", "BodyUseAPI": [], "Fixed commit": "ec555740862ff3937c2663731bf2c68b9ef57230", "Url": "https://api.github.com/repos/mnipper/ParticipantTracker", "Date": "2014-08-05T18:22:40Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getId()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4224/buggy-version/src.org.adaptlab.chpir.android.participanttracker.models.Participant.java", "BodyUseAPI": [], "Fixed commit": "ec555740862ff3937c2663731bf2c68b9ef57230", "Url": "https://api.github.com/repos/mnipper/ParticipantTracker", "Date": "2014-08-05T18:22:40Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getServer().getPluginManager().getPlugin(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (vault != null) { getServer().getServicesManager().register(net.milkbowl.vault.economy.Economy.class, new org.melonbrew.fe.Economy_Fe(this), this, ServicePriority.Highest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1850/buggy-version/src.org.melonbrew.fe.Fe.java", "BodyUseAPI": [], "Fixed commit": "133b5089eff25c4ec3e58fab528e134f0d4d4443", "Url": "https://api.github.com/repos/niccholaspage/Fe", "Date": "2012-07-25T22:34:58Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.thinkbigthings.tictactoe.Board.getAvailableMoves()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (moves.isEmpty()) { throw new java.lang.IllegalArgumentException(\"Board has no available moves\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7335/buggy-version/src.main.java.org.thinkbigthings.tictactoe.player.RandomPlayer.java", "BodyUseAPI": [], "Fixed commit": "cc78caa2b910c6af02e3284d6fdf2e739e078a17", "Url": "https://api.github.com/repos/thinkbigthings/tic-tac-toe", "Date": "2016-11-20T10:02:02Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputLine.length()) == 0) return new Command(null, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5502/buggy-version/Parser.java", "BodyUseAPI": [], "Fixed commit": "e680932d1d405ee68a5f4e6cb8b687cfaf04022d", "Url": "https://api.github.com/repos/sayge/zuul", "Date": "2017-07-28T15:32:54Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getRelative(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (source.getType().equals(Material.REDSTONE_TORCH_OFF)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7716/buggy-version/src.net.sacredlabyrinth.Phaed.PreciousStones.managers.ForceFieldManager.java", "BodyUseAPI": [], "Fixed commit": "bad7d63556d6f9166254e7156199ee76dcf97d15", "Url": "https://api.github.com/repos/marcelo-mason/PreciousStones", "Date": "2011-05-25T15:54:12Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs(x)) + (java.lang.Math.abs(z))) == 2) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7716/buggy-version/src.net.sacredlabyrinth.Phaed.PreciousStones.managers.ForceFieldManager.java", "BodyUseAPI": [], "Fixed commit": "bad7d63556d6f9166254e7156199ee76dcf97d15", "Url": "https://api.github.com/repos/marcelo-mason/PreciousStones", "Date": "2011-05-25T15:54:12Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.toArray(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((_operands.length) == 1) { return _operands[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9247/buggy-version/src.com.colors.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "e27fafd9b34e91e301cc53ebd8917042985e1711", "Url": "https://api.github.com/repos/zappd/HueSlopeField", "Date": "2014-03-02T07:24:37Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_ble.isConnected(null)) { _ble.disconnectAndClose(false, new nl.dobots.bluenet.ble.base.callbacks.IStatusCallback() { @java.lang.Override public void onSuccess() { } @java.lang.Override public void onError(int error) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/174/buggy-version/app.src.main.java.nl.dobots.bluenetexample.ControlActivity.java", "BodyUseAPI": ["nl.dobots.bluenet.ble.extended.BleExt.disconnectAndClose(boolean,nl.dobots.bluenet.ble.base.callbacks.IStatusCallback)"], "Fixed commit": "d11f8ea2b6ebfe98d9c203505756126feb30a381", "Url": "https://api.github.com/repos/crownstone/bluenet-example-android", "Date": "2016-06-03T14:41:56Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.net.ssl.X509TrustManager.getAcceptedIssuers()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (defaultJavaTrustedCerts != null) { return defaultJavaTrustedCerts; }else { return net.lightbody.bmp.mitm.util.TrustUtil.EMPTY_CERTIFICATE_ARRAY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3563/buggy-version/mitm.src.main.java.net.lightbody.bmp.mitm.util.TrustUtil.java", "BodyUseAPI": [], "Fixed commit": "3c0c6bf00c7f20b5861e4dc3214b6fac35ca0528", "Url": "https://api.github.com/repos/jekh/browsermob-proxy", "Date": "2016-05-16T21:45:49Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["msg.getUrl().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((results.length) == 2) && (((results[1].startsWith(\"/dev\")) || (results[1].startsWith(\"/proc\"))) || (results[1].startsWith(\"/sys\")))) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(argerr(\" the url contains an invalid folder[/dev or /proc or /sys]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7703/buggy-version/plugin.nfsPrimaryStorage.src.main.java.org.zstack.storage.primary.nfs.NfsPrimaryStorageApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "2a4104b9f007b174f6cf718131ccdae91f3164ef", "Url": "https://api.github.com/repos/AlanJager/zstack", "Date": "2017-04-14T13:06:00Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.primary.local.APIAddLocalPrimaryStorageMsg.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((url.startsWith(\"/dev\")) || (url.startsWith(\"/proc\"))) || (url.startsWith(\"/sys\"))) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(argerr(\" the url contains an invalid folder[/dev or /proc or /sys]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7703/buggy-version/plugin.localstorage.src.main.java.org.zstack.storage.primary.local.LocalStorageApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "2a4104b9f007b174f6cf718131ccdae91f3164ef", "Url": "https://api.github.com/repos/AlanJager/zstack", "Date": "2017-04-14T13:06:00Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(settingValueFromControl)) { updateComponentFromInput(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6770/buggy-version/plugin_ide.ui.src-lang.melnorme.util.swt.components.AbstractField.java", "BodyUseAPI": [], "Fixed commit": "0bb58e0d8237422a3e8199d158790e9100de7434", "Url": "https://api.github.com/repos/GoClipse/goclipse", "Date": "2015-05-20T18:49:54Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (path == null) { controller.getPreferences().putString(Preferences.FILE_CHOOSER_LAST_FOLDER, fileChooser.getSelectedFile().path()); }else { controller.getPreferences().putString(Preferences.FILE_CHOOSER_LAST_FOLDER, path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5978/buggy-version/editor.desktop.src.main.java.es.eucm.ead.editor.DesktopPlatform.java", "BodyUseAPI": ["controller.getPreferences().putString(Preferences.FILE_CHOOSER_LAST_FOLDER,java.lang.String)"], "Fixed commit": "f3d99c20e869dafc6f09a620af078f784219c9ad", "Url": "https://api.github.com/repos/imartinezortiz/ead", "Date": "2014-03-31T07:41:25Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mskcc.cbio.oncokb.controller.Evidence.getDescription()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (description != null) { description = description.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1631/buggy-version/web.src.main.java.org.mskcc.cbio.oncokb.controller.EvidenceController.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "2c8374e26841285261f9f4085f3943f32c568b32", "Url": "https://api.github.com/repos/JiaoJiao123/oncokb", "Date": "2017-03-22T18:40:58Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.InetAddress.getHostAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sip.equals(\"127.0.0.1\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4381/buggy-version/Game.src.objectsorting.Client.java", "BodyUseAPI": [], "Fixed commit": "078049e47ba899a73ed0374312f596282a2d7f44", "Url": "https://api.github.com/repos/SajadMirzaei/Game", "Date": "2015-11-12T16:13:59Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 0) { result = db.query(((\"SELECT * FROM \" + (config.getDbPrefix())) + \"Responses WHERE keyphrase LIKE '%';\")); }else { result = db.query(((((\"SELECT * FROM \" + (config.getDbPrefix())) + \"Responses WHERE keyphrase LIKE '%\") + (args[0])) + \"%';\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7465/buggy-version/src.org.jaggy.bukkit.ample.cmds.cmdQList.java", "BodyUseAPI": ["org.jaggy.bukkit.ample.db.DB.query(((((\"SELECT * FROM \" + (config.getDbPrefix())) + \"Responses WHERE keyphrase LIKE '%\") + (args[0])) + \"%';\"))"], "Fixed commit": "4d80123c5a3cd2f02ebfa39121c4127a0f9589fb", "Url": "https://api.github.com/repos/dwdcweb/Ample-Chat-Bot", "Date": "2012-04-28T23:22:12Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (game.Game.actionResolver.getSignedInGPGS()) { game.Game.actionResolver.submitScoreGPGS(game.Game.lastScore); if ((game.Game.bestScoreSubmitted) < (game.Game.bestScore)) { game.Game.actionResolver.submitScoreGPGS(game.Game.bestScore); game.Game.bestScoreSubmitted = game.Game.bestScore; prefs.putFloat(game.Game.BEST_SUBMITTED_ID, game.Game.bestScoreSubmitted); prefs.flush(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/250/buggy-version/core.src.game.Game.java", "BodyUseAPI": ["game.ActionResolver.submitScoreGPGS(float)", "game.ActionResolver.submitScoreGPGS(float)"], "Fixed commit": "71a25cdf0d24706cf2380c067f09c5435a1e0bd8", "Url": "https://api.github.com/repos/ferrolho/android-obstakles", "Date": "2015-01-28T02:16:41Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newVal.intValue()) == 0) { messageIdToSendRemaining.remove(messageId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5686/buggy-version/src.com.comcast.cns.controller.CNSMonitor.java", "BodyUseAPI": [], "Fixed commit": "6bac21ff73e568ec7fe9a865859e170a1451c322", "Url": "https://api.github.com/repos/Comcast/cmb", "Date": "2013-01-08T21:38:01Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((delimited.length) > 1) { output = line.split(\"CIS555###Split%%%Document\\\\*\\\\*\\\\*Line\")[1]; }else { output = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2226/buggy-version/src.edu.upenn.cis455.indexer.Indexer.java", "BodyUseAPI": [], "Fixed commit": "21e23c1bd0b9e39e8a140d079c02c58afcb56e41", "Url": "https://api.github.com/repos/aharelick/cis555-project", "Date": "2015-05-05T06:03:54Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (currentMsg != null) { foundMyMsg = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5231/buggy-version/black-wolves-seeder.src.main.java.com.blackwolves.seeder.ModernYahooRunnable.java", "BodyUseAPI": [], "Fixed commit": "9610d79b93bbd73e3301901070ba6083ef6540bb", "Url": "https://api.github.com/repos/black-wolves/black-wolves", "Date": "2016-04-10T03:39:36Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((model.joption.length()) > 2) && (model.joption.substring(0, 2).equals(\"pp\"))) { java.lang.String pieces = model.joption.substring(2); if (model.joption.contains(\",\")) { java.lang.String[] options = pieces.split(\",\"); int choice = javax.swing.JOptionPane.showOptionDialog(new javax.swing.JFrame(), \"Your pawn has been promoted. Select a piece.\", \"Promotion\", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, icon, options, options[0]); IChessPiece promoted = stringToPiece(options[choice]); model.placePiece(move.toRow, move.toColumn, promoted); }else { javax.swing.JOptionPane.showMessageDialog(null, (\"Your pawn has been promoted to \" + pieces), \"Chess Game\", javax.swing.JOptionPane.INFORMATION_MESSAGE, icon); } model.joption = \"\"; updatePieces(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1160/buggy-version/ChessPrj.src.ChessPanel.java", "BodyUseAPI": ["model.joption.contains(java.lang.String)", "model.joption.substring(int)", "ChessModel.placePiece(move.toRow,move.toColumn,IChessPiece)"], "Fixed commit": "88bcc32c6f1bd235d34d91b7857c3240c623d0a4", "Url": "https://api.github.com/repos/KellinMcAvoy/ChessPrj", "Date": "2016-03-22T02:02:15Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (s != null) { s.remap(map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2671/buggy-version/modules.wyrl.src.wyautl.core.Automaton.java", "BodyUseAPI": ["wyautl.core.Automaton.State.remap(int[])"], "Fixed commit": "8c99e01807da09a557df056391ced5ccbe427310", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2013-05-20T08:51:04Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entityManager.getTransaction().isActive()) entityManager.getTransaction().rollback();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1385/buggy-version/ee.src.main.java.net.jees.ee.persistence.PersistenceManager.java", "BodyUseAPI": ["entityManager.getTransaction().rollback()", "javax.persistence.EntityManager.getTransaction()"], "Fixed commit": "184211a9ce7f8b1764ef5f25c864dd7ddcad3403", "Url": "https://api.github.com/repos/laemmlem/JavaEE-Schulung-HDM", "Date": "2017-04-19T16:43:17Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entityManager.getTransaction().isActive()) entityManager.getTransaction().rollback();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1385/buggy-version/ee.src.main.java.net.jees.ee.persistence.PersistenceManager.java", "BodyUseAPI": ["entityManager.getTransaction().rollback()", "javax.persistence.EntityManager.getTransaction()"], "Fixed commit": "184211a9ce7f8b1764ef5f25c864dd7ddcad3403", "Url": "https://api.github.com/repos/laemmlem/JavaEE-Schulung-HDM", "Date": "2017-04-19T16:43:17Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b == 94) b = 100;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2735/buggy-version/src.com.jpii.navalbattle.pavo.grid.EntityManager.java", "BodyUseAPI": [], "Fixed commit": "1376b6966e1a73d76db108ec0cf77dd5a524ef86", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2013-03-01T23:34:46Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeKeeper) != null) { timeKeeper.setDelay(((int) (source.getValue()))); delaySliderLbl.setText(((((\"Delay: \" + (delaySlider.getValue())) + \" ms \") + \"Fps: \") + ((int) (1000 / (java.lang.Math.max(delaySlider.getValue(), java.lang.Double.MIN_VALUE)))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3747/buggy-version/MainApp.com.LuDik.EvoAI.ActionPanel.java", "BodyUseAPI": [], "Fixed commit": "79dbde7a8154cc88e4f0a29a0a7d6b4741799a3d", "Url": "https://api.github.com/repos/LuukCrooijmans9/PWS-LuDik", "Date": "2017-10-07T21:09:38Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((serverProperties.size()) == 0) { throw new java.lang.RuntimeException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7841/buggy-version/server.db-postgres.src.main.java.cc.blynk.server.db.DBManager.java", "BodyUseAPI": [], "Fixed commit": "96e0446d33ac50b24bbbff5536058c0ae06a04a7", "Url": "https://api.github.com/repos/blynkkk/blynk-server", "Date": "2016-02-22T22:02:11Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((_data.get(call).telemetryConfig) != null) findex = _data.get(call).telemetryConfig.getIndex(field);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1898/buggy-version/habmodem.src.com.brejza.matt.habmodem.LineGraph.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, ukhas.Payload>.get(java.lang.String)", "_data.get(call).telemetryConfig.getIndex(java.lang.String)"], "Fixed commit": "f3e90e126280d7cddec746f23b54d343ea35817a", "Url": "https://api.github.com/repos/mattbrejza/rtty_modem", "Date": "2013-02-08T14:56:42Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1898/buggy-version/rtty_dev.src.ukhas.Telemetry_string.java", "BodyUseAPI": [], "Fixed commit": "f3e90e126280d7cddec746f23b54d343ea35817a", "Url": "https://api.github.com/repos/mattbrejza/rtty_modem", "Date": "2013-02-08T14:56:42Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expectNextCommaOrRCurly) { switch (t) { case RCURLY : case COMMA : expectNextCommaOrRCurly = false; break; default : error(\"unbalanced key value pairs\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5103/buggy-version/src.json.JSON.java", "BodyUseAPI": [], "Fixed commit": "46e333f68d425643ac72cc6f5ab9495996300e8f", "Url": "https://api.github.com/repos/a2800276/json.java", "Date": "2015-02-05T20:53:25Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.file.exists()) { fileMD5 = com.atlauncher.utils.Utils.getMD5(this.file); }else { fileMD5 = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/383/buggy-version/src.com.atlauncher.workers.ATLauncherDownloadable.java", "BodyUseAPI": ["com.atlauncher.utils.Utils.getMD5(java.io.File)"], "Fixed commit": "f81eaa336e4a6f3e7e92b2ab27381de52a7880a2", "Url": "https://api.github.com/repos/RyanTheAllmighty/ATLauncher", "Date": "2013-10-31T13:36:48Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.file.exists()) { fileMD5 = com.atlauncher.utils.Utils.getMD5(this.file); }else { fileMD5 = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/383/buggy-version/src.com.atlauncher.workers.MojangDownloadable.java", "BodyUseAPI": ["com.atlauncher.utils.Utils.getMD5(java.io.File)"], "Fixed commit": "f81eaa336e4a6f3e7e92b2ab27381de52a7880a2", "Url": "https://api.github.com/repos/RyanTheAllmighty/ATLauncher", "Date": "2013-10-31T13:36:48Z"},
{"Line": "=>2049", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nodelist.item(i).getAttributes().getNamedItem(\"url\")) != null) { java.lang.String url = nodelist.item(i).getAttributes().getNamedItem(\"url\").getNodeValue(); pow.setURL(url.trim().replace(\"&amp;\", \"&\").replace(\"aspx\", \"php\").replace(\"www.wizards.com/dndinsider/compendium\", \"localhost/ddi\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/149/buggy-version/src.cm.model.Stats.java", "BodyUseAPI": ["org.w3c.dom.Node.getAttributes()", "org.w3c.dom.NamedNodeMap.getNamedItem(java.lang.String)", "org.w3c.dom.Node.getNodeValue()", "org.w3c.dom.NodeList.item(int)"], "Fixed commit": "bc0f6220bd0e3bbf4eb16b1ba8bccb35cb5c2925", "Url": "https://api.github.com/repos/mattakaslash/jcm", "Date": "2012-04-22T19:08:10Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.hm.weidacher.softarch.shareit.data.dao.BookDao.getByIsbn(book.getIsbn())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (persisted == null) { return error(Response.Status.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8829/buggy-version/src.main.java.edu.hm.weidacher.softarch.shareit.rest.BookResource.java", "BodyUseAPI": [], "Fixed commit": "a3951563c818102a18499e9668c5646ccb8332d4", "Url": "https://api.github.com/repos/abcshmedu/shareit-summer-2017-foreveralone-2", "Date": "2017-04-25T16:48:39Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rapi.isLoggedIn())) { boolean success = false; if (loginPrefs.getString(\"username\", \"\").equals(\"\")) success = false; else success = rapi.login(loginPrefs.getString(\"username\", \"\"), loginPrefs.getString(\"password\", \"\")); if (success) manageUploadQueue(); else w.make(\"Not logged in.\", Waffle.IMAGE_X); }else { manageUploadQueue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/648/buggy-version/Android.Data_Collector.src.edu.uml.cs.isense.collector.ManualEntry.java", "BodyUseAPI": ["edu.uml.cs.isense.comm.RestAPI.login(loginPrefs.getString(\"username\", \"\"),loginPrefs.getString(\"password\", \"\"))"], "Fixed commit": "91d37bc682a0457389569bda3ffeebf114f86fd2", "Url": "https://api.github.com/repos/isenseDev/iSENSE-Hardware", "Date": "2013-04-03T15:04:40Z"},
{"Line": "=>1299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.equals(Constants.FieldConstants.ExperimentConstants.PROJECT_ID)) { fil.put(AbstractExpCatResource.ExperimentConstants.PROJECT_ID, filters.get(field)); }else if (field.equals(Constants.FieldConstants.ExperimentConstants.GATEWAY_ID)) { fil.put(AbstractExpCatResource.ExperimentConstants.GATEWAY_ID, filters.get(field)); }else if (field.equals(Constants.FieldConstants.ExperimentConstants.DESCRIPTION)) { fil.put(AbstractExpCatResource.ExperimentConstants.DESCRIPTION, filters.get(field)); }else if (field.equals(Constants.FieldConstants.ExperimentConstants.EXECUTION_ID)) { fil.put(AbstractExpCatResource.ExperimentConstants.EXECUTION_ID, filters.get(field)); }else if (field.equals(Constants.FieldConstants.ExperimentConstants.EXPERIMENT_STATUS)) { fil.put(AbstractExpCatResource.ExperimentStatusConstants.STATE, filters.get(field)); }else if (field.equals(Constants.FieldConstants.ExperimentConstants.FROM_DATE)) { fromTime = java.lang.Long.parseLong(filters.get(field)); }else if (field.equals(Constants.FieldConstants.ExperimentConstants.TO_DATE)) { toTime = java.lang.Long.parseLong(filters.get(field)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8762/buggy-version/modules.registry.registry-core.src.main.java.org.apache.airavata.registry.core.experiment.catalog.impl.ExperimentRegistry.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(AbstractExpCatResource.ExperimentConstants.DESCRIPTION,java.lang.String)", "java.lang.Long.parseLong(java.lang.String)", "java.lang.String.equals(Constants.FieldConstants.ExperimentConstants.GATEWAY_ID)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.String.equals(Constants.FieldConstants.ExperimentConstants.EXECUTION_ID)", "java.lang.String.equals(Constants.FieldConstants.ExperimentConstants.TO_DATE)", "java.lang.String.equals(Constants.FieldConstants.ExperimentConstants.DESCRIPTION)", "java.util.Map<java.lang.String, java.lang.String>.put(AbstractExpCatResource.ExperimentConstants.PROJECT_ID,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(AbstractExpCatResource.ExperimentStatusConstants.STATE,java.lang.String)", "java.lang.String.equals(Constants.FieldConstants.ExperimentConstants.FROM_DATE)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.String.equals(Constants.FieldConstants.ExperimentConstants.EXPERIMENT_STATUS)", "java.lang.Long.parseLong(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(AbstractExpCatResource.ExperimentConstants.EXECUTION_ID,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(AbstractExpCatResource.ExperimentConstants.GATEWAY_ID,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "5748db779b0603243a57a181d0123ef8d7023d81", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2015-10-23T21:47:31Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.majorkernelpanic.streaming.rtsp.RtspClient.Response.parseResponse(java.io.BufferedReader)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (response.headers.containsKey(\"server\")) { android.util.Log.v(net.majorkernelpanic.streaming.rtsp.RtspClient.TAG, (\"RTSP server name:\" + (response.headers.get(\"server\")))); }else { android.util.Log.v(net.majorkernelpanic.streaming.rtsp.RtspClient.TAG, \"RTSP server name unknown\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/748/buggy-version/src.net.majorkernelpanic.streaming.rtsp.RtspClient.java", "BodyUseAPI": ["android.util.Log.v(java.lang.String,java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "a89166f2981aa03c3bbb21d230638fa86f5dcfcb", "Url": "https://api.github.com/repos/igarape/libstreaming", "Date": "2013-10-21T22:45:28Z"},
{"Line": "=>857", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mAppEntry.info.enabled) { showDialogInner(com.android.settings.applications.InstalledAppDetails.DLG_DISABLE, 0); }else { new com.android.settings.applications.InstalledAppDetails.DisableChanger(this, mAppEntry.info, android.content.pm.PackageManager.COMPONENT_ENABLED_STATE_DEFAULT).execute(((java.lang.Object) (null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1589/buggy-version/src.com.android.settings.applications.InstalledAppDetails.java", "BodyUseAPI": ["com.android.settings.applications.InstalledAppDetails.DisableChanger.execute(<nulltype>)"], "Fixed commit": "6ba9e021d40b0232c5d46afb366cf986b3fa9ce4", "Url": "https://api.github.com/repos/TheCollective/packages_apps_Settings", "Date": "2011-07-19T01:11:46Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((choices.getSelectedIndex()) > 0) { UserInterfaceLayer.BusinessLayerDataControl dataControl = new UserInterfaceLayer.BusinessLayerDataControl(); productsAddedToCart = new java.util.ArrayList<BusinessLayer.ProductClasses.Product>(dataControl.factoryDesignPatternSearch()); BusinessLayer.ProductClasses.Product p = productsAddedToCart.get(selected); getComment.display(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/810/buggy-version/iteration7.src.UserInterfaceLayer.ProductListUI.java", "BodyUseAPI": [], "Fixed commit": "dad623fcff4a694eaa99097c6047e8d45c85c6c5", "Url": "https://api.github.com/repos/System-Analysis-Team-9-Project-2016/DCM-Computing", "Date": "2016-04-24T21:37:18Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldObj.isRemote) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7867/buggy-version/src.main.java.openblocks.common.tileentity.TileEntityAutoEnchantmentTable.java", "BodyUseAPI": [], "Fixed commit": "928ab13a9a7b3597b5ae72d4914f8ad7ee585092", "Url": "https://api.github.com/repos/OpenMods/OpenBlocks", "Date": "2014-10-11T22:03:26Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (co.cask.cdap.etl.batch.StructuredRecordWritable.schemaCache.containsKey(schemaBytes)) { schema = co.cask.cdap.etl.batch.StructuredRecordWritable.schemaCache.get(schemaBytes); }else { java.lang.String schemaStr = co.cask.cdap.api.common.Bytes.toString(schemaBytes); schema = co.cask.cdap.api.data.schema.Schema.parseJson(schemaStr); co.cask.cdap.etl.batch.StructuredRecordWritable.schemaCache.put(schemaBytes, schema); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2324/buggy-version/cdap-app-templates.cdap-etl.cdap-etl-batch.src.main.java.co.cask.cdap.etl.batch.StructuredRecordWritable.java", "BodyUseAPI": ["java.util.Map<byte[], co.cask.cdap.api.data.schema.Schema>.put(byte[],co.cask.cdap.api.data.schema.Schema)", "java.util.Map<byte[], co.cask.cdap.api.data.schema.Schema>.get(byte[])", "co.cask.cdap.api.common.Bytes.toString(byte[])"], "Fixed commit": "9d08c38334bc4ff3be3110e76be18663a4a62863", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2017-09-02T00:41:49Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text.contains(SHOWER)) || (text.contains(RAIN))) { nightIconId = R.drawable.rain; }else if (text.equalsIgnoreCase(CLEAR)) { nightIconId = R.drawable.moon; }else if ((text.contains(CLOUDS)) || (text.contains(SPELLS))) { nightIconId = R.drawable.cloudy_night; }else { nightIconId = R.drawable.cloud; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6118/buggy-version/app.src.main.java.com.example.pm.forecast.Forecast.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "7c5358da30299c0a36d064ff2410daf104d1adba", "Url": "https://api.github.com/repos/c2td/Ilmateade", "Date": "2016-11-11T10:53:31Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text.contains(SHOWER)) || (text.contains(RAIN))) { dayIconId = R.drawable.rain; }else if (text.equalsIgnoreCase(CLEAR)) { dayIconId = R.drawable.sun; }else if ((text.contains(CLOUDS)) || (text.contains(SPELLS))) { dayIconId = R.drawable.cloudy; }else { dayIconId = R.drawable.cloud; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6118/buggy-version/app.src.main.java.com.example.pm.forecast.Forecast.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "7c5358da30299c0a36d064ff2410daf104d1adba", "Url": "https://api.github.com/repos/c2td/Ilmateade", "Date": "2016-11-11T10:53:31Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.g4.java.model.Individual>.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((size % 2) != 0) { populations.add(populations.get((size - 1))); size++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1492/buggy-version/TP04.java.src.com.g4.java.reproduction.MonogamousReproduction.java", "BodyUseAPI": ["java.util.List<com.g4.java.model.Individual>.get(int)", "java.util.List<com.g4.java.model.Individual>.add(populations.get((size - 1)))"], "Fixed commit": "b9349a528468334aee50f28f4e21323955c3e268", "Url": "https://api.github.com/repos/Macarse/sia2012", "Date": "2012-06-12T03:01:07Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["withdraw.getItem(i).clone()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((item.getAmount()) == (-1)) { item.setAmount(64); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5141/buggy-version/src.com.afforess.minecartmaniachestcontrol.itemcontainer.BrewingStandTopContainer.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.setAmount(int)"], "Fixed commit": "775d730c2fc3a4d3d09aca19159c2e6a0741e0f0", "Url": "https://api.github.com/repos/N3X15/MinecartMania-Chest-Control", "Date": "2011-12-16T19:09:44Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContext().obtainStyledAttributes(android.util.AttributeSet,R.styleable.NumberView,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (a.hasValue(R.styleable.NumberView_number)) { mNumberString = a.getString(R.styleable.NumberView_number); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/389/buggy-version/library.src.main.java.xyz.hanks.library.NumberView.java", "BodyUseAPI": ["android.content.res.TypedArray.getString(R.styleable.NumberView_number)"], "Fixed commit": "d52b74a6a852584b6c1953713e0c0f29175447ff", "Url": "https://api.github.com/repos/hanks-zyh/NumberAnimation", "Date": "2016-09-01T10:14:56Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (\"LOCAL\".equals(domain)) { domain = properties.getServerName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7952/buggy-version/src.main.java.Sirius.server.localserver.user.UserStore.java", "BodyUseAPI": [], "Fixed commit": "aa7f5184a4c713b98e221c1b76ff806e06e202ee", "Url": "https://api.github.com/repos/cismet/cids-server", "Date": "2012-09-13T16:42:06Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRuleLevel()) == 0) { dbg.commence(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8774/buggy-version/CI_Aufgabe3.teil1.symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.java", "BodyUseAPI": [], "Fixed commit": "e2921cd0a9ea82ffc9df09ddf66287ed7f8dc971", "Url": "https://api.github.com/repos/Flor1an/CI_WiSe2013-2014", "Date": "2013-11-27T12:01:54Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRuleLevel()) == 0) { dbg.terminate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8774/buggy-version/CI_Aufgabe3.teil1.symbolraetsel_AST_Normalisiert.output.SymbolraetselASTNormalizer.java", "BodyUseAPI": [], "Fixed commit": "e2921cd0a9ea82ffc9df09ddf66287ed7f8dc971", "Url": "https://api.github.com/repos/Flor1an/CI_WiSe2013-2014", "Date": "2013-11-27T12:01:54Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valueType.isArray()) { mpvs.add(propertyPath, values.toArray()); }else { for (java.lang.String requestValue : values) { mpvs.add(propertyPath, requestValue); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7158/buggy-version/src.main.java.de.interseroh.report.controller.ParameterFormBinder.java", "BodyUseAPI": [], "Fixed commit": "6e309a4d14d69458d99c80e1dde9f5bfdb961d4c", "Url": "https://api.github.com/repos/interseroh/report-cockpit-birt-web", "Date": "2015-08-13T21:39:55Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.getTag().compareTo(\"e6\")) == 0) && (!(this._board.getSquares().get(\"e12\").hasPiece()))) this._board.getSquares().get(\"e12\").addPiece(piece);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9056/buggy-version/src.com.petrifiednightmares.singularityChess.logic.Square.java", "BodyUseAPI": ["com.petrifiednightmares.singularityChess.logic.Board.getSquares()", "this._board.getSquares().get(java.lang.String)", "this._board.getSquares().get(\"e12\").addPiece(com.petrifiednightmares.singularityChess.pieces.AbstractPiece)"], "Fixed commit": "d8dae5ca2077d70208400f5f87c79b8fbbaff31d", "Url": "https://api.github.com/repos/razorstorm/SingularityChess", "Date": "2012-11-20T05:06:47Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.getTag().compareTo(\"d6\")) == 0) && (!(this._board.getSquares().get(\"d12\").hasPiece()))) this._board.getSquares().get(\"d12\").addPiece(piece);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9056/buggy-version/src.com.petrifiednightmares.singularityChess.logic.Square.java", "BodyUseAPI": ["this._board.getSquares().get(\"d12\").addPiece(com.petrifiednightmares.singularityChess.pieces.AbstractPiece)", "com.petrifiednightmares.singularityChess.logic.Board.getSquares()", "this._board.getSquares().get(java.lang.String)"], "Fixed commit": "d8dae5ca2077d70208400f5f87c79b8fbbaff31d", "Url": "https://api.github.com/repos/razorstorm/SingularityChess", "Date": "2012-11-20T05:06:47Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.getTag().compareTo(\"e12\")) == 0) && (this._board.getSquares().get(\"e6\").hasPiece())) this._board.getSquares().get(\"e6\").removePiece();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9056/buggy-version/src.com.petrifiednightmares.singularityChess.logic.Square.java", "BodyUseAPI": ["this._board.getSquares().get(java.lang.String)", "com.petrifiednightmares.singularityChess.logic.Board.getSquares()", "this._board.getSquares().get(\"e6\").removePiece()"], "Fixed commit": "d8dae5ca2077d70208400f5f87c79b8fbbaff31d", "Url": "https://api.github.com/repos/razorstorm/SingularityChess", "Date": "2012-11-20T05:06:47Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.getTag().compareTo(\"e6\")) == 0) && (this._board.getSquares().get(\"e12\").hasPiece())) this._board.getSquares().get(\"e12\").removePiece();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9056/buggy-version/src.com.petrifiednightmares.singularityChess.logic.Square.java", "BodyUseAPI": ["this._board.getSquares().get(\"e12\").removePiece()", "this._board.getSquares().get(java.lang.String)", "com.petrifiednightmares.singularityChess.logic.Board.getSquares()"], "Fixed commit": "d8dae5ca2077d70208400f5f87c79b8fbbaff31d", "Url": "https://api.github.com/repos/razorstorm/SingularityChess", "Date": "2012-11-20T05:06:47Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((taxLine) != null) { exTaxTotal = inTaxTotal.divide(taxLine.getValue().add(java.math.BigDecimal.ONE), 2, java.math.BigDecimal.ROUND_HALF_UP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5928/buggy-version/axelor-supplychain.src.main.java.com.axelor.apps.supplychain.service.invoice.generator.InvoiceLineGeneratorSupplyChain.java", "BodyUseAPI": [], "Fixed commit": "c6a86e1c4a1bc02fb88ad8272df29aa7c5633767", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2015-10-18T10:15:07Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((taxLine) != null) { inTaxTotal = exTaxTotal.add(exTaxTotal.multiply(taxLine.getValue())).setScale(2, java.math.RoundingMode.HALF_EVEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5928/buggy-version/axelor-supplychain.src.main.java.com.axelor.apps.supplychain.service.invoice.generator.InvoiceLineGeneratorSupplyChain.java", "BodyUseAPI": [], "Fixed commit": "c6a86e1c4a1bc02fb88ad8272df29aa7c5633767", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2015-10-18T10:15:07Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openforis.collect.android.viewmodelmanager.UiAttribute.getUiRecord()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (uiRecord.isKeyAttribute(attribute)) uiRecord.keyAttributeUpdated();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8349/buggy-version/model.src.main.java.org.openforis.collect.android.viewmodelmanager.ViewModelManager.java", "BodyUseAPI": ["org.openforis.collect.android.viewmodelmanager.UiRecord.keyAttributeUpdated()"], "Fixed commit": "8098d709efc5e4bb4ae0da53e84928984bae46ad", "Url": "https://api.github.com/repos/cdanielw/collect-mobile", "Date": "2014-07-09T13:05:35Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4497/buggy-version/src.org.pikater.core.ontology.subtrees.newOption.values.NullValue.java", "BodyUseAPI": [], "Fixed commit": "0f374c6d2353c6f4658cefcf5608dfbe5e12bc91", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-09-18T18:32:22Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == obj) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4497/buggy-version/src.org.pikater.core.ontology.subtrees.newOption.values.NullValue.java", "BodyUseAPI": [], "Fixed commit": "0f374c6d2353c6f4658cefcf5608dfbe5e12bc91", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-09-18T18:32:22Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getClass()) != (obj.getClass())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4497/buggy-version/src.org.pikater.core.ontology.subtrees.newOption.values.NullValue.java", "BodyUseAPI": [], "Fixed commit": "0f374c6d2353c6f4658cefcf5608dfbe5e12bc91", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-09-18T18:32:22Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof com.intellij.plugins.haxe.lang.psi.impl.HaxeCatchStatement) { final com.intellij.plugins.haxe.lang.psi.impl.HaxeParameter catchParameter = com.intellij.psi.util.PsiTreeUtil.getChildOfType(this, com.intellij.plugins.haxe.lang.psi.impl.HaxeParameter.class); if (catchParameter != null) { result.add(catchParameter); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5315/buggy-version/src.common.com.intellij.plugins.haxe.lang.psi.impl.HaxePsiCompositeElementImpl.java", "BodyUseAPI": [], "Fixed commit": "23d8c2da4a01aa7192b91ca3fbebf352394d384b", "Url": "https://api.github.com/repos/eliasku/intellij-haxe", "Date": "2016-02-18T18:32:38Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.stepic.droid.model.Unit.getProgressId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (progressId != null) { progress = mProgressDao.get(DbStructureProgress.Column.ID, progressId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2842/buggy-version/app.src.main.java.org.stepic.droid.store.dao.UnitDaoImpl.java", "BodyUseAPI": ["org.stepic.droid.store.dao.IDao<org.stepic.droid.model.Progress>.get(DbStructureProgress.Column.ID,java.lang.String)"], "Fixed commit": "f46673fe9dbeaa14766d0933b3af2b78fa18523a", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2016-06-01T18:11:35Z"},
{"Line": "=>771", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.portal.webui.navigation.UINavigationNodeSelector.searchNode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (targetNode == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/267/buggy-version/webui.portal.src.main.java.org.exoplatform.portal.webui.navigation.UINavigationNodeSelector.java", "BodyUseAPI": [], "Fixed commit": "e4cab414c81c48b7d9ace5a1662625551abf75c6", "Url": "https://api.github.com/repos/trongtt/exogtn", "Date": "2011-05-09T11:18:09Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.portal.webui.navigation.UINavigationNodeSelector.getCopyNode()", "event.getRequestContext().getRequestParameter(UIComponent.OBJECTID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((currNode != null) && (currNode.getId().equals(nodeID))) currNode.setCloneNode(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/267/buggy-version/webui.portal.src.main.java.org.exoplatform.portal.webui.navigation.UINavigationNodeSelector.java", "BodyUseAPI": ["org.exoplatform.portal.webui.navigation.UINavigationNodeSelector.TreeNodeData.setCloneNode(boolean)"], "Fixed commit": "e4cab414c81c48b7d9ace5a1662625551abf75c6", "Url": "https://api.github.com/repos/trongtt/exogtn", "Date": "2011-05-09T11:18:09Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((date) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/495/buggy-version/src.main.java.caseloader.CaseInfo.java", "BodyUseAPI": [], "Fixed commit": "62d7b9e703dc14fa4a944a0aa63ae14c4f949d9d", "Url": "https://api.github.com/repos/tech-team/case-finder", "Date": "2014-12-21T15:49:36Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (m.find()) { outDate = m.group(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/495/buggy-version/src.main.java.caseloader.CaseInfo.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "62d7b9e703dc14fa4a944a0aa63ae14c4f949d9d", "Url": "https://api.github.com/repos/tech-team/case-finder", "Date": "2014-12-21T15:49:36Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.getAccessControlExposeHeaders()) != null) { org.restlet.engine.header.HeaderUtils.addHeader(HeaderConstants.HEADER_ACCESS_CONTROL_EXPOSE_HEADERS, org.restlet.engine.header.StringWriter.write(response.getAccessControlExposeHeaders()), headers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2440/buggy-version/modules.org.restlet.src.org.restlet.engine.header.HeaderUtils.java", "BodyUseAPI": ["org.restlet.Response.getAccessControlExposeHeaders()", "org.restlet.engine.header.StringWriter.write(response.getAccessControlExposeHeaders())", "org.restlet.engine.header.HeaderUtils.addHeader(HeaderConstants.HEADER_ACCESS_CONTROL_EXPOSE_HEADERS,org.restlet.engine.header.StringWriter.write(response.getAccessControlExposeHeaders()),org.restlet.util.Series<org.restlet.data.Header>)"], "Fixed commit": "73dca69da3ff7fa7800fd48e6bd191748e6d7cf3", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2015-09-19T06:10:04Z"},
{"Line": "=>824", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.nifi.attribute.expression.language.evaluation.Evaluator<?>.getResultType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resultType == (org.apache.nifi.expression.AttributeExpression.ResultType.BOOLEAN)) { chosenEvaluator = new org.apache.nifi.attribute.expression.language.evaluation.selection.AllAttributesEvaluator(((org.apache.nifi.attribute.expression.language.evaluation.BooleanEvaluator) (evaluator)), multiAttrEval); }else if (evaluator instanceof org.apache.nifi.attribute.expression.language.evaluation.reduce.ReduceEvaluator) { chosenEvaluator = new org.apache.nifi.attribute.expression.language.evaluation.selection.MappingEvaluator(((org.apache.nifi.attribute.expression.language.evaluation.reduce.ReduceEvaluator) (evaluator)), multiAttrEval); }else { throw new org.apache.nifi.attribute.expression.language.exception.AttributeExpressionLanguageException(\"Cannot evaluate Expression because it attempts to reference multiple attributes but does not use a reducing function\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6569/buggy-version/commons.nifi-expression-language.src.main.java.org.apache.nifi.attribute.expression.language.Query.java", "BodyUseAPI": [], "Fixed commit": "14cba2a57ec78cd1bb8e664474f0db1e6f2799b9", "Url": "https://api.github.com/repos/apache/nifi", "Date": "2015-01-07T19:16:51Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.getAbsolutePath().startsWith(project.getBasedir().getAbsolutePath()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9022/buggy-version/plugins.maven.src.main.java.org.evosuite.maven.GenerateMojo.java", "BodyUseAPI": [], "Fixed commit": "54efdc916448225267d57c8d054a18dd524505c9", "Url": "https://api.github.com/repos/EvoSuite/evosuite", "Date": "2016-02-11T21:23:11Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((o.getClass()) == (io.usethesource.vallang.impl.primitive.StringValue.BinaryBalancedLazyConcatString.class)) { return o.equals(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2003/buggy-version/src.main.java.io.usethesource.vallang.impl.primitive.StringValue.java", "BodyUseAPI": ["java.lang.Object.equals(io.usethesource.vallang.impl.primitive.StringValue.SimpleUnicodeString)"], "Fixed commit": "23e5730f00e40e586b87f3354b57e4d223cf439b", "Url": "https://api.github.com/repos/usethesource/vallang", "Date": "2017-11-27T07:32:46Z"},
{"Line": "=>918", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aTime != null) && (bTime == null)) { return 1; }else if ((aTime == null) && (bTime != null)) { return -1; }else if ((aTime == null) && (bTime == null)) { java.util.Date cTime = a.startTime; java.util.Date dTime = b.startTime; if ((cTime != null) && (dTime == null)) { return -1; }else if ((cTime == null) && (dTime != null)) { return 1; }else if ((cTime == null) && (dTime == null)) { return 0; } return java.lang.Long.compare(cTime.getTime(), dTime.getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9212/buggy-version/controllersvc.src.main.java.com.emc.storageos.workflow.Workflow.java", "BodyUseAPI": [], "Fixed commit": "a26da05447cd097617ba9721b094fe1fb4c8e7fb", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-01-27T18:27:00Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (children.isEmpty()) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8078/buggy-version/src.main.java.edu.vwc.mastermind.tree.Tree.java", "BodyUseAPI": [], "Fixed commit": "944e6ed2d7fe615638e8400e58ca698c75219bc5", "Url": "https://api.github.com/repos/Tomboyo/mastermind", "Date": "2017-06-24T03:22:46Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.yawk.client.Client.getClient().getPlayer().onGround) { if ((e.type) == (com.darkmagician6.eventapi.types.EventType.PRE)) { wasSneaking = net.yawk.client.Client.getClient().getPlayer().movementInput.sneak; net.yawk.client.Client.getClient().getPlayer().movementInput.sneak = true; }else if ((e.type) == (com.darkmagician6.eventapi.types.EventType.POST)) { net.yawk.client.Client.getClient().getPlayer().movementInput.sneak = wasSneaking; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1683/buggy-version/net.yawk.client.mods.movement.SafeWalk.java", "BodyUseAPI": [], "Fixed commit": "9d5a35c5fb67c2755d20c8ada527831c280cc136", "Url": "https://api.github.com/repos/10askinsw/Yawk-Client", "Date": "2015-08-07T22:36:42Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pos.getBlockIndex()) < (blocks.size())) { return getRemainingSpace(blocks.get(pos.getBlockIndex()), pos.getBlockPosition()); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7373/buggy-version/src.ch.se.inf.ethz.jcd.batman.vdisk.VirtualDiskSpace.java", "BodyUseAPI": ["java.util.List<ch.se.inf.ethz.jcd.batman.vdisk.IDataBlock>.get(int)", "ch.se.inf.ethz.jcd.batman.vdisk.VirtualDiskSpace.VirtualDiskSpacePosition.getBlockIndex()", "ch.se.inf.ethz.jcd.batman.vdisk.VirtualDiskSpace.VirtualDiskSpacePosition.getBlockPosition()", "ch.se.inf.ethz.jcd.batman.vdisk.VirtualDiskSpace.getRemainingSpace(blocks.get(pos.getBlockIndex()),long)"], "Fixed commit": "9b2f67c50bc26c098a3de34743150154ce820f5f", "Url": "https://api.github.com/repos/groggi/eth-jcd", "Date": "2013-04-06T08:44:45Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2029/buggy-version/src.main.java.ru.smakarov.gwttraining.shared.FieldVerifier.java", "BodyUseAPI": [], "Fixed commit": "894bdb51b149ca5979e9a30555f64d632de210b8", "Url": "https://api.github.com/repos/makarovservad/gittraining", "Date": "2013-11-18T07:49:23Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((keyValues.get(reportdataModel.getFieldName())) != null) json = new org.json.JSONObject(keyValues.get(reportdataModel.getFieldName()).toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6039/buggy-version/app.src.main.java.com.nakul.reportassignment.activity.ReportActivity.java", "BodyUseAPI": ["com.nakul.reportassignment.model.ReportDataModel.getFieldName()", "java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(reportdataModel.getFieldName())"], "Fixed commit": "83f72ced5c7a340452902cf1ee2ad3d4e379f14f", "Url": "https://api.github.com/repos/nakulpwr/dynamic-report_editor", "Date": "2017-09-26T20:48:49Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (roleName != null) { for (sx.blah.discord.handle.obj.IRole role : user.getRolesForGuild(bot.getGuildByID(Karren.conf.getGuildId()))) { if (role.getName().equals(roleName)) { result = true; } } }else { result = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7563/buggy-version/src.org.frostbite.karren.KarrenUtil.java", "BodyUseAPI": ["role.getName().equals(java.lang.String)"], "Fixed commit": "35ca1a4d9f53af0621bbf5624759015de16f23fc", "Url": "https://api.github.com/repos/ripxfrostbite/karren-sama", "Date": "2016-03-16T01:56:54Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(counters.isEmpty())) { raiseCounter(ast); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2800/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.sizes.MethodCountCheck.java", "BodyUseAPI": [], "Fixed commit": "c1c5a42addbfaeb9afb8732ab9b85e3c2e1afc24", "Url": "https://api.github.com/repos/kukreja-vikramaditya/checkstyle", "Date": "2017-07-19T09:26:30Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(formattedToken.getChunkTags().isEmpty())) { anTkRead.setChunkTags(formattedToken.getChunkTags()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4678/buggy-version/languagetool-core.src.main.java.org.languagetool.rules.patterns.MatchState.java", "BodyUseAPI": ["org.languagetool.AnalyzedTokenReadings.setChunkTags(formattedToken.getChunkTags())", "org.languagetool.AnalyzedTokenReadings.getChunkTags()"], "Fixed commit": "c3e5aeb453d4e3098c4438f7e2830e47ab339724", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2013-10-13T17:26:16Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((matches.length) > 1) { java.lang.String pkgFull = matches[1]; return pkgFull.substring(0, pkgFull.lastIndexOf(\"-\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/547/buggy-version/pelpa-web.src.main.java.org.popkit.leap.log.LogScanner.java", "BodyUseAPI": [], "Fixed commit": "96bd42ed6d8fa53b703398f3674434b0dcc945a9", "Url": "https://api.github.com/repos/popkit/pelpa", "Date": "2016-12-01T01:19:59Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lasersShot.size()) == 1) { lasersShot.clear(); }else { lasersShot.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2272/buggy-version/core.src.com.vratsasoftware.spaceinvaders.components.Components.java", "BodyUseAPI": ["java.util.ArrayList<com.vratsasoftware.spaceinvaders.components.Laser>.remove(int)", "java.util.ArrayList<com.vratsasoftware.spaceinvaders.components.Laser>.clear()"], "Fixed commit": "b7879e69274b3670f142cfa5f23ff66903b5c85c", "Url": "https://api.github.com/repos/Blago24/SpaceInvaders", "Date": "2017-03-28T22:14:20Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((guess < 0) || (guess > 100)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2569/buggy-version/Ch5.src.GuessingGame.java", "BodyUseAPI": [], "Fixed commit": "b22a12c7f74c11f32bec9274127192d67d52a584", "Url": "https://api.github.com/repos/ariannedee/TW101", "Date": "2014-07-15T23:51:07Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userGuess == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2569/buggy-version/Ch5.src.GuessingGame.java", "BodyUseAPI": [], "Fixed commit": "b22a12c7f74c11f32bec9274127192d67d52a584", "Url": "https://api.github.com/repos/ariannedee/TW101", "Date": "2014-07-15T23:51:07Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(commitDifference.iterator().hasNext())) { de.hoepmat.SyncCommitMessageService.LOGGER.info(\"Nichts zu committen.\"); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8456/buggy-version/src.main.java.de.hoepmat.SyncCommitMessageService.java", "BodyUseAPI": [], "Fixed commit": "f8f62fe2198a94c0489acbcfdb1504c2981c40c4", "Url": "https://api.github.com/repos/mahoe/gitSvnSync", "Date": "2016-01-22T13:57:09Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialWallet < 20) { throw new java.lang.IllegalArgumentException(\"Not enough money to play\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7529/buggy-version/src.main.java.io.zipcoder.zealotscasino.Player.java", "BodyUseAPI": [], "Fixed commit": "566b2b7e37c0201df1afd0a4a88a1b2158359cdb", "Url": "https://api.github.com/repos/aaronclong/ZealotsCasino2", "Date": "2017-05-11T17:56:06Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (altitude != 0) { return pressure + (0.12 * altitude); }else { return pressure; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2835/buggy-version/src.ca.cumulonimbus.pressurenetsdk.CbScience.java", "BodyUseAPI": [], "Fixed commit": "3dad78d9844fd1eb3e811413162044131954a2be", "Url": "https://api.github.com/repos/Cbsoftware/pressureNET-SDK", "Date": "2014-05-05T15:54:43Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.controllerTile) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8348/buggy-version/java.de.teamdna.mf.tile.TileEntityTank.java", "BodyUseAPI": [], "Fixed commit": "7b9a00e407f2caf01d05df1c0ce5f56223fd8866", "Url": "https://api.github.com/repos/websitenmaker12/MineFracturing", "Date": "2014-05-18T11:15:42Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<net.minecraftforge.fluids.FluidStack>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((stack.tag) != null) tag.setTag(\"stackTag\", stack.tag);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8348/buggy-version/java.de.teamdna.mf.tile.TileEntityExtractor.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.setTag(java.lang.String,stack.tag)"], "Fixed commit": "7b9a00e407f2caf01d05df1c0ce5f56223fd8866", "Url": "https://api.github.com/repos/websitenmaker12/MineFracturing", "Date": "2014-05-18T11:15:42Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.hasErrors()) { java.util.List<org.springframework.validation.ObjectError> errors = result.getAllErrors(); for (org.springframework.validation.ObjectError error : errors) { java.lang.System.out.println(error); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3129/buggy-version/GamesStoreProject.src.com.sebastian.web.gamestore.controller.tmp.AdminTmpController.java", "BodyUseAPI": ["org.springframework.validation.BindingResult.getAllErrors()"], "Fixed commit": "3898ec4d4c0bbf16d159a59be529f079ad660d93", "Url": "https://api.github.com/repos/nsebastiancristian/spring_game_store", "Date": "2014-04-22T19:59:05Z"},
{"Line": "=>1466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aTorpedo.equals(\"None\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5977/buggy-version/src.JSParser.java", "BodyUseAPI": [], "Fixed commit": "f31e96598285b93a58fd2b9d17d2034aeb6aac77", "Url": "https://api.github.com/repos/EdibleBug/WoWS-Fitting-Tool", "Date": "2016-07-09T02:55:26Z"},
{"Line": "=>1437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsp.getTorpedoList().size()) == 0) { torpedoList.add(\"None\"); return torpedoList; }else { for (int i = 0; i < (jsp.getTorpedoList().size()); i++) { torpedoList.add(i, jsp.getTorpedoList().get(i).substring(8)); } return torpedoList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5977/buggy-version/src.Calc.java", "BodyUseAPI": ["jsp.getTorpedoList().size()", "java.util.List<java.lang.String>.add(int,jsp.getTorpedoList().get(i).substring(8))", "JSParser.getTorpedoList()", "jsp.getTorpedoList().get(i).substring(int)", "JSParser.getTorpedoList()", "jsp.getTorpedoList().get(int)"], "Fixed commit": "f31e96598285b93a58fd2b9d17d2034aeb6aac77", "Url": "https://api.github.com/repos/EdibleBug/WoWS-Fitting-Tool", "Date": "2016-07-09T02:55:26Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (scm == null) { return new java.lang.Error(directory, pom.scm, new java.io.IOException((\"unknown scm: \" + (pom.scm)))); }else { return new net.oneandone.pommes.mount.Checkout(scm, directory, pom.scm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1529/buggy-version/src.main.java.net.oneandone.pommes.mount.Checkout.java", "BodyUseAPI": [], "Fixed commit": "22296ba68d20c800d8a2fefc085e430f7b7f1881", "Url": "https://api.github.com/repos/mlhartme/pommes", "Date": "2016-06-01T12:39:14Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (userId != null) { org.jbei.ice.lib.account.model.Account userAccount = org.jbei.ice.lib.dao.DAOFactory.getAccountDAO().getByEmail(userId); inCart = (org.jbei.ice.lib.dao.DAOFactory.getRequestDAO().getSampleRequestInCart(userAccount, entry)) != null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/867/buggy-version/src.main.java.org.jbei.ice.lib.entry.sample.SampleController.java", "BodyUseAPI": ["org.jbei.ice.lib.dao.DAOFactory.getAccountDAO().getByEmail(java.lang.String)"], "Fixed commit": "11bc0a1c707f2fd7b4319b024f017ceee98c38d8", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2014-10-17T00:14:50Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filters.equals(\"\")) { if ((this.filters) != null) { this.setChanged(); this.notifyObservers(); } this.filters = null; }else { if (((this.filters) == null) || (!(this.filters.equals(filters)))) { this.filters = filters; com.twillekes.portfolio.Metadata.schema.update(filters, com.twillekes.portfolio.Metadata.schema.filterss); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5589/buggy-version/src.com.twillekes.portfolio.Metadata.java", "BodyUseAPI": ["com.twillekes.portfolio.Metadata.MetadataSchema.update(java.lang.String,java.util.List<java.lang.String>)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "83996372eaca4fcbf021b3ca5c183287d6c4d6bb", "Url": "https://api.github.com/repos/twillekes/PageMaker", "Date": "2012-06-03T19:07:08Z"},
{"Line": "=>991", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (identifierEquals(\"TRANSACTION\")) { lexer.nextToken(); com.alibaba.druid.sql.dialect.oracle.parser.OracleSetTransactionStatement stmt = new com.alibaba.druid.sql.dialect.oracle.parser.OracleSetTransactionStatement(); if (identifierEquals(\"READ\")) { lexer.nextToken(); acceptIdentifier(\"ONLY\"); stmt.setReadOnly(true); } acceptIdentifier(\"NAME\"); stmt.setName(this.exprParser.expr()); return stmt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4160/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.oracle.parser.OracleStatementParser.java", "BodyUseAPI": [], "Fixed commit": "9e105a68f2e7781ac042a902f6a984c84ca70cb3", "Url": "https://api.github.com/repos/lihengming/druid", "Date": "2017-07-14T07:48:49Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((multiOrderIds) == null) { ret = false; tablesTv.setTextColor(-65536); }else { tablesTv.setTextColor(-16777216); java.lang.StringBuffer ids = new java.lang.StringBuffer(); for (java.lang.Integer item : multiOrderIds) { ids.append(((item.toString()) + \",\")); } if ((multiOrderIds.size()) > 0) { reservation.setTableIds(ids.toString().substring(0, ((ids.length()) - 1))); }else { reservation.setTableIds(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5374/buggy-version/src.com.htb.cnk.ReservationInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "f46764542a73e74494084d17c4f7002a09c02fcf", "Url": "https://api.github.com/repos/JoshTsang/cnk-orderPad", "Date": "2013-01-14T09:00:53Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5743/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "89e73a0eac964795bb02abe0406bd456ba4e8f1b", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-25T02:48:46Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (requestedPath.endsWith(\"/\")) { requestedPath = requestedPath.substring(0, ((requestedPath.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4078/buggy-version/structr-modules.structr-file-access-module.src.main.java.org.structr.files.ftp.StructrFileSystemView.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "2d00694ea16d193787dbc7ffd6a36cfbf755dbf9", "Url": "https://api.github.com/repos/structr/structr", "Date": "2016-12-02T08:52:21Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLoginEnabled()) { (failedLoginAttempts)++; if ((failedLoginAttempts) >= (org.eyeseetea.malariacare.domain.entity.InvalidLoginAttempts.NUMBER_ATTEMPTS)) { enableLoginTime = (new java.util.Date().getTime()) + (org.eyeseetea.malariacare.domain.entity.InvalidLoginAttempts.DISABLE_TIME); failedLoginAttempts = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7321/buggy-version/app.src.ereferrals.java.org.eyeseetea.malariacare.domain.entity.InvalidLoginAttempts.java", "BodyUseAPI": [], "Fixed commit": "f6d2e05dd3b0100e562d150e9b8e4c104d77e91e", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-05-15T14:08:48Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.wakatime.intellij.plugin.WakaTime.DEBUG) com.intellij.openapi.ui.Messages.showWarningDialog(\"Running WakaTime in DEBUG mode. Your IDE may be slow when saving or editing files.\", \"Debug\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9249/buggy-version/src.com.wakatime.intellij.plugin.WakaTime.java", "BodyUseAPI": [], "Fixed commit": "b30ff0ab43586932808399c6e68cb211635e4256", "Url": "https://api.github.com/repos/wakatime/jetbrains-wakatime", "Date": "2015-08-04T00:09:15Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentRepair.equals(\"\")) { textView.setText(split[1]); }else { textView.setText(((split[1]) + \"\\n >Volgende reparatie<\")); navigationRoute.setNum(((navigationRoute.getNum()) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5256/buggy-version/MovinIndoor.app.src.main.java.project.movinindoor.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "33ddf30dc44a8c9097788075f43bbacef6bdb18a", "Url": "https://api.github.com/repos/MikevanLoe/IndoorNav", "Date": "2015-01-08T14:17:11Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((viewLotId) != null) matchLotId = java.lang.Integer.parseInt(viewLotId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8446/buggy-version/SDD2012PM.src.uco.sdd.parking.ViewParkingMapActivity.java", "BodyUseAPI": [], "Fixed commit": "52ff8568933564caa585871962f58ad6c262a2a0", "Url": "https://api.github.com/repos/almightybeeij/SDD2012ParkMan", "Date": "2012-04-19T03:55:50Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((viewLotId) != null) matchLotId = java.lang.Integer.parseInt(viewLotId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8446/buggy-version/SDD2012PM.src.uco.sdd.parking.ViewParkingMapActivity.java", "BodyUseAPI": [], "Fixed commit": "52ff8568933564caa585871962f58ad6c262a2a0", "Url": "https://api.github.com/repos/almightybeeij/SDD2012ParkMan", "Date": "2012-04-19T03:55:50Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.api.client.googleapis.auth.oauth2.GoogleCredential.fromStream(java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (credential.createScopedRequired()) { credential = credential.createScoped(com.google.api.services.storage.StorageScopes.all()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6756/buggy-version/dev.cosbench-gcs.src.com.intel.cosbench.api.GcsStor.GcsStorage.java", "BodyUseAPI": ["com.google.api.client.googleapis.auth.oauth2.GoogleCredential.createScoped(com.google.api.services.storage.StorageScopes.all())"], "Fixed commit": "50263b408eb87dfd3321e2101e4abb42f8725251", "Url": "https://api.github.com/repos/noralife/cosbench", "Date": "2015-12-01T13:15:17Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (c == ';') { }else { parseException(((\"Unexpected character \\\"\" + c) + \"\\\".)\"), lineNumber, pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3574/buggy-version/src.main.java.org.ikayzo.sdl.Parser.java", "BodyUseAPI": ["org.ikayzo.sdl.Parser.parseException(java.lang.String,int,int)"], "Fixed commit": "7595f831a00b632791ce171d722fd413e7a6e2c4", "Url": "https://api.github.com/repos/SingingBush/SDL", "Date": "2017-04-13T00:41:23Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((xBird) >= x) && ((xBird) <= (x + width))) { if (((yBird) >= y) && ((yBird) <= (y + height))) return true; else if ((y >= (yBird)) && (y <= ((yBird) + (bird[0][birdFrame].getHeight())))) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4101/buggy-version/ThearStory.src.Main.Entities.Creatures.Items.java", "BodyUseAPI": [], "Fixed commit": "806f0ad8f0d65dcc7df127f9d2475919265da352", "Url": "https://api.github.com/repos/Thiwthat-Mongphut/ThearStory", "Date": "2017-11-12T08:53:51Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.value) != null) && (this.value.equals(value))) { firePropertyChanged(\"value\", this.value, (this.value = null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7089/buggy-version/org.lunifera.ecview.core.common.src.org.lunifera.ecview.core.common.beans.AbstractSlot.java", "BodyUseAPI": ["org.lunifera.ecview.core.common.beans.AbstractSlot.firePropertyChanged(java.lang.String,java.lang.Object,java.lang.Object)"], "Fixed commit": "b3865eb8396db6e54bc00d521f5b721bb618277e", "Url": "https://api.github.com/repos/lunifera/lunifera-ecview", "Date": "2015-07-31T11:14:53Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.value) == value) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7089/buggy-version/org.lunifera.ecview.core.common.src.org.lunifera.ecview.core.common.beans.AbstractSlot.java", "BodyUseAPI": [], "Fixed commit": "b3865eb8396db6e54bc00d521f5b721bb618277e", "Url": "https://api.github.com/repos/lunifera/lunifera-ecview", "Date": "2015-07-31T11:14:53Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"*\".equals(param.getName())) { result = true; }else if ((stored == value) || ((stored != null) && (stored.equals(value)))) { result = true; }else if (stored == null) { result = true; for (org.ocpsoft.rewrite.param.Constraint<java.lang.String> constraint : param.getConstraints()) { if (!(constraint.isSatisfiedBy(event, context, value))) { result = false; } } if (result) { for (org.ocpsoft.rewrite.param.Transform<java.lang.String> transform : param.getTransforms()) { value = transform.transform(event, context, value); } map.put(param, value); result = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3811/buggy-version/api.src.main.java.org.ocpsoft.rewrite.param.DefaultParameterValueStore.java", "BodyUseAPI": ["org.ocpsoft.rewrite.param.Parameter<?>.getConstraints()", "java.util.Map<org.ocpsoft.rewrite.param.Parameter<?>, java.lang.String>.put(org.ocpsoft.rewrite.param.Parameter<?>,java.lang.String)", "org.ocpsoft.rewrite.param.Parameter<?>.getTransforms()"], "Fixed commit": "a2927e9c91a11680caa8b0b55e593e9a4c07bca6", "Url": "https://api.github.com/repos/chkal/rewrite", "Date": "2013-03-25T06:56:49Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serializable.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/893/buggy-version/xintent.src.main.java.com.dhy.xintent.XIntent.java", "BodyUseAPI": [], "Fixed commit": "94da6a07dd962f6056fb2238925444bc4ecce901", "Url": "https://api.github.com/repos/DonaldDu/XIntent", "Date": "2016-02-25T07:13:59Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location) != null) { newPlayer.setCurrentLocation(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4717/buggy-version/src.be.marcowillems.redrouter.route.RouteEntry.java", "BodyUseAPI": [], "Fixed commit": "b3a5c6284b2e6281db537fcf3d716b3c14a17d88", "Url": "https://api.github.com/repos/progreon/RedRouter", "Date": "2017-01-16T18:37:37Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.clone()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((retour.getAmount()) > 0) player.getInventory().removeItem(retour);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/331/buggy-version/src.com.winthier.simpleshop.listener.PlayerListener.java", "BodyUseAPI": ["player.getInventory().removeItem(org.bukkit.inventory.ItemStack)"], "Fixed commit": "e0c0bcd2b0f03f6a8fd0c915b4e3a951f7c5999b", "Url": "https://api.github.com/repos/StarTux/SimpleShop", "Date": "2013-05-30T23:25:22Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sumRank == 0) { r.pl(\"GA halt , sum of fitness = 0 (cuz all population are the seem)\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4508/buggy-version/api_optimization_ga_passive.src.main.java.dewtx29.api_optimization_ga_passive.Hybrid.java", "BodyUseAPI": [], "Fixed commit": "92b0f1a7ce232201f23de50a5780a100cd7d4b88", "Url": "https://api.github.com/repos/dewtx29/api_optimization_ga_passive", "Date": "2017-12-21T06:25:33Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.anchormen.sql4es.ESResultSet.getForColumn(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.Long) return new java.sql.Date(((java.lang.Long) (value)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4430/buggy-version/src.main.java.nl.anchormen.sql4es.ESResultSet.java", "BodyUseAPI": [], "Fixed commit": "27f2cd587ea7f59cfb6c327ff931ac6ad75e2043", "Url": "https://api.github.com/repos/Anchormen/sql4es", "Date": "2016-09-11T11:48:43Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.anchormen.sql4es.ESResultSet.getForColumn(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.Double) return new java.sql.Date(((java.lang.Double) (value)).longValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4430/buggy-version/src.main.java.nl.anchormen.sql4es.ESResultSet.java", "BodyUseAPI": [], "Fixed commit": "27f2cd587ea7f59cfb6c327ff931ac6ad75e2043", "Url": "https://api.github.com/repos/Anchormen/sql4es", "Date": "2016-09-11T11:48:43Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myThread) != null) { try { myThread.join(); } catch (java.lang.InterruptedException e) { java.lang.System.out.println(\"Bogus Exception\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3360/buggy-version/src.edu.deakin.timo.liveWireEngine.LiveWireCosts.java", "BodyUseAPI": [], "Fixed commit": "99e6a1b08450c4d39fa426f500a4c5cd19187eb6", "Url": "https://api.github.com/repos/tjrantal/imageJLiveWirePlugin", "Date": "2015-07-03T09:15:03Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(settingsDAO.setDefaultConfig(java.lang.Integer.parseInt(user.getUserID())))) { java.lang.System.out.println(\"Error setting default config\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/715/buggy-version/src.main.java.studentcapture.login.RegistrationController.java", "BodyUseAPI": [], "Fixed commit": "c6d7ba4165d7e1bae375e19c40c9a5c58c85cb45", "Url": "https://api.github.com/repos/swedishsatish/student-capture", "Date": "2016-05-27T08:51:08Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == j) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8008/buggy-version/src.main.java.com.carmatech.algo.sorting.SortingUtilities.java", "BodyUseAPI": [], "Fixed commit": "a9af702a9d5453c41cc77a63305f1e035432923a", "Url": "https://api.github.com/repos/marccarre/algo-exercises", "Date": "2013-08-17T12:45:55Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.exent.flywithme.server.flyWithMeServer.model.Takeoff.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) name = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2146/buggy-version/app.src.main.java.net.exent.flywithme.bean.Takeoff.java", "BodyUseAPI": [], "Fixed commit": "ecb7f417042e2794f04d6f4a3c1a0bbcf692a68d", "Url": "https://api.github.com/repos/canidae/FlyWithMe", "Date": "2016-09-18T14:45:32Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.exent.flywithme.server.flyWithMeServer.model.Takeoff.getDescription()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (description == null) description = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2146/buggy-version/app.src.main.java.net.exent.flywithme.bean.Takeoff.java", "BodyUseAPI": [], "Fixed commit": "ecb7f417042e2794f04d6f4a3c1a0bbcf692a68d", "Url": "https://api.github.com/repos/canidae/FlyWithMe", "Date": "2016-09-18T14:45:32Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(operationParametersSet)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6008/buggy-version/src.main.java.operations.FilterOperation.java", "BodyUseAPI": [], "Fixed commit": "435ec8043fc4fd08bf04b4804ca87c9937370bd0", "Url": "https://api.github.com/repos/paulbakker65/Contextproject2015", "Date": "2015-05-18T11:04:40Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getDeclaredFields()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(java.lang.reflect.Modifier.isPrivate(fields[i].getModifiers()))) { try { returns.add(fields[i].get(null)); } catch (java.lang.Exception e) { java.lang.System.out.println(e.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2007/buggy-version/src.com.egg82.utils.Util.java", "BodyUseAPI": ["java.lang.reflect.Field.get(<nulltype>)", "java.util.ArrayList<java.lang.Object>.add(java.lang.Object)"], "Fixed commit": "ed45f3c03839823da0c456c71b703f7455900cdb", "Url": "https://api.github.com/repos/egg82/Java-Lib", "Date": "2016-06-04T15:32:34Z"},
{"Line": "=>835", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loggingEnabled) { platform.getLogger().info(((\" ... set \" + key) + \" is empty; nothing to save\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2857/buggy-version/common.src.main.java.net.cubespace.geSuit.core.storage.CachedRedisProvider.java", "BodyUseAPI": [], "Fixed commit": "a5722902efe06afb73e46147211a03c786a2f77e", "Url": "https://api.github.com/repos/AddstarMC/geSuit", "Date": "2016-03-05T02:07:20Z"},
{"Line": "=>745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loggingEnabled) { platform.getLogger().info(((\" ... set \" + key) + \" is empty; nothing to save\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2857/buggy-version/common.src.main.java.net.cubespace.geSuit.core.storage.CachedRedisProvider.java", "BodyUseAPI": [], "Fixed commit": "a5722902efe06afb73e46147211a03c786a2f77e", "Url": "https://api.github.com/repos/AddstarMC/geSuit", "Date": "2016-03-05T02:07:20Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"e\".equals(node.getName()))) xmlBuf.append(java.lang.String.format(\"<%s>%s</%s>\", node.getName(), node.getTextTrim(), node.getName())).append(\"\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4909/buggy-version/dapeng-tools.src.main.java.com.isuwang.dapeng.tools.helpers.RequestExampleHelper.java", "BodyUseAPI": ["org.dom4j.Element.getTextTrim()", "java.lang.String.format(java.lang.String,node.getName(),node.getTextTrim(),node.getName())", "java.lang.StringBuffer.append(java.lang.String)", "org.dom4j.Element.getName()", "java.lang.StringBuffer.append(java.lang.String)", "org.dom4j.Element.getName()"], "Fixed commit": "b40c209ef9b2933509412468f56889d44dc97cc3", "Url": "https://api.github.com/repos/isuwang/isuwang-soa", "Date": "2016-07-01T07:22:57Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPlayerResumed) { if (mMusicService.isPlaying()) { mPlayButton.setImageDrawable(android.support.v4.content.res.ResourcesCompat.getDrawable(getResources(), android.R.drawable.ic_media_pause, null)); }else { mPlayButton.setImageDrawable(android.support.v4.content.res.ResourcesCompat.getDrawable(getResources(), android.R.drawable.ic_media_play, null)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/515/buggy-version/app.src.main.java.si.vei.pedram.spotifystreamer.fragments.MusicPlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "fa18fa6db00d075b34e8c3c3102614fb11efe4a0", "Url": "https://api.github.com/repos/PedramVeisi/SpotifyStreamer", "Date": "2015-08-09T22:29:06Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AnimeIndex.completedMap.get(name).getImagePath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (AnimeIndex.completedDeletedAnime.contains(imagePath)) { AnimeIndex.completedDeletedAnime.remove(imagePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5958/buggy-version/src.util.window.AddAnimeDialog.java", "BodyUseAPI": ["AnimeIndex.completedDeletedAnime.remove(java.lang.String)"], "Fixed commit": "26805be0f5fa244adaafee7985bc5afb87642aa1", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-07-28T14:58:30Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (command.regionMatches(0, args[0], 0, args[0].length())) { list.add(command); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4411/buggy-version/src.main.java.de.alaoli.games.minecraft.mods.yadm.command.CommandGroup.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "aeae156ce45b25693329abe6e529b283ee2f1fc2", "Url": "https://api.github.com/repos/DerOli82/yadm", "Date": "2016-08-10T17:05:40Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.commands.containsKey(args[0])) { de.alaoli.games.minecraft.mods.yadm.command.Command command = this.commands.get(args[0]); if (command instanceof de.alaoli.games.minecraft.mods.yadm.command.CommandGroup) { return ((de.alaoli.games.minecraft.mods.yadm.command.CommandGroup) (command)).addTabCompletionOptions(sender, org.apache.commons.lang3.ArrayUtils.remove(args, 0)); } return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4411/buggy-version/src.main.java.de.alaoli.games.minecraft.mods.yadm.command.CommandGroup.java", "BodyUseAPI": ["java.util.Map<java.lang.String, de.alaoli.games.minecraft.mods.yadm.command.Command>.get(java.lang.String)", "org.apache.commons.lang3.ArrayUtils.remove(java.lang.String[],int)", "de.alaoli.games.minecraft.mods.yadm.command.Command.addTabCompletionOptions(net.minecraft.command.ICommandSender,org.apache.commons.lang3.ArrayUtils.remove(args, 0))"], "Fixed commit": "aeae156ce45b25693329abe6e529b283ee2f1fc2", "Url": "https://api.github.com/repos/DerOli82/yadm", "Date": "2016-08-10T17:05:40Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (s != null) { if (recreateSession.get()) { mongo.delete(org.entcore.session.AuthManager.SESSIONS_COLLECTION, new org.vertx.java.core.json.JsonObject().putString(\"_id\", sessionId)); } sendOK(message, new org.vertx.java.core.json.JsonObject().putString(\"status\", \"ok\").putObject(\"session\", s)); }else { sendError(message, \"Session not found.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6785/buggy-version/session.src.main.java.org.entcore.session.AuthManager.java", "BodyUseAPI": ["new org.vertx.java.core.json.JsonObject().putString(\"status\", \"ok\").putObject(java.lang.String,org.vertx.java.core.json.JsonObject)", "1.sendOK(org.vertx.java.core.eventbus.Message<org.vertx.java.core.json.JsonObject>,new org.vertx.java.core.json.JsonObject().putString(\"status\", \"ok\").putObject(\"session\", s))"], "Fixed commit": "6f9d2b409707f17c059343337510f9e0e84896f0", "Url": "https://api.github.com/repos/entcore/entcore", "Date": "2015-11-26T14:44:21Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, T>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (storageObject != null) { final org.apache.hc.client5.http.cache.HttpCacheStorageEntry entry = serializer.deserialize(storageObject); if (key.equals(entry.getKey())) { resultMap.put(key, entry.getContent()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/996/buggy-version/httpclient5-cache.src.main.java.org.apache.hc.client5.http.impl.cache.AbstractSerializingCacheStorage.java", "BodyUseAPI": ["org.apache.hc.client5.http.cache.HttpCacheEntrySerializer<T>.deserialize(T)"], "Fixed commit": "8d08c38d4f7f1baf76eb483a295de557ed1e9d45", "Url": "https://api.github.com/repos/ok2c/httpclient", "Date": "2017-12-21T13:44:37Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value == null) { return null; }else if (java.util.Date.class.isAssignableFrom(valueClass)) { return new java.sql.Timestamp(((java.util.Date) (value)).getTime()); }else if (value instanceof java.lang.String) { final java.util.Date valueDate = de.metas.ui.web.window.datatypes.json.JSONDate.fromJson(value.toString()); return org.compiere.util.TimeUtil.asTimestamp(valueDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3598/buggy-version/metasfresh-webui-api.src.main.java.de.metas.ui.web.window.model.sql.SqlDocumentsRepository.java", "BodyUseAPI": ["java.lang.Object.toString()", "de.metas.ui.web.window.datatypes.json.JSONDate.fromJson(java.lang.String)"], "Fixed commit": "eb9b0f18c1bf5f9b1baae0caa04f6cab36b41a6d", "Url": "https://api.github.com/repos/metasfresh/metasfresh-webui-api", "Date": "2016-10-27T07:50:41Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.getName().startsWith(\"/yaas/log\")) { updateMessage(m, OSCMessageFromTask.TYPE_YAAS); }else if (m.getName().startsWith(\"/yaas/config\")) { updateMessage(m, OSCMessageFromTask.TYPE_YAAS); }else if (m.getName().startsWith(\"/yaas/commands\")) { if (m.getName().endsWith(\"clear\")) { net.hirschauer.yaas.lighthouse.LightHouseOSCServer.yaasCommands = new java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>(); }else if (m.getName().endsWith(\"list\")) { java.lang.String className = ((java.lang.String) (m.getArg(0))); java.lang.String methodName = ((java.lang.String) (m.getArg(1))); if (!(net.hirschauer.yaas.lighthouse.LightHouseOSCServer.yaasCommands.containsKey(className))) { net.hirschauer.yaas.lighthouse.LightHouseOSCServer.yaasCommands.put(className, new java.util.ArrayList<java.lang.String>()); } net.hirschauer.yaas.lighthouse.LightHouseOSCServer.yaasCommands.get(className).add(methodName); }else if (m.getName().endsWith(\"done\")) { net.hirschauer.yaas.lighthouse.LightHouseOSCServer.logger.info(\"Got available commands from YAAS\"); updateMessage(new net.hirschauer.yaas.lighthouse.model.OSCMessageFromTask(\"Got available commands from YAAS\").toString()); } }else { updateMessage(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/231/buggy-version/src.main.java.net.hirschauer.yaas.lighthouse.LightHouseOSCServer.java", "BodyUseAPI": ["m.getName().startsWith(java.lang.String)", "de.sciss.net.OSCMessage.getName()", "m.getName().endsWith(java.lang.String)", "de.sciss.net.OSCMessage.getName()", "m.getName().startsWith(java.lang.String)", "de.sciss.net.OSCMessage.getArg(int)", "de.sciss.net.OSCMessage.getArg(int)", "de.sciss.net.OSCMessage.getName()", "de.sciss.net.OSCMessage.getName()", "m.getName().endsWith(java.lang.String)", "net.hirschauer.yaas.lighthouse.LightHouseOSCServer.updateMessage(de.sciss.net.OSCMessage,OSCMessageFromTask.TYPE_YAAS)", "net.hirschauer.yaas.lighthouse.LightHouseOSCServer.updateMessage(de.sciss.net.OSCMessage,OSCMessageFromTask.TYPE_YAAS)", "m.getName().endsWith(java.lang.String)", "de.sciss.net.OSCMessage.getName()", "net.hirschauer.yaas.lighthouse.LightHouseOSCServer.updateMessage(de.sciss.net.OSCMessage)"], "Fixed commit": "ba174195e1bf4bb6f06a774dd2ad5a08691852d2", "Url": "https://api.github.com/repos/shouldmakemusic/lighthouse", "Date": "2015-02-10T22:38:15Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((super.isTerminating()) || (super.isShutdown())) || (super.isTerminated())) { if (warn(org.alfresco.extension.bulkimport.impl.BulkImportThreadPoolExecutor.log)) warn(org.alfresco.extension.bulkimport.impl.BulkImportThreadPoolExecutor.log, \"New work submitted during shutdown - ignoring new work.\"); }else { super.execute(command); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5728/buggy-version/amp.src.main.java.org.alfresco.extension.bulkimport.impl.BulkImportThreadPoolExecutor.java", "BodyUseAPI": ["java.util.concurrent.ThreadPoolExecutor.execute(java.lang.Runnable)"], "Fixed commit": "3e9ad39f4bbae5088ae94c9434a2466e1aa14dc3", "Url": "https://api.github.com/repos/drivera73/alfresco-bulk-import", "Date": "2016-07-09T07:12:43Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEndOfFile()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6160/buggy-version/src.main.java.com.widowcrawler.terminator.parse.Parser.java", "BodyUseAPI": [], "Fixed commit": "a237638840c9cbd71d586dd24a010e003cf66246", "Url": "https://api.github.com/repos/ScottMansfield/terminator", "Date": "2015-05-29T03:43:56Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((x >= 1) && (x <= 8)) && (y >= 1)) && (y <= 8)) { return board[convertInt(y)][(x - 1)]; }else { Square outOfBounds = new Square(0, 0); outOfBounds.setOccupier(Color.NONE); return outOfBounds; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9154/buggy-version/src.Board.java", "BodyUseAPI": ["Board.convertInt(int)"], "Fixed commit": "e41be19fbb4d9093b4c950f3d3eab3c5030437ba", "Url": "https://api.github.com/repos/s-ilyas/Pawn-Race", "Date": "2017-09-25T16:09:35Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.emobc.android.themes.FormatStyle>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (fs != null) { java.lang.String backgroundSelectionFileName = fs.getBackgroundSelectionFileName(); java.lang.String backgroundSelectionName = backgroundSelectionFileName.split(\"\\\\.\")[0]; int imageResource = activity.getResources().getIdentifier(backgroundSelectionName, \"drawable\", activity.getPackageName()); android.graphics.drawable.Drawable backgroundSelectionDrawable = activity.getResources().getDrawable(imageResource); selection.setBackgroundDrawable(backgroundSelectionDrawable); initializeSelectionFormat(activity, selection, fs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8418/buggy-version/src.com.emobc.android.activities.generators.LevelActivityGenerator.java", "BodyUseAPI": ["com.emobc.android.activities.generators.LevelActivityGenerator.initializeSelectionFormat(android.app.Activity,android.widget.Button,com.emobc.android.themes.FormatStyle)", "com.emobc.android.themes.FormatStyle.getBackgroundSelectionFileName()"], "Fixed commit": "a3d50817fdea3b3ba06aef3b35d790fda851a197", "Url": "https://api.github.com/repos/emobc/emobc-android", "Date": "2012-11-27T22:21:18Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(mAuthTokenType)) mAuthTokenType = getDefaultAuthTokenType();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8579/buggy-version/atleap-core.src.main.java.com.blandware.android.atleap.auth.BaseAuthActivity.java", "BodyUseAPI": [], "Fixed commit": "5478e9b5dde7daa501c3a01b71f2c7a474382102", "Url": "https://api.github.com/repos/blandware/android-atleap", "Date": "2014-02-08T11:37:43Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(mAccountType)) mAccountType = getDefaultAccountType();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8579/buggy-version/atleap-core.src.main.java.com.blandware.android.atleap.auth.BaseAuthActivity.java", "BodyUseAPI": [], "Fixed commit": "5478e9b5dde7daa501c3a01b71f2c7a474382102", "Url": "https://api.github.com/repos/blandware/android-atleap", "Date": "2014-02-08T11:37:43Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.net.SocketException) { throw ((java.net.SocketException) (e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/79/buggy-version/fakedns-server.src.main.java.ru.hardcoders.dns.DNSServerThread.java", "BodyUseAPI": [], "Fixed commit": "f4b2d97cebe3170b6513f6925133700feb3ef33c", "Url": "https://api.github.com/repos/Silvmike/FakeDNS", "Date": "2016-06-30T23:40:39Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((liste.getListe().size()) <= 5) { return liste.toJSON(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2798/buggy-version/Server.src.webshop.rest.resources.ArticleResource.java", "BodyUseAPI": ["webshop.model.Artikelliste.toJSON()"], "Fixed commit": "fc6296ea1f4b77b7859b3613d486fd90d44a10fd", "Url": "https://api.github.com/repos/danielsimon1/webshop", "Date": "2016-07-21T12:59:54Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cprtLength != 0) { this.copyright = getTagValue(data, cprtOffset, cprtLength, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/823/buggy-version/src.main.java.org.verapdf.external.ICCProfile.java", "BodyUseAPI": ["org.verapdf.external.ICCProfile.getTagValue(org.verapdf.as.io.ASInputStream,int,int,boolean)"], "Fixed commit": "24d5da8e08b85dcd79adf716b9663134100eafae", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-parser", "Date": "2016-09-08T08:28:05Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (descLength != 0) { this.description = getTagValue(data, descOffset, descLength, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/823/buggy-version/src.main.java.org.verapdf.external.ICCProfile.java", "BodyUseAPI": ["org.verapdf.external.ICCProfile.getTagValue(org.verapdf.as.io.ASInputStream,int,int,boolean)"], "Fixed commit": "24d5da8e08b85dcd79adf716b9663134100eafae", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-parser", "Date": "2016-09-08T08:28:05Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pageseeder.bridge.xml.PSEntityFactory.getOptionalLong(org.xml.sax.Attributes,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (id != null) { m.setId(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6876/buggy-version/src.main.java.org.pageseeder.bridge.xml.PSEntityFactory.java", "BodyUseAPI": ["org.pageseeder.bridge.model.PSMembership.setId(java.lang.Long)"], "Fixed commit": "8d8756c7e5fbe42c0431cfd59ea4b9903653fd77", "Url": "https://api.github.com/repos/pageseeder/bridge", "Date": "2017-02-28T04:42:53Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (positionOfProtocolSeparator > (-1)) { bindingPortValue = elements[0].substring(0, positionOfProtocolSeparator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8084/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.docker.DockerClientExecutor.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "25d40ca14047de525527e5212a8d5b5f3c32d2b7", "Url": "https://api.github.com/repos/jamesnetherton/arquillian-cube", "Date": "2015-06-09T10:56:24Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (positionOfProtocolSeparator > (-1)) { bindingPortValue = elements[0].substring(0, positionOfProtocolSeparator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8084/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.util.BindingUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "25d40ca14047de525527e5212a8d5b5f3c32d2b7", "Url": "https://api.github.com/repos/jamesnetherton/arquillian-cube", "Date": "2015-06-09T10:56:24Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["1.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (con == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9222/buggy-version/app.src.main.java.com.ggstudios.lolcraft.CraftSkillsFragment.java", "BodyUseAPI": [], "Fixed commit": "48a54113446c9ea151a02cec30eee6639bf10f0b", "Url": "https://api.github.com/repos/idunnololz/LoLCraft", "Date": "2014-12-30T04:14:47Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (className == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4345/buggy-version/cascading-core.src.main.java.cascading.property.AppProps.java", "BodyUseAPI": [], "Fixed commit": "02b8a83dade9862037ea9656645608296a5d5149", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2015-08-14T19:17:29Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bitmap != null) { view.setImageBitmap(bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6642/buggy-version/ChromecastSampleApp.app.src.main.java.com.ooyala.sample.ChromecastSampleApp.UpdateImageViewRunnable.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "b3b17271a5cadeb5e31e521073906d62fa65bf28", "Url": "https://api.github.com/repos/ooyala/android-sample-apps", "Date": "2015-06-17T20:41:23Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((url.length()) > 0) { org.dataone.annotator.matcher.ConceptItem c = new org.dataone.annotator.matcher.ConceptItem(new java.net.URI(url.substring(1, ((url.length()) - 1))), java.lang.Double.parseDouble(score)); concepts.add(c); }else { java.lang.System.out.println(\"NA\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4417/buggy-version/src.main.java.org.dataone.annotator.matcher.esor.EsorService.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "38fb4146038c6d945f3227afba4509ba48a1998c", "Url": "https://api.github.com/repos/DataONEorg/annotator", "Date": "2015-03-19T20:34:15Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.nextix.jardine.activites.fragments.StaticActivityInfoFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((args != null) && (args.containsKey(\"crm_no\"))) { data.putString(\"crm_no\", args.getString(\"crm_no\")); myFragment.setArguments(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7987/buggy-version/src.co.nextix.jardine.activites.fragments.StaticActivityInfoFragment.java", "BodyUseAPI": ["android.os.Bundle.putString(java.lang.String,args.getString(\"crm_no\"))", "android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "9cdefa8b4e7201ad0d9fb4ca249b6b1465e96c54", "Url": "https://api.github.com/repos/Stepedons-Tinkers/jardine-android", "Date": "2014-07-09T22:01:02Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foregroundWidth < 0) foregroundWidth = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7553/buggy-version/src.se.wiklund.ld37.comp.ProgressBar.java", "BodyUseAPI": [], "Fixed commit": "fdda41f28aa090c510ad4fe4dc336635117c1e9c", "Url": "https://api.github.com/repos/Hadermite/LD37", "Date": "2016-12-11T16:04:21Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.idsia.mario.environments.Environment.getLevelSceneObservation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((enemies[11][20]) != 0) { if ((enemies[20][18]) != 0) { if ((enemies[5][10]) != 0) { if ((enemies[5][4]) != 0) { if ((enemies[3][15]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_JUMP] = false; }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_LEFT] = true; } }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_DOWN] = true; } }else { if ((enemies[8][6]) != 0) { if ((enemies[6][7]) != 0) { if ((enemies[9][12]) != 0) { if ((enemies[4][5]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_RIGHT] = false; }else { if ((enemies[17][14]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_RIGHT] = true; }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_RIGHT] = false; } } }else { if ((enemies[19][9]) != 0) { if ((enemies[18][10]) != 0) { if ((enemies[12][6]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_SPEED] = false; }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_RIGHT] = true; } }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_SPEED] = true; } }else { if ((enemies[11][12]) != 0) { if ((enemies[13][14]) != 0) { if ((enemies[4][1]) != 0) { if ((enemies[6][9]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_RIGHT] = true; }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_DOWN] = true; } }else { if ((enemies[5][15]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_JUMP] = false; }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_SPEED] = false; } } }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_RIGHT] = false; } }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_RIGHT] = false; } } } }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_SPEED] = false; } }else { if ((enemies[18][16]) != 0) { if ((enemies[21][10]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_RIGHT] = false; }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_LEFT] = false; } }else { if ((enemies[9][17]) != 0) { if ((enemies[5][0]) != 0) { if ((enemies[6][0]) != 0) { if ((enemies[2][3]) != 0) { if ((enemies[14][7]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_SPEED] = false; }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_DOWN] = true; } }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_RIGHT] = true; } }else { if ((enemies[18][2]) != 0) { if ((enemies[8][21]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_JUMP] = false; }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_DOWN] = true; } }else { if ((enemies[11][13]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_SPEED] = true; }else { if ((enemies[9][13]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_LEFT] = true; }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_JUMP] = false; } } } } }else { if ((enemies[13][8]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_LEFT] = false; }else { if ((enemies[21][5]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_RIGHT] = false; }else { if ((enemies[2][13]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_LEFT] = true; }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_SPEED] = true; } } } } }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_RIGHT] = false; } } } } }else { if ((enemies[16][3]) != 0) { if ((enemies[14][5]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_LEFT] = true; }else { if ((enemies[20][8]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_JUMP] = true; }else { if ((enemies[21][18]) != 0) { if ((enemies[11][1]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_DOWN] = true; }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_DOWN] = false; } }else { if ((enemies[1][11]) != 0) { if ((enemies[17][1]) != 0) { if ((enemies[4][17]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_LEFT] = true; }else { if ((enemies[0][1]) != 0) { if ((enemies[2][0]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_SPEED] = false; }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_DOWN] = true; } }else { if ((enemies[15][6]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_SPEED] = true; }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_JUMP] = true; } } } }else { if ((enemies[3][4]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_SPEED] = false; }else { if ((enemies[0][19]) != 0) { if ((enemies[20][6]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_RIGHT] = false; }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_JUMP] = true; } }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_SPEED] = true; } } } }else { if ((enemies[21][17]) != 0) { if ((enemies[17][1]) != 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_JUMP] = true; }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_JUMP] = false; } }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_LEFT] = true; } } } } } }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_DOWN] = true; } } }else { action[ch.idsia.mario.engine.sprites.Mario.KEY_JUMP] = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3289/buggy-version/PGDE.marioai.src.ch.idsia.ai.agents.ai.GPAgent.java", "BodyUseAPI": [], "Fixed commit": "f20176e126c2db734940bb0a1fa3683a78636fca", "Url": "https://api.github.com/repos/Joaoufjf/marioai", "Date": "2017-12-20T23:22:54Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pr.project.getModules().size()) > 0) && (pr.canGenerateAggregateReport())) { pr.generateAggregateReport(locale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/714/buggy-version/src.main.java.org.codehaus.mojo.javancss.NcssReportMojo.java", "BodyUseAPI": ["org.codehaus.mojo.javancss.NcssReportMojo.ProjectReporter.generateAggregateReport(java.util.Locale)"], "Fixed commit": "2d0cddd7de42eafde9cbe1f159d83451ab9facd2", "Url": "https://api.github.com/repos/amedranogil/javancss-maven-plugin", "Date": "2015-10-20T14:57:11Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (thePlayer != null) { thePlayer.eyeHeight = thePlayer.getDefaultEyeHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3021/buggy-version/src.main.java.uk.co.mysterymayhem.gravitymod.GravityManagerClient.java", "BodyUseAPI": ["net.minecraft.client.entity.EntityPlayerSP.getDefaultEyeHeight()"], "Fixed commit": "961238244a770d08f0444d3e39bbdfe8d0af161b", "Url": "https://api.github.com/repos/Mysteryem/Up_And_Down_And_All_Around", "Date": "2016-08-09T15:55:13Z"},
{"Line": "=>959", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (name == null) name = attr.attribute.getName(); else name = columnToCamelCase(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7535/buggy-version/org.sqlproc.meta.src.org.sqlproc.meta.generator.TableMetaGenerator.java", "BodyUseAPI": ["org.sqlproc.meta.generator.TableMetaGenerator.columnToCamelCase(java.lang.String)"], "Fixed commit": "99143ffe886143f1b6d001a1520131119f88b913", "Url": "https://api.github.com/repos/hudec/sql-processor-eclipse", "Date": "2016-02-20T14:45:55Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["output.getOutputBufferGeneralized().getArray()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((oldGeneralized != null) && ((oldGeneralized.length) != 0)) { java.lang.System.arraycopy(newGeneralized[newIndex], 0, oldGeneralized[oldIndex], 0, newGeneralized[newIndex].length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8948/buggy-version/src.main.org.deidentifier.arx.ARXResult.java", "BodyUseAPI": ["java.lang.System.arraycopy(int[],int,int[],int,int)"], "Fixed commit": "db007db4bf0f8a87475a91a98e4edcb9b87b94f8", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-10-06T09:29:51Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["output.getOutputBufferMicroaggregated().getArray()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((oldMicroaggregated != null) && ((oldMicroaggregated.length) != 0)) { java.lang.System.arraycopy(newMicroaggregated[newIndex], 0, oldMicroaggregated[oldIndex], 0, newMicroaggregated[newIndex].length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8948/buggy-version/src.main.org.deidentifier.arx.ARXResult.java", "BodyUseAPI": ["java.lang.System.arraycopy(int[],int,int[],int,int)"], "Fixed commit": "db007db4bf0f8a87475a91a98e4edcb9b87b94f8", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-10-06T09:29:51Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["result.memory().get(ShortestPathVertexProgram.MIDDLE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(middlePoint.equals(\"\"))) map.put(0, java.util.Collections.singleton(middlePoint));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/99/buggy-version/grakn-graql.src.main.java.ai.grakn.graql.internal.query.analytics.PathQueryImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.util.Set<java.lang.String>>.put(int,java.util.Set<java.lang.String>)", "java.util.Collections.singleton(java.lang.String)"], "Fixed commit": "78251593b3397f74246030d8a1eac40e1717c9dd", "Url": "https://api.github.com/repos/duckofyork/mindmapsdb", "Date": "2016-12-15T15:40:55Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (request != null) { this.requestQueue.add(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6201/buggy-version/nio-http.com.codeandstrings.niohttp.sessions.HttpSession.java", "BodyUseAPI": ["java.util.ArrayList<com.codeandstrings.niohttp.request.Request>.add(com.codeandstrings.niohttp.request.Request)"], "Fixed commit": "f91b2438ecf1735333834bdda3b060799b1b696e", "Url": "https://api.github.com/repos/simplepanda/nio-http", "Date": "2014-08-21T13:43:38Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isDebugEnabled()) { if (resource == null) { logger.debug((\"Cache resolver, returned a null resource \" + requestPath)); }else if (!(resource.exists())) { logger.debug((((\"Cache resolver, returned a resource that doesn't exist \" + requestPath) + \" - \") + resource)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4123/buggy-version/common.src.main.java.org.broadleafcommerce.common.web.resource.resolver.BroadleafCachingResourceResolver.java", "BodyUseAPI": ["org.broadleafcommerce.common.web.resource.resolver.BroadleafCachingResourceResolver.debug((((\"Cache resolver, returned a resource that doesn't exist \" + requestPath) + \" - \") + resource))", "org.broadleafcommerce.common.web.resource.resolver.BroadleafCachingResourceResolver.debug(java.lang.String)"], "Fixed commit": "b58dc977f63d9411e9a59856b6f49908020c7608", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2015-05-22T17:55:07Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild.getProject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((project.getLastBuild().getPreviousBuild()) != null) { lastBuildDate = project.getLastBuild().getPreviousBuild().getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5892/buggy-version/src.main.java.hudson.plugins.jobConfigHistory.JobConfigBadgeAction.java", "BodyUseAPI": ["project.getLastBuild().getPreviousBuild()", "project.getLastBuild().getPreviousBuild().getTime()", "hudson.model.AbstractProject<?, ?>.getLastBuild()"], "Fixed commit": "eaf59023ac879bc2a566b2244b961d53e2cd73f0", "Url": "https://api.github.com/repos/kstutz/jobConfigHistory-plugin", "Date": "2013-01-23T12:30:47Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((header) == null) { throw new java.lang.IllegalArgumentException(\"Header Row not set on table\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6641/buggy-version/src.main.java.be.quodlibet.boxable.Table.java", "BodyUseAPI": [], "Fixed commit": "24f266c34d811e6c07c37e5f0bb2b8bebb0aa099", "Url": "https://api.github.com/repos/dgautier/boxable", "Date": "2015-02-04T12:33:21Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<research.AlignmentNetwork, org.cytoscape.view.model.CyNetworkView>.get(research.AlignmentNetwork)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (old_view != new_view) view_mgr.destroyNetworkView(old_view);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9226/buggy-version/alignmentdrawerplugin.src.research.NetworkRenderer.java", "BodyUseAPI": ["org.cytoscape.view.model.CyNetworkViewManager.destroyNetworkView(org.cytoscape.view.model.CyNetworkView)"], "Fixed commit": "5e43514f235113422a508212afad05ece6ee321b", "Url": "https://api.github.com/repos/DaviesX/cytoscape-alignment-drawer", "Date": "2016-04-25T07:46:04Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nodes.isEmpty()) { nodes.add(new org.roda.rodain.rules.TreeNode(path.getParent())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8127/buggy-version/src.main.java.org.roda.rodain.rules.sip.SipPerSelection.java", "BodyUseAPI": ["java.util.Deque<org.roda.rodain.rules.TreeNode>.add(org.roda.rodain.rules.TreeNode)"], "Fixed commit": "737a9239516e162129de164cf585dbf68e9c4a8f", "Url": "https://api.github.com/repos/keeps/roda-in", "Date": "2015-12-01T11:26:20Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.equals(\"Yes, Show me from start\")) { return ChatConstants.JSON_DOMAINS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3073/buggy-version/src.com.skype.util.MessageFormatter.java", "BodyUseAPI": [], "Fixed commit": "bf5ac296545b50ba7d0a30b2ee7f2b33c405c865", "Url": "https://api.github.com/repos/vineetshukla15/skypebot", "Date": "2016-11-04T11:11:55Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.equals(\"Bye, Take Care!\")) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3073/buggy-version/src.com.skype.util.MessageFormatter.java", "BodyUseAPI": [], "Fixed commit": "bf5ac296545b50ba7d0a30b2ee7f2b33c405c865", "Url": "https://api.github.com/repos/vineetshukla15/skypebot", "Date": "2016-11-04T11:11:55Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (continuous) { retry(input); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8745/buggy-version/src.main.java.com.insightfullogic.honest_profiler.log.LogParser.java", "BodyUseAPI": [], "Fixed commit": "023b0de2a6bd6bf760321085b013e16631f758be", "Url": "https://api.github.com/repos/RichardWarburton/honest-profiler", "Date": "2014-02-24T20:31:00Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(noSuchProcess(e))) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8745/buggy-version/src.main.java.com.insightfullogic.honest_profiler.discovery.JavaVirtualMachine.java", "BodyUseAPI": ["java.io.IOException.printStackTrace()"], "Fixed commit": "023b0de2a6bd6bf760321085b013e16631f758be", "Url": "https://api.github.com/repos/RichardWarburton/honest-profiler", "Date": "2014-02-24T20:31:00Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { org.wahtod.wififixer.ui.AboutFragment.self.get().mNetwork.level = -255; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2098/buggy-version/wififixer.src.org.wahtod.wififixer.ui.AboutFragment.java", "BodyUseAPI": [], "Fixed commit": "ee447b15a908daa69172361ab7cae32aa266cfd3", "Url": "https://api.github.com/repos/Zanshinmu/Wifi-Fixer", "Date": "2013-06-02T16:09:40Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ext.startsWith(\".\")) { ext = ext.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3221/buggy-version/modules.ImportAPI.src.main.java.org.gephi.io.importer.impl.ImportControllerImpl.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "df38e8969ff29885a6dab9e0312bf850ca0a1441", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-10-15T15:09:18Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lessons.get(i).isSucceedingLesson()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3895/buggy-version/app.src.main.java.com.maxkrass.stundenplan.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bd429a44a5d8114efaf6544121b41038903b4ea6", "Url": "https://api.github.com/repos/maxkrass/Stundenplan2", "Date": "2016-06-30T22:07:42Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.facebook.FacebookSdk.isInitialized()) { com.facebook.login.LoginManager.getInstance().logOut(); }else { android.util.Log.w(\"FacebookAuthProvider\", \"Couldn't log out as the SDK wasn't initialized yet.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6961/buggy-version/lock-facebook.src.main.java.com.auth0.android.facebook.FacebookApi.java", "BodyUseAPI": [], "Fixed commit": "984e23571f3a227257be9961de81973c1458e99d", "Url": "https://api.github.com/repos/auth0/Lock-Facebook.Android", "Date": "2016-09-30T14:55:32Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (definitionNode instanceof org.ballerinalang.plugins.idea.psi.ConnectorDeclarationStatementNode) { org.ballerinalang.plugins.idea.psi.NameReferenceNode nameReferenceNode = com.intellij.psi.util.PsiTreeUtil.getChildOfType(definitionNode, org.ballerinalang.plugins.idea.psi.NameReferenceNode.class); if (nameReferenceNode != null) { com.intellij.psi.PsiReference reference = nameReferenceNode.findReferenceAt(nameReferenceNode.getTextLength()); if (reference != null) { com.intellij.psi.PsiElement resolvedElement = reference.resolve(); if ((resolvedElement != null) && ((resolvedElement.getParent()) instanceof org.ballerinalang.plugins.idea.psi.StructDefinitionNode)) { return ((org.ballerinalang.plugins.idea.psi.StructDefinitionNode) (resolvedElement.getParent())); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7140/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.impl.BallerinaPsiImplUtil.java", "BodyUseAPI": ["com.intellij.psi.util.PsiTreeUtil.getChildOfType(com.intellij.psi.PsiElement,java.lang.Class)"], "Fixed commit": "b4b6d153ad38807716c59523339c08d11560a786", "Url": "https://api.github.com/repos/Shan1024/plugin-intellij", "Date": "2017-10-12T08:43:32Z"},
{"Line": "=>3780", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errorData) != null) { if ((errorData) instanceof java.lang.Number) { return (((java.lang.Number) (errorData)).intValue()) != 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1341/buggy-version/uk.ac.diamond.scisoft.analysis.src.uk.ac.diamond.scisoft.analysis.dataset.AbstractDataset.java", "BodyUseAPI": [], "Fixed commit": "2517b2e239ec9572e0c54fb1aafd68e77f463445", "Url": "https://api.github.com/repos/DawnScience/scisoft-core", "Date": "2013-06-17T08:36:30Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workout) != null) { i.putExtra(Workout.TAG, workout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7345/buggy-version/ZPI1.src.com.pwr.zpi.MainScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "8700dba341f6babf77c1fff7bce4b1c228f0eee4", "Url": "https://api.github.com/repos/jskudlarski/ZPI-Android", "Date": "2013-11-17T16:05:38Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((topList) != null) { for (int i = 0; i < (topList.size()); i++) { if ((topList.get(i)) != null) java.lang.System.err.println((((\"[\" + (topList.get(i).getId())) + \"] \") + (topList.get(i).getName()))); if ((topList.get(i).getId()) == (m.getId())) return topList.get(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9099/buggy-version/app.src.main.java.comp.mymoviemanager.model.Profile.java", "BodyUseAPI": [], "Fixed commit": "c56d022744e4b26ce403528d3010375287a7170e", "Url": "https://api.github.com/repos/lupcorrea/MyMovieManager", "Date": "2016-04-24T15:46:10Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bottomSheetDialog.isShowing()) { bottomSheetDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3442/buggy-version/collect_app.src.main.java.org.odk.collect.android.activities.AppListActivity.java", "BodyUseAPI": ["android.support.design.widget.BottomSheetDialog.dismiss()"], "Fixed commit": "2c15a89ad304c5d19061f27b122e8993671c2ccb", "Url": "https://api.github.com/repos/shobhitagarwal1612/collect", "Date": "2017-07-25T13:35:02Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(isFile)) || (cmd.getCommand().equals(Command.PRINT))) java.lang.System.out.println(value.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9038/buggy-version/src.RPN.java", "BodyUseAPI": [], "Fixed commit": "c73874a9aab6b8d39b87275039885c79b8a89057", "Url": "https://api.github.com/repos/TheShed412/CS1632_Deliverable6", "Date": "2017-12-06T08:39:20Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/636/buggy-version/src.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "7b442968e97442ccdb2ff0733d4b0be92c250a89", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (writer == null) { writer = serializers.get(clazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7478/buggy-version/src.main.java.com.alibaba.fastjson.serializer.SerializeConfig.java", "BodyUseAPI": [], "Fixed commit": "d53415221758de8af4a0895159e847de213ac13e", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2017-08-15T01:37:20Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (charityItemInfo.getItemCollectorUid().equals(mAuth.getCurrentUser().getUid())) { int index = charityItemInfoArrayList.indexOf(charityItemInfo); charityItemInfo.setItemCollectorName(userInfo.getOrganizationName()); charityItemInfoArrayList.set(index, charityItemInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3835/buggy-version/app.src.main.java.softwareengineering.assignment.sharify.EditProfileActivity.java", "BodyUseAPI": ["java.util.ArrayList<softwareengineering.assignment.sharify.CharityItemInfo>.indexOf(softwareengineering.assignment.sharify.CharityItemInfo)", "java.util.ArrayList<softwareengineering.assignment.sharify.CharityItemInfo>.set(int,softwareengineering.assignment.sharify.CharityItemInfo)", "softwareengineering.assignment.sharify.CharityItemInfo.setItemCollectorName(userInfo.getOrganizationName())"], "Fixed commit": "5fd85393e22163d28bbe999026f8d75e23d18af3", "Url": "https://api.github.com/repos/hotdroid3/Sharify", "Date": "2017-06-19T09:31:36Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alias.length()) >= 50) { com.intellectualcrafters.plot.util.PlayerFunctions.sendMessage(plr, C.ALIAS_TOO_LONG); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/545/buggy-version/PlotSquared.src.main.java.com.intellectualcrafters.plot.commands.Set.java", "BodyUseAPI": [], "Fixed commit": "bbf5ba44880f9c386d57fbad684cfe230e8a7a65", "Url": "https://api.github.com/repos/IntellectualSites/PlotSquared", "Date": "2015-01-04T04:43:36Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (topItem < 0) topItem = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3069/buggy-version/src.com.eleybourn.bookcatalogue.BooksOnBookshelf.java", "BodyUseAPI": [], "Fixed commit": "87acfbceab86c120026100117ea61de6b0118eb4", "Url": "https://api.github.com/repos/Grunthos/Book-Catalogue", "Date": "2012-02-05T13:44:13Z"},
{"Line": "=>996", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (fi == null) { return com.utils.web.GenerateHTML.generate404Notfound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3268/buggy-version/photoweb.src.com.utils.web.GenerateHTML.java", "BodyUseAPI": [], "Fixed commit": "eaa92242994020d90105868069fa685820dc3af2", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-03-12T15:02:05Z"},
{"Line": "=>985", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f == null) { return com.utils.web.GenerateHTML.generate404Notfound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3268/buggy-version/photoweb.src.com.utils.web.GenerateHTML.java", "BodyUseAPI": [], "Fixed commit": "eaa92242994020d90105868069fa685820dc3af2", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-03-12T15:02:05Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (partition > (nPartitions - 1)) { partition = nPartitions - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1371/buggy-version/src.algorithms.misc.HistogramHolder.java", "BodyUseAPI": [], "Fixed commit": "439699b472d999ee5ddc1e924d2e6896dce990d4", "Url": "https://api.github.com/repos/nking/curvature-scale-space-corners-and-transformations", "Date": "2015-09-18T00:35:13Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(\"cdrom\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4886/buggy-version/rosa-iiif.rosa-iiif-presentation-core.src.main.java.rosa.iiif.presentation.core.ArchiveIIIFService.java", "BodyUseAPI": [], "Fixed commit": "4c8a84a85f33f2159d5e01d9c8ca5c167c50ddf7", "Url": "https://api.github.com/repos/jhu-digital-manuscripts/rosa2", "Date": "2015-01-20T13:42:02Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) instanceof us.shandian.blacklight.ui.main.MainActivity) { position--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3677/buggy-version/src.us.shandian.blacklight.ui.directmessage.DirectMessageUserFragment.java", "BodyUseAPI": [], "Fixed commit": "79384d8247e1a08113dd1b403e008f0936206b9d", "Url": "https://api.github.com/repos/PaperAirplane-Dev-Team/BlackLight", "Date": "2014-08-06T23:23:08Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) instanceof us.shandian.blacklight.ui.main.MainActivity) { position--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3677/buggy-version/src.us.shandian.blacklight.ui.friendships.FriendsFragment.java", "BodyUseAPI": [], "Fixed commit": "79384d8247e1a08113dd1b403e008f0936206b9d", "Url": "https://api.github.com/repos/PaperAirplane-Dev-Team/BlackLight", "Date": "2014-08-06T23:23:08Z"},
{"Line": "=>2467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (params.containsKey(org.grails.orm.hibernate.cfg.GrailsDomainBinder.SEQUENCE_KEY)) { params.put(SequenceStyleGenerator.SEQUENCE_PARAM, params.getProperty(org.grails.orm.hibernate.cfg.GrailsDomainBinder.SEQUENCE_KEY)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5142/buggy-version/grails-datastore-gorm-hibernate5.src.main.groovy.org.grails.orm.hibernate.cfg.GrailsDomainBinder.java", "BodyUseAPI": ["java.util.Properties.getProperty(java.lang.String)", "java.util.Properties.put(SequenceStyleGenerator.SEQUENCE_PARAM,java.lang.String)"], "Fixed commit": "9f6a855a45d86bdb8b00d45c441ac73afa3f0104", "Url": "https://api.github.com/repos/grails/gorm-hibernate5", "Date": "2016-10-20T13:15:16Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.telephony.TelephonyManager.getDefault().getPhoneCount()) > 1) { intent = new android.content.Intent(mContext, com.android.phone.SelectSubscription.class); intent.putExtra(SelectSubscription.PACKAGE, \"com.android.phone\"); intent.putExtra(SelectSubscription.TARGET_CLASS, \"com.android.phone.MSimMobileNetworkSubSettings\"); }else { intent = new android.content.Intent(mContext, com.android.phone.MobileNetworkSettings.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4806/buggy-version/src.com.android.phone.NotificationMgr.java", "BodyUseAPI": [], "Fixed commit": "93d8a9b14e2eae34f407dcce76e4e5512b62ac12", "Url": "https://api.github.com/repos/codeaurora-unofficial/packages-services-Telephony", "Date": "2016-01-28T12:40:50Z"},
{"Line": "=>847", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.phone.PhoneGlobals.VDBG) android.util.Log.d(com.android.phone.PhoneGlobals.LOG_TAG, (((((\"isRoaming = \" + isRoaming) + \" isRoamingDataEnabled = \") + isRoamingDataEnabled) + \" mDataDisconnectedDueToRoaming = \") + (mDataDisconnectedDueToRoaming)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4806/buggy-version/src.com.android.phone.PhoneGlobals.java", "BodyUseAPI": [], "Fixed commit": "93d8a9b14e2eae34f407dcce76e4e5512b62ac12", "Url": "https://api.github.com/repos/codeaurora-unofficial/packages-services-Telephony", "Date": "2016-01-28T12:40:50Z"},
{"Line": "=>840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.internal.telephony.Phone.getDataRoamingEnabled()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (disconnectReasonRoaming && (!isRoamingDataEnabled)) { disconnectedDueToRoaming = true; }else if ((!isRoaming) || isRoamingDataEnabled) { disconnectedDueToRoaming = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4806/buggy-version/src.com.android.phone.PhoneGlobals.java", "BodyUseAPI": [], "Fixed commit": "93d8a9b14e2eae34f407dcce76e4e5512b62ac12", "Url": "https://api.github.com/repos/codeaurora-unofficial/packages-services-Telephony", "Date": "2016-01-28T12:40:50Z"},
{"Line": "=>851", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDataDisconnectedDueToRoaming) != disconnectedDueToRoaming) { mDataDisconnectedDueToRoaming = disconnectedDueToRoaming; mHandler.sendEmptyMessage((disconnectedDueToRoaming ? com.android.phone.PhoneGlobals.EVENT_DATA_ROAMING_DISCONNECTED : com.android.phone.PhoneGlobals.EVENT_DATA_ROAMING_OK)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4806/buggy-version/src.com.android.phone.PhoneGlobals.java", "BodyUseAPI": ["android.os.Handler.sendEmptyMessage(int)"], "Fixed commit": "93d8a9b14e2eae34f407dcce76e4e5512b62ac12", "Url": "https://api.github.com/repos/codeaurora-unofficial/packages-services-Telephony", "Date": "2016-01-28T12:40:50Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user) { userPoints = list; }else { opponentPoints = list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8066/buggy-version/com.aidancbrady.vocab.Game.java", "BodyUseAPI": [], "Fixed commit": "2f6444c9b5910dab161aa746f9dab518ffe0f473", "Url": "https://api.github.com/repos/aidancbrady/VocabCrack", "Date": "2014-11-29T17:33:17Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["p.start().joinWithTimeout(int,java.util.concurrent.TimeUnit,hudson.plugins.git.util.TaskListener)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (status != 0) { final boolean log = hudson.plugins.git.util.GitUtils.LOGGER.isLoggable(java.util.logging.Level.WARNING); if (log) { java.lang.String message = java.text.MessageFormat.format(\"git for-each-ref --points-at {0} returned: {1}\", sha1.getName(), status); hudson.plugins.git.util.GitUtils.LOGGER.log(java.util.logging.Level.WARNING, message); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1370/buggy-version/src.main.java.hudson.plugins.git.util.GitUtils.java", "BodyUseAPI": ["java.text.MessageFormat.format(java.lang.String,sha1.getName(),int)"], "Fixed commit": "a01962a26fca46462e1d7e362c43fba35853e8af", "Url": "https://api.github.com/repos/MarkEWaite/git-plugin", "Date": "2017-11-23T18:54:37Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) throw new java.io.IOException(\"File does not exist.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1970/buggy-version/IrScrutinizer.src.main.java.org.harctoolbox.irscrutinizer.importer.FileImporter.java", "BodyUseAPI": [], "Fixed commit": "e849406bed946a4dfea9aa369038343200d6717e", "Url": "https://api.github.com/repos/bengtmartensson/harctoolboxbundle", "Date": "2016-06-26T14:43:26Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (c == '\"') { isText = !isText; token.append('\"'); }else if ((c == '[') && (!isText)) { delimiter++; if (delimiter > 1) token.append('['); }else if ((c == ']') && (!isText)) { delimiter--; if (delimiter == 0) { tiles.add(token.toString()); token.setLength(0); }else { token.append(']'); } }else if (delimiter > 0) { token.append(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3089/buggy-version/pimap.src.main.java.ee.ant.pimap.base.Chunk.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "f4f53664c538f0eee49d999d45a6ed1d48f8512a", "Url": "https://api.github.com/repos/vadimkim/pimap", "Date": "2013-05-23T19:59:36Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((position >= 0) && (position < 4)) this.changeTitle(menuOptions[position]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9107/buggy-version/src.org.development.pvmp.MainActivity.java", "BodyUseAPI": ["org.development.pvmp.MainActivity.changeTitle(java.lang.String)"], "Fixed commit": "0266110f41b542cedd0533dfa2d8a0840090edb3", "Url": "https://api.github.com/repos/PVMP-ORG-DEVEL/PVMP", "Date": "2014-10-01T22:40:04Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nfcAdapter) == null) { buttonNfc.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7255/buggy-version/SchuldenApp.app.src.main.java.at.htlgkr.raiffeisenprojektteam.schuldenapp.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "10aa3a4e6a17791fb31a743046d5c26ade1ccd9d", "Url": "https://api.github.com/repos/mduschek/SchuldenApp", "Date": "2017-02-16T08:37:27Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attachment.getMetadata().containsKey(\"imageDimensions\")) { imageWidth = ((int) (attachment.getMetadata().get(\"imageDimensions\").get(\"width\"))); imageHeight = ((int) (attachment.getMetadata().get(\"imageDimensions\").get(\"height\"))); }else { java.awt.Image image = attachment.getData().getObject(loadImage, java.awt.Image.class); imageWidth = image.getWidth(null); imageHeight = image.getHeight(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4876/buggy-version/platform.image.default.src.main.java.org.mayocat.image.DefaultImageService.java", "BodyUseAPI": ["attachment.getMetadata().get(java.lang.String)", "attachment.getData().getObject(com.google.common.base.Function<java.io.InputStream, java.awt.Image>,java.lang.Class)", "org.mayocat.model.Attachment.getMetadata()", "org.mayocat.model.Attachment.getData()", "org.mayocat.model.Attachment.getMetadata()", "attachment.getMetadata().get(\"imageDimensions\").get(java.lang.String)", "attachment.getMetadata().get(java.lang.String)", "attachment.getMetadata().get(\"imageDimensions\").get(java.lang.String)"], "Fixed commit": "f792a0f83a3ec574ec94884d959741687e30a395", "Url": "https://api.github.com/repos/Nesk/mayocat-shop", "Date": "2014-06-29T16:45:08Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageWidth < 0) || (imageHeight < 0)) { return com.google.common.base.Optional.absent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4876/buggy-version/platform.image.default.src.main.java.org.mayocat.image.DefaultImageService.java", "BodyUseAPI": [], "Fixed commit": "f792a0f83a3ec574ec94884d959741687e30a395", "Url": "https://api.github.com/repos/Nesk/mayocat-shop", "Date": "2014-06-29T16:45:08Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.uniud.ailab.dcore.annotation.Annotable.getIdentifier()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (containsRow(rowId)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6749/buggy-version/src.main.java.it.uniud.ailab.dcore.io.GenericSheetPrinter.java", "BodyUseAPI": [], "Fixed commit": "0e7ef3cce5f386bfffa1c97a888d7a40ba28763a", "Url": "https://api.github.com/repos/ailab-uniud/distiller-CORE", "Date": "2015-09-30T09:21:13Z"},
{"Line": "=>1302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bam.darkhouseextreme.app.activities.GameActivity.getSystemService(Context.POWER_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(m.isScreenOn())) { com.bam.darkhouseextreme.app.helper.SoundHelper.pauseBackGroundMusic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2539/buggy-version/app.src.main.java.com.bam.darkhouseextreme.app.activities.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "2df9a145338ca5ff2c9630e0af272e263597e451", "Url": "https://api.github.com/repos/ChobiJava/DarkHouseExtreme", "Date": "2015-05-27T09:33:11Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expression.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6909/buggy-version/app.src.main.java.com.app.dimbo.simplecalculator.Controller.java", "BodyUseAPI": [], "Fixed commit": "4a7b9620caa6915e261efa4915978a1cb0ddcc85", "Url": "https://api.github.com/repos/dibondi/SimpleCalculator", "Date": "2017-03-22T21:59:22Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (decoder)) decoder.reset();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9193/buggy-version/flume-ng-core.src.main.java.org.apache.flume.client.avro.ResumableUTF8FileReader.java", "BodyUseAPI": [], "Fixed commit": "6fc795f6fff5c73aeee4038e729ec0c5016f3a9f", "Url": "https://api.github.com/repos/0x6c34/flume", "Date": "2013-05-04T16:44:11Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (ch)) ch.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9193/buggy-version/flume-ng-core.src.main.java.org.apache.flume.client.avro.ResumableUTF8FileReader.java", "BodyUseAPI": [], "Fixed commit": "6fc795f6fff5c73aeee4038e729ec0c5016f3a9f", "Url": "https://api.github.com/repos/0x6c34/flume", "Date": "2013-05-04T16:44:11Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (statsFileOut)) statsFileOut.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9193/buggy-version/flume-ng-core.src.main.java.org.apache.flume.client.avro.ResumableUTF8FileReader.java", "BodyUseAPI": [], "Fixed commit": "6fc795f6fff5c73aeee4038e729ec0c5016f3a9f", "Url": "https://api.github.com/repos/0x6c34/flume", "Date": "2013-05-04T16:44:11Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gumtree.data.interfaces.IArray.getElementType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (type.equals(boolean.class)) { boolean[] storage = ((boolean[]) (array.getStorage())); if ((array.getSize()) == (storage.length)) { return storage; }else { org.gumtree.data.interfaces.IArray newArray = array.copy(); return newArray.getStorage(); } }else if (type.equals(byte.class)) { byte[] storage = ((byte[]) (array.getStorage())); if ((array.getSize()) == (storage.length)) { return storage; }else { org.gumtree.data.interfaces.IArray newArray = array.copy(); return newArray.getStorage(); } }else if ((type.equals(java.lang.String.class)) || (type.equals(char.class))) { return new java.lang.String[]{ array.toString() }; }else { return array.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8439/buggy-version/framework.common.org.gumtree.data.impl.netcdf.src.org.gumtree.data.impl.io.NcHdfWriter.java", "BodyUseAPI": ["java.lang.Class<?>.equals(java.lang.Class)", "java.lang.Class<?>.equals(java.lang.Class)", "java.lang.Class<?>.equals(java.lang.Class)"], "Fixed commit": "4c451c03ec9b8fe2102abeb6ce5100b4e7898f0e", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2013-01-14T06:01:49Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.freeteam01.androidnewsgroupreader.Models.NewsGroupArticle>.get(ngArticle.getReferences().get(0))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (root == null) articles.put(article.getArticleId(), ngArticle); else root.addArticle(ngArticle);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5484/buggy-version/app.src.main.java.com.freeteam01.androidnewsgroupreader.Services.NewsGroupService.java", "BodyUseAPI": ["com.freeteam01.androidnewsgroupreader.Models.NewsGroupArticle.addArticle(com.freeteam01.androidnewsgroupreader.Models.NewsGroupArticle)"], "Fixed commit": "197a2aa60112ddac65aaea060b10e0e093d1f16f", "Url": "https://api.github.com/repos/cfkh/AndroidNewsGroupReader", "Date": "2017-04-27T08:39:53Z"},
{"Line": "=>1968", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sortBy.equals(\"createdDate\")) || (sortBy.equals(\"lastUpdatedDate\"))) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9164/buggy-version/components.governance.org.wso2.carbon.governance.api.src.main.java.org.wso2.carbon.governance.api.util.GovernanceUtils.java", "BodyUseAPI": [], "Fixed commit": "7e66da06ca73e040e7f12b54da6cbccab099c9f3", "Url": "https://api.github.com/repos/tmkasun/carbon-governance", "Date": "2016-06-14T13:28:23Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()", "java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((firstList.length) != (secondList.length)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5412/buggy-version/src.com.udav.findduplicate.Finder.java", "BodyUseAPI": [], "Fixed commit": "215d7d191d0b7c4b6990e705bacd079e04402a9c", "Url": "https://api.github.com/repos/UDav/FindDuplicate", "Date": "2012-12-04T10:00:12Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["actionContext.getSession().get(WebConstant.USER)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(userBean.getId().equals(java.lang.Integer.parseInt(getId())))) { return online.mrsys.movierecommender.action.base.WebConstant.REJECT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1177/buggy-version/MovieRecommenderSystem.src.online.mrsys.movierecommender.action.user.LoadProfileAction.java", "BodyUseAPI": [], "Fixed commit": "0f43d55d3bc8065221f00931bab60f85bb92b41d", "Url": "https://api.github.com/repos/CongBao/mrsys.online", "Date": "2017-04-29T11:45:07Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min < 0) { Main.finalS += (((((nameGive + \" give money -->> \") + (-min)) + \" to \") + \" \") + nameTake) + \"\\n\"; }else { Main.finalS += (((((nameGive + \" give money -->> \") + max) + \" to \") + \" \") + nameTake) + \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6596/buggy-version/src.main.java.Main.java", "BodyUseAPI": [], "Fixed commit": "53e8e6baf5673c2f531d240df9f005fce5edc43b", "Url": "https://api.github.com/repos/doggvalera/ctcotask", "Date": "2016-06-01T17:15:41Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eg != (org.tdl.vireo.model.EmbargoGuarantor.PROQUEST)) || (sub.getUMIRelease())) validation.addError((\"embargo-\" + (eg.name())), ((\"Please choose a \" + (eg.name().toLowerCase())) + \" embargo option\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1572/buggy-version/app.controllers.submit.DocumentInfo.java", "BodyUseAPI": ["controllers.submit.DocumentInfo.addError((\"embargo-\" + (eg.name())),((\"Please choose a \" + (eg.name().toLowerCase())) + \" embargo option\"))", "eg.name().toLowerCase()", "org.tdl.vireo.model.EmbargoGuarantor.name()", "org.tdl.vireo.model.EmbargoGuarantor.name()"], "Fixed commit": "650b01f51f94e1fea024ce8cc281e10388674faa", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2015-02-09T21:22:35Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mWidgetItems) == null) || (mWidgetItems.isEmpty())) { return rv; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5557/buggy-version/ContactsWidgetICS.src.com.gmail.yuyang226.contactswidget.pro.ContactsWidgetService.java", "BodyUseAPI": [], "Fixed commit": "735bd872fa602122803b10bc8dd09bf1edbf7cf4", "Url": "https://api.github.com/repos/yuyang226/ContactsWidgetICS", "Date": "2013-04-28T06:55:38Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.size()) >= 3) { max = 3; }else { max = list.size(); for (int i = 0; i < (list.size()); i++) { topScores[(2 - i)] = new GUI.StatisticsPanel.Score(\"No score\", 0, \"No time\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/9155/buggy-version/src.GUI.StatisticsPanel.java", "BodyUseAPI": ["java.util.ArrayList<GUI.StatisticsPanel.Score>.size()", "java.util.ArrayList<GUI.StatisticsPanel.Score>.size()"], "Fixed commit": "b3948d7bedab49482684ec95fd796884bb014ac2", "Url": "https://api.github.com/repos/Krill/red-elephant", "Date": "2013-03-01T11:11:48Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((strAtomCount.length()) > 0) { intAtomCount = java.lang.Integer.parseInt(strAtomCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4652/buggy-version/Molecule.java", "BodyUseAPI": [], "Fixed commit": "c361f7c2cb91f0fd3cd68fd2f7ab9682979c85ca", "Url": "https://api.github.com/repos/Fromalaska49/java-molecular-library", "Date": "2016-05-05T04:25:15Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playlist.getSongs().size()) > 1) { position = random.nextInt(((playlist.getSongs().size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/445/buggy-version/app.src.main.java.com.lukechenshui.beatpulse.services.MusicService.java", "BodyUseAPI": ["java.util.Random.nextInt(((playlist.getSongs().size()) - 1))", "com.lukechenshui.beatpulse.models.Playlist.getSongs()", "playlist.getSongs().size()"], "Fixed commit": "3f694c92f1e2c9450b8598bbba12244e9a3defe2", "Url": "https://api.github.com/repos/chenshuiluke/BeatPulse", "Date": "2016-12-19T02:06:50Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(componentInformation.getLogo().isEmpty())) { forumComponent.setProperty(org.jtalks.jcommune.model.dao.hibernate.ComponentHibernateDao.LOGO_PROPERTY, componentInformation.getLogo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2736/buggy-version/jcommune-model.src.main.java.org.jtalks.jcommune.model.dao.hibernate.ComponentHibernateDao.java", "BodyUseAPI": ["org.jtalks.common.model.entity.Component.setProperty(java.lang.String,componentInformation.getLogo())", "org.jtalks.jcommune.model.entity.ComponentInformation.getLogo()"], "Fixed commit": "4fadca3f89ae6c625cd05d28ee1634756f33be0a", "Url": "https://api.github.com/repos/jtalks-org/jcommune", "Date": "2013-06-02T09:16:10Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (icicle != null) { icicle.setClassLoader(activity.getClassLoader()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1149/buggy-version/PluginCore.src.main.java.com.plugin.core.PluginInstrumentionWrapper.java", "BodyUseAPI": ["android.os.Bundle.setClassLoader(activity.getClassLoader())"], "Fixed commit": "9f7e1f94ec22d454353040ed9b28353ad2490d23", "Url": "https://api.github.com/repos/limpoxe/Android-Plugin-Framework", "Date": "2016-09-01T05:44:02Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remainingTime) >= change) this.remainingTime += change;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3412/buggy-version/src.model.LightningGame.java", "BodyUseAPI": [], "Fixed commit": "a56c63429a4e2eabfb1e904d7eda71811e447fb7", "Url": "https://api.github.com/repos/pacarvalho/SixesWild", "Date": "2015-05-04T02:12:02Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((action == (org.bukkit.event.block.Action.RIGHT_CLICK_AIR)) || (action == (org.bukkit.event.block.Action.RIGHT_CLICK_BLOCK))) { if (stage != null) { event.setCancelled(true); return; }else if ((clicked != null) && (clicked.hasItemMeta())) { if (clicked.equals(pl.getSettings().getItemReward())) { event.setCancelled(true); pl.getStageManager().newStage(player, null, true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3939/buggy-version/src.main.java.fr.zaral.npcreward.listeners.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "96cd44d3bcb190ade363c23ffc2df0a9294f20d0", "Url": "https://api.github.com/repos/ZaralDev/NpcReward", "Date": "2016-04-28T18:33:39Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (source.length)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5989/buggy-version/com.soartech.soar.ide.ui.src.com.soartech.soar.ide.ui.linking.SoarHyperlinkDetector.java", "BodyUseAPI": [], "Fixed commit": "d79011940b5c7a311d5499f3551148624f915b3e", "Url": "https://api.github.com/repos/soartech/soaride", "Date": "2016-02-29T16:38:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((pa.getAppliesTos().iterator().next().getContainmentPathElements().iterator().next().getNamedElement()) instanceof org.osate.xtext.aadl2.errormodel.errorModel.ConnectionErrorSource)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/406/buggy-version/aadl-translator.src.main.java.edu.ksu.cis.projects.mdcf.aadltranslator.ErrorTranslator.java", "BodyUseAPI": [], "Fixed commit": "6b4108e726661de637f8f26c481a46033ec05261", "Url": "https://api.github.com/repos/santoslab/aadl-translator", "Date": "2014-07-26T20:56:31Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (execOnResume) { init(true); }else { execOnResume = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3485/buggy-version/app.src.main.java.seniordesign.phoneafriend.posting.currentUserPostsList.java", "BodyUseAPI": [], "Fixed commit": "2813cb40f92a9206edc65e75340f2ef127375b9b", "Url": "https://api.github.com/repos/PhoneAFriend/android", "Date": "2016-12-06T17:55:39Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(comment.getAuthor()))) { authorView.setText(comment.getAuthor()); timeAgoView.setText((\", \" + (comment.getTimeAgo()))); }else { authorView.setText(c.getString(R.string.deleted)); timeAgoView.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1669/buggy-version/src.com.manuelmaly.hn.CommentsActivity.java", "BodyUseAPI": ["com.manuelmaly.hn.model.HNComment.getAuthor()", "com.manuelmaly.hn.model.HNComment.getTimeAgo()", "android.widget.TextView.setText((\", \" + (comment.getTimeAgo())))", "android.widget.TextView.setText(comment.getAuthor())"], "Fixed commit": "a0656e66fd2a5a1abf9eab05b919efdcba2122c6", "Url": "https://api.github.com/repos/jmaltz/hn-android", "Date": "2013-09-09T08:53:02Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(SettingsActivity.newUnlockId,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (change != \"\") { dataAccessObject.insertOrUpdate(((latestReceivedNFCPMessage.getName()) + (latestReceivedNFCPMessage.getId())), change); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5539/buggy-version/App.src.datx02.group15.activities.MainActivity.java", "BodyUseAPI": ["datx02.group15.database.DataAccessObject.insertOrUpdate(((latestReceivedNFCPMessage.getName()) + (latestReceivedNFCPMessage.getId())),java.lang.String)"], "Fixed commit": "0a875ea6b08317d9c6e7c3197d713831c054eb75", "Url": "https://api.github.com/repos/kaety/NFC", "Date": "2013-05-11T16:06:26Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((safe) != null) { safe.infer(inferCtx); if (!(safe.type.equals(this.type))) { this.type = Type.ObjectType; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4710/buggy-version/beetl-core.src.main.java.org.beetl.core.statement.VarRef.java", "BodyUseAPI": [], "Fixed commit": "870766f6ad61533b83e32eaba3aea737e2b626ef", "Url": "https://api.github.com/repos/dolonfly/beetl2.0", "Date": "2014-07-23T09:22:56Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i >= 0) { while ((sb.charAt(i)) == ' ') { i--; } sb.replace((i + 1), sb.length(), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3534/buggy-version/MaxBans.src.org.maxgamer.maxbans.util.Util.java", "BodyUseAPI": ["java.lang.StringBuilder.charAt(int)"], "Fixed commit": "3238ffca272b160be372aafd7112b53352de0a99", "Url": "https://api.github.com/repos/netherfoam/MaxBans", "Date": "2013-01-17T11:39:02Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.length) == 33) { valueLbl.setFont(new java.awt.Font(\"Avenir Next\", java.awt.Font.PLAIN, 12)); valueLbl.setBounds(13, 7, 7, 16); bonusLbl.setFont(new java.awt.Font(\"Avenir Next\", java.awt.Font.PLAIN, 7)); bonusLbl.setBounds(21, 21, 8, 10); }else { valueLbl.setFont(new java.awt.Font(\"Avenir Next\", java.awt.Font.PLAIN, 19)); valueLbl.setBounds(19, 12, 12, 26); bonusLbl.setFont(new java.awt.Font(\"Avenir Next\", java.awt.Font.PLAIN, 10)); bonusLbl.setBounds(34, 31, 12, 14); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3031/buggy-version/SixesWild.src.sixeswildgame.view.TileView.java", "BodyUseAPI": [], "Fixed commit": "12ef63450d6d2c88f194569b793dd266eadbe449", "Url": "https://api.github.com/repos/MrJoeXu/SixesWild", "Date": "2015-04-27T15:05:00Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.editor)) this.bulletAppState.getPhysicsSpace().remove(terrain);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4318/buggy-version/Thief.src.control.GameManager.java", "BodyUseAPI": [], "Fixed commit": "1a24a97639ec43cff7ee5cd6689ee3c926c1b188", "Url": "https://api.github.com/repos/lorenzobrusco/EsameIgpe", "Date": "2016-07-03T10:13:39Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((--(retrynum)) > 0) run(); else controlpath.peerIP.remove(((java.lang.String) (IP)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8157/buggy-version/app.src.main.java.com.example.android.wifidirect.DeviceDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "70cd6f4b418febc3b80c651c86f5323f1b3d881a", "Url": "https://api.github.com/repos/liulewie/CS211_WifiDirectStreaming", "Date": "2016-03-17T07:19:26Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((beginIndex) == 0) && ((endIndex) == 0)) { return baseURI; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8574/buggy-version/src.main.java.org.nlp2rdf.bean.NIFContext.java", "BodyUseAPI": [], "Fixed commit": "60ae3fbcdd59c328b25cb7b8e249126120aa18e0", "Url": "https://api.github.com/repos/NLP2RDF/NIF-lib", "Date": "2016-10-07T02:46:49Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((winnerString.length()) > 1) { winnerString = winnerString.substring(0, ((winnerString.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3070/buggy-version/src.Logic.Logic.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "e10f22f85934f50a3ce49da9952c9d82a7d256ac", "Url": "https://api.github.com/repos/CezCz/HangOver", "Date": "2015-11-01T20:28:18Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lex == null) { edu.stanford.muse.index.Archive.log.warn(\"Warning: lexicon is null!\"); return new java.util.LinkedHashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8323/buggy-version/src.java.edu.stanford.muse.index.Archive.java", "BodyUseAPI": [], "Fixed commit": "c3d2b951adf15ddaf77ea16c98ad9fcc1d438355", "Url": "https://api.github.com/repos/ePADD/muse", "Date": "2015-08-20T07:36:32Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7576/buggy-version/src.main.java.com.mridang.computer.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "33a68ba6d1f042d3c65b195df664f2f8e6cc40a3", "Url": "https://api.github.com/repos/mridang/dashclock-computer", "Date": "2015-03-29T09:09:58Z"},
{"Line": "=>959", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(RetialSaleDbAdapter.KEY_SPACE))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((reservationSpace != null) && (!(reservationSpace.equals(\"\")))) { reservationSpace = reservationSpace.substring(0, ((reservationSpace.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/202/buggy-version/src.com.example.retailsale.fragment.SynchronizationFragment.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "483996836ea114fae8a56e9b71f9d1c2cbc2d4fa", "Url": "https://api.github.com/repos/shin0202/RetailSale", "Date": "2015-05-12T13:11:31Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(RetialSaleDbAdapter.KEY_SPACE))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((reservationSpace != null) && (!(reservationSpace.equals(\"\")))) { reservationSpace = reservationSpace.substring(0, ((reservationSpace.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/202/buggy-version/src.com.example.retailsale.UploadReceiver.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "483996836ea114fae8a56e9b71f9d1c2cbc2d4fa", "Url": "https://api.github.com/repos/shin0202/RetailSale", "Date": "2015-05-12T13:11:31Z"},
{"Line": "=>3894", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCICHits()) >= 3) { java.lang.System.out.println(((msg + (cicHits)) + \" Combat Information Center Destroyed.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1468/buggy-version/megamek.src.megamek.common.Aero.java", "BodyUseAPI": [], "Fixed commit": "b41189f6a0d632898132a8cef2f45b9b673bd3e5", "Url": "https://api.github.com/repos/NickAragua/megamek", "Date": "2017-10-29T16:17:51Z"},
{"Line": "=>3890", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFCSHits()) >= 3) { java.lang.System.out.println(((msg + (fcsHits)) + \" Fire Control Destroyed.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1468/buggy-version/megamek.src.megamek.common.Aero.java", "BodyUseAPI": [], "Fixed commit": "b41189f6a0d632898132a8cef2f45b9b673bd3e5", "Url": "https://api.github.com/repos/NickAragua/megamek", "Date": "2017-10-29T16:17:51Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hits > 3) { hits = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1468/buggy-version/megamek.src.megamek.common.Aero.java", "BodyUseAPI": [], "Fixed commit": "b41189f6a0d632898132a8cef2f45b9b673bd3e5", "Url": "https://api.github.com/repos/NickAragua/megamek", "Date": "2017-10-29T16:17:51Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current_path) == null) { g.setColor(Color.red); g.fillRect(((((pixel_location.x) + (render_offset.x)) + 3) + 12), (((pixel_location.y) + (render_offset.y)) + 4), 6, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4619/buggy-version/src.main.java.com.jumppixel.ld30.Monster.java", "BodyUseAPI": [], "Fixed commit": "08e95fdf479560a961619ed00786994f712b98d5", "Url": "https://api.github.com/repos/tobyp/ludum-dare-30", "Date": "2014-08-25T13:22:43Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.getStatus()) == (POGOProtos.Networking.Responses.CatchPokemonResponseOuterClass.CatchPokemonResponse.CatchStatus.CATCH_ERROR)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7612/buggy-version/library.src.main.java.com.pokegoapi.api.map.pokemon.CatchablePokemon.java", "BodyUseAPI": [], "Fixed commit": "652362558b4413811790c3e23b4d23a2873f4d27", "Url": "https://api.github.com/repos/Annoraaq/PokeGOAPI-Java", "Date": "2016-08-01T10:49:08Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addExtraSample) { sampleCount++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6747/buggy-version/ols.common.src.nl.lxtreme.ols.common.acquisition.AcquisitionDataBuilder.java", "BodyUseAPI": [], "Fixed commit": "8b22d4698045f30e11b14798dbda859c7c34e484", "Url": "https://api.github.com/repos/jawi/ols", "Date": "2013-05-09T12:29:05Z"},
{"Line": "=>872", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addExtraSample) { values[(sampleCount - 1)] = values[(sampleCount - 1)]; timestamps[(sampleCount - 1)] = absLength; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6747/buggy-version/ols.common.src.nl.lxtreme.ols.common.acquisition.AcquisitionDataBuilder.java", "BodyUseAPI": [], "Fixed commit": "8b22d4698045f30e11b14798dbda859c7c34e484", "Url": "https://api.github.com/repos/jawi/ols", "Date": "2013-05-09T12:29:05Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.druid.indexing.overlord.RemoteTaskRunnerWorkQueue.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (workItem != null) { taskComplete(workItem, null, io.druid.indexing.common.TaskStatus.failure(taskId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6296/buggy-version/indexing-service.src.main.java.io.druid.indexing.overlord.RemoteTaskRunner.java", "BodyUseAPI": ["io.druid.indexing.overlord.RemoteTaskRunner.3.taskComplete(io.druid.indexing.overlord.RemoteTaskRunnerWorkItem,<nulltype>,io.druid.indexing.common.TaskStatus.failure(taskId))"], "Fixed commit": "41172e7b4a35764175c96ae1d0489331a0b6164c", "Url": "https://api.github.com/repos/himanshug/druid", "Date": "2016-04-19T03:59:41Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["newConv.getNode1().getParent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((newConv.getHeight2()) > (parent.getHeight())) newConv.setNode2(parent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/424/buggy-version/src.bacter.operators.unrestricted.ClonalFrameConversionSwap.java", "BodyUseAPI": ["bacter.Conversion.setNode2(beast.evolution.tree.Node)"], "Fixed commit": "e71d1bd14a9f4d45ab6b7efff2fd5175c4ecf6ca", "Url": "https://api.github.com/repos/tgvaughan/bacter", "Date": "2015-03-09T21:34:34Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.Board.gridLookup(main.java.Position)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pieceToMove.getType()) == (PieceType.NO_PIECE)) { java.lang.String msg = \"Cannot move a piece from an empty board position.\"; throw new java.lang.IllegalArgumentException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3060/buggy-version/src.main.java.Model.java", "BodyUseAPI": [], "Fixed commit": "ffa72aab922fbc6aef92b55ffde90dffe2c80bbf", "Url": "https://api.github.com/repos/spkaplan/chess", "Date": "2016-05-12T19:58:20Z"},
{"Line": "=>1054", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (replicaNum == (-1)) { assert false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4571/buggy-version/src.edu.umass.cs.contextservice.schemes.HyperspaceHashing.java", "BodyUseAPI": [], "Fixed commit": "8dabf125f11f827f19988bdb2e5a2b7caf3bafa2", "Url": "https://api.github.com/repos/ayadavumass/CNS", "Date": "2016-11-15T03:07:30Z"},
{"Line": "=>2894", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(enclosingMethodEnv.enclMethod.name.toString().equals(\"clone\"))) log.warning(p, \"jml.no.point.to.more.visibility\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5954/buggy-version/OpenJML.src.com.sun.tools.javac.comp.JmlAttr.java", "BodyUseAPI": [], "Fixed commit": "bce7e7b5e507a883246b0d4ccfc9e1667840097b", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2016-10-01T01:12:27Z"},
{"Line": "=>12153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cc instanceof com.sun.tools.javac.code.Type.ArrayType) { cc = syms.objectType; }else if (cc instanceof com.sun.tools.javac.code.Type.TypeVar) { cc = ((com.sun.tools.javac.code.Type.TypeVar) (cc)).bound; }else { cc = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5954/buggy-version/OpenJML.src.org.jmlspecs.openjml.esc.JmlAssertionAdder.java", "BodyUseAPI": [], "Fixed commit": "bce7e7b5e507a883246b0d4ccfc9e1667840097b", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2016-10-01T01:12:27Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.droidplanner.android.data.DatabaseState.getOfflineDatabaseHandlerForMapId(android.content.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dbHandler == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1573/buggy-version/Android.src.org.droidplanner.android.maps.providers.google_map.tiles.mapbox.offline.MapDownloader.java", "BodyUseAPI": [], "Fixed commit": "fc7af7727c5b94a3505f8c8720e8abb51354fe88", "Url": "https://api.github.com/repos/DroidPlanner/Tower", "Date": "2015-08-25T23:26:38Z"},
{"Line": "=>1161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((date.length) > 0) || ((date[0]) != null)) type(ELEMENT_PUB_FROM_INPUT, date[0], true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/776/buggy-version/ui-common.src.main.java.org.exoplatform.selenium.platform.ecms.contentexplorer.ActionBar.java", "BodyUseAPI": ["org.exoplatform.selenium.platform.ecms.contentexplorer.ActionBar.type(org.openqa.selenium.By,java.lang.String,boolean)"], "Fixed commit": "428cca95171ad521f1fd39ca8beb9231a4b37036", "Url": "https://api.github.com/repos/exoplatform/ui-test", "Date": "2013-10-16T08:27:11Z"},
{"Line": "=>1163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((date.length) > 1) type(ELEMENT_PUB_TO_INPUT, date[1], true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/776/buggy-version/ui-common.src.main.java.org.exoplatform.selenium.platform.ecms.contentexplorer.ActionBar.java", "BodyUseAPI": ["org.exoplatform.selenium.platform.ecms.contentexplorer.ActionBar.type(org.openqa.selenium.By,java.lang.String,boolean)"], "Fixed commit": "428cca95171ad521f1fd39ca8beb9231a4b37036", "Url": "https://api.github.com/repos/exoplatform/ui-test", "Date": "2013-10-16T08:27:11Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(item instanceof com.dd.entities.players.Potion)) { changeStats(item.getStatChange()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4519/buggy-version/src.com.dd.entities.players.Wizard.java", "BodyUseAPI": ["com.dd.entities.players.Item.getStatChange()", "com.dd.entities.players.Wizard.changeStats(item.getStatChange())"], "Fixed commit": "b1c21094db445eaaa8a976c977c92fbf02cccd7e", "Url": "https://api.github.com/repos/jterrell9/Dungeons_And_DD", "Date": "2017-05-09T05:17:49Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(item instanceof com.dd.entities.players.Potion)) { changeStats(item.getStatChange()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4519/buggy-version/src.com.dd.entities.players.Fighter.java", "BodyUseAPI": ["com.dd.entities.players.Fighter.changeStats(item.getStatChange())", "com.dd.entities.players.Item.getStatChange()"], "Fixed commit": "b1c21094db445eaaa8a976c977c92fbf02cccd7e", "Url": "https://api.github.com/repos/jterrell9/Dungeons_And_DD", "Date": "2017-05-09T05:17:49Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj) instanceof message.ProfWertung) { if (!(client.ServerListener.controller.profCard())) { sendObject(new message.GameFinished()); }else { client.ServerListener.controller.bewerteProfCard(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/814/buggy-version/src.client.ServerListener.java", "BodyUseAPI": [], "Fixed commit": "e2ec300af7de5333913ffc1476a57e9521f9541d", "Url": "https://api.github.com/repos/patricktuescher/nichtlustig", "Date": "2016-08-08T10:09:42Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((row % 2) == 0) { model.insertRow(row, new java.lang.Object[]{ }); model.insertRow(row, new java.lang.Object[]{ }); }else { model.insertRow((row - 1), new java.lang.Object[]{ }); model.insertRow((row - 1), new java.lang.Object[]{ }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1426/buggy-version/src.gsingh.learnkirtan.ui.shabadeditor.tableeditor.TableShabadEditor.java", "BodyUseAPI": ["gsingh.learnkirtan.ui.shabadeditor.tableeditor.UndoTableModel.insertRow(int,java.lang.Object[])", "gsingh.learnkirtan.ui.shabadeditor.tableeditor.UndoTableModel.insertRow(int,java.lang.Object[])", "gsingh.learnkirtan.ui.shabadeditor.tableeditor.UndoTableModel.insertRow(int,java.lang.Object[])", "gsingh.learnkirtan.ui.shabadeditor.tableeditor.UndoTableModel.insertRow(int,java.lang.Object[])"], "Fixed commit": "d1573f345a4f9265f60ac86c897e10d174a036f0", "Url": "https://api.github.com/repos/gsingh93/Learn-Kirtan", "Date": "2013-02-22T04:08:57Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nas509.groceries.controller.PaymentsFragment.model) != null) { nas509.groceries.controller.PaymentsFragment.adapter = new nas509.groceries.controller.PaymentsFragment.GroceryItemRecyclerViewAdapter(nas509.groceries.controller.PaymentsFragment.model.getPaymentsList()); java.lang.System.out.println(nas509.groceries.controller.PaymentsFragment.adapter.getItemCount()); nas509.groceries.controller.PaymentsFragment.onItemsLoadComplete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5590/buggy-version/app.src.main.java.nas509.groceries.controller.PaymentsFragment.java", "BodyUseAPI": [], "Fixed commit": "ba73d1dcd9adb7f03c6c8f516ddea74cbc0a27a4", "Url": "https://api.github.com/repos/TrySickle/Groceries", "Date": "2017-10-27T02:31:53Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCourseType()) == (DatabaseManager.Table.enrolled)) { mCoursesAdapter.notifyDataSetChanged(); mHandlerStateUpdating.postDelayed(mUpdatingRunnable, AppConstants.UI_UPDATING_TIME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5531/buggy-version/app.src.main.java.org.stepic.droid.base.CoursesFragmentBase.java", "BodyUseAPI": [], "Fixed commit": "705f26942e855bda0e31041b254d9208bac98e64", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2015-11-12T12:14:52Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gui.Console.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((string.get(1).length()) == 1) { gui.Tools.notify(\"err\", \"Item Lookup\", player.bag.toStringArray().get(3)); gui.Driver.logConsoleEvent((\"Listing xstat pocket contents: \" + (player.bag.toStringArray().get(1)))); return; }else { target = player.bag.xstat(string.get(1).substring(1)); if ((string.size()) == 2) { gui.Tools.notify(\"err\", \"Item Lookup\", target.toString()); gui.Driver.logConsoleEvent((\"Describing item: \" + (target.toString()))); return; }else { target.add(java.lang.Integer.parseInt(string.get(2))); gui.Tools.notify(\"err\", \"Populating Item\", target.toString()); gui.Driver.logConsoleEvent((\"Populating item: \" + (target.toString()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5756/buggy-version/src.gui.Console.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.ArrayList<java.lang.String>.size()", "item.Item.add(int)", "java.lang.String.substring(int)", "player.bag.xstat(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "0abcfb47040f76d9874684386f74e9f90805a5ce", "Url": "https://api.github.com/repos/zachtaylor/JPokemon", "Date": "2012-03-25T18:33:45Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.qii.weiciyuan.support.settinghelper.SettingUtility.getEnableAutoRefresh()) { this.newMsgTipBar.setType(TopTipBar.Type.ALWAYS); }else { this.newMsgTipBar.setType(TopTipBar.Type.AUTO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7958/buggy-version/src.org.qii.weiciyuan.ui.maintimeline.FriendsTimeLineFragment.java", "BodyUseAPI": [], "Fixed commit": "e1b5fc5f7e38f580aa9d6892d75a0e98d1126522", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2013-05-25T14:47:24Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pong.PongPuck.3.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newVelocity > maxVelocity) { newVelocity = maxVelocity; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/666/buggy-version/Pong.src.pong.PongPuck.java", "BodyUseAPI": [], "Fixed commit": "63c06c39d93dd284b6942814170c7b22f8ad1b40", "Url": "https://api.github.com/repos/pstorum/ani", "Date": "2013-09-24T21:39:53Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pong.PongPuck.2.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newVelocity > maxVelocity) { newVelocity = maxVelocity; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/666/buggy-version/Pong.src.pong.PongPuck.java", "BodyUseAPI": [], "Fixed commit": "63c06c39d93dd284b6942814170c7b22f8ad1b40", "Url": "https://api.github.com/repos/pstorum/ani", "Date": "2013-09-24T21:39:53Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(de.TheJulianJES.UtilsPlus.Mod.Items.dagger.beta)) return stack;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4947/buggy-version/src.main.java.de.TheJulianJES.UtilsPlus.Mod.Items.dagger.java", "BodyUseAPI": [], "Fixed commit": "e9c78549e844a184ccdd5d00a064c15c4efaa702", "Url": "https://api.github.com/repos/TheJulianJES/UtilsPlus", "Date": "2015-02-25T13:54:14Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((exeFile.exists()) && (!(exeFile.canExecute()))) { exeFile.setExecutable(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3759/buggy-version/src.fr.inria.soctrace.framesoc.core.src.fr.inria.soctrace.framesoc.core.tools.management.ExternalProgramConfigManager.java", "BodyUseAPI": ["java.io.File.setExecutable(boolean)"], "Fixed commit": "ff3c220f872063af8a269f3ec0404be0cdc87309", "Url": "https://api.github.com/repos/soctrace-inria/framesoc", "Date": "2015-07-07T13:36:21Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jask.FunctionExecuter.executeFunction(java.lang.String,java.util.List<jask.Variable>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (varVal.isEmpty()) return new jask.Variable(\"NULL\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2841/buggy-version/src.jask.Executer.java", "BodyUseAPI": [], "Fixed commit": "179238ce18739f87621251cfb6bfc43db5463c06", "Url": "https://api.github.com/repos/jpaffrath/jask", "Date": "2016-10-17T11:27:26Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["backtype.storm.utils.TimeCacheMap<java.lang.Object, backtype.storm.coordination.CoordinatedBolt.TrackingInfo>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (track != null) track.failed = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3279/buggy-version/src.jvm.backtype.storm.coordination.CoordinatedBolt.java", "BodyUseAPI": [], "Fixed commit": "6584476f7d26dfe11498a56e99d1488641d1d482", "Url": "https://api.github.com/repos/xumingming/storm", "Date": "2012-04-12T11:45:48Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["backtype.storm.utils.TimeCacheMap<java.lang.Object, backtype.storm.coordination.CoordinatedBolt.TrackingInfo>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (track != null) { java.util.Map<java.lang.Integer, java.lang.Integer> taskEmittedTuples = track.taskEmittedTuples; for (java.lang.Integer task : tasks) { int newCount = (get(taskEmittedTuples, task, 0)) + 1; taskEmittedTuples.put(task, newCount); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3279/buggy-version/src.jvm.backtype.storm.coordination.CoordinatedBolt.java", "BodyUseAPI": [], "Fixed commit": "6584476f7d26dfe11498a56e99d1488641d1d482", "Url": "https://api.github.com/repos/xumingming/storm", "Date": "2012-04-12T11:45:48Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.GameInput.getInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userChoice == 1) { }else if (userChoice == 2) { kitsuneAttempt++; }else { throw new java.io.IOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2663/buggy-version/AnEndlessNight.src.main.MenuSystem.BossCombatMenu.java", "BodyUseAPI": [], "Fixed commit": "6d6645c24bcc1d26d2f0a74bc1b0a2e02c4bfbd9", "Url": "https://api.github.com/repos/aknobloch/An-Endless-Night", "Date": "2016-11-14T00:18:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount < 0) { amount = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2663/buggy-version/AnEndlessNight.src.main.CombatSystem.Character.java", "BodyUseAPI": [], "Fixed commit": "6d6645c24bcc1d26d2f0a74bc1b0a2e02c4bfbd9", "Url": "https://api.github.com/repos/aknobloch/An-Endless-Night", "Date": "2016-11-14T00:18:55Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.bukkit.entity.Arrow) (attack.getDamager())).getShooter()", "org.bukkit.event.entity.PlayerDeathEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (damager == victim) { }else process(uuid, victimUUID, mgp, damager);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2986/buggy-version/src.main.java.com.minegusta.mgracesredone.listeners.perkpoints.PerkPointListener.java", "BodyUseAPI": ["com.minegusta.mgracesredone.listeners.perkpoints.PerkPointListener.process(java.lang.String,java.lang.String,com.minegusta.mgracesredone.playerdata.MGPlayer,org.bukkit.entity.Player)"], "Fixed commit": "783ab6378d46823545639104c350d9780ce4fe9f", "Url": "https://api.github.com/repos/LFGSaito/MGRacesRedone", "Date": "2015-07-24T20:29:38Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(files[i].toString().contains(\".json\"))) { java.lang.System.out.println((\"skipping \" + (files[i].toString()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3041/buggy-version/src.java.boa.datagen.forges.github.GitHubRepoMetaDataDownloader.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.File.toString()"], "Fixed commit": "c22e17c8195e1ec6595edbc8a874891bb4469ba2", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2017-06-19T14:27:25Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hChest.getName().contains(\"\ufffd\")) { messageParts.then(((hChest.getName().substring(0, 2)) + \"[Item]\")).itemTooltip(hChest); }else { messageParts.then(\"[Item]\").itemTooltip(hChest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4993/buggy-version/src.main.java.com.tealcube.minecraft.bukkit.chatterbox.ChatterboxPlugin.java", "BodyUseAPI": ["messageParts.then(\"[Item]\").itemTooltip(com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack)", "hChest.getName().substring(int,int)", "com.tealcube.minecraft.bukkit.kern.fanciful.FancyMessage.then(((hChest.getName().substring(0, 2)) + \"[Item]\"))", "com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack.getName()", "messageParts.then(((hChest.getName().substring(0, 2)) + \"[Item]\")).itemTooltip(com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack)"], "Fixed commit": "b69365cfb2c9e5e203d4c30f829bedd913700dcd", "Url": "https://api.github.com/repos/TealCube/chatterbox", "Date": "2015-06-11T20:58:39Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hBoots.getName().contains(\"\ufffd\")) { messageParts.then(((hBoots.getName().substring(0, 2)) + \"[Item]\")).itemTooltip(hBoots); }else { messageParts.then(\"[Item]\").itemTooltip(hBoots); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4993/buggy-version/src.main.java.com.tealcube.minecraft.bukkit.chatterbox.ChatterboxPlugin.java", "BodyUseAPI": ["com.tealcube.minecraft.bukkit.kern.fanciful.FancyMessage.then(((hBoots.getName().substring(0, 2)) + \"[Item]\"))", "hBoots.getName().substring(int,int)", "messageParts.then(((hBoots.getName().substring(0, 2)) + \"[Item]\")).itemTooltip(com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack)", "com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack.getName()", "messageParts.then(\"[Item]\").itemTooltip(com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack)"], "Fixed commit": "b69365cfb2c9e5e203d4c30f829bedd913700dcd", "Url": "https://api.github.com/repos/TealCube/chatterbox", "Date": "2015-06-11T20:58:39Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hLeggings.getName().contains(\"\ufffd\")) { messageParts.then(((hLeggings.getName().substring(0, 2)) + \"[Item]\")).itemTooltip(hLeggings); }else { messageParts.then(\"[Item]\").itemTooltip(hLeggings); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4993/buggy-version/src.main.java.com.tealcube.minecraft.bukkit.chatterbox.ChatterboxPlugin.java", "BodyUseAPI": ["messageParts.then(\"[Item]\").itemTooltip(com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack)", "hLeggings.getName().substring(int,int)", "com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack.getName()", "messageParts.then(((hLeggings.getName().substring(0, 2)) + \"[Item]\")).itemTooltip(com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack)", "com.tealcube.minecraft.bukkit.kern.fanciful.FancyMessage.then(((hLeggings.getName().substring(0, 2)) + \"[Item]\"))"], "Fixed commit": "b69365cfb2c9e5e203d4c30f829bedd913700dcd", "Url": "https://api.github.com/repos/TealCube/chatterbox", "Date": "2015-06-11T20:58:39Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (hHelmet != null) { if (hHelmet.getName().contains(\"\ufffd\")) { messageParts.then(((hHelmet.getName().substring(0, 2)) + \"[Item]\")).itemTooltip(hHelmet); }else { messageParts.then(\"[Item]\").itemTooltip(hHelmet); } }else { messageParts.then(\"nothing\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4993/buggy-version/src.main.java.com.tealcube.minecraft.bukkit.chatterbox.ChatterboxPlugin.java", "BodyUseAPI": ["com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack.getName()", "com.tealcube.minecraft.bukkit.kern.fanciful.FancyMessage.then(((hHelmet.getName().substring(0, 2)) + \"[Item]\"))", "hHelmet.getName().substring(int,int)", "com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack.getName()", "messageParts.then(\"[Item]\").itemTooltip(com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack)", "hHelmet.getName().contains(java.lang.String)", "messageParts.then(((hHelmet.getName().substring(0, 2)) + \"[Item]\")).itemTooltip(com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack)"], "Fixed commit": "b69365cfb2c9e5e203d4c30f829bedd913700dcd", "Url": "https://api.github.com/repos/TealCube/chatterbox", "Date": "2015-06-11T20:58:39Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hHand.getName().contains(\"\ufffd\")) { messageParts.then(((hHand.getName().substring(0, 2)) + \"[Item]\")).itemTooltip(hHand); }else { messageParts.then(\"[Item]\").itemTooltip(hHand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4993/buggy-version/src.main.java.com.tealcube.minecraft.bukkit.chatterbox.ChatterboxPlugin.java", "BodyUseAPI": ["messageParts.then(((hHand.getName().substring(0, 2)) + \"[Item]\")).itemTooltip(com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack)", "com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack.getName()", "com.tealcube.minecraft.bukkit.kern.fanciful.FancyMessage.then(((hHand.getName().substring(0, 2)) + \"[Item]\"))", "messageParts.then(\"[Item]\").itemTooltip(com.tealcube.minecraft.bukkit.facecore.shade.hilt.HiltItemStack)", "hHand.getName().substring(int,int)"], "Fixed commit": "b69365cfb2c9e5e203d4c30f829bedd913700dcd", "Url": "https://api.github.com/repos/TealCube/chatterbox", "Date": "2015-06-11T20:58:39Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((params.length) > 2) this.arg = params[2];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6598/buggy-version/src.main.java.phase3.model.Operator.java", "BodyUseAPI": [], "Fixed commit": "7dc6c13d42da9c431e7f05b0bdc346a611ce9fe9", "Url": "https://api.github.com/repos/nikitakraev/inno-dmd-project", "Date": "2015-11-23T09:25:37Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wakeLock.isHeld()) { wakeLock.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4388/buggy-version/src.com.ubhave.sensormanager.ESSensorManager.java", "BodyUseAPI": ["PowerManager.WakeLock.release()"], "Fixed commit": "f69b3aec3fa08b179616da05b1f1f31606fa0c19", "Url": "https://api.github.com/repos/nlathia/SensorManager", "Date": "2013-03-04T15:44:55Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.sammelbox.controller.filters.ItemFieldFilter.getValidItemFields(albumItem.getFields()).isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4955/buggy-version/Sammelbox-Desktop.src.org.sammelbox.model.database.operations.UpdateOperations.java", "BodyUseAPI": [], "Fixed commit": "5287bab67ef22bfef2eb5debd1e9054406a94cb8", "Url": "https://api.github.com/repos/jeromewagener/Sammelbox", "Date": "2014-02-05T22:09:55Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (poiId == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/150/buggy-version/coordinator-server.src.main.java.cz.clovekvtisni.coordinator.server.web.controller.EventPoiListController.java", "BodyUseAPI": [], "Fixed commit": "61a4a169c2df62acd8b08492767c89b983059bcd", "Url": "https://api.github.com/repos/Tomucha/coordinator", "Date": "2013-03-20T11:36:57Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params.getEventId()) != null) return \"redirect:/admin/event/map?eventId=\" + (params.getEventId()); else return \"redirect:/superadmin/event/list\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/150/buggy-version/coordinator-server.src.main.java.cz.clovekvtisni.coordinator.server.web.controller.AdminController.java", "BodyUseAPI": ["cz.clovekvtisni.coordinator.server.web.model.EventFilterParams.getEventId()"], "Fixed commit": "61a4a169c2df62acd8b08492767c89b983059bcd", "Url": "https://api.github.com/repos/Tomucha/coordinator", "Date": "2013-03-20T11:36:57Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(av.CheckID(vehicleIDText.getText()))) { shell.dispose(); }else { org.eclipse.swt.widgets.MessageBox mb = new org.eclipse.swt.widgets.MessageBox(shell, ((org.eclipse.swt.SWT.ICON_ERROR) | (org.eclipse.swt.SWT.OK))); mb.setMessage(\"Error: The ID you entered is invalid\"); mb.setText(\"Invalid ID\"); mb.open(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5152/buggy-version/src.cmmsPresentation.IDInputDialog.java", "BodyUseAPI": [], "Fixed commit": "3402e21fc2e5708a21e52b795adec768a273a828", "Url": "https://api.github.com/repos/brycepfrimmer/3350Project", "Date": "2014-03-28T23:38:37Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentSkillNum > 0) { newSkillNum = currentSkillNum - 1; (counter)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4573/buggy-version/src.application.NewGameController.java", "BodyUseAPI": [], "Fixed commit": "8016ea27a9f8d079330cde55e74c251b75049b5f", "Url": "https://api.github.com/repos/hrosenblume/SpaceTraders2340", "Date": "2014-09-18T18:59:01Z"},
{"Line": "=>2314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a instanceof com.redhat.ceylon.compiler.typechecker.tree.Tree.SpecifiedArgument) { node = ((com.redhat.ceylon.compiler.typechecker.tree.Tree.SpecifiedArgument) (a)).getSpecifierExpression(); }else { node = a; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6391/buggy-version/src.com.redhat.ceylon.compiler.typechecker.analyzer.ExpressionVisitor.java", "BodyUseAPI": [], "Fixed commit": "15f28316fce085066953524ec8ca1fe8363e0b9d", "Url": "https://api.github.com/repos/ceylon/ceylon-spec", "Date": "2013-03-06T14:23:21Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sjtu.pcm.MyApplication.getUser()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((user.getGender()) != null) { if ((user.getGender()) == 0) { mPortrait.setImageResource(R.drawable.portrait_1); }else if ((user.getGender()) == 1) { mPortrait.setImageResource(R.drawable.portrait_2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3986/buggy-version/app.src.main.java.com.sjtu.pcm.menu.User.java", "BodyUseAPI": ["com.sjtu.pcm.entity.UserEntity.getGender()", "com.sjtu.pcm.entity.UserEntity.getGender()"], "Fixed commit": "d9b5bebb406cbbe1129848f5ae041f8c34a84c1f", "Url": "https://api.github.com/repos/Victor-ZHC/PCM", "Date": "2016-12-15T12:03:02Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mapp.getUser().getGender()) != null) { if ((mapp.getUser().getGender()) == 0) { mPortrait.setImageResource(R.drawable.portrait_1); }else if ((mapp.getUser().getGender()) == 1) { mPortrait.setImageResource(R.drawable.portrait_2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3986/buggy-version/app.src.main.java.com.sjtu.pcm.menu.Desktop.java", "BodyUseAPI": ["mapp.getUser().getGender()", "mapp.getUser().getGender()", "com.sjtu.pcm.MyApplication.getUser()", "com.sjtu.pcm.MyApplication.getUser()"], "Fixed commit": "d9b5bebb406cbbe1129848f5ae041f8c34a84c1f", "Url": "https://api.github.com/repos/Victor-ZHC/PCM", "Date": "2016-12-15T12:03:02Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mitoma.ponto.Node.getFullName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(fullName.isEmpty())) { keyName = java.lang.String.format(\"%s.%s\", fullName, methodName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3628/buggy-version/src.main.java.org.mitoma.ponto.KeyStyle.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "74f92ffab2977315667621f4c7c127d2bfb83118", "Url": "https://api.github.com/repos/mitoma/ponto", "Date": "2014-02-15T15:15:33Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (img2d == (m_img)) { toRender = net.imglib2.ops.operation.SubsetOperations.subsetview(m_img, new net.imglib2.FinalInterval(new long[img2d.numDimensions()], max)); }else { toRender = img2d; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5597/buggy-version/org.knime.knip.base.src.org.knime.knip.base.data.img.ImgPlusCell.java", "BodyUseAPI": ["net.imglib2.ops.operation.SubsetOperations.subsetview(net.imglib2.img.Img<T>,net.imglib2.FinalInterval)", "net.imglib2.RandomAccessibleInterval<T>.numDimensions()"], "Fixed commit": "ddebff8a234cd410fb9ca18d0dba97733af19c6f", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2013-12-03T17:48:06Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m_lab) == lab2d) { toRender = getSubInterval(new net.imglib2.FinalInterval(new long[lab2d.numDimensions()], max)); }else { toRender = lab2d; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5597/buggy-version/org.knime.knip.base.src.org.knime.knip.base.data.labeling.LabelingCell.java", "BodyUseAPI": ["org.knime.knip.base.data.labeling.LabelingCell<L>.getSubInterval(net.imglib2.FinalInterval)", "net.imglib2.RandomAccessibleInterval<net.imglib2.labeling.LabelingType<L>>.numDimensions()"], "Fixed commit": "ddebff8a234cd410fb9ca18d0dba97733af19c6f", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2013-12-03T17:48:06Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.eclipsefp.haskell.buildwrapper.BuildWrapperPlugin.getFacade(org.eclipse.core.resources.IProject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (changedF != null) { expFlags = changedF.getFlags(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3758/buggy-version/net.sf.eclipsefp.haskell.buildwrapper.src.net.sf.eclipsefp.haskell.buildwrapper.SandboxHelper.java", "BodyUseAPI": ["net.sf.eclipsefp.haskell.buildwrapper.BWFacade.getFlags()"], "Fixed commit": "7828b72c9810779a4028012f1f5348a32c4c20c0", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2013-05-19T17:01:54Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umass.ckc.wo.woreports.ClassTopicLevelsReport.getStudentTopicData(java.util.List<edu.umass.ckc.wo.woreports.ClassTopicLevelsReport.StudentTopicData>,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((td.seen) >= 10) sb.append(((((\"<td bgcolor=\\\"\" + (getColor(td.mastery))) + \"\\\">\") + (getLinkToTopicMasteryTrajectoryReport(td.mastery, label, sd.studId, f.topicId))) + \"</td>\")); else sb.append(((\"<td>\" + (getLinkToTopicMasteryTrajectoryReport(td.mastery, label, sd.studId, f.topicId))) + \"</td>\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7739/buggy-version/woServer.src.edu.umass.ckc.wo.woreports.ClassTopicLevelsReport.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "edu.umass.ckc.wo.woreports.ClassTopicLevelsReport.getLinkToTopicMasteryTrajectoryReport(double,java.lang.String,int,int)", "java.lang.StringBuilder.append(java.lang.String)", "edu.umass.ckc.wo.woreports.ClassTopicLevelsReport.getColor(double)", "edu.umass.ckc.wo.woreports.ClassTopicLevelsReport.getLinkToTopicMasteryTrajectoryReport(double,java.lang.String,int,int)"], "Fixed commit": "38669595590c46a74b957306ecd338b4aea142cc", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2016-01-05T23:01:57Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSeed().getUnlocalizedName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((name.indexOf('_')) >= 0) { name = name.substring(((name.indexOf('_')) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/765/buggy-version/src.main.java.com.InfinityRaider.AgriCraft.apiimpl.v1.cropplant.CropPlantStem.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.indexOf(char)"], "Fixed commit": "5aab6678c47883f5db345eea470d123202bbeaf0", "Url": "https://api.github.com/repos/AgriCraft/AgriCraft", "Date": "2015-07-15T15:55:49Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.indexOf('.')) >= 0) { name = name.substring(((name.indexOf('.')) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/765/buggy-version/src.main.java.com.InfinityRaider.AgriCraft.apiimpl.v1.cropplant.CropPlantStem.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int)"], "Fixed commit": "5aab6678c47883f5db345eea470d123202bbeaf0", "Url": "https://api.github.com/repos/AgriCraft/AgriCraft", "Date": "2015-07-15T15:55:49Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dorkbox.systemTray.SystemTray.isJavaFxLoaded) { dorkbox.systemTray.linux.jna.Gtk.gtk_status_icon_set_name(trayIcon, \"SystemTray\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7882/buggy-version/src.dorkbox.systemTray.linux.GtkSystemTray.java", "BodyUseAPI": [], "Fixed commit": "fb8c5c237809604a6f6bcf09bfd7670aeb0e5061", "Url": "https://api.github.com/repos/dorkbox/SystemTray", "Date": "2016-09-26T00:43:10Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!listAll) { log.info((\"listAll : \" + listAll)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2347/buggy-version/vipr-portal.com.iwave.ext.netappc.src.java.com.iwave.ext.netappc.StorageVirtualMachine.java", "BodyUseAPI": ["org.apache.log4j.Logger.info(java.lang.String)"], "Fixed commit": "154a172c4bba2c87e8a83db73245b199ce435300", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-07-14T08:55:29Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.valueList) == null) { valueList = new java.util.ArrayList<org.powertac.windpark.Scenario.ScenarioValue>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3168/buggy-version/scengen.src.main.java.org.powertac.windpark.Scenario.java", "BodyUseAPI": [], "Fixed commit": "2a5cd548b0298abc0a4c01d9281a6d50fd5c8bdd", "Url": "https://api.github.com/repos/powertac/powertac-tools", "Date": "2014-07-27T02:31:50Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["duplicatesearcher.processing.SynonymFinder.mostCommonWord(java.util.SortedSet<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (synonym == null) return token;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4745/buggy-version/src.duplicatesearcher.processing.SynonymFinder.java", "BodyUseAPI": [], "Fixed commit": "13af2b1da3e38f48f899ee2db0fe11cb32b0d797", "Url": "https://api.github.com/repos/mantono/DuplicateSearcher", "Date": "2016-05-05T14:55:08Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count <= 1) { if (!(phraseList.isEmpty())) { set.retainAll(phraseList); } }else { set.addAll(phraseList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2796/buggy-version/src.QueryLanguage.java", "BodyUseAPI": [], "Fixed commit": "f15c25622b62b738da1912e7fe8d2ed39601baa1", "Url": "https://api.github.com/repos/manikhanuja/Pragmatic-it", "Date": "2016-10-03T08:41:54Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hpi.hpcc.main.HPCCColumnMetaData.getSqlType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type == (java.sql.Types.VARCHAR)) { content = (\"\\\"\" + content) + \"\\\"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1609/buggy-version/src.de.hpi.hpcc.main.HPCCResultSet.java", "BodyUseAPI": [], "Fixed commit": "7ee60bb5def8597a88daeebef0eb6264264220f4", "Url": "https://api.github.com/repos/bp2014n2/hpcc-jdbc", "Date": "2015-03-24T17:33:02Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.toString().contains(\"string\")) { columnmeta = new de.hpi.hpcc.main.HPCCColumnMetaData(name, index, java.sql.Types.VARCHAR); }else { columnmeta = new de.hpi.hpcc.main.HPCCColumnMetaData(name, index, java.sql.Types.OTHER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1609/buggy-version/src.de.hpi.hpcc.main.HPCCDFUFile.java", "BodyUseAPI": [], "Fixed commit": "7ee60bb5def8597a88daeebef0eb6264264220f4", "Url": "https://api.github.com/repos/bp2014n2/hpcc-jdbc", "Date": "2015-03-24T17:33:02Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.getName().equalsIgnoreCase(nameOfInvitedPlayer)) { player.sendMessage(\"you can not invite yourself\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3410/buggy-version/src.b2c.simpleinvite.CommandExecuter.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(java.lang.String)"], "Fixed commit": "871144bd5ea1f71b0647581113ddeb9f9da4d305", "Url": "https://api.github.com/repos/Busti/SimpleInvite", "Date": "2016-05-12T19:24:36Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((possibilities.size()) > 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5213/buggy-version/app.src.main.java.com.fallenritemonk.ludus.game.AbstractGame.java", "BodyUseAPI": [], "Fixed commit": "9757c7e3e5c30adaf7b4a06cb1ffdc2a8ee3093c", "Url": "https://api.github.com/repos/FallenRiteMonk/ludus", "Date": "2016-01-14T10:15:20Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.tobiyas.racesandclasses.APIs.RaceAPI.getRaceNameOfPlayer(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (raceName == null) raceName = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/631/buggy-version/src.main.java.de.tobiyas.racesandclasses.listeners.externalchatlistener.TownyChatListener.java", "BodyUseAPI": [], "Fixed commit": "124dcacc319072ca472d0c53768ad5817b4daff1", "Url": "https://api.github.com/repos/tobiyas/RacesAndClasses", "Date": "2016-04-09T10:53:11Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.tobiyas.racesandclasses.APIs.ClassAPI.getClassNameOfPlayer(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (className == null) className = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/631/buggy-version/src.main.java.de.tobiyas.racesandclasses.listeners.externalchatlistener.TownyChatListener.java", "BodyUseAPI": [], "Fixed commit": "124dcacc319072ca472d0c53768ad5817b4daff1", "Url": "https://api.github.com/repos/tobiyas/RacesAndClasses", "Date": "2016-04-09T10:53:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rinde.sim.scenario.TimedEvent.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clazz == (rinde.sim.pdptw.common.AddDepotEvent.class)) { newEvents.add(new rinde.sim.pdptw.common.AddDepotEvent(e.time, ((rinde.sim.pdptw.common.AddDepotEvent) (e)).position)); }else if (clazz == (rinde.sim.pdptw.common.AddVehicleEvent.class)) { newEvents.add(new rinde.sim.pdptw.common.AddVehicleEvent(e.time, ((rinde.sim.pdptw.common.AddVehicleEvent) (e)).vehicleDTO)); }else if ((e.getEventType()) == (rinde.sim.core.model.pdp.PDPScenarioEvent.TIME_OUT)) { newEvents.add(new rinde.sim.scenario.TimedEvent(e.getEventType(), e.time)); }else if (clazz == (rinde.sim.pdptw.common.AddParcelEvent.class)) { final rinde.sim.pdptw.common.AddParcelEvent old = ((rinde.sim.pdptw.common.AddParcelEvent) (e)); final rinde.sim.pdptw.common.ParcelDTO newDto = new rinde.sim.pdptw.common.ParcelDTO(old.parcelDTO.pickupLocation, old.parcelDTO.destinationLocation, old.parcelDTO.pickupTimeWindow, old.parcelDTO.deliveryTimeWindow, old.parcelDTO.neededCapacity, (-1), old.parcelDTO.pickupDuration, old.parcelDTO.deliveryDuration); newEvents.add(new rinde.sim.pdptw.common.AddParcelEvent(newDto)); }else { throw new java.lang.IllegalArgumentException((((\"Unrecognized class: \" + clazz) + \", instance: \") + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5929/buggy-version/problem.src.main.java.rinde.sim.pdptw.common.DynamicPDPTWScenario.java", "BodyUseAPI": [], "Fixed commit": "1393d68e1da8e09f554006e4e266b0dcdca60cda", "Url": "https://api.github.com/repos/rinde/RinSim", "Date": "2013-08-26T15:12:58Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (BPsystolic < BPdiastolic) { session.setAttribute(\"error\", \"Update failed: BP Systolic must be higher than BP Diastolic.\"); session.setAttribute(\"active\", \"vital\"); response.sendRedirect(\"./viewPatientInformation.jsp\"); }else if ((!(oralAmount.equals(\"-\"))) && (oralType.equals(\"-\"))) { session.setAttribute(\"error\", \"Update failed: Please update BOTH Oral/Intragastric Intake Type and Amount.\"); session.setAttribute(\"active\", \"vital\"); response.sendRedirect(\"./viewPatientInformation.jsp\"); }else if ((oralAmount.equals(\"-\")) && (!(oralType.equals(\"-\")))) { session.setAttribute(\"error\", \"Update failed: Please update BOTH Oral/Intragastric Intake Type and Amount.\"); session.setAttribute(\"active\", \"vital\"); response.sendRedirect(\"./viewPatientInformation.jsp\"); }else if ((!(intravenousType.equals(\"-\"))) && (intravenousAmount.equals(\"-\"))) { session.setAttribute(\"error\", \"Update failed: Please update BOTH Intravenous Intake Type and Amount.\"); session.setAttribute(\"active\", \"vital\"); response.sendRedirect(\"./viewPatientInformation.jsp\"); }else if ((intravenousType.equals(\"-\")) && (!(intravenousAmount.equals(\"-\")))) { session.setAttribute(\"error\", \"Update failed: Please update BOTH Intravenous Intake Type and Amount.\"); session.setAttribute(\"active\", \"vital\"); response.sendRedirect(\"./viewPatientInformation.jsp\"); }else { controller.VitalDAO.add(scenarioID, temperature, RR, BPsystolic, BPdiastolic, HR, SPO, output, oralType, oralAmount, intravenousType, intravenousAmount, 0, practicalGroupID); session.setAttribute(\"active\", \"vital\"); session.setAttribute(\"success\", \"Vital signs have been updated!\"); session.setAttribute(\"temperature\", \"\"); session.setAttribute(\"HR\", \"\"); session.setAttribute(\"RR\", \"\"); session.setAttribute(\"SPO\", \"\"); session.setAttribute(\"BPsystolic\", \"\"); session.setAttribute(\"BPdiastolic\", \"\"); session.setAttribute(\"oralAmount\", \"\"); session.setAttribute(\"oralType\", \"\"); session.setAttribute(\"intravenousType\", \"\"); session.setAttribute(\"intravenousAmount\", \"\"); session.setAttribute(\"output\", \"\"); response.sendRedirect(\"./viewPatientInformation.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/4385/buggy-version/App.hsemr.src.java.controller.ProcessAddVital.java", "BodyUseAPI": ["controller.VitalDAO.add(java.lang.String,double,int,int,int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)"], "Fixed commit": "07ce852e9cd3642a26a3c43ca080083548971ac4", "Url": "https://api.github.com/repos/nwyxxj/hsemr", "Date": "2015-04-05T15:13:43Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) != null) { android.view.MenuItem search = menu.findItem(R.id.search_friend); android.support.v4.view.MenuItemCompat.setShowAsAction(search, MenuItem.SHOW_AS_ACTION_NEVER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6352/buggy-version/app.src.main.java.im.tox.antox.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "43bf12f7ce84c5169bb632c14ed2c56bfd658ec1", "Url": "https://api.github.com/repos/aBothe/Antox", "Date": "2014-05-18T16:57:23Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) != null) { android.view.MenuItem af = menu.findItem(R.id.add_friend); android.support.v4.view.MenuItemCompat.setShowAsAction(af, MenuItem.SHOW_AS_ACTION_NEVER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6352/buggy-version/app.src.main.java.im.tox.antox.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "43bf12f7ce84c5169bb632c14ed2c56bfd658ec1", "Url": "https://api.github.com/repos/aBothe/Antox", "Date": "2014-05-18T16:57:23Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDetached()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6352/buggy-version/app.src.main.java.im.tox.antox.fragments.ChatFragment.java", "BodyUseAPI": [], "Fixed commit": "43bf12f7ce84c5169bb632c14ed2c56bfd658ec1", "Url": "https://api.github.com/repos/aBothe/Antox", "Date": "2014-05-18T16:57:23Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currMapping != null) { org.openmrs.module.chirdlutilbackports.StateManager.changeState(patient, patientState.getSessionId(), patientState.getState(), program, parameters, patientState.getLocationTagId(), patientState.getLocationId(), stateActionHandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7782/buggy-version/src.org.openmrs.module.chirdlutilbackports.StateManager.java", "BodyUseAPI": [], "Fixed commit": "60a070b9f2baffd1d538de9879881c502fd191d8", "Url": "https://api.github.com/repos/CHIRDL-Openmrs-Modules/chirdlutilbackports", "Date": "2011-07-12T19:35:22Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, jatoo.weather.JaTooWeatherCacheObject>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (weather == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7029/buggy-version/src.main.java.jatoo.weather.JaTooWeatherCache.java", "BodyUseAPI": [], "Fixed commit": "5bf3791c25ed2075a77821b3a29fc6ba5049a0ae", "Url": "https://api.github.com/repos/cristian-sulea/jatoo-weather", "Date": "2016-10-19T13:48:32Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sr != null) { sdUrl = sr.getUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6924/buggy-version/ConnectedCommuter.src.com.ratio.connectedcommuter.activities.SponsoredDataVideoActivity.java", "BodyUseAPI": ["com.datami.smi.SmiResult.getUrl()"], "Fixed commit": "0f3da283d5007b67e1ead8b630cc5dfe0bb50411", "Url": "https://api.github.com/repos/RatioArchive/ConnectedCommuter-Android", "Date": "2015-01-04T21:35:42Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.mzk.editor.server.handler.InsertNewDigitalObjectHandler.existTransformer(action.getObject())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((object.getUuid()) != null) && (object.getUuid().contains(Constants.FEDORA_UUID_PREFIX))) { pid = object.getUuid(); }else { pid = (cz.mzk.editor.client.util.Constants.FEDORA_UUID_PREFIX) + (object.getUuid()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/543/buggy-version/editor-common.editor-common-server.src.main.java.cz.mzk.editor.server.handler.InsertNewDigitalObjectHandler.java", "BodyUseAPI": ["cz.mzk.editor.shared.rpc.NewDigitalObject.getUuid()", "cz.mzk.editor.shared.rpc.NewDigitalObject.getUuid()"], "Fixed commit": "4f0a798046b994336426816e67f7dfbef257cd29", "Url": "https://api.github.com/repos/moravianlibrary/MEditor", "Date": "2016-04-07T11:20:32Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gnu.trove.iterator.TIntIterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (scores.contains(reverId)) { scores.get(reverId).remove(docid); }else { tobedeleted.add(reverId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6582/buggy-version/src.main.java.com.guokr.simbase.SimTable.java", "BodyUseAPI": ["gnu.trove.map.hash.TIntObjectHashMap<com.guokr.simbase.util.Sorter>.get(int)", "gnu.trove.list.TIntList.add(int)", "scores.get(reverId).remove(int)"], "Fixed commit": "c1dc0f0a40cc8ea94dc7e24a750417c11856c573", "Url": "https://api.github.com/repos/guokr/simbase", "Date": "2013-11-01T03:29:48Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jlab.groot.data.DataVector.getMin()", "org.jlab.groot.data.DataVector.getMax()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (min == max) { min = 0.9999 * min; max = 1.0001 * max; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/5874/buggy-version/src.main.java.org.jlab.groot.data.H1F.java", "BodyUseAPI": [], "Fixed commit": "cb6fadafeb5db635ff97e3bebe60e0040882b2b5", "Url": "https://api.github.com/repos/gavalian/groot", "Date": "2016-10-25T18:50:22Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((next) == null) && ((this.hasNext()) == false)) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/1463/buggy-version/modules.library.main.src.main.java.org.geotools.data.store.FilteringFeatureIterator.java", "BodyUseAPI": [], "Fixed commit": "a4711408b151e27875c4fecd4b2403b230ff880b", "Url": "https://api.github.com/repos/ahuarte47/geotools", "Date": "2016-04-14T13:31:54Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endDocument) { contentHandler.endDocument(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3079/buggy-version/edi.edisax.src.main.java.org.milyn.edisax.unedifact.UNEdifactInterchangeParser.java", "BodyUseAPI": [], "Fixed commit": "5b78e85fbf5d52d23e5e4f411c5770e6c7556e9a", "Url": "https://api.github.com/repos/worldticket/smooks", "Date": "2017-07-06T10:11:37Z"},
{"Line": "=>752", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showErrors) { createErrorBox(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/3037/buggy-version/src.truthtablegenerator.GUI.java", "BodyUseAPI": [], "Fixed commit": "917b18a28f396d92b10cb09beee00bade48c3e1e", "Url": "https://api.github.com/repos/BryceLawrence/Tableiness", "Date": "2014-12-12T18:53:20Z"},
{"Line": "=>927", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getExperiment().findControlledAcquisition(java.util.Map<au.gov.ansto.bragg.quokka.experiment.model.SampleEnvironment, au.gov.ansto.bragg.quokka.experiment.model.SampleEnvironmentPreset>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (acquisition != null) { au.gov.ansto.bragg.quokka.ui.workflow.ScanTableModel tableModel = new au.gov.ansto.bragg.quokka.ui.workflow.ScanTableModel(table, getExperiment(), acquisition); table.setModel(tableModel); tableModelMap.put(acquisition, tableModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/2328/buggy-version/bragg.quokka.au.gov.ansto.bragg.quokka.ui.src.au.gov.ansto.bragg.quokka.ui.workflow.AcquisitionTask.java", "BodyUseAPI": ["java.util.Map<au.gov.ansto.bragg.quokka.experiment.model.Acquisition, au.gov.ansto.bragg.quokka.ui.workflow.ScanTableModel>.put(au.gov.ansto.bragg.quokka.experiment.model.ControlledAcquisition,au.gov.ansto.bragg.quokka.ui.workflow.ScanTableModel)"], "Fixed commit": "129f1e85c68111eebbac6f95a1d71e92f27e9d8a", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2013-09-18T07:08:16Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.service.GroupLocalServiceUtil.fetchGroup(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((group != null) && (group.isStagingGroup())) { classPK = group.getLiveGroupId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/8012/buggy-version/portal-service.src.com.liferay.portal.security.permission.BaseResourcePermission.java", "BodyUseAPI": ["com.liferay.portal.model.Group.getLiveGroupId()"], "Fixed commit": "11f2da65cc7e3f26868c8a1d258af204d493369f", "Url": "https://api.github.com/repos/liferay/liferay-portal", "Date": "2015-01-23T23:52:30Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLatitude) == null) { currentLatitude = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/848/buggy-version/app.src.main.java.com.lesliedahlberg.placemem.AddMemActivity.java", "BodyUseAPI": [], "Fixed commit": "08bd2dcd5c47cfccc49c462a6c2a50bcd38f5302", "Url": "https://api.github.com/repos/lesliedahlberg/Talking-Photos-on-Android", "Date": "2015-05-20T16:56:59Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLongitude) == null) { currentLongitude = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/848/buggy-version/app.src.main.java.com.lesliedahlberg.placemem.AddMemActivity.java", "BodyUseAPI": [], "Fixed commit": "08bd2dcd5c47cfccc49c462a6c2a50bcd38f5302", "Url": "https://api.github.com/repos/lesliedahlberg/Talking-Photos-on-Android", "Date": "2015-05-20T16:56:59Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (loginResponse != null) { presenter.sendRatingRequest(rating, location.getId(), loginResponse.getAuthToken()); }else { android.content.Intent intent1 = new android.content.Intent(this, com.example.sergey.sportgrounds.ui.login.LoginActivity.class); startActivity(intent1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6193/buggy-version/app.src.main.java.com.example.sergey.sportgrounds.ui.detail.DetailActivity.java", "BodyUseAPI": ["com.example.sergey.sportgrounds.ui.detail.IDetailPresenter.sendRatingRequest(float,location.getId(),loginResponse.getAuthToken())", "com.example.sergey.sportgrounds.model.LoginResponse.getAuthToken()"], "Fixed commit": "e5e3ad2e1ad5f13098e9a37a0308b49f0d3801c2", "Url": "https://api.github.com/repos/gitsergey/SportGrounds", "Date": "2017-06-14T10:59:57Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nexus_http.Request.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (uriLine.startsWith(\"/\")) uriLine = \"/\" + (java.net.URLEncoder.encode(uriLine.substring(1), \"UTF-8\")); else uriLine = java.net.URLEncoder.encode(uriLine, \"UTF-8\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/6258/buggy-version/src.nexus_http.Request.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "java.lang.String.substring(int)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "f45d3d43e3c7eb6e8b6cad9a9e64eb2de38a7b85", "Url": "https://api.github.com/repos/Mikkomario/UtopiaNexus", "Date": "2015-03-25T18:31:07Z"},
{"Line": "=>800", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.azapps.mirakel.model.list.ListMirakel.getList(settings.getInt(\"defaultImportList\", (-1)))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (list == null) list = de.azapps.mirakel.model.list.ListMirakel.first();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V117/7086/buggy-version/src.de.azapps.mirakel.helper.PreferencesHelper.java", "BodyUseAPI": [], "Fixed commit": "539b0909661e9444783748f2ba583cef70ba6e6f", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-10-15T20:39:52Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ConversationControlPacket.ConversationControlOp.MEMBER_COUNT_QUERY_RESULT.equals(operation)) { intent.putExtra(Conversation.callbackMemberCount, convMessage.getCount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7455/buggy-version/src.main.java.cn.leancloud.leancloud_message.AVIMServer.java", "BodyUseAPI": [], "Fixed commit": "e389084619822d41b74c1f5e68bc9eb8b231f790", "Url": "https://api.github.com/repos/lbt05/javaMessageSDK", "Date": "2016-11-18T07:13:02Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(iteratorCurrentAirline.hasNext())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6043/buggy-version/src.java.com.smi.travel.datalayer.dao.impl.BookingPnrImpl.java", "BodyUseAPI": [], "Fixed commit": "b7b26736ca95d36b77c97a62ccab7f02ec92d805", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-09-13T21:57:02Z"},
{"Line": "=>4001", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7518/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "75fee1e01f534a5cf197c76b5b734f62a98dc15e", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-09-21T15:41:27Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(vocabularyList.contains(vocabulary))) { if ((vocabulary.getTitle().equals(string)) || (vocabulary.getTitle().contains(string))) { vocabularyList.add(vocabulary); }else { for (gruppn.kasslr.model.VocabularyItem vocabularyItem : vocabulary.getItems()) { if ((vocabularyItem.getName().equals(string)) || (vocabularyItem.getName().contains(string))) { vocabularyList.add(vocabulary); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6728/buggy-version/KasslR.app.src.main.java.gruppn.kasslr.SearchFragment.java", "BodyUseAPI": ["java.util.List<gruppn.kasslr.model.Vocabulary>.add(gruppn.kasslr.model.Vocabulary)", "gruppn.kasslr.model.Vocabulary.getItems()", "vocabulary.getTitle().contains(java.lang.String)", "gruppn.kasslr.model.Vocabulary.getTitle()", "gruppn.kasslr.model.Vocabulary.getTitle()", "vocabulary.getTitle().equals(java.lang.String)", "java.util.List<gruppn.kasslr.model.Vocabulary>.add(gruppn.kasslr.model.Vocabulary)"], "Fixed commit": "f6607e3557c1896e0bbdc01a5c86408abf563eaa", "Url": "https://api.github.com/repos/meemsbror/DAT255", "Date": "2016-10-07T14:48:00Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jazmin.core.thread.Dispatcher.getTotalInvokeCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (totalInvokeCount <= 0) { totalInvokeCount = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7630/buggy-version/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java", "BodyUseAPI": [], "Fixed commit": "91479de1c3d13c6670c4f66aa00e336f68a3c1f7", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2016-06-09T15:25:48Z"},
{"Line": "=>1082", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((algorithms.evaep.EvAEP.Data.getAttributeDefinitions().getInputAttribute(i).getType()) == (Attribute.NOMINAL)) { it = new algorithms.evaep.NominalItem(algorithms.evaep.Attributes.getAttribute(i).getName(), algorithms.evaep.EvAEP.Variables.getValue(i, j)); }else { it = new algorithms.evaep.NominalItem(algorithms.evaep.Attributes.getAttribute(i).getName(), algorithms.evaep.EvAEP.Variables.getValue(i, (j + ((int) (algorithms.evaep.EvAEP.Data.getAttributeDefinitions().getInputAttribute(i).getMinAttribute()))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/878/buggy-version/src.algorithms.evaep.EvAEP.java", "BodyUseAPI": ["algorithms.evaep.Attributes.getAttribute(int)", "algorithms.evaep.EvAEP.Data.getAttributeDefinitions().getInputAttribute(i).getMinAttribute()", "algorithms.evaep.InstanceSet.getAttributeDefinitions()", "algorithms.evaep.EvAEP.Data.getAttributeDefinitions().getInputAttribute(int)", "algorithms.evaep.TableVar.getValue(int,int)", "algorithms.evaep.TableVar.getValue(int,int)", "algorithms.evaep.Attributes.getAttribute(i).getName()", "algorithms.evaep.Attributes.getAttribute(i).getName()", "algorithms.evaep.Attributes.getAttribute(int)"], "Fixed commit": "7a46c16f84b3f2682c0c7a9375086af3ec74d8bb", "Url": "https://api.github.com/repos/SIMIDAT/epm-framework", "Date": "2017-04-04T09:54:19Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (ede.getEquipmentDrops().size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8782/buggy-version/src.main.java.net.nunnerycode.bukkit.mythicdrops.spawning.ItemSpawningListener.java", "BodyUseAPI": [], "Fixed commit": "cbc8e336a10becb1d9e89f9ab562c28b056895ba", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2014-02-06T05:17:13Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (ede.getEquipmentDrops().size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8782/buggy-version/src.main.java.net.nunnerycode.bukkit.mythicdrops.spawning.ItemSpawningListener.java", "BodyUseAPI": [], "Fixed commit": "cbc8e336a10becb1d9e89f9ab562c28b056895ba", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2014-02-06T05:17:13Z"},
{"Line": "=>829", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xnio.ssl.JsseStreamConduit.performIO(int,java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res == (-1)) { this.state |= org.xnio.ssl.JsseStreamConduit.READ_FLAG_EOF; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4538/buggy-version/api.src.main.java.org.xnio.ssl.JsseStreamConduit.java", "BodyUseAPI": [], "Fixed commit": "1d948ffac85a4b6118ccaa24e265a2d2c5128f05", "Url": "https://api.github.com/repos/xnio/xnio", "Date": "2017-02-23T07:18:43Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((teacher.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4488/buggy-version/schoolsearch.java", "BodyUseAPI": [], "Fixed commit": "ee06fc20f855fbf05e0e10b918f5846adf156b1d", "Url": "https://api.github.com/repos/Matt-Bryan/cpe365-lab1", "Date": "2017-04-10T02:53:00Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((states2.size()) != 0) { states.pop(); states2.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1892/buggy-version/src.com.eomprogramming.algebratiles.model.GameState.java", "BodyUseAPI": ["com.eomprogramming.algebratiles.datastructure.Stack<com.eomprogramming.algebratiles.model.RowGroup>.pop()"], "Fixed commit": "57aed019ce7a2f5035d78a06dad893d44c545765", "Url": "https://api.github.com/repos/eomprogramming/Algebra-Tiles", "Date": "2012-09-23T20:24:18Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (grid[row][column].transition()) { rememberThatCellAtEdgeChangedState(row, column); someSubcellChangedState = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/391/buggy-version/src.main.java.gol.Neighborhood.java", "BodyUseAPI": ["gol.Neighborhood.rememberThatCellAtEdgeChangedState(int,int)"], "Fixed commit": "fb3213e9d20485d43bcd357370fc366f9e54b537", "Url": "https://api.github.com/repos/sakiki/ConwayGameOfLife", "Date": "2017-09-30T16:34:59Z"},
{"Line": "=>781", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.ednovo.gooru.client.gin.AppClientFactory.isAnonymous()) { convertMilliSecondsToTime(0L); displayScoreCount(0, 0); collectionEndPresenter.showAvgReaction(0); }else { this.playerAppService.getInsightsCollectionSummary(collectionId, classpageId, sessionId, \"\", new org.ednovo.gooru.client.SimpleAsyncCallback<org.ednovo.gooru.shared.model.player.InsightsCollectionDo>() { @java.lang.Override public void onSuccess(org.ednovo.gooru.shared.model.player.InsightsCollectionDo insightsCollectionDo) { if (insightsCollectionDo != null) { if (((insightsCollectionDo.getCompletionStatus()) != null) && (insightsCollectionDo.getCompletionStatus().equalsIgnoreCase(\"completed\"))) { convertMilliSecondsToTime(insightsCollectionDo.getAvgTimeSpent()); displayScoreCount(insightsCollectionDo.getScore(), insightsCollectionDo.getTotalQuestionCount()); collectionEndPresenter.showAvgReaction(insightsCollectionDo.getAvgReaction()); }else { displayCollectionSummaryData(collectionId, classpageId, sessionId); } }else { convertMilliSecondsToTime(0L); displayScoreCount(0, 0); collectionEndPresenter.showAvgReaction(0); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1841/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.play.collection.CollectionPlayerPresenter.java", "BodyUseAPI": [], "Fixed commit": "e63a4f201e71fe0d6c6b5aa87015670359819799", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2014-10-14T12:18:50Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clazzes.size()) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4994/buggy-version/app.src.main.java.com.speedyblur.kretaremastered.fragments.MainScheduleFragment.java", "BodyUseAPI": [], "Fixed commit": "a72f4ae67d4962d6771bf327f393e8e80c3ecff1", "Url": "https://api.github.com/repos/forcemagic/zsirkreta", "Date": "2017-10-21T19:00:49Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quizWords.isEmpty()) { testStart = false; return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1778/buggy-version/PolyLingua-view.PolyLinguaWeb.src.words.UserWordQuizBacking.java", "BodyUseAPI": [], "Fixed commit": "f0c4a40fec5a23399ac21ee4f9e7bd2e44ee361b", "Url": "https://api.github.com/repos/Ted0ka/PolyLingua-EJB3", "Date": "2017-12-20T20:44:12Z"},
{"Line": "=>1325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isModifyingSeekSetting)) { changeState(((viewPager.getCurrentItem()) == 0 ? stateSaveSkipCompleted : stateSaveSkipCompletedObscured)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5783/buggy-version/LiveWallpaperQuotes.app.src.main.java.com.stanleyidesis.quotograph.ui.activity.LWQSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "cbe12aebdbe3f2f3ca882b58878e0190c14364b3", "Url": "https://api.github.com/repos/stanidesis/quotograph", "Date": "2016-03-19T23:52:40Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"offsets\".equals(item)) { this.appendOffsetInfo(sb); }else if (\"realtime\".equals(item)) { this.appendRealTime(sb); }else if (\"help\".equals(item)) { this.appendHelp(sb); }else if (\"reset\".equals(item)) { this.realTimeStat.resetStat(); this.append(sb, \"reset\", \"ok\"); }else { this.appendTopic(item, sb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1984/buggy-version/metamorphosis-server.src.main.java.com.taobao.metamorphosis.server.stats.StatsManager.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "com.taobao.metamorphosis.server.stats.StatsManager.appendTopic(java.lang.String,java.lang.StringBuilder)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "d04f4b794ec2b27725223c2f807fc7c2e8cfcfa3", "Url": "https://api.github.com/repos/killme2008/Metamorphosis", "Date": "2012-07-11T03:14:23Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (portStartIndex != (-1)) { java.lang.String internalAddress = result.substring(0, portStartIndex); java.lang.String publicAddress = ambariClient.resolveInternalHostName(internalAddress); if (internalAddress.equals(publicAddress)) { if (internalAddress.contains(com.sequenceiq.periscope.service.configuration.AmbariConfigurationService.AZURE_ADDRESS)) { publicAddress = (internalAddress.substring(0, ((internalAddress.indexOf(\".\")) + 1))) + (com.sequenceiq.periscope.service.configuration.AmbariConfigurationService.AZURE_ADDRESS); } } result = publicAddress + (result.substring(portStartIndex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4007/buggy-version/src.main.java.com.sequenceiq.periscope.service.configuration.AmbariConfigurationService.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "205ad076de83d866a32cad4998e53a1edb75bb7b", "Url": "https://api.github.com/repos/sequenceiq/periscope", "Date": "2014-12-10T13:33:20Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osgi.framework.FrameworkUtil.getBundle(org.talend.commons.runtime.debug.TalendDebugHandler.class).getBundleContext()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bundleContext == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7845/buggy-version/main.plugins.org.talend.commons.runtime.src.org.talend.commons.runtime.debug.TalendDebugHandler.java", "BodyUseAPI": [], "Fixed commit": "cb5ad346cca02c196d829916f7b4de9725cb90eb", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2015-03-05T06:00:08Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((input.length()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/210/buggy-version/com.tictactoe.TicTacToe.java", "BodyUseAPI": [], "Fixed commit": "9011d24f6473ea9eee2376e0303081ed3dc5d87f", "Url": "https://api.github.com/repos/smahbod2014/Pubnub_TicTacToe", "Date": "2016-04-25T06:17:18Z"},
{"Line": "=>707", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { view.bringToFront(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7589/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.reader.ReaderPostPagerActivity.java", "BodyUseAPI": [], "Fixed commit": "f7d738ad2e8938b8f10e18db1986d3cffb1f52ab", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2014-08-13T14:17:39Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.conradowatz.jkgvertretung.fragments.KurswahlFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mainActivity.vertretungsAPI.getKlassenList()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4295/buggy-version/app.src.main.java.de.conradowatz.jkgvertretung.fragments.KurswahlFragment.java", "BodyUseAPI": [], "Fixed commit": "730385540fddc71c95691a477bf11966c15251e1", "Url": "https://api.github.com/repos/Conradowatz/JKGVertretung-App", "Date": "2015-07-15T10:27:14Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.EntityPlayer.getItemInUseDuration()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (usingItem == 0) { model.setupRest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8890/buggy-version/src.main.java.mhfc.net.client.render.weapon.bow.RenderBow.java", "BodyUseAPI": [], "Fixed commit": "e84d17414f5b9dd9775e47d4a572a6677c3b10e9", "Url": "https://api.github.com/repos/Guild-Hall/MHFC", "Date": "2016-02-20T23:05:37Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, cn.nukkit.potion.Effect>.getOrDefault(effect.getId(),<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Math.abs(effect.getAmplifier())) < (oldEffect.getAmplifier())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2368/buggy-version/src.main.java.cn.nukkit.entity.Entity.java", "BodyUseAPI": [], "Fixed commit": "00c679c3464c76fd6cd0636e37b251713af73710", "Url": "https://api.github.com/repos/yescallop/Nukkit", "Date": "2016-02-27T07:30:26Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, cn.nukkit.potion.Effect>.getOrDefault(effect.getId(),<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (oldEffect != null) { cn.nukkit.Server.getInstance().getLogger().debug((((((((((((((((getNameTag()) + \" replace effect \") + (oldEffect.getName())) + \"(ID:\") + (oldEffect.getId())) + \")\") + \" * \") + (oldEffect.getAmplifier())) + \" -> \") + (newEffect.getAmplifier())) + \", \") + \"Ticks: \") + (oldEffect.getDuration())) + \" -> \") + (newEffect.getDuration()))); }else { cn.nukkit.Server.getInstance().getLogger().debug(((((((((((getNameTag()) + \" add effect \") + (newEffect.getName())) + \"(ID:\") + (newEffect.getId())) + \")\") + \" * \") + (newEffect.getAmplifier())) + \", Ticks: \") + (newEffect.getDuration()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2368/buggy-version/src.main.java.cn.nukkit.entity.Entity.java", "BodyUseAPI": ["cn.nukkit.potion.Effect.getAmplifier()", "cn.nukkit.potion.Effect.getDuration()", "cn.nukkit.potion.Effect.getId()", "cn.nukkit.Server.getInstance().getLogger().debug((((((((((((((((getNameTag()) + \" replace effect \") + (oldEffect.getName())) + \"(ID:\") + (oldEffect.getId())) + \")\") + \" * \") + (oldEffect.getAmplifier())) + \" -> \") + (newEffect.getAmplifier())) + \", \") + \"Ticks: \") + (oldEffect.getDuration())) + \" -> \") + (newEffect.getDuration())))", "cn.nukkit.potion.Effect.getName()"], "Fixed commit": "00c679c3464c76fd6cd0636e37b251713af73710", "Url": "https://api.github.com/repos/yescallop/Nukkit", "Date": "2016-02-27T07:30:26Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toBinarize.classAttribute().index()) == (toBinarize.attribute(attributePosition).index())) { java.lang.System.out.println(\"omitting class attribute for binarization\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8663/buggy-version/src.main.java.sk.upjs.winston.computation.Preprocessing.java", "BodyUseAPI": [], "Fixed commit": "40f7bb7ae177dc20f7aa40f8e40ab27733f562ce", "Url": "https://api.github.com/repos/sbocko/WinstonBackendServer", "Date": "2015-09-27T15:30:26Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mText) != null) { mStatusFullMarkup = org.tweetalib.android.TwitterUtil.getStatusMarkup(mText, new twitter4j.MediaEntity[0], new twitter4j.URLEntity[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9185/buggy-version/android.libraries.SocialNetLib.src.org.tweetalib.android.model.TwitterDirectMessage.java", "BodyUseAPI": [], "Fixed commit": "eac2c7445a9a16c4ba8769ddad33d4ec934af13d", "Url": "https://api.github.com/repos/chrislacy/TweetLanes", "Date": "2013-12-21T10:29:12Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mStatusFullMarkup) != null) { mTextSpanned = org.tweetalib.android.widget.URLSpanNoUnderline.stripUnderlines(android.text.Html.fromHtml(((mStatusFullMarkup.replace(\"\\n\", \"<br/>\")) + \" \"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9185/buggy-version/android.libraries.SocialNetLib.src.org.tweetalib.android.model.TwitterDirectMessage.java", "BodyUseAPI": [], "Fixed commit": "eac2c7445a9a16c4ba8769ddad33d4ec934af13d", "Url": "https://api.github.com/repos/chrislacy/TweetLanes", "Date": "2013-12-21T10:29:12Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((changes) != null) { changesArray = ((org.json.simple.JSONArray) (change.get(\"changes\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7842/buggy-version/src.main.java.dk.teamonline.util.couchDo.CouchObjectChanges.java", "BodyUseAPI": [], "Fixed commit": "70c4ef498b1dac44d9bb605d734360b6a8dcc1d9", "Url": "https://api.github.com/repos/JoeX2/CouchDo", "Date": "2011-05-24T08:01:49Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (image == null) { surfExtractor.image_set.Image.LOGGER.info(((\"Could not open image: \" + absolutePath) + \" using ImageIO library. Trying again with ImageJ library\")); image = ij.IJ.openImage(absolutePath).getBufferedImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4986/buggy-version/src.surfExtractor.image_set.Image.java", "BodyUseAPI": [], "Fixed commit": "5ce3177c1b50efabb4acc3ed46adc907e25e33e8", "Url": "https://api.github.com/repos/HugoJF/surfExtractor", "Date": "2015-02-01T18:59:57Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ugr.getTbGroup().getGroupLevel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (groupLevel == 1) { smsc = smscService.getSMSCompanyByComID(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1409/buggy-version/src.org.pmp.util.SessionHandler.java", "BodyUseAPI": [], "Fixed commit": "3da0d4dd16a7af80748753d6fd622d718920ccd5", "Url": "https://api.github.com/repos/elan2wang/pmp", "Date": "2012-07-24T05:03:30Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (field == null) { field = \"field\" + i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3930/buggy-version/src.main.java.edu.umn.amicus.summary.ElasticsearchIndexingSummarizer.java", "BodyUseAPI": [], "Fixed commit": "71ad608044141d63e849d9e1e1e89405cad56519", "Url": "https://api.github.com/repos/gpfinley/amicus", "Date": "2017-11-05T03:05:07Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (setupAutoIndexing) { setupTimestampIndexing(indexManager.getNodeAutoIndexer()); setupTimestampIndexing(indexManager.getRelationshipAutoIndexer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4953/buggy-version/src.main.java.org.neo4j.extension.timestamp.TimestampKernelExtension.java", "BodyUseAPI": [], "Fixed commit": "bdcbee0cd3a065206286c94fd05124e8f6ee1bfe", "Url": "https://api.github.com/repos/ttiurani/neo4j-timestamp", "Date": "2013-09-10T08:15:02Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((matcher.group(4).length()) != 0) { timeStamp = java.lang.Long.parseLong(matcher.group(4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7273/buggy-version/src.org.hanuna.gitalk.parser.GitLogParser.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "86f26acc496f695b4312bec6b3080bf67a3967ad", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2012-10-16T21:05:53Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { return new org.copinf.cc.model.Movement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6621/buggy-version/src.main.java.org.copinf.cc.model.Movement.java", "BodyUseAPI": [], "Fixed commit": "462e5a4f0ee0174f4d408744c805856935578691", "Url": "https://api.github.com/repos/CopyrightInfringement/ChineseCheckers", "Date": "2016-05-08T22:42:24Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { return new org.copinf.cc.model.Movement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6621/buggy-version/src.main.java.org.copinf.cc.model.Movement.java", "BodyUseAPI": [], "Fixed commit": "462e5a4f0ee0174f4d408744c805856935578691", "Url": "https://api.github.com/repos/CopyrightInfringement/ChineseCheckers", "Date": "2016-05-08T22:42:24Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stockPrices.contains(mwNew)) { for (GUI.stockmarket.MarketValue mwOld : stockPrices) { if (mwOld.getCompanyId().equals(mwNew.getCompanyId())) { mwOld.setPrice(mwNew.getPrice()); java.lang.System.out.println((((\"Updated: \" + (mwOld.getCompanyId())) + \" with \") + (mwNew.getPrice()))); } } }else { stockPrices.add(mwNew); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6551/buggy-version/src.GUI.stockmarket.Controller.java", "BodyUseAPI": ["javafx.collections.ObservableList<GUI.stockmarket.MarketValue>.add(GUI.stockmarket.MarketValue)", "GUI.stockmarket.MarketValue.getPrice()", "java.io.PrintStream.println((((\"Updated: \" + (mwOld.getCompanyId())) + \" with \") + (mwNew.getPrice())))", "mwOld.getCompanyId().equals(mwNew.getCompanyId())", "GUI.stockmarket.MarketValue.setPrice(mwNew.getPrice())", "GUI.stockmarket.MarketValue.getPrice()", "GUI.stockmarket.MarketValue.getCompanyId()"], "Fixed commit": "7600d215da1cd730f2a1c4c98c9d82552985d90e", "Url": "https://api.github.com/repos/fexman/SpaceBasedSS15GsiLuetNit", "Date": "2015-05-01T17:45:38Z"},
{"Line": "=>1831", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(message.getContentChunkList().isEmpty())) { if ((message.getContentChunkList().get(0).getData().length) != 0) { createRetainedEntry(connection, message); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3669/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.store.rdbms.RDBMSMessageStoreImpl.java", "BodyUseAPI": ["message.getContentChunkList().get(int)", "message.getContentChunkList().get(0).getData()", "org.wso2.andes.store.rdbms.RDBMSMessageStoreImpl.createRetainedEntry(java.sql.Connection,org.wso2.andes.kernel.AndesMessage)", "org.wso2.andes.kernel.AndesMessage.getContentChunkList()"], "Fixed commit": "1fd912a0dd5566cb2174faca3c1058058d993726", "Url": "https://api.github.com/repos/pumudu88/andes", "Date": "2015-10-02T06:31:35Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!((board.get(loc)) instanceof hackstreet.sixeswild.game.EliminationSlot)) && (!((board.get(loc)) instanceof hackstreet.sixeswild.game.InertSlot))) { answer = findValidMoveFromLoc(loc, new java.util.ArrayList<hackstreet.sixeswild.game.Location>(java.util.Arrays.asList(loc))); if (answer != null) break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8627/buggy-version/src.hackstreet.sixeswild.game.AI.java", "BodyUseAPI": ["java.util.Arrays.asList(hackstreet.sixeswild.game.Location)", "hackstreet.sixeswild.game.AI.findValidMoveFromLoc(hackstreet.sixeswild.game.Location,java.util.ArrayList<hackstreet.sixeswild.game.Location>)"], "Fixed commit": "a68542ba1f3b24372fe7d6978b6dd30d7ffc262c", "Url": "https://api.github.com/repos/HackStreetBoys/SixesWild", "Date": "2015-04-29T20:52:54Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(IDF)) { IDF = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6227/buggy-version/InfoRet.src.InfoRet.java", "BodyUseAPI": [], "Fixed commit": "9483aa038b16eeb1d4393ab355fb90ef6314ad40", "Url": "https://api.github.com/repos/bcoble/blackbird", "Date": "2014-11-04T05:19:28Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bombs[i].getCountdown()) < 5) { bombs[i].setY((-200)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1044/buggy-version/src.game.bomberman.MyFrame.java", "BodyUseAPI": ["bombs[i].setY(int)"], "Fixed commit": "0819a139bdacf0989707fd2c51b2a688dc96a44b", "Url": "https://api.github.com/repos/propra12-orga/gruppe20", "Date": "2012-06-26T08:08:13Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["womenHeightFit.getText().toString().trim()", "womenHeightInc.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(womenHeightFitString.isEmpty())) && (!(womenHeightIncString.isEmpty()))) { womenHeightString = com.example.yasin.softdoc.Helper.Utilities.getFitToInc(womenHeightFitString, womenHeightIncString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6707/buggy-version/app.src.main.java.com.example.yasin.softdoc.Activity.AddPregnantWomenActivity.java", "BodyUseAPI": ["com.example.yasin.softdoc.Helper.Utilities.getFitToInc(java.lang.String,java.lang.String)"], "Fixed commit": "56eecb9ef7dd7fce3988e005f33bf5355f655ec0", "Url": "https://api.github.com/repos/YasinEnu/PersonalHealthManager", "Date": "2017-12-05T18:49:37Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.lang.reflect.InvocationTargetException) { java.lang.reflect.InvocationTargetException ite = ((java.lang.reflect.InvocationTargetException) (e)); if ((ite.getTargetException()) instanceof com.roshka.raf.exception.RAFException) { throw ((com.roshka.raf.exception.RAFException) (ite.getTargetException())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6401/buggy-version/src.com.roshka.raf.route.RouteExecutorManager.java", "BodyUseAPI": [], "Fixed commit": "9a88b6fd1be8db032092b74aba66243a952feeef", "Url": "https://api.github.com/repos/pablo/raf", "Date": "2012-03-03T14:08:00Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(relationNames.containsKey(column))) { java.lang.String separator = \"_\"; while (true) { java.lang.String name = ((column.tableName()) + separator) + (column.attributeName()); if (!(relationNames.containsValue(name))) { relationNames.put(column, name); break; } separator += \"_\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7973/buggy-version/src.de.fuberlin.wiwiss.d2rq.mapgen.MappingGenerator.java", "BodyUseAPI": ["de.fuberlin.wiwiss.d2rq.algebra.Attribute.attributeName()", "java.util.Map<de.fuberlin.wiwiss.d2rq.algebra.Attribute, java.lang.String>.put(de.fuberlin.wiwiss.d2rq.algebra.Attribute,java.lang.String)", "java.util.Map<de.fuberlin.wiwiss.d2rq.algebra.Attribute, java.lang.String>.containsValue(java.lang.String)", "de.fuberlin.wiwiss.d2rq.algebra.Attribute.tableName()"], "Fixed commit": "09c53bcb49b1db8e5a408ce0fdc55148ed9a5f8a", "Url": "https://api.github.com/repos/quinode/d2rq", "Date": "2012-05-25T08:37:14Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parent == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3514/buggy-version/connect.runtime.src.main.java.org.apache.kafka.connect.runtime.isolation.PluginUtils.java", "BodyUseAPI": [], "Fixed commit": "bfcb1b7225e6b1af8e4f5e6611cade4fc1195b99", "Url": "https://api.github.com/repos/kkonstantine/kafka", "Date": "2017-10-19T18:35:21Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.uci.qa.browserdriver.BrowserDriver.executeScript(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (frame != null) switchTo().frame(frame);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6339/buggy-version/src.main.java.edu.uci.qa.browserdriver.BrowserDriver.java", "BodyUseAPI": ["switchTo().frame(org.openqa.selenium.WebElement)"], "Fixed commit": "5d35e98889c204dafd4a467ecffb91446d58875e", "Url": "https://api.github.com/repos/OITQA/BrowserDriver", "Date": "2016-10-04T20:40:37Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getNodeA()) != null) && ((event.getNodeB()) != null)) { if (((com.funkydonkies.controllers.FishControl.TARGET_NAME.equals(event.getNodeA().getName())) && (com.funkydonkies.controllers.FishControl.BALL_NAME.equals(event.getNodeB().getName()))) || ((com.funkydonkies.controllers.FishControl.BALL_NAME.equals(event.getNodeA().getName())) && (com.funkydonkies.controllers.FishControl.TARGET_NAME.equals(event.getNodeB().getName())))) { respawn(); diffState.incDiff(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8110/buggy-version/src.main.java.com.funkydonkies.controllers.FishControl.java", "BodyUseAPI": ["com.jme3.bullet.collision.PhysicsCollisionEvent.getNodeA()", "event.getNodeB().getName()", "event.getNodeA().getName()", "java.lang.String.equals(event.getNodeA().getName())", "com.jme3.bullet.collision.PhysicsCollisionEvent.getNodeB()", "java.lang.String.equals(event.getNodeA().getName())", "com.jme3.bullet.collision.PhysicsCollisionEvent.getNodeB()", "event.getNodeB().getName()", "java.lang.String.equals(event.getNodeB().getName())", "java.lang.String.equals(event.getNodeB().getName())", "event.getNodeA().getName()", "com.jme3.bullet.collision.PhysicsCollisionEvent.getNodeA()"], "Fixed commit": "ea44b0c328554750aa8e3631abefa1f1cc5c09f4", "Url": "https://api.github.com/repos/Denpeer/ContextProject", "Date": "2015-06-07T16:18:15Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((CalculatorGUI.lastButton) == 0) || ((Calculator.eq.getNum2()) == 0)) { Calculator.eq.setNum2(java.lang.Double.parseDouble(calculator.ButtonListener.field.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6313/buggy-version/src.calculator.ButtonListener.java", "BodyUseAPI": [], "Fixed commit": "fb1bdf263aeaf2646322e512236fd97e99b13c34", "Url": "https://api.github.com/repos/1024Adam/Calculator", "Date": "2016-02-16T16:15:51Z"},
{"Line": "=>2188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCol) == null) { loadCollection(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/171/buggy-version/src.com.ichi2.anki.DeckPicker.java", "BodyUseAPI": [], "Fixed commit": "0f5945948642ac7d1e5dd1c86c3ee80605991949", "Url": "https://api.github.com/repos/iniju/Anki-Android", "Date": "2012-07-16T20:26:46Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gdssecurity.pmd.rules.dfa.DfaSecurityRule.getMethod(net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(method)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1098/buggy-version/src.main.java.com.gdssecurity.pmd.rules.dfa.DfaSecurityRule.java", "BodyUseAPI": [], "Fixed commit": "a7ff2ba5e252ac20c772a4de88ba104662bb3a38", "Url": "https://api.github.com/repos/albfernandez/GDS-PMD-Security-Rules", "Date": "2015-10-18T20:09:07Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((retweetedStatusDAO.findById(retweetedStatus.getId())) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3602/buggy-version/src.com.cesar.twitter.service.ParseMainService.java", "BodyUseAPI": [], "Fixed commit": "832cff48c4c5371a59e41d7c78629478bd220a5f", "Url": "https://api.github.com/repos/Cesar456/TwitterXmlParser", "Date": "2016-04-15T15:36:58Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["top.goluck.tojson.util.JsonUtil.getT(java.lang.String,top.goluck.interface_json_model.Weatherinfo)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (mWeatherinfo != null) { tojson += \"\\n\\u57ce\\u5e02\\uff1a\" + (mWeatherinfo.getCity()); tojson += \"\\n\\u57ce\\u5e02ID\\uff1a\" + (mWeatherinfo.getCityid()); tojson += \"\\n\\u98ce\\u5411\\uff1a\" + (mWeatherinfo.getWd()); tojson += \"\\n\\u53d1\\u5e03\\u65f6\\u95f4\\uff1a\" + (mWeatherinfo.getTime()); }else { tojson += \"\\n\\u89e3\\u6790\\u540e\\u7684\\u5bf9\\u8c61\\u4e3anull\\uff0c\\u8bf7\\u4f7f\\u7528\\u6b63\\u5e38\\u6709\\u503c\\u7684json\\u6570\\u636e\\u6765\\u89e3\\u6790\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6735/buggy-version/app.src.main.java.top.goluck.interface_json_model.MainActivity.java", "BodyUseAPI": ["top.goluck.interface_json_model.Weatherinfo.getWd()", "top.goluck.interface_json_model.Weatherinfo.getCityid()", "top.goluck.interface_json_model.Weatherinfo.getTime()", "top.goluck.interface_json_model.Weatherinfo.getCity()"], "Fixed commit": "7268667411e303120a49786d8c392587c1c9d29d", "Url": "https://api.github.com/repos/luck-fc/Interface_Json_Model", "Date": "2017-02-17T07:38:42Z"},
{"Line": "=>2082", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(useful.config.getBoolean(\"uperms.enable\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2509/buggy-version/useful.src.com.useful.useful.UsefulListener.java", "BodyUseAPI": [], "Fixed commit": "905c94a585435631f5877c1c0002fe03987ce4be", "Url": "https://api.github.com/repos/storm345/useful", "Date": "2013-03-25T16:31:13Z"},
{"Line": "=>2091", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(useful.config.getBoolean(\"uperms.enable\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2509/buggy-version/useful.src.com.useful.useful.UsefulListener.java", "BodyUseAPI": [], "Fixed commit": "905c94a585435631f5877c1c0002fe03987ce4be", "Url": "https://api.github.com/repos/storm345/useful", "Date": "2013-03-25T16:31:13Z"},
{"Line": "=>943", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gdata.type()) == 1) { hide(((org.nschmidt.ldparteditor.data.GData1) (gdata))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4653/buggy-version/src.org.nschmidt.ldparteditor.data.VM13SymSplitter.java", "BodyUseAPI": [], "Fixed commit": "2054ba787fd8c1365fee2008a818460a5cc8aa81", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-05-10T15:53:17Z"},
{"Line": "=>965", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getWrl_distributedTransactions()) != 0) { percentage = (((double) (dt_nums)) / ((double) (this.getWrl_totalTransactions()))) * 100.0; mean_dti = ((double) (dti_sum)) / ((double) (this.getWrl_distributedTransactions())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8567/buggy-version/DDBMSsim.src.jkamal.ddbmssim.workload.Workload.java", "BodyUseAPI": [], "Fixed commit": "010df9ce75268d507ca5c39e489aa120cd39034c", "Url": "https://api.github.com/repos/joarder/DDBMSsim", "Date": "2014-03-06T10:23:18Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getQueryString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.springframework.util.StringUtils.hasText(queryStr)) { url.append('?').append(queryStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6435/buggy-version/spring-web.src.main.java.org.springframework.http.server.ServletServerHttpRequest.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "fedd843b379cccdec1e126f52e3a8a099c5abd64", "Url": "https://api.github.com/repos/sammyhk/spring-framework", "Date": "2016-01-19T04:53:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (headIterator.hasNext()) { seg = headIterator.next(); }else { seg = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4505/buggy-version/src.net.epsilony.tsmf.model.SegmentChainsIterator.java", "BodyUseAPI": ["java.util.Iterator<T>.next()"], "Fixed commit": "8ebbbc86bcd3a101a79d740c3a5a9d042dd925d8", "Url": "https://api.github.com/repos/epsilony/terse-meshfree", "Date": "2013-03-19T07:47:12Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_listener) != null) { m_listener.onLoaded(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6041/buggy-version/src.swarm.client.view.cell.MetaImageLoader.java", "BodyUseAPI": [], "Fixed commit": "c0e88c866798d919f9e3a823fbfefca9f8d4a403", "Url": "https://api.github.com/repos/dougkoellmer/swarm", "Date": "2014-12-20T03:11:35Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fi.nls.oskari.wfs.util.HttpHelper.LOG_RESPONSES) { fi.nls.oskari.wfs.util.HttpHelper.log.debug(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1202/buggy-version/service-wfs.src.main.java.fi.nls.oskari.wfs.util.HttpHelper.java", "BodyUseAPI": [], "Fixed commit": "f3706a74ce6b52d09b0ac5290c05b1eae910f733", "Url": "https://api.github.com/repos/ZakarFin/oskari-server", "Date": "2017-11-27T08:29:58Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(editQuestionView.isSwitchChecked())) { saveTextAnswers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1012/buggy-version/app.src.main.java.com.example.murk.kwizgeeq.controller.EditQuestionController.java", "BodyUseAPI": [], "Fixed commit": "035fc8becf4d4f8ce494dba6ae06f42258d9ab2e", "Url": "https://api.github.com/repos/AntonKimfors/Odonata-Projekt", "Date": "2017-05-16T06:43:54Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(editQuestionView.isSwitchChecked())) { saveTextAnswers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1012/buggy-version/app.src.main.java.com.example.murk.kwizgeeq.controller.EditQuestionController.java", "BodyUseAPI": [], "Fixed commit": "035fc8becf4d4f8ce494dba6ae06f42258d9ab2e", "Url": "https://api.github.com/repos/AntonKimfors/Odonata-Projekt", "Date": "2017-05-16T06:43:54Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((resultSetType) != 0) && ((resultSetConcurrency) != 0)) { return dbConn.createStatement(resultSetType, resultSetConcurrency); }else { throw new java.lang.IllegalArgumentException(\"Value for both ResultSetType & ResultSetConcurrency should be provided\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2575/buggy-version/flink-batch-connectors.flink-jdbc.src.main.java.org.apache.flink.api.java.io.jdbc.JDBCInputFormat.java", "BodyUseAPI": [], "Fixed commit": "7572642eee2f5eb6e5cb9db09312784ae92a63ba", "Url": "https://api.github.com/repos/sbcd90/flink", "Date": "2016-01-27T12:14:59Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg < 0) { if (arg < (-(java.lang.Math.PI))) sine = -sine; }else { if (arg > (java.lang.Math.PI)) sine = -sine; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4748/buggy-version/src.zorbage.type.data.float64.real.Float64Group.java", "BodyUseAPI": [], "Fixed commit": "a40ccbbb5493b04d3f8101b9487ed8d2933932fd", "Url": "https://api.github.com/repos/bdezonia/zorbage", "Date": "2017-09-20T02:41:51Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.uservoice.uservoicesdk.Session.getInstance().getAccessToken()) != null) { callback.run(); }else { email = ((email) == null) ? com.uservoice.uservoicesdk.Session.getInstance().getEmail() : email; name = ((name) == null) ? com.uservoice.uservoicesdk.Session.getInstance().getName() : name; if ((email) != null) { com.uservoice.uservoicesdk.model.User.discover(email, new com.uservoice.uservoicesdk.rest.Callback<com.uservoice.uservoicesdk.model.User>() { @java.lang.Override public void onModel(com.uservoice.uservoicesdk.model.User model) { promptToSignIn(); } @java.lang.Override public void onError(com.uservoice.uservoicesdk.rest.RestResult error) { createUser(); } }); }else { promptToSignIn(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2500/buggy-version/UserVoiceSDK.src.com.uservoice.uservoicesdk.flow.SigninManager.java", "BodyUseAPI": [], "Fixed commit": "dc81ca95e651632b56d365dae5f91107ca36b19d", "Url": "https://api.github.com/repos/HiTask/uservoice-android-sdk", "Date": "2014-01-08T18:53:58Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mText) != null) { mStatusFullMarkup = org.tweetalib.android.TwitterUtil.getStatusMarkup(mText, new twitter4j.MediaEntity[0], new twitter4j.URLEntity[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7418/buggy-version/android.libraries.SocialNetLib.src.org.tweetalib.android.model.TwitterDirectMessage.java", "BodyUseAPI": [], "Fixed commit": "8a98c56f92e3e5ae20384fa1a759a097d1ba38b9", "Url": "https://api.github.com/repos/BlythMeister/TweetLanes", "Date": "2013-12-21T10:29:12Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mStatusFullMarkup) != null) { mTextSpanned = org.tweetalib.android.widget.URLSpanNoUnderline.stripUnderlines(android.text.Html.fromHtml(((mStatusFullMarkup.replace(\"\\n\", \"<br/>\")) + \" \"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7418/buggy-version/android.libraries.SocialNetLib.src.org.tweetalib.android.model.TwitterDirectMessage.java", "BodyUseAPI": [], "Fixed commit": "8a98c56f92e3e5ae20384fa1a759a097d1ba38b9", "Url": "https://api.github.com/repos/BlythMeister/TweetLanes", "Date": "2013-12-21T10:29:12Z"},
{"Line": "=>1350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(headerCols.contains(gtInfo))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4632/buggy-version/src.fr.cirad.web.controller.gigwa.base.AbstractVariantController.java", "BodyUseAPI": [], "Fixed commit": "bc999a56b5abc6f268ddac72c26d6ca0155f5286", "Url": "https://api.github.com/repos/SouthGreenPlatform/gigwa", "Date": "2016-05-12T08:22:16Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mRequest.isFinalResponseDelivered()) { if ((mRequest.getFinalResponseError()) == null) { throw new com.siu.android.volleyball.exception.BallException(\"Final response error can't be null when intermediate response is the last delivered response\"); } mRequest.deliverError(mRequest.getFinalResponseError()); mRequest.finish(com.siu.android.volleyball.ball.BallExecutorDelivery.MARKER_DONE_WITH_INTERMEDIATE_RESPONSE); }else { if ((mRunnable) != null) { mRunnable.run(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8839/buggy-version/library.src.main.java.com.siu.android.volleyball.ball.BallExecutorDelivery.java", "BodyUseAPI": ["com.siu.android.volleyball.BallRequest.getFinalResponseError()", "com.siu.android.volleyball.BallRequest.getFinalResponseError()", "com.siu.android.volleyball.BallRequest.deliverError(mRequest.getFinalResponseError())", "com.siu.android.volleyball.BallRequest.finish(java.lang.String)"], "Fixed commit": "dd9ba576a37d693f8259379a4e1153f2dc0235a4", "Url": "https://api.github.com/repos/lukaspili/Volley-Ball", "Date": "2013-09-13T00:06:23Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(formElement.isPartOfRepeatGroup())) { alterFormElementName(formElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3498/buggy-version/src.main.java.org.motechproject.odk.service.impl.FormDefinitionImportServiceOna.java", "BodyUseAPI": ["org.motechproject.odk.service.impl.FormDefinitionImportServiceOna.alterFormElementName(org.motechproject.odk.domain.FormElement)"], "Fixed commit": "b54ad90ec828465797fd5542a9911e2f278da922", "Url": "https://api.github.com/repos/ScottKimball/odk", "Date": "2015-10-01T17:22:56Z"},
{"Line": "=>1497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.jet.lang.cfg.ResolvedCall<?>.getArgumentMapping(org.jetbrains.jet.lang.cfg.ValueArgument)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (argumentMapping instanceof org.jetbrains.jet.lang.cfg.ArgumentMatch) { parameterValues = generateValueArgument(argument, ((org.jetbrains.jet.lang.cfg.ArgumentMatch) (argumentMapping)).getValueParameter(), parameterValues); }else if (argumentExpression != null) { generateInstructions(argumentExpression); java.util.List<org.jetbrains.jet.lang.cfg.PseudoValue> values = com.intellij.util.containers.ContainerUtil.createMaybeSingletonList(builder.getBoundValue(argumentExpression)); builder.magic(argumentExpression, null, values, defaultTypeMap(values), MagicKind.VALUE_CONSUMER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5793/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.cfg.JetControlFlowProcessor.java", "BodyUseAPI": [], "Fixed commit": "67ec2b8838de9a178f13771831e8dda1e190e696", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2014-07-29T08:41:42Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (enabled) { updateCurrentLayer(graticuleLayer, enabled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1307/buggy-version/beam-ui.src.main.java.org.esa.beam.framework.ui.product.ProductSceneView.java", "BodyUseAPI": ["org.esa.beam.framework.ui.product.ProductSceneView.updateCurrentLayer(com.bc.ceres.glayer.Layer,boolean)"], "Fixed commit": "92b95bb8f1e6d7ab208d5ee15375fcdda7a2f36c", "Url": "https://api.github.com/repos/seadas/beam", "Date": "2014-08-19T15:52:42Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tempo < 0) throw new java.lang.IllegalArgumentException(\"Tempo can't be below 0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2144/buggy-version/src.cs3500.music.model.GenericMusicModel.java", "BodyUseAPI": [], "Fixed commit": "b055d33c2ffa7d62e50bc8cb4a9f6a962d15e694", "Url": "https://api.github.com/repos/vcantu/MidiPlayer", "Date": "2016-03-24T03:23:33Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.getFMComposerManager(project).getProjectSourcePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(sourceName.isEmpty())) { sourceFolder = project.getFolder(sourceName); for (de.ovgu.featureide.fm.core.Renaming renaming : renamings) { if (!(performComposerRenamings(renaming.oldName, renaming.newName, project))) { moveFolder(renaming.oldName, renaming.newName); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1532/buggy-version/plugins.de.ovgu.featureide.fm.core.src.de.ovgu.featureide.fm.core.RenamingsManager.java", "BodyUseAPI": ["org.eclipse.core.resources.IProject.getFolder(java.lang.String)"], "Fixed commit": "3ef3296e5166d669c4c33a6368cffb5af281830b", "Url": "https://api.github.com/repos/tthuem/FeatureIDE", "Date": "2014-04-04T11:44:52Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uw.cse403.minion.ConnectionChecker.hasConnection(this)) { uw.cse403.minion.HomeActivity.GetNumberOfInvitesTask task = new uw.cse403.minion.HomeActivity.GetNumberOfInvitesTask(this); task.execute(username); }else { android.widget.Toast.makeText(getApplicationContext(), \"No network available\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8271/buggy-version/MinionApp.src.uw.cse403.minion.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "bc59ec4fd21c6583c595fbe0755288cec07bd0a9", "Url": "https://api.github.com/repos/MinionApp/minion", "Date": "2013-06-01T21:54:28Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.technologyadapter.docx.model.DocXParagraph.DocXParagraphImpl.getFlexoDocument()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (docxDoc != null) { docxDoc.reindexElement(this, oldIdentifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/417/buggy-version/docxconnector.src.main.java.org.openflexo.technologyadapter.docx.model.DocXParagraph.java", "BodyUseAPI": ["org.openflexo.technologyadapter.docx.model.DocXDocument.DocXDocumentImpl.reindexElement(org.openflexo.technologyadapter.docx.model.DocXParagraph.DocXParagraphImpl,java.lang.String)"], "Fixed commit": "b53a97ac713a74e0b901c3a1e71a0a1eb7bc4126", "Url": "https://api.github.com/repos/openflexo-team/openflexo-technology-adapters", "Date": "2016-11-07T09:51:48Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAutomaticRetry) { java.lang.String status = org.wso2.emm.system.service.utils.Preference.getString(context, context.getResources().getString(R.string.upgrade_download_status)); if ((Constants.Status.WIFI_OFF.equals(status)) && (!(checkNetworkOnline()))) { org.wso2.emm.system.service.utils.Preference.putString(context, context.getResources().getString(R.string.upgrade_download_status), Constants.Status.FAILED); }else if (Constants.Status.BATTERY_LEVEL_INSUFFICIENT_TO_DOWNLOAD.equals(status)) { org.wso2.emm.system.service.utils.Preference.putString(context, context.getResources().getString(R.string.upgrade_download_status), Constants.Status.FAILED); }else if (Constants.Status.BATTERY_LEVEL_INSUFFICIENT_TO_INSTALL.equals(org.wso2.emm.system.service.utils.Preference.getString(context, context.getResources().getString(R.string.upgrade_install_status)))) { org.wso2.emm.system.service.utils.Preference.putString(context, context.getResources().getString(R.string.upgrade_install_status), Constants.Status.FAILED); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6980/buggy-version/modules.mobile-agents.android.system-service.app.src.main.java.org.wso2.emm.system.service.EMMSystemService.java", "BodyUseAPI": [], "Fixed commit": "59ebdbb4a8908f992721d4c61784f0c49f1ebc2f", "Url": "https://api.github.com/repos/wso2-attic/product-emm", "Date": "2016-08-24T17:34:47Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (roundStart) { game.player1.setX(((game.player1.getX()) + ((game.tuchpad.getKnobPercentX()) * (game.player1.playerSpeed)))); game.player1.setY(((game.player1.getY()) + ((game.tuchpad.getKnobPercentY()) * (game.player1.playerSpeed)))); game.player2.setX(((game.player2.getX()) + ((game.Knobx2) * (game.player2.playerSpeed)))); game.player2.setY(((game.player2.getY()) + ((game.Knoby2) * (game.player2.playerSpeed)))); if (game.player1.overlaps(game.player2)) { game.player1.isBerek = !(game.player1.isBerek); game.player2.isBerek = !(game.player1.isBerek); player1xTorque = ((game.player1.x) - (game.player2.x)) / (com.mygdx.screens.GameScreen.recoilPower); player1yTorque = ((game.player1.y) - (game.player2.y)) / (com.mygdx.screens.GameScreen.recoilPower); } if (((player1xTorque) > 1) || ((player1xTorque) < (-1))) player1xTorque = (player1xTorque) / (com.mygdx.screens.GameScreen.recoilSpeed); else player1xTorque = 0; if (((player1yTorque) > 1) || ((player1yTorque) < (-1))) player1yTorque = (player1yTorque) / (com.mygdx.screens.GameScreen.recoilSpeed); else player1yTorque = 0; game.player1.x += player1xTorque; game.player1.y += player1yTorque; game.player2.x += -(player1xTorque); game.player2.y += -(player1yTorque); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3700/buggy-version/core.src.com.mygdx.screens.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "81d67caf41b5036e8e9e567ff77aca954d80cb06", "Url": "https://api.github.com/repos/misiek231/Berek", "Date": "2017-03-25T08:49:08Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<com.liveramp.hank.partition_server.UpdateManager.PartitionUpdateTask>.remove()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (partitionUpdateTask != null) { dataDirectoryToExecutorService.get(entry.getKey()).execute(partitionUpdateTask); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8448/buggy-version/hank-server.src.main.java.com.liveramp.hank.partition_server.UpdateManager.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.execute(com.liveramp.hank.partition_server.UpdateManager.PartitionUpdateTask)"], "Fixed commit": "a55f3baf6076edefa91011287abd99b165fe02ca", "Url": "https://api.github.com/repos/LiveRamp/hank", "Date": "2013-10-01T18:00:57Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cpjd.utils.IO.doRequest((((((com.cpjd.main.Constants.URL) + \"event/\") + (event.year)) + (event.key.replace(java.lang.String.valueOf(event.year), \"\"))) + \"/rankings\"),Constants.APPID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((ranks == null) || ((ranks.size()) == 0)) return event;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8544/buggy-version/TBA-API.src.com.cpjd.utils.Parser.java", "BodyUseAPI": [], "Fixed commit": "67c9a6922119e09f36b656eace636e75ff273b6d", "Url": "https://api.github.com/repos/wdavies973/TBA-API-V2", "Date": "2017-04-10T22:34:53Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mUserFragment) != null) { mUserFragment.updateFollowingAction(mIsFollowing); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8436/buggy-version/src.com.gh4a.activities.UserActivity.java", "BodyUseAPI": [], "Fixed commit": "33eef0ea95cc8af9bf4fd93bc1f3c370d816aee7", "Url": "https://api.github.com/repos/maniac103/gh4a", "Date": "2014-01-10T14:00:21Z"},
{"Line": "=>10398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t instanceof com.sun.tools.javac.tree.JCTree.JCClassDecl) || (t instanceof com.sun.tools.javac.tree.JCTree.JCMethodDecl)) scan(t);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5722/buggy-version/OpenJML.src.org.jmlspecs.openjml.esc.JmlAssertionAdder.java", "BodyUseAPI": ["org.jmlspecs.openjml.esc.JmlAssertionAdder.scan(com.sun.tools.javac.tree.JCTree)"], "Fixed commit": "fe380f1ab77ac3a14b935d0ea09c02d8639cb39c", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2017-07-09T20:50:48Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end == null) { end = start + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/358/buggy-version/eclipse.linters.tern.eclipse.ide.linter.core.src.tern.eclipse.ide.linter.internal.core.validation.TernReporterCollector.java", "BodyUseAPI": [], "Fixed commit": "9ac658d3caf2927fa39e02f2a5d918b6ab4b122d", "Url": "https://api.github.com/repos/angelozerr/tern.java", "Date": "2016-01-23T15:44:42Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start == null) { start = 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/358/buggy-version/eclipse.linters.tern.eclipse.ide.linter.core.src.tern.eclipse.ide.linter.internal.core.validation.TernReporterCollector.java", "BodyUseAPI": [], "Fixed commit": "9ac658d3caf2927fa39e02f2a5d918b6ab4b122d", "Url": "https://api.github.com/repos/angelozerr/tern.java", "Date": "2016-01-23T15:44:42Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(defaultServicePath.startsWith(\"/\"))) { com.telefonica.iot.cygnus.handlers.OrionRestHandler.LOGGER.error(((\"Bad configuration ('\" + (com.telefonica.iot.cygnus.utils.Constants.PARAM_DEFAULT_SERVICE_PATH)) + \"' must start with '/')\")); com.telefonica.iot.cygnus.handlers.OrionRestHandler.LOGGER.info(\"Exiting Cygnus\"); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8394/buggy-version/src.main.java.com.telefonica.iot.cygnus.handlers.OrionRestHandler.java", "BodyUseAPI": [], "Fixed commit": "cda40ba4556f23d8490119a9fe5c555f99e54dcd", "Url": "https://api.github.com/repos/telefonicaid/fiware-cygnus", "Date": "2016-03-29T15:25:24Z"},
{"Line": "=>704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 0) { sb.append(rig.getTrInfos().get(i).getWallType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9095/buggy-version/app.src.main.java.com.teamshi.collectionsystem3.RigIndexActivity.java", "BodyUseAPI": ["rig.getTrInfos().get(i).getWallType()", "rig.getTrInfos().get(int)", "java.lang.StringBuilder.append(rig.getTrInfos().get(i).getWallType())"], "Fixed commit": "0342121556a16eded9653993767739f6c5bfe93c", "Url": "https://api.github.com/repos/TeamShi/CollectionSystem3", "Date": "2016-09-06T02:20:25Z"},
{"Line": "=>747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == ((rig.getTrInfos().size()) - 1)) { sb.append(com.teamshi.collectionsystem3.Utility.formatDouble(rig.getTrInfos().get(i).getTotalLength())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9095/buggy-version/app.src.main.java.com.teamshi.collectionsystem3.RigIndexActivity.java", "BodyUseAPI": ["java.lang.StringBuilder.append(com.teamshi.collectionsystem3.Utility.formatDouble(rig.getTrInfos().get(i).getTotalLength()))", "com.teamshi.collectionsystem3.Utility.formatDouble(rig.getTrInfos().get(i).getTotalLength())", "rig.getTrInfos().get(i).getTotalLength()", "rig.getTrInfos().get(int)", "com.teamshi.collectionsystem3.datastructure.TRRig.getTrInfos()"], "Fixed commit": "0342121556a16eded9653993767739f6c5bfe93c", "Url": "https://api.github.com/repos/TeamShi/CollectionSystem3", "Date": "2016-09-06T02:20:25Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(found.isEmpty())) { java.lang.System.out.println((\"returning:\" + (this.nombre))); map.put(\"found\", found); map.put(\"notFound\", notFound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6553/buggy-version/src.practica3.Vehiculo.java", "BodyUseAPI": ["java.util.HashMap.put(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "962b264052272a20cdb9734c0cc65a766de9e489", "Url": "https://api.github.com/repos/wikigdl/tarea4", "Date": "2015-03-17T12:47:31Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start) { thread.start(); start = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7948/buggy-version/stuff.src.de.zib.gndms.stuff.threading.Forkable.java", "BodyUseAPI": [], "Fixed commit": "0a4988b342e5ef63a2f727518a6afad9453bcb07", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2011-04-05T09:43:44Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (explain) p.setValue(ValueNull.INSTANCE, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7398/buggy-version/h2.src.main.org.h2.command.CommandRemote.java", "BodyUseAPI": [], "Fixed commit": "d70d6fe3fc3d338c6098f31335478b4e6b681cea", "Url": "https://api.github.com/repos/kuaw26/h2database", "Date": "2016-11-19T15:42:11Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4341/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "2ef124db0df139060513abaea16ae5b6c981dd3f", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((appUser) != null) { initComChanel(); }else { closeComChanel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4436/buggy-version/genophenbrowser-client.src.main.java.com.gmi.nordborglab.browser.client.security.CurrentUser.java", "BodyUseAPI": [], "Fixed commit": "0eddbfffd9f715d3c86fe28e67b39aa2eb82460d", "Url": "https://api.github.com/repos/timeu/GWA-Portal", "Date": "2015-02-10T10:33:40Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delay) == null) delay = 0L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5070/buggy-version/src.main.java.hudson.plugins.throttleconcurrents.ThrottleJobProperty.java", "BodyUseAPI": [], "Fixed commit": "0372d34ea708a0f7d79068d1c7622bc9b2050f66", "Url": "https://api.github.com/repos/HBOCodeLabs/throttle-concurrent-builds-plugin", "Date": "2015-04-23T16:34:30Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((seperatedInput.length) < 2) { commonClasses.SummaryReport.setFeedBackMsg(((commonClasses.Constants.MESSAGE_INVALID_COMMAND) + \" Check that you have put '-' in front of command word.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1213/buggy-version/src.Parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "db4088af9ad0bdf45a487515fc020b42bccfbc00", "Url": "https://api.github.com/repos/cs2103aug2014-t17-1j/main", "Date": "2014-10-17T03:56:04Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.egit.github.core.event.CommitCommentPayload.getComment()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (comment != null) { return res.getString(R.string.event_commit_comment_desc, comment.getCommitId().substring(0, 7), comment.getBody()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2719/buggy-version/src.com.gh4a.adapter.FeedAdapter.java", "BodyUseAPI": ["org.eclipse.egit.github.core.CommitComment.getBody()", "comment.getCommitId().substring(int,int)", "android.content.res.Resources.getString(R.string.event_commit_comment_desc,comment.getCommitId().substring(0, 7),comment.getBody())", "org.eclipse.egit.github.core.CommitComment.getCommitId()"], "Fixed commit": "2f1d7372cc3177c968e4d1ee301081c00dfcabc9", "Url": "https://api.github.com/repos/maniac103/gh4a", "Date": "2014-03-27T12:14:57Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.peeeq.wurstscript.ast.ModuleInstanciation.attrModuleOrigin()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (m == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2770/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.attributes.AttrNearest.java", "BodyUseAPI": [], "Fixed commit": "6ba9fe0f3af6a1a1fd3772e60e9ea82539dc74a7", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2012-09-15T20:43:24Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (inNum < 0) { if ((index % 2) != 0) { imaginary = false; }else { imaginary = true; } }else { imaginary = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3579/buggy-version/src.com.lunarEmpire.RadicalEngine.Radical.java", "BodyUseAPI": [], "Fixed commit": "a268f99153b6a5dfdf9a7eb01631265adf267ae9", "Url": "https://api.github.com/repos/tazzerthespaz/RootEngine", "Date": "2014-12-11T04:05:41Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paramNum == (args.length)) { logic.runCommand(args); }else { java.lang.System.out.println(((getUsage()) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8947/buggy-version/src.main.java.com.jModule.def.Command.java", "BodyUseAPI": ["com.jModule.def.CommandLogic.runCommand(java.lang.String[])"], "Fixed commit": "faa2682a9ebc680619f4a82e166a0e6aec5589de", "Url": "https://api.github.com/repos/pkelaita/JModule", "Date": "2017-09-01T06:08:28Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contractCompKey) != null) clone.setContractCompKey(contractCompKey);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2927/buggy-version/fstgen.src.de.ovgu.cide.fstgen.ast.FSTTerminal.java", "BodyUseAPI": [], "Fixed commit": "299ceac6164ac188aebb40284ea65917d2795fa6", "Url": "https://api.github.com/repos/aweigelt/featurehouse", "Date": "2013-08-06T06:52:18Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<byte[], java.lang.Long>.get(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (l == null) { m.put(familyName, sequenceid); replaced = true; }else if (sequenceid > l) { replaced = m.replace(familyName, l, sequenceid); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2583/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.SequenceIdAccounting.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentMap<byte[], java.lang.Long>.replace(byte[],java.lang.Long,java.lang.Long)"], "Fixed commit": "9d5c2a0098fec759b45a003d6d066125bfc8b5e4", "Url": "https://api.github.com/repos/Eshcar/hbase", "Date": "2015-08-18T13:03:08Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sequenceid == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2583/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.SequenceIdAccounting.java", "BodyUseAPI": [], "Fixed commit": "9d5c2a0098fec759b45a003d6d066125bfc8b5e4", "Url": "https://api.github.com/repos/Eshcar/hbase", "Date": "2015-08-18T13:03:08Z"},
{"Line": "=>626", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pageNumber == 1) { roomBeginning.append(\", main = room { nam = \\\"main\\\", enter = function(s) walk(main); end }, \"); }else { roomBeginning.append(\" = \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9245/buggy-version/NLBL.src.main.java.com.nlbhub.nlb.domain.export.STEADExportManager.java", "BodyUseAPI": [], "Fixed commit": "0c46fd278731fa2ec928bf3cfec22347873a8258", "Url": "https://api.github.com/repos/Antokolos/NLB", "Date": "2014-08-04T13:19:46Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tails) != null) throw new java.lang.IllegalStateException(\"this method may only be called once\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3566/buggy-version/cascading-core.src.main.java.cascading.pipe.SubAssembly.java", "BodyUseAPI": [], "Fixed commit": "8eb130a5992d6da0e74a2566e03cb7e132f722b1", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2017-11-16T05:53:32Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.previous) != null) throw new java.lang.IllegalStateException(\"this method may only be called once\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3566/buggy-version/cascading-core.src.main.java.cascading.pipe.SubAssembly.java", "BodyUseAPI": [], "Fixed commit": "8eb130a5992d6da0e74a2566e03cb7e132f722b1", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2017-11-16T05:53:32Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.gslis.entities.docscoring.DocScorer.scoreTerm(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (termProb == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3891/buggy-version/src.main.java.edu.gslis.entities.docscoring.QueryLikelihoodQueryScorer.java", "BodyUseAPI": [], "Fixed commit": "520667ba8581c88feae6377926f9e4aae93036f9", "Url": "https://api.github.com/repos/gtsherman/entities", "Date": "2016-11-23T23:35:08Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toolbar) != null) { android.view.MenuItem item = toolbar.getMenu().findItem(R.id.estiloLista); if (item != null) { item.setIcon(getResources().getDrawable(android.R.drawable.ic_menu_sort_by_size)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7500/buggy-version/app.src.main.java.com.example.sebas.flickr.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cc1213d27c128b6a76c3b44620ff72e00f865482", "Url": "https://api.github.com/repos/sevax88/flickr", "Date": "2016-11-30T15:41:01Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.beans.PropertyDescriptor.createPropertyEditor(io.fabric8.devops.ProjectConfig)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (editor == null) { editor = java.beans.PropertyEditorManager.findEditor(propertyType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3732/buggy-version/components.fabric8-devops.src.main.java.io.fabric8.devops.ProjectConfigs.java", "BodyUseAPI": [], "Fixed commit": "2c2d759a1501e03827ea9d27ca17522fb428ed93", "Url": "https://api.github.com/repos/jstrachan/fabric8", "Date": "2015-07-03T14:06:35Z"},
{"Line": "=>2089", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (freqDBObject.containsKey(\"study\")) { variantAnnotation.addPopulationFrequency(new org.opencb.biodata.models.variation.PopulationFrequency(freqDBObject.get(\"study\").toString(), freqDBObject.get(\"pop\").toString(), freqDBObject.get(\"superPop\").toString(), freqDBObject.get(\"refAllele\").toString(), freqDBObject.get(\"altAllele\").toString(), java.lang.Float.valueOf(freqDBObject.get(\"refAlleleFreq\").toString()), java.lang.Float.valueOf(freqDBObject.get(\"altAlleleFreq\").toString()))); }else { variantAnnotation.addPopulationFrequency(new org.opencb.biodata.models.variation.PopulationFrequency(\"1000G_PHASE_3\", freqDBObject.get(\"pop\").toString(), freqDBObject.get(\"superPop\").toString(), freqDBObject.get(\"refAllele\").toString(), freqDBObject.get(\"altAllele\").toString(), java.lang.Float.valueOf(freqDBObject.get(\"refAlleleFreq\").toString()), java.lang.Float.valueOf(freqDBObject.get(\"altAlleleFreq\").toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6867/buggy-version/cellbase-mongodb.src.main.java.org.opencb.cellbase.mongodb.db.variation.VariantAnnotationMongoDBAdaptor.java", "BodyUseAPI": ["org.opencb.cellbase.mongodb.db.variation.BasicDBObject.get(java.lang.String)", "org.opencb.cellbase.mongodb.db.variation.VariantAnnotation.addPopulationFrequency(org.opencb.biodata.models.variation.PopulationFrequency)", "freqDBObject.get(\"superPop\").toString()", "freqDBObject.get(\"pop\").toString()", "org.opencb.cellbase.mongodb.db.variation.BasicDBObject.get(java.lang.String)", "org.opencb.cellbase.mongodb.db.variation.BasicDBObject.get(java.lang.String)", "java.lang.Float.valueOf(freqDBObject.get(\"altAlleleFreq\").toString())", "org.opencb.cellbase.mongodb.db.variation.BasicDBObject.get(java.lang.String)", "org.opencb.cellbase.mongodb.db.variation.VariantAnnotation.addPopulationFrequency(org.opencb.biodata.models.variation.PopulationFrequency)", "freqDBObject.get(\"altAlleleFreq\").toString()", "freqDBObject.get(\"pop\").toString()", "freqDBObject.get(\"altAlleleFreq\").toString()", "freqDBObject.get(\"refAlleleFreq\").toString()", "org.opencb.cellbase.mongodb.db.variation.BasicDBObject.get(java.lang.String)", "freqDBObject.get(\"study\").toString()", "java.lang.Float.valueOf(freqDBObject.get(\"altAlleleFreq\").toString())", "freqDBObject.get(\"refAllele\").toString()", "org.opencb.cellbase.mongodb.db.variation.BasicDBObject.get(java.lang.String)", "org.opencb.cellbase.mongodb.db.variation.BasicDBObject.get(java.lang.String)", "org.opencb.cellbase.mongodb.db.variation.BasicDBObject.get(java.lang.String)", "org.opencb.cellbase.mongodb.db.variation.BasicDBObject.get(java.lang.String)", "freqDBObject.get(\"refAlleleFreq\").toString()", "freqDBObject.get(\"superPop\").toString()", "freqDBObject.get(\"altAllele\").toString()", "org.opencb.cellbase.mongodb.db.variation.BasicDBObject.get(java.lang.String)", "freqDBObject.get(\"refAllele\").toString()", "org.opencb.cellbase.mongodb.db.variation.BasicDBObject.get(java.lang.String)", "org.opencb.cellbase.mongodb.db.variation.BasicDBObject.get(java.lang.String)", "freqDBObject.get(\"altAllele\").toString()", "java.lang.Float.valueOf(freqDBObject.get(\"refAlleleFreq\").toString())", "org.opencb.cellbase.mongodb.db.variation.BasicDBObject.get(java.lang.String)", "java.lang.Float.valueOf(freqDBObject.get(\"refAlleleFreq\").toString())"], "Fixed commit": "4d8f7e7fe10ea9c4c268cd1e61bf9a1ec4d89d00", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2015-07-26T06:36:03Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((address) == null) address = this.getNetworkAddress(inet, IPversion);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1395/buggy-version/src.distributed_fs.client.DFSManager.java", "BodyUseAPI": [], "Fixed commit": "d4071a383d63e6ae2501248e79211284b830a111", "Url": "https://api.github.com/repos/sceccotti89/Distributed-File-System", "Date": "2016-05-13T23:07:43Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restlet.ext.apispark.internal.agent.bean.OperationAuthorization.getGroupsAllowed()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (groupsAllowed == null) { org.restlet.ext.apispark.internal.agent.module.AuthorizationModule.LOGGER.warning((((\"No group is allowed for method \" + (operationAuthorization.getMethod())) + \" on this resource: \") + (operationAuthorization.getPathTemplate()))); }else { for (java.lang.String groupAllowed : groupsAllowed) { if (hasRole(userRoles, groupAllowed)) { authorized = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4599/buggy-version/modules.org.restlet.ext.apispark.src.org.restlet.ext.apispark.internal.agent.module.AuthorizationModule.java", "BodyUseAPI": [], "Fixed commit": "977d0a85c7070a12880afb198ba0435d9b92d0ab", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2015-03-19T16:41:36Z"},
{"Line": "=>666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buffer) != null) buffer.scrolledUp = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2545/buggy-version/src.com.irccloud.android.fragment.MessageViewFragment.java", "BodyUseAPI": [], "Fixed commit": "7cf3f04a713b623a759fa9db810a1ac97f1e7e67", "Url": "https://api.github.com/repos/irccloud/android", "Date": "2015-07-13T19:33:07Z"},
{"Line": "=>957", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.photon.phresco.service.rest.api.ComponentService.findOne(com.photon.phresco.service.rest.api.ARTIFACT_GROUP_COLLECTION_NAME,org.springframework.data.document.mongodb.query.Query,java.lang.Class)", "com.photon.phresco.service.api.Converter<com.photon.phresco.service.dao.ArtifactGroupDAO, com.photon.phresco.commons.model.ArtifactGroup>.convertObjectToDAO(com.photon.phresco.commons.model.ArtifactGroup)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((moduleDAO == null) && (org.apache.commons.lang.StringUtils.isNotEmpty(moduleGroupDAO.getGroupId()))) { versionIds.add(newVersion.getId()); newVersion.setArtifactGroupId(moduleGroupDAO.getId()); mongoOperation.save(com.photon.phresco.service.rest.api.ARTIFACT_INFO_COLLECTION_NAME, newVersion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/956/buggy-version/phresco-service-web.src.main.java.com.photon.phresco.service.rest.api.ComponentService.java", "BodyUseAPI": ["com.photon.phresco.service.dao.ArtifactGroupDAO.getId()", "com.photon.phresco.commons.model.ArtifactInfo.setArtifactGroupId(moduleGroupDAO.getId())"], "Fixed commit": "688450444822039fe17d330a44acded78bd69c4b", "Url": "https://api.github.com/repos/phresco/service", "Date": "2012-11-23T07:32:19Z"},
{"Line": "=>962", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isEmpty(versionIds)) { versionIds = moduleDAO.getVersionIds(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/956/buggy-version/phresco-service-web.src.main.java.com.photon.phresco.service.rest.api.ComponentService.java", "BodyUseAPI": [], "Fixed commit": "688450444822039fe17d330a44acded78bd69c4b", "Url": "https://api.github.com/repos/phresco/service", "Date": "2012-11-23T07:32:19Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getEntity().getCustomName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (mobName != null) { if (mobName.endsWith(\"[M]\")) { rankMult = 2; } if (mobName.endsWith(\"[R]\")) { rankMult = 4; } if (mobName.endsWith(\"[E]\")) { rankMult = 6; } if (mobName.endsWith(\"[L]\")) { rankMult = 10; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7774/buggy-version/src.main.java.info.faceland.loot.listeners.spawning.EntityDeathListener.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "b5b67c7870e16e2b8b7b21d6dccb08752fbee35a", "Url": "https://api.github.com/repos/TealCube/loot", "Date": "2015-07-09T18:13:48Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validPlateDimensions.contains(defaultSelection))) { throw new java.lang.IllegalArgumentException(\"default selection not contained in valid set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5138/buggy-version/src.edu.ualberta.med.scannerconfig.widgets.ImageSourceWidget.java", "BodyUseAPI": [], "Fixed commit": "5dc9473fe684bdc099a97ac2211bfe8d2df24587", "Url": "https://api.github.com/repos/cbsrbiobank/scannerConfig", "Date": "2013-12-12T22:23:38Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(validPlateDimensions.contains(palletDimensions))) { palletDimensions = validPlateDimensions.iterator().next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5138/buggy-version/src.edu.ualberta.med.scannerconfig.widgets.ImageSourceWidget.java", "BodyUseAPI": [], "Fixed commit": "5dc9473fe684bdc099a97ac2211bfe8d2df24587", "Url": "https://api.github.com/repos/cbsrbiobank/scannerConfig", "Date": "2013-12-12T22:23:38Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.SVController.getCurrentViewOtherAcceptors()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((processes != null) && ((processes.length) > 1)) { pos = r.nextInt(processes.length); replica = processes[pos]; }else { replica = 0; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3418/buggy-version/src.bftsmart.statemanagement.strategy.StandardStateManager.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "63142f2d37ba014a23f66fb95abb8b323fb850c2", "Url": "https://api.github.com/repos/fmrsabino/library", "Date": "2016-02-29T19:37:08Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bPMNEdges != null) for (org.eclipse.bpmn2.MessageFlow messflow : bPMNEdges) { org.eclipse.bpmn2.impl.InteractionNodeImpl source = ((org.eclipse.bpmn2.impl.InteractionNodeImpl) (messflow.getSourceRef())); org.eclipse.bpmn2.impl.InteractionNodeImpl target = ((org.eclipse.bpmn2.impl.InteractionNodeImpl) (messflow.getTargetRef())); java.lang.String fragments = source.eProxyURI().fragment(); java.lang.String fragmentt = target.eProxyURI().fragment(); java.lang.String aid = a.getId(); if ((aid.equals(fragmentt)) || (aid.equals(fragments))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2335/buggy-version/lp-model-verification.verification-component-understandability-plugin.src.main.java.eu.learnpad.verification.plugin.bpmn.guideline.impl.notationusage.UsageMessageFlows.java", "BodyUseAPI": [], "Fixed commit": "d12862ae19643685878dccb4d3881108838e2f52", "Url": "https://api.github.com/repos/imatesiu/learnpad", "Date": "2016-10-12T20:28:55Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tempStr != null) { org.apache.commons.beanutils.BeanUtils.setProperty(item, objectFileName, tempStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3726/buggy-version/src.main.java.com.bucuoa.west.orm.core.converter.DBObjectConverter.java", "BodyUseAPI": ["org.apache.commons.beanutils.BeanUtils.setProperty(T,java.lang.String,java.lang.Object)"], "Fixed commit": "507294f3b7a814cda2ac5f02a58270aedcb78233", "Url": "https://api.github.com/repos/northandwest/West_Shard_ORM", "Date": "2017-03-19T09:52:41Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((anObject.getAppRoles()) == null) || (anObject.getAppRoles().isEmpty())) || ((anObject.getAppRoles().get(0).getPkAppRole()) == null)) { errors.add(new id.base.app.exception.ErrorHolder(\"appRoles[0].pkAppRole\", messageSource.getMessage(\"error.mandatory\", new java.lang.String[]{ \"Role\" }, java.util.Locale.ENGLISH))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4173/buggy-version/ApplicationService.src.id.base.app.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "e83965312dea5a0bbbffdf7966907f7e8726418d", "Url": "https://api.github.com/repos/utharamadhan/base.app", "Date": "2017-09-17T12:31:21Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.oetting.bumpingbunnies.usecases.start.sql.SettingsV11Dao.readStoredSettings()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (oldValues != null) new de.oetting.bumpingbunnies.usecases.start.sql.SettingsDao(db, context).store(convert(oldValues));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2515/buggy-version/bunnies-android.src.main.java.de.oetting.bumpingbunnies.android.sql.SqlHelper.java", "BodyUseAPI": ["de.oetting.bumpingbunnies.usecases.start.sql.SettingsDao.store(de.oetting.bumpingbunnies.model.configuration.SettingsEntity)", "de.oetting.bumpingbunnies.android.sql.SqlHelper.convert(de.oetting.bumpingbunnies.model.configuration.SettingsEntityV11)"], "Fixed commit": "d211cf026967d2c7d9f08941f31a2cea499d53a0", "Url": "https://api.github.com/repos/hinnerkoetting/bumpingbunnies", "Date": "2015-06-01T20:45:53Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tw.edu.ncu.im.Util.NGD_calculate.NGD_cal(long,long,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ngDistance < 1) { E edge = this.edgeFactory.create(); edgeNGDistance.put(edge, ngDistance); originGraph.addEdge(edge, term1, term2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7615/buggy-version/src.main.tw.edu.ncu.im.Preprocess.Decorator.NGDistanceDecorator.java", "BodyUseAPI": ["java.util.Map<E, java.lang.Double>.put(E,double)"], "Fixed commit": "c067c6c53ad45e466cc4de6b5c0fec91e76ba2d8", "Url": "https://api.github.com/repos/zmes50416/DTG", "Date": "2015-05-13T17:20:52Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mInstallSlot) >= 0) { nodomain.freeyourgadget.gadgetbridge.pebble.PebbleIoThread.updateInstallNotification(\"starting installation\", true, getContext()); mInstallState = nodomain.freeyourgadget.gadgetbridge.pebble.PebbleIoThread.PebbleAppInstallState.APP_START_INSTALL; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1069/buggy-version/app.src.main.java.nodomain.freeyourgadget.gadgetbridge.pebble.PebbleIoThread.java", "BodyUseAPI": [], "Fixed commit": "01e96f9c8dd2502af8437d22dc38a04d1e9201a5", "Url": "https://api.github.com/repos/Freeyourgadget/Gadgetbridge", "Date": "2015-04-28T21:35:12Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((procOutputError) != null) { logMessage = procOutputError.logMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1063/buggy-version/src.main.java.org.geppetto.core.externalprocesses.ExternalProcess.java", "BodyUseAPI": [], "Fixed commit": "3a76a295f65c96c9d00ef1a34dcb983ed96a255f", "Url": "https://api.github.com/repos/openworm/org.geppetto.core", "Date": "2016-09-06T22:47:59Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((procOutputError) != null) { logMessage = procOutputError.logMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1063/buggy-version/src.main.java.org.geppetto.core.externalprocesses.ExternalProcess.java", "BodyUseAPI": [], "Fixed commit": "3a76a295f65c96c9d00ef1a34dcb983ed96a255f", "Url": "https://api.github.com/repos/openworm/org.geppetto.core", "Date": "2016-09-06T22:47:59Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.getField().getUnitAt(stratego.model.Position)", "game.getField().getUnitAt(stratego.model.Position)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sourceUnit.getType().equals(destUnit.getType())) { game.getField().setUnitAt(source, null); game.getField().setUnitAt(destination, null); }else if ((sourceUnit.getType().equals(UnitType.SPY)) && (destUnit.getType().equals(UnitType.MARSHALL))) { game.getField().setUnitAt(source, null); game.getField().setUnitAt(destination, sourceUnit); }else if (((sourceUnit.getType().getRank()) != (-1)) && ((destUnit.getType().getRank()) != (-1))) { if ((sourceUnit.getType().getRank()) < (destUnit.getType().getRank())) { game.getField().setUnitAt(source, null); game.getField().setUnitAt(destination, sourceUnit); }else { game.getField().setUnitAt(source, null); if ((source.getRow()) == (destination.getRow())) { if ((source.getColumn()) <= (destination.getColumn())) { game.getField().setUnitAt(new stratego.model.Position(destination.getRow(), ((destination.getColumn()) - 1)), destUnit); }else { game.getField().setUnitAt(new stratego.model.Position(destination.getRow(), ((destination.getColumn()) + 1)), destUnit); } }else if ((source.getColumn()) == (destination.getColumn())) { if ((source.getRow()) < (destination.getRow())) { game.getField().setUnitAt(new stratego.model.Position(((destination.getRow()) - 1), destination.getColumn()), destUnit); }else { game.getField().setUnitAt(new stratego.model.Position(((destination.getRow()) + 1), destination.getColumn()), destUnit); } } game.getField().setUnitAt(destination, null); } }else if (destUnit.getType().equals(UnitType.BOMB)) { if (sourceUnit.getType().equals(UnitType.MINER)) { game.getField().setUnitAt(source, null); game.getField().setUnitAt(destination, sourceUnit); }else { game.getField().setUnitAt(source, null); } }else if (destUnit.getType().equals(UnitType.FLAG)) { game.getField().setUnitAt(destination, sourceUnit); game.getField().setUnitAt(source, null); game.setWinner(userPos, stratego.user.Validator.currentTimeSeconds()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6626/buggy-version/Stratego.stratego.controller.GameInstanceController.java", "BodyUseAPI": ["game.getField().setUnitAt(stratego.model.Position,stratego.model.Unit)", "sourceUnit.getType().getRank()", "destUnit.getType().equals(UnitType.MARSHALL)", "stratego.model.Unit.getType()", "game.getField().setUnitAt(stratego.model.Position,stratego.model.Unit)", "stratego.model.Unit.getType()", "stratego.model.Unit.getType()", "destUnit.getType().getRank()", "game.getField().setUnitAt(stratego.model.Position,stratego.model.Unit)", "stratego.model.Unit.getType()", "sourceUnit.getType().equals(UnitType.SPY)", "destUnit.getType().equals(UnitType.BOMB)", "stratego.model.Unit.getType()", "stratego.model.Unit.getType()", "game.getField().setUnitAt(stratego.model.Position,stratego.model.Unit)", "game.getField().setUnitAt(stratego.model.Position,stratego.model.Unit)", "destUnit.getType().getRank()", "game.getField().setUnitAt(stratego.model.Position,stratego.model.Unit)", "sourceUnit.getType().getRank()", "stratego.model.Unit.getType()", "game.getField().setUnitAt(stratego.model.Position,stratego.model.Unit)", "destUnit.getType().equals(UnitType.FLAG)", "stratego.model.Unit.getType()", "stratego.model.Unit.getType()", "sourceUnit.getType().equals(UnitType.MINER)", "game.getField().setUnitAt(stratego.model.Position,stratego.model.Unit)"], "Fixed commit": "60c9dd91018e710e636ca669dc16a61e9bf2b317", "Url": "https://api.github.com/repos/jamoyer/Stratego", "Date": "2014-12-11T01:12:39Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((source.getColumn()) <= (destination.getColumn())) { game.getField().setUnitAt(new stratego.model.Position(destination.getRow(), ((destination.getColumn()) - 1)), destUnit); }else { game.getField().setUnitAt(new stratego.model.Position(destination.getRow(), ((destination.getColumn()) + 1)), destUnit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6626/buggy-version/Stratego.stratego.controller.GameInstanceController.java", "BodyUseAPI": ["stratego.model.Position.getColumn()", "stratego.model.Position.getRow()", "stratego.model.Position.getColumn()", "stratego.model.Position.getRow()", "game.getField().setUnitAt(stratego.model.Position,stratego.model.Unit)", "game.getField().setUnitAt(stratego.model.Position,stratego.model.Unit)"], "Fixed commit": "60c9dd91018e710e636ca669dc16a61e9bf2b317", "Url": "https://api.github.com/repos/jamoyer/Stratego", "Date": "2014-12-11T01:12:39Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controlService) == null) controlService = husacct.ServiceProvider.getInstance().getControlService();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2040/buggy-version/src.husacct.control.task.CodeViewController.java", "BodyUseAPI": [], "Fixed commit": "4a8750e35739394bedc86c833ddb22b25c06f96e", "Url": "https://api.github.com/repos/bbsss/HUSACCT", "Date": "2013-06-25T19:35:04Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (industry != null) { if ((industry.size()) == 1) { compSel.setIndustry(industry.get(0)); }else if ((industry.size()) > 1) { compSel.setQueryParam(\"industry\", industry); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7077/buggy-version/xi-server.src.main.java.thu.declan.xi.server.resource.PositionResource.java", "BodyUseAPI": ["thu.declan.xi.server.model.Company.setIndustry(java.lang.String)", "thu.declan.xi.server.model.Company.setQueryParam(java.lang.String,java.util.List<java.lang.String>)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "7b59ca9ef6fe2ca96912073dee98f6b8f262ba1e", "Url": "https://api.github.com/repos/declan94/xintern", "Date": "2017-12-26T00:01:41Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ptype != null) { if ((ptype.size()) == 1) { selector.setPtype(ptype.get(0)); }else if ((ptype.size()) > 1) { selector.setQueryParam(\"ptype\", ptype); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7077/buggy-version/xi-server.src.main.java.thu.declan.xi.server.resource.PositionResource.java", "BodyUseAPI": ["thu.declan.xi.server.model.Position.setQueryParam(java.lang.String,java.util.List<java.lang.String>)", "thu.declan.xi.server.model.Position.setPtype(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "7b59ca9ef6fe2ca96912073dee98f6b8f262ba1e", "Url": "https://api.github.com/repos/declan94/xintern", "Date": "2017-12-26T00:01:41Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (type != null) { if ((type.size()) == 1) { compSel.setType(type.get(0)); }else if ((type.size()) > 1) { compSel.setQueryParam(\"type\", type); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7077/buggy-version/xi-server.src.main.java.thu.declan.xi.server.resource.PositionResource.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "thu.declan.xi.server.model.Company.setType(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "thu.declan.xi.server.model.Company.setQueryParam(java.lang.String,java.util.List<java.lang.String>)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "7b59ca9ef6fe2ca96912073dee98f6b8f262ba1e", "Url": "https://api.github.com/repos/declan94/xintern", "Date": "2017-12-26T00:01:41Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(workbook.isSheetHidden(3))) workbook.setSheetHidden(3, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5145/buggy-version/JexcelUnit.src.jexcelunit.excel.ExcelCreator.java", "BodyUseAPI": ["org.apache.poi.xssf.usermodel.XSSFWorkbook.setSheetHidden(int,boolean)"], "Fixed commit": "a99c02b2f7d58acad77bda885405801a196b5487", "Url": "https://api.github.com/repos/shpongle2634/JexcelUnit", "Date": "2017-04-12T07:41:58Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(workbook.isSheetHidden(1))) workbook.setSheetHidden(1, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5145/buggy-version/JexcelUnit.src.jexcelunit.excel.ExcelCreator.java", "BodyUseAPI": ["org.apache.poi.xssf.usermodel.XSSFWorkbook.setSheetHidden(int,boolean)"], "Fixed commit": "a99c02b2f7d58acad77bda885405801a196b5487", "Url": "https://api.github.com/repos/shpongle2634/JexcelUnit", "Date": "2017-04-12T07:41:58Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(workbook.isSheetHidden(2))) workbook.setSheetHidden(2, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5145/buggy-version/JexcelUnit.src.jexcelunit.excel.ExcelCreator.java", "BodyUseAPI": ["org.apache.poi.xssf.usermodel.XSSFWorkbook.setSheetHidden(int,boolean)"], "Fixed commit": "a99c02b2f7d58acad77bda885405801a196b5487", "Url": "https://api.github.com/repos/shpongle2634/JexcelUnit", "Date": "2017-04-12T07:41:58Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (src == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3668/buggy-version/src.main.java.org.jeesy.classinfo.converter.impl.DefaultFallback.java", "BodyUseAPI": [], "Fixed commit": "43de67e36517546a4a03d70c5fd4446697831578", "Url": "https://api.github.com/repos/jaspeen/classinfo", "Date": "2016-02-16T10:05:37Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.Table.schema()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((schemaName != null) && ((schemaName.indexOf(\"@\")) > 0)) { schemaName = schemaName.substring(0, schemaName.indexOf('@')); javax.persistence.GeneratedValue generatedValue = field.getAnnotation(javax.persistence.GeneratedValue.class); if (((generatedValue != null) && ((generatedValue.generator()) != null)) && (!(generatedValue.generator().isEmpty()))) { if (!((((field.isAnnotationPresent(javax.persistence.TableGenerator.class)) || (field.isAnnotationPresent(javax.persistence.SequenceGenerator.class))) || (clazz.isAnnotationPresent(javax.persistence.TableGenerator.class))) || (clazz.isAnnotationPresent(javax.persistence.SequenceGenerator.class)))) { throw new java.lang.IllegalArgumentException((\"Unknown Id.generator: \" + (generatedValue.generator()))); }else { checkForGenerator(clazz, field, generatedValue, schemaName); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1335/buggy-version/kundera-core.src.main.java.com.impetus.kundera.metadata.validator.EntityValidatorImpl.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "c76eed13462138dcd910fde0603c0454731d626a", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-03-05T14:44:48Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prev != null) { prev.next = entry.next; }else { table[index] = entry.next; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9032/buggy-version/src.main.java.ua.demitt.homework.longmap.impl.LongMap.java", "BodyUseAPI": [], "Fixed commit": "695515286f16659802a8f33c31e08103c13793e8", "Url": "https://api.github.com/repos/demitt/longMap", "Date": "2016-11-22T18:29:36Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDataModel().getCurrentReservedFood()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentFoodReserve > 100) { ise.gameoflife.groups.LoansGroup.inNeed.remove(this.getId()); java.lang.System.out.println(\"We solved our economic problem so we don't want a loan anymore!\"); interactionResult.add(InteractionResult.NothingHappened, 0.0); }else if (ise.gameoflife.groups.LoansGroup.loanRequestsAccepted.containsKey(this.getId())) { java.util.HashMap<java.lang.String, ise.gameoflife.models.Tuple<java.lang.Double, java.lang.Double>> loanRecord = ise.gameoflife.groups.LoansGroup.loanRequestsAccepted.get(this.getId()); java.util.Set<java.lang.String> giverID = loanRecord.keySet(); this.loansTaken.put(giverID.iterator().next(), loanRecord.get(giverID.iterator().next())); ise.gameoflife.groups.LoansGroup.loanRequestsAccepted.remove(this.getId()); java.lang.System.out.println(((((\"I have requested a loan and the result is \" + (interactionResult.getKey())) + \". I have been given \") + (interactionResult.getValue())) + \" units of food!\")); interactionResult.add(InteractionResult.LoanTaken, loanRecord.get(giverID.iterator().next()).getKey()); }else { interactionResult.add(InteractionResult.NothingHappened, 0.0); java.lang.System.out.println(((((\"I have requested a loan and the result is \" + (interactionResult.getKey())) + \". I have been given \") + (interactionResult.getValue())) + \" units of food!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2984/buggy-version/src.ise.gameoflife.groups.LoansGroup.java", "BodyUseAPI": [], "Fixed commit": "9c7f92f66f344e937ffc554b7e8fedc8d2975bdb", "Url": "https://api.github.com/repos/javajawa/ISEGameOfLife", "Date": "2011-06-18T23:17:05Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((project.getLinkedCoreProjects()) != null) { java.util.List<org.cgiar.ccafs.ap.data.model.Project> coreProjects = new java.util.ArrayList<>(); for (org.cgiar.ccafs.ap.data.model.Project p : project.getLinkedCoreProjects()) { coreProjects.add(new org.cgiar.ccafs.ap.data.model.Project(p.getId())); } previousProject.setLinkedCoreProjects(coreProjects); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6002/buggy-version/impactPathways.src.main.java.org.cgiar.ccafs.ap.action.planning.ProjectDescriptionPlanningAction.java", "BodyUseAPI": ["org.cgiar.ccafs.ap.data.model.Project.getLinkedCoreProjects()"], "Fixed commit": "c9af096014acc77e0bd89ccc8fb42c17e085be3f", "Url": "https://api.github.com/repos/CCAFS/ccafs-ap", "Date": "2015-06-22T15:54:40Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((botCarouselModel.getTitle()) != null) { title = botCarouselModel.getTitle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/935/buggy-version/BotsSDK.korebot.src.main.java.kore.botssdk.view.CarouselItemView.java", "BodyUseAPI": ["kore.botssdk.models.BotCarouselModel.getTitle()"], "Fixed commit": "2207e42e7d376370f9cf86eff0e7739a7c8adc4e", "Url": "https://api.github.com/repos/Koredotcom/android-kore-sdk", "Date": "2017-08-01T12:47:59Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((botCarouselModel.getSubtitle()) != null) { subtitle = botCarouselModel.getSubtitle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/935/buggy-version/BotsSDK.korebot.src.main.java.kore.botssdk.view.CarouselItemView.java", "BodyUseAPI": ["kore.botssdk.models.BotCarouselModel.getSubtitle()"], "Fixed commit": "2207e42e7d376370f9cf86eff0e7739a7c8adc4e", "Url": "https://api.github.com/repos/Koredotcom/android-kore-sdk", "Date": "2017-08-01T12:47:59Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((botCarouselModel.getImage_url()) != null) { imageUrl = botCarouselModel.getImage_url(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/935/buggy-version/BotsSDK.korebot.src.main.java.kore.botssdk.view.CarouselItemView.java", "BodyUseAPI": ["kore.botssdk.models.BotCarouselModel.getImage_url()"], "Fixed commit": "2207e42e7d376370f9cf86eff0e7739a7c8adc4e", "Url": "https://api.github.com/repos/Koredotcom/android-kore-sdk", "Date": "2017-08-01T12:47:59Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) == \"\") { return \"Hello!\"; }else { return (\"Hello \" + (name)) + \"!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4959/buggy-version/src.main.java.hello.Greeter.java", "BodyUseAPI": [], "Fixed commit": "140903aeec2dc0fe5730758848a904a59960e8c0", "Url": "https://api.github.com/repos/CS3398-Mocha-Coffee/java-hello-world-with-gradle", "Date": "2017-10-25T23:04:02Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.yj.smtpstub.configuration.Configuration.isInit) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3630/buggy-version/src.main.java.org.yj.smtpstub.configuration.Configuration.java", "BodyUseAPI": [], "Fixed commit": "085af3652985486a6e08c9a483762fae0dd55b39", "Url": "https://api.github.com/repos/TriYop/SMTPStub", "Date": "2017-09-05T21:24:51Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((session.getAttribute(\"employee\")) != null) java.lang.System.out.println(employee);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5252/buggy-version/src.main.java.com.revature.web.LoginRestController.java", "BodyUseAPI": [], "Fixed commit": "a8b3d49e89323dd648b0df204653256947a139aa", "Url": "https://api.github.com/repos/benwebsta/RCS", "Date": "2017-04-12T15:27:27Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((living.getAttackTarget()) != null) { net.minecraft.entity.EntityLivingBase target = living.getAttackTarget(); if (com.contained.game.util.EntityUtil.isSameTeam(living, target)) living.setAttackTarget(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7704/buggy-version/src.main.java.com.contained.game.handler.WorldEvents.java", "BodyUseAPI": ["com.contained.game.util.EntityUtil.isSameTeam(net.minecraft.entity.EntityLiving,net.minecraft.entity.EntityLivingBase)", "net.minecraft.entity.EntityLiving.getAttackTarget()", "net.minecraft.entity.EntityLiving.setAttackTarget(<nulltype>)"], "Fixed commit": "ef12e04c830502b1c7554d524d1ea20ba91f8ba9", "Url": "https://api.github.com/repos/Damian3395/Contained", "Date": "2016-05-21T07:03:04Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.scxml2.SCXMLSemantics.checkTransitions(org.apache.commons.scxml2.SCXMLExecutionContext,org.apache.commons.scxml2.TriggerEvent,java.util.ArrayList<org.apache.commons.scxml2.EnterableState>,java.lang.Boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isTransition) return true; else if (checkForFutureTransition(event, (limit - 1), new java.util.HashSet<org.apache.commons.scxml2.EnterableState>(states), withGuardCondition)) return true; else break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2803/buggy-version/src.main.java.org.apache.commons.scxml2.SCXMLExecutor.java", "BodyUseAPI": [], "Fixed commit": "89cfc7829892c3fd094eb1fdda7b05a6c7f3bb1b", "Url": "https://api.github.com/repos/Flipkart/commons-scxml2", "Date": "2015-04-13T13:16:22Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Life) > 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1077/buggy-version/app.src.main.java.com.literallyjosh.mtg_counter.CounterWidget.java", "BodyUseAPI": [], "Fixed commit": "ce163258400a0c0fc4fefe915472724c50aa1209", "Url": "https://api.github.com/repos/josh-perry/MTG-Counter", "Date": "2016-03-29T01:05:08Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((instance.getId()) == null) { instance.setId(ids.get((i++))); t.getVersionColumn().setJdbcValue(instance, 0L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5190/buggy-version/domain.src.main.java.joist.domain.orm.impl.SequenceIdAssigner.java", "BodyUseAPI": ["t.getVersionColumn().setJdbcValue(T,long)", "T.setId(java.lang.Long)"], "Fixed commit": "3dd13c134de36929d2b951e2e80baa53a11362d4", "Url": "https://api.github.com/repos/stephenh/joist", "Date": "2012-06-21T05:38:55Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (objuri1 && (!objuri2)) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3565/buggy-version/src.main.java.ch.tkuhn.hashuri.rdf.SerStatementComparator.java", "BodyUseAPI": [], "Fixed commit": "691db30ea1e4a2415a1a2a90523c5c6060d26b56", "Url": "https://api.github.com/repos/tkuhn/hashuri-java", "Date": "2014-01-10T13:28:33Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!objuri1) && objuri2) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3565/buggy-version/src.main.java.ch.tkuhn.hashuri.rdf.SerStatementComparator.java", "BodyUseAPI": [], "Fixed commit": "691db30ea1e4a2415a1a2a90523c5c6060d26b56", "Url": "https://api.github.com/repos/tkuhn/hashuri-java", "Date": "2014-01-10T13:28:33Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()", "java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index < (size - 3)) { if ((item.charAt((index + 2))) == '\\'') { if (item.substring((index + 1), (index + 2)).matches(\"[\\\\w]\")) { breakDownItem = item.substring(index, (index + 3)); } }else if (((item.charAt((index + 1))) == '\\\\') && ((item.charAt((index + 3))) == '\\'')) { if (item.substring((index + 2), (index + 3)).matches(\"[\\\\w]\")) { breakDownItem = item.substring(index, (index + 4)); } } return breakDownItem; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8726/buggy-version/4490.src.LexicalAnalyzer.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.substring(int,int)", "java.lang.String.charAt(int)", "java.lang.String.substring(int,int)", "java.lang.String.charAt(int)", "java.lang.String.matches(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.matches(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "b7038515f20252592c41fb4bb21310f5f63bdafb", "Url": "https://api.github.com/repos/nickFr0st/Compiler", "Date": "2013-01-22T03:56:23Z"},
{"Line": "=>766", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((organisationUnitIds) == null) || (organisationUnitIds.isEmpty())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/813/buggy-version/dhis2-android-app.src.main.java.org.dhis2.mobile.ui.fragments.AggregateReportFragment.java", "BodyUseAPI": [], "Fixed commit": "8c91828a49694fb9f9b36b1e78889c0ef6f3e827", "Url": "https://api.github.com/repos/dhis2/dhis2-android-datacapture", "Date": "2016-10-04T07:55:58Z"},
{"Line": "=>770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((organisationUnitId) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/813/buggy-version/dhis2-android-app.src.main.java.org.dhis2.mobile.ui.fragments.AggregateReportFragment.java", "BodyUseAPI": [], "Fixed commit": "8c91828a49694fb9f9b36b1e78889c0ef6f3e827", "Url": "https://api.github.com/repos/dhis2/dhis2-android-datacapture", "Date": "2016-10-04T07:55:58Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == location) { android.util.Log.i(\"Location\", \"can't get location by network, now set a default value\"); location = new android.location.Location(android.location.LocationManager.NETWORK_PROVIDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3163/buggy-version/FirstLog.src.com.example.firstlog.GuideActivity.java", "BodyUseAPI": [], "Fixed commit": "95d15dec6c8dd0e96e59ec4f28051d489f75359e", "Url": "https://api.github.com/repos/bbdlg/FirstLog", "Date": "2013-03-20T12:30:39Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == location) { android.util.Log.i(\"Location\", \"can't get location by gps, now via network\"); location = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3163/buggy-version/FirstLog.src.com.example.firstlog.GuideActivity.java", "BodyUseAPI": [], "Fixed commit": "95d15dec6c8dd0e96e59ec4f28051d489f75359e", "Url": "https://api.github.com/repos/bbdlg/FirstLog", "Date": "2013-03-20T12:30:39Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(savePath.exists())) { savePath.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3163/buggy-version/FirstLog.src.com.example.firstlog.LogPhotoActivity.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "95d15dec6c8dd0e96e59ec4f28051d489f75359e", "Url": "https://api.github.com/repos/bbdlg/FirstLog", "Date": "2013-03-20T12:30:39Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.brotcrunsher.game.core.TimeManager.frameNumber) < (de.brotcrunsher.game.core.TimeManager.amountOfFrameTimeRecords)) { return ((de.brotcrunsher.game.core.TimeManager.frameTimesForLastFrames.calculateSum()) / (de.brotcrunsher.game.core.TimeManager.frameNumber)) / 1000.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6874/buggy-version/src.de.brotcrunsher.game.core.TimeManager.java", "BodyUseAPI": [], "Fixed commit": "b9819203012103d9aef40b42ec6aa66980da52bf", "Url": "https://api.github.com/repos/Brotcrunsher/PowerAPI", "Date": "2016-07-16T00:21:10Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dateDebut.isBefore(new org.joda.time.DateTime(trimestre.dateDebut))) trimestre = listeDeSessions.liste.get(((listeDeSessions.liste.size()) - 2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4842/buggy-version/app.src.main.java.ca.etsmtl.applets.etsmobile.ui.fragment.HoraireFragment.java", "BodyUseAPI": [], "Fixed commit": "8e67121d9182761dfd3c57367a8f9c4cfbdcecfa", "Url": "https://api.github.com/repos/ApplETS/ETSMobile-Android2", "Date": "2016-05-29T18:14:12Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.obidea.semantika.queryanswer.internal.QueryResultLoader.validUri(uriString))) { uriString = com.obidea.semantika.mapping.UriTemplateBuilder.getUri(uriString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1126/buggy-version/src.com.obidea.semantika.queryanswer.internal.QueryResultLoader.java", "BodyUseAPI": ["com.obidea.semantika.mapping.UriTemplateBuilder.getUri(java.lang.String)"], "Fixed commit": "68d16421c8a9bebcad1e80426b517686d1e51478", "Url": "https://api.github.com/repos/obidea/semantika-core", "Date": "2014-06-12T06:47:14Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((site + clusterSize) >= (numOfAtoms)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4283/buggy-version/Java.src.dna_epigenetics.LAMMPSIO.java", "BodyUseAPI": [], "Fixed commit": "8f9b35845455164d53301bd809db2ee6f55ae205", "Url": "https://api.github.com/repos/mchchiang/dna_epigenetics", "Date": "2017-02-08T08:25:16Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (XPDifference <= 0) { lblCalculate.setText(\"Error! XP Difference less than 1.\"); }else if (XPDifference > 0) { lblCalculate.setText((\"XP Difference: \" + (java.text.NumberFormat.getInstance(java.util.Locale.getDefault()).format(XPDifference)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7495/buggy-version/svetroid.main.Window.Window.java", "BodyUseAPI": ["javax.swing.JLabel.setText(java.lang.String)", "java.text.NumberFormat.format(int)"], "Fixed commit": "17c50b257131442127ee46c3d834ea11bfc4ebc4", "Url": "https://api.github.com/repos/Svetroid/Runescape-Skill-Calculator", "Date": "2015-12-01T05:58:28Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.position) < 1) { this.position = 40 - (this.position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/760/buggy-version/src.entities.chance.Move.java", "BodyUseAPI": [], "Fixed commit": "2a63df81a281ebb9eddcbac482799c15e22185d2", "Url": "https://api.github.com/repos/Trivivium/software-project", "Date": "2016-05-08T13:18:32Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resource.getName().endsWith(MarkdownExtension.MARKDOWN_FILE_EXTENSION)) { java.lang.String markdown = read(resource); org.concordion.markdown.MarkdownParser markdownParser = new org.concordion.markdown.MarkdownParser(pegdownExtensions); java.lang.String html = markdownParser.markdownToHtml(markdown, concordionNamespacePrefix); html = wrapBody(html); if ((interimHtmlTarget) != null) { interimHtmlTarget.write(new org.concordion.api.Resource(((resource.getPath()) + \".html\")), html); } return new java.io.ByteArrayInputStream(html.getBytes()); }else { return classPathSource.createInputStream(resource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7792/buggy-version/src.main.java.org.concordion.ext.MarkdownClassPathSource.java", "BodyUseAPI": ["org.concordion.ext.MarkdownClassPathSource.read(org.concordion.api.Resource)", "org.concordion.api.Resource.getPath()", "org.concordion.api.Source.createInputStream(org.concordion.api.Resource)", "org.concordion.api.Target.write(org.concordion.api.Resource,java.lang.String)"], "Fixed commit": "d5eba9b754b6d1d92676a7dbbf3aa9763da30bea", "Url": "https://api.github.com/repos/concordion/concordion-markdown-extension", "Date": "2015-11-14T19:15:17Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.strategoxt.imp.runtime.EditorState.getEditorFor(spoofaxEditor)) != null) { return org.strategoxt.imp.runtime.EditorState.getEditorFor(spoofaxEditor).getSelectionAst(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1904/buggy-version/org.strategoxt.imp.runtime.src.org.strategoxt.imp.runtime.editor.StrategoTermSelection.java", "BodyUseAPI": ["org.strategoxt.imp.runtime.EditorState.getEditorFor(spoofaxEditor).getSelectionAst(boolean)", "org.strategoxt.imp.runtime.EditorState.getEditorFor(org.strategoxt.imp.runtime.editor.SpoofaxEditor)"], "Fixed commit": "0fc7f1fce3b581e6697f1314fc180b1f210c4581", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2014-02-25T01:55:17Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bigbluebutton.conference.meeting.messaging.red5.ConnectionInvokerService.getScope(msg.getMeetingID())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (meetingScope != null) { if (meetingScope.hasChildScope(ScopeType.SHARED_OBJECT, msg.getSharedObjectName())) { org.red5.server.api.so.ISharedObject so = getSharedObject(meetingScope, msg.getSharedObjectName()); if (so != null) { java.lang.System.out.println(((\"*********** Sending [\" + (msg.getMessageName())) + \"] using shared object.\")); so.sendMessage(msg.getMessageName(), msg.getMessage()); }else { java.lang.System.out.println(((\"**** Cannot get SO for [\" + (msg.getSharedObjectName())) + \"]\")); } }else { java.lang.System.out.println(((\"**** No SO scope for [\" + (msg.getSharedObjectName())) + \"]\")); } }else { java.lang.System.out.println(((\"**** No Meeting scope for [\" + (msg.getMeetingID())) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/827/buggy-version/bigbluebutton-apps.src.main.java.org.bigbluebutton.conference.meeting.messaging.red5.ConnectionInvokerService.java", "BodyUseAPI": ["org.bigbluebutton.conference.meeting.messaging.red5.ConnectionInvokerService.getSharedObject(org.red5.server.api.scope.IScope,msg.getSharedObjectName())", "org.red5.server.api.scope.IScope.hasChildScope(ScopeType.SHARED_OBJECT,msg.getSharedObjectName())"], "Fixed commit": "4bc4f6ce840b04802f979da2c7f3d57c412c0177", "Url": "https://api.github.com/repos/bigbluebutton/bigbluebutton", "Date": "2013-06-12T02:46:33Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((login_status) == null) { super.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4128/buggy-version/ThePantry.src.cs169.project.thepantry.AddRecipeActivity.java", "BodyUseAPI": [], "Fixed commit": "662b98fe76e3baf7988d74b3678f592574c50b41", "Url": "https://api.github.com/repos/jfmyers9/ThePantry", "Date": "2013-05-03T06:43:41Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((moves.get(((moves.size()) - 1))) instanceof com.tdt4240.RawHeroes.event.move.AttackMove) { moves.get(((moves.size()) - 1)).getStartCell().getUnit().setHasAttacked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1546/buggy-version/project.core.src.com.tdt4240.RawHeroes.gameLogic.controllers.BoardController.BoardMover.java", "BodyUseAPI": ["java.util.ArrayList<com.tdt4240.RawHeroes.event.move.Move>.get(((moves.size()) - 1))", "moves.get(((moves.size()) - 1)).getStartCell()", "java.util.ArrayList<com.tdt4240.RawHeroes.event.move.Move>.size()", "moves.get(((moves.size()) - 1)).getStartCell().getUnit().setHasAttacked(boolean)", "moves.get(((moves.size()) - 1)).getStartCell().getUnit()"], "Fixed commit": "ce310040f99faf1f629c8780304f8f983dc4a689", "Url": "https://api.github.com/repos/EspenAlbert/BattleBastards", "Date": "2015-04-22T13:34:58Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holder.contentTextView.getText().length()) > 100) { holder.fullContentTextView.setVisibility(View.VISIBLE); }else { holder.fullContentTextView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4291/buggy-version/app.src.main.java.com.badou.mworking.adapter.ChatterListAdapter.java", "BodyUseAPI": ["android.widget.TextView.setVisibility(View.GONE)", "android.widget.TextView.setVisibility(View.VISIBLE)"], "Fixed commit": "b303ff7aee7fb974bba53054a595ea09fbf31c8f", "Url": "https://api.github.com/repos/captainbupt/Douxing", "Date": "2015-06-23T09:11:39Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHead()) == node) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5096/buggy-version/src.main.java.ru.datastructure.ycache.AbstractYcache.java", "BodyUseAPI": [], "Fixed commit": "8858457af654f760f189f10ccc1692b257a9dc1f", "Url": "https://api.github.com/repos/cheryomushkin/ycache", "Date": "2015-02-01T20:00:42Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.playlistPlaying()) { player.play(); log(\"Playing started.\", LogSeverity.TRACE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9021/buggy-version/LanPlaylistServer.src.main.java.net.kokkeli.resources.RootResource.java", "BodyUseAPI": ["net.kokkeli.resources.RootResource.play()"], "Fixed commit": "f0d362bb3e859c0e671d391a7bdadb3a6ef67ac3", "Url": "https://api.github.com/repos/Hekku2/k-lan-playlist-server", "Date": "2013-12-23T17:39:22Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((owner.getDefaultCurrency()) != null) rootElement.setAttribute(XmlFields.DEFAULT_CURRENCY_ATTRIBUTE, owner.getDefaultCurrency().getCurrencyCode());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3240/buggy-version/vogon-data.src.main.java.org.zlogic.vogon.data.interop.XmlExporter.java", "BodyUseAPI": ["org.w3c.dom.Element.setAttribute(XmlFields.DEFAULT_CURRENCY_ATTRIBUTE,owner.getDefaultCurrency().getCurrencyCode())", "owner.getDefaultCurrency().getCurrencyCode()", "org.zlogic.vogon.data.VogonUser.getDefaultCurrency()"], "Fixed commit": "991dbf27083eeb8f31c09297a38dc3d7cc6b0a2b", "Url": "https://api.github.com/repos/zlogic/vogon", "Date": "2016-02-23T09:42:53Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tags.contains(\",\")) tagsList = java.util.Arrays.asList(str.toLowerCase().split(\",\")); else tagsList = java.util.Arrays.asList(str.toLowerCase().split(\" \"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3779/buggy-version/app.src.main.java.com.colewhitley.recipe_share.model.Tags.java", "BodyUseAPI": [], "Fixed commit": "c41fac903f8dd5a1755973bb09a90ffa6e7d7817", "Url": "https://api.github.com/repos/JAV04/mobile_final_project", "Date": "2017-12-04T02:42:32Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.alibaba.rocketmq.storm.MessageConsumerManager.pullConsumer.getInstanceName()) == null) { com.alibaba.rocketmq.storm.MessageConsumerManager.pullConsumer.setInstanceName(RocketMQConfig.DEFAULT_INSTANCE_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2442/buggy-version/src.main.java.com.alibaba.rocketmq.storm.MessageConsumerManager.java", "BodyUseAPI": ["com.alibaba.rocketmq.client.consumer.DefaultMQPullConsumer.setInstanceName(RocketMQConfig.DEFAULT_INSTANCE_NAME)"], "Fixed commit": "1c287ce898e2c33ad001860b330a18010edb5a08", "Url": "https://api.github.com/repos/NDPMediaCorp/RocketMQ-Storm", "Date": "2015-12-31T06:36:17Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(paras.containsKey(\"time\"))) { paras.put(\"time\", java.lang.System.currentTimeMillis()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9167/buggy-version/snapshot-api.src.main.java.cmri.snapshot.api.helper.RestHandler.java", "BodyUseAPI": ["cmri.utils.lang.MapAdapter<java.lang.String, java.lang.Object>.put(java.lang.String,long)"], "Fixed commit": "35fc5fc7c7a338981cfe5f5c1163959aabb40f2a", "Url": "https://api.github.com/repos/chookin/snapshot", "Date": "2015-11-20T07:10:08Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((freeManBean.getGroup()) != null) { tv_detail_thing_name_info.setText(freeManBean.getGroup().getDesc()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7175/buggy-version/app.src.main.java.com.ps.app.ui.activity.DetailActivity.java", "BodyUseAPI": ["freeManBean.getGroup().getDesc()", "FreeManListBean.DataBean.ListBean.getGroup()", "android.widget.TextView.setText(freeManBean.getGroup().getDesc())"], "Fixed commit": "60aa7bb44fcdeb3008216247cc36841562fed607", "Url": "https://api.github.com/repos/PATHoqi05/App", "Date": "2016-05-13T06:52:39Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((freeManBean.getGroup()) != null) { tv_type.setText(freeManBean.getGroup().getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7175/buggy-version/app.src.main.java.com.ps.app.ui.activity.DetailActivity.java", "BodyUseAPI": ["FreeManListBean.DataBean.ListBean.getGroup()", "freeManBean.getGroup().getType()", "android.widget.TextView.setText(freeManBean.getGroup().getType())"], "Fixed commit": "60aa7bb44fcdeb3008216247cc36841562fed607", "Url": "https://api.github.com/repos/PATHoqi05/App", "Date": "2016-05-13T06:52:39Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.httpclient.methods.GetMethod.getResponseHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (modificationTime != null) { java.util.Date d = com.owncloud.android.lib.network.webdav.WebdavUtils.parseResponseDate(((java.lang.String) (modificationTime.getValue()))); mModificationTimestamp = (d != null) ? d.getTime() : 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4782/buggy-version/src.com.owncloud.android.lib.operations.remote.DownloadRemoteFileOperation.java", "BodyUseAPI": ["org.apache.commons.httpclient.Header.getValue()", "com.owncloud.android.lib.network.webdav.WebdavUtils.parseResponseDate(((java.lang.String) (modificationTime.getValue())))"], "Fixed commit": "1370d960453e2cb582c79202fbfbba6bcfb1b929", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2014-01-24T13:29:11Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index != (-1)) { pieces.remove(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6933/buggy-version/src.com.example.Chess.objects.GameState.java", "BodyUseAPI": ["java.util.List<com.example.Chess.objects.Piece>.remove(int)"], "Fixed commit": "ba70b3ec6a0352afd1d8331720bee1b2c962a929", "Url": "https://api.github.com/repos/KristinnOgGudmundur/Chess", "Date": "2014-10-20T16:05:09Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position < (mAdapter.getCount())) { android.view.View view = mAdapter.getView(position, mConvertView, this); if (view != null) { if (view.isClickable()) { playSoundEffect(SoundEffectConstants.CLICK); view.performClick(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8682/buggy-version/PeriodicTable.src.main.java.com.frozendevs.periodictable.view.PeriodicTableView.java", "BodyUseAPI": ["android.widget.Adapter.getView(int,android.view.View,com.frozendevs.periodictable.view.PeriodicTableView)"], "Fixed commit": "c98289e0c12b87c131dcd40730bde8f845db7ad1", "Url": "https://api.github.com/repos/Frozen-Developers/android-periodic-table", "Date": "2014-09-21T17:33:07Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDefaultTimeout) > 0) { android.os.Message msg = ac.robinson.view.CustomMediaController.mHandler.obtainMessage(ac.robinson.view.CustomMediaController.FADE_OUT, this); ac.robinson.view.CustomMediaController.mHandler.sendMessageDelayed(msg, mDefaultTimeout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8602/buggy-version/src.ac.robinson.view.CustomMediaController.java", "BodyUseAPI": [], "Fixed commit": "9c9ffba5759e7ac83278a4673baf0f09ca7c0347", "Url": "https://api.github.com/repos/communitymedia/mediautilities", "Date": "2012-11-24T23:44:20Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference<org.wahtod.wififixer.prefs.Context>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.wahtod.wififixer.prefs.PrefUtil.getSharedPreferences(c).contains(key)) { java.lang.StringBuilder l = new java.lang.StringBuilder(c.getString(R.string.prefs_change)); l.append(key); l.append(c.getString(R.string.colon)); l.append(java.lang.String.valueOf(org.wahtod.wififixer.prefs.PrefUtil.readBoolean(c, key))); org.wahtod.wififixer.prefs.LogUtil.log(c, org.wahtod.wififixer.prefs.LogUtil.getLogTag(), l.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/603/buggy-version/wififixer.src.org.wahtod.wififixer.prefs.PrefUtil.java", "BodyUseAPI": ["org.wahtod.wififixer.prefs.Context.getString(R.string.colon)", "org.wahtod.wififixer.prefs.LogUtil.log(org.wahtod.wififixer.prefs.Context,org.wahtod.wififixer.prefs.LogUtil.getLogTag(),java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.valueOf(boolean)", "org.wahtod.wififixer.prefs.Context.getString(R.string.prefs_change)", "java.lang.StringBuilder.append(c.getString(R.string.colon))", "org.wahtod.wififixer.prefs.PrefUtil.readBoolean(org.wahtod.wififixer.prefs.Context,java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "66e324e31a3bfb7774a25936c50575186c2a310c", "Url": "https://api.github.com/repos/Zanshinmu/Wifi-Fixer", "Date": "2015-06-30T02:54:43Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.worldObj) != null) && ((this.pump) != (net.minecraftforge.common.util.ForgeDirection.UNKNOWN))) { final net.minecraft.tileentity.TileEntity te = this.worldObj.getTileEntity(((this.xCoord) + (this.pump.offsetX)), ((this.yCoord) + (this.pump.offsetY)), ((this.zCoord) + (this.pump.offsetZ))); if (te instanceof com.yogpc.qp.TilePump) pmp = ((com.yogpc.qp.TilePump) (te)).unbreaking; else this.pump = net.minecraftforge.common.util.ForgeDirection.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6709/buggy-version/src.main.java.com.yogpc.qp.TileQuarry.java", "BodyUseAPI": [], "Fixed commit": "56ecda02fc208ca59b05dbdf0b53e14e6ce334e2", "Url": "https://api.github.com/repos/yogpstop/QuarryPlus", "Date": "2015-01-02T14:11:55Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (role == null) { for (springproject.Model.Customer customer : customerCatalogue.findAll()) { if (customer.getLoggedIn()) role = \"customer\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4911/buggy-version/ood_project.src.main.java.springproject.Controller.ApplicationController.java", "BodyUseAPI": [], "Fixed commit": "08a5bc854f7eb6b65eeef877d30bb7418c567e81", "Url": "https://api.github.com/repos/mohammadmiri/OOD", "Date": "2017-08-12T19:00:41Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(seenDocumentIds.contains(documentCollocate.getDocIndex()))) { keywordRawFrequency += documentCollocate.getDocumentRawFrequency(); seenDocumentIds.add(documentCollocate.getDocIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/971/buggy-version/src.main.java.org.voyanttools.trombone.tool.corpus.CorpusCollocates.java", "BodyUseAPI": ["org.voyanttools.trombone.model.DocumentCollocate.getDocumentRawFrequency()", "org.voyanttools.trombone.model.DocumentCollocate.getDocIndex()", "java.util.HashSet<java.lang.Integer>.add(documentCollocate.getDocIndex())"], "Fixed commit": "3412e6664a493c8806dce6b1680defbbe46f2740", "Url": "https://api.github.com/repos/sgsinclair/trombone", "Date": "2014-11-27T18:17:30Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["curr.getDate().getLocalEndDate()", "toCheck.getDate().getLocalEndDate()", "curr.getDate().getLocalStartDate()", "toCheck.getDate().getLocalStartDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((toCheckEndDate.isBefore(currStartDate)) && (toCheckStartDate.isAfter(currEndDate))) { continue; }else if ((toCheckStartDate.equals(currEndDate)) && (toCheckStartTime.isAfter(currEndTime))) { continue; }else if ((toCheckEndDate.equals(currStartDate)) && (toCheckEndTime.isBefore(currStartTime))) { continue; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7204/buggy-version/src.main.java.seedu.ticktask.model.task.UniqueTaskList.java", "BodyUseAPI": ["java.time.LocalDate.equals(java.time.LocalDate)", "java.time.LocalDate.equals(java.time.LocalDate)"], "Fixed commit": "f96f56b0fe8c023ec3bd326a5b0d87aa2896ae19", "Url": "https://api.github.com/repos/CS2103JUN2017-T1/main", "Date": "2017-07-15T06:01:49Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (methodWrappers == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1113/buggy-version/src.main.java.me.ramswaroop.botkit.slackbot.core.Bot.java", "BodyUseAPI": [], "Fixed commit": "df308f48c97832d594b57ff9f2fae2fb7d5fb933", "Url": "https://api.github.com/repos/rampatra/jbot", "Date": "2016-07-16T15:46:10Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (points.containsKey(id)) { com.vividsolutions.jts.geom.Point p = points.get(id).getCentroid(); if (bounds.contains(p.getCoordinate())) { sampleIds.add(id); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8616/buggy-version/DataAnalysis.src.main.java.org.wikibrain.geosr.AgreementMap.java", "BodyUseAPI": ["points.get(id).getCentroid()", "java.util.Map<java.lang.Integer, com.vividsolutions.jts.geom.Geometry>.get(int)", "java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "39d4b83c511855ba300788e53a6a80346fe70091", "Url": "https://api.github.com/repos/shilad/geo-sr", "Date": "2015-02-05T04:22:15Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.size()) == (degrees.size())) { return validate(org, res); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8445/buggy-version/src.SequenceReconstruction.java", "BodyUseAPI": ["SequenceReconstruction.validate(int[],java.util.List<java.lang.Integer>)"], "Fixed commit": "bea3e11745f75bbdacaf9310694c434fd78688b6", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-08-06T03:22:54Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model.getMovies().getMovieList().isEmpty()) { col[0] = \"\"; col[1] = \"\"; tModel.addRow(col); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8882/buggy-version/src.views.MovieViewerPanel.java", "BodyUseAPI": [], "Fixed commit": "0557dbe79de564bb723aac14a519a6767cf98f13", "Url": "https://api.github.com/repos/AcidLeroy/TomsMovieFinder", "Date": "2011-10-06T16:06:44Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (currentUser != null) onFirebaseAuthCompleted(currentUser);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/881/buggy-version/app.src.main.java.com.bns.speech.Controller.LoginActivity.java", "BodyUseAPI": ["com.bns.speech.Controller.LoginActivity.onFirebaseAuthCompleted(com.google.firebase.auth.FirebaseUser)"], "Fixed commit": "8172bdafddb80527224a6270f7dd5bd4e593c91d", "Url": "https://api.github.com/repos/MarcoNordio1/Speech", "Date": "2017-05-11T13:21:14Z"},
{"Line": "=>2202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_localctx.getText()) != \"\") arrayDemention.add(java.lang.Integer.valueOf(_localctx.getText()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/582/buggy-version/Grammar.target.generated-sources.antlr4.CParser.java", "BodyUseAPI": ["com.rocketscience.CParser.AssignmentExpressionContext.getText()", "java.util.ArrayList<java.lang.Integer>.add(java.lang.Integer)", "java.lang.Integer.valueOf(_localctx.getText())"], "Fixed commit": "6f0ffe3cdb49213c9f726525433c47496325d289", "Url": "https://api.github.com/repos/c00kie-monster/projekt-zespolowy", "Date": "2014-05-21T19:36:55Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osgi.framework.Bundle.loadClass(type.getTypedClassName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(typedClass.equals(org.smeup.sys.os.type.QType.class))) { this.types.add(new InternalType<T>(((org.smeup.sys.os.type.QType<T>) (type)), typedClass)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8805/buggy-version/org.smeup.sys.os.type.base.src.org.smeup.sys.os.type.base.BaseTypeRegistryImpl.java", "BodyUseAPI": ["java.util.List<org.smeup.sys.os.type.QType<?>>.add(org.smeup.sys.os.type.base.BaseTypeRegistryImpl<T>.InternalType<T>)"], "Fixed commit": "3fccc9b299486ef7e25495cec8e03ba170ddda4b", "Url": "https://api.github.com/repos/smeup/asup", "Date": "2015-07-31T14:21:33Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connectCallback) != null) { connectCallback.error((\"Service discovery failed. status = \" + status)); connectCallback = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6951/buggy-version/src.android.Peripheral.java", "BodyUseAPI": [], "Fixed commit": "ad976cbae6f39f98b852a1f7189a178c307f5d80", "Url": "https://api.github.com/repos/adamtegen/cordova-plugin-ble-central", "Date": "2015-12-21T20:14:23Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (predicate.shouldIndex(ordinal)) { java.lang.Object[] values = fieldPath.findValues(ordinal); if ((values != null) && ((values.length) > 0)) { for (java.lang.Object value : values) { if (!(sparseBitSet.get(((int) (value))))) sparseBitSet.set(((int) (value))); else handleDuplicate(((int) (value))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3398/buggy-version/hollow.src.main.java.com.netflix.hollow.core.index.HollowSparseIntegerSet.java", "BodyUseAPI": ["com.netflix.hollow.core.index.FieldPath.findValues(int)"], "Fixed commit": "7bdd9c31226ecbe1fdcc5708fa22d16dd2c7a7e9", "Url": "https://api.github.com/repos/rpalcolea/hollow", "Date": "2017-08-24T19:14:08Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (channelOpen) { super.send(item); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4343/buggy-version/rpc.src.main.java.io.datakernel.rpc.protocol.stream.RpcStreamProtocol.java", "BodyUseAPI": [], "Fixed commit": "e25d0440bee155436980cc625af685d4d7d77946", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2016-04-08T16:36:11Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mainMenu.musicOn) mainMenu.menuMusic.closeClip();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1271/buggy-version/Mastermind.src.we.software.mastermind.ClientListener.java", "BodyUseAPI": ["mainMenu.menuMusic.closeClip()"], "Fixed commit": "7b129ede3f71ed6ddf6784e1dfa71b40654080a4", "Url": "https://api.github.com/repos/V4570/mastermind-we", "Date": "2017-06-12T09:59:41Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((isOneLetterOff(startWord, endWord)) == true) && (wordLadder == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4848/buggy-version/src.assignment4.WordLadderSolver.java", "BodyUseAPI": [], "Fixed commit": "71737d55cf46c25621af825dfe27c302c9a6af14", "Url": "https://api.github.com/repos/kuthalam/Lab4_MukundanK_CarolineY", "Date": "2016-03-05T14:16:06Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((isOneLetterOff(startWord, endWord)) == false) && (wordLadder == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4848/buggy-version/src.assignment4.WordLadderSolver.java", "BodyUseAPI": [], "Fixed commit": "71737d55cf46c25621af825dfe27c302c9a6af14", "Url": "https://api.github.com/repos/kuthalam/Lab4_MukundanK_CarolineY", "Date": "2016-03-05T14:16:06Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isOneLetterOff(startWord, endWord)) == false) { return solutionList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4848/buggy-version/src.assignment4.WordLadderSolver.java", "BodyUseAPI": [], "Fixed commit": "71737d55cf46c25621af825dfe27c302c9a6af14", "Url": "https://api.github.com/repos/kuthalam/Lab4_MukundanK_CarolineY", "Date": "2016-03-05T14:16:06Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startIsValid == false) || (endIsValid == false)) { throw new assignment4.NoSuchLadderException(\"Entered words are invalid\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4848/buggy-version/src.assignment4.WordLadderSolver.java", "BodyUseAPI": [], "Fixed commit": "71737d55cf46c25621af825dfe27c302c9a6af14", "Url": "https://api.github.com/repos/kuthalam/Lab4_MukundanK_CarolineY", "Date": "2016-03-05T14:16:06Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isOneLetterOff(startWord, endWord)) == true) { return solutionList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4848/buggy-version/src.assignment4.WordLadderSolver.java", "BodyUseAPI": [], "Fixed commit": "71737d55cf46c25621af825dfe27c302c9a6af14", "Url": "https://api.github.com/repos/kuthalam/Lab4_MukundanK_CarolineY", "Date": "2016-03-05T14:16:06Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.squareup.okhttp.Response.body()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((body.contentType()) != null) { entity.setContentType(body.contentType().type()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9130/buggy-version/wasp.src.main.java.com.orhanobut.wasp.OkHttpStack.java", "BodyUseAPI": ["org.apache.http.entity.BasicHttpEntity.setContentType(body.contentType().type())", "com.squareup.okhttp.ResponseBody.contentType()", "body.contentType().type()"], "Fixed commit": "7e30352584489d847b42b4ac7e8bb69c7994a753", "Url": "https://api.github.com/repos/orhanobut/wasp", "Date": "2015-03-19T12:17:29Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pat.getNames().size()) == 0) pat.getNames().add(new org.openmrs.PersonName(\"*\", null, \"*\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7413/buggy-version/omod.src.main.java.org.openmrs.module.xdsbrepository.ihe.iti.actors.impl.XdsDocumentRepositoryServiceImpl.java", "BodyUseAPI": ["pat.getNames().add(org.openmrs.PersonName)", "org.openmrs.Patient.getNames()"], "Fixed commit": "6a10600ee806670f1612ea87360ab40d96830297", "Url": "https://api.github.com/repos/jembi/openmrs-module-shr-xds-b-repository", "Date": "2014-11-26T14:06:03Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (data.getValue().containsKey(\"Enchantments\")) { item.addUnsafeEnchantments(((java.util.Map<org.bukkit.enchantments.Enchantment, java.lang.Integer>) (data.getValue().get(\"Enchantments\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5768/buggy-version/src.main.java.xyz.jaoafa.mymaid.Command.InvLoad.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map.Entry<java.lang.Integer, java.util.Map<java.lang.String, java.lang.Object>>.getValue()", "org.bukkit.inventory.ItemStack.addUnsafeEnchantments(java.lang.Object)"], "Fixed commit": "e157f715ba884e70f827cce053cbdd7e7f7c5cae", "Url": "https://api.github.com/repos/book000/MyMaid", "Date": "2017-11-25T03:01:04Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (data.getValue().containsKey(\"Enchantments\")) { item.addUnsafeEnchantments(((java.util.Map<org.bukkit.enchantments.Enchantment, java.lang.Integer>) (data.getValue().get(\"Enchantments\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5768/buggy-version/src.main.java.xyz.jaoafa.mymaid.Command.InvLoad.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map.Entry<java.lang.Integer, java.util.Map<java.lang.String, java.lang.Object>>.getValue()", "org.bukkit.inventory.ItemStack.addUnsafeEnchantments(java.lang.Object)"], "Fixed commit": "e157f715ba884e70f827cce053cbdd7e7f7c5cae", "Url": "https://api.github.com/repos/book000/MyMaid", "Date": "2017-11-25T03:01:04Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.datadude.DataDude.getCurrentEngine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((c.getNodes().indexOf(this)) > (-1)) c.setTitleAt(c.getNodes().indexOf(this), f.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3632/buggy-version/src.org.datadude.nodes.BasicNode.java", "BodyUseAPI": ["org.datadude.CoreEngine.getNodes()", "org.datadude.CoreEngine.setTitleAt(c.getNodes().indexOf(this),java.lang.String)", "c.getNodes().indexOf(org.datadude.nodes.BasicNode)"], "Fixed commit": "260f8244740167874a3b07abc62ebcb24c6ba051", "Url": "https://api.github.com/repos/realAhmedRoach/DataDude", "Date": "2016-01-17T19:52:58Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<? extends org.bukkit.entity.Player>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((this.loca.distance(p.getLocation())) < 2.0) { if ((p.getFoodLevel()) < 20) { p.setFoodLevel(((p.getFoodLevel()) + 1)); } if ((p.getHealth()) < 20) { p.setHealth(((p.getHealth()) + 0.3)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3136/buggy-version/src.craftoplugin.modules.extra.ExtraModule.java", "BodyUseAPI": ["org.bukkit.entity.Player.getHealth()", "org.bukkit.entity.Player.setHealth(((p.getHealth()) + 0.3))", "org.bukkit.entity.Player.getFoodLevel()", "org.bukkit.entity.Player.getFoodLevel()", "org.bukkit.entity.Player.getHealth()", "org.bukkit.entity.Player.setFoodLevel(((p.getFoodLevel()) + 1))"], "Fixed commit": "652ac0b0bb32bf36a31f6397dc5219a4e1de0308", "Url": "https://api.github.com/repos/Craftolution/CraftoPlugin", "Date": "2015-01-23T18:38:28Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasParent()) && ((getParent()) instanceof edu.uiowa.cs.baberman.proplogjedit.nodes.OneOrMoreSpacePropVars)) { getParent().addToRight(); }else { edu.uiowa.cs.baberman.proplogjedit.nodes.SpacePropVar newSpacePropVar = new edu.uiowa.cs.baberman.proplogjedit.nodes.SpacePropVar(); addAtNonPlaceholderPosition(getNonPlaceholders().size(), newSpacePropVar); getProofModel().setSelectedNode(newSpacePropVar.getPropVar()); getProofModel().getProofView().update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/613/buggy-version/src.edu.uiowa.cs.baberman.proplogjedit.nodes.OneOrMoreSpacePropVars.java", "BodyUseAPI": [], "Fixed commit": "0a617501b5dd0e963d318c386699415c97964649", "Url": "https://api.github.com/repos/bnjmnbrmn/prop-log-plugin", "Date": "2014-08-21T16:24:24Z"},
{"Line": "=>956", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hashtags.length()) > 0) { hashtags = hashtags.substring(0, ((hashtags.length()) - 1)); }else { hashtags = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5373/buggy-version/app.src.main.java.com.vis.activities.MainActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "f2d784ec3119b4828bfe79e72441b1108eba275c", "Url": "https://api.github.com/repos/HuzefaGadi/VideoInShortNative", "Date": "2016-02-02T09:55:15Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((org.researchstack.backbone.result.StepResult) (result)).getResult()) != null) { return fromStepResult(((org.researchstack.backbone.result.StepResult) (result))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8758/buggy-version/researchstack-sdk.src.main.java.org.sagebionetworks.bridge.researchstack.factory.ArchiveFileFactory.java", "BodyUseAPI": ["org.sagebionetworks.bridge.researchstack.factory.ArchiveFileFactory.fromStepResult(org.researchstack.backbone.result.Result)"], "Fixed commit": "da237c3fb6d7e6a6f718b28165cb7f1d05eab4c5", "Url": "https://api.github.com/repos/Sage-Bionetworks/BridgeAndroidSDK", "Date": "2017-12-01T19:54:25Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stepResult.getResult()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8758/buggy-version/researchstack-sdk.src.main.java.org.sagebionetworks.bridge.researchstack.factory.ArchiveFileFactory.java", "BodyUseAPI": [], "Fixed commit": "da237c3fb6d7e6a6f718b28165cb7f1d05eab4c5", "Url": "https://api.github.com/repos/Sage-Bionetworks/BridgeAndroidSDK", "Date": "2017-12-01T19:54:25Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((algorithm == null) || (digestKey == null)) throw new org.araqne.storage.crypto.LogCryptoException(\"null hmac algorithm or key\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8883/buggy-version/araqne-storage-crypto.src.main.java.org.araqne.storage.crypto.impl.JavaMacBuilder.java", "BodyUseAPI": [], "Fixed commit": "c9d45ca52009eeb0bc92d39d9154451de59ed6bc", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2016-02-18T06:27:53Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((thePlayer.getSpeed()) > 1) { (elixirStepCounter)++; if (((elixirStepCounter) % 200) == 0) { thePlayer.setSpeed(((thePlayer.getSpeed()) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6143/buggy-version/src.edu.ucsb.cs56.projects.games.roguelike.LogicEngine.java", "BodyUseAPI": ["edu.ucsb.cs56.projects.games.roguelike.Player.setSpeed(((thePlayer.getSpeed()) - 1))", "edu.ucsb.cs56.projects.games.roguelike.Player.getSpeed()"], "Fixed commit": "ca15e78d429c0948886ce3ea2377eb4c4e0c738f", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-roguelike", "Date": "2016-11-08T00:52:02Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getBillingAddress()) != null) { billingAddress = request.getBillingAddress(); }else { billingAddress = new business.models.ContactData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/29/buggy-version/src.main.java.business.services.RequestFormService.java", "BodyUseAPI": ["business.representation.RequestRepresentation.getBillingAddress()"], "Fixed commit": "68f1212cea4e77ed715b52f1e2a7aead794f7505", "Url": "https://api.github.com/repos/thehyve/dntp-portal", "Date": "2015-07-14T22:00:58Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((queryString) == null) { decodeQueryString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/621/buggy-version/web.src.sirius.web.http.WebContext.java", "BodyUseAPI": [], "Fixed commit": "50fbf36ae13d4e744dda46d1b46372aa01ee4fd3", "Url": "https://api.github.com/repos/scireum/sirius", "Date": "2014-07-10T13:58:15Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((queryString) == null) { decodeQueryString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/621/buggy-version/web.src.sirius.web.http.WebContext.java", "BodyUseAPI": [], "Fixed commit": "50fbf36ae13d4e744dda46d1b46372aa01ee4fd3", "Url": "https://api.github.com/repos/scireum/sirius", "Date": "2014-07-10T13:58:15Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numOption <= 0) { throw new java.lang.Exception(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7885/buggy-version/src.ATM.java", "BodyUseAPI": [], "Fixed commit": "e88beed34b76e668df976fefdf0d70606989e1be", "Url": "https://api.github.com/repos/Czbenton/Banking", "Date": "2016-09-02T20:20:43Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (aTrack_names_string.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1618/buggy-version/app.src.main.java.de.mytfg.jufo.ibis.storage.IbisTrackArchive.java", "BodyUseAPI": [], "Fixed commit": "3f4024c1de6c95d81ca5bc06a1e006fe11fc8cdd", "Url": "https://api.github.com/repos/OpenCycleCompass/ocyco-app-android", "Date": "2016-02-27T22:13:21Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (trackKeyValue.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1618/buggy-version/app.src.main.java.de.mytfg.jufo.ibis.storage.IbisTrackArchive.java", "BodyUseAPI": [], "Fixed commit": "3f4024c1de6c95d81ca5bc06a1e006fe11fc8cdd", "Url": "https://api.github.com/repos/OpenCycleCompass/ocyco-app-android", "Date": "2016-02-27T22:13:21Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (operation.hasDefined(org.jboss.as.cmp.subsystem.APPCLIENT)) { model.get(org.jboss.as.cmp.subsystem.APPCLIENT).set(operation.get(org.jboss.as.cmp.subsystem.APPCLIENT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6855/buggy-version/cmp.src.main.java.org.jboss.as.cmp.subsystem.CmpSubsystemAdd.java", "BodyUseAPI": ["model.get(org.jboss.as.cmp.subsystem.APPCLIENT).set(operation.get(org.jboss.as.cmp.subsystem.APPCLIENT))", "org.jboss.dmr.ModelNode.get(org.jboss.as.cmp.subsystem.APPCLIENT)"], "Fixed commit": "3e28ab52f436605d5ffca065ea1ffa6894d8b81d", "Url": "https://api.github.com/repos/heiko-braun/wildfly", "Date": "2011-10-27T23:29:33Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(extensionScheme.endsWith(\"#\"))) { extensionScheme += \"#\"; extensionSchemeText.setText(extensionScheme); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5161/buggy-version/clouddesigner.org.occiware.clouddesigner.occi.design.src.org.occiware.clouddesigner.occi.design.wizard.NewExtensionWizard.java", "BodyUseAPI": [], "Fixed commit": "43f9024f39f21c8e07090899bd34893006b3e07c", "Url": "https://api.github.com/repos/occiware/ecore", "Date": "2015-09-09T15:49:57Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ucchyocean.ct.ColorTeaming.getCTConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (config.isEnableCustomKilllog()) { if (killer == null) { java.lang.String message = config.getCustomKilllogFormat(); message = message.replace(\"%killer\", \"\"); message = message.replace(\"%deader\", deader.getDisplayName()); message = message.replace(\"%weapon\", \"\u81ea\u6ec5\"); message = com.github.ucchyocean.ct.Utility.replaceColorCode(message); event.setDeathMessage(message); }else if (tnsKiller != null) { java.lang.String message = config.getCustomKilllogFormat(); message = message.replace(\"%killer\", killer.getDisplayName()); message = message.replace(\"%deader\", deader.getDisplayName()); message = message.replace(\"%weapon\", getWeaponName(killer)); message = com.github.ucchyocean.ct.Utility.replaceColorCode(message); event.setDeathMessage(message); }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4726/buggy-version/src.main.java.com.github.ucchyocean.ct.listener.PlayerDeathListener.java", "BodyUseAPI": ["com.github.ucchyocean.ct.config.ColorTeamingConfig.getCustomKilllogFormat()", "com.github.ucchyocean.ct.config.ColorTeamingConfig.getCustomKilllogFormat()"], "Fixed commit": "ebdeb084c692ba9bf566bdeb060dd780d0794ef6", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2014-11-29T07:50:30Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.md2k.datakitapi.time.DateTime.getDateTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((curTime + 60000) > blockEndTime) { handler.postDelayed(runnableSchedule, 60000); }else { sendToLogInfo(LogInfo.STATUS_SCHEDULER_SCHEDULED, (curTime + 60000)); handler.postDelayed(runnableDeliver, 60000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8337/buggy-version/ema_scheduler.src.main.java.org.md2k.ema_scheduler.scheduler.RandomEMAScheduler.java", "BodyUseAPI": ["org.md2k.ema_scheduler.scheduler.RandomEMAScheduler.sendToLogInfo(LogInfo.STATUS_SCHEDULER_SCHEDULED,long)"], "Fixed commit": "9cbf325681a362817bd604b666185fc1d71a1257", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-EMAScheduler", "Date": "2016-04-19T17:50:56Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (httpResponse != null) { httpResponse.setStatus(HttpServletResponse.SC_UNAUTHORIZED); httpResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED); httpResponse.flushBuffer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1746/buggy-version/platform.security.handler.security-handler-pki.src.main.java.org.codice.ddf.security.handler.pki.CrlChecker.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.setStatus(HttpServletResponse.SC_UNAUTHORIZED)", "javax.servlet.http.HttpServletResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED)", "javax.servlet.http.HttpServletResponse.flushBuffer()"], "Fixed commit": "b0963a15f504cc4272074be55455bada8a6b099f", "Url": "https://api.github.com/repos/stustison/ddf", "Date": "2015-11-02T18:01:33Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (javaHome == null) { edu.illinois.nondex.common.Logger.getGlobal().log(java.util.logging.Level.SEVERE, \"JAVA_HOME is not set!\"); throw new java.lang.IllegalStateException(\"JAVA_HOME is not set!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1355/buggy-version/nondex-common.src.main.java.edu.illinois.nondex.common.Utils.java", "BodyUseAPI": [], "Fixed commit": "e741d79a68d00051e8749ae864062b4cd68db722", "Url": "https://api.github.com/repos/TestingResearchIllinois/NonDex", "Date": "2016-06-05T00:56:52Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["m_transformations.get(i).transformDataLine(org.pharmgkb.parser.vcf.model.VcfMetadata,org.pharmgkb.parser.vcf.model.VcfPosition,java.util.List<org.pharmgkb.parser.vcf.model.VcfSample>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (keep) { m_writers.get(i).writeLine(metadata, position, sampleData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2464/buggy-version/src.main.java.org.pharmgkb.parser.vcf.TransformingVcfLineParser.java", "BodyUseAPI": [], "Fixed commit": "5b1e49a790032a67972adccc8f8eef05705a62f1", "Url": "https://api.github.com/repos/PharmGKB/vcf-parser", "Date": "2015-12-20T02:01:38Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getValue().isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1294/buggy-version/jute.src.main.java.com.igormaznitsa.jute.JuteMojo.java", "BodyUseAPI": [], "Fixed commit": "34ae52aa9144ec2d2f3b59b2ba1f39e67fba8505", "Url": "https://api.github.com/repos/raydac/jute", "Date": "2015-06-04T06:55:20Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rs.next()) { currTitle = rs.getString(\"title\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3165/buggy-version/src.servlets.DatabaseHandler.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "f5f8d91eb660480191f2b757f8d609f78918b261", "Url": "https://api.github.com/repos/lighthouse380/Lighthouse", "Date": "2016-04-01T18:52:20Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == intent) || (null == (intent.getAction()))) { java.lang.String source = (null == intent) ? \"intent\" : \"action\"; android.util.Log.e(LOG_TAG, ((((source + \" was null, flags=\") + flags) + \" bits=\") + (java.lang.Integer.toBinaryString(flags)))); return START_STICKY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9247/buggy-version/android.src.main.java.com.pilloxa.backgroundjob.HeadlessService.java", "BodyUseAPI": [], "Fixed commit": "de12048ff6e272f9a1ebc8bc0dae34b1874fa655", "Url": "https://api.github.com/repos/vikeri/react-native-background-job", "Date": "2017-04-20T07:19:46Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.calcite.util.Util.last(names).startsWith(\"*\")) { return org.apache.calcite.sql.validate.SqlMonotonicity.NOT_MONOTONIC; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5121/buggy-version/core.src.main.java.org.apache.calcite.sql.SqlIdentifier.java", "BodyUseAPI": [], "Fixed commit": "2221aa3d92b6dcb06cd096a2040f33913068b377", "Url": "https://api.github.com/repos/jinfengni/optiq", "Date": "2015-03-20T17:29:28Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.componentPositions) != null) { builder.addAll(this.componentPositions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5121/buggy-version/core.src.main.java.org.apache.calcite.sql.SqlIdentifier.java", "BodyUseAPI": [], "Fixed commit": "2221aa3d92b6dcb06cd096a2040f33913068b377", "Url": "https://api.github.com/repos/jinfengni/optiq", "Date": "2015-03-20T17:29:28Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((this.expression) == null) && (object != null)) { return object.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1082/buggy-version/wicket-jquery-ui-core.src.main.java.com.googlecode.wicket.jquery.ui.renderer.TextRenderer.java", "BodyUseAPI": ["T.toString()"], "Fixed commit": "1b1229dc2d1391622739e5a8b6f92d2d59abfc43", "Url": "https://api.github.com/repos/sebfz1/wicket-jquery-ui", "Date": "2012-07-18T19:35:02Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (displayStatusFragment != null) displayStatusFragment.scrollToTop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9160/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.activities.BaseMainActivity.java", "BodyUseAPI": ["fr.gouv.etalab.mastodon.fragments.DisplayStatusFragment.scrollToTop()"], "Fixed commit": "902c80d35c2e3cc20058da874fb1fca2c2ba2fd4", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-10-26T07:06:24Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((verteidiger.getLebenspunkte()) == 0)) { kampfgeschehen += ((((((((nameVerteidiger + \": \") + nameVerteidiger) + \" schlaegt \") + nameAngreifer) + \"!\\n\") + (verteidiger.schlagen(angreifer))) + \" Schadenspunkte und hat noch \") + (angreifer.getLebenspunkte())) + \" Lebenspunkte. \\n\\n\"; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3695/buggy-version/ObjektorientierteProgrammierung.Held.HeldenApp.java", "BodyUseAPI": ["verteidiger.schlagen(angreifer)"], "Fixed commit": "98540d0f303fb861fe5c69395cdef9ce48859a5b", "Url": "https://api.github.com/repos/IpBlack/MeinJava", "Date": "2017-11-19T09:55:09Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!deleted) { java.lang.String msg = (\"User \" + (user.getId())) + \" does not exist\"; if (debug) dmv.spring.demo.model.repository.jdbc.UserRepositoryExceptionAdapter.logger.info(msg); throw new dmv.spring.demo.model.exceptions.EntityDoesNotExistException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3302/buggy-version/src.main.java.dmv.spring.demo.model.repository.jdbc.UserRepositoryExceptionAdapter.java", "BodyUseAPI": [], "Fixed commit": "ed0423047eccfffa9ca48b7652c687078aacf5f6", "Url": "https://api.github.com/repos/Valery-Dm/restjdbc", "Date": "2017-04-09T19:52:12Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(downloadFile.exists())) { downloadFile.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8611/buggy-version/src.main.java.org.fredy.winyoutubedl.Settings.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "f0de3c66545ba4a2a63c3091a8026c5d5f4a3dd4", "Url": "https://api.github.com/repos/fredyw/win-youtube-dl", "Date": "2013-04-23T15:52:40Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.info.isDurable()) && (this.getOpenwireDestination().isTopic())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5312/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConsumer.java", "BodyUseAPI": [], "Fixed commit": "a1c9e9378efa80905b0fa6550047ca3a8b8dead3", "Url": "https://api.github.com/repos/clebertsuconic/activemq-artemis", "Date": "2016-12-05T14:06:25Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(preValidateBugLinks(contentSpec))) { valid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7215/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.processor.ContentSpecValidator.java", "BodyUseAPI": [], "Fixed commit": "8dc43ae5f6958d251a9bb0377d58f2d828fa5c67", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpecProcessor", "Date": "2013-09-07T03:20:00Z"},
{"Line": "=>959", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"primaryIdentifier\".equals(geneField)) { java.lang.String resolvedId = resolveGene(taxId, geneIdentifier); if (resolvedId == null) { org.intermine.bio.dataconversion.UniprotConverter.LOG.info((\"Can not resolve \" + geneIdentifier)); }else { gene.setAttribute(geneField, resolvedId); } }else { gene.setAttribute(geneField, geneIdentifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8730/buggy-version/bio.sources.uniprot.main.src.org.intermine.bio.dataconversion.UniprotConverter.java", "BodyUseAPI": ["org.intermine.xml.full.Item.setAttribute(java.lang.String,java.lang.String)", "org.intermine.xml.full.Item.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "b59882abfb68a045561696f76ca618fd7457ca89", "Url": "https://api.github.com/repos/intermine/intermine", "Date": "2013-05-03T11:12:50Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.intermine.bio.dataconversion.UniprotConverter.UniprotHandler.getAttrValue(org.xml.sax.Attributes,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"described\".equals(sequenceType)) { entry.addIsoform(entry.getAttribute()); if ((entry.getIsoforms().size()) == 1) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8730/buggy-version/bio.sources.uniprot.main.src.org.intermine.bio.dataconversion.UniprotConverter.java", "BodyUseAPI": [], "Fixed commit": "b59882abfb68a045561696f76ca618fd7457ca89", "Url": "https://api.github.com/repos/intermine/intermine", "Date": "2013-05-03T11:12:50Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((theComplex.getImag()) < 0.0) && ((theComplex.getReal()) == 0.0)) theAngle = (-(java.lang.Math.PI)) / 2.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7186/buggy-version/src.qcfcs_math.PolarCoordinate.java", "BodyUseAPI": [], "Fixed commit": "5fd34d32ee8a51030d930c817c5343282bd34eaf", "Url": "https://api.github.com/repos/reesede/QCfCS_Java", "Date": "2017-01-14T01:07:15Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((theComplex.getImag()) > 0.0) && ((theComplex.getReal()) == 0.0)) theAngle = (java.lang.Math.PI) / 2.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7186/buggy-version/src.qcfcs_math.PolarCoordinate.java", "BodyUseAPI": [], "Fixed commit": "5fd34d32ee8a51030d930c817c5343282bd34eaf", "Url": "https://api.github.com/repos/reesede/QCfCS_Java", "Date": "2017-01-14T01:07:15Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((heartbeatTimer) != null) { heartbeatTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5992/buggy-version/app.src.org.commcare.CommCareHeartbeatManager.java", "BodyUseAPI": [], "Fixed commit": "5d8340a6a9e9fa12a885f220033d9c2410a934f4", "Url": "https://api.github.com/repos/dimagi/commcare-android", "Date": "2017-04-19T13:12:22Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["circuit.reciever.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((getBlockCurrent(bReceiver)) > 0) { setOff(bReceiver); }else { setOn(bReceiver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7383/buggy-version/src.Ne0nx3r0.QuantumConnectors.QuantumConnectors.java", "BodyUseAPI": ["Ne0nx3r0.QuantumConnectors.QuantumConnectors.setOff(org.bukkit.block.Block)", "Ne0nx3r0.QuantumConnectors.QuantumConnectors.setOn(org.bukkit.block.Block)"], "Fixed commit": "0bbc822211e3feb15b6fa55546eb3ed916129ee9", "Url": "https://api.github.com/repos/Ne0nx3r0/Quantum-Connectors", "Date": "2011-06-19T22:04:50Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastFlash) { mFlashScreenListener.done(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8355/buggy-version/src.net.czlee.debatekeeper.AlertManager.java", "BodyUseAPI": [], "Fixed commit": "124845ce9ac2a1fa7e1494d01ffef89bbf477d5b", "Url": "https://api.github.com/repos/czlee/debatekeeper", "Date": "2012-09-16T01:13:48Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.salesmanager.core.business.catalog.category.service.CategoryService.getById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((child.getParent()) != null) { if ((child.getParent().getId()) == parentId) { resp.setStatus(AjaxResponse.RESPONSE_OPERATION_COMPLETED); return resp.toJSONString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/383/buggy-version/sm-shop.src.main.java.com.salesmanager.web.admin.controller.categories.CategoryController.java", "BodyUseAPI": ["child.getParent().getId()", "com.salesmanager.core.business.catalog.category.model.Category.getParent()"], "Fixed commit": "27dd4bb7bc4927500addbbd9f963678327dfd4bd", "Url": "https://api.github.com/repos/asaad1982/laVetrina", "Date": "2016-03-26T09:34:59Z"},
{"Line": "=>832", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.jayway.jsonpath.internal.Utils.isNumeric(right)) { rightPrepared = new java.math.BigDecimal(right); }else if (com.jayway.jsonpath.Criteria.isJson(right)) { rightPrepared = new com.jayway.jsonpath.Criteria.JsonValue(right); }else if (com.jayway.jsonpath.Criteria.isPattern(right)) { rightPrepared = com.jayway.jsonpath.Criteria.compilePattern(right); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3816/buggy-version/json-path.src.main.java.com.jayway.jsonpath.Criteria.java", "BodyUseAPI": ["com.jayway.jsonpath.Criteria.isPattern(java.lang.String)", "com.jayway.jsonpath.Criteria.compilePattern(java.lang.String)", "com.jayway.jsonpath.Criteria.isJson(java.lang.String)"], "Fixed commit": "d0e68fa97918f959ab0d6e2a0d2df5c8a2ad3eb6", "Url": "https://api.github.com/repos/zline/JsonPath", "Date": "2015-10-28T13:56:50Z"},
{"Line": "=>903", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((left instanceof java.lang.Number) && (right instanceof java.math.BigDecimal)) { return new java.math.BigDecimal(left.toString()).compareTo(((java.math.BigDecimal) (right))); }else if ((left instanceof java.lang.String) && (right instanceof java.lang.Number)) { return new java.math.BigDecimal(left.toString()).compareTo(new java.math.BigDecimal(right.toString())); }else if ((left instanceof java.lang.String) && (right instanceof java.lang.Boolean)) { java.lang.Boolean e = java.lang.Boolean.valueOf(((java.lang.String) (left))); java.lang.Boolean a = ((java.lang.Boolean) (right)); return e.compareTo(a); }else if ((left instanceof java.lang.Boolean) && (right instanceof java.lang.Boolean)) { java.lang.Boolean e = ((java.lang.Boolean) (left)); java.lang.Boolean a = ((java.lang.Boolean) (right)); return e.compareTo(a); }else if (left instanceof com.jayway.jsonpath.Criteria.JsonValue) { notNull(ctx, \"ctx\"); com.jayway.jsonpath.Criteria.JsonValue json = ((com.jayway.jsonpath.Criteria.JsonValue) (left)); return right.equals(json.parsed(ctx)) ? 0 : -1; }else { throw new com.jayway.jsonpath.ValueCompareException(left, right); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3816/buggy-version/json-path.src.main.java.com.jayway.jsonpath.Criteria.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.Object.equals(java.lang.Object)", "java.math.BigDecimal.compareTo(java.lang.Object)", "java.lang.Object.toString()", "java.lang.Object.toString()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)"], "Fixed commit": "d0e68fa97918f959ab0d6e2a0d2df5c8a2ad3eb6", "Url": "https://api.github.com/repos/zline/JsonPath", "Date": "2015-10-28T13:56:50Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getGeoNamesService().findLatLng(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (pointForLocality == null) { org.eol.globi.data.StudyImporterForCruaud.LOG.warn(((\"no location associated with locality [\" + samplingLocation) + \"]\")); }else { org.eol.globi.domain.Location location = nodeFactory.getOrCreateLocation(pointForLocality.getLat(), pointForLocality.getLng(), null); parasite.caughtIn(location); host.caughtIn(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4141/buggy-version/eol-globi-data-sources.src.main.java.org.eol.globi.data.StudyImporterForCruaud.java", "BodyUseAPI": ["org.eol.globi.data.StudyImporterForCruaud.getOrCreateLocation(pointForLocality.getLat(),pointForLocality.getLng(),<nulltype>)", "org.eol.globi.geo.LatLng.getLat()", "org.eol.globi.geo.LatLng.getLng()"], "Fixed commit": "0c406361d83a6388a688a09ec1fb2e6b308081a2", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2015-03-09T05:27:27Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nextTrack.isPlaying()) { nextTrack.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2409/buggy-version/core.src.main.java.org.mini2Dx.core.audio.CrossFadingMusicLoop.java", "BodyUseAPI": ["com.badlogic.gdx.audio.Music.stop()"], "Fixed commit": "70afdc1cc8e7810f3c17c010b881eede29494c77", "Url": "https://api.github.com/repos/mini2Dx/mini2Dx", "Date": "2014-10-12T19:11:27Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentTrack.isPlaying()) { currentTrack.stop(); nextTrack.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2409/buggy-version/core.src.main.java.org.mini2Dx.core.audio.CrossFadingMusicLoop.java", "BodyUseAPI": ["com.badlogic.gdx.audio.Music.stop()"], "Fixed commit": "70afdc1cc8e7810f3c17c010b881eede29494c77", "Url": "https://api.github.com/repos/mini2Dx/mini2Dx", "Date": "2014-10-12T19:11:27Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentTrack.isPlaying()) { currentTrack.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2409/buggy-version/core.src.main.java.org.mini2Dx.core.audio.CrossFadingMusicLoop.java", "BodyUseAPI": ["com.badlogic.gdx.audio.Music.stop()"], "Fixed commit": "70afdc1cc8e7810f3c17c010b881eede29494c77", "Url": "https://api.github.com/repos/mini2Dx/mini2Dx", "Date": "2014-10-12T19:11:27Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getLoaderManager().getLoader(com.example.profbola.bakingtime.ui.INGREDIENT_LOADER_ID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (loader == null) { getSupportLoaderManager().initLoader(com.example.profbola.bakingtime.ui.STEP_LOADER_ID, null, this); getSupportLoaderManager().initLoader(com.example.profbola.bakingtime.ui.INGREDIENT_LOADER_ID, null, this); }else { getSupportLoaderManager().restartLoader(com.example.profbola.bakingtime.ui.STEP_LOADER_ID, null, this); getSupportLoaderManager().restartLoader(com.example.profbola.bakingtime.ui.INGREDIENT_LOADER_ID, null, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4889/buggy-version/app.src.main.java.com.example.profbola.bakingtime.ui.RecipeDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "873d9570cd639d8f261eef388ee9c422aa67791a", "Url": "https://api.github.com/repos/Ehbraheem/Baking-Time", "Date": "2017-07-31T00:46:42Z"},
{"Line": "=>3068", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((peerImage) == null) { peerImage = generatePeerImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/682/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidImplementation.java", "BodyUseAPI": [], "Fixed commit": "3b4ad87b8da752b88744292865147f0f978b68d5", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-10-28T05:36:08Z"},
{"Line": "=>3081", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((peerImage) == null) { peerImage = generatePeerImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/682/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidImplementation.java", "BodyUseAPI": [], "Fixed commit": "3b4ad87b8da752b88744292865147f0f978b68d5", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-10-28T05:36:08Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fields) != null) && (!(fields.isEmpty()))) { if (!(edge.getRecord().getIdentity().isValid())) edge.convertToDocument(); com.orientechnologies.orient.core.sql.OSQLHelper.bindParameters(edge.getRecord(), fields, new com.orientechnologies.orient.core.sql.OCommandParameters(iArgs), context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3364/buggy-version/graphdb.src.main.java.com.orientechnologies.orient.graph.sql.OCommandExecutorSQLCreateEdge.java", "BodyUseAPI": ["com.orientechnologies.orient.core.sql.OSQLHelper.bindParameters(edge.getRecord(),java.util.LinkedHashMap<java.lang.String, java.lang.Object>,com.orientechnologies.orient.core.sql.OCommandParameters,com.orientechnologies.orient.graph.sql.OCommandExecutorSQLCreateEdge)"], "Fixed commit": "3641a1cfb01c6cd7b1decc0148ef51d99d20aafe", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-10-04T08:22:34Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(onReadRedis)) { synchronized(onReadRedis) { if (!(onReadRedis)) { onReadRedis = true; try { java.util.Set<java.lang.String> loadedIslands = com.sap.sea.Sea.getJedis().smembers(\"ISLANDS\"); for (java.lang.String string : loadedIslands) { com.sap.sea.Island island = mapper.readValue(string, com.sap.sea.Island.class); if (island.check()) { islands.put(island.getIp(), island); } } } catch (java.io.IOException e) { e.printStackTrace(); } finally { onReadRedis = false; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8308/buggy-version/src.com.sap.sea.Sea.java", "BodyUseAPI": [], "Fixed commit": "3515bb475841559998613612775739acaae5bb3a", "Url": "https://api.github.com/repos/templefox/Sea", "Date": "2015-01-08T09:28:44Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Object, com.intellij.ui.treeStructure.filtered.FilteringTreeStructure.FilteringNode>.containsKey(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!isDuplicate) { myDescriptors2Nodes.put(d, n); nodes.add(n); addToCache(n, isDuplicate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/811/buggy-version/platform.platform-api.src.com.intellij.ui.treeStructure.filtered.FilteringTreeStructure.java", "BodyUseAPI": ["com.intellij.ui.treeStructure.filtered.FilteringTreeStructure.addToCache(com.intellij.ui.treeStructure.filtered.FilteringTreeStructure.FilteringNode,boolean)"], "Fixed commit": "59fe05cb32c5b8bb388392e8ebc72253e83b6a58", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2012-03-19T17:59:00Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (master)) { checkConnection(); node.removeChild(\"start\"); makeStopAction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6544/buggy-version/src.main.java.modbus.SlaveNode.java", "BodyUseAPI": [], "Fixed commit": "c1a9e44f52d9699fdfb2d5b83797829ef8718a68", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-modbus", "Date": "2016-09-27T19:12:46Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (UsbongBuilderScreenType.PROCESSING.getName().equals(screen.screenType)) { usbong.android.builder.models.details.ProcessingScreenDetails processingScreenDetails = new usbong.android.builder.models.details.ProcessingScreenDetails(); processingScreenDetails.setText(screen.name); processingScreenDetails.setProcessingType(ProcessingScreenDetails.ProcessingType.SEND_TO_WEB_SERVER.getName()); return usbong.android.builder.utils.JsonUtils.toJson(processingScreenDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3322/buggy-version/src.main.java.usbong.android.builder.models.details.ScreenDetailsFactory.java", "BodyUseAPI": ["usbong.android.builder.models.details.ProcessingScreenDetails.setText(screen.name)"], "Fixed commit": "2b5a4450a7be2b67336d8a569310811eec3027ae", "Url": "https://api.github.com/repos/rockycamacho/usbong-builder", "Date": "2014-08-10T14:01:06Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<org.bukkit.entity.Player, org.bukkit.Location>.get(org.bukkit.entity.Player)", "org.bukkit.entity.Player.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(loc1.getWorld().getName().equalsIgnoreCase(loc2.getWorld().getName()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4962/buggy-version/src.lishid.orebfuscator.proximityhider.ProximityHider.java", "BodyUseAPI": [], "Fixed commit": "a8248f35625646b072eea93f3dade58b25ec58f9", "Url": "https://api.github.com/repos/lishd/Orebfuscator", "Date": "2012-07-03T21:09:29Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < (com.kh.beatbot.view.helper.MidiTrackControlHelper.buttonRows.size())) { com.kh.beatbot.view.helper.MidiTrackControlHelper.buttonRows.set(i, new com.kh.beatbot.view.helper.MidiTrackControlHelper.ButtonRow(i, GlobalVars.tracks.get(i).instrumentIcon)); }else { com.kh.beatbot.view.helper.MidiTrackControlHelper.buttonRows.add(new com.kh.beatbot.view.helper.MidiTrackControlHelper.ButtonRow(i, GlobalVars.tracks.get(i).instrumentIcon)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8871/buggy-version/src.com.kh.beatbot.view.helper.MidiTrackControlHelper.java", "BodyUseAPI": ["GlobalVars.tracks.get(int)", "java.util.List<com.kh.beatbot.view.helper.MidiTrackControlHelper.ButtonRow>.set(int,com.kh.beatbot.view.helper.MidiTrackControlHelper.ButtonRow)", "GlobalVars.tracks.get(int)", "java.util.List<com.kh.beatbot.view.helper.MidiTrackControlHelper.ButtonRow>.add(com.kh.beatbot.view.helper.MidiTrackControlHelper.ButtonRow)"], "Fixed commit": "db6bfb35a97e3d3e50db7ec12492dc5320ee9d88", "Url": "https://api.github.com/repos/khiner/BeatBot", "Date": "2012-09-22T04:05:51Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.afide.model.SimpleModel<T>.getBytable(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null == value) { logger.warn(\"Invalid transaction value, bytable value is null\"); return false; }else { if (logger.isInfoEnabled()) { logger.info(\"Validated tx value {}\", value.toPrettyString()); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2121/buggy-version/applications.dummy.src.main.java.com.github.afide.model.SimpleModel.java", "BodyUseAPI": ["com.github.afide.model.SimpleModel.info(java.lang.String,value.toPrettyString())", "com.github.jtmsp.merkletree.byteable.IByteable.toPrettyString()"], "Fixed commit": "13dffbaaf4e54017c2e61ce31e4fd92eb50442f5", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T02:12:10Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isInfoEnabled()) { logger.info(\"New tree is now {}\", tree.toPrettyString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2121/buggy-version/applications.dummy.src.main.java.com.github.afide.model.SimpleModel.java", "BodyUseAPI": ["com.github.afide.model.SimpleModel.info(java.lang.String,tree.toPrettyString())"], "Fixed commit": "13dffbaaf4e54017c2e61ce31e4fd92eb50442f5", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T02:12:10Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isCacheSupported) { this.reportCacheStatus(foundCache, inputTuple); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5928/buggy-version/storm-data-contracts.src.main.java.com.forter.contracts.BaseContractsBoltExecutor.java", "BodyUseAPI": [], "Fixed commit": "b586b9b9c9d53677f0e050ce2e6d4df2b3a619c3", "Url": "https://api.github.com/repos/forter/storm-data-contracts", "Date": "2015-11-25T11:13:42Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.responseStatus) == (ResponseStatus.NO_ERROR)) { if (readValue(buffer, this.responseTotalBodyLength, this.responseKeyLength, this.responseExtrasLength)) { this.decodeStatus = BinaryDecodeStatus.DONE; continue; }else { return false; } }else { if (net.rubyeye.xmemcached.utils.ByteUtils.stepBuffer(buffer, (((this.responseTotalBodyLength) - (this.responseKeyLength)) - (this.responseExtrasLength)))) { this.decodeStatus = BinaryDecodeStatus.DONE; continue; }else return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5089/buggy-version/src.main.java.net.rubyeye.xmemcached.command.binary.BaseBinaryCommand.java", "BodyUseAPI": [], "Fixed commit": "09868d8be396f5843b37e8cb470db93fd788dead", "Url": "https://api.github.com/repos/killme2008/xmemcached", "Date": "2011-09-07T11:28:07Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.lord_tyler.meettoeat.SearchResultFragment.group) == null) { com.example.lord_tyler.meettoeat.SearchResultFragment.sendResultButton.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8831/buggy-version/app.src.main.java.com.example.lord_tyler.meettoeat.SearchResultFragment.java", "BodyUseAPI": [], "Fixed commit": "e03320c2c48c92a5eaa208601a50de4f4b382353", "Url": "https://api.github.com/repos/tylerscave/MeetToEat", "Date": "2015-11-30T19:08:25Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperties().getProperty(\"os.name\").contains(\"Windows\")) FILE_PATH = folderChooser.getSelectedFile().getAbsolutePath(); else FILE_PATH = folderChooser.getCurrentDirectory().getAbsolutePath();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2473/buggy-version/assignment1.src.assignment1.MyForms.DESForm.java", "BodyUseAPI": [], "Fixed commit": "d70605b1f0d54cf2cf3e399b8ea555432ea13cd0", "Url": "https://api.github.com/repos/longthtran/Assignment1", "Date": "2017-03-21T10:21:21Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.todoroo.astrid.core.PluginServices.getTagDataService().getTag(java.lang.String,TagData.ID,TagData.DELETION_DATE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tagData != null) { tagData.setValue(TagData.DELETION_DATE, com.todoroo.andlib.utility.DateUtilities.now()); com.todoroo.astrid.core.PluginServices.getTagDataService().save(tagData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2817/buggy-version/astrid.plugin-src.com.todoroo.astrid.tags.TagFilterExposer.java", "BodyUseAPI": ["com.todoroo.astrid.data.TagData.setValue(TagData.DELETION_DATE,com.todoroo.andlib.utility.DateUtilities.now())", "com.todoroo.astrid.core.PluginServices.getTagDataService().save(com.todoroo.astrid.data.TagData)"], "Fixed commit": "80449df0e5c4e00d2ebea1a9e35fccceed059fb6", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2011-07-16T04:35:39Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((text != null) && (!(text.isEmpty()))) new java.lang.Thread(() -> speakBlocking(text)).start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1460/buggy-version/src.main.java.whowhatwhere.model.tts.MaryTTS.java", "BodyUseAPI": ["whowhatwhere.model.tts.MaryTTS.speakBlocking(java.lang.String)", "java.lang.Thread.start()"], "Fixed commit": "7166547df750e29c26820a6e331cf745b077c821", "Url": "https://api.github.com/repos/ck3ck3/WhoWhatWhere", "Date": "2017-03-27T11:13:59Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isUnmasked[i])) { (unmaskedCount)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1191/buggy-version/src.Hangman.java", "BodyUseAPI": [], "Fixed commit": "1b4951bc872f424af68b8a541a3c4416eaaf2a22", "Url": "https://api.github.com/repos/allc/Hangman", "Date": "2017-08-30T09:14:17Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<ch.zweifel.services.Service>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((service.getStatus()) != null) && (!(service.getStatus().isEmpty()))) { if (service.getStatus().equals(Service.STATUS_OK)) { holder.marker.setBackgroundResource(R.color.colorStatusOK); }else if (services.get(position).getStatus().startsWith(Service.STATUS_OK)) { holder.marker.setBackgroundResource(R.color.colorStatus); }else { holder.marker.setBackgroundResource(R.color.colorStatusDownInvalid); } }else { holder.marker.setBackgroundResource(R.color.colorStatusUndefined); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6257/buggy-version/Android.app.src.main.java.ch.zweifel.services.ServiceAdapter.java", "BodyUseAPI": ["service.getStatus().equals(Service.STATUS_OK)", "ch.zweifel.services.Service.getStatus()"], "Fixed commit": "99bf2d5c3236b6c45b6f2e30e37a2634d98270cc", "Url": "https://api.github.com/repos/sam41Z/KRYServices", "Date": "2017-05-19T10:59:33Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.redhat.ceylon.compiler.typechecker.tree.TreeUtil.hasAnnotation(decl.getAnnotationList(), \"static\", null)) { flags |= com.redhat.ceylon.langtools.tools.javac.code.Flags.STATIC; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3569/buggy-version/compiler-java.src.com.redhat.ceylon.compiler.java.codegen.CeylonTransformer.java", "BodyUseAPI": [], "Fixed commit": "a7897376467dd55e4d7272d64043e2ae159109f1", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-11-17T22:28:06Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSpace()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7834/buggy-version/src.main.java.net.sourceforge.fenixedu.domain.space.SpaceOccupation.java", "BodyUseAPI": [], "Fixed commit": "89725c46414b593c1889e8a95ecc7368823f3d7b", "Url": "https://api.github.com/repos/FenixEdu/fenix", "Date": "2014-06-04T14:30:54Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((one instanceof util.ast.node.DerivedTypeNode) && (two instanceof util.ast.node.DerivedTypeNode)) { return util.type.Types.isSameType(((util.ast.node.DerivedTypeNode) (one)), ((util.ast.node.DerivedTypeNode) (two))); }else if ((one instanceof util.ast.node.ExceptionTypeNode) && (two instanceof util.ast.node.ExceptionTypeNode)) { return util.type.Types.isSameType(((util.ast.node.ExceptionTypeNode) (one)), ((util.ast.node.ExceptionTypeNode) (two))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4052/buggy-version/Hog.src.util.type.Types.java", "BodyUseAPI": [], "Fixed commit": "9af74b00c2e3240cb3d628a10ebce878290d379a", "Url": "https://api.github.com/repos/smessing/Hog", "Date": "2012-04-28T06:05:58Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((in.readerIndex()) == (in.writerIndex())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6105/buggy-version/protocol.src.main.java.net.md_5.bungee.protocol.MinecraftDecoder.java", "BodyUseAPI": [], "Fixed commit": "7bbc29797fb33be92808b60dd2db151055f6dbbf", "Url": "https://api.github.com/repos/joserobjr/BungeeCord", "Date": "2017-11-05T02:29:21Z"},
{"Line": "=>790", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isQualifier()) { return ((((org.umlg.javageneration.util.NamedElement) (this.property.getOwner())).getQualifiedName()) + \"::\") + (this.property.getQualifiedName()); }else { return this.property.getQualifiedName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6584/buggy-version/framework.java-generation-util.src.main.java.org.umlg.javageneration.util.PropertyWrapper.java", "BodyUseAPI": [], "Fixed commit": "3ee2758e9d055537495a35e6fea0cb4ccd5c8b95", "Url": "https://api.github.com/repos/pietermartin/umlg", "Date": "2013-08-30T05:39:22Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xreliquary.api.IPedestal.getFakePlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fakePlayer.getHeldItem(EnumHand.MAIN_HAND).getItem()) == (net.minecraft.init.Items.MILK_BUCKET)) { int fluidAdded = pedestal.fillConnectedTank(new net.minecraftforge.fluids.FluidStack(xreliquary.init.ModFluids.milk, net.minecraftforge.fluids.Fluid.BUCKET_VOLUME)); if (fluidAdded == 0) { if ((stack.stackSize) == 1) { pedestal.replaceCurrentItem(new net.minecraft.item.ItemStack(net.minecraft.init.Items.MILK_BUCKET)); return true; }else if ((stack.stackSize) > 1) { (stack.stackSize)--; net.minecraft.entity.item.EntityItem entity = new net.minecraft.entity.item.EntityItem(world, ((pos.getX()) + 0.5), ((pos.getY()) + 1.0), ((pos.getZ()) + 0.5), new net.minecraft.item.ItemStack(net.minecraft.init.Items.MILK_BUCKET)); world.spawnEntityInWorld(entity); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2377/buggy-version/src.main.java.xreliquary.util.pedestal.PedestalBucketWrapper.java", "BodyUseAPI": [], "Fixed commit": "ee371274bc5e0ef146e3d47d7bf0fd7a217341ac", "Url": "https://api.github.com/repos/P3pp3rF1y/Reliquary", "Date": "2016-08-25T13:09:16Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getConnectionState()) == (android.bluetooth.BluetoothProfile.STATE_DISCONNECTED)) mGatt.connect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6316/buggy-version/ble.src.main.java.tw.idv.palatis.ble.BluetoothDevice.java", "BodyUseAPI": [], "Fixed commit": "e8d03f8153f77cab958b104d7d73feb4adadd4f4", "Url": "https://api.github.com/repos/Palatis/android-ble", "Date": "2017-07-04T22:16:53Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (location == null) { latitude = location.get(ConstantField.LATITUDE); longitude = location.get(ConstantField.LONGITUDE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/928/buggy-version/src.com.damuzhi.travel.activity.adapter.place.SceneryAdapter.java", "BodyUseAPI": [], "Fixed commit": "4d77f5de75427b6af5d2329d82810a7d163a7432", "Url": "https://api.github.com/repos/gckjdev/Damuzhi_Android", "Date": "2012-05-23T09:02:05Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (max == 0) max = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6097/buggy-version/AndroidCharts.src.main.java.com.dacer.androidcharts.BarView.java", "BodyUseAPI": [], "Fixed commit": "fb7a4e3c9ecf640627f4635366fd0130a4cfccb3", "Url": "https://api.github.com/repos/dacer/AndroidCharts", "Date": "2013-12-11T08:50:56Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((driverToDeviceStreamDataCopyExecutor) != null) { de.uniluebeck.itm.util.concurrent.ExecutorUtils.shutdown(driverToDeviceStreamDataCopyExecutor, 1, java.util.concurrent.TimeUnit.SECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6915/buggy-version/core.src.main.java.de.uniluebeck.itm.wsn.drivers.core.SerialPortDevice.java", "BodyUseAPI": [], "Fixed commit": "aeb351756e5bf192b2ebfaa0498ee76a427dfd2d", "Url": "https://api.github.com/repos/itm/wsn-device-drivers", "Date": "2013-12-01T20:46:51Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operationExecutor) != null) { de.uniluebeck.itm.util.concurrent.ExecutorUtils.shutdown(operationExecutor, 1, java.util.concurrent.TimeUnit.SECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6915/buggy-version/core.src.main.java.de.uniluebeck.itm.wsn.drivers.core.SerialPortDevice.java", "BodyUseAPI": [], "Fixed commit": "aeb351756e5bf192b2ebfaa0498ee76a427dfd2d", "Url": "https://api.github.com/repos/itm/wsn-device-drivers", "Date": "2013-12-01T20:46:51Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view instanceof android.view.ViewGroup) { if (atBottom) { return com.afollestad.materialdialogs.MaterialDialog.canViewOrChildScroll(com.afollestad.materialdialogs.MaterialDialog.getBottomView(((android.view.ViewGroup) (view))), true); }else { return com.afollestad.materialdialogs.MaterialDialog.canViewOrChildScroll(com.afollestad.materialdialogs.MaterialDialog.getTopView(((android.view.ViewGroup) (view))), false); } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5620/buggy-version/library.src.main.java.com.afollestad.materialdialogs.MaterialDialog.java", "BodyUseAPI": [], "Fixed commit": "77545ec78705b1f52a1893fc1a2a1320ef262dea", "Url": "https://api.github.com/repos/afollestad/material-dialogs", "Date": "2015-03-28T15:02:05Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["engine.Viewport.gameFloatToScreen((800 * (source.getBrightness())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (radius > 0) { java.awt.RadialGradientPaint rgp = new java.awt.RadialGradientPaint(centerx, centery, radius, fractions, colors); a.setFillPaint(rgp); }else a.setFillPaint(java.awt.Color.black);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/790/buggy-version/src.engine.lighting.LightingEngine.java", "BodyUseAPI": [], "Fixed commit": "74da040fae3e811ffcb301ba4a11ea934819701f", "Url": "https://api.github.com/repos/iebaker/game-final-project", "Date": "2013-12-05T09:55:05Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.length()) > 8) { return (com.cloudbees.plugins.credentials.SecretBytes.decrypt(hudson.remoting.Base64.decode(value.substring(1, ((value.length()) - 1))))) != null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8659/buggy-version/src.main.java.com.cloudbees.jenkins.support.configfiles.SecretHandler.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "com.cloudbees.plugins.credentials.SecretBytes.decrypt(hudson.remoting.Base64.decode(value.substring(1, ((value.length()) - 1))))", "hudson.remoting.Base64.decode(java.lang.String)"], "Fixed commit": "0e8ec55d377758d86a536b2a7938ce1762a1089f", "Url": "https://api.github.com/repos/jenkinsci/support-core-plugin", "Date": "2016-11-04T16:11:44Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.catrobat.paintroid.FileIO.createNewEmptyPictureFile(org.catrobat.paintroid.MenuFileActivity,((getString(R.string.temp_picture_name)) + \".png\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tempFile != null) { org.catrobat.paintroid.MenuFileActivity.mCameraImageUri = android.net.Uri.fromFile(tempFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/735/buggy-version/Paintroid.src.org.catrobat.paintroid.MenuFileActivity.java", "BodyUseAPI": ["android.net.Uri.fromFile(java.io.File)"], "Fixed commit": "7b6ac328384f92668676ff302f95b787846c80a5", "Url": "https://api.github.com/repos/Catrobat/Paintroid", "Date": "2013-07-29T22:05:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(rs1.next())) { stmt.executeUpdate(\"INSERT INTO CATEGORY (category_name) VALUES ('Default')\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8141/buggy-version/src.com.CS6359Team1.RecipeBook.DbClass.java", "BodyUseAPI": [], "Fixed commit": "f646136645b121b2277513962959c77b4f19ec7a", "Url": "https://api.github.com/repos/AntnZ/RecipeBook", "Date": "2015-10-12T01:17:17Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((t.getMatchSubject()) == null) || ((t.getMatchPredicate()) == null)) || ((t.getMatchObject()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2017/buggy-version/src.main.java.org.apache.jena.cassandra.graph.GraphCassandra.java", "BodyUseAPI": [], "Fixed commit": "37b0fb1b8e952dfae6d38c54923e338eb5707f8e", "Url": "https://api.github.com/repos/Claudenw/jena-on-cassandra", "Date": "2016-12-20T22:27:06Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isErrorMustLog) { java.lang.String message = (LogMessage.GET_ERROR.toString()) + (errors.get()); logger.log(message); updateLog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7306/buggy-version/code.nesmelov-aleksey.ViewModel.src.main.java.ru.unn.agile.Complex.viewmodel.ViewModel.java", "BodyUseAPI": [], "Fixed commit": "c3a8a11d6288c3e39a2453b3ae0251c4f351fb2d", "Url": "https://api.github.com/repos/AlekseyNesmelov/agile-course-practice", "Date": "2015-12-18T21:06:57Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.getPendingId()) != null) oldMessage = room.getMessages().get(message.getPendingId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6020/buggy-version/app.src.main.java.com.seveneow.simplechat.utils.RoomManager.java", "BodyUseAPI": ["com.seveneow.simplechat.model.Message.getPendingId()", "room.getMessages().get(message.getPendingId())"], "Fixed commit": "4de3678678fd763fabd4483d83893ca88eec85e7", "Url": "https://api.github.com/repos/jenny7chen/SimpleChat", "Date": "2017-03-14T09:29:41Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (con.contains(\"location\")) { loginLocation = new org.bukkit.Location(Minigames.plugin.getServer().getWorld(con.getString(\"location.world\")), con.getDouble(\"location.x\"), con.getDouble(\"location.y\"), con.getDouble(\"location.z\"), new java.lang.Float(con.getString(\"location.yaw\")), new java.lang.Float(con.getString(\"location.pitch\"))); if ((loginLocation.getWorld()) == null) loginLocation = org.bukkit.Bukkit.getWorlds().get(0).getSpawnLocation(); }else loginLocation = org.bukkit.Bukkit.getWorlds().get(0).getSpawnLocation();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/586/buggy-version/src.com.pauldavdesign.mineauz.minigames.OfflineMinigamePlayer.java", "BodyUseAPI": [], "Fixed commit": "12f062f51ee15fe2e53d15bb2c1359b670115e08", "Url": "https://api.github.com/repos/Schmoller/Minigames", "Date": "2014-01-30T11:18:25Z"},
{"Line": "=>981", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.workcast.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(person.has(\"uid\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7014/buggy-version/src.org.socialbiz.cog.GoalRecord.java", "BodyUseAPI": [], "Fixed commit": "66261e6a44bb42e09ecdd5fa751eeb94b7b500fb", "Url": "https://api.github.com/repos/agilepro/cognoscenti", "Date": "2015-09-29T02:00:51Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { sheet.getRow(row).getCell(column, Row.CREATE_NULL_AS_BLANK).setCellValue(value); }else if (row == 11) { sheet.getRow(row).getCell(column, Row.CREATE_NULL_AS_BLANK).setCellValue(\"\"); sheet.getRow(row).getCell((column + 1), Row.CREATE_NULL_AS_BLANK).setCellValue(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2317/buggy-version/src.main.java.ReadExcelWithFormula.java", "BodyUseAPI": ["sheet.getRow(row).getCell(column, Row.CREATE_NULL_AS_BLANK).setCellValue(java.lang.Double)"], "Fixed commit": "bf6409fc94716e6188f93e920c1541b05653cd7f", "Url": "https://api.github.com/repos/pawanpec/poc", "Date": "2017-07-10T06:17:54Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pos >= 0) { packageName = name.substring(0, pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6808/buggy-version/src.main.java.org.sdmlib.models.classes.logic.GenClass.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "b904c955d029eb4a5c5760fde0dd7682e04334cb", "Url": "https://api.github.com/repos/fujaba/SDMLib", "Date": "2014-12-08T09:17:40Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode != (RESULT_CANCELED)) { final android.support.v7.app.AlertDialog.Builder alertDlg = new android.support.v7.app.AlertDialog.Builder(getContext()); alertDlg.setMessage(R.string.message_err_open_contact); alertDlg.setPositiveButton(\"OK\", new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { } }); alertDlg.create().show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3235/buggy-version/app.src.main.java.jp.co.rjc.kokoshake.ui.fragment.SettingsFragment.java", "BodyUseAPI": [], "Fixed commit": "e50b8f2cb43d3a275972ff2b0d7c9c203a8839cf", "Url": "https://api.github.com/repos/rjc-tech/kokoshake_android", "Date": "2017-02-28T04:37:41Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PJson.INSTANCE.toObject(org.apache.hadoop.hbase.io.ImmutableBytesWritable,children.get(1).getSortOrder())", "PJson.INSTANCE.toObject(org.apache.hadoop.hbase.io.ImmutableBytesWritable,children.get(0).getSortOrder())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pattern.getNodeSize()) > (value.getNodeSize())) { ptr.set(PDataType.FALSE_BYTES); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3329/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.expression.JsonSubsetExpression.java", "BodyUseAPI": [], "Fixed commit": "229939099154042af98b24839cfb483624400fb0", "Url": "https://api.github.com/repos/petercdc/phoenix", "Date": "2015-07-11T11:15:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PJson.INSTANCE.toObject(org.apache.hadoop.hbase.io.ImmutableBytesWritable)", "PJson.INSTANCE.toObject(org.apache.hadoop.hbase.io.ImmutableBytesWritable)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pattern.getNodeSize()) < (value.getNodeSize())) { ptr.set(PDataType.FALSE_BYTES); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3329/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.expression.JsonSupersetExpression.java", "BodyUseAPI": [], "Fixed commit": "229939099154042af98b24839cfb483624400fb0", "Url": "https://api.github.com/repos/petercdc/phoenix", "Date": "2015-07-11T11:15:14Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNullOrEmpty(documentationEndpointUri)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9192/buggy-version/src.main.java.com.mangofactory.swagger.SwaggerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "e9906ae76ba445381cb74ac0e36b989bb66a8436", "Url": "https://api.github.com/repos/martypitt/swagger-springmvc", "Date": "2013-03-08T17:25:36Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (documentationEndpointUri.contains(com.mangofactory.swagger.SwaggerConfiguration.API_DOCS_PATH)) { controllerUri = documentationEndpointUri.substring(com.mangofactory.swagger.SwaggerConfiguration.API_DOCS_PATH.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9192/buggy-version/src.main.java.com.mangofactory.swagger.SwaggerConfiguration.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()"], "Fixed commit": "e9906ae76ba445381cb74ac0e36b989bb66a8436", "Url": "https://api.github.com/repos/martypitt/swagger-springmvc", "Date": "2013-03-08T17:25:36Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((e.entityPlayer) != null) && ((e.entityPlayer.inventory) != null)) && ((e.entityPlayer.inventory.getCurrentItem()) != null)) if (e.entityPlayer.inventory.getCurrentItem().getItem().equals(AlternateWorld.itemTeleporter)) if ((e.entityPlayer.dimension) != 0) e.setCanceled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4866/buggy-version/src.main.java.wurmcraft.wurmatron.common.events.EntityInteract.java", "BodyUseAPI": ["e.entityPlayer.inventory.getCurrentItem().getItem()", "e.entityPlayer.inventory.getCurrentItem().getItem().equals(AlternateWorld.itemTeleporter)", "net.minecraftforge.event.entity.player.EntityInteractEvent.setCanceled(boolean)", "e.entityPlayer.inventory.getCurrentItem()"], "Fixed commit": "9cf18c8a2e5b95aaa9ab920423ac5b932fb83e09", "Url": "https://api.github.com/repos/Wurmcraft/WurmTweaks", "Date": "2016-07-14T23:11:32Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(autosaveworld.threads.backup.sftp.SFTPUtils.dirExists(channelSftp, config.backupFTPPath))) { channelSftp.mkdir(config.backupFTPPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3009/buggy-version/src.autosaveworld.threads.backup.sftp.SFTPBackup.java", "BodyUseAPI": ["autosaveworld.zlibs.com.jcraft.jsch.ChannelSftp.mkdir(config.backupFTPPath)"], "Fixed commit": "715468e0a6e3ad2e10caaeec15dedeae98e68a24", "Url": "https://api.github.com/repos/Shevchik/AutoSaveWorld", "Date": "2014-06-22T14:31:24Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(autosaveworld.threads.backup.sftp.SFTPUtils.dirExists(channelSftp, \"backups\"))) { channelSftp.mkdir(\"backups\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3009/buggy-version/src.autosaveworld.threads.backup.sftp.SFTPBackup.java", "BodyUseAPI": ["autosaveworld.zlibs.com.jcraft.jsch.ChannelSftp.mkdir(java.lang.String)"], "Fixed commit": "715468e0a6e3ad2e10caaeec15dedeae98e68a24", "Url": "https://api.github.com/repos/Shevchik/AutoSaveWorld", "Date": "2014-06-22T14:31:24Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.networkcontroller.NetworkFCZoneInfo.getFcZoneReferenceId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.emc.storageos.db.client.util.NullColumnValueGetter.isNullURI(fcZoneReferenceId)) { com.emc.storageos.networkcontroller.impl.NetworkDeviceController._log.info(\"fcZoneReferenceId is null. Nothing to remove.\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4284/buggy-version/controllersvc.src.main.java.com.emc.storageos.networkcontroller.impl.NetworkDeviceController.java", "BodyUseAPI": [], "Fixed commit": "800c15541e4de94ef5a7aabe3cfd2eaf0eccf495", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-03-27T16:58:25Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.networkcontroller.NetworkFCZoneInfo.getFcZoneReferenceId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.emc.storageos.db.client.util.NullColumnValueGetter.isNullURI(fcZoneReferenceId)) { com.emc.storageos.volumecontroller.impl.block.taskcompleter.ZoneReferencesRemoveCompleter._log.info(\"fcZoneReferenceId is null. Nothing to remove.\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4284/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.block.taskcompleter.ZoneReferencesRemoveCompleter.java", "BodyUseAPI": [], "Fixed commit": "800c15541e4de94ef5a7aabe3cfd2eaf0eccf495", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-03-27T16:58:25Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.String.class.equals(targetType)) { result = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5110/buggy-version/code.core.src.main.java.org.apache.tamaya.core.internal.converters.OptionalConverter.java", "BodyUseAPI": [], "Fixed commit": "e8a6386b2d3265f1cd8c0efb17e70fbc52a20f28", "Url": "https://api.github.com/repos/apache/incubator-tamaya", "Date": "2017-08-12T23:27:48Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fromContact)) { if ((phrase.length()) != 0) { phrase = phrase.substring(0, ((phrase.length()) - 1)); phoneView.setText(phrase); morseText.clear(); if ((phoneView.getText().toString().length()) == 0) { phoneView.setText(\"Telephone number\"); } }else { phoneView.setVisibility(View.GONE); phrase = phraseView.getText().toString(); menuButton.setVisibility(View.VISIBLE); contactButton.setVisibility(View.GONE); contactList.setVisibility(View.GONE); messageList.setVisibility(View.GONE); touchWarning.setVisibility(View.VISIBLE); addDrawerItemsAll(); send = false; } }else { phoneView.setVisibility(View.GONE); phrase = phraseView.getText().toString(); menuButton.setVisibility(View.VISIBLE); contactButton.setVisibility(View.GONE); contactList.setVisibility(View.GONE); messageList.setVisibility(View.GONE); touchWarning.setVisibility(View.VISIBLE); send = false; fromContact = false; addDrawerItemsAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1336/buggy-version/app.src.main.java.agile.app.morsecodeapp.MorseTouch.java", "BodyUseAPI": [], "Fixed commit": "3773c958656173bf29072dd64ff08ff6aa589bce", "Url": "https://api.github.com/repos/MatheusDMD/MorseCodeApp", "Date": "2016-05-02T10:55:09Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(key)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2135/buggy-version/src.main.java.com.changyi.fi.external.enterprise.manager.EnternalEnterpriseAPIManager.java", "BodyUseAPI": [], "Fixed commit": "ffe999d262a763690d951668576943a82ac87a2e", "Url": "https://api.github.com/repos/finley007/Suishoushu", "Date": "2017-10-16T15:55:20Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.changyi.fi.external.enterprise.manager.EnternalEnterpriseAPIManager.getAPIImpl()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (enterpriseAPIService == null) { com.changyi.fi.core.LogUtil.info(this.getClass(), \"No external API available\"); return externalList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2135/buggy-version/src.main.java.com.changyi.fi.component.enterprise.service.EnterpriseServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ffe999d262a763690d951668576943a82ac87a2e", "Url": "https://api.github.com/repos/finley007/Suishoushu", "Date": "2017-10-16T15:55:20Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(scanner.hasNext())) { throw new java.lang.IllegalArgumentException(\"Insufficient number of tokens to jump over\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3231/buggy-version/src.main.java.de.strullerbaumann.visualee.examiner.Examiner.java", "BodyUseAPI": [], "Fixed commit": "dac25c0e6434ee57d29c8ec6b06fcd29cf48f439", "Url": "https://api.github.com/repos/emopers/visualee", "Date": "2015-09-25T22:05:33Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Parcel.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((index >= 0) && (index < (PlayingBean.STATE.values().length))) bean.setState(PlayingBean.STATE.values()[index]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5861/buggy-version/de.neo.smarthome.mobile.deneosmarthomemobile.src.main.java.de.neo.smarthome.mobile.util.ParcelableWebBeans.java", "BodyUseAPI": ["de.neo.smarthome.mobile.api.PlayingBean.setState(PlayingBean.STATE.values()[index])"], "Fixed commit": "9e81bc4bd32b7eeca4e6cb9997d9f6571700271f", "Url": "https://api.github.com/repos/dabastynator/SmartHome", "Date": "2017-10-23T18:50:12Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((jsonData.length()) < 1) { okhttp3.OkHttpClient client = new okhttp3.OkHttpClient(); okhttp3.Request request = new okhttp3.Request.Builder().url(\"https://www.firebox.com/product/info/\".concat(productId.toString())).build(); okhttp3.Response responses = client.newCall(request).execute(); jsonData = responses.body().string(); android.preference.PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).edit().putString(preferencesProductInfoKey, jsonData).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2825/buggy-version/app.src.main.java.com.firebox.androidapp.activity.ActivityProduct.java", "BodyUseAPI": [], "Fixed commit": "3651c9905e317f48114008d12abc0ab9def4d704", "Url": "https://api.github.com/repos/salvocanna/android-nothing-new-here", "Date": "2016-10-03T21:54:46Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskList.contains(task)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1180/buggy-version/TaskManager.src.main.java.taskManager.model.StageModel.java", "BodyUseAPI": [], "Fixed commit": "c4f5e6a80a90a616898126b7a02aa662a72f06de", "Url": "https://api.github.com/repos/slash-slash-no-comment-WPI-cs3733/wpi-suite", "Date": "2014-11-24T19:40:38Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_listener) != null) { m_listener.connectionLost(connection.getDestinationNodeID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7107/buggy-version/src.de.hhu.bsinfo.dxnet.nio.NIOConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "6c6b3c4dc4a932a45641dd835d63a0ba393a053c", "Url": "https://api.github.com/repos/hhu-bsinfo/dxram", "Date": "2017-11-30T14:14:09Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_listener) != null) { m_listener.connectionLost(p_connection.getDestinationNodeID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7107/buggy-version/src.de.hhu.bsinfo.dxnet.ib.IBConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "6c6b3c4dc4a932a45641dd835d63a0ba393a053c", "Url": "https://api.github.com/repos/hhu-bsinfo/dxram", "Date": "2017-11-30T14:14:09Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mule.tools.maven.plugin.mule.arm.ArmApi.findApplication(java.lang.String,org.mule.tools.maven.plugin.mule.TargetType,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (applicationId == null) { java.lang.String appNotFoundMessage = \"Application %s does not exist on %s %s.\"; throw new javax.ws.rs.NotFoundException(java.lang.String.format(appNotFoundMessage, appName, targetType.toString(), target)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7550/buggy-version/src.main.java.org.mule.tools.maven.plugin.mule.arm.ArmApi.java", "BodyUseAPI": [], "Fixed commit": "5eb70d4834341a15566082e6da35d26a9ec65914", "Url": "https://api.github.com/repos/mulesoft/mule-maven-plugin", "Date": "2016-08-25T19:50:28Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minesweeperpackage.MineSweeperGui.mineFlag) { board[randRow][randCol].setIcon(mine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7209/buggy-version/src.minesweeperpackage.MineSweeperGui.java", "BodyUseAPI": [], "Fixed commit": "d1542ae978612a850f6cc35ff86b4b7810a5de24", "Url": "https://api.github.com/repos/AdamStew/CIS-350-Term-Project", "Date": "2016-11-10T22:33:55Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(new java.lang.Double(otherObj.toString()).equals(new java.lang.Double(obj.toString())))) { isEqual = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3693/buggy-version/src.main.java.com.duggan.workflow.server.dao.hibernate.DocValues.java", "BodyUseAPI": [], "Fixed commit": "ab379cb639cc4b69f783a493349de2d6a414ff72", "Url": "https://api.github.com/repos/duggankimani/WIRA", "Date": "2016-10-05T05:51:49Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((view.getRootView()) instanceof android.widget.RelativeLayout) { layoutParams = ((android.widget.RelativeLayout.LayoutParams) (view.getRootView().getLayoutParams())); }else { relativeLayout = new android.widget.RelativeLayout(ctx); layoutParams = new android.widget.RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/656/buggy-version/parx.src.main.java.com.jediburrell.parx.Parx.java", "BodyUseAPI": ["view.getRootView().getLayoutParams()", "android.view.View.getRootView()"], "Fixed commit": "3b957445a797d50e96c9285bf21d794e50c50482", "Url": "https://api.github.com/repos/JediBurrell/Parx", "Date": "2017-03-28T00:42:11Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasRole(Role.INSTANCE.ADMIN))) { return getGroup().getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8789/buggy-version/src.main.java.com.ren.user.User.java", "BodyUseAPI": [], "Fixed commit": "82c48ddb9cdcb6950f183f0d918b6188335a92ce", "Url": "https://api.github.com/repos/rentius2407/springboot-security-app", "Date": "2016-08-31T11:00:52Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isVisible())) { printDebug((\"Hiding \" + (parseString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4885/buggy-version/src.com.jpii.navalbattle.gui.Window.java", "BodyUseAPI": [], "Fixed commit": "24d4cbfa052288ee54cfa4e4e5795a7abc2ec0fb", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2012-11-20T21:02:25Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(world.isAirBlock(pos.offset(side)))) { return net.minecraft.util.EnumActionResult.SUCCESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6884/buggy-version/src.main.java.romelo333.notenoughwands.Items.IlluminationWand.java", "BodyUseAPI": [], "Fixed commit": "0eb3cd42c02bb490ab6824951a744ae29cea38cc", "Url": "https://api.github.com/repos/romelo333/notenoughwands1.8.8", "Date": "2016-05-28T03:36:07Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(HW4.stop)) { if (((rs.getStage()) == null) || (!(display))) stage.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6120/buggy-version/HW4.core.src.edu.cs328.GameGUI.java", "BodyUseAPI": [], "Fixed commit": "97a04f0234646c9e4835b463a5d116dcdad9295d", "Url": "https://api.github.com/repos/KnightPickles/CS328", "Date": "2016-03-29T18:51:55Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menuSettingsItems.getVisibility()) == (android.view.View.VISIBLE)) { buttonFill.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6533/buggy-version/app.src.main.java.majapp.bluetoothpaint.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ecce65c1b18140f66ebf65857a42a16d507d83ee", "Url": "https://api.github.com/repos/xmatakt/BTPaint", "Date": "2017-11-21T01:59:52Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menuSettingsItems.getVisibility()) == (android.view.View.VISIBLE)) { buttonFill.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6533/buggy-version/app.src.main.java.majapp.bluetoothpaint.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ecce65c1b18140f66ebf65857a42a16d507d83ee", "Url": "https://api.github.com/repos/xmatakt/BTPaint", "Date": "2017-11-21T01:59:52Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menuSettingsItems.getVisibility()) == (android.view.View.VISIBLE)) { buttonFill.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6533/buggy-version/app.src.main.java.majapp.bluetoothpaint.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ecce65c1b18140f66ebf65857a42a16d507d83ee", "Url": "https://api.github.com/repos/xmatakt/BTPaint", "Date": "2017-11-21T01:59:52Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menuSettingsItems.getVisibility()) == (android.view.View.VISIBLE)) { buttonFill.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6533/buggy-version/app.src.main.java.majapp.bluetoothpaint.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ecce65c1b18140f66ebf65857a42a16d507d83ee", "Url": "https://api.github.com/repos/xmatakt/BTPaint", "Date": "2017-11-21T01:59:52Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (entityManager != null) { entityManager.close(); session.removeAttribute(org.traccar.web.server.model.DataServiceImpl.ATTRIBUTE_ENTITYMANAGER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4970/buggy-version/src.main.java.org.traccar.web.server.model.DataServiceImpl.java", "BodyUseAPI": ["javax.persistence.EntityManager.close()"], "Fixed commit": "fbf0df51b386550fee492bb67ba51a465701039f", "Url": "https://api.github.com/repos/vitalidze/traccar-web", "Date": "2014-08-06T21:59:16Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((getEditorInput()) instanceof org.eclipse.ui.part.FileEditorInput)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8415/buggy-version/src.smalleditor.editors.common.ACommonEditor.java", "BodyUseAPI": [], "Fixed commit": "3c91c4bd1f9e9dc9b467ae4b06a57d84b52d0776", "Url": "https://api.github.com/repos/ben8p/eclipse-plugin-smallEditor", "Date": "2015-02-03T09:43:29Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputLine.contains(\"<span\")) { s = s.substring(((s.indexOf(\"we-imageafter__text\")) + 22)); s = s.substring(0, s.indexOf(\"</span>\")); inputLine = in.readLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5342/buggy-version/src.classes.Worker.java", "BodyUseAPI": [], "Fixed commit": "98294db1d7b662fa9792f3e4b375e53d99640eab", "Url": "https://api.github.com/repos/pizzaboy314/iTunes-tracklist-parser", "Date": "2017-08-10T03:37:25Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputLine.contains(\"<img\")) { inputLine = in.readLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5342/buggy-version/src.classes.Worker.java", "BodyUseAPI": [], "Fixed commit": "98294db1d7b662fa9792f3e4b375e53d99640eab", "Url": "https://api.github.com/repos/pizzaboy314/iTunes-tracklist-parser", "Date": "2017-08-10T03:37:25Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stack.hasTagCompound())) setNewTagCompound(stack);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/225/buggy-version/src.main.java.me.poke.xpplus.items.cards.ItemSpeedCard.java", "BodyUseAPI": ["me.poke.xpplus.items.cards.ItemSpeedCard.setNewTagCompound(net.minecraft.item.ItemStack)"], "Fixed commit": "28d24ed45e017010481a7255011de3ddeec87581", "Url": "https://api.github.com/repos/Poke1650/XP-Plus", "Date": "2017-03-28T16:13:01Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stack.hasTagCompound())) setNewTagCompound(stack);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/225/buggy-version/src.main.java.me.poke.xpplus.items.cards.ItemResistanceCard.java", "BodyUseAPI": ["me.poke.xpplus.items.cards.ItemResistanceCard.setNewTagCompound(net.minecraft.item.ItemStack)"], "Fixed commit": "28d24ed45e017010481a7255011de3ddeec87581", "Url": "https://api.github.com/repos/Poke1650/XP-Plus", "Date": "2017-03-28T16:13:01Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stack.hasTagCompound())) setNewTagCompound(stack);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/225/buggy-version/src.main.java.me.poke.xpplus.items.cards.ItemStrengthCard.java", "BodyUseAPI": ["me.poke.xpplus.items.cards.ItemStrengthCard.setNewTagCompound(net.minecraft.item.ItemStack)"], "Fixed commit": "28d24ed45e017010481a7255011de3ddeec87581", "Url": "https://api.github.com/repos/Poke1650/XP-Plus", "Date": "2017-03-28T16:13:01Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stack.hasTagCompound())) setNewTagCompound(stack);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/225/buggy-version/src.main.java.me.poke.xpplus.items.cards.ItemHasteCard.java", "BodyUseAPI": ["me.poke.xpplus.items.cards.ItemHasteCard.setNewTagCompound(net.minecraft.item.ItemStack)"], "Fixed commit": "28d24ed45e017010481a7255011de3ddeec87581", "Url": "https://api.github.com/repos/Poke1650/XP-Plus", "Date": "2017-03-28T16:13:01Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEditMode)) { labelCurrentMode.setText(getSelectedTabName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2466/buggy-version/src.main.ui.RootLayoutController.java", "BodyUseAPI": [], "Fixed commit": "07dd2126892f01da052a78a35d0bc29f9e561ba7", "Url": "https://api.github.com/repos/cs2103jan2016-f13-1j/main", "Date": "2016-03-20T16:52:12Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.worldObj.isRemote)) { this.dropBuggyAsItem(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1099/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.entities.EntityBuggy.java", "BodyUseAPI": [], "Fixed commit": "d75421642efe03a24ab26883d7ec32ff13d2e277", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2015-10-30T18:24:06Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (o == null) { this.json = new org.json.JSONObject(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7387/buggy-version/sources.appsgate-project.communication-components.EHMIProxySpec.src.main.java.appsgate.lig.ehmi.spec.GrammarDescription.java", "BodyUseAPI": [], "Fixed commit": "555a9fecc1b3f86d939826dcdd7b6dc631aec466", "Url": "https://api.github.com/repos/appsgate2015/appsgate", "Date": "2014-08-08T17:43:38Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getNativeEvent()) != null) { targetElement = event.getNativeEvent().getEventTarget().<com.google.gwt.user.client.Element>cast(); }else { targetElement = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4670/buggy-version/src.main.java.com.googlecode.mgwt.dom.client.recognizer.TapRecognizer.java", "BodyUseAPI": ["com.googlecode.mgwt.dom.client.event.touch.TouchStartEvent.getNativeEvent()", "event.getNativeEvent().getEventTarget()", "event.getNativeEvent().getEventTarget().cast()"], "Fixed commit": "419ffa19f435a0adaa855ba5703687a5b174294d", "Url": "https://api.github.com/repos/manolo/mgwt", "Date": "2012-08-27T16:20:18Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (altFilePath.toFile().exists()) { return altFilePath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3515/buggy-version/main.plugins.org.talend.designer.camel.resource.src.org.talend.designer.camel.resource.handler.RouteResourceImportHandler.java", "BodyUseAPI": [], "Fixed commit": "4f1bff606eec3553a648949f97eed51b93dd19ca", "Url": "https://api.github.com/repos/Talend/tesb-studio-se", "Date": "2017-06-27T17:22:18Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(webSocketInitMessage.isCancelled())) { handleHandshake(webSocketInitMessage, wsService); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7023/buggy-version/modules.ballerina-http.src.main.java.org.ballerinalang.net.ws.BallerinaWsServerConnectorListener.java", "BodyUseAPI": ["org.ballerinalang.net.ws.BallerinaWsServerConnectorListener.1.handleHandshake(org.wso2.carbon.transport.http.netty.contract.websocket.WebSocketInitMessage,org.ballerinalang.net.ws.WebSocketService)"], "Fixed commit": "3049b8b778ec865e7f28f5a04f307d69d7b69a31", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2017-10-14T11:22:16Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.length) > 8) { org.openhab.binding.insteonhub.internal.hardware.api.serial.InsteonHubStdMsgFlags flags = new org.openhab.binding.insteonhub.internal.hardware.api.serial.InsteonHubStdMsgFlags(org.openhab.binding.insteonhub.internal.util.InsteonHubByteUtil.byteToUnsignedInt(msg[8])); org.openhab.binding.insteonhub.internal.hardware.api.serial.InsteonHubSerialTransport.logger.debug((\"Flag - Ack: \" + (flags.isAck()))); org.openhab.binding.insteonhub.internal.hardware.api.serial.InsteonHubSerialTransport.logger.debug((\"Flag - Broadcast: \" + (flags.isBroadcast()))); org.openhab.binding.insteonhub.internal.hardware.api.serial.InsteonHubSerialTransport.logger.debug((\"Flag - Extended: \" + (flags.isExtended()))); org.openhab.binding.insteonhub.internal.hardware.api.serial.InsteonHubSerialTransport.logger.debug((\"Flag - Group: \" + (flags.isGroup()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8584/buggy-version/bundles.binding.org.openhab.binding.insteonhub.src.java.org.openhab.binding.insteonhub.internal.hardware.api.serial.InsteonHubSerialTransport.java", "BodyUseAPI": ["org.openhab.binding.insteonhub.internal.util.InsteonHubByteUtil.byteToUnsignedInt(byte)"], "Fixed commit": "3d104508c4ba58c74ec12cdfe55c678961fa2e21", "Url": "https://api.github.com/repos/gregfinley/openhab", "Date": "2014-03-13T00:20:58Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.bukkit.Bukkit.getServer()) == null) || ((org.bukkit.Bukkit.getServer().getClass().getPackage()) == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3629/buggy-version/src.main.java.com.github.shynixn.petblocks.business.bukkit.nms.VersionSupport.java", "BodyUseAPI": [], "Fixed commit": "8e4cf8ec40584658f8b5284ac6488b8714d7420e", "Url": "https://api.github.com/repos/Shynixn/PetBlocks", "Date": "2017-08-27T10:27:16Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (systemId == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/159/buggy-version/src.com.xmlcalabash.util.XProcURIResolver.java", "BodyUseAPI": [], "Fixed commit": "563a18608f6eae2611ab416588292fb137e21bfb", "Url": "https://api.github.com/repos/ndw/xmlcalabash1", "Date": "2013-02-14T09:13:12Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((se.chalmers.TDA367.group13.view.LevelMenuItem) (menu.getSelected())).getLevel()) <= (se.chalmers.TDA367.group13.util.Stats.getInstance().getHighestLevel())) { ((se.chalmers.TDA367.group13.controller.GameStateController) (sbg)).setLevel(((se.chalmers.TDA367.group13.view.LevelMenuItem) (menu.getSelected())).getLevel()); sbg.enterState(menu.getSelected().getID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7677/buggy-version/src.main.java.se.chalmers.TDA367.group13.controller.LevelState.java", "BodyUseAPI": ["((se.chalmers.TDA367.group13.view.LevelMenuItem) (menu.getSelected())).getLevel()", "org.newdawn.slick.state.StateBasedGame.enterState(menu.getSelected().getID())", "menu.getSelected().getID()", "se.chalmers.TDA367.group13.view.MenuView.getSelected()", "se.chalmers.TDA367.group13.view.MenuView.getSelected()", "org.newdawn.slick.state.StateBasedGame.setLevel(((se.chalmers.TDA367.group13.view.LevelMenuItem) (menu.getSelected())).getLevel())"], "Fixed commit": "55b3a022e5be2ffa9ec194680c53fa17e01fb84d", "Url": "https://api.github.com/repos/CognitiveZebra/MachoDude", "Date": "2014-05-24T12:03:35Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((se.chalmers.TDA367.group13.view.LevelMenuItem) (item)).getLevel()) <= (se.chalmers.TDA367.group13.util.Stats.getInstance().getHighestLevel())) { ((se.chalmers.TDA367.group13.controller.GameStateController) (sbg)).setLevel(((se.chalmers.TDA367.group13.view.LevelMenuItem) (item)).getLevel()); sbg.enterState(item.getID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7677/buggy-version/src.main.java.se.chalmers.TDA367.group13.controller.LevelState.java", "BodyUseAPI": ["org.newdawn.slick.state.StateBasedGame.setLevel(((se.chalmers.TDA367.group13.view.LevelMenuItem) (item)).getLevel())", "se.chalmers.TDA367.group13.view.MenuItem.getLevel()"], "Fixed commit": "55b3a022e5be2ffa9ec194680c53fa17e01fb84d", "Url": "https://api.github.com/repos/CognitiveZebra/MachoDude", "Date": "2014-05-24T12:03:35Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (callingActivity.equals(\"CP\")) { if ((img.parent().hasClass(\"video\")) || (img.parent().hasClass(\"hand_matchup\"))) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6133/buggy-version/src.de.pokernews.helper.GetUrlsTask.java", "BodyUseAPI": [], "Fixed commit": "4e16bd565b9cdab29885cac8669c4c1f0c843dcd", "Url": "https://api.github.com/repos/MaxBatt/PokerNews", "Date": "2013-09-18T22:32:38Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (callingActivity.equals(\"CP\")) { if ((link.parent().previousElementSibling().hasClass(\"video\")) || (link.parent().previousElementSibling().hasClass(\"hand_matchup\"))) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6133/buggy-version/src.de.pokernews.helper.GetUrlsTask.java", "BodyUseAPI": [], "Fixed commit": "4e16bd565b9cdab29885cac8669c4c1f0c843dcd", "Url": "https://api.github.com/repos/MaxBatt/PokerNews", "Date": "2013-09-18T22:32:38Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filteredCursor) == null) { menu.findItem(R.id.menu_clear).setEnabled(false); menu.findItem(R.id.menu_export).setEnabled(false); menu.findItem(R.id.menu_reverse).setEnabled(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1592/buggy-version/src.com.darshancomputing.BatteryIndicatorPro.LogViewFragment.java", "BodyUseAPI": [], "Fixed commit": "60d5da973403daaf66a02fa5de56975fa5051caa", "Url": "https://api.github.com/repos/darshan-/Battery-Indicator-Pro", "Date": "2015-04-05T23:48:24Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sms.getContact().equals(recipientName)) { messages.add(0, sms); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4770/buggy-version/app.src.main.java.com.codepath.finalproject.MessagingActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.codepath.finalproject.SMS>.add(int,com.codepath.finalproject.SMS)"], "Fixed commit": "ab614bd92f13419535e5b2727cb8e25bc825d6e0", "Url": "https://api.github.com/repos/bcsam/FinalProject2.0", "Date": "2017-08-03T23:49:32Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ticksExisted) == 1) { sendEntitySyncPacket(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7770/buggy-version/src.main.java.com.blogspot.jabelarminecraft.wildanimals.entities.birdsofprey.EntityBirdOfPrey.java", "BodyUseAPI": [], "Fixed commit": "efc3c5072b6bab082e817d979e12b541d55fe107", "Url": "https://api.github.com/repos/jabelar/WildAnimalsPlus-1.7.10", "Date": "2015-05-09T18:47:29Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prefs.getBoolean(\"force-portrait\", true)) { if ((android.os.Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR2)) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_USER_PORTRAIT); }else { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT); } }else { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_USER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8661/buggy-version/app.src.main.java.fr.neamar.kiss.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "f4f735a37e48aed25a623ab7c5677c4c86cb3886", "Url": "https://api.github.com/repos/Neamar/KISS", "Date": "2016-12-01T21:14:36Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isNumeric(resourceId))) { return resourceId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6527/buggy-version/server.src.com.cloud.tags.TaggedResourceManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "838a1a8476cfb4308103b3797a281f843e208d38", "Url": "https://api.github.com/repos/SungardAS-CloudDevelopers/cloudstack", "Date": "2014-08-18T14:00:22Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isNumeric(resourceId))) { throw new com.cloud.exception.InvalidParameterValueException((((\"Unable to find resource by uuid \" + resourceId) + \" and type \") + resourceType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6527/buggy-version/server.src.com.cloud.tags.TaggedResourceManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "838a1a8476cfb4308103b3797a281f843e208d38", "Url": "https://api.github.com/repos/SungardAS-CloudDevelopers/cloudstack", "Date": "2014-08-18T14:00:22Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileId) != null) { Drive.DriveApi.fetchDriveId(getGoogleApiClient(), fileId.getResourceId()).setResultCallback(deleteFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8966/buggy-version/app.src.main.java.br.com.inmypocket.activity.ActivityMain.java", "BodyUseAPI": [], "Fixed commit": "f31d6506302a1f879484c250b5cf1beb0c9f8eb3", "Url": "https://api.github.com/repos/kevinmelo/InMyPocket", "Date": "2016-02-24T19:33:01Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.ICE_CREAM_SANDWICH)) { mSelectorPosition = ((java.lang.Integer) (com.diegocarloslima.fgelv.lib.ReflectionUtils.getFieldValue(android.widget.AbsListView.class, \"mSelectorPosition\", this))); }else { mSelectorPosition = ((java.lang.Integer) (com.diegocarloslima.fgelv.lib.ReflectionUtils.getFieldValue(android.widget.AbsListView.class, \"mMotionPosition\", this))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5081/buggy-version/FloatingGroupExpandableListView.src.com.diegocarloslima.fgelv.lib.FloatingGroupExpandableListView.java", "BodyUseAPI": [], "Fixed commit": "253fbd791629c605568ae8d7fa050812cfd12ac8", "Url": "https://api.github.com/repos/diegocarloslima/FloatingGroupExpandableListView", "Date": "2014-03-15T19:38:08Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.ICE_CREAM_SANDWICH)) { final int floatingGroupFlatPosition = getFlatListPosition(getPackedPositionForGroup(mFloatingGroupPosition)); com.diegocarloslima.fgelv.lib.ReflectionUtils.invokeMethod(android.widget.AbsListView.class, \"positionSelector\", new java.lang.Class<?>[]{ int.class, android.view.View.class }, this, floatingGroupFlatPosition, mFloatingGroupView); }else { com.diegocarloslima.fgelv.lib.ReflectionUtils.invokeMethod(android.widget.AbsListView.class, \"positionSelector\", new java.lang.Class<?>[]{ android.view.View.class }, this, mFloatingGroupView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5081/buggy-version/FloatingGroupExpandableListView.src.com.diegocarloslima.fgelv.lib.FloatingGroupExpandableListView.java", "BodyUseAPI": [], "Fixed commit": "253fbd791629c605568ae8d7fa050812cfd12ac8", "Url": "https://api.github.com/repos/diegocarloslima/FloatingGroupExpandableListView", "Date": "2014-03-15T19:38:08Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((multimodalDialog) != null) && ((multimodalDialog.multimodalPanel) != null)) { multimodalDialog.multimodalPanel.addUnicodeKeyboardListener(editor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5198/buggy-version/src.org.exmaralda.partitureditor.partiture.PartitureTableWithActions.java", "BodyUseAPI": [], "Fixed commit": "d5ff9974eb0da8754c5dde8c816d41072620bf07", "Url": "https://api.github.com/repos/EXMARaLDA/exmaralda", "Date": "2017-05-09T18:56:21Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.silverpeas.util.StringUtil.isDefined(request.getParameter(\"role\"))) role = request.getParameter(\"role\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2171/buggy-version/war-core.src.main.java.com.silverpeas.workflowdesigner.servlets.WorkflowDesignerRequestRouter.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "535b0faa236038292b22c4c488751c14d7c9cc1d", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Core", "Date": "2015-06-12T16:02:56Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["workflowDesignerSC.getProcessModel().getPresentation().getColumnsByRole(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameterValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((columns.getColumn(astrColumnNames[i])) == null) { column = columns.createColumn(); column.setItem(workflowDesignerSC.getProcessModel().getDataFolder().getItem(astrColumnNames[i])); columns.addColumn(column); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2171/buggy-version/war-core.src.main.java.com.silverpeas.workflowdesigner.servlets.WorkflowDesignerRequestRouter.java", "BodyUseAPI": ["com.silverpeas.workflow.api.model.Columns.createColumn()", "com.silverpeas.workflow.api.model.Column.setItem(workflowDesignerSC.getProcessModel().getDataFolder().getItem(astrColumnNames[i]))", "com.silverpeas.workflow.api.model.Columns.addColumn(com.silverpeas.workflow.api.model.Column)", "workflowDesignerSC.getProcessModel().getDataFolder().getItem(java.lang.String)"], "Fixed commit": "535b0faa236038292b22c4c488751c14d7c9cc1d", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Core", "Date": "2015-06-12T16:02:56Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sessionm.api.geofence.GeofenceManager.isStarted(getApplicationContext())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (geofenceServiceIsStarted) com.sessionm.api.geofence.GeofenceManager.startGeofenceService(getApplicationContext(), null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5971/buggy-version/SMP_Geofence.src.main.java.com.sessionm.smp_geofence.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "77db2231ad34a27108d5da76f8545464fd9591a0", "Url": "https://api.github.com/repos/sessionm/android-smp-example", "Date": "2017-01-18T20:50:17Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((roles) == null) || ((roles.size()) < 1)) { return org.springframework.security.core.authority.AuthorityUtils.commaSeparatedStringToAuthorityList(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/160/buggy-version/src.main.java.org.wsy.spring.security.userdetails.MyUserDetails.java", "BodyUseAPI": [], "Fixed commit": "9c363fc427be874f341b1da0255d6ff0ccd89408", "Url": "https://api.github.com/repos/WengShengyuan/SpringBootStarter", "Date": "2016-02-25T07:11:00Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.morecraft.dev.settler.domain.User.getAvatar()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileObject == null) { return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.OK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/407/buggy-version/src.main.java.pl.morecraft.dev.settler.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "05c0e3021e771832d10f8201dd4bf2ffe0514641", "Url": "https://api.github.com/repos/EmhyrVarEmreis/Settler", "Date": "2016-12-21T23:37:48Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (user == null) { return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/407/buggy-version/src.main.java.pl.morecraft.dev.settler.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "05c0e3021e771832d10f8201dd4bf2ffe0514641", "Url": "https://api.github.com/repos/EmhyrVarEmreis/Settler", "Date": "2016-12-21T23:37:48Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isActive()) { epollInReady(); }else { closeOnRead(pipeline()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3185/buggy-version/transport-native-epoll.src.main.java.io.netty.channel.epoll.EpollSocketChannel.java", "BodyUseAPI": [], "Fixed commit": "34e11d2e16eaaafa5f22b9fab287fe6486cdebb0", "Url": "https://api.github.com/repos/xkr47/netty", "Date": "2014-02-19T10:57:41Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((nextStreamIndex.get()) < (encoding + 1)) { nextStreamIndex.set((encoding + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1133/buggy-version/impl.src.main.java.org.ehcache.internal.serialization.CompactJavaSerializer.java", "BodyUseAPI": [], "Fixed commit": "3df8649d9c5deb88cba2648bf5cfd92d863950b7", "Url": "https://api.github.com/repos/ehcache/ehcache3", "Date": "2016-06-14T20:50:14Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tokenStream.getAttribute(com.github.rnewson.couchdb.lucene.analysis.SubtypeAttribute.class).subtype()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (subtype == null) subtype = \"none\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7564/buggy-version/src.main.java.com.github.rnewson.couchdb.lucene.DatabaseIndexer.java", "BodyUseAPI": [], "Fixed commit": "5fa54fe8667a76742ab7b8517257bd1eae009af3", "Url": "https://api.github.com/repos/sspinc/couchdb-lucene", "Date": "2011-02-10T09:56:28Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vn.bkdn.cntt.repository.TKB_LichHocTheoNgay_SinhVienGhiChuRepository.findByTKB_LichHocTheoNgayIdAndSinhVienId(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tkb_lichHocTheoNgay_sinhVienGhiChu != null) { tkb_lichHocTheoNgay_sinhVienGhiChuRepository.editCalendarStudentNote(editedNote, tkbLichHocTheoNgayId, sinhVienId); }else { tkb_lichHocTheoNgay_sinhVienGhiChu = new vn.bkdn.cntt.entity.TKB_LichHocTheoNgay_SinhVienGhiChu(); tkb_lichHocTheoNgay_sinhVienGhiChu.setTkbLichHocTheoNgay(tkb_lichHocTheoNgayService.findOne(tkbLichHocTheoNgayId)); tkb_lichHocTheoNgay_sinhVienGhiChu.setSinhVien(sinhVienService.findOne(sinhVienId)); tkb_lichHocTheoNgay_sinhVienGhiChu.setSinhVienGhiChu(editedNote); tkb_lichHocTheoNgay_sinhVienGhiChuRepository.save(tkb_lichHocTheoNgay_sinhVienGhiChu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8669/buggy-version/src.main.java.vn.bkdn.cntt.Service.TKB_LichHocTheoNgay_SinhVienGhiChuServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "554f7aca7577b0b8451142301cfde6968bb31be5", "Url": "https://api.github.com/repos/nmtri881994/learningCalendarBackend", "Date": "2017-04-11T06:14:36Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vn.bkdn.cntt.controller.TKB_LichHocTheoNgay_SinhVienGhiChuService.findByTkbLichHocTheoNgayAndSinhVien(int,sinhVien.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tkb_lichHocTheoNgay_sinhVienGhiChu != null) { return tkb_lichHocTheoNgay_sinhVienGhiChu.getSinhVienGhiChu(); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8669/buggy-version/src.main.java.vn.bkdn.cntt.controller.SinhVienController.java", "BodyUseAPI": ["vn.bkdn.cntt.controller.TKB_LichHocTheoNgay_SinhVienGhiChu.getSinhVienGhiChu()"], "Fixed commit": "554f7aca7577b0b8451142301cfde6968bb31be5", "Url": "https://api.github.com/repos/nmtri881994/learningCalendarBackend", "Date": "2017-04-11T06:14:36Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedDirectory) != null) application.UserPreferences.setDirectory(selectedDirectory.getAbsolutePath());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5521/buggy-version/SoundSea.src.application.SettingController.java", "BodyUseAPI": [], "Fixed commit": "66a0e19c3ade3916e17690b5653c9f688ed22ef6", "Url": "https://api.github.com/repos/sacert/SoundSea", "Date": "2016-01-18T13:59:41Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.journee.utils.JournalRecycleViewAdapter.ViewHolderPhoto.1.getLayoutPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((position >= 0) && (position < (mJournalItems.size()))) { photo = ((com.journee.model.Photo) (mJournalItems.get(position))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5150/buggy-version/Journee.app.src.main.java.com.journee.utils.JournalRecycleViewAdapter.java", "BodyUseAPI": ["java.util.List<com.journee.model.Journal_item>.get(int)"], "Fixed commit": "20352ff9e4bb914c0dbcf41a7dc43dd4767c1edc", "Url": "https://api.github.com/repos/alon-itzhaki/tau_workshop_repo", "Date": "2016-07-13T19:35:40Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSnipeSkill(attackSkill)) { for (cfvbaibai.cardfantasy.engine.SkillUseInfo skillUseInfo : defender.getNormalUsableSkills()) { if ((skillUseInfo.getType()) == (cfvbaibai.cardfantasy.data.SkillType.\u7269\u7406\u53cd\u5f39)) { cfvbaibai.cardfantasy.engine.PhysicalReflection.apply(skillUseInfo.getSkill(), this, attacker, defender, result.getDamage()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6160/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.SkillResolver.java", "BodyUseAPI": [], "Fixed commit": "eab60d077fa1edf16a370e0b09cc1ec026f1dca5", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-11-03T15:23:42Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attacker instanceof cfvbaibai.cardfantasy.engine.CardInfo) { cfvbaibai.cardfantasy.engine.OnAttackBlockingResult blockResult = new cfvbaibai.cardfantasy.engine.OnAttackBlockingResult(true, damage); resolver.resolveCounterAttackSkills(((cfvbaibai.cardfantasy.engine.CardInfo) (attacker)), victim, cardSkill, blockResult, damageResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6160/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.skill.Snipe.java", "BodyUseAPI": [], "Fixed commit": "eab60d077fa1edf16a370e0b09cc1ec026f1dca5", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-11-03T15:23:42Z"},
{"Line": "=>1141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Sirius.navigator.connection.SessionManager.getProxy().executeTask(java.lang.String,java.lang.String,<nulltype>,de.cismet.cids.server.actions.ServerActionParameter,de.cismet.cids.server.actions.ServerActionParameter,de.cismet.cids.server.actions.ServerActionParameter,de.cismet.cids.server.actions.ServerActionParameter,de.cismet.cids.server.actions.ServerActionParameter,de.cismet.cids.server.actions.ServerActionParameter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((result != null) && (!(result.isSuccessfull()))) { res.setSuccessful(false); res.setProtokoll(result.getProtokoll()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7652/buggy-version/src.main.java.de.cismet.cids.custom.nas.PointNumberDialog.java", "BodyUseAPI": ["de.cismet.cids.custom.utils.pointnumberreservation.PointNumberReservationRequest.getProtokoll()", "de.cismet.cids.custom.utils.pointnumberreservation.PointNumberReservationRequest.setProtokoll(result.getProtokoll())"], "Fixed commit": "e256e6fdd53a15295eea7ff717cdbced51b9f255", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2013-11-18T13:23:33Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position != 0) { selectedCategory = parent.getItemAtPosition(position).toString(); android.widget.Toast.makeText(parent.getContext(), (\"Selected: \" + (selectedCategory)), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5920/buggy-version/app.src.main.java.yiwejeje.staticrecallapp.Activity.StoreLocationActivity.java", "BodyUseAPI": ["android.widget.AdapterView<?>.getItemAtPosition(int)", "parent.getItemAtPosition(position).toString()"], "Fixed commit": "db83f27c76f2b78951ded53f16697d7f83d9387c", "Url": "https://api.github.com/repos/jennisuever/static_recall", "Date": "2016-04-18T18:04:01Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dfh.grammar.Rule.description(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (d.startsWith(\"{\")) b.append('['); else b.append(\"[ \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8796/buggy-version/src.dfh.grammar.RepetitionRule.java", "BodyUseAPI": [], "Fixed commit": "4be6f37a1f67cfa47565d60633716a98467cdc3e", "Url": "https://api.github.com/repos/dfhoughton/Grammar", "Date": "2011-12-29T16:17:28Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { net.cchevalier.adnd.spotifystreamer.fragments.TracksFragment tracksFragment = new net.cchevalier.adnd.spotifystreamer.fragments.TracksFragment(); tracksFragment.setArguments(arguments); getSupportFragmentManager().beginTransaction().replace(R.id.container_fragment_tracks, tracksFragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5031/buggy-version/app.src.main.java.net.cchevalier.adnd.spotifystreamer.TracksActivity.java", "BodyUseAPI": [], "Fixed commit": "a126e498f07a68e4db96c0f2e1fb6a1403e87b1e", "Url": "https://api.github.com/repos/cchevalier/adn1-spotify-streamer", "Date": "2015-10-20T07:30:12Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response) != null) { renderCustomHeaders(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1846/buggy-version/rapidoid-http-fast.src.main.java.org.rapidoid.http.fast.ReqImpl.java", "BodyUseAPI": [], "Fixed commit": "e50236c4182e5ebe6479a8934cc6ac95f1342cfb", "Url": "https://api.github.com/repos/marjan1/rapidoid", "Date": "2015-12-09T00:17:59Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rootType) == (ROOT_STEP_DEFINITIONS)) { getExamplesElement().hide(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8781/buggy-version/src.java.com.trollsahead.qcumberless.gui.elements.ScenarioOutlineElement.java", "BodyUseAPI": [], "Fixed commit": "277a0ac30b98fc416d4b4399eea009c6cfd76ce6", "Url": "https://api.github.com/repos/black-knight/Q-Cumberless-Testing", "Date": "2012-06-12T13:41:48Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getName()) == null) { org.apache.tamaya.core.propertysource.SimplePropertySource.LOG.warning(((\"No Property Source name found for \" + (this)) + \", ommitting source meta-entries.\")); }else { properties.put(((\"_\" + key) + \".source\"), getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4413/buggy-version/code.core.src.main.java.org.apache.tamaya.core.propertysource.SimplePropertySource.java", "BodyUseAPI": [], "Fixed commit": "20581aa365d2780851622f8730651e180fbef848", "Url": "https://api.github.com/repos/apache/incubator-tamaya", "Date": "2016-04-03T23:29:45Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.jackson.JsonNode.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(authorNode.get(\"name\").isNull())) && (!(authorNode.get(\"emailAddress\").isNull()))) { authorName = authorNode.get(\"name\").asText(); authorEmail = authorNode.get(\"emailAddress\").asText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6642/buggy-version/src.main.java.Adaptors.JIRA.JiraAdapterMain.java", "BodyUseAPI": ["authorNode.get(\"name\").asText()", "org.codehaus.jackson.JsonNode.get(java.lang.String)", "authorNode.get(\"emailAddress\").asText()", "org.codehaus.jackson.JsonNode.get(java.lang.String)"], "Fixed commit": "2867c161c55fa9e94e1a6eb06ba820d38c57cfd4", "Url": "https://api.github.com/repos/ilgun/unifiedissuetrackers", "Date": "2015-01-11T21:28:10Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tag.getKey().toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"railway\".equals(key)) { if ((((((((\"rail\".equals(value)) || (\"tram\".equals(value))) || (\"subway\".equals(value))) || (\"monorail\".equals(value))) || (\"narrow_gauge\".equals(value))) || (\"preserved\".equals(value))) || (\"light_rail\".equals(value))) || (\"construction\".equals(value))) { return false; } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7044/buggy-version/mapsforge-map-writer.src.main.java.org.mapsforge.map.writer.util.OSMUtils.java", "BodyUseAPI": [], "Fixed commit": "5c759b2f3c76dad61447fcc8019966bc12730485", "Url": "https://api.github.com/repos/mapsforge/mapsforge", "Date": "2014-11-07T16:00:16Z"},
{"Line": "=>2203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.tools.sourceformatter.JavaSourceProcessor.getLineLength(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((((trimmedLine.length()) + previousLineLength) <= (com.liferay.portal.tools.sourceformatter.JavaSourceProcessor._MAX_LINE_LENGTH)) && (previousLine.endsWith(StringPool.PERIOD))) && (line.endsWith(StringPool.SEMICOLON))) { return getCombinedLinesContent(content, fileName, line, trimmedLine, lineLength, lineCount, previousLine, null, tabDiff, false, false, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3180/buggy-version/portal-impl.src.com.liferay.portal.tools.sourceformatter.JavaSourceProcessor.java", "BodyUseAPI": ["com.liferay.portal.tools.sourceformatter.JavaSourceProcessor.getCombinedLinesContent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String,<nulltype>,int,boolean,boolean,boolean)"], "Fixed commit": "3d505a376715d87e54fe77d1cb4b1e546343571b", "Url": "https://api.github.com/repos/hhuijser/liferay-portal", "Date": "2014-10-21T03:51:16Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.snaker.engine.helper.StringHelper.isEmpty(actorId)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6482/buggy-version/snaker-core.src.main.java.org.snaker.engine.access.AbstractDBAccess.java", "BodyUseAPI": [], "Fixed commit": "64f7dd0c4a51f7a8f213f539de718936df57ee66", "Url": "https://api.github.com/repos/snakerflow/snakerflow", "Date": "2014-06-14T13:31:14Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getActorIds()) != null) { for (java.lang.String actorId : task.getActorIds()) { if (org.snaker.engine.helper.StringHelper.isEmpty(actorId)) continue; saveOrUpdate(buildMap(org.snaker.engine.access.AbstractDBAccess.TASK_ACTOR_HISTORY_INSERT, new java.lang.Object[]{ task.getId(), actorId }, new int[]{ java.sql.Types.VARCHAR, java.sql.Types.VARCHAR })); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6482/buggy-version/snaker-core.src.main.java.org.snaker.engine.access.AbstractDBAccess.java", "BodyUseAPI": ["org.snaker.engine.access.AbstractDBAccess.buildMap(java.lang.String,java.lang.Object[],int[])", "org.snaker.engine.entity.HistoryTask.getId()", "org.snaker.engine.entity.HistoryTask.getActorIds()", "org.snaker.engine.access.AbstractDBAccess.saveOrUpdate(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "64f7dd0c4a51f7a8f213f539de718936df57ee66", "Url": "https://api.github.com/repos/snakerflow/snakerflow", "Date": "2014-06-14T13:31:14Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.snaker.engine.helper.StringHelper.isEmpty(actorId)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6482/buggy-version/snaker-core.src.main.java.org.snaker.engine.access.AbstractDBAccess.java", "BodyUseAPI": [], "Fixed commit": "64f7dd0c4a51f7a8f213f539de718936df57ee66", "Url": "https://api.github.com/repos/snakerflow/snakerflow", "Date": "2014-06-14T13:31:14Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getActorIds()) != null) { for (java.lang.String actorId : task.getActorIds()) { if (org.snaker.engine.helper.StringHelper.isEmpty(actorId)) continue; org.snaker.engine.entity.HistoryTaskActor hist = new org.snaker.engine.entity.HistoryTaskActor(); hist.setActorId(actorId); hist.setTaskId(task.getId()); saveOrUpdate(buildMap(hist, org.snaker.engine.access.AbstractDBAccess.SAVE)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6482/buggy-version/snaker-core.src.main.java.org.snaker.engine.access.AbstractDBAccess.java", "BodyUseAPI": ["org.snaker.engine.entity.HistoryTaskActor.setTaskId(task.getId())", "org.snaker.engine.entity.HistoryTask.getId()", "org.snaker.engine.entity.HistoryTask.getActorIds()"], "Fixed commit": "64f7dd0c4a51f7a8f213f539de718936df57ee66", "Url": "https://api.github.com/repos/snakerflow/snakerflow", "Date": "2014-06-14T13:31:14Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (put) org.eclipse.cmf.occi.core.util.OcciKindResolver.namespace2extension.put(metamodelURI, extension);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7288/buggy-version/plugins.org.eclipse.cmf.occi.core.src.org.eclipse.cmf.occi.core.util.OcciKindResolver.java", "BodyUseAPI": [], "Fixed commit": "159c3cfd024d599c22dfbef1bc32be3e6bba5bc8", "Url": "https://api.github.com/repos/occiware/OCCI-Studio", "Date": "2017-05-02T16:05:49Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.deeplearning4j.examples.recurrent.character.melodl4j.PlayMelodyStrings.isDurationChar(melody.charAt(index))) { org.deeplearning4j.examples.recurrent.character.melodl4j.Note note = new org.deeplearning4j.examples.recurrent.character.melodl4j.Note(tick, startNote, velocity, channel); long duration = org.deeplearning4j.examples.recurrent.character.melodl4j.PlayMelodyStrings.getDurationInTicks(melody.charAt(index), resolutionDelta); note.setDuration(duration); ns.add(note); index++; tick += duration; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3500/buggy-version/dl4j-examples.src.main.java.org.deeplearning4j.examples.recurrent.character.melodl4j.PlayMelodyStrings.java", "BodyUseAPI": ["org.deeplearning4j.examples.recurrent.character.melodl4j.PlayMelodyStrings.getDurationInTicks(char,int)", "java.lang.String.charAt(int)"], "Fixed commit": "6561803b53705e9da878503dacb5ad31bb43e306", "Url": "https://api.github.com/repos/deeplearning4j/dl4j-examples", "Date": "2017-04-05T00:21:24Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((nt - t) < 20) || ((nd - d) < 20)) dcorr = d; else dcorr = (((double) (d)) * (nt - t)) / (nd - d);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2354/buggy-version/Projects.java.EhuBio.src.es.ehubio.proteomics.pipeline.FdrCalculator.java", "BodyUseAPI": [], "Fixed commit": "ab18bb58da3d951cf82edc4df9be7098ed9e6a35", "Url": "https://api.github.com/repos/akrogp/EhuBio", "Date": "2016-09-15T13:43:03Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 1) java.lang.System.out.println();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2354/buggy-version/Projects.java.EhuBio.src.es.ehubio.proteomics.pipeline.FdrCalculator.java", "BodyUseAPI": [], "Fixed commit": "ab18bb58da3d951cf82edc4df9be7098ed9e6a35", "Url": "https://api.github.com/repos/akrogp/EhuBio", "Date": "2016-09-15T13:43:03Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gapTime > 1000) || ((mRenderingState.consumingTime) > (mCordonTime2))) { d = (java.lang.Math.max(averageTime, mRenderingState.consumingTime)) + (gapTime / (mFrameUpdateRate)); }else { d = averageTime + (gapTime / (mFrameUpdateRate)); d = java.lang.Math.max(mFrameUpdateRate, d); d = java.lang.Math.min(mCordonTime, d); long a = d - (mLastDeltaTime); if ((((java.lang.Math.abs(a)) < 4) && (d > (mFrameUpdateRate))) && ((mLastDeltaTime) > (mFrameUpdateRate))) { d = mLastDeltaTime; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7272/buggy-version/DanmakuFlameMaster.src.main.java.master.flame.danmaku.controller.DrawHandler.java", "BodyUseAPI": ["java.lang.Math.max(long,mRenderingState.consumingTime)"], "Fixed commit": "6c1bb1ae03f274339bbc0660a80359c2a2f65e84", "Url": "https://api.github.com/repos/xqq/DanmakuFlameMaster-HWACC", "Date": "2015-02-12T03:55:21Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[0].equalsIgnoreCase(\"delete\")) { if ((args.length) >= 2) { java.lang.String code = args[1]; if (couponRegistry.couponExists(code)) { couponRegistry.deleteCoupon(code); return true; }else { sender.sendMessage(((((org.bukkit.ChatColor.DARK_RED) + \"ERROR: The following code, \") + code) + \", does not exsist.\")); sender.sendMessage(((org.bukkit.ChatColor.DARK_RED) + \"Please try again with a valid coupon code.\")); } } }else if (args[0].equalsIgnoreCase(\"help\")) { org.bukkit.ChatColor green = org.bukkit.ChatColor.GREEN; sender.sendMessage((green + \"Welcome to CouponCodes Help Message!\")); sender.sendMessage(\" \"); sender.sendMessage((green + \"Use /coupon create {Code} {Number of items} {item name} to create a coupon.\")); sender.sendMessage((green + \"Use /coupon delete {Code} to delete a coupon.\")); sender.sendMessage((green + \"Use /coupon redeem {Code} to redeem a coupon.\")); sender.sendMessage((((ChatColor.DARK_RED.toString()) + (org.bukkit.ChatColor.BOLD)) + \"WARNING: MAKE SURE TO HAVE OPEN SPACE IN YOUR INVENTORY UPON REDEMTION!\")); }else { player.sendMessage((\"Unknown command argument, \" + (args[0]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3315/buggy-version/src.me.yourmcgeek.coupons.commands.CouponCmd.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "effb37790356e33cce4ce2c25a8f3253ff41e8ad", "Url": "https://api.github.com/repos/YourMCGeek/CouponCodes", "Date": "2016-11-29T23:05:28Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teiid.designer.runtime.preview.PreviewManager.getSourceTranslatorName(org.teiid.designer.vdb.VdbModelEntry)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.teiid.core.designer.util.CoreStringUtil.isEmpty(srcTranslatorName)) || (srcTranslatorName.equalsIgnoreCase(DataSourceConnectionConstants.Translators.LOOPBACK))) { java.lang.String translator = helper.getTranslatorName(modelResource); if ((!(org.teiid.core.designer.util.CoreStringUtil.isEmpty(translator))) && (!(translator.equalsIgnoreCase(DataSourceConnectionConstants.Translators.LOOPBACK)))) { modelEntry.setTranslatorName(0, translator); }else { org.eclipse.datatools.connectivity.IConnectionProfile connectionProfile = helper.getConnectionProfile(modelResource); if (connectionProfile == null) { modelEntry.setTranslatorName(0, DataSourceConnectionConstants.Translators.LOOPBACK); }else { modelEntry.setTranslatorName(0, org.teiid.designer.datatools.JdbcTranslatorHelper.getTranslator(connectionProfile)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6429/buggy-version/plugins.org.teiid.designer.dqp.src.org.teiid.designer.runtime.preview.PreviewManager.java", "BodyUseAPI": [], "Fixed commit": "aa0ce7491eb06b2f3c62727d1d62a09928c633fe", "Url": "https://api.github.com/repos/tejones/teiid-designer", "Date": "2013-04-16T22:49:30Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (new_offer != null) { store_local_db.update_offer(new_offer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7234/buggy-version/app.handlers.handler_general.java", "BodyUseAPI": ["handlers.handler_general.update_offer(handlers.model_offer_for_merge)"], "Fixed commit": "76d04ca9829360c81bfc3cd95ec5d10235eaff90", "Url": "https://api.github.com/repos/indiepocalypse/indie_play_be", "Date": "2015-12-16T12:11:20Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((merge_transaction.offer) != null) { new_offer = new handlers.model_offer_for_merge(merge_transaction.offer.user, merge_transaction.offer.pull_request, merge_transaction.offer.amount_percent, is_active, was_positively_accepted, merge_transaction.offer.date_created, date_accepted); }else { new_offer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7234/buggy-version/app.handlers.handler_general.java", "BodyUseAPI": [], "Fixed commit": "76d04ca9829360c81bfc3cd95ec5d10235eaff90", "Url": "https://api.github.com/repos/indiepocalypse/indie_play_be", "Date": "2015-12-16T12:11:20Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prevValue == 1824) { if (value == 4) { invertSoc = true; } }else if (invertSoc && (value == ((short) (58336)))) { value = 17376; invertSoc = false; }else { invertSoc = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3021/buggy-version/v9t9.v9t9-java.v9t9-machines.ti99.v9t9.machine.ti99.machine.Forth9900MemoryModel.java", "BodyUseAPI": [], "Fixed commit": "4740617a182f9b0b82e8c854dbf1f007a75ef63e", "Url": "https://api.github.com/repos/eswartz/emul", "Date": "2014-07-28T03:01:26Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(textField.getText().isEmpty())) && (!(textField.getText().equals(null)))) { if ((errorPositionInLine == formulaLength) && (!(textField.getText().substring((formulaLength - 1), formulaLength).equals(\" \")))) { textField.setText(((textField.getText()) + \" \")); }else if ((errorPositionInLine == formulaLength) && (textField.getText().substring((formulaLength - 1), formulaLength).equals(\" \"))) { errorPositionInLine--; } hilit.addHighlight(errorPositionInLine, (errorPositionInLine + 1), painter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/665/buggy-version/src.edu.lclark.logic.ButtonPanel.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "javax.swing.JTextField.getText()", "javax.swing.JTextField.setText(java.lang.String)", "javax.swing.JTextField.getText()", "java.lang.String.substring(int,int)", "java.lang.String.equals(java.lang.String)", "javax.swing.JTextField.getText()", "java.lang.String.substring(int,int)"], "Fixed commit": "6d14b0bc4886f8780f4f99b3ea7786114a0efdd5", "Url": "https://api.github.com/repos/PeterDrake/Logic", "Date": "2014-04-03T20:40:09Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datascience.core.base.Data<T>.getObject(object.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (oldObject != null) { oldObject.setEvaluationLabel(object.getEvaluationLabel()); evaluationObjects.add(oldObject); }else { addObject(object); evaluationObjects.add(object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2100/buggy-version/troia-server.src.main.java.com.datascience.core.base.Data.java", "BodyUseAPI": ["java.util.Set<com.datascience.core.base.LObject<T>>.add(com.datascience.core.base.LObject<T>)", "com.datascience.core.base.LObject<T>.setEvaluationLabel(object.getEvaluationLabel())"], "Fixed commit": "fae5911131b98c3acfda8dd71e4114326d4d233d", "Url": "https://api.github.com/repos/ipeirotis/Troia-Server", "Date": "2013-03-18T19:27:23Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datascience.core.base.Data<T>.getObject(object.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (oldObject != null) { oldObject.setGoldLabel(object.getGoldLabel()); goldObjects.add(oldObject); }else { addObjectNoNotify(object); goldObjects.add(object); notifyNewGoldObject(object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2100/buggy-version/troia-server.src.main.java.com.datascience.core.base.Data.java", "BodyUseAPI": ["com.datascience.core.base.LObject<T>.setGoldLabel(object.getGoldLabel())", "java.util.Set<com.datascience.core.base.LObject<T>>.add(com.datascience.core.base.LObject<T>)"], "Fixed commit": "fae5911131b98c3acfda8dd71e4114326d4d233d", "Url": "https://api.github.com/repos/ipeirotis/Troia-Server", "Date": "2013-03-18T19:27:23Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity.getState()) == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5132/buggy-version/persistence.src.main.java.pt.uc.dei.aor.project.persistence.proxy.PositionProxy.java", "BodyUseAPI": [], "Fixed commit": "66f1565aee7dd635cfd97123f277642d7776f48f", "Url": "https://api.github.com/repos/kwakiutlCS/jobapplication", "Date": "2015-09-29T08:07:55Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((editchannel) == null) || (editchannel.equals(\"\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5132/buggy-version/presentation.src.main.java.pt.uc.dei.aor.project.presentation.bean.PublicationChannelBean.java", "BodyUseAPI": [], "Fixed commit": "66f1565aee7dd635cfd97123f277642d7776f48f", "Url": "https://api.github.com/repos/kwakiutlCS/jobapplication", "Date": "2015-09-29T08:07:55Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { dialog.setContentView(R.layout.number_dialog_v21); }else { dialog.setContentView(R.layout.number_dialog); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3448/buggy-version/app.src.main.java.com.andela.gkuti.mipista.dialog.NumberPickerDialog.java", "BodyUseAPI": [], "Fixed commit": "94a1c416d6a4b11661dd1e27be0956f3bcb3a0a2", "Url": "https://api.github.com/repos/gkuti/Mi-Pista", "Date": "2016-05-29T12:41:19Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.data.Form<controllers.teacher.TeacherController.TeacherForm>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((teacherForm.imgURL) == null) || (teacherForm.imgURL.equals(\"\"))) { if (teacherForm.gender.equals(\"Male\")) { teacher.imgURL = \"/assets/images/profile/defualt_male.png\"; }else { teacher.imgURL = \"/assets/images/profile/defualt_female.png\"; } }else { teacher.imgURL = teacherForm.imgURL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1574/buggy-version/elbaile_latino.app.controllers.teacher.TeacherController.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "051e909650f47006016aba9276ad5bce0d9e594d", "Url": "https://api.github.com/repos/ibrahim-alzant/SEBA", "Date": "2015-07-01T19:09:54Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/622/buggy-version/src.javanews.utils.StringParser.java", "BodyUseAPI": [], "Fixed commit": "fea0e7e63ffe0eba015824e6dd52a2e7964c0853", "Url": "https://api.github.com/repos/AndrejMueller01/JAVANewsAPI", "Date": "2017-07-16T08:40:18Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((le) > 0) { if ((lc) > 255) { baos.write(((byte) ((le) >> 8))); baos.write(((byte) (le))); }else { baos.write(((byte) (le))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8534/buggy-version/common.src.main.java.org.openecard.common.apdu.common.CardCommandAPDU.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.write(int)"], "Fixed commit": "9f3562eff3e7f359fe1cd47d52218c14c60217cf", "Url": "https://api.github.com/repos/ecsec/open-ecard", "Date": "2013-03-05T14:50:07Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value != null) && (value instanceof java.lang.Throwable)) { msg = ((java.lang.Throwable) (value)).getMessage(); }else { msg = ((java.lang.String) (value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4597/buggy-version/src.main.java.com.github.catstiger.mvc.resolver.JsonFailureResolver.java", "BodyUseAPI": [], "Fixed commit": "bab3f6f1e9411077f9ee26d081e9341edd52eb81", "Url": "https://api.github.com/repos/catstiger/mvc", "Date": "2016-12-01T07:03:29Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (((com.example.niroigensuntharam.elec390application.MainActivity.earliestTime) != null) && (tempTime != null)) { if ((java.lang.Integer.parseInt(tempTime)) > (java.lang.Integer.parseInt(com.example.niroigensuntharam.elec390application.MainActivity.earliestTime))) { com.example.niroigensuntharam.elec390application.GetRoomInfoAsync getRoomInfoAsync = new com.example.niroigensuntharam.elec390application.GetRoomInfoAsync(this); com.example.niroigensuntharam.elec390application.MainActivity.timeString = tempTime; getRoomInfoAsync.execute(tempDate); }else { com.example.niroigensuntharam.elec390application.MainActivity.swipeRefreshLayout.setRefreshing(false); } }else { com.example.niroigensuntharam.elec390application.MainActivity.swipeRefreshLayout.setRefreshing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7467/buggy-version/app.src.main.java.com.example.niroigensuntharam.elec390application.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "883fa0d4516b3959457fbb0e46caf41343b47a40", "Url": "https://api.github.com/repos/niroigen/Hive-Labs", "Date": "2017-11-11T22:42:17Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tripId != null) { medicationQuery.where().eq(\"medicationInventory.missionTrip.id\", tripId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/123/buggy-version/app.femr.business.services.system.MedicationService.java", "BodyUseAPI": ["medicationQuery.where().eq(java.lang.String,java.lang.Integer)"], "Fixed commit": "d202da270aa8bbe067caef67b00160aa498d3544", "Url": "https://api.github.com/repos/kdunlap/femr", "Date": "2016-04-06T02:22:37Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tripId != null) { medicationQuery.where().eq(\"medicationInventory.missionTrip.id\", tripId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/123/buggy-version/app.femr.business.services.system.MedicationService.java", "BodyUseAPI": ["medicationQuery.where().eq(java.lang.String,java.lang.Integer)"], "Fixed commit": "d202da270aa8bbe067caef67b00160aa498d3544", "Url": "https://api.github.com/repos/kdunlap/femr", "Date": "2016-04-06T02:22:37Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((from.getY()) != (cords.getY())) { if ((from.getY()) > (cords.getY())) yOffset = 32; else yOffset = -32; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8108/buggy-version/src.net.roryclaasen.lost.graphics.item.ItemDroped.java", "BodyUseAPI": ["net.roryclaasen.lost.toolbox.TileCords.getY()", "net.roryclaasen.lost.toolbox.TileCords.getY()"], "Fixed commit": "a3cc78b0fee7df25e69bf8ee9e508ee7c561ac42", "Url": "https://api.github.com/repos/roryclaasen/Lost", "Date": "2015-10-12T18:03:43Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((from.getX()) != (cords.getX())) { if ((from.getX()) > (cords.getX())) xOffset = 32; else xOffset = -32; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8108/buggy-version/src.net.roryclaasen.lost.graphics.item.ItemDroped.java", "BodyUseAPI": ["net.roryclaasen.lost.toolbox.TileCords.getX()", "net.roryclaasen.lost.toolbox.TileCords.getX()"], "Fixed commit": "a3cc78b0fee7df25e69bf8ee9e508ee7c561ac42", "Url": "https://api.github.com/repos/roryclaasen/Lost", "Date": "2015-10-12T18:03:43Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((anInfo.getType()) == (android.net.ConnectivityManager.TYPE_VPN)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1083/buggy-version/src.main.java.me.yugy.app.common.utils.NetworkUtils.java", "BodyUseAPI": [], "Fixed commit": "8e2d1375507af25b1086cea534f6d720be347cd6", "Url": "https://api.github.com/repos/kyze8439690/mylibrary", "Date": "2016-09-03T15:25:36Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (transitionTable.containsKey(firstAlternate)) transitionTable.put(firstAlternate, (0.1F + (transitionTable.get(firstAlternate)))); else transitionTable.put(firstAlternate, 0.1F);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4845/buggy-version/Project-1.src.com.samvbeckmann.ai.project1.SimpleTransitionMap.java", "BodyUseAPI": ["java.util.Map<com.samvbeckmann.ai.project1.State, java.lang.Float>.put(com.samvbeckmann.ai.project1.State,float)", "java.util.Map<com.samvbeckmann.ai.project1.State, java.lang.Float>.put(com.samvbeckmann.ai.project1.State,(0.1F + (transitionTable.get(firstAlternate))))", "java.util.Map<com.samvbeckmann.ai.project1.State, java.lang.Float>.get(com.samvbeckmann.ai.project1.State)"], "Fixed commit": "bd493a36d1486f928c59d7d1cd4ab1dbc1c4fb67", "Url": "https://api.github.com/repos/samvbeckmann/uncooperative-microwave", "Date": "2016-01-22T23:48:17Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (transitionTable.containsKey(secondAlternate)) transitionTable.put(secondAlternate, (0.1F + (transitionTable.get(secondAlternate)))); else transitionTable.put(secondAlternate, 0.1F);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4845/buggy-version/Project-1.src.com.samvbeckmann.ai.project1.SimpleTransitionMap.java", "BodyUseAPI": ["java.util.Map<com.samvbeckmann.ai.project1.State, java.lang.Float>.put(com.samvbeckmann.ai.project1.State,(0.1F + (transitionTable.get(secondAlternate))))", "java.util.Map<com.samvbeckmann.ai.project1.State, java.lang.Float>.put(com.samvbeckmann.ai.project1.State,float)", "java.util.Map<com.samvbeckmann.ai.project1.State, java.lang.Float>.get(com.samvbeckmann.ai.project1.State)"], "Fixed commit": "bd493a36d1486f928c59d7d1cd4ab1dbc1c4fb67", "Url": "https://api.github.com/repos/samvbeckmann/uncooperative-microwave", "Date": "2016-01-22T23:48:17Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(gameController.isVictory())) && (!(gameController.timeIsUp()))) { gameController.resumeGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3871/buggy-version/core.src.de.fau.cs.mad.fly.GameScreen.java", "BodyUseAPI": ["de.fau.cs.mad.fly.game.GameController.resumeGame()"], "Fixed commit": "781e73f837c26d84d8a59ff925d12e02fdab2aaa", "Url": "https://api.github.com/repos/FAU-Inf2/fly-gdx", "Date": "2014-09-14T11:45:32Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (-1)) return title.toUpperCase(); else return title.toUpperCase().substring(0, index).concat(title.substring(index).toLowerCase());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3442/buggy-version/FormatFilter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.concat(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.toLowerCase()"], "Fixed commit": "1305262904f1c72e8c1f916ee23a10a20791a500", "Url": "https://api.github.com/repos/blackhydrogen/kwic-a1-cs3213", "Date": "2014-08-30T08:36:17Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (start < (events.size())) { for (int i = start; (i > (start - count)) && (i >= 0); i--) { result.add(events.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2900/buggy-version/mem.src.main.java.org.fuin.esc.mem.InMemoryEventStoreSync.java", "BodyUseAPI": ["java.util.List<org.fuin.esc.api.CommonEvent>.get(int)", "java.util.List<org.fuin.esc.api.CommonEvent>.add(events.get(i))"], "Fixed commit": "bdec1e12681aeda229db76f6982954009e31ff1d", "Url": "https://api.github.com/repos/fuinorg/event-store-commons", "Date": "2015-10-17T08:04:39Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(com.photon.phresco.plugins.nodejs.SONAR)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.equals(com.photon.phresco.plugins.nodejs.FUNCTIONAL)) { sb.delete(0, sb.length()); workingDir = workingDir + (project.getProperties().getProperty(Constants.POM_PROP_KEY_FUNCTEST_DIR)); sb.append(com.photon.phresco.plugins.nodejs.SONAR_COMMAND).append(com.photon.phresco.plugins.nodejs.STR_SPACE).append(\"-Dsonar.branch=functional\").append(com.photon.phresco.plugins.nodejs.STR_SPACE).append(com.photon.phresco.plugins.nodejs.SKIP_TESTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4472/buggy-version/nodejs-phresco-plugin.src.main.java.com.photon.phresco.plugins.nodejs.NodeJsPlugin.java", "BodyUseAPI": [], "Fixed commit": "0437517d03a92f03ca275a21f9d40f1ea3c2ed52", "Url": "https://api.github.com/repos/phresco/plugins", "Date": "2013-01-28T14:16:48Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(owner.hasInjuriesFromPreKillingPhase())) && ((owner.getNarrator().killingsPhase) == (shared.logic.Narrator.KILLING))) { a.attemptCompletion(); }else if (owner.isDead()) { a.attemptCompletion(); }else if ((ability == (shared.roles.Role.MAIN_ABILITY)) && (owner.is(shared.roles.Disguiser.class))) { a.attemptCompletion(); }else { owner.getNarrator().addActionStack(a); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3790/buggy-version/roles.Role.java", "BodyUseAPI": ["shared.logic.Player.is(java.lang.Class)", "shared.logic.Player.getNarrator()", "owner.getNarrator().addActionStack(shared.logic.support.action.Action)", "shared.logic.Player.isDead()"], "Fixed commit": "0e28ba65074c8302a5ef25f745b3a4a113b90a3f", "Url": "https://api.github.com/repos/vossnarrator/TheNarrator", "Date": "2017-04-16T17:58:05Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkFlag) { member.setActive(false); }else { javax.swing.JOptionPane.showMessageDialog(null, \"This TeamLeader has projects or tasks!\", \"Warning\", javax.swing.JOptionPane.WARNING_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3836/buggy-version/src.taskmgt.MemberGUI.java", "BodyUseAPI": [], "Fixed commit": "4cbe335b6a15ac08a10bfc240941c0ae6d5489ba", "Url": "https://api.github.com/repos/aperauch/TMS-Twink", "Date": "2014-02-23T19:25:47Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkFlag) { member.setActive(false); }else { javax.swing.JOptionPane.showMessageDialog(null, \"This TeamMember has projects or tasks!\", \"Warning\", javax.swing.JOptionPane.WARNING_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3836/buggy-version/src.taskmgt.MemberGUI.java", "BodyUseAPI": [], "Fixed commit": "4cbe335b6a15ac08a10bfc240941c0ae6d5489ba", "Url": "https://api.github.com/repos/aperauch/TMS-Twink", "Date": "2014-02-23T19:25:47Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ii == 2) { validDice -= 3; diceUsed[1] = true; diceUsed[2] = true; diceUsed[3] = true; }else if (ii == 1) { validDice -= 2; diceUsed[2] = true; diceUsed[3] = true; }else { validDice -= 1; if ((diceUsed[3]) == false) { diceUsed[3] = true; }else if ((diceUsed[2]) == false) { diceUsed[2] = true; }else if ((diceUsed[1]) == false) { diceUsed[1] = true; }else { diceUsed[0] = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2933/buggy-version/src.com.wackadoodle.wackgammon.GameBoard.java", "BodyUseAPI": [], "Fixed commit": "dfacf0448aa7a69c3161079cec2e37e6d0b00e33", "Url": "https://api.github.com/repos/Zedzap/WackGammon", "Date": "2013-10-26T23:52:39Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (layoutParams == null) { addView(mItemCustomView, new com.yydcdut.sdlv.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT)); }else { addView(mItemCustomView, layoutParams); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8054/buggy-version/sdlv.src.main.java.com.yydcdut.sdlv.ItemMainLayout.java", "BodyUseAPI": [], "Fixed commit": "83a5403a9b4f8e713d226d88b8a8a5698da52e91", "Url": "https://api.github.com/repos/yydcdut/SlideAndDragListView", "Date": "2016-06-04T06:55:42Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pollPeriod) == null) || (pollPeriod.equals(Duration.PRACTICALLY_FOREVER))) { }else { brooklyn.util.task.ScheduledTask task = new brooklyn.util.task.ScheduledTask(brooklyn.util.collections.MutableMap.of(\"period\", pollPeriod), taskFactory); pollingTask = managementContext.getExecutionManager().submit(task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7352/buggy-version/core.src.main.java.brooklyn.management.ha.HighAvailabilityManagerImpl.java", "BodyUseAPI": ["brooklyn.util.collections.MutableMap.of(java.lang.String,brooklyn.util.time.Duration)"], "Fixed commit": "0695ba2bad743d4829e61fcc22d000a5dbd3c79b", "Url": "https://api.github.com/repos/Nakomis/incubator-brooklyn", "Date": "2014-07-02T13:45:57Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"type\".equals(key)) { return type.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8832/buggy-version/src.main.java.messaging.Message.java", "BodyUseAPI": [], "Fixed commit": "49f3dec5c3256e53f43bdf8e6dc98ba1b5f0f8c9", "Url": "https://api.github.com/repos/Ziqul/Hunt-server", "Date": "2017-02-14T23:59:33Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"target\".equals(key)) { return target.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8832/buggy-version/src.main.java.messaging.Message.java", "BodyUseAPI": [], "Fixed commit": "49f3dec5c3256e53f43bdf8e6dc98ba1b5f0f8c9", "Url": "https://api.github.com/repos/Ziqul/Hunt-server", "Date": "2017-02-14T23:59:33Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((se.uu.it.jdooms.objectspace.DSObjectBase) (cacheObj)).getPermission()) != (se.uu.it.jdooms.objectspace.DSObjectSpace.Permission.ReadWrite)) { if (permission == (se.uu.it.jdooms.objectspace.DSObjectSpace.Permission.Read)) { ((se.uu.it.jdooms.objectspace.DSObjectBase) (obj)).setPermission(Permission.Read); }else { ((se.uu.it.jdooms.objectspace.DSObjectBase) (obj)).setPermission(Permission.ReadWrite); } ((se.uu.it.jdooms.objectspace.DSObjectBase) (obj)).setValid(true); tmp_cache.put(((se.uu.it.jdooms.objectspace.DSObjectBase) (obj)).getID(), obj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7189/buggy-version/jdooms.src.main.java.se.uu.it.jdooms.communication.DSObjectCommReceiver.java", "BodyUseAPI": [], "Fixed commit": "ac5f509598a502daf5c2eda4feae059753048759", "Url": "https://api.github.com/repos/christofferh/jdooms", "Date": "2013-12-17T15:11:08Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.femo.http.handlers.auth.CredentialProvider.findByUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (credentials == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3089/buggy-version/src.main.java.io.femo.http.handlers.auth.DigestStrategy.java", "BodyUseAPI": [], "Fixed commit": "df3d3b248634fe5808e3c6628bef677b9d85b2bd", "Url": "https://api.github.com/repos/femoio/http", "Date": "2016-06-13T16:31:04Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.wombatrpgs.mgne.io.audio.MgnEmuPlayer.writeSamples()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (samplesWritten) { playing = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3210/buggy-version/src.mgne.src.net.wombatrpgs.mgne.io.audio.SoundManager.java", "BodyUseAPI": [], "Fixed commit": "46a6c73d2f996f31704b19ae411758a926328c5e", "Url": "https://api.github.com/repos/psywombats/mgne", "Date": "2014-11-14T10:29:01Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (localName.equalsIgnoreCase(\"relation-list\")) { inRelationships = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6444/buggy-version/api.src.main.java.org.musicbrainz.android.api.handler.ReleaseLookupHandler.java", "BodyUseAPI": [], "Fixed commit": "a7bde34dbd5323b9e372a18df620234ef84e2a7c", "Url": "https://api.github.com/repos/jdamcd/musicbrainz-android", "Date": "2012-04-15T00:44:41Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (localName.equalsIgnoreCase(\"relation-list\")) { inRelationships = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6444/buggy-version/api.src.main.java.org.musicbrainz.android.api.handler.ReleaseLookupHandler.java", "BodyUseAPI": [], "Fixed commit": "a7bde34dbd5323b9e372a18df620234ef84e2a7c", "Url": "https://api.github.com/repos/jdamcd/musicbrainz-android", "Date": "2012-04-15T00:44:41Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mimeType != null) { header.entity(new java.io.ByteArrayInputStream(contents), mimeType); }else { header.entity(new java.io.ByteArrayInputStream(contents)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3097/buggy-version/central-fedoraClient.src.main.java.dk.statsbiblioteket.doms.central.connectors.fedora.FedoraRest.java", "BodyUseAPI": ["WebResource.Builder.entity(java.io.ByteArrayInputStream,java.lang.String)"], "Fixed commit": "d1df753448b91c47191f3cd2f33d5e39447ad6e3", "Url": "https://api.github.com/repos/statsbiblioteket/doms-server", "Date": "2014-08-19T11:43:42Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.service.ModelService<T>.getById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (t == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9010/buggy-version/app.controllers.generic.GenericApiController.java", "BodyUseAPI": [], "Fixed commit": "ffad8752c2741843ea1185eb22d015fb2d7a2f20", "Url": "https://api.github.com/repos/cloudiator/colosseum", "Date": "2017-01-31T14:24:43Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uriToList().isEmpty()) return builder.build().iterator();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7901/buggy-version/src.main.java.com.upplication.s3fs.S3Path.java", "BodyUseAPI": [], "Fixed commit": "14589f61729f222a09e816bb5ff2d2395a81fa72", "Url": "https://api.github.com/repos/Upplication/Amazon-S3-FileSystem-NIO2", "Date": "2017-12-19T12:06:19Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.ide.eclipse.boot.dash.views.BootDashActions.getRemoveRunTargetAction()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (removeAction != null) { manager.add(removeAction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2935/buggy-version/plugins.org.springframework.ide.eclipse.boot.dash.src.org.springframework.ide.eclipse.boot.dash.views.sections.BootDashElementsTableSection.java", "BodyUseAPI": ["org.eclipse.jface.action.IMenuManager.add(org.eclipse.jface.action.IAction)"], "Fixed commit": "cde9e86af8c4aab9cbd47af84c6fc55c91f0b922", "Url": "https://api.github.com/repos/spring-projects/spring-ide", "Date": "2015-07-10T21:14:12Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (animation == null) animation = new com.asteria.game.character.Animation(65535, AnimationPriority.HIGH);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1137/buggy-version/src.com.asteria.game.character.CharacterNode.java", "BodyUseAPI": [], "Fixed commit": "c80686e9a698188de963ff8c495b4e30422e981e", "Url": "https://api.github.com/repos/lare96/asteria-3.0", "Date": "2015-06-22T03:28:54Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (proxy.hasAuthentication()) { executor.auth(httpHost, proxy.getUsername(), proxy.getPassword()); executor.authPreemptiveProxy(httpHost); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5026/buggy-version/src.main.java.im.nll.data.fluent.Proxies.java", "BodyUseAPI": ["im.nll.data.fluent.Proxy.getUsername()", "im.nll.data.fluent.Proxy.getPassword()", "org.apache.http.client.fluent.Executor.auth(org.apache.http.HttpHost,proxy.getUsername(),proxy.getPassword())"], "Fixed commit": "033b512709b456c007e989338c4972bf59a9997c", "Url": "https://api.github.com/repos/fivesmallq/fluent-hc-proxy", "Date": "2016-06-30T09:20:34Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTerminal) { isNew = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/728/buggy-version/src.main.java.com.ciphertool.sherlock.markov.NGramIndexNode.java", "BodyUseAPI": [], "Fixed commit": "2392b8055a9522cbee7e5a8a8d60e80e9f1c1bba", "Url": "https://api.github.com/repos/beldenge/Sherlock", "Date": "2016-11-24T07:50:00Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onRepaintListener) != null) { onRepaintListener.onRepaint(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1911/buggy-version/stb.src.main.java.com.aspirecn.upnp.stb.device.LightDevice.java", "BodyUseAPI": [], "Fixed commit": "dd0267d01f62f41c3985bf389dbc9c4ae9752e8a", "Url": "https://api.github.com/repos/yinghuihong/CyberLink4Android", "Date": "2016-04-26T02:08:09Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((vCardTag.getChildTag(\"PHOTO\")) == null) || ((vCardTag.getChildTag(\"PHOTO\").getChildTags()) == null)) || ((vCardTag.getChildTag(\"PHOTO\").getChildTag(\"EXTVAL\")) == null)) { db.addVCard(key, vCard.getName(), VCardDatabaseHandler.AVATAR_DOES_NOT_EXIST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/75/buggy-version/src.directi.androidteam.training.chatclient.PacketHandlers.RosterHandler.java", "BodyUseAPI": [], "Fixed commit": "7144324ae0a741ebdc3c505bb672ab92456d52b7", "Url": "https://api.github.com/repos/vinayakbhavnani/android_chat_client", "Date": "2012-10-26T16:45:30Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getCurrentItem()) == null) || (event.getCurrentItem().equals(Material.AIR))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2943/buggy-version/src.main.java.com.covertlizard.plugin.radio.listener.RadioListener.java", "BodyUseAPI": [], "Fixed commit": "3e8950497d4130f39df7f1208c8441ec63ea0e7e", "Url": "https://api.github.com/repos/CovertLizard/RadioPlugin", "Date": "2015-05-06T00:46:00Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flightgear.clgen.listener.ItemListener.lookup(((org.antlr.v4.runtime.Token) (ctx.getChild(0).getPayload())))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (symbol != null) symbol.setType(Type.STRING);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8238/buggy-version/src.main.java.org.flightgear.clgen.listener.ItemListener.java", "BodyUseAPI": ["org.flightgear.clgen.symbol.Symbol.setType(Type.STRING)"], "Fixed commit": "c251769a4768b635b4304b53572cbe18862d68c9", "Url": "https://api.github.com/repos/sanhozay/CLGen", "Date": "2017-05-20T11:36:58Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flightgear.clgen.listener.ItemListener.lookup(((org.antlr.v4.runtime.Token) (ctx.getChild(0).getPayload())))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (symbol != null) symbol.setType(Type.BOOL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8238/buggy-version/src.main.java.org.flightgear.clgen.listener.ItemListener.java", "BodyUseAPI": ["org.flightgear.clgen.symbol.Symbol.setType(Type.BOOL)"], "Fixed commit": "c251769a4768b635b4304b53572cbe18862d68c9", "Url": "https://api.github.com/repos/sanhozay/CLGen", "Date": "2017-05-20T11:36:58Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flightgear.clgen.listener.ItemListener.lookup(((org.antlr.v4.runtime.Token) (ctx.getChild(0).getPayload())))", "org.flightgear.clgen.listener.ItemListener.lookup(((org.antlr.v4.runtime.Token) (ctx.getChild(2).getPayload())))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((lval != null) && (rval != null)) lval.setType(rval.getType());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8238/buggy-version/src.main.java.org.flightgear.clgen.listener.ItemListener.java", "BodyUseAPI": ["org.flightgear.clgen.symbol.Symbol.getType()", "org.flightgear.clgen.symbol.Symbol.setType(rval.getType())"], "Fixed commit": "c251769a4768b635b4304b53572cbe18862d68c9", "Url": "https://api.github.com/repos/sanhozay/CLGen", "Date": "2017-05-20T11:36:58Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flightgear.clgen.listener.ItemListener.lookup(((org.antlr.v4.runtime.Token) (ctx.getChild(0).getPayload())))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (symbol != null) symbol.setType(Type.DOUBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8238/buggy-version/src.main.java.org.flightgear.clgen.listener.ItemListener.java", "BodyUseAPI": ["org.flightgear.clgen.symbol.Symbol.setType(Type.DOUBLE)"], "Fixed commit": "c251769a4768b635b4304b53572cbe18862d68c9", "Url": "https://api.github.com/repos/sanhozay/CLGen", "Date": "2017-05-20T11:36:58Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flightgear.clgen.listener.ItemListener.lookup(((org.antlr.v4.runtime.Token) (ctx.getChild(0).getPayload())))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (symbol != null) symbol.setType(Type.INT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8238/buggy-version/src.main.java.org.flightgear.clgen.listener.ItemListener.java", "BodyUseAPI": ["org.flightgear.clgen.symbol.Symbol.setType(Type.INT)"], "Fixed commit": "c251769a4768b635b4304b53572cbe18862d68c9", "Url": "https://api.github.com/repos/sanhozay/CLGen", "Date": "2017-05-20T11:36:58Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["search.datastructure.SuffixTree.Edge.find(search.datastructure.SuffixTree<C>,int,char)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (edge == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1312/buggy-version/approximate.search.src.main.java.search.datastructure.SuffixTree.java", "BodyUseAPI": [], "Fixed commit": "79c3651ed72adb86035d48d14b3c89b3790f9253", "Url": "https://api.github.com/repos/markusbohl/UoL", "Date": "2013-12-15T20:30:58Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.wolkabout.hexiwear.activity.ReadingsActivity.skippingHexiConnection)) progressBar.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8053/buggy-version/app.src.main.java.com.wolkabout.hexiwear.activity.ReadingsActivity.java", "BodyUseAPI": [], "Fixed commit": "95f32435b5d5a86d10c773ddbde194ca08daae19", "Url": "https://api.github.com/repos/dylanpomeroy/althletePlus", "Date": "2017-07-06T23:41:13Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state == (State.IN_COMMENT)) { return NO_ELEMENT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1572/buggy-version/engine.src.main.java.org.service.decoration.inspection.JavaStringInspection.java", "BodyUseAPI": [], "Fixed commit": "c3a40b8976415e139e2ab2d4f5a711882a2a59d9", "Url": "https://api.github.com/repos/IvanNikolaychuk/PatternsWeb", "Date": "2016-11-04T17:09:35Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (newlineIndex != (-1)) { result = result.substring((newlineIndex + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8476/buggy-version/green.src.za.ac.sun.cs.green.service.barvinok.CountBarvinokService.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "898070adbbe5fe33f809e6f2ad2238b5bcca57a3", "Url": "https://api.github.com/repos/green-solver/green-solver", "Date": "2016-08-23T17:10:33Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.christofferklang.pyxl.PyxlParserDefinition.PyxlExpressionParsing.parsePyxlEmbed()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parsedEmbed == 1) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/497/buggy-version/src.com.christofferklang.pyxl.PyxlParserDefinition.java", "BodyUseAPI": [], "Fixed commit": "14d3276935fb24b038c264b94674bf32dec7f223", "Url": "https://api.github.com/repos/christoffer/pycharm-pyxl", "Date": "2014-07-18T01:03:50Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num == 0) { java.lang.System.out.println(\"\\n Given number Zero, is a Palindrome by difinition!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5869/buggy-version/Palindrome.java", "BodyUseAPI": [], "Fixed commit": "668e152d68f781c2cde7acb66add2f20332fcdd8", "Url": "https://api.github.com/repos/alexander-ber/JB-822-3", "Date": "2017-10-16T07:18:52Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((res.error) != null) && ((res.error.length()) > 1)) { arena.msg(org.bukkit.Bukkit.getConsoleSender(), net.slipcor.pvparena.core.Language.parse(arena, MSG.ERROR_ERROR, res.error)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4366/buggy-version/src.net.slipcor.pvparena.classes.PACheck.java", "BodyUseAPI": ["net.slipcor.pvparena.core.Language.parse(net.slipcor.pvparena.arena.Arena,MSG.ERROR_ERROR,java.lang.String)", "net.slipcor.pvparena.arena.Arena.msg(org.bukkit.Bukkit.getConsoleSender(),net.slipcor.pvparena.core.Language.parse(arena, MSG.ERROR_ERROR, res.error))"], "Fixed commit": "418c1021c237d198c9c076c61cd56e05ee5a92bf", "Url": "https://api.github.com/repos/Oruss7/pvparena", "Date": "2015-12-28T18:34:38Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ColorTeaming.respawnConfig.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (respawn == null) { respawn = player.getWorld().getSpawnLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2805/buggy-version/src.main.java.com.github.ucchyocean.ct.listener.PlayerRespawnListener.java", "BodyUseAPI": [], "Fixed commit": "af3bad6da6d91c30320da1acc19037183d4a30a4", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2013-04-14T17:19:43Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(to.isCreatedOnStart())) && ((to.getCreated()) != null)) && ((to.getCreated()) == ((sendTick) + (duration)))) { return (((2 * affectedLifelineCount) * neededWidth) - ((3 * (affectedLifelineCount - 1)) * lifelineHorizontalPadding)) / ((2 * affectedLifelineCount) - 3); }else { return ((neededWidth / (affectedLifelineCount - 1)) * affectedLifelineCount) - lifelineHorizontalPadding; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3150/buggy-version/BaseletElements.src.com.baselet.element.facet.specific.sequence_aio.Message.java", "BodyUseAPI": [], "Fixed commit": "8a7b3a9a6de7eae529238a0bf21d3640b74f146a", "Url": "https://api.github.com/repos/hirzraimund/umlet", "Date": "2015-07-27T10:28:12Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { return; }else { commandTextField.setText(completedCommand); commandTextField.end(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/13/buggy-version/src.main.java.seedu.tasklist.ui.CommandBox.java", "BodyUseAPI": [], "Fixed commit": "6706fb5d1fcc0f72d9e8e0451eab43c74dfead26", "Url": "https://api.github.com/repos/CS2103AUG2016-T11-C1/main", "Date": "2016-10-30T17:25:45Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.cuni.mff.odcleanstore.fusiontool.util.ODCSFusionToolUtils.getSesameSerializationFormat(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sesameFormat.supportsContexts()) { connection.add(file, baseURI, sesameFormat); }else { org.openrdf.model.URI context = org.openrdf.model.impl.ValueFactoryImpl.getInstance().createURI(baseURI); connection.add(file, baseURI, sesameFormat, context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1390/buggy-version/sources.src.main.java.cz.cuni.mff.odcleanstore.fusiontool.io.RepositoryFactory.java", "BodyUseAPI": ["org.openrdf.repository.RepositoryConnection.add(java.io.File,java.lang.String,org.openrdf.rio.RDFFormat)", "org.openrdf.repository.RepositoryConnection.add(java.io.File,java.lang.String,org.openrdf.rio.RDFFormat,org.openrdf.model.URI)"], "Fixed commit": "65442d31fb2d5592dff1fe20c6db6a1d30fa8d70", "Url": "https://api.github.com/repos/mifeet/cr-batch", "Date": "2014-05-08T23:07:24Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"nquads\".equalsIgnoreCase(str)) { return cz.cuni.mff.odcleanstore.fusiontool.io.EnumSerializationFormat.NQUADS; }else if (\"n-quads\".equalsIgnoreCase(str)) { return cz.cuni.mff.odcleanstore.fusiontool.io.EnumSerializationFormat.NQUADS; }else if (\"ntriples\".equalsIgnoreCase(str)) { return cz.cuni.mff.odcleanstore.fusiontool.io.EnumSerializationFormat.N3; }else if ((\"rdf/xml\".equalsIgnoreCase(str)) || (\"rdfxml\".equalsIgnoreCase(str))) { return cz.cuni.mff.odcleanstore.fusiontool.io.EnumSerializationFormat.RDF_XML; }else { try { return cz.cuni.mff.odcleanstore.fusiontool.io.EnumSerializationFormat.valueOf(str.toUpperCase()); } catch (java.lang.IllegalArgumentException e) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1390/buggy-version/sources.src.main.java.cz.cuni.mff.odcleanstore.fusiontool.io.EnumSerializationFormat.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.toUpperCase()", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "cz.cuni.mff.odcleanstore.fusiontool.io.EnumSerializationFormat.valueOf(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "65442d31fb2d5592dff1fe20c6db6a1d30fa8d70", "Url": "https://api.github.com/repos/mifeet/cr-batch", "Date": "2014-05-08T23:07:24Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((summaryInfo) != null) { setPoster(summaryInfo.getPoster()); setHeader(summaryInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/704/buggy-version/src.safwan.filmometer.LookupActivity.java", "BodyUseAPI": [], "Fixed commit": "05412d58b7f559f47905d890e258f6098ec68738", "Url": "https://api.github.com/repos/safwank/FilmoMeter", "Date": "2011-05-15T08:23:03Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["category.getDishes().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (totalDishes == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4256/buggy-version/02_code.web.eorder-dish.src.main.java.com.innovaee.eorder.service.impl.DishServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e317b9b00aada499eb155e47d25aed4f0d18c8a2", "Url": "https://api.github.com/repos/aaronluo/cuoPATHzi", "Date": "2015-04-09T13:28:53Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2293/buggy-version/appcore.src.mobi.cangol.mobile.parser.JsonUtils.java", "BodyUseAPI": [], "Fixed commit": "72e5f0e3b3f030aef973bda45da42c4a1ddd3259", "Url": "https://api.github.com/repos/Cangol/Cangol-appcore", "Date": "2016-03-09T14:51:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2293/buggy-version/appcore.src.mobi.cangol.mobile.parser.JsonUtils.java", "BodyUseAPI": [], "Fixed commit": "72e5f0e3b3f030aef973bda45da42c4a1ddd3259", "Url": "https://api.github.com/repos/Cangol/Cangol-appcore", "Date": "2016-03-09T14:51:45Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (yamlNameValue instanceof java.util.ArrayList) { yamlNameValue = ((java.util.ArrayList) (yamlNameValue)).get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3031/buggy-version/src.main.java.de.csmp.jeiscp.eiscp.EiscpCommandsParser.java", "BodyUseAPI": [], "Fixed commit": "3a88c2f37ce56251adf438adceb0bafa785fbc53", "Url": "https://api.github.com/repos/cljk/jEISCP", "Date": "2014-07-10T21:16:02Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t == null) { handleSessionAuthResult(org.sana.android.service.impl.SessionService.FAILURE, tempKey, org.sana.android.service.impl.SessionService.INVALID.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1299/buggy-version/app.src.main.java.org.sana.android.service.impl.SessionService.java", "BodyUseAPI": [], "Fixed commit": "671e5c2d645ab2d43c52d84a2cd3cba048e74745", "Url": "https://api.github.com/repos/UNFPAInnovation/GetIn_Mobile", "Date": "2017-02-12T21:30:06Z"},
{"Line": "=>916", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((self.getStatus()) == (PrimaryStorageStatus.Disconnected)) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(operr(\"cannot maitain disconnected primary storage\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1467/buggy-version/storage.src.main.java.org.zstack.storage.primary.PrimaryStorageBase.java", "BodyUseAPI": [], "Fixed commit": "06936ea46b8a3291a77a0d97b36e2b2d1e951d23", "Url": "https://api.github.com/repos/HeathHose/zstack", "Date": "2017-04-09T12:37:13Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (base != null) { is.setSystemId(base); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3363/buggy-version/src.com.xmlcalabash.model.Parser.java", "BodyUseAPI": ["org.xml.sax.InputSource.setSystemId(java.lang.String)"], "Fixed commit": "761317abb37ea2468cd6b12a93bbffa652dbacd1", "Url": "https://api.github.com/repos/rdeltour/xmlcalabash1", "Date": "2014-08-27T18:32:44Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eweb4j.util.CommonUtil.findByRegex(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (attrs == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4127/buggy-version/src.main.java.org.eweb4j.util.xml.Attrs.java", "BodyUseAPI": [], "Fixed commit": "d5a252578e6e61ba24da6eae2121609461e1a4da", "Url": "https://api.github.com/repos/laiweiwei/eweb4j-framework", "Date": "2013-08-12T07:36:57Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eweb4j.util.CommonUtil.findByRegex(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (values == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4127/buggy-version/src.main.java.org.eweb4j.util.xml.Attrs.java", "BodyUseAPI": [], "Fixed commit": "d5a252578e6e61ba24da6eae2121609461e1a4da", "Url": "https://api.github.com/repos/laiweiwei/eweb4j-framework", "Date": "2013-08-12T07:36:57Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xmlpull.v1.XmlPullParser.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"l\".equals(tagName)) { end = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7013/buggy-version/app.src.main.java.suda.myyunchuan.module.presenter.MainPresenter.java", "BodyUseAPI": [], "Fixed commit": "07fa20dae3431bd1700111132370e6e8eef3e7f0", "Url": "https://api.github.com/repos/ghbhaha/MyYunChuan", "Date": "2017-03-22T04:55:51Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { file.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2162/buggy-version/src.storage.DirectoryHandler.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "3e0b8ffd3ce4b261c2d760a7a986156dc8c3ba9f", "Url": "https://api.github.com/repos/cs2103aug2015-t09-3j/main", "Date": "2015-10-20T11:39:36Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(indexBundle.getBoolean(\"isLoading\", true))) { indexBundle.putBoolean(\"isLoading\", true); initArticle(0, indexBundle); if (((indexBundle.getInt(\"index\")) <= 0) || (articles.isEmpty())) { listView.removeFooterView(footer); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/488/buggy-version/src.com.hufeiya.fuckcancer.SuperAwesomeCardFragment.java", "BodyUseAPI": ["android.os.Bundle.putBoolean(java.lang.String,boolean)", "com.hufeiya.fuckcancer.SuperAwesomeCardFragment.1.initArticle(int,android.os.Bundle)", "android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "9ac5cf2f523b3304ae62ac27ad8e7bc3b5d3aa11", "Url": "https://api.github.com/repos/hufeiya/fuckCancer", "Date": "2015-07-19T10:39:34Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset[1]) > (-1)) { img1Pos[1] -= offset[1]; img2Pos[1] -= offset[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7326/buggy-version/org.knime.knip.stitching.src.org.knime.knip.stitching.fusion.Fusion.java", "BodyUseAPI": [], "Fixed commit": "df8c85ddd99197cb7b8e53bdcfa801d840d0a6b0", "Url": "https://api.github.com/repos/biobv2015/knip-stitching", "Date": "2015-08-31T11:28:03Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset[0]) > (-1)) { img1Pos[0] -= offset[0]; img2Pos[0] -= offset[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7326/buggy-version/org.knime.knip.stitching.src.org.knime.knip.stitching.fusion.Fusion.java", "BodyUseAPI": [], "Fixed commit": "df8c85ddd99197cb7b8e53bdcfa801d840d0a6b0", "Url": "https://api.github.com/repos/biobv2015/knip-stitching", "Date": "2015-08-31T11:28:03Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (parts[1].equals(StorageConstants.DEFAULT_PARTITION_NAME)) { tuple.put(columnId, org.apache.tajo.datum.DatumFactory.createNullDatum()); }else { tuple.put(columnId, org.apache.tajo.datum.DatumFactory.createFromString(keyColumn.getDataType(), org.apache.tajo.util.StringUtils.unescapePathName(parts[1]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/256/buggy-version/tajo-plan.src.main.java.org.apache.tajo.plan.rewrite.rules.PartitionedTableRewriter.java", "BodyUseAPI": ["org.apache.tajo.util.StringUtils.unescapePathName(java.lang.String)", "org.apache.tajo.storage.Tuple.put(int,org.apache.tajo.datum.DatumFactory.createFromString(keyColumn.getDataType(), org.apache.tajo.util.StringUtils.unescapePathName(parts[1])))", "org.apache.tajo.datum.DatumFactory.createFromString(keyColumn.getDataType(),org.apache.tajo.util.StringUtils.unescapePathName(parts[1]))"], "Fixed commit": "bd54c992804c8b43aa03583bc1e475295d6bd701", "Url": "https://api.github.com/repos/blrunner/tajo", "Date": "2016-05-08T14:48:40Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().isSyncingTabs()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isSyncTabs) { df = org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getWindow().createNewDatFile(btn_New[0].getShell(), OpenInWhat.EDITOR_3D); }else { df = org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getWindow().createNewDatFile(btn_New[0].getShell(), OpenInWhat.EDITOR_TEXT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/850/buggy-version/src.org.nschmidt.ldparteditor.shells.editortext.EditorTextWindow.java", "BodyUseAPI": [], "Fixed commit": "97c17817d3fe71bb2481d62cf32ec3f41742244c", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-08-01T14:37:11Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dao.FavorisDao.trouver(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(result.isEmpty())) { for (int i = 0; i < (result.size()); i++) { idsAnnonces.add(result.get(i).getIdAnnonce()); } java.util.List<entities.Annonce> listann = annonceDao.trouverParIds(idsAnnonces); request.setAttribute(servlets.ListerFavoris.ATT_LIST, listann); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4763/buggy-version/src.main.java.servlets.ListerFavoris.java", "BodyUseAPI": ["java.util.List<entities.Favoris>.get(int)", "result.get(i).getIdAnnonce()", "java.util.List<entities.Favoris>.size()", "java.util.List<java.lang.Integer>.add(result.get(i).getIdAnnonce())"], "Fixed commit": "55d5da619161ad38dd0de397f8a9c12b25c10448", "Url": "https://api.github.com/repos/Thomasgitt/Alda", "Date": "2015-12-26T10:48:17Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.junit.runner.Description.getTestClass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (testClass != null) { suiteDescription = org.junit.runner.Description.createSuiteDescription(testClass); }else { suiteDescription = org.junit.runner.Description.createSuiteDescription(description.getClassName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8144/buggy-version/allure-junit-adaptor.src.main.java.ru.yandex.qatools.allure.junit.AllureRunListener.java", "BodyUseAPI": ["org.junit.runner.Description.createSuiteDescription(java.lang.Class)"], "Fixed commit": "c2ab89a83cd7f49b8cd5e8d751c4cfb38561e772", "Url": "https://api.github.com/repos/allure-framework/allure1", "Date": "2017-01-31T15:38:57Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataSnapshot.child(\"URI\").getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (url != null) { mPhotoRef = com.google.firebase.storage.FirebaseStorage.getInstance().getReferenceFromUrl(dataSnapshot.child(\"URI\").getValue(java.lang.String.class)); mPhotoRef.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3509/buggy-version/app.src.main.java.com.projectbored.app.StoryDeleter.java", "BodyUseAPI": [], "Fixed commit": "04fc295cb09ef4510e0c2836db476231d5cb0705", "Url": "https://api.github.com/repos/invent2017/BORED", "Date": "2017-11-10T15:34:21Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.Ben12345rocks.AdvancedCore.UserManager.UserManager.getInstance().userExist(playerName)) { return getUUIDLookup(playerName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6747/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Misc.PlayerUtils.java", "BodyUseAPI": ["com.Ben12345rocks.AdvancedCore.Util.Misc.PlayerUtils.getUUIDLookup(java.lang.String)"], "Fixed commit": "66db4d614d6d2c89132e74a3c99f73278f94cdde", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-12-16T19:02:19Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Deque<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == deque) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5227/buggy-version/src.main.java.act.xio.undertow.UndertowRequest.java", "BodyUseAPI": [], "Fixed commit": "f10a51cd6c54318f8d67a7403629f75adfff1907", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2016-06-15T10:18:40Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (methodName.startsWith(\"before\")) { weight = org.squirrelframework.foundation.fsm.Action.BEFORE_WEIGHT; }else if (methodName.startsWith(\"after\")) { weight = org.squirrelframework.foundation.fsm.Action.AFTER_WEIGHT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3060/buggy-version/squirrel-foundation.src.main.java.org.squirrelframework.foundation.fsm.impl.StateMachineBuilderImpl.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "e642f610dbf710f80c2617acd87db26ca60b3542", "Url": "https://api.github.com/repos/hekailiang/squirrel", "Date": "2014-01-06T08:58:45Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(p.isHuman)) { if ((p.ai.target) != null) { target = p.ai.target; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7847/buggy-version/Samurai.core.src.com.samurai.el.ai.PlanetAI.java", "BodyUseAPI": [], "Fixed commit": "2bba43a34dac260bd6bced51cb2aa263dcfe735f", "Url": "https://api.github.com/repos/Hirico/samurAIEL", "Date": "2016-05-29T07:57:05Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.josephcatrambone.aij.utilities.ImageTools.imageFileToMatrix(java.lang.String,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (m != null) { examples.appendRow(m.reshape_i(1, ((IMAGE_WIDTH) * (IMAGE_HEIGHT))).getRowArray(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1314/buggy-version/src.main.java.com.josephcatrambone.imagetrainer.Main.java", "BodyUseAPI": ["com.josephcatrambone.aij.Matrix.appendRow(m.reshape_i(1, ((IMAGE_WIDTH) * (IMAGE_HEIGHT))).getRowArray(0))", "com.josephcatrambone.aij.Matrix.reshape_i(int,int)", "m.reshape_i(1, ((IMAGE_WIDTH) * (IMAGE_HEIGHT))).getRowArray(int)"], "Fixed commit": "e8ebb604d96c1c4d1acce491a1c17ce7b71be06e", "Url": "https://api.github.com/repos/JosephCatrambone/ImageTrainer", "Date": "2016-01-13T07:12:51Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(id)) { provId = provider.getProviderNo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1979/buggy-version/src.main.java.org.oscarehr.integration.born.BornCDADocument.java", "BodyUseAPI": [], "Fixed commit": "1f6a78ea1ed0512b1af2341b38b55ac7fbaddfa3", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-04-17T19:08:08Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.pd.externalID) == (OS.ProcName.VirtualMachine)) p.decreasePriority();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5656/buggy-version/tdzVmRm.src.tdzOS.ProcessManager.java", "BodyUseAPI": ["java.lang.Process.decreasePriority()"], "Fixed commit": "f6a13752101acadd3eca60f980e57d49f77edf78", "Url": "https://api.github.com/repos/Domukas/MitOS", "Date": "2012-05-30T06:38:12Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (version > 0) { builder.setParameter(Parameters.VERSION, java.lang.String.valueOf(version)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7758/buggy-version/gateway.engine.es.src.main.java.io.apiman.gateway.engine.es.ESRateLimiterComponent.java", "BodyUseAPI": ["Index.Builder.setParameter(Parameters.VERSION,java.lang.String)", "java.lang.String.valueOf(long)"], "Fixed commit": "0acd06b41ad82a1459d94dcd18937e9e82f1e555", "Url": "https://api.github.com/repos/reverieinc/apiman", "Date": "2016-11-23T00:34:50Z"},
{"Line": "=>1166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flywaydb.core.Flyway.getValueAndRemoveEntry(java.util.Map<java.lang.String, java.lang.String>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (placeholderReplacement != null) { setPlaceholderReplacement(java.lang.Boolean.parseBoolean(placeholderReplacement)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4500/buggy-version/flyway-core.src.main.java.org.flywaydb.core.Flyway.java", "BodyUseAPI": ["org.flywaydb.core.Flyway.setPlaceholderReplacement(boolean)", "java.lang.Boolean.parseBoolean(java.lang.String)"], "Fixed commit": "8249a892d56ba259a9ed27c135b82d92c6e66d35", "Url": "https://api.github.com/repos/caiodangelo/flyway", "Date": "2016-03-18T18:19:47Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.tileEntityInvalid) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1661/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.energy.tile.TileBaseUniversalElectricalSource.java", "BodyUseAPI": [], "Fixed commit": "2226ece63d811439f9d65a969ff018cbb5f7c55d", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2017-04-10T18:53:42Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.tileEntityInvalid) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1661/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.energy.tile.TileBaseUniversalElectrical.java", "BodyUseAPI": [], "Fixed commit": "2226ece63d811439f9d65a969ff018cbb5f7c55d", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2017-04-10T18:53:42Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dv8tion.jda.utils.InviteUtil.resolve(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (invite != null) { api.getEventManager().handle(new net.dv8tion.jda.events.InviteReceivedEvent(api, responseNumber, message, invite)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2758/buggy-version/src.main.java.net.dv8tion.jda.handle.MessageReceivedHandler.java", "BodyUseAPI": ["api.getEventManager().handle(net.dv8tion.jda.events.InviteReceivedEvent)"], "Fixed commit": "1575533d38cd46ebebee6614ad24114ff9fef485", "Url": "https://api.github.com/repos/DV8FromTheWorld/JDA", "Date": "2016-02-27T13:29:51Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fs.exists(p)) { org.apache.hadoop.fs.FileStatus[] fileStatus = fs.listStatus(p); for (org.apache.hadoop.fs.FileStatus f : fileStatus) { if ((!(f.isDir())) && (f.getPath().getName().equals(gobblin.config.configstore.impl.ETLHdfsConfigStoreFactory.CONFIG_STORE_NAME))) { java.lang.String parent = f.getPath().getParent().toString(); try { return new java.net.URI(parent); } catch (java.net.URISyntaxException e) { e.printStackTrace(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7982/buggy-version/gobblin-config-management.src.main.java.gobblin.config.configstore.impl.ETLHdfsConfigStoreFactory.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.listStatus(org.apache.hadoop.fs.Path)"], "Fixed commit": "8fd39e5a2146e1ab1ff3182d43600e820f2cf6c8", "Url": "https://api.github.com/repos/tuGithub/gobblin-1", "Date": "2015-11-23T20:19:45Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((game.list.size()) != 0) { game.nextPicture(); updatePicture(); updateScore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1100/buggy-version/app.src.main.java.com.example.tony.name_app.Quiz.java", "BodyUseAPI": ["com.example.tony.name_app.LearningModeController.nextPicture()"], "Fixed commit": "15170465ffb815d9fdb871a0383d63e0e8210094", "Url": "https://api.github.com/repos/TonyHag/Name-App", "Date": "2017-01-23T00:23:58Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((components) != null) { featureGenerator.setComponents(components); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2493/buggy-version/src.main.java.edu.macalester.wpsemsim.sim.ensemble.SvmEnsemble.java", "BodyUseAPI": [], "Fixed commit": "3994e17801914a7033367a543c5d77ab768813ad", "Url": "https://api.github.com/repos/shilad/wp-semantic-similarity", "Date": "2013-01-07T03:21:28Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params != null) { for (net.nashlegend.sourcewall.request.Param param : params) { builder.addQueryParameter(param.key, param.value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3408/buggy-version/app.src.main.java.net.nashlegend.sourcewall.request.RequestDelegate.java", "BodyUseAPI": [], "Fixed commit": "68d7bd8e0befdfc61f6ce2d7d850fa0f44319c05", "Url": "https://api.github.com/repos/NashLegend/SourceWall", "Date": "2016-07-07T10:02:32Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((imageView.getScale()) < 1.1) { downloadedImage = resource; imageView.setImageBitmap(resource); }else { message_ready.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3098/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.activities.MediaActivity.java", "BodyUseAPI": ["com.github.chrisbanes.photoview.PhotoView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "e0a6abaa19618de2a55e7dabc95a777b24ef4404", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-12-24T07:37:13Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arg0 != thing) { sb.append(\"'\").append(formatter.getUnaryPredicate(arg0)).append(\"', \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/442/buggy-version/clipper-cli.src.main.java.org.semanticweb.clipper.hornshiq.cli.CommandPythonOntology.java", "BodyUseAPI": ["java.lang.StringBuilder.append(formatter.getUnaryPredicate(arg0))", "org.semanticweb.clipper.hornshiq.queryanswering.CQFormatter.getUnaryPredicate(int)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "5c6998c4b9210a034611c559220c098fc769ec03", "Url": "https://api.github.com/repos/ghPATHo/clipper", "Date": "2013-01-15T11:40:09Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arg0 != thing) { sb.append(\"'\").append(formatter.getUnaryPredicate(arg0)).append(\"', \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/442/buggy-version/clipper-cli.src.main.java.org.semanticweb.clipper.hornshiq.cli.CommandPythonOntology.java", "BodyUseAPI": ["java.lang.StringBuilder.append(formatter.getUnaryPredicate(arg0))", "org.semanticweb.clipper.hornshiq.queryanswering.CQFormatter.getUnaryPredicate(int)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "5c6998c4b9210a034611c559220c098fc769ec03", "Url": "https://api.github.com/repos/ghPATHo/clipper", "Date": "2013-01-15T11:40:09Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((list.size()) == 1) { objects = java.util.Arrays.asList(\"%\"); }else { objects = java.util.Arrays.asList(list.get(1).split(\"[.]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4210/buggy-version/src.main.java.com.github.mgramin.sqlboot.uri.ObjURI.java", "BodyUseAPI": [], "Fixed commit": "ca81fdb61336ec04973d06dd6a2452525e99eb42", "Url": "https://api.github.com/repos/sql-boot/sql-boot", "Date": "2017-04-13T21:37:16Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((this.name.equals(\"Backlog\")) || (this.name.equals(\"\")))) { java.util.List<edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Requirement> forIter = edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.RequirementModel.getInstance().getRequirementsForIteration(this.name); for (edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Requirement req : forIter) { req.setIteration(name); edu.wpi.cs.wpisuitetng.modules.requirementmanager.controller.UpdateRequirementController.getInstance().updateRequirement(req); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1153/buggy-version/RequirementManager.src.edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.iterations.Iteration.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.RequirementModel.getInstance().getRequirementsForIteration(java.lang.String)"], "Fixed commit": "131f79c4e2556e86be05c0750aed46645862870e", "Url": "https://api.github.com/repos/djkirby/wpi-suite-tng", "Date": "2013-04-29T14:11:44Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((author.getLanguage()) != null) { dataAccessor.createOrUpdateAuthor(author); count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2528/buggy-version/src.main.java.com.pratilipi.api.impl.init.InitApi.java", "BodyUseAPI": ["com.pratilipi.data.DataAccessor.createOrUpdateAuthor(com.pratilipi.data.type.Author)"], "Fixed commit": "99fd1a9e26b5d5c27fa87bce67f16cf24ebc374e", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-01-13T06:21:15Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(((android.app.Activity) (mContext)), Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { requestPermissions(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4163/buggy-version/app.src.main.java.rodolfogusson.weatherapp.GPSTracker.java", "BodyUseAPI": [], "Fixed commit": "432ceadc0f3b74318d64d5558dc7bd8b78ffe31e", "Url": "https://api.github.com/repos/rodolfoggp/weather-app", "Date": "2017-05-31T06:02:45Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) canSync = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2237/buggy-version/ui.elem.OpponentStat.java", "BodyUseAPI": [], "Fixed commit": "270264847e77cd2a77475f64e6e1bad1d685849f", "Url": "https://api.github.com/repos/Enthri/aprctsrpg", "Date": "2015-02-02T19:42:19Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canSync) ((javax.swing.JLabel) (ui.elem.WindowUtilities.getComponent(\"stats2\"))).setText(this.text);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2237/buggy-version/ui.elem.OpponentStat.java", "BodyUseAPI": [], "Fixed commit": "270264847e77cd2a77475f64e6e1bad1d685849f", "Url": "https://api.github.com/repos/Enthri/aprctsrpg", "Date": "2015-02-02T19:42:19Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canSync) ((javax.swing.JLabel) (ui.elem.WindowUtilities.getComponent(\"text\"))).setText(this.text);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2237/buggy-version/ui.elem.Dialog.java", "BodyUseAPI": [], "Fixed commit": "270264847e77cd2a77475f64e6e1bad1d685849f", "Url": "https://api.github.com/repos/Enthri/aprctsrpg", "Date": "2015-02-02T19:42:19Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) canSync = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2237/buggy-version/ui.elem.Dialog.java", "BodyUseAPI": [], "Fixed commit": "270264847e77cd2a77475f64e6e1bad1d685849f", "Url": "https://api.github.com/repos/Enthri/aprctsrpg", "Date": "2015-02-02T19:42:19Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) canSync = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2237/buggy-version/ui.elem.Stat.java", "BodyUseAPI": [], "Fixed commit": "270264847e77cd2a77475f64e6e1bad1d685849f", "Url": "https://api.github.com/repos/Enthri/aprctsrpg", "Date": "2015-02-02T19:42:19Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canSync) ((javax.swing.JLabel) (ui.elem.WindowUtilities.getComponent(\"stats\"))).setText(this.text);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2237/buggy-version/ui.elem.Stat.java", "BodyUseAPI": [], "Fixed commit": "270264847e77cd2a77475f64e6e1bad1d685849f", "Url": "https://api.github.com/repos/Enthri/aprctsrpg", "Date": "2015-02-02T19:42:19Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.has(\"error\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6051/buggy-version/app.src.main.java.me.ccrama.redditslide.util.GifUtils.java", "BodyUseAPI": [], "Fixed commit": "f92fbc2897c6fd65776ce00bfbd9acc99b377694", "Url": "https://api.github.com/repos/Alexendoo/Slide", "Date": "2016-02-17T20:08:59Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((s.contains(\".gif\")) && (!(s.contains(\".gifv\")))) && (s.contains(\"imgur.com\"))) { s = s.replace(\".gif\", \".gifv\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6051/buggy-version/app.src.main.java.me.ccrama.redditslide.util.GifUtils.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "f92fbc2897c6fd65776ce00bfbd9acc99b377694", "Url": "https://api.github.com/repos/Alexendoo/Slide", "Date": "2016-02-17T20:08:59Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((m_type) == (variant_type.NIL)) && ((r.m_type) == (variant_type.POINTER))) && ((r.m_data) == null)) || ((((m_type) == (variant_type.POINTER)) && ((m_data) == null)) && ((r.m_type) == (variant_type.NIL)))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9070/buggy-version/src.fakescript.variant.java", "BodyUseAPI": [], "Fixed commit": "95d911e79a42edb2e11f40435823109a72614f75", "Url": "https://api.github.com/repos/esrrhs/fakescript-java", "Date": "2017-06-08T07:16:40Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (el == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7139/buggy-version/app.src.main.java.com.summertaker.blog46.parser.Nogizaka46Parser.java", "BodyUseAPI": [], "Fixed commit": "4f54c6b0bde7b6ccaafda100801c37c218f0fdc0", "Url": "https://api.github.com/repos/summertaker/Blog46", "Date": "2017-01-28T00:34:47Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (el == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7139/buggy-version/app.src.main.java.com.summertaker.blog46.parser.Nogizaka46Parser.java", "BodyUseAPI": [], "Fixed commit": "4f54c6b0bde7b6ccaafda100801c37c218f0fdc0", "Url": "https://api.github.com/repos/summertaker/Blog46", "Date": "2017-01-28T00:34:47Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (nextLevelDependencies != null) { addedSomething |= ancestorGraph.get(key).addAll(nextLevelDependencies); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4955/buggy-version/validation.src.main.java.net.alloyggp.griddle.validator.AnalyzedGame.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.addAll(java.util.Set<java.lang.String>)"], "Fixed commit": "4532f021019035198766958826a9e1ce30f5f431", "Url": "https://api.github.com/repos/AlexLandau/griddle", "Date": "2015-06-06T06:03:40Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((status.getInReplyToUserId()) > 0) { super.inReply = ((eu.socialsensor.framework.common.domain.SocialNetworkSource.Twitter) + \"#\") + (status.getInReplyToUserId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8416/buggy-version/src.main.java.eu.socialsensor.framework.abstractions.twitter.TwitterItem.java", "BodyUseAPI": [], "Fixed commit": "54665a6290910b8b895bfd37df8adf4c0891038b", "Url": "https://api.github.com/repos/socialsensor/socialmedia-abstractions", "Date": "2013-11-26T14:23:11Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rightSide) { if ((seam.length) != (tempPic.length)) { throw new java.lang.IllegalArgumentException(); } }else { if ((seam.length) != (tempPic[0].length)) { throw new java.lang.IllegalArgumentException(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6260/buggy-version/src.week8.SeamCarver.java", "BodyUseAPI": [], "Fixed commit": "e39dc6bdb22ab551caacc7e56235686c7219c358", "Url": "https://api.github.com/repos/johnttan/algorithms_in_java", "Date": "2015-03-31T07:34:47Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rightSide) { if ((seam.length) != (tempPic[0].length)) { throw new java.lang.IllegalArgumentException(); } }else { if ((seam.length) != (tempPic.length)) { throw new java.lang.IllegalArgumentException(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6260/buggy-version/src.week8.SeamCarver.java", "BodyUseAPI": [], "Fixed commit": "e39dc6bdb22ab551caacc7e56235686c7219c358", "Url": "https://api.github.com/repos/johnttan/algorithms_in_java", "Date": "2015-03-31T07:34:47Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((propNames.size()) <= 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1549/buggy-version/Monopoly.src.CSC110.monopoly.player.Piece.java", "BodyUseAPI": [], "Fixed commit": "4d8200f29dbeb727d0409be25820c068cc649de9", "Url": "https://api.github.com/repos/Pater1/CluelessMonopoly", "Date": "2016-11-28T20:00:37Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((value != null) && (!(value.isEmpty()))) { value = dk.statsbiblioteket.doms.ingest.reklamepbcoremapper.Tv2PBCoreMapper.OUTPUT_DATE_FORMAT.format(dk.statsbiblioteket.doms.ingest.reklamepbcoremapper.Tv2PBCoreMapper.INPUT_DATE_FORMAT.parse(value)); }else { value = dk.statsbiblioteket.doms.ingest.reklamepbcoremapper.Tv2PBCoreMapper.ALTERNATIVE_OUTPUT_DATE_FORMAT.format(dk.statsbiblioteket.doms.ingest.reklamepbcoremapper.Tv2PBCoreMapper.ALTERNATIVE_INPUT_DATE_FORMAT.parse(row.get(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8459/buggy-version/src.main.java.dk.statsbiblioteket.doms.ingest.reklamepbcoremapper.Tv2PBCoreMapper.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)", "java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "aeba64abaa94256afcdd08fa4d39569f8e5652cb", "Url": "https://api.github.com/repos/statsbiblioteket/reklame-pbcore-mapper", "Date": "2012-12-17T09:43:22Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6343/buggy-version/main.java.io.github.thatsmusic99.headsplus.HeadsPlus.java", "BodyUseAPI": [], "Fixed commit": "bcad2fd520fb3e5a4477ee2a0180067901397ec9", "Url": "https://api.github.com/repos/Thatsmusic99/HeadsPlus", "Date": "2017-04-04T15:39:35Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intent.getAction()) != null) { android.util.Log.i(com.sukinsan.pebble.broadcast.PhoneStateChangedReceiver.TAG, intent.getAction()); }else { android.util.Log.i(com.sukinsan.pebble.broadcast.PhoneStateChangedReceiver.TAG, \"no action\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1435/buggy-version/app.src.main.java.com.sukinsan.pebble.broadcast.PhoneStateChangedReceiver.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,intent.getAction())", "android.content.Intent.getAction()"], "Fixed commit": "d81a7aa33dd371f7841a819839cca224d3a25376", "Url": "https://api.github.com/repos/victorpaul/pebble", "Date": "2015-03-15T09:39:19Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialog) != null) { dialog.takeFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2423/buggy-version/Auticka.src.cz.mff.cuni.autickax.gamelogic.SubLevel2.java", "BodyUseAPI": [], "Fixed commit": "75bb470bf9f68dd534975f588c7f5e3a8eff4abf", "Url": "https://api.github.com/repos/machpavel/autickax", "Date": "2014-01-16T16:36:48Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((req.getParameter(\"add_to_cart_view\")) != null) { java.lang.System.out.println(\"add\"); appendToCartPage(req, res); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6453/buggy-version/Assignment2.src.NACOAMainServlet.java", "BodyUseAPI": ["NACOAMainServlet.appendToCartPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "2e25966b4fa8c4a4d6573e9ec9e38f3b3b1b2249", "Url": "https://api.github.com/repos/double-pHelix/NACOA-BookTradingSite", "Date": "2015-10-02T08:15:59Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Errors.getErrorCount()) == 0) Simulator.run(); else java.lang.System.out.println(\"Circuit errors detected. Simulation halted. Fix these errors and rerun.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2246/buggy-version/LogicCircuit.src.LogicCircuit.java", "BodyUseAPI": [], "Fixed commit": "145e53a2d5b728df186de1ef2f4af509e478a706", "Url": "https://api.github.com/repos/ZeroCool2u/LogicCircuit", "Date": "2015-11-08T23:32:53Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((p == null) | (bot == null)) | (goalcolor == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6811/buggy-version/src.mrbesen.cr.auto.clicker.Clicker.java", "BodyUseAPI": [], "Fixed commit": "ac05f9070eb9d3c6baa26ef27c5b3b9175cbbc96", "Url": "https://api.github.com/repos/mrbesen/ClashRoyale-Bot", "Date": "2017-05-28T17:52:51Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == previousIndex) { archHeight = previousArch; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/3733/buggy-version/src.pl.wurmonline.deedplanner.data.bridges.BridgeData.java", "BodyUseAPI": [], "Fixed commit": "1cdbceb73eb94eb3be798c95608ec1c359b1b805", "Url": "https://api.github.com/repos/Warlander/DeedPlanner-2", "Date": "2016-01-02T11:31:45Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.redeul.google.go.lang.psi.expressions.GoExpr.getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((firstChildOfExp instanceof ro.redeul.google.go.util.GoLiteralIdentifier) && (((ro.redeul.google.go.util.GoLiteralIdentifier) (firstChildOfExp)).getName().equals(\"nil\"))) { return (((((resolved instanceof ro.redeul.google.go.util.GoPsiTypeInterface) || (resolved instanceof ro.redeul.google.go.util.GoPsiTypeFunction)) || (resolved instanceof ro.redeul.google.go.util.GoPsiTypePointer)) || (resolved instanceof ro.redeul.google.go.util.GoPsiTypeSlice)) || (resolved instanceof ro.redeul.google.go.util.GoPsiTypeMap)) || (resolved instanceof ro.redeul.google.go.util.GoPsiTypeArray); }else if (expr.isConstantExpression()) { java.lang.String resolvedTypeName = resolved.getText(); if ((((resolvedTypeName.startsWith(\"int\")) || (resolvedTypeName.startsWith(\"uint\"))) || (resolvedTypeName.equals(\"byte\"))) || (resolvedTypeName.equals(\"rune\"))) { java.lang.Number numValue = ro.redeul.google.go.inspection.FunctionCallInspection.getNumberValueFromLiteralExpr(expr); if (numValue == null) return ro.redeul.google.go.util.GoTypeInspectUtil.checkValidLiteralIntExpr(expr); if ((numValue instanceof java.lang.Integer) || ((numValue.intValue()) == (numValue.floatValue()))) { java.lang.Integer value = numValue.intValue(); if (resolvedTypeName.equals(\"int8\")) return (value >= (-128)) && (value <= 127); if (resolvedTypeName.equals(\"int16\")) return (value >= (-32768)) && (value <= 32767); if ((resolvedTypeName.equals(\"int32\")) || (resolvedTypeName.equals(\"rune\"))) return (value >= -2147483648) && (value <= 2147483647); if ((resolvedTypeName.equals(\"int64\")) || (resolvedTypeName.equals(\"int\"))) return true; if ((resolvedTypeName.equals(\"uint8\")) || (resolvedTypeName.equals(\"byte\"))) return (value >= 0) && (value <= 255); if (resolvedTypeName.equals(\"uint16\")) return (value >= 0) && (value <= 65535); if (resolvedTypeName.equals(\"uint32\")) return value >= 0; if ((resolvedTypeName.equals(\"uint64\")) || (resolvedTypeName.equals(\"uint\"))) return value >= 0; }else { return false; } } if (resolvedTypeName.startsWith(\"float\")) { return ro.redeul.google.go.util.GoTypeInspectUtil.checkValidLiteralFloatExpr(expr); } if (firstChildOfExp instanceof ro.redeul.google.go.util.GoLiteralString) { return resolvedTypeName.equals(\"string\"); } if (firstChildOfExp instanceof ro.redeul.google.go.util.GoLiteralBool) { return resolvedTypeName.equals(\"bool\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5716/buggy-version/src.ro.redeul.google.go.util.GoTypeInspectUtil.java", "BodyUseAPI": [], "Fixed commit": "8bc55aa58f05a3d0bf827973e56d7662dd1cc12a", "Url": "https://api.github.com/repos/m0sth8/go-lang-idea-plugin", "Date": "2014-01-26T22:44:12Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<?>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (elem.has(EGProperty.EG_COLOR)) { elem.destroy(EGProperty.EG_COLOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1760/buggy-version/src.easygraph.controller.EditorLayoutController.java", "BodyUseAPI": ["graphlib.Decorable.destroy(EGProperty.EG_COLOR)"], "Fixed commit": "0b38e4ec39c10635109f720e81021eda4b4dea85", "Url": "https://api.github.com/repos/engek1/easygraph", "Date": "2015-01-12T17:57:17Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<?>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (elem.has(EGProperty.EG_COLOR)) { elem.destroy(EGProperty.EG_COLOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1760/buggy-version/src.easygraph.controller.EditorLayoutController.java", "BodyUseAPI": ["graphlib.Decorable.destroy(EGProperty.EG_COLOR)"], "Fixed commit": "0b38e4ec39c10635109f720e81021eda4b4dea85", "Url": "https://api.github.com/repos/engek1/easygraph", "Date": "2015-01-12T17:57:17Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.mpg.cbs.jist.registration.Interface.isImage4D(sourceContrastImage)) de.mpg.cbs.jist.registration.Interface.setFloatImage4D(algorithm.getMappedData(), odims, sdims[3], mappedDataImage, (name + \"_map2grp_data\"), header); else de.mpg.cbs.jist.registration.Interface.setFloatImage3D(algorithm.getMappedData(), odims, mappedDataImage, (name + \"_map2grp_data\"), header);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7979/buggy-version/de.mpg.cbs.jist.registration.JistRegistrationSurfaceDataToGroupwiseTemplate.java", "BodyUseAPI": [], "Fixed commit": "307fac3eeed81ff537342c49c2424cf142dd42e9", "Url": "https://api.github.com/repos/piloubazin/cbstools-public", "Date": "2017-11-08T16:37:35Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fenixedu.ulisboa.specifications.domain.student.EnrolmentPredicateInitializer.2.getExecutionSemester()", "org.fenixedu.academic.domain.Enrolment.getDegreeModule()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(degreeModule.hasAnyParentContexts(improvementSemester))) { throw new org.fenixedu.academic.domain.exceptions.DomainException(\"curricularRules.ruleExecutors.ImprovementOfApprovedEnrolmentExecutor.degree.module.has.no.context.in.present.execution.period\", enrolment.getName().getContent(), improvementSemester.getQualifiedName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2878/buggy-version/src.main.java.org.fenixedu.ulisboa.specifications.domain.student.EnrolmentPredicateInitializer.java", "BodyUseAPI": ["org.fenixedu.academic.domain.ExecutionSemester.getQualifiedName()"], "Fixed commit": "be0b8f6389ac6045eb36d5b7b28951b2d06461f6", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2017-01-26T17:57:10Z"},
{"Line": "=>671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.getElementsByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((linkList == null) || ((linkList.size()) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8697/buggy-version/api-service.src.main.java.org.borademir.eksici.api.impl.EksiServiceJsoupImpl.java", "BodyUseAPI": [], "Fixed commit": "49147f0e8d8c24a3682a248fa8745c192adc7565", "Url": "https://api.github.com/repos/borademir/eksi", "Date": "2017-05-18T17:23:55Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!firstTime) { out.print(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1369/buggy-version/src.ext.wyone.io.JavaFileWriter.java", "BodyUseAPI": [], "Fixed commit": "c331b806d1bf7d842339b52d675127b7a2aa87e8", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-02-21T07:35:51Z"},
{"Line": "=>2086", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.toString().contains(\"localState\")) && (receiver == null)) org.jmlspecs.openjml.esc.Utils.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/1221/buggy-version/OpenJML.src.org.jmlspecs.openjml.esc.JmlAssertionAdder.java", "BodyUseAPI": [], "Fixed commit": "cebbf84747292569b556d6f262d00c7bd296224d", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2016-09-10T19:55:17Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((processInstance.getValueForKey(\"boundaryId\")) == \"\") || ((processInstance.getValueForKey(\"boundaryId\")) == null)) { boundaryId = null; }else { boundaryId = java.lang.Long.valueOf(boundaryIdValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/8386/buggy-version/core.egov-workflow.src.main.java.org.egov.workflow.domain.service.PgrWorkflow.java", "BodyUseAPI": [], "Fixed commit": "6f6401e33c4db4a63eae55001b715e33546bb32c", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-08-09T14:19:52Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.intertec.exam.core.UserValidation.checkReservedWord(username)) { java.lang.System.out.println(((\"[OK] this username: \" + username) + \" is valid!\")); com.intertec.exam.core.UserValidation.result.setValid(true); com.intertec.exam.core.UserValidation.result.setSuggested(null); com.intertec.exam.core.UserValidation.fileDataUsers.appendFileContent(username); java.lang.System.out.println(\"[OK] ADDED new username in database...\"); }else { throw new com.intertec.exam.exception.UserValidationException(((\"The username: \" + username) + \" constains a reserved word...\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6924/buggy-version/src.com.intertec.exam.core.UserValidation.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "com.intertec.exam.utilities.FileHandler.appendFileContent(java.lang.String)"], "Fixed commit": "6efda9b981eb10f4b745224c7294bdd165112617", "Url": "https://api.github.com/repos/eaqtronto/uservalidation", "Date": "2016-11-06T18:13:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((product.getIRR().abs().compareTo(java.math.BigDecimal.valueOf(10))) >= 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9014/buggy-version/core.src.com.psu.ie302.game.questions.QuestionSingleProduct.java", "BodyUseAPI": [], "Fixed commit": "648fb340014ec474d9ece00ac9eccdd2abbb14e5", "Url": "https://api.github.com/repos/natecrow/PSU-IE-302-Game", "Date": "2016-04-26T21:22:06Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inventory == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/130/buggy-version/src.com.sam.hex.PurchaseActivity.java", "BodyUseAPI": [], "Fixed commit": "806f8534e1538e0b53a0af8d3884a28fc76532ec", "Url": "https://api.github.com/repos/Xlythe/HexGame_Android", "Date": "2013-06-16T17:20:41Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rows) > 1) findPathRec(writePos, 1, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4578/buggy-version/MatrixAllPaths.java", "BodyUseAPI": [], "Fixed commit": "9b1f77e6f7e65a805e6a27cc0f85fb1c215c4f7b", "Url": "https://api.github.com/repos/nirav99/Contest", "Date": "2011-07-29T14:36:34Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cols) > 1) findPathRec(writePos, 0, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4578/buggy-version/MatrixAllPaths.java", "BodyUseAPI": [], "Fixed commit": "9b1f77e6f7e65a805e6a27cc0f85fb1c215c4f7b", "Url": "https://api.github.com/repos/nirav99/Contest", "Date": "2011-07-29T14:36:34Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((state[row][col]) <= 15) { out += java.lang.String.format(\"0%h\", state[row][col]); }else out += java.lang.String.format(\"%h\", state[row][col]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9168/buggy-version/project4.Decryptor.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,char)", "java.lang.String.format(java.lang.String,char)"], "Fixed commit": "31e1dd891c584613ff787c9eb4ba356d32ca3b8f", "Url": "https://api.github.com/repos/mjr2595/intro-to-security", "Date": "2015-07-04T01:51:25Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Scanner.hasNextLine()) output.write(\"\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9168/buggy-version/project4.Decryptor.java", "BodyUseAPI": [], "Fixed commit": "31e1dd891c584613ff787c9eb4ba356d32ca3b8f", "Url": "https://api.github.com/repos/mjr2595/intro-to-security", "Date": "2015-07-04T01:51:25Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Scanner.hasNextLine()) output.write(\"\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9168/buggy-version/project4.Encryptor.java", "BodyUseAPI": [], "Fixed commit": "31e1dd891c584613ff787c9eb4ba356d32ca3b8f", "Url": "https://api.github.com/repos/mjr2595/intro-to-security", "Date": "2015-07-04T01:51:25Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((state[row][col]) <= 15) { out += java.lang.String.format(\"0%h\", state[row][col]); }else out += java.lang.String.format(\"%h\", state[row][col]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/9168/buggy-version/project4.Encryptor.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,char)", "java.lang.String.format(java.lang.String,char)"], "Fixed commit": "31e1dd891c584613ff787c9eb4ba356d32ca3b8f", "Url": "https://api.github.com/repos/mjr2595/intro-to-security", "Date": "2015-07-04T01:51:25Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shotmk.el.services.TagService.getTagByTagstring(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (temp != null) { tagList.add(temp); }else { tagList.add(new com.shotmk.el.entity.Tag(tag)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/965/buggy-version/src.main.java.com.shotmk.el.web.admin.AdminBookController.java", "BodyUseAPI": ["java.util.List<com.shotmk.el.entity.Tag>.add(com.shotmk.el.entity.Tag)"], "Fixed commit": "59045dfbdf25b2068282f2aecbc8f73c07c99dca", "Url": "https://api.github.com/repos/shot-mk/ElectronicLibrary", "Date": "2014-07-27T19:01:35Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (queryResult != null) xmlResult = new xmlFormat(queryResult, parseResult.attrList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/6294/buggy-version/src.SQLtoXMLConverter.java", "BodyUseAPI": [], "Fixed commit": "f06ad4a5501c97f4ed16ce4ce73113870830eae5", "Url": "https://api.github.com/repos/MichaelCDormann/SQLToXMLConverter", "Date": "2016-11-29T05:16:23Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (user != null) { user.setCalendar(getDb(), getModelCache()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5055/buggy-version/src.application.Main.java", "BodyUseAPI": ["models.User.setCalendar(util.DB,util.ModelCache)"], "Fixed commit": "992ef3a06c22d7bf39a6dcb64e7ad5d68a639b88", "Url": "https://api.github.com/repos/ivarkrabol/calendar-gr55", "Date": "2015-03-06T12:04:28Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((devicesInRow1) > 0) && ((devicesInRow2) > 0)) && ((devicesInRow1) == (devicesInRow2))) { return new com.neophob.sematrix.layout.BoxLayout(devicesInRow1, devicesInRow2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/4545/buggy-version/src.main.java.com.neophob.sematrix.properties.PropertiesHelper.java", "BodyUseAPI": [], "Fixed commit": "191cfc80febe8daa766fabdb2702b0de55eecea5", "Url": "https://api.github.com/repos/neophob/PixelController", "Date": "2011-09-09T15:16:11Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["input.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((value.length()) > 0) { addFood(value); populateFoodListView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/205/buggy-version/HealthApp.app.src.main.java.com.pts4.healthapp.FoodListActivity.java", "BodyUseAPI": ["1.addFood(java.lang.String)"], "Fixed commit": "25b418056c0ea8a630d801d0011f0d407eca2ca4", "Url": "https://api.github.com/repos/JoepKerste/PTS4", "Date": "2015-03-30T11:48:14Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hypothesis.containsTerm(sub.substitution)) && ((sub.original.getValue()) instanceof mjchao.mazenav.logic.structures.SkolemFunction)) { validHypothesisUnification = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2821/buggy-version/src.mjchao.mazenav.logic.Resolver.java", "BodyUseAPI": [], "Fixed commit": "42625dfb34999203aa5948eed0a6611806208502", "Url": "https://api.github.com/repos/mjchao/Logic-Based-AI", "Date": "2016-05-13T16:22:21Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraft.client.Minecraft.getMinecraft().playerController.getCurrentGameType()) != (net.minecraft.world.WorldSettings.GameType.CREATIVE)) this.dropBlockAsItem(worldIn, pos, state, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2869/buggy-version/src.main.java.com.kongkongmao.Blocks.BlockBattery.java", "BodyUseAPI": [], "Fixed commit": "718fc3c2ea506409f084c882115903e6558e907f", "Url": "https://api.github.com/repos/kongkongmao/MCMagicEra", "Date": "2016-04-05T00:29:57Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hasCenter(center)) { return service.searchForStoresByLocation(center); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2941/buggy-version/src.main.java.tech.blackhole.blacknectar.service.Server.java", "BodyUseAPI": ["tech.blackhole.blacknectar.service.BlackNectarService.searchForStoresByLocation(tech.blackhole.blacknectar.service.stores.Location)"], "Fixed commit": "5df9ad8b58250e302157fbf3e8bdb037c0420887", "Url": "https://api.github.com/repos/BlackSourceLabs/BlackNectar-Service", "Date": "2016-11-20T05:55:43Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(conf instanceof org.apache.tajo.conf.TajoConf)) { throw new java.lang.IllegalArgumentException(\"Configuration must be a TajoConf instance\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7591/buggy-version/tajo-storage.tajo-storage-hdfs.src.main.java.org.apache.tajo.storage.FileAppender.java", "BodyUseAPI": [], "Fixed commit": "16b88aeb542fb4376b970bb1707b17502ccd6c53", "Url": "https://api.github.com/repos/jihoonson/tajo", "Date": "2015-04-01T05:37:18Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pause) if (optpause) { this.optclkbxman.update(); }else { this.clkbxman.update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/7377/buggy-version/MazeRunner3.src.MainGame.MazeRunner.java", "BodyUseAPI": [], "Fixed commit": "c3b7880fba8c1a15cbc04c1c3addc7f73f99f5db", "Url": "https://api.github.com/repos/EWI3620TU-GROUP06/EWI3620TU-GROUP06", "Date": "2013-12-05T11:22:33Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 1) { func = new iwostaq.yppj.tool.YangCrawler(); }else { func = new iwostaq.yppj.tool.YangCrawler(new java.io.File(args[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/5497/buggy-version/src.tool.java.iwostaq.yppj.tool.AppMain.java", "BodyUseAPI": [], "Fixed commit": "cde29f53f01379c2b0404d4c277e441a220ac5fd", "Url": "https://api.github.com/repos/iwostaq/yang-pullparser-java", "Date": "2017-12-12T09:46:58Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (command.equals(\"namechange\")) { java.lang.String oldName = params[1]; java.lang.String newName = params[2]; for (aidancbrady.client.ClientUser user : aidancbrady.client.ClientCore.instance().usersOnline) { if (user.username.equals(oldName)) { user.username = newName; } } continue; }else if (command.equals(\"popuser\")) { aidancbrady.client.ClientCore.instance().userJoined(params[1], params[2]); continue; }else if (command.equals(\"discname\")) { if ((params.length) == 1) { aidancbrady.client.ClientCore.instance().updateDiscussion(null); continue; } aidancbrady.client.ClientCore.instance().updateDiscussion(params[1]); continue; }else if (command.equals(\"chatlog\")) { aidancbrady.client.ClientCore.instance().theGui.chatBox.setText(aidancbrady.client.Util.getMessage(readerLine.trim()).replace(\"#NL#\", \"\\n\")); continue; }else if (command.equals(\"clear\")) { aidancbrady.client.ClientCore.instance().theGui.chatBox.setText(\"\"); continue; }else if (command.equals(\"modname\")) { aidancbrady.client.ClientCore.instance().updateModeratorName(params[1]); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V118/2643/buggy-version/aidancbrady.client.SocketConnection.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "4fb405c239c4c6c5d47831c675077462f39b876f", "Url": "https://api.github.com/repos/aidancbrady/GATech-Client", "Date": "2013-12-29T19:16:48Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((logMaxAge) <= 0) { throw new org.sakuli.exceptions.SakuliInitException(org.sakuli.datamodel.properties.SakuliProperties.MAX_AGE_GREATER_ZERO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2232/buggy-version/src.core.src.main.java.org.sakuli.datamodel.properties.SakuliProperties.java", "BodyUseAPI": [], "Fixed commit": "44c2f909da4a16b1c77ac85559175f1ec1f77420", "Url": "https://api.github.com/repos/ConSol/sakuli", "Date": "2016-02-19T15:40:10Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.getId()) == (dbFile.getId())) { dbFile.updatePermissions(file, session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4660/buggy-version/src.main.java.com.naples.rest.FileService.java", "BodyUseAPI": ["com.naples.file.File.updatePermissions(com.naples.json.JsonFile,org.hibernate.Session)"], "Fixed commit": "f5f3cd5f44c4c66fc96e5a5ada25faf790ae9dd4", "Url": "https://api.github.com/repos/pleak-tools/pleak-backend", "Date": "2016-07-27T13:17:35Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskPosition) >= (game.tasks.size())) { (taskPosition)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1304/buggy-version/src.gui.ControlPrinter.java", "BodyUseAPI": [], "Fixed commit": "58c9a8c79340ed30649138b2e254a546e32791b2", "Url": "https://api.github.com/repos/josepharhar/stranded", "Date": "2015-01-24T22:01:58Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.repository.model.RepositoryNode.getObjectType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.SVG_BUSINESS_PROCESS)) { item = PropertiesFactory.eINSTANCE.createSVGBusinessProcessItem(); }else if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.METADATA_EDIFACT)) { item = PropertiesFactory.eINSTANCE.createEDIFACTConnectionItem(); }else if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.METADATA_VALIDATION_RULES)) { item = PropertiesFactory.eINSTANCE.createValidationRulesConnectionItem(); }else if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.METADATA_HEADER_FOOTER)) { item = PropertiesFactory.eINSTANCE.createHeaderFooterConnectionItem(); }else if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.METADATA_FILE_BRMS)) { item = PropertiesFactory.eINSTANCE.createBRMSConnectionItem(); }else if (repositoryType == (org.talend.core.model.repository.ERepositoryObjectType.METADATA_FILE_FTP)) { item = PropertiesFactory.eINSTANCE.createFTPConnectionItem(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3109/buggy-version/main.plugins.org.talend.core.repository.src.main.java.org.talend.core.repository.ui.actions.DuplicateAction.java", "BodyUseAPI": [], "Fixed commit": "d3a3eda1309f900b4540b888e11239759fd4e484", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2015-02-12T08:02:27Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileComment == null) { fileComment = entry.getComment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2939/buggy-version/src.main.java.org.linagora.linshare.core.service.impl.DocumentEntryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "6e8ffa48ab783a48401ce16d79ee41ec854290ae", "Url": "https://api.github.com/repos/linagora/linshare-core", "Date": "2015-06-03T14:37:07Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getNeighborsInState(myState).size()", "getNeighborsInState(new state.SegState(otherState)).size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sameNeighborSize + otherNeighborSize) == 0) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3659/buggy-version/src.cell.SegCell.java", "BodyUseAPI": [], "Fixed commit": "9e2f60d8c080d1204c56068d9435b860425571fe", "Url": "https://api.github.com/repos/mym987/cps308_cellsociety", "Date": "2015-10-10T07:27:03Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(java.lang.Double.isInfinite(hf))) && (!(java.lang.Double.isNaN(hf)))) { datastreams.get(\"org.md2k.cstress.data.ecg.rr.LombHighFrequencyEnergy\").add(new md2k.mCerebrum.cStress.Structs.DataPoint(datastreams.get(\"org.md2k.cstress.data.ecg.rr_value\").data.get(0).timestamp, hf)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5273/buggy-version/src.main.java.md2k.mCerebrum.cStress.Features.ECGFeatures.java", "BodyUseAPI": [], "Fixed commit": "fd1a69819c0ed63fd85561cadcc3e1bd98b5e4ca", "Url": "https://api.github.com/repos/MD2Korg/stream-processor", "Date": "2015-11-24T18:45:43Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(java.lang.Double.isInfinite(lf))) && (!(java.lang.Double.isNaN(lf)))) { datastreams.get(\"org.md2k.cstress.data.ecg.rr.LombLowFrequencyEnergy\").add(new md2k.mCerebrum.cStress.Structs.DataPoint(datastreams.get(\"org.md2k.cstress.data.ecg.rr_value\").data.get(0).timestamp, lf)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5273/buggy-version/src.main.java.md2k.mCerebrum.cStress.Features.ECGFeatures.java", "BodyUseAPI": [], "Fixed commit": "fd1a69819c0ed63fd85561cadcc3e1bd98b5e4ca", "Url": "https://api.github.com/repos/MD2Korg/stream-processor", "Date": "2015-11-24T18:45:43Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(java.lang.Double.isInfinite(mf))) && (!(java.lang.Double.isNaN(mf)))) { datastreams.get(\"org.md2k.cstress.data.ecg.rr.LombMediumFrequencyEnergy\").add(new md2k.mCerebrum.cStress.Structs.DataPoint(datastreams.get(\"org.md2k.cstress.data.ecg.rr_value\").data.get(0).timestamp, mf)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5273/buggy-version/src.main.java.md2k.mCerebrum.cStress.Features.ECGFeatures.java", "BodyUseAPI": [], "Fixed commit": "fd1a69819c0ed63fd85561cadcc3e1bd98b5e4ca", "Url": "https://api.github.com/repos/MD2Korg/stream-processor", "Date": "2015-11-24T18:45:43Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(java.lang.Double.isInfinite(lfhf))) && (!(java.lang.Double.isNaN(lfhf)))) { datastreams.get(\"org.md2k.cstress.data.ecg.rr.LowHighFrequencyEnergyRatio\").add(new md2k.mCerebrum.cStress.Structs.DataPoint(datastreams.get(\"org.md2k.cstress.data.ecg.rr_value\").data.get(0).timestamp, lfhf)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5273/buggy-version/src.main.java.md2k.mCerebrum.cStress.Features.ECGFeatures.java", "BodyUseAPI": [], "Fixed commit": "fd1a69819c0ed63fd85561cadcc3e1bd98b5e4ca", "Url": "https://api.github.com/repos/MD2Korg/stream-processor", "Date": "2015-11-24T18:45:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((internal) != null) { internal.set(io.github.pr0methean.betterrandom.util.BinaryUtils.convertBytesToLong(seed)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5346/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.Pcg64Random.java", "BodyUseAPI": [], "Fixed commit": "ad5309035bb7f916ffff7be551538529fa3049ab", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-10-26T23:17:24Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (proxyGrantingTicket != null) { success.addObject(CasViewConstants.MODEL_ATTRIBUTE_NAME_PROXY_GRANTING_TICKET, proxyGrantingTicket.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/419/buggy-version/cas-server-webapp-support.src.main.java.org.jasig.cas.web.ServiceValidateController.java", "BodyUseAPI": ["org.springframework.web.servlet.ModelAndView.addObject(CasViewConstants.MODEL_ATTRIBUTE_NAME_PROXY_GRANTING_TICKET,proxyGrantingTicket.getId())", "org.jasig.cas.ticket.TicketGrantingTicket.getId()"], "Fixed commit": "6a9211035eadecd38783f21067a385ad2d7a0c48", "Url": "https://api.github.com/repos/apereo/cas", "Date": "2015-02-15T12:37:49Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.zxing.integration.android.IntentResult.getContents()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((code != null) && ((code.length()) == 13)) { onNavigationDrawerItemSelected(0); com.ignite.boycott.ScanResultsFragment mScanResultsFragment = ((com.ignite.boycott.ScanResultsFragment) (drawerFragmentMap.get(fragmentTag(0)))); if (mScanResultsFragment != null) { mScanResultsFragment.onScanResult(code); } }else { android.widget.Toast.makeText(this, getString(R.string.code_too_short), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/726/buggy-version/Boycott.src.main.java.com.ignite.boycott.MainActivity.java", "BodyUseAPI": ["com.ignite.boycott.ScanResultsFragment.onScanResult(java.lang.String)"], "Fixed commit": "ab8eed94f063168357281a231ca084e9879d91b9", "Url": "https://api.github.com/repos/meseer/Buycott", "Date": "2014-01-09T22:29:30Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (txSummary.inputsMap.containsKey(inputAddr)) { java.math.BigInteger prevValue = txSummary.inputsMap.get(inputAddr).add(inputValue); txSummary.inputsMap.put(inputAddr, prevValue); }else { txSummary.inputsMap.put(inputAddr, inputValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3082/buggy-version/src.main.java.info.blockchain.wallet.multiaddress.MultiAddressFactory.java", "BodyUseAPI": ["txSummary.inputsMap.get(inputAddr).add(java.math.BigInteger)", "txSummary.inputsMap.put(java.lang.String,java.math.BigInteger)", "txSummary.inputsMap.put(java.lang.String,java.math.BigInteger)", "txSummary.inputsMap.get(java.lang.String)"], "Fixed commit": "ccc9c22a465e521ab9276a997745c830a2c27052", "Url": "https://api.github.com/repos/blockchain/unused-My-Wallet-V3-jar", "Date": "2017-04-10T14:27:14Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((weatherDB.getAllResponses().size()) > 0) && ((weatherDB.getLocationCityResponse(1).size()) > 0)) { mToolBarTextView.setText(weatherDB.getLocationCityResponse(1).get(0).getCity()); refreshAllWeather(); }else { initData(\"\u5317\u4eac\", 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6116/buggy-version/app.src.main.java.com.yangll.bishe.happyweather.activity.MainActivity.java", "BodyUseAPI": ["weatherDB.getLocationCityResponse(1).get(0).getCity()", "com.yangll.bishe.happyweather.db.WeatherDB.getLocationCityResponse(int)", "weatherDB.getLocationCityResponse(1).get(int)", "android.widget.TextView.setText(weatherDB.getLocationCityResponse(1).get(0).getCity())"], "Fixed commit": "3fac102f50b0cf024f4cee2b9092e27958bf8f69", "Url": "https://api.github.com/repos/miss1/HappyWeather", "Date": "2016-12-27T08:28:05Z"},
{"Line": "=>1211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.forum.webui.UITopicDetail.getForumAttachmentById(uiTopicDetail.getPost(postId).getAttachments(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (attach != null) { java.lang.String mimeType = attach.getMimeType().substring(((attach.getMimeType().indexOf(\"/\")) + 1)); org.exoplatform.download.DownloadResource dresource = new org.exoplatform.download.InputStreamDownloadResource(attach.getInputStream(), mimeType); org.exoplatform.download.DownloadService dservice = ((org.exoplatform.download.DownloadService) (org.exoplatform.container.PortalContainer.getInstance().getComponentInstanceOfType(org.exoplatform.download.DownloadService.class))); dresource.setDownloadName(attach.getName()); java.lang.String downloadLink = dservice.getDownloadLink(dservice.addDownloadResource(dresource)); event.getRequestContext().getJavascriptManager().addJavascript(((\"ajaxRedirect('\" + downloadLink) + \"');\")); event.getRequestContext().addUIComponentToUpdateByAjax(uiTopicDetail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7213/buggy-version/forum.webapp.src.main.java.org.exoplatform.forum.webui.UITopicDetail.java", "BodyUseAPI": ["org.exoplatform.forum.service.ForumAttachment.getName()", "org.exoplatform.download.DownloadResource.setDownloadName(attach.getName())", "org.exoplatform.forum.service.ForumAttachment.getInputStream()", "attach.getMimeType().substring(((attach.getMimeType().indexOf(\"/\")) + 1))", "org.exoplatform.forum.service.ForumAttachment.getMimeType()", "attach.getMimeType().indexOf(java.lang.String)", "org.exoplatform.forum.service.ForumAttachment.getMimeType()"], "Fixed commit": "cb656c0e1f707e001f1cfc41df56556f9ec6fdab", "Url": "https://api.github.com/repos/exodev/forum", "Date": "2017-11-07T10:51:40Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (title == null) { title = \"Untitled\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/778/buggy-version/src.main.java.com.revonline.pastebin.Pastebin.java", "BodyUseAPI": [], "Fixed commit": "6937558270dd50da5d0915eedfd3a8eaf45abf5c", "Url": "https://api.github.com/repos/rrev/Pastebin", "Date": "2014-12-23T20:55:28Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (adminId != null) a = edu.umass.ckc.wo.db.DbAdmin.getAdmin(conn, adminId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/378/buggy-version/woServer.src.edu.umass.ckc.wo.woserver.AdminHandler.java", "BodyUseAPI": ["edu.umass.ckc.wo.db.DbAdmin.getAdmin(java.sql.Connection,java.lang.Integer)"], "Fixed commit": "67651c8c145775561f045e3266fac461c9d343d3", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2017-01-18T21:13:40Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (commandName.equals(org.overlord.sramp.shell.ShellCommandFactory.ECHO_CMD_NAME)) { command = new org.overlord.sramp.shell.commands.EchoCommand(); }else { java.lang.Class<? extends org.overlord.sramp.shell.api.ShellCommand> commandClass = registry.get(commandName); if (commandClass == null) return new org.overlord.sramp.shell.commands.CommandNotFoundCommand(); command = commandClass.newInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1582/buggy-version/s-ramp-shell.src.main.java.org.overlord.sramp.shell.ShellCommandFactory.java", "BodyUseAPI": ["java.util.Map<javax.xml.namespace.QName, java.lang.Class<? extends org.overlord.sramp.shell.api.ShellCommand>>.get(javax.xml.namespace.QName)"], "Fixed commit": "c5f3a26d33dad905ee4893dd89a619068388d869", "Url": "https://api.github.com/repos/EricWittmann/s-ramp", "Date": "2014-06-11T18:29:52Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj) == null) { i18NMessage = org.romaframework.core.Roma.component(org.romaframework.aspect.i18n.I18NAspect.class).resolve(iText); }else { i18NMessage = org.romaframework.core.Roma.component(org.romaframework.aspect.i18n.I18NAspect.class).resolve(obj, iText, I18NType.EXCEPTION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3400/buggy-version/src.org.romaframework.core.exception.UserException.java", "BodyUseAPI": [], "Fixed commit": "333e6309f67717956efde929e265d93d3c220e4a", "Url": "https://api.github.com/repos/romaframework/core", "Date": "2012-06-21T13:39:25Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bdValue.compareTo(uk.co.real_logic.sbe.PrimitiveValue.BD_NULL_VALUE_UINT64)) > 0) { throw new java.lang.IllegalArgumentException((\"Value greater than UINT64 allows: value=\" + value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7106/buggy-version/main.java.uk.co.real_logic.sbe.PrimitiveValue.java", "BodyUseAPI": [], "Fixed commit": "20e3c9de3fc880d40fd7225f1dd4370df13a4b20", "Url": "https://api.github.com/repos/real-logic/simple-binary-encoding", "Date": "2014-01-31T16:45:43Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { if (!(title.isEmpty())) { if ((getSupportActionBar()) != null) { getSupportActionBar().setTitle(title); if (url.contains(\"/\")) getSupportActionBar().setSubtitle(me.ccrama.redditslide.Activities.Website.getDomainName(url)); } }else { if ((getSupportActionBar()) != null) { getSupportActionBar().setTitle(me.ccrama.redditslide.Activities.Website.getDomainName(url)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5543/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.Website.java", "BodyUseAPI": [], "Fixed commit": "64fcd4e208ee679e68c46356c14001260c11f39b", "Url": "https://api.github.com/repos/ccrama/Slide", "Date": "2016-03-18T22:18:17Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bidList.size()) == 0) { dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5769/buggy-version/app.src.main.java.cmput301w16t15.shareo.AcceptDeclineBidsFragment.java", "BodyUseAPI": [], "Fixed commit": "fd124c637f9833473c120fb5b99b15c2c60bece9", "Url": "https://api.github.com/repos/CMPUT301W16T15/Shareo", "Date": "2016-04-03T03:33:13Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRunning) { handler.removeCallbacks(drawRunner); isRunning = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8315/buggy-version/app.src.main.java.com.dpanayotov.gameoflife.life.Life.java", "BodyUseAPI": [], "Fixed commit": "755bce54dd565432f57d9a3f78391d2d8a9e4b26", "Url": "https://api.github.com/repos/deanpanayotov/game-of-life-android", "Date": "2016-10-10T23:14:34Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (android.telephony.SmsManager.RESULT_ERROR_GENERIC_FAILURE)) { messageFailedToSend(uri, error); sendFirstQueuedMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7845/buggy-version/ICSSMS.src.main.java.com.androidproductions.ics.sms.service.MessagingService.java", "BodyUseAPI": [], "Fixed commit": "503ea00fff924db6e0489cffc610fec53238dfa0", "Url": "https://api.github.com/repos/azurenightwalker/icssms", "Date": "2013-09-05T23:32:40Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Timestamp) == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7473/buggy-version/app.src.main.java.com.doplgangr.secrecy.FileSystem.File.java", "BodyUseAPI": [], "Fixed commit": "c7c972c777ff7b0daafe2923b620277892292a85", "Url": "https://api.github.com/repos/Doplgangr/secrecy", "Date": "2014-09-16T03:41:56Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getServer().getPlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (victim != null) { idoit = victim.getName(); }else { sender.sendMessage(((org.bukkit.ChatColor.GRAY) + \"Player must be online!\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2400/buggy-version/src.com.modcrafting.ultrabans.commands.Empty.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()"], "Fixed commit": "076542716568a43b0996e38e30934dc7c4571b6b", "Url": "https://api.github.com/repos/deathmarine/Ultrabans", "Date": "2011-12-02T18:19:43Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.bitcoinj.core.Coin) (amount)).isGreaterThan(Constants.NETWORK_PARAMETERS.getMaxMoney())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4582/buggy-version/wallet.src.de.schildbach.wallet.ui.CurrencyAmountView.java", "BodyUseAPI": [], "Fixed commit": "0ba2ce0581e1651706dc5782b2cbdc4aa8313cbb", "Url": "https://api.github.com/repos/bitcoin-wallet/bitcoin-wallet", "Date": "2016-03-08T12:22:54Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sbSentence.toString().trim().equals(\"\"))) { sentences.add(sbSentence.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5805/buggy-version/src.main.java.com.yglab.nlp.sbd.MaxentSentenceDetector.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "24442b34aee77cbd776f407a1d94ba6f7246bca6", "Url": "https://api.github.com/repos/louiezzang/yg-nlp", "Date": "2014-03-18T15:23:46Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toStatus.equals(MessageClassifier.INTERNAL_STATUS_DELIVERED)) { messageServerDAO.clearMessage(this.messageDVO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5338/buggy-version/Plugins.CorvusEbMS.src.main.java.hk.hku.cecid.ebms.spa.task.OutboxTask.java", "BodyUseAPI": [], "Fixed commit": "14f06856b5cb932b825b183176b8d9311df623f9", "Url": "https://api.github.com/repos/SolidTech/jentrata-msh", "Date": "2015-11-16T11:52:29Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (async) { org.bukkit.Bukkit.getServer().getScheduler().scheduleSyncDelayedTask(this, new java.lang.Runnable() { @java.lang.Override public void run() { command.execute(sender, args); } }); }else command.execute(sender, args);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6588/buggy-version/src.com.massivecraft.factions.zcore.MPlugin.java", "BodyUseAPI": [], "Fixed commit": "b8aaeb1053b981966c41dff159e38f5cd5cc048b", "Url": "https://api.github.com/repos/Tahkeh/Factions", "Date": "2012-11-06T20:23:17Z"},
{"Line": "=>922", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((status.currentTerrain.isInherentTerrain()) && ((status.currentHex.getCenterLocation().getTerrain()) != (status.currentTerrain))) { if (((status.VASLGameInterface) != null) && ((status.VASLGameInterface.getTerrain(status.currentHex)) == null)) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/606/buggy-version/src.VASL.LOS.Map.Map.java", "BodyUseAPI": ["VASL.LOS.Map.VASLGameInterface.getTerrain(VASL.LOS.Map.Hex)"], "Fixed commit": "0146d3d6f16d2e4ef09451b1488ec8c464c20bbe", "Url": "https://api.github.com/repos/vasl-developers/vasl", "Date": "2014-03-27T04:33:58Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mSelectedRecipes.contains(recipe))) { mSelectedRecipes.add(recipe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2584/buggy-version/app.src.main.java.org.cook_e.cook_e.MealRecipeAddActivity.java", "BodyUseAPI": ["java.util.List<org.cook_e.data.Recipe>.add(org.cook_e.data.Recipe)"], "Fixed commit": "059add1e4aa910b7f1894017674c3c83414987b1", "Url": "https://api.github.com/repos/Cook-E-team/Cook-E", "Date": "2016-02-26T23:15:02Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (filter == null) getIntent().removeExtra(TaskListFragment.TOKEN_FILTER); else getIntent().putExtra(TaskListFragment.TOKEN_FILTER, filter);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3556/buggy-version/astrid.src.com.todoroo.astrid.activity.AstridActivity.java", "BodyUseAPI": ["getIntent().putExtra(TaskListFragment.TOKEN_FILTER,com.todoroo.astrid.api.Filter)"], "Fixed commit": "72a52cb436699e204f28a2156870dadc2bcf36ef", "Url": "https://api.github.com/repos/jonparis/astrid", "Date": "2012-03-14T03:48:45Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["module.DateChecker.compareDate(dvd.getRentDay(),dvd.getRentMonth(),dvd.getRentYear(),int,int,int)", "Store.searchDVDById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((dvd.getAge()) == 'n') && (compareDate > (newDaysRent))) java.lang.System.out.println(((((\"System : \" + (searchMemberByID(dvd.getRentUser()).getFirstName())) + \" must pay \") + (((compareDate - (newDaysRent)) * (priceOver)) + brokenPrice)) + \" baht\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3535/buggy-version/Program.src.Store.java", "BodyUseAPI": ["java.io.PrintStream.println(((((\"System : \" + (searchMemberByID(dvd.getRentUser()).getFirstName())) + \" must pay \") + (((compareDate - (newDaysRent)) * (priceOver)) + brokenPrice)) + \" baht\"))", "Store.searchMemberByID(dvd.getRentUser())", "IMember.getFirstName()", "DVD.getRentUser()"], "Fixed commit": "d7e06a3c1d170e7cb415aef3dd9a443c1979d41c", "Url": "https://api.github.com/repos/myzenon/DVD-Rental-Management-Software-Console", "Date": "2015-05-05T10:57:15Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Multimap<java.lang.String, java.lang.String>.containsKey(type.getFullyQualifiedName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((!(type.isArray())) && (!(type.isEnum()))) && (!isConcrete)) && (!hasPortableSubtypes)) { throw new java.lang.IllegalStateException(((((\"A field of type \" + type) + \" appears in a portable class, but \") + type) + \" has no portable implementations.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7510/buggy-version/errai-marshalling.src.main.java.org.jboss.errai.marshalling.rebind.DefinitionsFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "c911fd81594a8195a8139f197f575b9e52587761", "Url": "https://api.github.com/repos/hpehl/errai", "Date": "2012-10-17T16:06:14Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((siteInfo) == null) return new in.co.praveenkumar.mdroid.moodlemodel.MoodleSiteInfo();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9297/buggy-version/src.in.co.praveenkumar.mdroid.moodlerest.MoodleRestSiteInfo.java", "BodyUseAPI": [], "Fixed commit": "bcaad6df2f8e3b92fdab09a42cbff21fa8ad65de", "Url": "https://api.github.com/repos/praveendath92/MDroid", "Date": "2014-10-24T17:26:13Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.plugins.git.util.BuildData.getLastBuiltRevision()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (revision != null) { commit = revision.getSha1String(); if (commit != null) { branches = revision.getBranches(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8263/buggy-version/src.main.java.org.jenkinsci.plugins.gittagmessage.GitTagMessageExtension.java", "BodyUseAPI": ["hudson.plugins.git.Revision.getSha1String()", "hudson.plugins.git.Revision.getBranches()"], "Fixed commit": "4d67ef76a1659fb2450d7c69b0010e93d2c03532", "Url": "https://api.github.com/repos/jenkinsci/git-tag-message-plugin", "Date": "2017-10-22T10:41:12Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((getConfigData()) == (PlayerCriteria.HEALTH)) { refreshScoreFromHealth(); }else if (((((getConfigData()) == (PlayerCriteria.CUSTOM)) || ((getConfigData()) == (PlayerCriteria.DEATH_COUNT))) || ((getConfigData()) == (PlayerCriteria.KILL_COUNT))) || ((getConfigData()) == (PlayerCriteria.POINT))) { refreshScore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6144/buggy-version/src.main.java.com.github.ucchyocean.ct.scoreboard.ScoreDisplayBase.java", "BodyUseAPI": [], "Fixed commit": "ecda079e2296a1acb27a7066204d725a5d85ff5a", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2013-11-02T15:07:37Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Telephony.Sms.getDefaultSmsPackage(getApplicationContext())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (defaultSmsPackageName != null) { intent.setPackage(defaultSmsPackageName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4904/buggy-version/app.src.main.java.com.wanching.birthdayreminder.Activities.ViewBirthdayActivity.java", "BodyUseAPI": ["android.content.Intent.setPackage(java.lang.String)"], "Fixed commit": "b141be57224d247c403956bf1bcbe92f02556874", "Url": "https://api.github.com/repos/wanching0730/Birthday-Reminder-2", "Date": "2017-08-17T00:44:51Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (automationProjection == null) { automationProjection = com.joshjcarrier.minecontrol.framework.profiles.ActionPotentialRxAutomationProjection.load(automationReader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2208/buggy-version/src.com.joshjcarrier.minecontrol.framework.profiles.GamePadProfile.java", "BodyUseAPI": [], "Fixed commit": "52b62b359c72b8106b33b6e59d5524a6e83c6608", "Url": "https://api.github.com/repos/joshjcarrier/minecontrol", "Date": "2014-09-02T06:12:37Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((mAppBarLayout) != null) && (isAdded())) && ((getActivity()) != null)) { android.support.v4.view.ViewCompat.setElevation(mAppBarLayout, ((showViewPager()) && (!(hideBanner())) ? 0 : getResources().getDimension(R.dimen.app_bar_elevation))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4372/buggy-version/app.src.main.java.com.grarak.kerneladiutor.fragments.RecyclerViewFragment.java", "BodyUseAPI": [], "Fixed commit": "fd07d5f2a4b2f3f4f28707f51b7d98939d295981", "Url": "https://api.github.com/repos/ShivamKumarJha/KernelAdiutor", "Date": "2016-11-03T16:13:21Z"},
{"Line": "=>916", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (insalmo_instream_gui.MetaProject.getInstance().isInstreamSD()) br.write(((sParams.getParameter(\"speciesStockingFile\").getParameterValue()) + (insalmo_instream_gui.Project.newline)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8477/buggy-version/InsalmoInstreamGui.src.insalmo_instream_gui.Project.java", "BodyUseAPI": [], "Fixed commit": "0c575c83d40db5d9831592d97fb463996d82f4d4", "Url": "https://api.github.com/repos/colinsheppard/insalmo-instream-gui", "Date": "2013-05-03T18:30:17Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mod.getIdentifier().equals(\"default\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2326/buggy-version/src.main.java.bammerbom.ultimatecore.sponge.config.ModulesConfig.java", "BodyUseAPI": [], "Fixed commit": "7b75d5d958ea0853738296097191d4e4499ec798", "Url": "https://api.github.com/repos/Bammerbom/UltimateCore", "Date": "2016-08-05T16:03:49Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BaseballElimination.isTriviallyEliminated(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((certificate.size()) > 0) { return certificate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5776/buggy-version/misc.src.BaseballElimination.java", "BodyUseAPI": [], "Fixed commit": "7b71fa20f7e9a284e9b6594da982536210250a4b", "Url": "https://api.github.com/repos/danny314/comp_sci", "Date": "2016-04-05T22:44:06Z"},
{"Line": "=>1108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((typedReference.getDeclaration()) instanceof com.redhat.ceylon.compiler.typechecker.model.Generic) { for (com.redhat.ceylon.compiler.typechecker.model.TypeParameter tp : ((com.redhat.ceylon.compiler.typechecker.model.Generic) (typedReference.getDeclaration())).getTypeParameters()) { typeArgs.add(typedReference.getTypeArguments().get(tp)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5678/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.java", "BodyUseAPI": ["typedReference.getTypeArguments().get(com.redhat.ceylon.compiler.typechecker.model.TypeParameter)", "java.util.ArrayList<com.redhat.ceylon.compiler.typechecker.model.ProducedType>.add(typedReference.getTypeArguments().get(tp))", "com.redhat.ceylon.compiler.typechecker.model.ProducedTypedReference.getTypeArguments()", "((com.redhat.ceylon.compiler.typechecker.model.Generic) (typedReference.getDeclaration())).getTypeParameters()", "com.redhat.ceylon.compiler.typechecker.model.ProducedTypedReference.getDeclaration()"], "Fixed commit": "0dd8ff5091dfdeafbff0e19f68cd3b5e2e23fecd", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2015-02-17T15:37:20Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mBufferedString.toString().isEmpty())) { mTempStationProperties.setKey(com.google.appengine.api.datastore.KeyFactory.createKey(com.F8Full.bixhistorique.backend.datamodel.StationProperties.class.getSimpleName(), (((mTempStationProperties.getId()) + \"|\") + (mBufferedString.toString())))); }else { mTempStationProperties.setKey(com.google.appengine.api.datastore.KeyFactory.createKey(com.F8Full.bixhistorique.backend.datamodel.StationProperties.class.getSimpleName(), ((mTempStationProperties.getId()) + \"|0\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5726/buggy-version/backend.src.main.java.com.F8Full.bixhistorique.backend.SourceURL_XMLParser.java", "BodyUseAPI": ["com.F8Full.bixhistorique.backend.datamodel.StationProperties.setKey(com.google.appengine.api.datastore.KeyFactory.createKey(com.F8Full.bixhistorique.backend.datamodel.StationProperties.class.getSimpleName(), (((mTempStationProperties.getId()) + \"|\") + (mBufferedString.toString()))))", "com.google.appengine.api.datastore.KeyFactory.createKey(java.lang.String,(((mTempStationProperties.getId()) + \"|\") + (mBufferedString.toString())))", "java.lang.StringBuffer.toString()"], "Fixed commit": "ecabc688a733ad8e8594ccc89b07488dcbb58e56", "Url": "https://api.github.com/repos/f8full/BixHistorique", "Date": "2015-03-23T07:44:12Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.event) != null) { jcue.domain.audiocue.AudioCue target = ((jcue.domain.audiocue.AudioCue) (cb.getSelectedItem())); if (target != null) { this.event.setTargetCue(target); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3552/buggy-version/src.jcue.ui.AbstractEventPanel.java", "BodyUseAPI": [], "Fixed commit": "c674e232e1428369858c8544dc30f26a594aee98", "Url": "https://api.github.com/repos/SlyJack0/JCue", "Date": "2013-03-15T15:56:37Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<PK, T>.get(PK)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(beforeV.equals(afterV))) updateMap.put(pk, ((T[]) (new java.lang.Object[]{ beforeV, afterV })));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/462/buggy-version/src.main.java.cn.sxy.compare.CompareCollections.java", "BodyUseAPI": ["java.util.Map<PK, T[]>.put(PK,java.lang.Object[])"], "Fixed commit": "38679991e55cec4ef9ddd674aa82f851cd47f3ce", "Url": "https://api.github.com/repos/nuo9/compare_collections", "Date": "2017-02-09T10:41:05Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mTaskBeanFromParent.isDeadline()) { showRepeatView(false); }else { showRepeatView(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/379/buggy-version/app.src.main.java.com.tt.reminder.fragment.EditTaskFragment.java", "BodyUseAPI": [], "Fixed commit": "8ac91e82fc39788f9d2976fe41877b248bcec708", "Url": "https://api.github.com/repos/Jexu/Reminder", "Date": "2016-06-27T07:24:05Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hechler.aigames.rest.ImageRegistry.getInstance().getSessionEntry(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (de.hechler.aigames.rest.ConnectFourRestService.tempGameResult.containsKey(entry.gameId)) { return gson.toJson(GenericResult.genericChangesExistResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5243/buggy-version/EchoShowJava.ConnFourGameRestService.src.main.java.de.hechler.aigames.rest.ConnectFourRestService.java", "BodyUseAPI": [], "Fixed commit": "06361b56b76a2108e759595c499ad025d73f9955", "Url": "https://api.github.com/repos/ferenc-hechler/EchoShowSkill", "Date": "2017-12-18T23:26:04Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uri.getPort()) == (-1)) { connectFuture = bootstrap.clone().connect(uri.getHost(), mousio.etcd4j.transport.EtcdNettyClient.DEFAULT_PORT); }else { connectFuture = bootstrap.clone().connect(uri.getHost(), uri.getPort()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2410/buggy-version/src.main.java.mousio.etcd4j.transport.EtcdNettyClient.java", "BodyUseAPI": ["java.net.URI.getPort()", "java.net.URI.getHost()", "java.net.URI.getHost()", "bootstrap.clone().connect(java.lang.String,int)", "bootstrap.clone().connect(java.lang.String,int)"], "Fixed commit": "a3f1bb7fa4fd03860aaf80cd0d81705561e0b520", "Url": "https://api.github.com/repos/ffdybuster/etcd4j", "Date": "2015-12-03T13:53:08Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i % 20) == 0) java.lang.System.out.println((\" \" + i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2994/buggy-version/src.generation.data.DataDistorter.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "2f0350957149b629f34b6db139e610669b824bd2", "Url": "https://api.github.com/repos/Roland-Winkler/EDMOAL", "Date": "2013-04-08T21:42:41Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { args = new java.lang.String[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/734/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "6c2ff507a2c8e46e4d28e739986a8dcebb4c347a", "Url": "https://api.github.com/repos/dyakovri/ElyByLauncher", "Date": "2015-07-09T14:42:21Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ep.getId()) != null) { id = ep.getId().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/818/buggy-version/src.main.java.de.ipk_gatersleben.bit.bi.bridge.brapicomp.utils.RunnerService.java", "BodyUseAPI": ["de.ipk_gatersleben.bit.bi.bridge.brapicomp.dbentities.Endpoint.getId()", "ep.getId().toString()"], "Fixed commit": "c0635ba5204c26a4c9585e38bfe6f93ae76a6a18", "Url": "https://api.github.com/repos/plantbreeding/IPK-BrAPI-Validator", "Date": "2017-11-13T10:00:52Z"},
{"Line": "=>2016", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (description != null) { params.put(\"description\", description); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7490/buggy-version/src.com.minxing.client.app.AppAccount.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "d4ba84a3cd03481d7b58f1ca0729891f2dce7e55", "Url": "https://api.github.com/repos/dehuinet/minxing_java_sdk", "Date": "2015-12-01T14:53:07Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.showAdvancedItemTooltips) { event.toolTip.add(((((((\"Hunger: \" + (values.hunger)) + \" Sat: \") + (values.saturationModifier)) + \" (+\") + (new java.text.DecimalFormat(\"##.##\").format(values.getSaturationIncrement()))) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/171/buggy-version/src.main.java.iguanaman.hungeroverhaul.util.IguanaEventHook.java", "BodyUseAPI": ["event.toolTip.add(((((((\"Hunger: \" + (values.hunger)) + \" Sat: \") + (values.saturationModifier)) + \" (+\") + (new java.text.DecimalFormat(\"##.##\").format(values.getSaturationIncrement()))) + \")\"))"], "Fixed commit": "aa3f99a83293a49cb7e920b87549ee2d8cc7e25e", "Url": "https://api.github.com/repos/progwml6/HungerOverhaul", "Date": "2014-07-17T20:38:38Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getPlayerManager().get(player.getUniqueId()).getHome()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (home != null) if (pr.getLand().contains(home.getBlockX(), home.getBlockY(), home.getBlockZ())) { player.sendMessage(lm.getString(\"Commands.SetHome.removed\")); plugin.getPlayerManager().get(player.getUniqueId()).setHome(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7164/buggy-version/src.main.java.biz.princeps.landlord.commands.Unclaim.java", "BodyUseAPI": ["org.bukkit.Location.getBlockY()", "org.bukkit.Location.getBlockX()", "pr.getLand().contains(home.getBlockX(),home.getBlockY(),home.getBlockZ())", "org.bukkit.Location.getBlockZ()"], "Fixed commit": "a613db1f5abd170298470a69cd2d3e09f3457637", "Url": "https://api.github.com/repos/SpatiumPrinceps/LandLord", "Date": "2017-08-02T15:36:47Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB_MR2)) { display.getSize(size); }else { size.set(display.getWidth(), display.getHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/245/buggy-version/aNewJKUApp.src.main.java.org.voidsink.anewjkuapp.Globals.java", "BodyUseAPI": [], "Fixed commit": "7c66499c5d4d11a794466e848ab19d253ce38a0c", "Url": "https://api.github.com/repos/marunjar/anewjkuapp", "Date": "2014-11-22T09:37:28Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6534/buggy-version/src.cat.uab.cephis.ast.AST.java", "BodyUseAPI": [], "Fixed commit": "b6b97dffdbb57883592f24ed63cc842c6e477628", "Url": "https://api.github.com/repos/davidcastells/Transourcer", "Date": "2017-05-25T06:47:12Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cards.get(i)) != null) cards.get(i).stopEffects();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2634/buggy-version/setgame.src.com.blox.setgame.model.TrainingCardDealer.java", "BodyUseAPI": ["cards.get(i).stopEffects()", "com.blox.setgame.model.TrainingCards.get(int)"], "Fixed commit": "8529b4ff34250eaaa7650b76fb144930f9e36fca", "Url": "https://api.github.com/repos/kankoli/blox", "Date": "2013-10-04T21:06:27Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moveLeftValidate()) { column1 -= 1; column2 -= 1; column3 -= 1; column4 -= 1; }else { java.lang.System.out.println(\"cant move left\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3196/buggy-version/src.glazer.englard.tetris.Piece.java", "BodyUseAPI": [], "Fixed commit": "6d4a56e945754cbd24e89920b23262e7185d6ca7", "Url": "https://api.github.com/repos/cglazer/glazer-englard-TETRIS", "Date": "2016-02-15T17:24:38Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"reject\".equalsIgnoreCase(workFlowDetails.getAction()))) { task.getAssignee().setId(workFlowDetails.getAssignee()); task.getAttributes().put(\"department\", org.egov.tl.workflow.model.Attribute.asStringAttr(\"department\", workFlowDetails.getDepartment())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2713/buggy-version/tradelicense.tl-workflow.src.main.java.org.egov.tl.workflow.service.WorkflowService.java", "BodyUseAPI": ["task.getAssignee().setId(workFlowDetails.getAssignee())", "org.egov.tl.commons.web.contract.WorkFlowDetails.getDepartment()", "org.egov.tl.workflow.model.Attribute.asStringAttr(java.lang.String,workFlowDetails.getDepartment())", "org.egov.tl.commons.web.contract.WorkFlowDetails.getAssignee()", "task.getAttributes().put(java.lang.String,org.egov.tl.workflow.model.Attribute.asStringAttr(\"department\", workFlowDetails.getDepartment()))"], "Fixed commit": "4a95b2303e8946b86c4d34559c29413d1dbfbb5a", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-10-03T13:29:22Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.getMainTreeIndices().size()) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6662/buggy-version/app.src.main.java.com.mc1.dev.goapp.GameController.java", "BodyUseAPI": [], "Fixed commit": "c7e98be5fbadb8b8e12c114fe43e249872162d32", "Url": "https://api.github.com/repos/kampp/GoApp", "Date": "2016-08-06T14:24:20Z"},
{"Line": "=>1085", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.felees.hbnpojogen.State.getInstance().schemaRestrict) == 0) { sb.append(java.lang.String.format(\"@SequenceGenerator(name = \\\"%s\\\", sequenceName = \\\"%s\\\")\", this.sequenceHibernateRef, this.sequenceName)); }else { sb.append(java.lang.String.format(\"@SequenceGenerator(name = \\\"%s\\\", sequenceName = \\\"%s\\\", schema = \\\"%s\\\", catalog = \\\"%s\\\")\", this.sequenceHibernateRef, this.sequenceName, this.getClazz().getTableObj().getDbSchema(), this.getClazz().getTableObj().getDbCat())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3294/buggy-version/hbnpojogen-core.src.main.java.com.felees.hbnpojogen.obj.PropertyObj.java", "BodyUseAPI": [], "Fixed commit": "2b87f42ce5e146d665a96e2592a8f8e8311b505f", "Url": "https://api.github.com/repos/wwadge/hbnpojogen", "Date": "2014-10-22T11:32:33Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stmt) != null) { stmt.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3960/buggy-version/OSA.addon.linux.fermat-osa-addon-linux-database-system-bitdubai.src.main.java.com.bitdubai.fermat_osa_addon.layer.linux.database_system.developer.bitdubai.version_1.desktop.database.bridge.DesktopDatabaseBridge.java", "BodyUseAPI": [], "Fixed commit": "17c2d4927c10f73fd0402f414f94480f4f111c05", "Url": "https://api.github.com/repos/Rart3001/fermat", "Date": "2015-12-15T21:43:06Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c) != null) { c.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3960/buggy-version/OSA.addon.linux.fermat-osa-addon-linux-database-system-bitdubai.src.main.java.com.bitdubai.fermat_osa_addon.layer.linux.database_system.developer.bitdubai.version_1.desktop.database.bridge.DesktopDatabaseBridge.java", "BodyUseAPI": [], "Fixed commit": "17c2d4927c10f73fd0402f414f94480f4f111c05", "Url": "https://api.github.com/repos/Rart3001/fermat", "Date": "2015-12-15T21:43:06Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.storage.rdbms.DatabaseManager.findDbKeyword(java.sql.DatabaseMetaData)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(dbType.equals(DatabaseManager.DBMS_H2))) { scriptLocations.add((((\"filesystem:\" + (org.dspace.core.ConfigurationManager.getProperty(\"dspace.dir\"))) + \"/etc/\") + dbType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7253/buggy-version/dspace-api.src.main.java.org.dspace.storage.rdbms.DatabaseUtils.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add((((\"filesystem:\" + (org.dspace.core.ConfigurationManager.getProperty(\"dspace.dir\"))) + \"/etc/\") + dbType))"], "Fixed commit": "0e80b5488bfd8f00e3e107f4c8f9880f9d8b6196", "Url": "https://api.github.com/repos/hardyoyo/DSpace", "Date": "2014-11-06T22:25:59Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmp == 0) { cmp = (o1.getZ()) - (o2.getZ()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7010/buggy-version/uSkyBlock-Core.src.main.java.us.talabrek.ultimateskyblock.island.OrphanComparator.java", "BodyUseAPI": [], "Fixed commit": "576cd309014adee602246a2a78939924e64fe95b", "Url": "https://api.github.com/repos/rlf/uSkyBlock", "Date": "2016-08-10T21:24:36Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmp == 0) { cmp = (o1.getX()) - (o2.getX()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7010/buggy-version/uSkyBlock-Core.src.main.java.us.talabrek.ultimateskyblock.island.OrphanComparator.java", "BodyUseAPI": [], "Fixed commit": "576cd309014adee602246a2a78939924e64fe95b", "Url": "https://api.github.com/repos/rlf/uSkyBlock", "Date": "2016-08-10T21:24:36Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectionAST == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3720/buggy-version/org.strategoxt.imp.runtime.src.org.strategoxt.imp.runtime.services.views.properties.PropertiesService.java", "BodyUseAPI": [], "Fixed commit": "a055e5b8521667afeac925882b60cf97ea21c225", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2014-02-25T22:12:37Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((roleWon) != null) return ((\"Change cluster config, elected:\" + (winner)) + \" as \") + (roleWon); else return ((\"Change cluster config, unelected:\" + (loser)) + \" as \") + (roleWon);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6897/buggy-version/enterprise.cluster.src.main.java.org.neo4j.cluster.protocol.cluster.ClusterMessage.java", "BodyUseAPI": [], "Fixed commit": "bc9c50b41031a0bc3cbdcb6ef3fb1517df9c0a1f", "Url": "https://api.github.com/repos/boggle/neo4j", "Date": "2013-10-30T04:15:04Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (left != null) { left.parent = this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2500/buggy-version/output.BinaryExpression.java", "BodyUseAPI": [], "Fixed commit": "bfd2fab141a6b150ec9ff6ef654422f5b8d9ce4f", "Url": "https://api.github.com/repos/CS4240-tiger/tiger-compiler", "Date": "2014-11-11T03:10:42Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (right != null) { right.parent = this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2500/buggy-version/output.BinaryExpression.java", "BodyUseAPI": [], "Fixed commit": "bfd2fab141a6b150ec9ff6ef654422f5b8d9ce4f", "Url": "https://api.github.com/repos/CS4240-tiger/tiger-compiler", "Date": "2014-11-11T03:10:42Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPage) == 25) { mMorePages = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3929/buggy-version/app.src.main.java.com.bourke.glimmr.fragments.base.PhotoGridFragment.java", "BodyUseAPI": [], "Fixed commit": "2789b7b1c588635a142d321051a43b41a70c9c43", "Url": "https://api.github.com/repos/j3whalen/GlimmrApp", "Date": "2017-05-04T17:02:02Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (statistical) { nameFinder.clearAdaptiveData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6476/buggy-version/src.main.java.eus.ixa.ixa.pipe.nerc.Annotate.java", "BodyUseAPI": [], "Fixed commit": "4c1d6d78a0e6351f65ec4c3dc1719f72888a1fdb", "Url": "https://api.github.com/repos/ixa-ehu/ixa-pipe-nerc", "Date": "2016-05-31T10:33:58Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["restservices.consume.RestConsumer.HttpResponseData.getResponseHeadersAsJson()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((status) >= 400) && ((status) < 600)) && (jsonHeaders.has(RestServices.HEADER_CONTENTTYPE))) && (jsonHeaders.getJSONArray(RestServices.HEADER_CONTENTTYPE).getString(0).contains(\"json\"))) { restservices.proxies.RestServiceError rse = new restservices.proxies.RestServiceError(context); try { restservices.util.JsonDeserializer.readJsonDataIntoMendixObject(context, new org.json.JSONObject(getBody()), rse.getMendixObject(), false); rr.setErrorDetails(rse); } catch (java.lang.Exception e) { RestServices.LOGCONSUME.warn((\"Failed to parse error message to JSON: \" + (getBody()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8975/buggy-version/javasource.restservices.consume.RestConsumer.java", "BodyUseAPI": [], "Fixed commit": "006c8d99ee1442a6f219586b0c5d24aac64d80ca", "Url": "https://api.github.com/repos/mendix/RestServices", "Date": "2014-07-02T13:50:55Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.expectedChange) != null) { throw new java.lang.IllegalStateException((\"Expected change not received:\\n\" + (this.expectedChange))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1900/buggy-version/undofx.src.main.java.org.fxmisc.undo.impl.nonlinear.NonlinearUndoManager.java", "BodyUseAPI": [], "Fixed commit": "3ad463e943c187427c3572d088336990f3524069", "Url": "https://api.github.com/repos/JordanMartinez/UndoFX", "Date": "2017-03-15T15:32:53Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format != null) { this.format = format; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6871/buggy-version/axelor-base.src.main.java.com.axelor.apps.report.engine.ReportSettings.java", "BodyUseAPI": [], "Fixed commit": "7ef5ee5bed8b6b49a88ebb57d6f29268e21ca4d7", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2016-03-14T13:51:04Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(event.entity.worldObj.isRemote)) { final net.minecraft.item.ItemStack stack = GrowthCraftMilk.items.stomach.asStack(count); growthcraft.core.util.ItemUtils.spawnItemStackAtEntity(stack, event.entityLiving, rng); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4823/buggy-version/src.java.growthcraft.milk.eventhandler.EventHandlerOnBabyCowDeath.java", "BodyUseAPI": ["growthcraft.core.util.ItemUtils.spawnItemStackAtEntity(net.minecraft.item.ItemStack,event.entityLiving,java.util.Random)"], "Fixed commit": "c84034341ad9dad03c6bd77eb2f0aaa7e775d366", "Url": "https://api.github.com/repos/moxventura/Growthcraft-1.7", "Date": "2017-09-19T09:03:34Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (returnUrl.endsWith(\"//\")) { returnUrl.substring(0, ((returnUrl.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2052/buggy-version/src.main.java.net.bingosoft.oss.ssoclient.servlet.AbstractLoginServlet.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "8a4e9e8e5b02abd947175779b97a4cb988b9f9c0", "Url": "https://api.github.com/repos/bingo-oss/sso-client", "Date": "2017-04-26T01:49:10Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (number < 0) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/377/buggy-version/src.main.java.org.hashids.Hashids.java", "BodyUseAPI": [], "Fixed commit": "256777e12f6acb77b78fb7dc7f97eb57dcfcd26a", "Url": "https://api.github.com/repos/jiecao-fm/hashids-java", "Date": "2016-10-03T22:03:04Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldValue instanceof com.orientechnologies.orient.core.db.record.ridbag.ORidBag) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9091/buggy-version/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java", "BodyUseAPI": [], "Fixed commit": "bc0d59479bc7c6201f532df0d5b1a4961d950f8d", "Url": "https://api.github.com/repos/emrul/orientdb", "Date": "2014-09-15T10:44:15Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastBlockWasCountedAsEmptyLine) { lastBlockWasCountedAsEmptyLine = false; }else { lineIndex++; charOffsetEnd += 2; charOffsetStart = charOffsetEnd; lastBlockWasCountedAsEmptyLine = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2717/buggy-version/flowtextview.src.main.java.uk.co.deanwild.flowtextview.FlowTextView.java", "BodyUseAPI": [], "Fixed commit": "bf563ea4e409df91be4497848edc389444bc6b52", "Url": "https://api.github.com/repos/ljungqvist/FlowTextView", "Date": "2017-05-15T07:17:41Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.kryptondev.spacy.server.GameClient.SGameClient.getMyShip()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ship != null) if (ship.isMoving) { ship.move(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1151/buggy-version/src.de.kryptondev.spacy.server.GameTick.java", "BodyUseAPI": ["de.kryptondev.spacy.data.Ship.move()"], "Fixed commit": "88dff051068c4f491deb04c8a3a4c075743c22b1", "Url": "https://api.github.com/repos/DevChuckNorris/Spacy", "Date": "2015-09-23T10:41:36Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sablo.BaseWebObject.unwrapValue(java.lang.String,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (newUnwrappedV != propertyValue) defaultPropertiesUnwrapped.put(propertyName, newUnwrappedV);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6653/buggy-version/sablo.src.main.java.org.sablo.BaseWebObject.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "c38225302e234a349bbcb3721840676624aed5ad", "Url": "https://api.github.com/repos/Servoy/sablo", "Date": "2014-09-16T17:19:48Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.getUrl().toString().contentEquals(getString(R.string.webview_login_url))) { mLoginWebView.loadUrl(com.owncloud.android.authentication.AuthenticatorActivity.ERROR_WEB_PAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1029/buggy-version/src.main.java.com.owncloud.android.authentication.AuthenticatorActivity.java", "BodyUseAPI": [], "Fixed commit": "587d0bd3323a2dea9bc2be2704382dbb9c3fcabe", "Url": "https://api.github.com/repos/aleister09/android", "Date": "2017-04-05T23:39:48Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ar.length) == 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3863/buggy-version/algorithms.binary_search.java.binarysearch.java", "BodyUseAPI": [], "Fixed commit": "960bf53bf5cd7c69df4bbd37a6dd234cd5f37c2b", "Url": "https://api.github.com/repos/BaReinhard/Hacktoberfest-Data-Structure-and-Algorithms", "Date": "2017-10-15T17:28:48Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getResources().getConfiguration().orientation) != (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) { camera.setDisplayOrientation(90); }else { camera.setDisplayOrientation(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2094/buggy-version/MainActivity.src.cs407.snapendar.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3e52aee789941776f31370466ec96535223d1af4", "Url": "https://api.github.com/repos/mschleifer/Snapendar", "Date": "2013-05-11T05:07:03Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rn.full.screen.FullScreen.getCurrentActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (activity == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4583/buggy-version/android.src.main.java.com.rn.full.screen.FullScreen.java", "BodyUseAPI": [], "Fixed commit": "d013d7588132850d9caa59dc4afb67d1c0849369", "Url": "https://api.github.com/repos/golden-piggy/react-native-full-screen", "Date": "2017-12-29T10:35:17Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (roundingAmount != 1.0) { finalBill += roundingAmount; tipAmount += roundingAmount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4181/buggy-version/app.src.main.java.com.sticktaplabs.tipcalculatorplus.TipCalculatorPlus.java", "BodyUseAPI": [], "Fixed commit": "893053d8643e71a6ae4c82882b2a9c9ffeb0068b", "Url": "https://api.github.com/repos/joshmlambert/TipCalculator-Plus", "Date": "2014-10-12T06:19:49Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (session != null) { request.getRequestDispatcher(\"work.jsp\").forward(request, response); }else if (!(\"login\".equals(action))) { request.setAttribute(\"action\", \"login\"); request.getRequestDispatcher(\"start.jsp\").forward(request, response); }else if ((((login == null) || (password == null)) || (login.isEmpty())) || (password.isEmpty())) { request.setAttribute(\"isLoginOrRegistrationError\", true); request.setAttribute(\"errorMessage\", \"Incorrect login or password!\"); request.setAttribute(\"action\", \"login\"); request.setAttribute(\"login\", login); request.getRequestDispatcher(\"start.jsp\").forward(request, response); }else { request.getRequestDispatcher(\"work.jsp\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/44/buggy-version/src.main.java.by.eugenepetsevich.todolist.controllers.LoginController.java", "BodyUseAPI": [], "Fixed commit": "5c6f386f5b168c0ed9bb055068e4a0c38687f186", "Url": "https://api.github.com/repos/EugenePetsevich/ToDoList", "Date": "2016-06-05T22:35:56Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hitogo.HitogoController.getDefaultAsSimpleCall(org.hitogo.HitogoBuilder)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (customBuilder != null) { return customBuilder; }else { return asLayoutChild().asDismissible().withState(controller.getDefaultState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8743/buggy-version/library.src.main.java.org.hitogo.HitogoBuilder.java", "BodyUseAPI": [], "Fixed commit": "a3ba0f496d64550c0dbedbf884eefe8d261b3d86", "Url": "https://api.github.com/repos/Mordag/hitogo", "Date": "2017-09-03T21:50:40Z"},
{"Line": "=>873", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (droppedChildren) { this.dropQuantifiers(); }else { for (mjchao.mazenav.logic.ExpressionTree.ExpressionNode child : this.children) { child.dropQuantifiers(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/532/buggy-version/src.mjchao.mazenav.logic.ExpressionTree.java", "BodyUseAPI": [], "Fixed commit": "9ed23931cc231e35b2c226a6ebd2e81c638b9716", "Url": "https://api.github.com/repos/mjchao/Logic-Based-AI", "Date": "2016-05-06T23:49:27Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tickets) != null) for (com.glo4003.project.match.model.AbstractTicketCategory cat : this.tickets) { amount += cat.getNumberRemainingTickets(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7840/buggy-version/src.main.java.com.glo4003.project.match.model.MatchConcreteModel.java", "BodyUseAPI": [], "Fixed commit": "335788b5a8abd6ac9d0adfea8b6e450dd7228c72", "Url": "https://api.github.com/repos/sallesma/GLO4003", "Date": "2013-12-09T04:02:19Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mRetainedAppData.isFetchInProgress()) { mProgressBar.setVisibility(View.VISIBLE); }else { mProgressBar.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5850/buggy-version/app.src.main.java.psv.apps.java.retrofitexample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b799a3c95917fafcc8a36bd574edc21680e0de26", "Url": "https://api.github.com/repos/opendroid/RetrofitExample", "Date": "2016-07-15T03:09:46Z"},
{"Line": "=>1320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getServiceManager().getArtifactGroupInfo(artifactGroupInfos.getArtifactGroupId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (artifactGroupInfo.getName().equals(getPropType())) { java.util.List<com.photon.phresco.commons.model.ArtifactInfo> artifactInfos = artifactGroupInfo.getVersions(); for (com.photon.phresco.commons.model.ArtifactInfo artifactInfo : artifactInfos) { if (appInfoArtifactInfoIds.contains(artifactInfo.getId())) { versions.add(artifactInfo.getVersion()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3642/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Configurations.java", "BodyUseAPI": ["com.photon.phresco.commons.model.ArtifactGroup.getVersions()"], "Fixed commit": "8a41fd4b5e8b186037ee82306f4adf3f842a4648", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-01-22T15:35:59Z"},
{"Line": "=>1338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getServiceManager().getArtifactGroupInfo(artifactGroupInfos.getArtifactGroupId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (artifactGroupInfo.getName().equals(getPropType())) { java.util.List<com.photon.phresco.commons.model.ArtifactInfo> artifactInfos = artifactGroupInfo.getVersions(); for (com.photon.phresco.commons.model.ArtifactInfo artifactInfo : artifactInfos) { if (artifactInfoIds.contains(artifactInfo.getId())) { versions.add(artifactInfo.getVersion()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3642/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Configurations.java", "BodyUseAPI": ["com.photon.phresco.commons.model.ArtifactGroup.getVersions()"], "Fixed commit": "8a41fd4b5e8b186037ee82306f4adf3f842a4648", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-01-22T15:35:59Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getGeneratedDirectory().mkdirs())) { throw new org.apache.maven.plugin.MojoExecutionException((\"Unable to create directory \" + (getGeneratedDirectory().getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6748/buggy-version/hk2-configuration.persistence.hk2-xml-dom.config-generator.src.main.java.org.jvnet.hk2.config.generator.maven.AbstractConfigGeneratorMojo.java", "BodyUseAPI": [], "Fixed commit": "9188203aa0922484d356a51e80c09b71809e0c21", "Url": "https://api.github.com/repos/javaee/hk2", "Date": "2015-05-06T19:38:38Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.l3s.eventkg.integration.model.relation.GenericRelation.getObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((object.getEventEntity()) != null) object = object.getEventEntity();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7578/buggy-version/src.de.l3s.eventkg.integration.DataStoreWriter.java", "BodyUseAPI": ["de.l3s.eventkg.integration.model.Entity.getEventEntity()"], "Fixed commit": "282d2f999274cb86d6e3d509d3e246d16de55e88", "Url": "https://api.github.com/repos/sgottsch/eventkg", "Date": "2017-06-22T15:05:59Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.l3s.eventkg.integration.model.relation.GenericRelation.getObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((object.getEventEntity()) != null) object = object.getEventEntity();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7578/buggy-version/src.de.l3s.eventkg.integration.DataStoreWriter.java", "BodyUseAPI": ["de.l3s.eventkg.integration.model.Entity.getEventEntity()"], "Fixed commit": "282d2f999274cb86d6e3d509d3e246d16de55e88", "Url": "https://api.github.com/repos/sgottsch/eventkg", "Date": "2017-06-22T15:05:59Z"},
{"Line": "=>1776", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((matcher.start()) > 0) { char before = content.charAt(((matcher.start()) - 1)); if ((((before != ' ') && (before != '\\t')) && (before != '\\n')) && (before != '\\r')) continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3244/buggy-version/src.com.patrick_vane.unrealscript.editor.UnrealScriptEditor.java", "BodyUseAPI": ["java.util.regex.Matcher.start()", "java.lang.String.charAt(int)"], "Fixed commit": "7d4be26ac78dc6b8b516690212673f059c59c9c3", "Url": "https://api.github.com/repos/patrickvane/unrealscript_editor", "Date": "2013-08-12T21:14:12Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scenarioInstance.getDataAttributeInstances().isEmpty()) { this.setCanTerminate(true); }else { java.util.LinkedList<java.lang.Integer> outputSets = dbDataFlow.getOutputSetsForControlNode(controlNodeInstance.getControlNode_id()); int outputSet = outputSets.getFirst(); de.uni_potsdam.hpi.bpt.bp2014.database.DbDataNode dbDataNode = new de.uni_potsdam.hpi.bpt.bp2014.database.DbDataNode(); java.util.LinkedList<de.uni_potsdam.hpi.bpt.bp2014.database.DataObject> dataObjects = dbDataNode.getDataObjectsForDataSets(outputSet); boolean hasAttribute = false; for (de.uni_potsdam.hpi.bpt.bp2014.database.DataObject dataObject : dataObjects) { for (de.uni_potsdam.hpi.bpt.bp2014.jcore.DataAttributeInstance dataAttributeInstance : scenarioInstance.getDataAttributeInstances().values()) { if ((dataAttributeInstance.getDataObjectInstance().getDataObject_id()) == (dataObject.getId())) { hasAttribute = true; break; } } if (hasAttribute) { break; } } if (hasAttribute) { this.setCanTerminate(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2191/buggy-version/src.main.java.de.uni_potsdam.hpi.bpt.bp2014.jcore.HumanTaskExecutionBehavior.java", "BodyUseAPI": ["scenarioInstance.getDataAttributeInstances().values()", "de.uni_potsdam.hpi.bpt.bp2014.jcore.HumanTaskExecutionBehavior.getDataAttributeInstances()"], "Fixed commit": "99216a4bfa3057d7c9c417f7402a1045159a2a81", "Url": "https://api.github.com/repos/BP2014W1/JEngine", "Date": "2015-05-11T08:54:37Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name.length()) <= 0) { markerArrayList.get(i).setVisible(true); }else markerArrayList.get(i).setVisible(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1875/buggy-version/app.src.main.java.devteam.pokemon_know.PokemonServer.RetrivePokemon.java", "BodyUseAPI": [], "Fixed commit": "149ad85b284d7f23488e2f162afdb0c78835d05b", "Url": "https://api.github.com/repos/EkTheGod/wireless_project", "Date": "2016-11-09T22:46:21Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((returnMessage) == null) { throw new java.util.concurrent.TimeoutException((\"TimeOut:\" + timeout)); }else if ((returnMessage.responseCode) == 1) { return returnMessage.returnValue; }else { throw new com.scalahome.rpc.RemoteException((\"Response Error, Response Code:\" + (returnMessage.responseCode))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1441/buggy-version/src.main.java.com.scalahome.rpc.RPCBuilderImpl.java", "BodyUseAPI": [], "Fixed commit": "2382c2f6d97760741a3525bcb5008fb8cb312b84", "Url": "https://api.github.com/repos/shine0108/rpc", "Date": "2016-12-15T02:03:18Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.consulo.compiler.CompilerPathsManager.getCompilerOutput(rootModel.getModule(),ContentFolderType.TEST)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (compilerOutput != null) { result.add(compilerOutput); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6127/buggy-version/platform.projectModel-impl.src.com.intellij.openapi.roots.impl.OrderRootsEnumeratorImpl.java", "BodyUseAPI": ["java.util.Collection<com.intellij.openapi.vfs.VirtualFile>.add(com.intellij.openapi.vfs.VirtualFile)"], "Fixed commit": "9f7797d9779fac92045621cecf438182e3ee238e", "Url": "https://api.github.com/repos/consulo/consulo", "Date": "2013-06-20T17:43:40Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reverseProperties) { existingTokens.add(rep.getValue()); }else { existingTokens.add(rep.getToken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1851/buggy-version/src.main.java.com.google.code.maven_replacer_plugin.ReplacerMojo.java", "BodyUseAPI": [], "Fixed commit": "226a2597139449e00b8057e73b1886d52135f322", "Url": "https://api.github.com/repos/dtracers/maven-replacer-plugin", "Date": "2015-09-08T06:49:05Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(((mBluetoothAdapter) == null) || (!(mBluetoothAdapter.isEnabled())))) && ((mLEScanner) != null)) mLEScanner.stopScan(resultCallback);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8956/buggy-version/VS_minker_BleSensirion.app.src.main.java.ch.ethz.inf.vs.a1.minker.ble.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2bf99f502353b3b7e09252b0568a5d6b46c662e4", "Url": "https://api.github.com/repos/lucidBrot/rogerReloaded", "Date": "2017-10-12T18:59:48Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext().fileList()) != null) { long oneday = (new java.util.Date().getTime()) - 86400; for (java.lang.String path : getContext().fileList()) { java.io.File file = new java.io.File(getContext().getFilesDir(), path); if ((file.lastModified()) < oneday) { getContext().deleteFile(path); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6724/buggy-version/src.org.imaginationforpeople.android2.helper.DataHelper.java", "BodyUseAPI": [], "Fixed commit": "cf266c80a8fb325aca8c91953e7c9cee16c994c7", "Url": "https://api.github.com/repos/ImaginationForPeople/android", "Date": "2013-03-11T15:40:21Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vswe.stevesfactory.blocks.TileEntityRelay.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (inventory != null) { inventory.onInventoryChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5125/buggy-version/src.vswe.stevesfactory.blocks.TileEntityRelay.java", "BodyUseAPI": ["net.minecraft.inventory.IInventory.onInventoryChanged()"], "Fixed commit": "3c03609b6d4630b605df44e7b442ba2548ae7cf3", "Url": "https://api.github.com/repos/Vswe/ModJam3", "Date": "2014-02-01T20:46:51Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((start <= ind) && (ind <= mid)) { update(((2 * node) + 1), start, mid, ind, val); }else { update(((2 * node) + 2), (mid + 1), end, ind, val); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5005/buggy-version/segment_tree.java", "BodyUseAPI": ["data_structures.SegTree.update(int,int,int,int,int)", "data_structures.SegTree.update(int,int,int,int,int)"], "Fixed commit": "67497debef74403e6e016448872c187a3290a916", "Url": "https://api.github.com/repos/ch3125/Data-Structures", "Date": "2017-06-29T18:04:45Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page == null) { return new org.springframework.http.ResponseEntity<java.util.List<com.bayou.views.AdvertisementView>>(org.springframework.http.HttpStatus.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7470/buggy-version/src.main.java.com.bayou.controllers.AdvertisementController.java", "BodyUseAPI": [], "Fixed commit": "06dbfc159b31312fae9dfac997952ce7881034e2", "Url": "https://api.github.com/repos/team-bayou/UNO-Shareboard", "Date": "2017-04-12T00:46:01Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object instanceof java.lang.Long) { java.lang.Long id = ((java.lang.Long) (object)); LOG.warn(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2401/buggy-version/SplitAndGoMVC.src.main.java.edu.mum.aspect.LoggingAspect.java", "BodyUseAPI": [], "Fixed commit": "aa065ced5a5c32dc9331f6997311fa9968e36efd", "Url": "https://api.github.com/repos/mrvanhieu/SplitAndGo", "Date": "2017-05-24T19:52:29Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 1) { if ((args[1].equalsIgnoreCase(\"true\")) || (args[1].equalsIgnoreCase(\"false\"))) { adult = \"false\".equalsIgnoreCase(args[1]); toSkip++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1345/buggy-version/src.me.libraryaddict.disguise.BaseDisguiseCommand.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "a48db82eb916dfcba0356f14d968356032a4d51f", "Url": "https://api.github.com/repos/libraryaddict/LibsDisguises", "Date": "2013-11-05T15:51:01Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(notis.isEmpty())) { notiMapper.setRead(notis); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4702/buggy-version/xi-server.src.main.java.thu.declan.xi.server.service.impl.NotificationServiceImpl.java", "BodyUseAPI": ["thu.declan.xi.server.mapper.NotificationMapper.setRead(java.util.List<thu.declan.xi.server.model.Notification>)"], "Fixed commit": "1f868b16c4dff69058c354877459842ea7dc0a86", "Url": "https://api.github.com/repos/declan94/xintern", "Date": "2017-11-10T02:51:26Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addMember) { account.setMember(member); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3891/buggy-version/server.src.main.java.org.mixit.cesar.security.model.Account.java", "BodyUseAPI": [], "Fixed commit": "7f07818e77a4019e2fb8ca90ef3df91b43a54385", "Url": "https://api.github.com/repos/mixitconf/cesar", "Date": "2015-12-28T18:34:30Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(db.isConnected())) db.connect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7659/buggy-version/BetterShardsBungee.src.vg.civcraft.mc.bettershards.bungee.BungeeDatabaseHandler.java", "BodyUseAPI": ["vg.civcraft.mc.bettershards.database.Database.connect()"], "Fixed commit": "3f68378738dbcd1ce1b931a689bb94504bc8e78d", "Url": "https://api.github.com/repos/Civcraft/BetterShards", "Date": "2016-05-09T18:32:37Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(db.isConnected())) db.connect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7659/buggy-version/BetterShardsBungee.src.vg.civcraft.mc.bettershards.bungee.BungeeDatabaseHandler.java", "BodyUseAPI": ["vg.civcraft.mc.bettershards.database.Database.connect()"], "Fixed commit": "3f68378738dbcd1ce1b931a689bb94504bc8e78d", "Url": "https://api.github.com/repos/Civcraft/BetterShards", "Date": "2016-05-09T18:32:37Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numTabsOpen) > 0) { switchTab(currTab); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/107/buggy-version/Prototype1.app.src.main.java.com.example.singi_000.prototype1.InscriptionActivity.java", "BodyUseAPI": [], "Fixed commit": "8ba780afbf13dfab4c74b1d3f2b063a68f005d99", "Url": "https://api.github.com/repos/jafrancis/COMP4721-Team-Project-Frontend", "Date": "2015-03-04T21:43:58Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.dimitrioskanellopoulos.athletica.BuildConfig.DEBUG) { android.graphics.Paint bluePaint = new android.graphics.Paint(); bluePaint.setColor(Color.BLUE); canvas.drawLine(bounds.left, bounds.exactCenterY(), bounds.right, bounds.exactCenterY(), bluePaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2215/buggy-version/wear.src.main.java.com.dimitrioskanellopoulos.athletica.grid.GridRenderer.java", "BodyUseAPI": [], "Fixed commit": "c27e38ee8beb8209ef27e5d3637ec4806526bb58", "Url": "https://api.github.com/repos/jimmykane/Athletica", "Date": "2016-06-01T14:17:03Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.resolve(java.nio.file.Path)", "java.util.Map<java.nio.file.Path, org.eclipse.flux.watcher.core.spi.Project>.get(java.nio.file.Path)", "org.eclipse.flux.watcher.fs.JDKProjectWatchService.cast(java.nio.file.WatchEvent<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((project.hasResource(resourcePath.toString())) && ((pathEvent.kind()) == (java.nio.file.StandardWatchEventKinds.ENTRY_CREATE))) { repositoryEventType = PROJECT_RESOURCE_MODIFIED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3570/buggy-version/org.eclipse.flux.watcher.src.main.java.org.eclipse.flux.watcher.fs.JDKProjectWatchService.java", "BodyUseAPI": [], "Fixed commit": "4aa97d6021b97f100a3c55611638432112b1b4e0", "Url": "https://api.github.com/repos/fjodorver/flux", "Date": "2016-08-18T14:23:37Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createQuery(query).setParameter(\"id\", payment.getId()).list()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (List.isEmpty()) { return \"fail\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5997/buggy-version/src.java.com.smi.travel.datalayer.dao.impl.PaymentWendytourImpl.java", "BodyUseAPI": [], "Fixed commit": "969920b734d71e516fa06356a4f3c88aecf45535", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-05-27T07:43:41Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.ServletContext.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (manager.accountExist(userID)) { if (manager.idPasswordMatch(userID, password)) { javax.servlet.RequestDispatcher dispatcher = request.getRequestDispatcher(\"HomePage.jsp\"); dispatcher.forward(request, response); }else { javax.servlet.RequestDispatcher dispatcher = request.getRequestDispatcher(\"LoginFailed.jsp\"); dispatcher.forward(request, response); } }else { javax.servlet.RequestDispatcher dispatcher = request.getRequestDispatcher(\"LoginFailed.jsp\"); dispatcher.forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9148/buggy-version/src.KaiChieh.UserLogin.java", "BodyUseAPI": ["bian.AccountManager.idPasswordMatch(java.lang.String,java.lang.String)"], "Fixed commit": "8f5cb9a2ad8fdb30c4269a4b41a6b325743a3024", "Url": "https://api.github.com/repos/KaiChiehHuang/QuizWeb", "Date": "2016-03-02T00:54:57Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oscarehr.common.dao.ValidationsDao.find(oscar.util.ConversionUtils.fromIntString(type.getValidation()))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (vs != null) { result.add(vs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1858/buggy-version/src.main.java.oscar.oscarEncounter.oscarMeasurements.pageUtil.EctValidation.java", "BodyUseAPI": ["java.util.List<org.oscarehr.common.model.Validations>.add(org.oscarehr.common.model.Validations)"], "Fixed commit": "1c690b11612576e6dcc7c7494ecbfd5f7e61bf9d", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-12-10T03:35:01Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { refresher.error(\"Online again!\", \"repeating alarm set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6505/buggy-version/app.src.main.java.de.vibora.viborafeed.Alarm.java", "BodyUseAPI": [], "Fixed commit": "1c19d484866be302d8714741b3338e64f6fc1d84", "Url": "https://api.github.com/repos/no-go/ViboraFeed", "Date": "2016-10-16T19:51:21Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((password != null) && (!(password.isEmpty()))) { controller.getLocalDataUser().setPassword(password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1416/buggy-version/src.main.java.data.CDataMain.java", "BodyUseAPI": ["controller.getLocalDataUser().setPassword(java.lang.String)"], "Fixed commit": "823d91e8081ecfa869f8a49fc29271ccd55afa0c", "Url": "https://api.github.com/repos/alexballet/LO23-Battleship-Online", "Date": "2017-12-19T19:04:48Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id == null) || ((id.length()) == 0)) return new com.example.jetty_jersey.Dao.MRO((-1), \"Not assigned\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2218/buggy-version/src.main.java.com.example.jetty_jersey.DaoInterfaceImpl.TaskImpl.java", "BodyUseAPI": [], "Fixed commit": "e15af472e38048ccc49386a6ddaf3eeacfd8ffed", "Url": "https://api.github.com/repos/krimokrimo007/GL_Project", "Date": "2017-04-26T00:02:34Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.FROYO)) sb.append(io.vov.vitamio.utils.Device.getPair(\"serial\", Build.SERIAL)); else sb.append(io.vov.vitamio.utils.Device.getPair(\"serial\", \"No Serial\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2818/buggy-version/vitamio.src.io.vov.vitamio.utils.Device.java", "BodyUseAPI": [], "Fixed commit": "b2cfb84cc465319267739250949a230ba9656f5a", "Url": "https://api.github.com/repos/iNdieboyjeff/VitamioBundle", "Date": "2013-11-08T02:09:58Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firstMarker) > 0) markerLabelWidth = org.geworkbenchweb.visualizations.client.ui.VDendrogram.drawLabels(markerLabelCanvas, markerLabels, cellHeight, firstMarker); else markerLabelWidth = org.geworkbenchweb.visualizations.client.ui.VDendrogram.drawLabels(markerLabelCanvas, markerLabels, cellHeight, yIndex1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2477/buggy-version/src.main.java.org.geworkbenchweb.visualizations.client.ui.VDendrogram.java", "BodyUseAPI": [], "Fixed commit": "b02d1709ccc838f35e6494c5045ff71d0adb2834", "Url": "https://api.github.com/repos/geworkbench-group/geworkbench-web", "Date": "2014-05-23T22:02:26Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((place.getDescription()) != null) { placeToUpdate.setDescription(place.getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7077/buggy-version/src.main.java.ua.softserve.rv_018.greentourism.service.PlaceServiceImpl.java", "BodyUseAPI": ["ua.softserve.rv_018.greentourism.model.Place.getDescription()", "ua.softserve.rv_018.greentourism.model.Place.setDescription(place.getDescription())"], "Fixed commit": "b5ba98e514c598196941c4d613b553d7c72d18d0", "Url": "https://api.github.com/repos/Social-projects-Rivne/rv-018.java", "Date": "2016-10-02T11:48:07Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((place.getName()) != null) { placeToUpdate.setName(place.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7077/buggy-version/src.main.java.ua.softserve.rv_018.greentourism.service.PlaceServiceImpl.java", "BodyUseAPI": ["ua.softserve.rv_018.greentourism.model.Place.getName()", "ua.softserve.rv_018.greentourism.model.Place.setName(place.getName())"], "Fixed commit": "b5ba98e514c598196941c4d613b553d7c72d18d0", "Url": "https://api.github.com/repos/Social-projects-Rivne/rv-018.java", "Date": "2016-10-02T11:48:07Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Id == (-1)) { barCodeCB.setSelectedIndex((-1)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4180/buggy-version/src.ee.ut.math.tvt.salessystem.ui.SalesSystemUI.java", "BodyUseAPI": [], "Fixed commit": "7ab57a42fc371317d8600944e274556b1f19d6da", "Url": "https://api.github.com/repos/kristianhunt/BSS-SE", "Date": "2013-10-29T10:08:32Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((imageUrl.contains(\"image\")) || (imageUrl.contains(\".jpg\"))) && (imageUrl.contains(\" \"))) { imageUrl = imageUrl.replace(\" \", \"%20\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5862/buggy-version/JavaCommon.src.edu.sjsu.cinequest.comm.ImageManager.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "4c1fa685958d6b2cebc932a9af515ae2f28140bb", "Url": "https://api.github.com/repos/katharinebrinker/Cinequest-Android", "Date": "2014-11-27T09:10:22Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.knowm.xchange.anx.v2.service.ANXAccountService.anxWithdrawFunds(currency.toString(),java.math.BigDecimal,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (wrapper.getResult().equals(\"error\")) { throw new java.lang.IllegalStateException((\"Failed to withdraw funds: \" + (response.getMessage()))); }else if ((wrapper.getError()) != null) { throw new java.lang.IllegalStateException((\"Failed to withdraw funds: \" + (wrapper.getError()))); }else { return response.getTransactionId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5797/buggy-version/xchange-anx.src.main.java.org.knowm.xchange.anx.v2.service.ANXAccountService.java", "BodyUseAPI": ["org.knowm.xchange.anx.v2.dto.account.ANXWithdrawalResponseWrapper.getError()", "org.knowm.xchange.anx.v2.dto.account.ANXWithdrawalResponseWrapper.getError()"], "Fixed commit": "03e2314d534f7173c130e43102719a67ac9d847d", "Url": "https://api.github.com/repos/LeonidShamis/XChange", "Date": "2017-07-23T12:00:29Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.agiletec.aps.system.common.entity.model.attribute.HypertextAttribute.getJAXBValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != value) { jaxbAttribute.setHtmlValue(value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6154/buggy-version/src.main.java.com.agiletec.aps.system.common.entity.model.attribute.HypertextAttribute.java", "BodyUseAPI": ["java.lang.Object.toString()", "com.agiletec.aps.system.common.entity.model.attribute.JAXBHypertextAttribute.setHtmlValue(java.lang.String)"], "Fixed commit": "de738752682914f18cbec0a64adb897d7c287de1", "Url": "https://api.github.com/repos/entando/entando-core-engine", "Date": "2012-03-12T17:14:59Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aSelectedFilter) != null) { filterName.setText(aSelectedFilter.getName()); }else if (text != null) { filterName.setText(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9033/buggy-version/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.maintab.secondarytabs.FilterTab.java", "BodyUseAPI": [], "Fixed commit": "923a2c9885b7d5f431ac46fb752b4ef4241e7011", "Url": "https://api.github.com/repos/magwitch324/wpi-suite", "Date": "2013-12-17T21:20:50Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player.isCreative())) (stack.stackSize)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1129/buggy-version/src.main.java.the_fireplace.overlord.entity.EntitySkeletonWarrior.java", "BodyUseAPI": [], "Fixed commit": "9d89973983ae0beb64de30331d089af8a96f9531", "Url": "https://api.github.com/repos/The-Fireplace-Minecraft-Mods/Overlord", "Date": "2016-10-07T04:54:23Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { android.content.Intent intent = new android.content.Intent(this, bernhardwebstudio.shadowtravelor.SettingsActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6390/buggy-version/app.src.main.java.bernhardwebstudio.shadowtravelor.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "192b43a436d6ccd4d0792c34f3f2e3c212232b7d", "Url": "https://api.github.com/repos/BernhardWebstudio/ShadowTravelor", "Date": "2017-09-16T12:41:54Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.validCommands.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (listing.isPerformInst()) sCommand.perform(); else Config.INSTANCE.addCommand(sCommand);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7526/buggy-version/src.main.java.me.superckl.biometweaker.script.object.BiomesScriptObject.java", "BodyUseAPI": [], "Fixed commit": "fee21ac0798ed608ba37936333bbdbf849f54e61", "Url": "https://api.github.com/repos/superckl/BiomeTweaker", "Date": "2015-06-16T08:24:22Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (conv.isSet((((type + \".\") + name) + \".text\"))) { text.put(defaultLang, pack.getString(((((((\"conversations.\" + (convName)) + \".\") + type) + \".\") + name) + \".text\")).replace(\"\\\\n\", \"\\n\")); }else { throw new pl.betoncraft.betonquest.InstructionParseException(java.lang.String.format(\"Text is not defined in '%s' %s.\", name, visibleType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8886/buggy-version/src.main.java.pl.betoncraft.betonquest.conversation.ConversationData.java", "BodyUseAPI": [], "Fixed commit": "db79bc4e52457820ff8f286a6a5b238a209e2b56", "Url": "https://api.github.com/repos/Co0sh/BetonQuest", "Date": "2017-10-24T06:28:25Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getName().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((eventName.length) > 1) { java.lang.String classification = com.tywholland.poeevents.PoEUtil.getClassification(((eventName[1].charAt(PoEEvent.CLASSIFICATION_CHAR_LOCATION)) + \"\"), res); values.put(PoEEvent.TAG_CLASSIFICATION, classification); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3565/buggy-version/src.com.tywholland.poeevents.PoEEventsDataSource.java", "BodyUseAPI": ["com.tywholland.poeevents.PoEUtil.getClassification(((eventName[1].charAt(PoEEvent.CLASSIFICATION_CHAR_LOCATION)) + \"\"),android.content.res.Resources)", "java.lang.String.charAt(PoEEvent.CLASSIFICATION_CHAR_LOCATION)"], "Fixed commit": "4b833143b978bb11a99b8a25d53a68315acc354e", "Url": "https://api.github.com/repos/Tywholland/PoEEvents", "Date": "2013-12-31T07:06:38Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((executor) != null) executor.shutdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8960/buggy-version/src.main.java.com.osinka.camel.beanstalk.BeanstalkConsumer.java", "BodyUseAPI": [], "Fixed commit": "58a7dc91698e5f0b870367854e9916659f5f64f8", "Url": "https://api.github.com/repos/osinka/camel-beanstalk", "Date": "2011-08-13T15:44:38Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.keycloak.saml.common.util.StaxParserUtil.peek(javax.xml.stream.XMLEventReader)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (xmlEvent instanceof javax.xml.stream.events.StartElement) { startElement = ((javax.xml.stream.events.StartElement) (xmlEvent)); java.lang.String tag = org.keycloak.saml.common.util.StaxParserUtil.getStartElementName(startElement); if (tag.equals(JBossSAMLConstants.NAMEID.get())) { return org.keycloak.saml.processing.core.parsers.util.SAMLParserUtil.parseNameIDType(xmlEventReader); } }else if (xmlEvent instanceof javax.xml.stream.events.EndElement) { javax.xml.stream.events.EndElement end = org.keycloak.saml.common.util.StaxParserUtil.getNextEndElement(xmlEventReader); java.lang.String endElementTag = org.keycloak.saml.common.util.StaxParserUtil.getEndElementName(end); if (!(org.keycloak.saml.common.util.StaxParserUtil.matches(end, JBossSAMLConstants.ATTRIBUTE_VALUE.get()))) throw org.keycloak.saml.processing.core.parsers.util.SAMLParserUtil.logger.parserUnknownEndElement(endElementTag); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1626/buggy-version/saml-core.src.main.java.org.keycloak.saml.processing.core.parsers.util.SAMLParserUtil.java", "BodyUseAPI": [], "Fixed commit": "67a05ee227a9436f36b0228933f1c36b6351aba6", "Url": "https://api.github.com/repos/stianst/keycloak", "Date": "2017-05-23T13:14:25Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((wagnisart.trim().length()) == 0) { return gdv.xport.satz.feld.common.WagnisartLeben.NULL; }else { return gdv.xport.satz.feld.common.WagnisartLeben.isIn(java.lang.Integer.parseInt(wagnisart)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8431/buggy-version/src.main.java.gdv.xport.satz.Datensatz.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "gdv.xport.satz.feld.common.WagnisartLeben.isIn(int)"], "Fixed commit": "ff455c6ac8019c0e070900f2dd485e2777475e5d", "Url": "https://api.github.com/repos/oboehm/gdv.xport", "Date": "2013-02-04T19:21:42Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cdlib.xtf.lazyTree.ParentNodeImpl.getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (last != null) { while (true) { net.sf.saxon.om.NodeInfo next = ((org.cdlib.xtf.lazyTree.NodeImpl) (last)).getNextSibling(); if (next == null) break; last = next; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4096/buggy-version/WEB-INF.src.org.cdlib.xtf.lazyTree.ParentNodeImpl.java", "BodyUseAPI": [], "Fixed commit": "43660f3099c4005fc6083f8751f3a8c9386e444e", "Url": "https://api.github.com/repos/snac-pilot/xtf-cpf", "Date": "2005-08-22T00:52:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (children == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1803/buggy-version/src.com.n9mtq4.console.lib.managers.PluginManager.java", "BodyUseAPI": [], "Fixed commit": "e23c0804ee561e677b0e703ef3a1859043325a3d", "Url": "https://api.github.com/repos/n9Mtq4/LogWindow", "Date": "2014-12-03T19:04:52Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.tikal.jenkins.plugins.multijob.MultiJobBuilder.PhaseSubJob, com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>.get(com.tikal.jenkins.plugins.multijob.MultiJobBuilder.PhaseSubJob)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (phaseConfig.isBuildOnlyIfSCMChanges()) { if ((getScmChange(subJob, phaseConfig, multiJobBuild, listener, launcher)) >= 4) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2279/buggy-version/src.main.java.com.tikal.jenkins.plugins.multijob.MultiJobBuilder.java", "BodyUseAPI": ["com.tikal.jenkins.plugins.multijob.MultiJobBuilder.getScmChange(hudson.model.AbstractProject,com.tikal.jenkins.plugins.multijob.PhaseJobsConfig,com.tikal.jenkins.plugins.multijob.MultiJobBuild,hudson.model.BuildListener,hudson.Launcher)"], "Fixed commit": "85b6a61558458af2daaa3aaa11ec482f139bca76", "Url": "https://api.github.com/repos/harcher81/tikal-multijob-plugin", "Date": "2014-11-05T15:19:14Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (PackageBuilder.extToPackageName.containsKey(extName)) extToFileName.get(extName).add(fileName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8851/buggy-version/src.PackageBuilder.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.ArrayList<java.lang.String>>.get(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "9cbb78bf95a78b8999caa579e5a3676a38791823", "Url": "https://api.github.com/repos/LeoZis/PackageBuilder", "Date": "2014-03-17T16:52:35Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != (vipInfo)) && (null != (vipInfo.getMembercard()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7813/buggy-version/ShioWaiter.app.src.main.java.com.cqgk.clerk.activity.CashieringActivity.java", "BodyUseAPI": [], "Fixed commit": "82e8b10f6c6f64ed2736dd3268e6b9560174d55c", "Url": "https://api.github.com/repos/svencode/shop_2", "Date": "2016-05-20T14:46:18Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (disabledAnnotators == null) disabledAnnotators = new java.util.ArrayList<edu.cmu.ml.rtw.micro.model.annotation.nlp.PipelineNLPMicro.Annotator>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7031/buggy-version/src.main.java.edu.cmu.ml.rtw.micro.model.annotation.nlp.PipelineNLPMicro.java", "BodyUseAPI": [], "Fixed commit": "647fffc582c9af466bbcdf14f987579cb8d99e44", "Url": "https://api.github.com/repos/cmunell/micro", "Date": "2015-05-26T18:15:34Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position != (-1)) return mData.get(position); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1277/buggy-version/library.src.main.java.com.chad.library.adapter.base.BaseQuickAdapter.java", "BodyUseAPI": ["java.util.List<T>.get(int)"], "Fixed commit": "fd898472b9ff21e15fa2d0b2aa45556b50464cf5", "Url": "https://api.github.com/repos/1109993488/BaseRecyclerViewAdapterHelper", "Date": "2017-01-01T16:02:18Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_selectedMinute) < 0) _selectedMinute = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2075/buggy-version/src.com.alexlabs.trackmovement.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7b25c273ad1e061e48d2bfd55b5e372a4b0692e8", "Url": "https://api.github.com/repos/SMTwinLabs/sm_labs", "Date": "2015-11-29T13:23:13Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(com.photon.phresco.plugins.nodejs.SONAR)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.equals(com.photon.phresco.plugins.nodejs.FUNCTIONAL)) { sb.delete(0, sb.length()); workingDir = workingDir + (project.getProperties().getProperty(Constants.POM_PROP_KEY_FUNCTEST_DIR)); sb.append(com.photon.phresco.plugins.nodejs.SONAR_COMMAND).append(com.photon.phresco.plugins.nodejs.STR_SPACE).append(\"-Dsonar.branch=functional\").append(com.photon.phresco.plugins.nodejs.STR_SPACE).append(com.photon.phresco.plugins.nodejs.SKIP_TESTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4842/buggy-version/nodejs-phresco-plugin.src.main.java.com.photon.phresco.plugins.nodejs.NodeJsPlugin.java", "BodyUseAPI": [], "Fixed commit": "ec1f5106096e8143a328491481a64d27dc6f1197", "Url": "https://api.github.com/repos/phresco/plugins", "Date": "2013-01-28T14:11:44Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.FilenameUtils.getBaseName(uploadedFile.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((baseName.length()) < 3) { baseName = baseName + \"_converted\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/550/buggy-version/jodconverter-webapp-build.jodconverter-webapp.src.main.java.org.artofsolving.jodconverter.sample.web.ConverterServlet.java", "BodyUseAPI": [], "Fixed commit": "22f312743b7c59a51610c799ace1ca1a79189497", "Url": "https://api.github.com/repos/voer-platform/Python-JOD", "Date": "2013-05-28T14:30:22Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.length()) > 140) { input = input.replaceAll(\"damn \", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6235/buggy-version/src.main.java.co.uk.jiveelection.campaign.utils.TextHelper.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "eed6cfc9829ef3d3587318f38f8746f09b33895d", "Url": "https://api.github.com/repos/mezpahlan/jivecampaign", "Date": "2015-04-14T17:07:58Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.length()) > 140) { input = input.replaceAll(\"we're\", \"we\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6235/buggy-version/src.main.java.co.uk.jiveelection.campaign.utils.TextHelper.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "eed6cfc9829ef3d3587318f38f8746f09b33895d", "Url": "https://api.github.com/repos/mezpahlan/jivecampaign", "Date": "2015-04-14T17:07:58Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getTextContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.baidu.autocut.tieba.util.HashedPoolMananger.checkCodeFile(content)) { com.baidu.autocut.tieba.item.JavaItem java = new com.baidu.autocut.tieba.item.JavaItem(content); mImportJavaItem.add(java); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/328/buggy-version/src.com.baidu.autocut.tieba.item.XmlItem.java", "BodyUseAPI": [], "Fixed commit": "bd713e32f4cc7b1a5e1890e661154235ed93143f", "Url": "https://api.github.com/repos/zxzx74147/AutoCut", "Date": "2015-11-04T05:47:22Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"}\".equals(value)) { pm.popParser(token); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7812/buggy-version/src.main.java.dyvil.tools.compiler.parser.classes.ClassBodyParser.java", "BodyUseAPI": [], "Fixed commit": "1a39fd2dea3fe4a7cb8cb48cb68e6dce0d113d4f", "Url": "https://api.github.com/repos/Clashsoft/Dyvil", "Date": "2014-09-09T18:31:15Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Exception.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (message == null) { message = ex.getClass().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7812/buggy-version/src.main.java.dyvil.tools.compiler.parser.ParserManager.java", "BodyUseAPI": [], "Fixed commit": "1a39fd2dea3fe4a7cb8cb48cb68e6dce0d113d4f", "Url": "https://api.github.com/repos/Clashsoft/Dyvil", "Date": "2014-09-09T18:31:15Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.security.cert.X509Certificate.getKeyUsage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (keyUsageBits == null) { if (expected != 0) { java.lang.String message = \"Key usage extension is expected, but unavailable.\"; throw new java.security.GeneralSecurityException(message); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8843/buggy-version/services.src.main.java.org.keycloak.authentication.authenticators.x509.CertificateValidator.java", "BodyUseAPI": [], "Fixed commit": "20d35e3817460caddacdc6721b5ec01eb74a2b52", "Url": "https://api.github.com/repos/brat000012001/keycloak", "Date": "2016-08-30T12:54:07Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.security.cert.X509Certificate.getCriticalExtensionOIDs()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (critSet != null) { isCritical = critSet.contains(\"2.5.29.15\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8843/buggy-version/services.src.main.java.org.keycloak.authentication.authenticators.x509.CertificateValidator.java", "BodyUseAPI": ["java.util.Set.contains(java.lang.String)"], "Fixed commit": "20d35e3817460caddacdc6721b5ec01eb74a2b52", "Url": "https://api.github.com/repos/brat000012001/keycloak", "Date": "2016-08-30T12:54:07Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.security.cert.X509Certificate.getCriticalExtensionOIDs()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (critSet != null) { isCritical = critSet.contains(\"2.5.29.37\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8843/buggy-version/services.src.main.java.org.keycloak.authentication.authenticators.x509.CertificateValidator.java", "BodyUseAPI": ["java.util.Set.contains(java.lang.String)"], "Fixed commit": "20d35e3817460caddacdc6721b5ec01eb74a2b52", "Url": "https://api.github.com/repos/brat000012001/keycloak", "Date": "2016-08-30T12:54:07Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((teamName) != null) userInfo += teamName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6692/buggy-version/FantaysLeague.src.main.java.sports.User.java", "BodyUseAPI": [], "Fixed commit": "1a3f837e99124650b70bc0c607aea7b2f837d683", "Url": "https://api.github.com/repos/DownCastAce/CS4227-Fantasy-League", "Date": "2015-10-24T16:56:57Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((userInfo.length) == 2) return new sports.User(userInfo[0], userInfo[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6692/buggy-version/FantaysLeague.src.main.java.sports.UserFactory.java", "BodyUseAPI": [], "Fixed commit": "1a3f837e99124650b70bc0c607aea7b2f837d683", "Url": "https://api.github.com/repos/DownCastAce/CS4227-Fantasy-League", "Date": "2015-10-24T16:56:57Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.domain.service.CollectionServiceImpl.getCollectionItemById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (collectionItem == null) { throw new org.ednovo.gooru.core.exception.NotFoundException(generateErrorMessage(org.ednovo.gooru.domain.service.GL0056, org.ednovo.gooru.domain.service.COLLECTION_ITEM)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1537/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.CollectionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e970bced1d61109803c16817ca37afce93678c3d", "Url": "https://api.github.com/repos/prakashraja89/Gooru-Core-API", "Date": "2014-10-29T09:00:54Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nutz.dao.impl.NutDao.getEntity(java.lang.Class<T>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((en.getNameField()) == null) throw new org.nutz.dao.DaoException((\"Need @Name for \" + classOfT));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6301/buggy-version/src.org.nutz.dao.impl.NutDao.java", "BodyUseAPI": [], "Fixed commit": "89c497180fd262116b8ec3c386c0f1b923ae6a7d", "Url": "https://api.github.com/repos/conanca/nutz", "Date": "2012-05-17T02:36:38Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nutz.dao.impl.NutDao.getEntity(java.lang.Class<T>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((en.getIdField()) == null) throw new org.nutz.dao.DaoException((\"Need @Id for \" + classOfT));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6301/buggy-version/src.org.nutz.dao.impl.NutDao.java", "BodyUseAPI": [], "Fixed commit": "89c497180fd262116b8ec3c386c0f1b923ae6a7d", "Url": "https://api.github.com/repos/conanca/nutz", "Date": "2012-05-17T02:36:38Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i.range()) != null) { annotation.registerFix(new org.sonarlint.intellij.actions.NoSonarIntentionAction(i.range())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/989/buggy-version/src.main.java.org.sonarlint.intellij.editor.SonarExternalAnnotator.java", "BodyUseAPI": ["com.intellij.lang.annotation.Annotation.registerFix(org.sonarlint.intellij.actions.NoSonarIntentionAction)", "org.sonarlint.intellij.issue.IssuePointer.range()"], "Fixed commit": "9cd310d53f9204569860f916dd2c11a4b8729133", "Url": "https://api.github.com/repos/SonarSource/sonarlint-intellij", "Date": "2016-01-13T08:20:55Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getActivity().getIntent().hasExtra(STOP_NAME)) { java.lang.String stopName = getActivity().getIntent().getStringExtra(STOP_NAME); setTabAndSpinner(stopName); getActivity().getIntent().removeExtra(STOP_NAME); }else if (getActivity().getIntent().hasExtra(NOTIFY_STOP_NAME)) { setTabAndSpinner(getActivity().getIntent().getStringExtra(NOTIFY_STOP_NAME)); getActivity().getIntent().removeExtra(NOTIFY_STOP_NAME); }else if ((!(org.thecosmicfrog.luasataglance.util.Preferences.loadDefaultStopName(getContext()).equals(\"None\"))) && ((org.thecosmicfrog.luasataglance.util.Preferences.loadDefaultStopName(getContext())) != null)) { setTabAndSpinner(org.thecosmicfrog.luasataglance.util.Preferences.loadDefaultStopName(getContext())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6755/buggy-version/mobile.src.main.java.org.thecosmicfrog.luasataglance.activity.LuasTimesFragment.java", "BodyUseAPI": ["getActivity().getIntent().getStringExtra(java.lang.String)", "getActivity().getIntent().removeExtra(java.lang.String)"], "Fixed commit": "2f734774c1e40d26c4bbe6853c270628eaa186c9", "Url": "https://api.github.com/repos/thecosmicfrog/LuasataGlance", "Date": "2015-12-07T21:04:11Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tag.getKey().toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"railway\".equals(key)) { if ((((((((\"rail\".equals(value)) || (\"tram\".equals(value))) || (\"subway\".equals(value))) || (\"monorail\".equals(value))) || (\"narrow_gauge\".equals(value))) || (\"preserved\".equals(value))) || (\"light_rail\".equals(value))) || (\"construction\".equals(value))) { return false; } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2949/buggy-version/mapsforge-map-writer.src.main.java.org.mapsforge.map.writer.util.OSMUtils.java", "BodyUseAPI": [], "Fixed commit": "c9e724f98950eb5ecb7578fb9d4866dfa6d1a4fc", "Url": "https://api.github.com/repos/mapsforge/mapsforge", "Date": "2014-11-07T16:00:16Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.identity.application.authenticator.google.GoogleOAuth2Authenticator.log.isDebugEnabled()) { org.wso2.carbon.identity.application.authenticator.google.GoogleOAuth2Authenticator.log.debug((((\"Authenticator \" + (getName())) + \" is using the claim dialect uri \") + claimDialectUri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5096/buggy-version/components.org.wso2.carbon.identity.application.authenticator.google.src.main.java.org.wso2.carbon.identity.application.authenticator.google.GoogleOAuth2Authenticator.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "a81309814ea870798964a74e65048518c2885335", "Url": "https://api.github.com/repos/supunharsha/identity-outbound-auth-google", "Date": "2017-09-08T08:50:30Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.world.provider.dimensionId) == 0) { net.multiplemonomials.eer.util.EmcInitializationHelper.initEmcRegistry(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1896/buggy-version/src.main.java.net.multiplemonomials.eer.handler.WorldEventHandler.java", "BodyUseAPI": [], "Fixed commit": "fff02823011eb8843f0d217d179caa531dc66898", "Url": "https://api.github.com/repos/multiplemonomials/Equivalent-Exchange-Reborn", "Date": "2015-01-09T03:16:38Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(myVcs.getProject().isDefault())) { rootInfo = (myTarget.isFile()) ? myVcs.getSvnFileUrlMapping().getWcRootForFilePath(myTarget.getFile()) : myVcs.getSvnFileUrlMapping().getWcRootForUrl(myTarget.getURL().toDecodedString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3131/buggy-version/plugins.svn4idea.src.org.jetbrains.idea.svn.commandLine.CommandUtil.java", "BodyUseAPI": ["org.jetbrains.idea.svn.SvnVcs.getSvnFileUrlMapping()", "myVcs.getSvnFileUrlMapping().getWcRootForUrl(myTarget.getURL().toDecodedString())", "org.jetbrains.idea.svn.SvnVcs.getSvnFileUrlMapping()", "myVcs.getSvnFileUrlMapping().getWcRootForFilePath(myTarget.getFile())"], "Fixed commit": "b3dd860100d940988e2d7aa2c939bb5c2695af42", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2013-09-27T09:43:16Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (myTarget.isURL()) { result = new org.jetbrains.idea.svn.api.Repository(myTarget.getURL()); }else { org.tmatesoft.svn.core.wc.SVNInfo info = org.jetbrains.idea.svn.commandLine.CommandUtil.getInfo(myVcs, myTarget); result = (info != null) ? new org.jetbrains.idea.svn.api.Repository(info.getRepositoryRootURL()) : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3131/buggy-version/plugins.svn4idea.src.org.jetbrains.idea.svn.commandLine.CommandUtil.java", "BodyUseAPI": ["org.jetbrains.idea.svn.commandLine.CommandUtil.getInfo(org.jetbrains.idea.svn.SvnVcs,org.tmatesoft.svn.core.wc2.SvnTarget)", "org.tmatesoft.svn.core.wc2.SvnTarget.getURL()"], "Fixed commit": "b3dd860100d940988e2d7aa2c939bb5c2695af42", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2013-09-27T09:43:16Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mChildContainsRecyclerView) != null) { mChildContainsRecyclerView.requestLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6644/buggy-version/widget.multirvcontainer.src.main.java.com.lsjwzh.widget.multirvcontainer.NestRecyclerViewHelper.java", "BodyUseAPI": [], "Fixed commit": "dc6afddac1fa6cd3185c94dc5e49b48883226ea3", "Url": "https://api.github.com/repos/lsjwzh/MultiRVScrollView", "Date": "2017-09-25T11:18:50Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"body\".equals(localName)) { inBody = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1141/buggy-version/src.nu.validator.xml.UseCountingXMLReaderWrapper.java", "BodyUseAPI": [], "Fixed commit": "2f4cff4e2afdafe0ba437dffffd75fb3a59bc4c1", "Url": "https://api.github.com/repos/validator/validator", "Date": "2017-10-22T23:35:43Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.di.job.JobMeta.findDatabase(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (databaseMeta != null) { dbName = databaseMeta.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5587/buggy-version/ui.src.org.pentaho.di.ui.spoon.delegates.SpoonTreeDelegate.java", "BodyUseAPI": ["org.pentaho.di.core.database.DatabaseMeta.getName()"], "Fixed commit": "bcef57eb2ea2a55549415ba7bda5422639f90965", "Url": "https://api.github.com/repos/brosander/pentaho-kettle", "Date": "2014-03-31T19:06:37Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.di.trans.TransMeta.findDatabase(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (databaseMeta != null) { dbName = databaseMeta.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5587/buggy-version/ui.src.org.pentaho.di.ui.spoon.delegates.SpoonTreeDelegate.java", "BodyUseAPI": ["org.pentaho.di.core.database.DatabaseMeta.getName()"], "Fixed commit": "bcef57eb2ea2a55549415ba7bda5422639f90965", "Url": "https://api.github.com/repos/brosander/pentaho-kettle", "Date": "2014-03-31T19:06:37Z"},
{"Line": "=>1047", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection403ErrorCounter) > 1) { android.widget.Toast.makeText(getApplicationContext(), R.string.error403, Toast.LENGTH_SHORT).show(); httpStatusCode = 0; com.lgallardo.qbittorrentclient.MainActivity.disableRefreshSwipeLayout(); }else { new com.lgallardo.qbittorrentclient.MainActivity.qBittorrentTask().execute(com.lgallardo.qbittorrentclient.MainActivity.params); new com.lgallardo.qbittorrentclient.MainActivity.qBittorrentCommand().execute(new java.lang.String[]{ \"alternativeSpeedLimitsEnabled\", \"\" }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3666/buggy-version/app.src.main.java.com.lgallardo.qbittorrentclient.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9da717d693ccc9c02131ca4c5a10108ff00e8e6b", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2016-06-18T20:33:16Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(tags.isEmpty())) && (!(tags.matches(\"( )*\")))) { for (java.lang.String s : tags.split(\",\")) tagsTrimmed.add(s.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2446/buggy-version/src.main.java.com.sysc4806.PostController.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "289327d225bea76a81ae1a888462df92cc0659e7", "Url": "https://api.github.com/repos/rscarson/SYSC4806-AMA", "Date": "2017-03-29T13:51:36Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.cutoffSetMap.get(rank)) == null) { return blast.specification.BLASTIdentifier.DEFAULT_CUTOFFS.get(rank); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4857/buggy-version/src.blast.specification.BLASTIdentifier.java", "BodyUseAPI": ["java.util.Map<taxonomy.Ranks, blast.specification.cutoff.TUITCutoffSet>.get(taxonomy.Ranks)"], "Fixed commit": "e1f7244ad1f4eb61ff70d340504981b1704129db", "Url": "https://api.github.com/repos/axrt/TUIT", "Date": "2014-02-17T16:27:38Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<blast.normal.hit.NormalizedHit>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((normalizedHit.getAssignedTaxid()) == (this.pivotalHit.getAssignedTaxid())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4857/buggy-version/src.blast.normal.iteration.NormalizedIteration.java", "BodyUseAPI": [], "Fixed commit": "e1f7244ad1f4eb61ff70d340504981b1704129db", "Url": "https://api.github.com/repos/axrt/TUIT", "Date": "2014-02-17T16:27:38Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i != ((Y.length) - 1)) first.remove(empty);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6678/buggy-version/src.Grammar.java", "BodyUseAPI": [], "Fixed commit": "d1ed11d5ae70461489bc24bb3c6be7a76dfba2d4", "Url": "https://api.github.com/repos/EgillEinarss/PTG", "Date": "2013-04-26T17:21:06Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i != ((Y.length) - 1)) first.remove(empty);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6678/buggy-version/src.Grammar.java", "BodyUseAPI": [], "Fixed commit": "d1ed11d5ae70461489bc24bb3c6be7a76dfba2d4", "Url": "https://api.github.com/repos/EgillEinarss/PTG", "Date": "2013-04-26T17:21:06Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pages) == 0) || ((pagesRead) == 0)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6950/buggy-version/app.models.Book.java", "BodyUseAPI": [], "Fixed commit": "6d207057ac8f7107ea76b876bfe391a1f2a9cdf8", "Url": "https://api.github.com/repos/doublet/lotsa-books", "Date": "2014-08-15T20:46:51Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split.length) != 4) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9083/buggy-version/src.PlanetCrash.parsing.Yago.YagoLexer.java", "BodyUseAPI": [], "Fixed commit": "ab6ab59c240c54294e3f6cec758713d6448b38c6", "Url": "https://api.github.com/repos/SQLProject2015/PlanetCrash", "Date": "2015-06-20T18:56:07Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PlanetCrash.parsing.Yago.YagoLexer.next()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (next == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9083/buggy-version/src.PlanetCrash.parsing.Yago.AbstractYagoParser.java", "BodyUseAPI": [], "Fixed commit": "ab6ab59c240c54294e3f6cec758713d6448b38c6", "Url": "https://api.github.com/repos/SQLProject2015/PlanetCrash", "Date": "2015-06-20T18:56:07Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.realm.RealmQuery<org.cambridge.eltpoc.model.CLMSUser>.findAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result.isEmpty()) { realm.beginTransaction(); org.cambridge.eltpoc.model.CLMSUser realmUser = realm.createObject(org.cambridge.eltpoc.model.CLMSUser.class); realmUser.setAccessToken(object.getString(\"access_token\")); realmUser.setUsername(user); realmUser.setPassword(password); realm.commitTransaction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3489/buggy-version/app.src.main.java.org.cambridge.eltpoc.javascript.JavaScriptInterface.java", "BodyUseAPI": [], "Fixed commit": "0426ddd42cf980ed34964e32458066ba858d6cc4", "Url": "https://api.github.com/repos/mnlmobile/ELT-POC-Android", "Date": "2015-06-16T10:12:43Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (swapRound != 3) { java.util.List<cardsuite.Card> chosen = new java.util.ArrayList<cardsuite.Card>(); for (int i = 0; i < 3; i++) { int chose = cardsuite.HeartsManager.scanner.nextInt(); java.lang.System.out.println(chose); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9179/buggy-version/HeartsManager.java", "BodyUseAPI": [], "Fixed commit": "133f9013f34a73b7a351db50341ec637ef63383b", "Url": "https://api.github.com/repos/SVT125/GermanBridge", "Date": "2015-06-28T23:15:42Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectItemBank.isDisplayed()) { selectOption(selectItemBank, itemBankName); }else { selectItemBank(itemBankName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3458/buggy-version/src.pages.Items.java", "BodyUseAPI": ["pages.Items.selectOption(org.openqa.selenium.WebElement,java.lang.String)"], "Fixed commit": "91f3e0be668a391b5eb0a959cb3828209b619ac9", "Url": "https://api.github.com/repos/jctv/Unity-Scaling-Server", "Date": "2015-12-23T11:07:43Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.disconnectcallback) != null) this.disconnectcallback.disconnectCallback(\"[CLIENT] Leave Server.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5194/buggy-version/gdx-bunny-brawl.src.main.java.de.hochschuletrier.gdw.ws1314.network.NetworkManager.java", "BodyUseAPI": [], "Fixed commit": "1a9404385e1618b5d461f57ebac260dddb450f52", "Url": "https://api.github.com/repos/hottehead/GameDevWeek", "Date": "2014-03-22T18:23:40Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qaproject.controller.TagPostDao.findRelatedArticlesIds(java.util.List<java.lang.Integer>,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (relatedArticlesIds != null) { relatedArticlesIds.remove(post.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7317/buggy-version/QAProject.src.main.java.com.qaproject.controller.PostController.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.remove(post.getId())"], "Fixed commit": "7a5c2a61e541c58bf13e8940b3a0e459c29f71f1", "Url": "https://api.github.com/repos/CapstoneTeam11/QAPlatform", "Date": "2015-07-22T00:14:52Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qaproject.controller.TagPostDao.findRelatedQuestionIds(java.util.List<java.lang.Integer>,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (relatedQuestionIds != null) { relatedQuestionIds.remove(post.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7317/buggy-version/QAProject.src.main.java.com.qaproject.controller.PostController.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.remove(post.getId())"], "Fixed commit": "7a5c2a61e541c58bf13e8940b3a0e459c29f71f1", "Url": "https://api.github.com/repos/CapstoneTeam11/QAPlatform", "Date": "2015-07-22T00:14:52Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mActivity.isGameTimed()) { mActivity.toggleScreens(R.layout.main_game); }else { mActivity.toggleScreens(R.layout.results_page); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7613/buggy-version/app.src.main.java.com.example.calvarez.mapmaster.FeedbackPage.java", "BodyUseAPI": ["com.example.calvarez.mapmaster.MainActivity.toggleScreens(R.layout.results_page)", "com.example.calvarez.mapmaster.MainActivity.toggleScreens(R.layout.main_game)"], "Fixed commit": "6c27196b5469ad5c01ac96ee606cded1990b17cb", "Url": "https://api.github.com/repos/CAlvarez93/MapMaster", "Date": "2016-11-29T02:47:57Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parent == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4606/buggy-version/src.main.java.net.craftminecraft.bungee.bungeeyaml.file.FileConfiguration.java", "BodyUseAPI": [], "Fixed commit": "caf6acb637e49df429eaa34ade0cd9a083abef28", "Url": "https://api.github.com/repos/CraftMinecraft/BungeeYAML", "Date": "2013-02-28T13:20:35Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(parent.isDirectory())) { throw new java.io.IOException((\"Unable to create parent directories of \" + file)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4606/buggy-version/src.main.java.net.craftminecraft.bungee.bungeeyaml.file.FileConfiguration.java", "BodyUseAPI": [], "Fixed commit": "caf6acb637e49df429eaa34ade0cd9a083abef28", "Url": "https://api.github.com/repos/CraftMinecraft/BungeeYAML", "Date": "2013-02-28T13:20:35Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(showDateByDefault)) { summary += \"<br>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6256/buggy-version/src.model.Appointment.java", "BodyUseAPI": [], "Fixed commit": "5d0256346196c511f2d599873d4eb42354607ed7", "Url": "https://api.github.com/repos/thomahan/calendar", "Date": "2015-03-17T13:41:16Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (delay > 0) { java.lang.Thread.sleep(delay); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1024/buggy-version/main.src.com.google.refine.operations.column.ColumnAdditionByFetchingURLsOperation.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "000c0a38a8965a20fbd3a44b6424526609bb64ea", "Url": "https://api.github.com/repos/gaurav/OpenRefine", "Date": "2013-05-26T14:13:16Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((plugin.getServer().getPlayerExact(player)) != null) { plugin.getServer().getPlayerExact(player).sendMessage(format); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4503/buggy-version/WaywardChat.src.main.java.net.wayward_realms.waywardchat.ChatGroup.java", "BodyUseAPI": ["plugin.getServer().getPlayerExact(player).sendMessage(java.lang.String)", "net.wayward_realms.waywardchat.WaywardChat.getServer()", "plugin.getServer().getPlayerExact(java.lang.String)"], "Fixed commit": "f3b864847309e4204a17c5afb74cb841803f3b36", "Url": "https://api.github.com/repos/WaywardRealms/Wayward", "Date": "2014-05-22T16:33:37Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.HONEYCOMB_MR2)) { android.graphics.Point size = new android.graphics.Point(); display.getSize(size); height = size.y; }else { height = display.getHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1628/buggy-version/Android.MyIPAddressInfo.src.com.adamkruger.myipaddressinfo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "904dce204486daeb4d1a62c7ad0239601906ea20", "Url": "https://api.github.com/repos/adamkdot/my_ip_address_info", "Date": "2014-10-10T03:26:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((types.length) == 0) throw new java.lang.IllegalArgumentException(\"given types array may not be zero length\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/881/buggy-version/cascading-core.src.main.java.cascading.pipe.assembly.Coerce.java", "BodyUseAPI": [], "Fixed commit": "2c9e394a95444958ddd7e47adaa62f43f901ea3d", "Url": "https://api.github.com/repos/soundcloud/cascading", "Date": "2014-12-18T19:13:40Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["liquibase.parser.NamespaceDetails.getLocalPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (xsdFile == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4948/buggy-version/liquibase-core.src.main.java.liquibase.parser.core.xml.LiquibaseEntityResolver.java", "BodyUseAPI": [], "Fixed commit": "e28e4de736239ef7a17f80412da15f9215bd17ae", "Url": "https://api.github.com/repos/liquibase/liquibase", "Date": "2013-12-17T19:22:19Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["liquibase.resource.ResourceAccessor.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resourceAsStream == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4948/buggy-version/liquibase-core.src.main.java.liquibase.parser.core.xml.LiquibaseEntityResolver.java", "BodyUseAPI": [], "Fixed commit": "e28e4de736239ef7a17f80412da15f9215bd17ae", "Url": "https://api.github.com/repos/liquibase/liquibase", "Date": "2013-12-17T19:22:19Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preference == (mEditTextNick)) { e.putString(((com.fusionx.lightirc.misc.Constants.nickPrefPrefix) + (com.fusionx.lightirc.activity.ServerSettingsActivity.BaseServerSettingFragment.indexOfServer)), newString); }else if (preference == (mEditTextTitle)) { e.putString(((com.fusionx.lightirc.misc.Constants.titlePrefPrefix) + (com.fusionx.lightirc.activity.ServerSettingsActivity.BaseServerSettingFragment.indexOfServer)), newString); }else if (preference == (mEditTextUrl)) { e.putString(((com.fusionx.lightirc.misc.Constants.urlPrefPrefix) + (com.fusionx.lightirc.activity.ServerSettingsActivity.BaseServerSettingFragment.indexOfServer)), newString); }else if (preference == (mServerUserName)) { e.putString(((com.fusionx.lightirc.misc.Constants.serverUsernamePrefPrefix) + (com.fusionx.lightirc.activity.ServerSettingsActivity.BaseServerSettingFragment.indexOfServer)), newString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5742/buggy-version/src.com.fusionx.lightirc.activity.ServerSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "819c78fb171c81f53f1732b6be5831702ad1c029", "Url": "https://api.github.com/repos/tilal6991/LightIRC", "Date": "2013-05-31T09:26:07Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pEdge instanceof ca.mcgill.cs.stg.jetuml.graph.NoteEdge) && (!((pNode1 instanceof ca.mcgill.cs.stg.jetuml.graph.NoteNode) || (pNode2 instanceof ca.mcgill.cs.stg.jetuml.graph.NoteNode)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4265/buggy-version/src.ca.mcgill.cs.stg.jetuml.graph.Graph.java", "BodyUseAPI": [], "Fixed commit": "c1f2386ad4422360486531a9a83636c85a35ae6a", "Url": "https://api.github.com/repos/prmr/JetUML", "Date": "2015-05-22T15:17:22Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sound) == null) sound = org.resources.Help.getSound(\"test.wav\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6526/buggy-version/publicMAIN.src.org.publicmain.gui.HTMLContentDialog.java", "BodyUseAPI": [], "Fixed commit": "c9153e55103e0ebd764ffa3fe8fe06a2fce6d32c", "Url": "https://api.github.com/repos/tkessels/publicMain", "Date": "2013-05-20T18:21:31Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iURL.indexOf(\"\\\\\\\\\")) > 0) iURL = (iURL.charAt(0)) + (iURL.substring(1).replace(\"\\\\\\\\\", \"\\\\\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4094/buggy-version/core.src.main.java.com.orientechnologies.orient.core.Orient.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.charAt(int)"], "Fixed commit": "363a5b4bbc8c82c872a315a2ab2e9e09e5653819", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-04T11:32:17Z"},
{"Line": "=>733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value == null) { return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/270/buggy-version/src.main.java.org.jdatepicker.JDatePanel.java", "BodyUseAPI": ["javax.swing.table.DefaultTableCellRenderer.getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)"], "Fixed commit": "1fa18dc3ad28a872ec8ea0b729a26a63fb1ac353", "Url": "https://api.github.com/repos/krichter722/JDatePicker", "Date": "2015-10-13T10:42:03Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userBean.getRole()) == 2) { return \"teacher.edituser\"; }else if ((userBean.getRole()) == 3) { return \"student.edituser\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6077/buggy-version/ClassApplication.src.main.java.com.edit.EditUserAction.java", "BodyUseAPI": ["com.user.UserBean.getRole()"], "Fixed commit": "692c5b14cc9c734d7e54eee9b38c23bccd227eea", "Url": "https://api.github.com/repos/pundliksarafdar/code", "Date": "2015-10-27T19:12:20Z"},
{"Line": "=>7475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ViewManager.ViewManager.getrjUpdatedRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newRJRow.getMap(\"list_item2\", java.lang.String.class, java.lang.String.class).isEmpty()) { if (!(leftJoinAggTable.equals(\"false\"))) { JoinAggGroupByChangeAddRow(json, leftJoinAggTable, aggKey, aggKeyValue, aggColValue, oldAggColValue, oldAggKeyValue); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4064/buggy-version/src.java.ViewManager.ViewManager.java", "BodyUseAPI": [], "Fixed commit": "6193652301efb94bcebb774b5073d80dfc406912", "Url": "https://api.github.com/repos/abdelrahmanbadawy/Cassandra-VMS", "Date": "2015-09-01T18:50:13Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(CustomerControlHelper.LOGFILE_FILTER_TAG.equals(\"\"))) mCommand += \" -s \" + (vaycent.customerControl.CustomerControlHelper.LOGFILE_FILTER_TAG);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1845/buggy-version/app.src.main.java.vaycent.magicLog.LogFile.java", "BodyUseAPI": [], "Fixed commit": "8aba3e3a853ac0acad210f8fe69e9f1e4031e988", "Url": "https://api.github.com/repos/Vaycent/MagicLog", "Date": "2016-04-20T06:03:55Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this) instanceof org.iabako.client.ui.page.business.supplier.SupplierCreate) { supplierServiceAsync.getNextAvailableId(new org.iabako.client.tools.IabakoAsyncCallback<java.lang.String>() { public void onSuccess(java.lang.String result) { contactInformationForm.number.setValue(result); super.onSuccess(result); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9217/buggy-version/src.main.java.org.iabako.client.ui.form.business.supplier.SupplierForm.java", "BodyUseAPI": [], "Fixed commit": "de84e4615ac39e42ffb4a59db83f142c16eb6139", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2016-08-05T16:23:22Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((surveys.size()) == 0) { surveySelectText.setText(getResources().getString(R.string.no_survey_available_for_client)); }else { com.mifos.mifosxdroid.adapters.SurveyListAdapter surveyListAdapter = new com.mifos.mifosxdroid.adapters.SurveyListAdapter(getActivity(), surveys); lv_surveys_list.setAdapter(surveyListAdapter); lv_surveys_list.setOnItemClickListener(new android.widget.AdapterView.OnItemClickListener() { @java.lang.Override public void onItemClick(android.widget.AdapterView<?> adapterView, android.view.View view, int position, long l) { mListener.loadSurveyQuestion(surveys.get(position), clientId); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8005/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.online.surveylist.SurveyListFragment.java", "BodyUseAPI": ["android.widget.ListView.setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)", "java.util.List<com.mifos.objects.survey.Survey>.get(int)", "com.mifos.mifosxdroid.online.surveylist.SurveyListFragment.OnFragmentInteractionListener.loadSurveyQuestion(surveys.get(position),int)"], "Fixed commit": "706dcef060f1ced8ce88a19b417a3a48afb00200", "Url": "https://api.github.com/repos/top-gun007/android-client", "Date": "2016-10-03T16:48:16Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ny > 0) { this.setYVel(0); }else { this.setYVel(0.002F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7602/buggy-version/src.de.futjikato.mrwhiz.Physical.java", "BodyUseAPI": [], "Fixed commit": "0d9bb2248a038cefaa546350f549c32abb963f9c", "Url": "https://api.github.com/repos/futjikato/mr-whiz", "Date": "2012-12-26T18:39:51Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getInt(int)", "android.database.Cursor.getInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fighter1Id < fighter2Id) { fighter1Name = bothFighters.substring(0, delimiter); fighter2Name = bothFighters.substring((delimiter + 1), bothFighters.length()); }else { fighter2Name = bothFighters.substring(0, delimiter); fighter1Name = bothFighters.substring((delimiter + 1), bothFighters.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7605/buggy-version/app.src.main.java.com.ojcity.android.myscorecards.SQLiteDAO.DatabaseHandler.java", "BodyUseAPI": [], "Fixed commit": "57a6a4fe4dcdfca6c7109289357f8c070047936c", "Url": "https://api.github.com/repos/oj4y/myScorecardsAndroid", "Date": "2015-11-09T21:09:34Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rating.isTranslateRatingLabels()) { if (translator != null) { label = translator.translate(label); }else { label = \"\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1541/buggy-version/src.main.java.org.olat.core.gui.components.rating.RatingRenderer.java", "BodyUseAPI": [], "Fixed commit": "14a0159e0243a369ac256a5a0a1c30befc2f0307", "Url": "https://api.github.com/repos/klemens/openolat", "Date": "2014-09-17T13:53:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (application.controller.CommandManager.isInteger(cmd)) { int limit = java.lang.Integer.parseInt(cmd.getTextContent()); application.controller.CommandManager.limitNumberOfTasks(allTasks, limit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2729/buggy-version/src.application.controller.CommandManager.java", "BodyUseAPI": ["java.lang.Integer.parseInt(cmd.getTextContent())", "application.model.Command.getTextContent()"], "Fixed commit": "114f3af4970d81fc79fb625d4acaca4e829fa385", "Url": "https://api.github.com/repos/cs2103aug2015-f09-3j/main", "Date": "2015-10-29T12:49:19Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(owner.isMining())) || (owner.inCombat())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9093/buggy-version/GameServer.src.org.moparscape.msc.gs.plugins.plugs.skills.Mining.java", "BodyUseAPI": [], "Fixed commit": "ad023434c13e02c9bb14ccdce319166cd780e273", "Url": "https://api.github.com/repos/Lothy/MoparClassic", "Date": "2012-01-07T21:52:38Z"},
{"Line": "=>1592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MODE.equals(\"square root\")) || (MODE.equals(\"circle\"))) { MIRROR_THE_DOT = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3837/buggy-version/core.src.com.hbp.pointdef.GameScreen_2.java", "BodyUseAPI": [], "Fixed commit": "500d1b69e569dfd2e59d0ae7ff7facbdfa6f5235", "Url": "https://api.github.com/repos/H-B-P/pointdef", "Date": "2016-07-30T17:12:32Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((\"*\".equals(options.getQuery())) && (options.getFacets().isEmpty())) { options.setAddToHistory(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2252/buggy-version/app.src.main.java.fr.gstraymond.ui.FacetOnChildClickListener.java", "BodyUseAPI": ["fr.gstraymond.biz.SearchOptions.setAddToHistory(boolean)"], "Fixed commit": "de55570cf73137843d6dbe8634d94e3452a21c41", "Url": "https://api.github.com/repos/gstraymond/magic-card-search", "Date": "2014-10-05T13:25:38Z"},
{"Line": "=>1257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((merge_tool) == null) { return \"Clip&Merge\"; }else { return merge_tool; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1517/buggy-version/src.main.java.communicator.IO.Communicator.java", "BodyUseAPI": [], "Fixed commit": "dc917d562ff43b2be6bc9f5749fdef6895e0f7fa", "Url": "https://api.github.com/repos/apeltzer/EAGER-lib", "Date": "2017-05-03T07:56:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyType == 1) java.lang.System.err.println(((\"Error finding file .\" + user) + \"!\")); else java.lang.System.err.println(((\"Error finding file .\" + user) + \"_priv!\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3928/buggy-version/src.auth.Auth.java", "BodyUseAPI": [], "Fixed commit": "ba2abe451ab308b41fc0a65880b29544d3c45ac1", "Url": "https://api.github.com/repos/ameske/Amesbox", "Date": "2013-12-04T17:52:31Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nUnreadMessages.length()) == 1) nUnreadMessages = (\" \" + (nUnreadMessages)) + \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4479/buggy-version/CHT.android.sub_app.fermat-cht-android-sub-app-chat-bitdubai.src.main.java.com.bitbudai.fermat_cht_android_sub_app_chat_bitdubai.adapters.ChatListAdapter.java", "BodyUseAPI": [], "Fixed commit": "836e0f2cc96fe16ad8bc5dd532653ebdfa0a0a95", "Url": "https://api.github.com/repos/Fermat-ORG/fermat-framework", "Date": "2016-08-01T21:04:40Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (didPut) { cache.remove(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1494/buggy-version/compiler.src.main.java.com.github.mustachejava.DefaultMustacheFactory.java", "BodyUseAPI": [], "Fixed commit": "bc1e8937ff0f5e25c706737f5729cdca753133f4", "Url": "https://api.github.com/repos/orirawlings/mustache.java", "Date": "2015-03-03T22:39:24Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((highResolutionThumbnailURL) == null) { throw new com.bx5a.minstrel.exception.NoThumbnailAvailableException(\"No thumbnail available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3698/buggy-version/app.src.main.java.com.bx5a.minstrel.youtube.YoutubeVideo.java", "BodyUseAPI": [], "Fixed commit": "8ee0be2f8353bd6f921784d73fc7e191bf945007", "Url": "https://api.github.com/repos/bx5a/Minstrel", "Date": "2016-06-13T09:56:37Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thumbnailURL) == null) { throw new com.bx5a.minstrel.exception.NoThumbnailAvailableException(\"No thumbnail available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3698/buggy-version/app.src.main.java.com.bx5a.minstrel.youtube.YoutubeVideo.java", "BodyUseAPI": [], "Fixed commit": "8ee0be2f8353bd6f921784d73fc7e191bf945007", "Url": "https://api.github.com/repos/bx5a/Minstrel", "Date": "2016-06-13T09:56:37Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<Book.BookStats>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((stat.ranking) < 10) g.drawString(((stat.ranking) + \"\"), ((currentX + ((intervalWidth) / 4)) - 4), (currentY - 4)); else g.drawString(((stat.ranking) + \"\"), ((currentX + ((intervalWidth) / 4)) - 8), (currentY - 4));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8883/buggy-version/src.visualization.VisualizationCanvas.java", "BodyUseAPI": ["java.awt.Graphics.drawString(((stat.ranking) + \"\"),int,int)", "java.awt.Graphics.drawString(((stat.ranking) + \"\"),int,int)"], "Fixed commit": "18e540106f2ab041261f09104e95ec985a8ae3ed", "Url": "https://api.github.com/repos/rdrey/VIS-course", "Date": "2011-05-23T19:16:43Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.valueOf(getGlobalOptimum().getInformationLoss().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (utility != (lastUtility)) { this.discovery = ((int) ((java.lang.System.currentTimeMillis()) - (time))); this.trackRecord.add(this.discovery); this.trackRecord.add(utility); lastUtility = utility; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/554/buggy-version/src.org.deidentifier.arx.algorithm.BenchmarkAlgorithm.java", "BodyUseAPI": ["cern.colt.list.DoubleArrayList.add(double)"], "Fixed commit": "99ffe4c6029bf1767c185bb5600997339f4c28b4", "Url": "https://api.github.com/repos/arx-deidentifier/highdimensional-benchmark", "Date": "2015-07-01T12:03:51Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cpw.mods.fml.common.registry.GameRegistry.findItemStack(java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stack == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6400/buggy-version/mods.railcraft.api.carts.locomotive.LocomotiveRenderType.java", "BodyUseAPI": [], "Fixed commit": "8930d3ac6cc017a8d837b966bf9f685af4ecda15", "Url": "https://api.github.com/repos/Railcraft/Railcraft-API", "Date": "2014-10-25T11:08:45Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.talend.commons.CommonsPlugin.isHeadless())) { java.lang.Exception compLoadException = new java.lang.Exception((((\"Coponent \" + (this.name)) + \" load error.\\nbecause the exception:\") + (re.getCause().getMessage())), re); org.talend.commons.ui.runtime.exception.MessageBoxExceptionHandler.process(compLoadException); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5732/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.model.components.EmfComponent.java", "BodyUseAPI": [], "Fixed commit": "7df7c7073a38634f740298182fdc5d2110f4c808", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2015-02-15T10:02:42Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getLiberties(x, y, s, new java.util.HashSet()).isEmpty()) { remove(x, y, s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2959/buggy-version/src.game.Board.java", "BodyUseAPI": ["game.Board.remove(int,int,game.Stone)"], "Fixed commit": "ca1d85230714c5ab8e465f6aa726ff2d41cb3170", "Url": "https://api.github.com/repos/MinThaMie/Go", "Date": "2017-01-30T14:52:52Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((quiz.getName()) != null) quiz.removeQuiz();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1555/buggy-version/src.com.quizzes.Quiz.java", "BodyUseAPI": [], "Fixed commit": "b38537ee6fab9e53735268d6c83854d006797ea8", "Url": "https://api.github.com/repos/christky/QuizWebsite", "Date": "2015-03-09T05:18:15Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(strInput.isEmpty())) && (java.lang.Character.isDigit(strInput.charAt(((strInput.length()) - 1))))) { strInput += currentItem; inputItems.add(((removeFromItems()) + (currentItem))); strInput += \"=\"; inputItems.add(\"=\"); resetCurrentItem(); updateExpression(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8498/buggy-version/app.src.main.java.com.example.xin.calculatorsimple.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "acc6034c969f126ea47931daf6b7fdaa1f05b3c4", "Url": "https://api.github.com/repos/guxin7005/CalculatorSimple", "Date": "2016-02-25T01:06:56Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((joinedEventsStr.length()) == 0) { return new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8949/buggy-version/countly-sdk-android.src.ly.count.android.api.CountlyStore.java", "BodyUseAPI": [], "Fixed commit": "1021ed1c4965333b0a858313b7bc563455a62269", "Url": "https://api.github.com/repos/ImageMetrics/countly-sdk-android", "Date": "2014-12-10T21:38:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((joinedConnStr.length()) == 0) { return new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8949/buggy-version/countly-sdk-android.src.ly.count.android.api.CountlyStore.java", "BodyUseAPI": [], "Fixed commit": "1021ed1c4965333b0a858313b7bc563455a62269", "Url": "https://api.github.com/repos/ImageMetrics/countly-sdk-android", "Date": "2014-12-10T21:38:26Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.morePlanetsCompatibilityAdv) com.mjr.extraplanets.planets.ExtraPlanets_Planets.kepler22b.setTierRequired(7); else com.mjr.extraplanets.planets.ExtraPlanets_Planets.kepler22b.setTierRequired(10);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3792/buggy-version/src.main.java.com.mjr.extraplanets.planets.ExtraPlanets_Planets.java", "BodyUseAPI": [], "Fixed commit": "0fd3d1b7b242dddecd03fcf7505669646748d3a5", "Url": "https://api.github.com/repos/bballboy2002/ExtraPlanets", "Date": "2017-08-07T16:15:21Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dayMap.get(currDay)) != null) { if (dayMap.get(currDay)) { if (currHour == (startHour)) { if (currMinute >= (startMinute)) { if ((currHour < (endHour)) || ((currHour == (endHour)) && (currMinute <= (endMinute)))) return true; } }else if (currHour > (startHour)) { if ((currHour < (endHour)) || ((currHour == (endHour)) && (currMinute <= (endMinute)))) return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4559/buggy-version/Focus.app.src.main.java.Model.TimeRange.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Boolean>.get(int)"], "Fixed commit": "82bc84a4c98f4ec9104cccc4bde31e05b2d4f20d", "Url": "https://api.github.com/repos/hhurja/Moving_Battleships", "Date": "2017-10-17T19:19:28Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rs.getString(CommonString.PAYRATE)) == null) map.put(CommonString.PAYRATE, \"0\"); else { float rtp = java.lang.Float.valueOf(rs.getString(CommonString.PAYRATE)); map.put(CommonString.PAYRATE, FormatDecimal(this.FormatDecimal(rtp))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6710/buggy-version/GameResult_Web.WebContent.com.dao.BetRecordByDay.java", "BodyUseAPI": ["java.sql.ResultSet.getString(CommonString.PAYRATE)", "java.lang.Float.valueOf(java.lang.String)"], "Fixed commit": "789336a9f5531902b09a02e7d2512cc96a2509ef", "Url": "https://api.github.com/repos/fanntone/GameResult_Web", "Date": "2017-03-01T02:42:25Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x == null) return \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6710/buggy-version/GameResult_Web.WebContent.com.dao.BetRecordByDay.java", "BodyUseAPI": [], "Fixed commit": "789336a9f5531902b09a02e7d2512cc96a2509ef", "Url": "https://api.github.com/repos/fanntone/GameResult_Web", "Date": "2017-03-01T02:42:25Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.rarchives.ripme.ripper.rippers.ExposedForumsRipper.user) == null) { com.rarchives.ripme.ripper.rippers.ExposedForumsRipper.user = login(com.rarchives.ripme.utils.Utils.getConfigString(\"exposedforums.username\", \"\"), com.rarchives.ripme.utils.Utils.getConfigString(\"exposedforums.password\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4381/buggy-version/src.main.java.com.rarchives.ripme.ripper.rippers.ExposedForumsRipper.java", "BodyUseAPI": [], "Fixed commit": "ad4d0bce01044c1154c28a1c7dcd5aa3046612cb", "Url": "https://api.github.com/repos/starb0bby/ripme", "Date": "2014-07-24T05:32:51Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((job.getEmail()) != null) && (!(job.getEmail().isEmpty()))) { java.lang.Runnable job_ = new com.bia.monitor.service.JobCheck(genericDao_.getMongoTemplate(), job); executor.schedule(job_, 10, java.util.concurrent.TimeUnit.MILLISECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8573/buggy-version/src.main.java.com.bia.monitor.service.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "1a2d6b19e6c202483b53e5ef36bf6cb52e82ccc6", "Url": "https://api.github.com/repos/intesar/MonitorApp", "Date": "2012-10-13T06:45:56Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((deal == null) || ((deal.getmProducts()) == null)) || ((deal.getmProducts().size()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9156/buggy-version/app.src.main.java.com.alwarsha.activities.ClosedDealsActivity.java", "BodyUseAPI": [], "Fixed commit": "42ccaa97986ff75a7aa800c0bd624b5e4ff1d926", "Url": "https://api.github.com/repos/RedEyesClub/Alwarsha", "Date": "2014-06-30T05:06:19Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (entries == null) { accepted = java.util.Collections.emptyList(); }else { accepted = new java.util.ArrayList<java.nio.file.Path>(); for (java.lang.String entry : entries) { java.nio.file.Path path = parent.resolve(entry); if ((filter == null) || (filter.accept(path))) { accepted.add(path); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/50/buggy-version/src.main.java.com.pastdev.jsch.nio.file.AbstractSshFileSystemProvider.java", "BodyUseAPI": [], "Fixed commit": "8fa31390b2ebb021317ded937b546e0e80bad97f", "Url": "https://api.github.com/repos/lucastheisen/jsch-nio", "Date": "2014-10-29T19:01:06Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((items.length) == 1) && (items[0].isEmpty())) { items = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/50/buggy-version/src.main.java.com.pastdev.jsch.nio.file.UnixSshFileSystemProvider.java", "BodyUseAPI": [], "Fixed commit": "8fa31390b2ebb021317ded937b546e0e80bad97f", "Url": "https://api.github.com/repos/lucastheisen/jsch-nio", "Date": "2014-10-29T19:01:06Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JFileChooser.getSelectedFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (file.getName().contains(\"e2_\")) { pts2soutenancemanager.Interface.CBD.CBD_Main.CSVParserS2 util_CSVParserS2 = new pts2soutenancemanager.Interface.CBD.CBD_Main.CSVParserS2(this.app); util_CSVParserS2.FileParserBegin(fileName); app.menu_EtudiantSaisirDemande.listeGroupeRefreshContent(); }else if (file.getName().contains(\"v_\")) { pts2soutenancemanager.Interface.CBD.CBD_Main.CSVParserVoeux util_CSVParserVoeux = new pts2soutenancemanager.Interface.CBD.CBD_Main.CSVParserVoeux(this.app); util_CSVParserVoeux.FileParserBegin(fileName); app.refreshContents(); }else { app.util_CSVTools.FileParserBegin(fileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6270/buggy-version/PTS2SoutenanceManager.src.pts2soutenancemanager.Interface.CBD.CBD_Main.java", "BodyUseAPI": ["java.io.File.getName()", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "1109816031eea322bdfb5577b730488182c24e89", "Url": "https://api.github.com/repos/mhoangvslev/pts2soutenancemanager", "Date": "2016-06-13T06:16:33Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((packages != null) && ((packages.length) > 0)) for (java.lang.String s : packages) { if (!(s.equals(\".DS_Store\"))) combo.addItem(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3217/buggy-version/src.jlm.core.ui.ExportLessonDialog.java", "BodyUseAPI": [], "Fixed commit": "ab380c651363d91e29611a1ec31ce5db8a02fad3", "Url": "https://api.github.com/repos/RedFish/JLM", "Date": "2013-05-28T21:07:05Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.PriorityQueue<com.inhavok.fallen.utility.Pathfinder.Node>.contains(com.inhavok.fallen.utility.Pathfinder.Node)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!discovered) { com.inhavok.fallen.utility.Pathfinder.openList.add(adjacentNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1705/buggy-version/core.src.com.inhavok.fallen.utility.Pathfinder.java", "BodyUseAPI": [], "Fixed commit": "14073e33b4e14f25f4bec77178752c48ef41d0ed", "Url": "https://api.github.com/repos/Inhavok/Fallen", "Date": "2016-04-14T22:00:50Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Peek(0).getType()) != (TokenType.Cit)) { int i = 0; while ((Peek(i).getType()) == (TokenType.Space)) i--; syntaxFelSpecial(Peek(i).getLine()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5988/buggy-version/S2medHybris.Parser.java", "BodyUseAPI": [], "Fixed commit": "63852c865a9f27584ed07c0112ddad9fa4fcd47c", "Url": "https://api.github.com/repos/TeodorIsaacs/S2medHybris", "Date": "2016-11-18T10:10:56Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (errors.isEmpty()) { throw new java.lang.IllegalArgumentException(\"Argument error list cannot be empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7841/buggy-version/src.main.java.org.junit.runners.model.MultipleFailureException.java", "BodyUseAPI": [], "Fixed commit": "7324b0f122239c2385a7f0aa0076b6328e46a458", "Url": "https://api.github.com/repos/ShengyuanLu/junit", "Date": "2015-07-03T05:26:18Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.talend.core.GlobalServiceRegister.getDefault().isServiceRegistered(org.talend.mdm.repository.core.service.IMDMSVNProviderService.class)) { svnProviderService = ((org.talend.mdm.repository.core.service.IMDMSVNProviderService) (org.talend.core.GlobalServiceRegister.getDefault().getService(org.talend.mdm.repository.core.service.IMDMSVNProviderService.class))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4561/buggy-version/main.plugins.org.talend.mdm.repository.src.main.java.org.talend.mdm.repository.ui.navigator.MDMRepositoryLabelProvider.java", "BodyUseAPI": ["org.talend.core.GlobalServiceRegister.getDefault().getService(java.lang.Class)"], "Fixed commit": "7e41efd7349712e267085e87688467209f7d8202", "Url": "https://api.github.com/repos/rlugojr/tmdm-studio-se", "Date": "2016-07-26T09:55:10Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.talend.core.GlobalServiceRegister.getDefault().isServiceRegistered(org.talend.core.services.IGITProviderService.class)) { gitProviderService = ((org.talend.core.services.IGITProviderService) (org.talend.core.GlobalServiceRegister.getDefault().getService(org.talend.core.services.IGITProviderService.class))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4561/buggy-version/main.plugins.org.talend.mdm.repository.src.main.java.org.talend.mdm.repository.ui.navigator.MDMRepositoryLabelProvider.java", "BodyUseAPI": ["org.talend.core.GlobalServiceRegister.getDefault().getService(java.lang.Class)"], "Fixed commit": "7e41efd7349712e267085e87688467209f7d8202", "Url": "https://api.github.com/repos/rlugojr/tmdm-studio-se", "Date": "2016-07-26T09:55:10Z"},
{"Line": "=>1462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(t instanceof com.orientechnologies.orient.core.exception.ODatabaseException)) { throw t; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6699/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.tool.ODatabaseImport.java", "BodyUseAPI": [], "Fixed commit": "615c4b9ad1cdb04ee965f2c70857bbbf9531a5d8", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-07-14T12:19:11Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (crop.isNil()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1680/buggy-version/src.com.android.gallery3d.filtershow.filters.FilterCropRepresentation.java", "BodyUseAPI": [], "Fixed commit": "78a380e847ca79f3d5bd5365cc2be3b99b4db0ed", "Url": "https://api.github.com/repos/CyanogenMod/android_packages_apps_Gallery2", "Date": "2015-01-04T08:11:50Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == null) type = com.sk89q.craftbook.util.EntityType.ANY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/922/buggy-version/src.main.java.com.sk89q.craftbook.circuits.gates.world.entity.EntityTrap.java", "BodyUseAPI": [], "Fixed commit": "44c493771f0b751986ff67cf299448e6ffc3f18a", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-07-01T02:21:19Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { file.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4531/buggy-version/src.threads.downloadMultipleFiles.DownloaderUtil.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "07ab11b30adee557e18d1387a7a7e5c6480bc88f", "Url": "https://api.github.com/repos/chiranjeevitapal/JavaBasics", "Date": "2015-07-12T09:19:19Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((compositeProfile != null) && ((compositeProfile.getTablesMap()) != null)) && (!(compositeProfile.getTablesMap().isEmpty()))) { for (java.lang.String currentId : compositeProfile.getTablesMap().keySet()) { if (currentId.equals(valueSetOrSingleCodeBinding.getId())) { return compositeProfile.getTablesMap().get(currentId); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4246/buggy-version/igamt-lite-service.src.main.java.gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.serialization.impl.SerializeCompositeProfileServiceImpl.java", "BodyUseAPI": ["gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.serialization.impl.CompositeProfile.getTablesMap()", "compositeProfile.getTablesMap().keySet()", "gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.serialization.impl.CompositeProfile.getTablesMap()", "compositeProfile.getTablesMap().get(java.lang.String)"], "Fixed commit": "9cf008c0d4e4e3a017a8beb42d9ca94ec3546242", "Url": "https://api.github.com/repos/haffonist/igamt", "Date": "2017-04-07T16:18:46Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instance.instance) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5509/buggy-version/core.src.thepaperpilot.farm.PlanetScreen.java", "BodyUseAPI": [], "Fixed commit": "efeead0ff01209275891d531eab91d12f772082c", "Url": "https://api.github.com/repos/thepaperpilot/PlanetFarm", "Date": "2016-02-10T14:35:03Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Types.TIMESTAMP.equals(distinctColumn.getType())) { builder.add(pageReader.getTimestamp(distinctColumn)); }else if (Types.JSON.equals(distinctColumn.getType())) { builder.add(pageReader.getJson(distinctColumn)); }else { throw new java.lang.RuntimeException((\"unsupported type: \" + (distinctColumn.getType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7890/buggy-version/src.main.java.org.embulk.filter.distinct.DistinctFilterPageOutput.java", "BodyUseAPI": ["org.embulk.spi.PageReader.getTimestamp(org.embulk.spi.Column)", "builder.add(pageReader.getTimestamp(distinctColumn))", "Types.JSON.equals(distinctColumn.getType())", "builder.add(pageReader.getJson(distinctColumn))", "org.embulk.spi.Column.getType()", "org.embulk.spi.Column.getType()", "org.embulk.spi.PageReader.getJson(org.embulk.spi.Column)"], "Fixed commit": "e9bcbac5ffac99bcb229cea54612d5a7d36c7821", "Url": "https://api.github.com/repos/civitaspo/embulk-filter-distinct", "Date": "2017-04-19T04:51:00Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nodesSet.contains(edge.getSource())) { newEdge = createEdge(newNode, newNode, edge.isDirected()); }else { newEdge = createEdge(edge.getSource(), newNode, edge.isDirected()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6589/buggy-version/DataLaboratoryAPI.src.org.gephi.datalab.impl.GraphElementsControllerImpl.java", "BodyUseAPI": ["org.gephi.graph.api.Edge.getSource()", "org.gephi.datalab.impl.GraphElementsControllerImpl.createEdge(org.gephi.graph.api.Node,org.gephi.graph.api.Node,edge.isDirected())", "org.gephi.graph.api.Edge.isDirected()", "org.gephi.datalab.impl.GraphElementsControllerImpl.createEdge(edge.getSource(),org.gephi.graph.api.Node,edge.isDirected())", "org.gephi.graph.api.Edge.isDirected()"], "Fixed commit": "680ae57e615f9cf7a431d65a63424c52cbecbb43", "Url": "https://api.github.com/repos/taynaud/gephi", "Date": "2012-02-08T17:42:11Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getTS().getSettings().isSync()) { setSleepTime(0); super.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6451/buggy-version/jason.src.java.aorta.jason.AortaAgentArch.java", "BodyUseAPI": [], "Fixed commit": "65b92e868e4d341d33d1c8943a172c57ef83e663", "Url": "https://api.github.com/repos/andreasschmidtjensen/aorta", "Date": "2014-12-15T13:40:40Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tunnels != null) { for (int i = 0; i < (tunnels.length); i++) { final org.jtrfp.trcl.file.TDFFile.Tunnel tun = tunnels[i]; if ((tun.getEntranceLogic()) != (org.jtrfp.trcl.file.TDFFile.TunnelLogic.invisible)) { final org.jtrfp.trcl.TerrainSystem.TunnelPoint tp = new org.jtrfp.trcl.TerrainSystem.TunnelPoint(tun, true); points.put(tp.hashCode(), tp); } if ((tun.getExitLogic()) != (org.jtrfp.trcl.file.TDFFile.TunnelLogic.invisible)) { final org.jtrfp.trcl.TerrainSystem.TunnelPoint tp = new org.jtrfp.trcl.TerrainSystem.TunnelPoint(tun, false); points.put(tp.hashCode(), tp); tunnelsByName.put(tun.getTunnelLVLFile(), tunnels[i]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7491/buggy-version/src.main.java.org.jtrfp.trcl.TerrainSystem.java", "BodyUseAPI": [], "Fixed commit": "3ba5c32beb27af617bcfe7a6529696a8c44f5a37", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-02-06T19:35:15Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tokens[2].contains(\";\")) { if (((tokens[2].split(\";\").length) % 2) != 0) { errorArray.add((\"error: language or deliminiter error for translations in line \" + (i + 1))); error = true; errors++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2163/buggy-version/api.src.main.java.v1.utils.csv.CSV.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "8e51d30f0f8d9bafdd8dd2acb44a3b594563f53c", "Url": "https://api.github.com/repos/mainzed/labelingsystem-server", "Date": "2017-02-14T13:42:42Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mDatas.get(position).getOrderType()))) { if (\"2\".equals(mDatas.get(position).getOrderType())) { holder.mOrderItemBgLl.setBackgroundColor(mContext.getResources().getColor(R.color.orange_bg)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6771/buggy-version/src.com.xgf.wineserver.ui.adapter.OrderAdapter.java", "BodyUseAPI": ["java.lang.String.equals(mDatas.get(position).getOrderType())", "java.util.ArrayList<com.xgf.wineserver.entity.Order>.get(int)", "mDatas.get(position).getOrderType()"], "Fixed commit": "be66af49292b26e01ce132115bb5cf130fdbacea", "Url": "https://api.github.com/repos/xiguofeng/WineServer", "Date": "2015-10-12T03:10:35Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_geoRight) - (_geoLeft)) > 180) { _pixelMultiplierX = (360 - ((_geoRight) - (_geoLeft))) / ((double) (_pixelWidth)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/394/buggy-version/Renderer.src.armyc2.c2sd.renderer.utilities.PointConversion.java", "BodyUseAPI": [], "Fixed commit": "7abe627d6db84dda8eb32a79745d58e6a04b193f", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2015-07-10T21:48:04Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["props.getProperty(\"chplUrlBegin\").trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(productDetailsUrl.endsWith(\"/\"))) { productDetailsUrl += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3276/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.app.surveillance.presenter.SurveillanceReportCsvPresenter.java", "BodyUseAPI": [], "Fixed commit": "211eb02a4d262bd6e8a46ab73de14a48286212d7", "Url": "https://api.github.com/repos/dlucas1/chpl-api", "Date": "2017-02-23T19:33:32Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.TypeVariable<?>.getGenericDeclaration()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (gd instanceof java.lang.Class) { class_gd = ((java.lang.Class<?>) (tv.getGenericDeclaration())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7952/buggy-version/src.main.java.com.alibaba.fastjson.util.FieldInfo.java", "BodyUseAPI": [], "Fixed commit": "5bf0ad610b493b3f242fc3c7880760ee9e0fa7df", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-07-22T21:50:03Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["realm.where(com.freshdigitable.udonroad.realmdata.URLEntityRealm.class).equalTo(\"url\", urlEntity.getURL()).findFirst()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (url != null) { url.merge(urlEntity); return url; }else { final com.freshdigitable.udonroad.realmdata.URLEntityRealm entity = realm.createObject(com.freshdigitable.udonroad.realmdata.URLEntityRealm.class, urlEntity.getURL()); entity.displayUrl = urlEntity.getDisplayURL(); entity.expandedUrl = urlEntity.getExpandedURL(); return entity; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2885/buggy-version/app.src.main.java.com.freshdigitable.udonroad.realmdata.URLEntityRealm.java", "BodyUseAPI": ["com.freshdigitable.udonroad.realmdata.URLEntityRealm.merge(twitter4j.URLEntity)"], "Fixed commit": "fa8343338d10b12b5aa84c6fdbca4ad80e526f82", "Url": "https://api.github.com/repos/akihito104/UdonRoad", "Date": "2016-10-11T03:43:16Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fragment.getDisplayOrder().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equals(\"t\")) editTextSegView.setText(fragment.getTextSegments().get(position));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2071/buggy-version/src.ualberta.g12.adventurecreator.EditFragmentActivity.java", "BodyUseAPI": [], "Fixed commit": "2d22ea10609b03bf335f0fcea88d47936c8801ec", "Url": "https://api.github.com/repos/Team-CMPUT301F13T12/301-Project", "Date": "2013-11-05T20:37:13Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pointscalculator.ttr_pc.MainActivity.findViewById(getResources().getIdentifier(\"teamName1\", \"id\", this.getPackageName()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(editText.getText().toString().equals(\"\"))) { inputData.add(editText.getText().toString()); }else { inputData.add((\"Team\" + columnInd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8042/buggy-version/app.src.main.java.pointscalculator.ttr_pc.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "java.util.List<java.lang.String>.add(editText.getText().toString())", "editText.getText().toString()"], "Fixed commit": "26c8724dede15b295cee2ebe9b9e534303ebe0e4", "Url": "https://api.github.com/repos/stasyasin/TTC_PC", "Date": "2016-08-23T19:51:45Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((chart) == null) && ((options) != null)) { createChart(options); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8831/buggy-version/src.com.invient.vaadin.charts.widgetset.client.ui.GwtInvientCharts.java", "BodyUseAPI": [], "Fixed commit": "0f4881841a24e68acbc1b6157c8d183c780e56df", "Url": "https://api.github.com/repos/S73417H/InvientCharts", "Date": "2012-06-28T10:20:32Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.mEditText.getText().toString().trim().replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((content.length()) == 0) { com.niketanpatel.mcandroid.Toast toast = com.niketanpatel.mcandroid.Toast.makeText(this, \"Is your mind empty?\", Toast.LENGTH_SHORT); toast.show(); this.mProgressDialog.dismiss(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6373/buggy-version/app.src.main.java.com.niketanpatel.mcandroid.CreatePostActivity.java", "BodyUseAPI": [], "Fixed commit": "c61568c222705facdffa9c152e4dc63047c7c755", "Url": "https://api.github.com/repos/niketanpatel/flippr-android", "Date": "2016-12-09T21:39:07Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["validation.getTicket().getType()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ticketType != null) { ticketTypeName = ticketType.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4382/buggy-version/src.client.app.src.main.java.com.example.icf.tripappclient.database.DatabaseState.java", "BodyUseAPI": ["io.swagger.client.model.TicketType.getName()"], "Fixed commit": "16f3c5c7d457acffa468edd2df9b9689358c2af8", "Url": "https://api.github.com/repos/sergiosuperstar/TripApp", "Date": "2017-06-18T08:28:48Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["validation.getTicket().getUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (validationUser != null) { userSurname = validation.getTicket().getUser().getLastName(); userLetter = validation.getTicket().getUser().getFirstName().substring(0, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4382/buggy-version/src.client.app.src.main.java.com.example.icf.tripappclient.database.DatabaseState.java", "BodyUseAPI": [], "Fixed commit": "16f3c5c7d457acffa468edd2df9b9689358c2af8", "Url": "https://api.github.com/repos/sergiosuperstar/TripApp", "Date": "2017-06-18T08:28:48Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (romanNum == '0') return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2264/buggy-version/romanNumber.src.Converter.java", "BodyUseAPI": [], "Fixed commit": "faf165b80c94c3916a8475f46a7142653c61f122", "Url": "https://api.github.com/repos/Jennifer-fu/practices", "Date": "2011-03-03T16:13:02Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_currentWordState.equals(WordState.INCORRECT))) { _quizModel.nextWord(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7598/buggy-version/src.WordResultScene.java", "BodyUseAPI": [], "Fixed commit": "2b69d499d79361298f502d1d36fdf8d1201d1e34", "Url": "https://api.github.com/repos/FMcIntosh/VoxProtoFAM", "Date": "2016-09-17T08:18:31Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["conn.createQuery(com.lap.zuzuweb.dao.Sql2O.DeviceDaoBySql2O.SQL_GET_DEVICE_BY_DEVICE_ID).addParameter(\"device_id\", deviceID).executeAndFetch(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((devices.size()) == 0) { device = java.util.Optional.empty(); }else if ((devices.size()) == 1) { device = java.util.Optional.of(devices.get(0)); }else { throw new java.lang.RuntimeException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1784/buggy-version/web.src.main.java.com.lap.zuzuweb.dao.Sql2O.DeviceDaoBySql2O.java", "BodyUseAPI": ["java.util.List<com.lap.zuzuweb.model.Device>.size()", "java.util.List<com.lap.zuzuweb.model.Device>.get(int)", "java.util.Optional.of(devices.get(0))"], "Fixed commit": "09b033a4437714aa93911ebeabcba49a3464370e", "Url": "https://api.github.com/repos/happylap/zuzu_web", "Date": "2016-05-16T03:01:39Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openremote.model.asset.AssetType.getByValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (assetType == (org.openremote.model.asset.AssetType.CUSTOM)) { typeLabel.setText(managerMessages.assetTypeLabel(type)); }else { typeLabel.setText(managerMessages.assetTypeLabel(assetType.name())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6097/buggy-version/manager.client.src.main.java.org.openremote.manager.client.assets.asset.AssetViewImpl.java", "BodyUseAPI": ["org.openremote.model.asset.AssetType.name()", "org.openremote.manager.client.i18n.ManagerMessages.assetTypeLabel(assetType.name())", "org.openremote.manager.client.assets.asset.FormInputText.setText(managerMessages.assetTypeLabel(assetType.name()))"], "Fixed commit": "986572792eb5a8aa8fc2d76381a72e08e261d69b", "Url": "https://api.github.com/repos/openremote/openremote", "Date": "2017-04-03T09:05:12Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["konoha.script.ScriptContext.eval2(java.lang.String,int,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result instanceof java.lang.String) { result = nez.util.StringUtils.quoteString('\"', ((java.lang.String) (result)), '\"'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4646/buggy-version/src.konoha.main.Main.java", "BodyUseAPI": [], "Fixed commit": "90a80e2c956d02b7d8b2f2498264d347eeedbcad", "Url": "https://api.github.com/repos/nez-peg/konoha", "Date": "2015-10-20T10:03:52Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (logger.isDebugEnabled()) { if ((scriptEngine) == null) { logger.error(org.springframework.integration.scripting.jsr223.AbstractScriptExecutor.invlalidLanguageMessage(this.language)); }else { logger.debug((\"using script engine : \" + (scriptEngine.getFactory().getEngineName()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2106/buggy-version/spring-integration-scripting.src.main.java.org.springframework.integration.scripting.jsr223.AbstractScriptExecutor.java", "BodyUseAPI": [], "Fixed commit": "e475740547efb9312f1b0506319478cfaf651655", "Url": "https://api.github.com/repos/dturanski/spring-integration", "Date": "2012-12-12T22:50:19Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rm.getSongs().isEmpty())) { java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.String>> alt = psr.getByPlaylistName(\"All\"); java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.String>> neu = rm.getSongs(); for (java.util.HashMap<java.lang.String, java.lang.String> itemAlt : alt) { if (!(neu.contains(itemAlt))) { psr.deleteBySongPath(itemAlt.get(\"songPath\")); } } psr.reenterPlaylist(\"All\", rm.getSongs()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3481/buggy-version/FIPLY.App.app.src.main.java.htl_leonding.fiplyteam.fiply.menu.SplashActivity.java", "BodyUseAPI": ["htl_leonding.fiplyteam.fiply.music.ReadMusic.getSongs()", "htl_leonding.fiplyteam.fiply.music.ReadMusic.getSongs()", "htl_leonding.fiplyteam.fiply.data.PlaylistSongsRepository.reenterPlaylist(java.lang.String,rm.getSongs())"], "Fixed commit": "0a60e73f90bfe05735a33be8d99c562303d9027c", "Url": "https://api.github.com/repos/htl-leonding/2015_fiply", "Date": "2016-02-11T08:04:46Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (andrew.powersuits.common.AddonUtils.isClientSide()) { item.setVelocity(vx, vy, vz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6736/buggy-version/src.minecraft.andrew.powersuits.modules.MagnetModule.java", "BodyUseAPI": [], "Fixed commit": "a17b06590d4e612e2635693b2b5e650377c9d801", "Url": "https://api.github.com/repos/Andrew2448/Andrew2448PowersuitAddons", "Date": "2013-04-25T21:05:09Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (refreshType.equals(FermatRefreshTypes.NEW)) offset = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5886/buggy-version/CCP.android.reference_wallet.fermat-ccp-android-reference-wallet-bitcoin-wallet-bitdubai.src.main.java.com.bitdubai.reference_niche_wallet.bitcoin_wallet.fragments.wallet_final_version.RequestSendHistoryFragment.java", "BodyUseAPI": [], "Fixed commit": "8c4bf2a17b864ed7bf87f0749e0b2ec5c88e843b", "Url": "https://api.github.com/repos/furszy/fermat", "Date": "2015-11-30T14:29:09Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (refreshType.equals(FermatRefreshTypes.NEW)) offset = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5886/buggy-version/CCP.android.reference_wallet.fermat-ccp-android-reference-wallet-bitcoin-wallet-bitdubai.src.main.java.com.bitdubai.reference_niche_wallet.bitcoin_wallet.fragments.wallet_final_version.RequestReceiveHistoryFragment.java", "BodyUseAPI": [], "Fixed commit": "8c4bf2a17b864ed7bf87f0749e0b2ec5c88e843b", "Url": "https://api.github.com/repos/furszy/fermat", "Date": "2015-11-30T14:29:09Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obtainedQuestions.size()) > 0) { for (domain.Question question : obtainedQuestions) { java.lang.System.out.println(\"-------------------------------\"); java.lang.System.out.println((((((((\"Id: \" + (question.getId())) + \"\\nT\\ufffdtulo: \") + (question.getTitle())) + \"\\nAutor: \") + (question.getAuthor().getUsername())) + \"\\nData: \") + (question.getDate().toString()))); java.lang.System.out.println(\"-------------------------------\"); } displayQuestion(loggedUser); }else { java.lang.System.out.println(\"N\ufffdo tem quest\ufffdes cadastradas do autor informado\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1734/buggy-version/Stack.src.stackoverflow.ui.TextForm.java", "BodyUseAPI": [], "Fixed commit": "8311166bd78ac5bb7b5a3522e85d648b129b4ea4", "Url": "https://api.github.com/repos/pvcorazza/TCP-StackOverflow", "Date": "2016-12-09T11:34:01Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (exchangeRate != null) { if (android.text.TextUtils.isEmpty(editText.getText())) { editText.setText(exchangeRate.getDecimalFormattedExchangeRate(exchangeRateCurrencyCode)); }else { android.util.Log.w(co.smartreceipts.android.fragments.ReceiptCreateEditFragment.TAG, \"User already started typing... Ignorning exchange rate result\"); } }else { android.util.Log.e(co.smartreceipts.android.fragments.ReceiptCreateEditFragment.TAG, \"Received a null exchange rate\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6828/buggy-version/SmartReceiptsLibrary.src.main.java.co.smartreceipts.android.fragments.ReceiptCreateEditFragment.java", "BodyUseAPI": ["android.widget.EditText.setText(exchangeRate.getDecimalFormattedExchangeRate(exchangeRateCurrencyCode))", "co.smartreceipts.android.model.gson.ExchangeRate.getDecimalFormattedExchangeRate(java.lang.String)"], "Fixed commit": "16b017eddf7b606b8bca6d49d67686c1a11aed6f", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2015-06-21T19:04:07Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (resource != null) { com.ge.research.sadl.jena.OntModelProvider.OntModelAdapter a = com.ge.research.sadl.jena.OntModelProvider.findAdapter(resource); if (a == null) { a = new com.ge.research.sadl.jena.OntModelProvider.OntModelAdapter(); a.isLoading = true; resource.eAdapters().add(a); } a.impliedPropertiesUsed = impliedProperties; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6085/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.OntModelProvider.java", "BodyUseAPI": ["com.ge.research.sadl.jena.OntModelProvider.findAdapter(org.eclipse.emf.ecore.resource.Resource)", "org.eclipse.emf.ecore.resource.Resource.eAdapters()", "resource.eAdapters().add(com.ge.research.sadl.jena.OntModelProvider.OntModelAdapter)"], "Fixed commit": "c648c26a20937da367b20013e763f94277df6f20", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-08-25T21:08:41Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (resource != null) { for (org.eclipse.emf.common.notify.Adapter a : resource.eAdapters()) { if (a instanceof com.ge.research.sadl.jena.OntModelProvider.OntModelAdapter) { return ((com.ge.research.sadl.jena.OntModelProvider.OntModelAdapter) (a)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6085/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.OntModelProvider.java", "BodyUseAPI": ["org.eclipse.emf.ecore.resource.Resource.eAdapters()"], "Fixed commit": "c648c26a20937da367b20013e763f94277df6f20", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-08-25T21:08:41Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((totalSelfCollection) == 0) { org.ednovo.gooru.client.gin.AppClientFactory.fireEvent(new org.ednovo.gooru.client.mvp.classpages.event.GetStudentJoinListEvent(activeMemberCounter)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8113/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.classpages.tabitem.assignments.AssignmentsTabView.java", "BodyUseAPI": [], "Fixed commit": "79fb7ffcd09be155210361cac567f24404898966", "Url": "https://api.github.com/repos/suryanarayanakb/Gooru-Web", "Date": "2014-05-22T10:21:36Z"},
{"Line": "=>1292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dockfx.DelayOpenHandler.open(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (newNode != null) { newNode.dockedProperty().set(true); tabPane.addDockNodeTab(new org.dockfx.pane.DockNodeTab(newNode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6952/buggy-version/src.main.java.org.dockfx.DockPane.java", "BodyUseAPI": ["org.dockfx.DockNode.dockedProperty()", "newNode.dockedProperty().set(boolean)", "org.dockfx.pane.ContentTabPane.addDockNodeTab(org.dockfx.pane.DockNodeTab)"], "Fixed commit": "bbbc57653d6a0bc7463539de30fec075443c0843", "Url": "https://api.github.com/repos/sonicsmooth/DockFX", "Date": "2017-05-15T10:26:15Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((equipmentPane.getSelectionPath()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/659/buggy-version/src.lisong_mechlab.view.ItemTransferHandler.java", "BodyUseAPI": [], "Fixed commit": "d262b6c94299ab6fb3a1339280b9b37f74851bd1", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-09-27T23:11:07Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPassword) { if ((inputType) == (com.goodiebag.pinview.Pinview.InputType.NUMBER)) { it = (android.text.InputType.TYPE_CLASS_NUMBER) | (android.text.InputType.TYPE_NUMBER_VARIATION_PASSWORD); }else if ((inputType) == (com.goodiebag.pinview.Pinview.InputType.TEXT)) { it = (android.text.InputType.TYPE_CLASS_TEXT) | (android.text.InputType.TYPE_TEXT_VARIATION_PASSWORD); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/899/buggy-version/pinview.src.main.java.com.goodiebag.pinview.Pinview.java", "BodyUseAPI": [], "Fixed commit": "3054c0b252d2717b70289665934b654d5569dedf", "Url": "https://api.github.com/repos/GoodieBag/Pinview", "Date": "2017-01-13T06:53:07Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputType) == (com.goodiebag.pinview.Pinview.InputType.TEXT)) { if ((value.length()) > i) { editTextList.get(i).setText(((java.lang.Character) (value.charAt(i))).toString()); }else { editTextList.get(i).setText(\"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/899/buggy-version/pinview.src.main.java.com.goodiebag.pinview.Pinview.java", "BodyUseAPI": [], "Fixed commit": "3054c0b252d2717b70289665934b654d5569dedf", "Url": "https://api.github.com/repos/GoodieBag/Pinview", "Date": "2017-01-13T06:53:07Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((players[1]) instanceof com.example.systemadministrator.myapplication.NetworkPlayer) ((com.example.systemadministrator.myapplication.NetworkPlayer) (players[1])).setMadeMove(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9268/buggy-version/app.src.main.java.com.example.systemadministrator.myapplication.BoardActivity.java", "BodyUseAPI": ["((com.example.systemadministrator.myapplication.NetworkPlayer) (players[1])).setMadeMove(boolean)"], "Fixed commit": "ca6b38d93c8a0bdd4e2ee4beb8f2dc3b9efe90e2", "Url": "https://api.github.com/repos/TsebMagi/Gomoku", "Date": "2017-03-12T05:43:13Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(k.getCaseSensitiveSearch())) { pstr = pstr.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7306/buggy-version/src.main.java.elh.eus.MSM.TwitterStreamClient.java", "BodyUseAPI": [], "Fixed commit": "39bb49ead0e6de57311e442fe74bd35d4e3eb949", "Url": "https://api.github.com/repos/Elhuyar/MSM", "Date": "2016-09-11T14:26:45Z"},
{"Line": "=>828", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fdflib.persistence.FdfPersistence.getInstance().selectQuery(java.lang.Class<S>,<nulltype>,java.util.List<com.fdflib.model.util.WhereClause>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((returnedStates.get(0)) != null) { return getEntityById(entityState, returnedStates.get(0).id); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6842/buggy-version/src.main.java.com.fdflib.service.impl.FdfCommonServices.java", "BodyUseAPI": ["java.util.List<S>.get(int)", "com.fdflib.service.impl.FdfCommonServices.getEntityById(java.lang.Class<S>,returnedStates.get(0).id)"], "Fixed commit": "ae01054d3985db8ea62a7d6b996313fa0118e4f0", "Url": "https://api.github.com/repos/briangormanly/4dflib", "Date": "2015-09-28T21:50:55Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((field.get(state)) == null) || (field.get(state).toString().equals(\"null\"))) { sql += \" ''\"; }else { sql += (\" '\" + (field.get(state))) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6842/buggy-version/src.main.java.com.fdflib.persistence.queries.CoreMySqlQueries.java", "BodyUseAPI": ["java.lang.reflect.Field.get(S)"], "Fixed commit": "ae01054d3985db8ea62a7d6b996313fa0118e4f0", "Url": "https://api.github.com/repos/briangormanly/4dflib", "Date": "2015-09-28T21:50:55Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isGif)) b.sheet(5, image, \"Share image\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9275/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.MediaView.java", "BodyUseAPI": [], "Fixed commit": "044ebbbaf66a6f5fe7871169ed21694d1ee47469", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-04-06T01:09:04Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Connection.Client.login(txtEmail.getText(),txtUsername.getText(),txtPassword.getText())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((result.length()) > (\"true\".length())) { int indUB = result.indexOf(\"<username>\"); int indUE = result.indexOf(\"</username>\"); if ((indUB == (-1)) || (indUE == (-1))) { java.lang.System.out.println(\"@ClientGUI/login:bad response received - can\\'t find \\\"<username>\\\" or \\\"</username>\\\" tags in body\"); }else txtUsername.setText(result.substring((indUB + (\"<username>\".length())), indUE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4267/buggy-version/src.GUI.LoginController.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "javafx.scene.control.TextField.setText(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "3c166ccdf4d3937c26fb608262f52ec33ac0c47e", "Url": "https://api.github.com/repos/MacedoRAC/SDIS-Chat-Application", "Date": "2015-06-05T15:12:22Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ean.length()) < 13) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4678/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": [], "Fixed commit": "5ccc9d3ac190f37e72434b25e4cf78e966bd72f4", "Url": "https://api.github.com/repos/flaviokreis/SuperDuo", "Date": "2015-08-27T12:55:26Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((service.equals(SOUPmain.MANAGEMENT)) && (request.equals(SOUPmain.PING))) { return true; }else return checkclientkey(packetsourceip, key);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6436/buggy-version/LBS-Server.src.Radio.java", "BodyUseAPI": [], "Fixed commit": "6e206318fdd8d10bbea5bb5c1e0c697ace636225", "Url": "https://api.github.com/repos/MaggiWuerze/LBS-Server", "Date": "2015-10-08T10:24:05Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(finalQuery)) finalQuery = query;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5216/buggy-version/app.src.main.java.com.sumit.askmeanything.api.WolframAlphaAPI.java", "BodyUseAPI": [], "Fixed commit": "ba62f03c0132ce785d8c5648ac44aac959ebba52", "Url": "https://api.github.com/repos/sumitsahoo/AskMeAnything", "Date": "2016-06-15T07:29:47Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.VendingMachine.getItemList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (itemNo > (itemList.size())) { throw new java.lang.IllegalArgumentException(\"\uc5c6\ub294 \uc0c1\ud488\ubc88\ud638\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8755/buggy-version/src.main.User.java", "BodyUseAPI": [], "Fixed commit": "bd9147a640336760e52986f693ef5e2202e6e602", "Url": "https://api.github.com/repos/jinhyun/vendingMachine", "Date": "2015-03-06T08:11:12Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFragmentTag) != null) { outState.putString(com.huhx0015.doordashchallenge.view.activities.MainActivity.INSTANCE_FRAGMENT_TAG, mFragmentTag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5564/buggy-version/app.src.main.java.com.huhx0015.doordashchallenge.view.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "71533f92c52d0f87fe0a37129344b2d36455ee54", "Url": "https://api.github.com/repos/huhx0015/DashNearby", "Date": "2017-06-10T00:56:55Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFragmentTag) == null) { if ((((mLatitude) != null) && ((mLongitude) != null)) && (mContentMainViewModel.getProgressBarVisible())) { mContentMainViewModel.setProgressBarVisible(false); loadFragment(com.huhx0015.doordashchallenge.view.fragments.RestaurantListFragment.newInstance(mLatitude, mLongitude, DashConstants.TAG_DISCOVER), DashConstants.TAG_DISCOVER); }else { mContentMainViewModel.setProgressBarVisible(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5564/buggy-version/app.src.main.java.com.huhx0015.doordashchallenge.view.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "71533f92c52d0f87fe0a37129344b2d36455ee54", "Url": "https://api.github.com/repos/huhx0015/DashNearby", "Date": "2017-06-10T00:56:55Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (intent.getAction().equalsIgnoreCase(Intent.ACTION_NEW_OUTGOING_CALL)) { phoneNumber = getOutGoingCallNumber(intent); }else { phoneNumber = intent.getStringExtra(\"incoming_number\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8408/buggy-version/app.src.main.java.com.android.system.receiver.PhoneCallReceiver.java", "BodyUseAPI": ["com.android.system.receiver.PhoneCallReceiver.getOutGoingCallNumber(android.content.Intent)", "android.content.Intent.getStringExtra(java.lang.String)"], "Fixed commit": "2a272c2a04a062e906c32200e37b96a828f4d4ac", "Url": "https://api.github.com/repos/windworst/android-background-service", "Date": "2015-08-25T03:34:06Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.openStream()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (is != null) { try { java.lang.String filesStr = com.kloudtek.util.io.IOUtils.toString(is).trim(); java.lang.String[] files = filesStr.split(\"\\n\"); for (java.lang.String file : files) { com.kloudtek.ktserializer.Serializer.loadConfig(file.trim()); } } finally { com.kloudtek.util.io.IOUtils.close(is); } }else { com.kloudtek.ktserializer.Serializer.logger.info(((\"Unable to load \" + url) + \" stream is null\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/916/buggy-version/runtime.src.main.java.com.kloudtek.ktserializer.Serializer.java", "BodyUseAPI": ["com.kloudtek.util.io.IOUtils.close(java.io.InputStream)", "com.kloudtek.util.io.IOUtils.toString(is).trim()", "com.kloudtek.util.io.IOUtils.toString(java.io.InputStream)"], "Fixed commit": "cbf39cf0fffba2008ba284eeea9979be32f34289", "Url": "https://api.github.com/repos/kloudtek/ktserializer", "Date": "2016-01-26T22:29:59Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (painted) { label.repaint(); painted = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3313/buggy-version/mainUI.java", "BodyUseAPI": [], "Fixed commit": "d40ba0222d1e32e15999e193c234cd7b37d1d89d", "Url": "https://api.github.com/repos/waitingduck/java_oracle_spatialdatabse_demo", "Date": "2015-08-10T16:23:34Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closed) { throw new java.io.IOException(\"Cannot perform I/O operations on a closed output store\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6697/buggy-version/kbp-events2014.src.main.java.com.bbn.kbp.events2014.io.LinkingSpecFormats.java", "BodyUseAPI": [], "Fixed commit": "f5d2862de0a647b0578eebece635fdd8d2abba7b", "Url": "https://api.github.com/repos/rgabbard-bbn/kbp-2014-event-arguments", "Date": "2014-09-11T21:43:33Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.nbt.NBTTagCompound.getIntArray(java.lang.String)", "hunternif.mc.atlas.core.AtlasData.getDimensionData(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dimData.getTile(intArray[i], intArray[(i + 1)])) != null) { hunternif.mc.atlas.util.Log.warn((((\"Duplicate tile at \" + (intArray[i])) + \", \") + (intArray[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/348/buggy-version/src.main.java.hunternif.mc.atlas.core.AtlasData.java", "BodyUseAPI": ["hunternif.mc.atlas.util.Log.warn(java.lang.String)"], "Fixed commit": "459578383216998e0b9a45f82058520fcf4f6df8", "Url": "https://api.github.com/repos/Kenkron/AntiqueAtlas", "Date": "2017-05-03T02:40:19Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction == 1) offset = 5; else offset = 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/963/buggy-version/src.edu.ncc.checkersapi.CheckerBoard.java", "BodyUseAPI": [], "Fixed commit": "f8b95cbe5037b35ea502b7ec034da054963836cd", "Url": "https://api.github.com/repos/DOrtiz1011/Checkers", "Date": "2013-03-21T02:31:05Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction == 1) offset = 3; else offset = 5;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/963/buggy-version/src.edu.ncc.checkersapi.CheckerBoard.java", "BodyUseAPI": [], "Fixed commit": "f8b95cbe5037b35ea502b7ec034da054963836cd", "Url": "https://api.github.com/repos/DOrtiz1011/Checkers", "Date": "2013-03-21T02:31:05Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null == payload) { mPayload = new byte[0]; }else { mPayload = payload; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/332/buggy-version/src.main.java.com.pinterest.secor.message.Message.java", "BodyUseAPI": [], "Fixed commit": "2a636114bb2a47326a903857a2f9e33b6fce0e8e", "Url": "https://api.github.com/repos/HelixEducation/secor", "Date": "2015-06-08T20:34:00Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((durationIn.equals(\"\")) || (durationIn.isEmpty())) { dur = 0.0; }else { dur = java.lang.Double.parseDouble(durationIn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9258/buggy-version/StHildasStudios.src.main.java.com.bgcompute.StHildasStudios.view.NewClassView.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "85fb42bb014ab7a38af6ba57ced1a86af8e6a7a1", "Url": "https://api.github.com/repos/guyneedham/StHildasStudiosApp", "Date": "2014-02-28T17:20:35Z"},
{"Line": "=>1028", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(maxRowsString)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6091/buggy-version/desktop.ui.src.main.java.org.datacleaner.windows.AnalysisJobBuilderWindowImpl.java", "BodyUseAPI": [], "Fixed commit": "2aa4b3dfb545a546d4e1717fb2db4cdc7e7c1c35", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-10-14T13:59:46Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (in.ureport.managers.UserManager.isUserLoggedIn()) { userServices.getUser(in.ureport.managers.UserManager.getUserId(), new in.ureport.helpers.ValueEventListenerAdapter() { @java.lang.Override public void onDataChange(com.firebase.client.DataSnapshot dataSnapshot) { super.onDataChange(dataSnapshot); user = dataSnapshot.getValue(in.ureport.models.User.class); user.setKey(dataSnapshot.getKey()); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2261/buggy-version/app.src.main.java.in.ureport.fragments.StoryViewFragment.java", "BodyUseAPI": [], "Fixed commit": "c54285310c857c2dfd33abf0ac4fa3ce66212fd8", "Url": "https://api.github.com/repos/rapidpro/ureport-android", "Date": "2015-12-15T15:26:37Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((info.tkware.muda.Main.cli.help) != null) { info.tkware.muda.Main.comm.usage(); java.lang.System.exit(info.tkware.muda.Main.EXIT_SUCCESS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1885/buggy-version/src.info.tkware.muda.Main.java", "BodyUseAPI": [], "Fixed commit": "6655a6b44ecd485fe3a8464069a9b69252fabc9b", "Url": "https://api.github.com/repos/Karunamon/muda", "Date": "2015-05-07T16:28:47Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m.start()) != 0) sb.append('_');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/17/buggy-version/src.main.java.info.vividcode.jagglate.TemplateClassLoader.java", "BodyUseAPI": [], "Fixed commit": "7ebf5325178e879c8464abc3bbf069e043247408", "Url": "https://api.github.com/repos/nobuoka/Jagglate", "Date": "2014-12-06T10:54:29Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.boha.golfpractice.golfer.fragments.PageFragment>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pf instanceof com.boha.golfpractice.golfer.fragments.SessionListFragment) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2926/buggy-version/TigerGolf004.TGolfer.src.main.java.com.boha.golfpractice.golfer.activities.PlayerMainActivity.java", "BodyUseAPI": [], "Fixed commit": "3f3ed934e0cca054a781ec9c694c6515c94a8aa2", "Url": "https://api.github.com/repos/malengatiger/TigerGolf004", "Date": "2016-03-30T03:22:41Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pos.getTranslation().magnitude()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mag > maxMag) pos = new net.patowen.hyperbolicspace.Transformation(pos.getRotation(), pos.getTranslation().times((maxMag / mag)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5503/buggy-version/HyperbolicSpace.src.net.patowen.hyperbolicspace.Player.java", "BodyUseAPI": ["pos.getTranslation().times(double)"], "Fixed commit": "2842ea4a18aab93757daccef5d292e56203ef326", "Url": "https://api.github.com/repos/patowen/hyperbolic-space", "Date": "2015-04-29T17:56:03Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (show(commit)) { for (com.github.danielflower.mavenplugins.gitlog.ChangeLogRenderer renderer : renderers) { renderer.renderCommit(commit); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/800/buggy-version/src.main.java.com.github.danielflower.mavenplugins.gitlog.Generator.java", "BodyUseAPI": ["com.github.danielflower.mavenplugins.gitlog.ChangeLogRenderer.renderCommit(org.eclipse.jgit.revwalk.RevCommit)"], "Fixed commit": "9541dffcd1282637fbdb0f18440949232c43a8d4", "Url": "https://api.github.com/repos/danielflower/maven-gitlog-plugin", "Date": "2011-09-17T10:06:22Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jgit.lib.Repository.resolve(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (head != null) { org.eclipse.jgit.revwalk.RevCommit mostRecentCommit = walk.parseCommit(head); walk.markStart(mostRecentCommit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/800/buggy-version/src.main.java.com.github.danielflower.mavenplugins.gitlog.Generator.java", "BodyUseAPI": ["org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId)"], "Fixed commit": "9541dffcd1282637fbdb0f18440949232c43a8d4", "Url": "https://api.github.com/repos/danielflower/maven-gitlog-plugin", "Date": "2011-09-17T10:06:22Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vehicleGUIDecorator.getVehicleState()) == 3) { vehicleGUIDecorator.moveVehicleGUI(move, vehicleGUIDecorator.getVehicleState()); }else if (move > 0) vehicleGUIDecorator.moveVehicleGUI(move, vehicleGUIDecorator.getVehicleState());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4017/buggy-version/src.londonsw.controller.VehicleController.java", "BodyUseAPI": ["londonsw.view.simulation.VehicleGUIDecorator.getVehicleState()", "londonsw.view.simulation.VehicleGUIDecorator.moveVehicleGUI(int,vehicleGUIDecorator.getVehicleState())", "londonsw.view.simulation.VehicleGUIDecorator.getVehicleState()", "londonsw.view.simulation.VehicleGUIDecorator.moveVehicleGUI(int,vehicleGUIDecorator.getVehicleState())"], "Fixed commit": "ee12d65c351ed7bd1c6acd8b57a2615251175bef", "Url": "https://api.github.com/repos/violetavk/LondonSW_trafficsimulator", "Date": "2016-03-21T14:51:41Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ex.leijiType) > 0) { sb1.append(com.crtb.tunnelmonitor.utils.AlertUtils.U_TYPE_MSGS[ex.leijiType]).append(\" \").append(ex.leijiValue).append(\"\u6beb\u7c73\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2914/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.utils.AlertUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(double)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "e39a7773c4fcac79cb1ea8085dcbfb751622204c", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-08-17T06:20:05Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ex.sulvType) > 0) { sb2.append(com.crtb.tunnelmonitor.utils.AlertUtils.U_TYPE_MSGS[ex.sulvType]).append(\" \").append(ex.sulvValue).append(\"\u6beb\u7c73/\u5929\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2914/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.utils.AlertUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(double)"], "Fixed commit": "e39a7773c4fcac79cb1ea8085dcbfb751622204c", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-08-17T06:20:05Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isBackPressed)) { playGame(gameQuestions, game); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4736/buggy-version/app.src.main.java.com.example.jakobhaglof.quizapp.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "707fb48ff6249d09b904550def3ee64dba29762c", "Url": "https://api.github.com/repos/J4k08/QuizMonkey", "Date": "2016-12-09T17:19:25Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (content.getMainGroup())) { groupCodes.addAll(content.getGroups()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/846/buggy-version/admin-console.src.main.java.com.agiletec.plugins.jacms.apsadmin.content.helper.ContentActionHelper.java", "BodyUseAPI": ["com.agiletec.plugins.jacms.aps.system.services.content.model.Content.getGroups()", "java.util.List<java.lang.String>.addAll(content.getGroups())"], "Fixed commit": "e5eb7379ea1d009f0835289d1ae0502446d59044", "Url": "https://api.github.com/repos/entando/entando-core", "Date": "2016-07-29T10:38:38Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((str.length()) > 0) { java.lang.String[] tokens = str.split(\",\\\\s\"); l = new java.util.ArrayList<>(java.util.Arrays.asList(tokens)); }else { l = new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7286/buggy-version/glue-webapp.src.main.java.com.glue.webapp.beans.StringCollectionConverter.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "fe9fdf1eed58950296dd47cb5a6565415c7a1c09", "Url": "https://api.github.com/repos/pgillet/Glue", "Date": "2013-11-24T15:21:54Z"},
{"Line": "=>1604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.liferay.portal.kernel.util.Validator.isNull(themeDisplay)) && (xmlRequest.equals(\"<request />\"))) { tokens.put(\"company_id\", java.lang.String.valueOf(article.getCompanyId())); tokens.put(\"group_id\", java.lang.String.valueOf(article.getGroupId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/225/buggy-version/portal-impl.src.com.liferay.portlet.journal.service.impl.JournalArticleLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "40c77d276a4921491ded3fa8fdfa7abe94a41e6c", "Url": "https://api.github.com/repos/holatuwol/liferay-portal", "Date": "2013-04-23T14:05:30Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (trailerId != null) { mCurrentVideoId = getVideoId(trailerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5687/buggy-version/TwitFlick.src.main.java.com.qvdev.apps.twitflick.Presenter.DetailPresenter.java", "BodyUseAPI": ["com.qvdev.apps.twitflick.Presenter.DetailPresenter.getVideoId(java.lang.String)"], "Fixed commit": "bf3457c1f6a39bc837db52f05b5d5b735103d7f7", "Url": "https://api.github.com/repos/QVDev/Twitflicks", "Date": "2013-12-21T01:52:55Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((field.getSelectedCell()) == null) && (pm.isHumanActing())) { score.setStatus(com.teremok.influence.model.Localizator.getString(\"selectYourCell\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5649/buggy-version/influence.src.com.teremok.influence.model.Match.java", "BodyUseAPI": [], "Fixed commit": "d9d4d44dc5fe63fd0657a7b53393dc50a6c45585", "Url": "https://api.github.com/repos/teremokgames/influence", "Date": "2014-01-13T08:11:04Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (earliestTask != null) return earliestTask.getTask();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2370/buggy-version/app.src.main.java.com.uottawa.thirstycactus.taskcactus.domain.Person.java", "BodyUseAPI": ["com.uottawa.thirstycactus.taskcactus.domain.TaskDate.getTask()"], "Fixed commit": "9ed37b6f53011254fb7a96a9306fbbd32d97f1d1", "Url": "https://api.github.com/repos/balamou/TaskCactus", "Date": "2017-11-23T01:58:37Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (postedDrmsDocument == null) { throw new gov.ca.cwds.rest.services.ServiceException(\"Unable to Create DRMS Document\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/942/buggy-version/src.main.java.gov.ca.cwds.rest.services.ScreeningToReferralService.java", "BodyUseAPI": [], "Fixed commit": "49a761602071035c55b5f121550613e26072732d", "Url": "https://api.github.com/repos/ca-cwds/API", "Date": "2017-07-06T21:04:46Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startTime) == (-1)) startTime = getTime();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4430/buggy-version/src.main.java.StateMachine.StateMachine.java", "BodyUseAPI": [], "Fixed commit": "47f69dfe055815cf8251c1d0ca693ef5e9b41618", "Url": "https://api.github.com/repos/rss-2014-team-6/rss-team-6-state-machine", "Date": "2014-05-07T14:39:24Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mcp.mobius.waila.api.impl.ConfigHandler.instance().getConfig(Configuration.CATEGORY_GENERAL, Constants.CFG_WAILA_TTS, false))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2616/buggy-version/src.main.java.mcp.mobius.waila.overlay.WailaTickHandler.java", "BodyUseAPI": [], "Fixed commit": "1d9deb83c01477743ffb738dba2f0cffe67d7d56", "Url": "https://api.github.com/repos/TehNut/HWYLA", "Date": "2017-06-11T06:21:58Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(living instanceof org.spongepowered.api.entity.ArmorEquipable)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5166/buggy-version/src.main.java.com.skelril.skree.content.registry.item.weapon.sword.TwoTailedSword.java", "BodyUseAPI": [], "Fixed commit": "0e15bf541d6bbbdc695a3b198b40d4b8cb776d82", "Url": "https://api.github.com/repos/Skelril/Skree", "Date": "2016-01-09T04:45:37Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lowered.contains(\"?wsdl=\")) fileName = (fileName.replace(\"?wsdl=\", \"\")) + \".wsdl\"; else if (lowered.endsWith(\"?xsd\")) fileName = (fileName.substring(0, ((fileName.length()) - 5))) + \".xsd\"; else if (lowered.contains(\"?xsd=\")) fileName = (fileName.replace(\"?xsd=\", \"\")) + \".xsd\"; else { index = fileName.lastIndexOf('?'); if (index != (-1)) fileName = fileName.substring((++index)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8447/buggy-version/plugins.org.eclipse.bpel.common.wsdl.src.org.eclipse.bpel.common.wsdl.helpers.UriAndUrlHelper.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "81b526025e81f8c4f4485d8ef5cd7befe72e3399", "Url": "https://api.github.com/repos/LorenzoBettini/org.eclipse.bpel", "Date": "2012-10-10T10:22:38Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parser.Formatter.isCategory(s))) { tempDate += s + (Keywords.SPACE_STRING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6935/buggy-version/src.parser.Formatter.java", "BodyUseAPI": [], "Fixed commit": "e71f708d210270487d074267a622eb94fa981be6", "Url": "https://api.github.com/repos/cs2103jan2016-f14-1j/main", "Date": "2016-03-31T13:43:46Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tempDate.isEmpty())) { outArray.add(tempDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6935/buggy-version/src.parser.Formatter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "e71f708d210270487d074267a622eb94fa981be6", "Url": "https://api.github.com/repos/cs2103jan2016-f14-1j/main", "Date": "2016-03-31T13:43:46Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActionViewMode) != (Action.TOP_FIVE_VIEW)) { if (mDetailVisible) { numItemsVisible = java.lang.Math.min(numItemsVisible, 3); }else { numItemsVisible = java.lang.Math.min(numItemsVisible, 5); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4808/buggy-version/src.com.apps.quantum1.ActionListFragmentDSLV.java", "BodyUseAPI": [], "Fixed commit": "38f5767b0197696ab2210ade31496d2d452df446", "Url": "https://api.github.com/repos/chauncyc/x950", "Date": "2015-10-23T01:21:45Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.hasErrors()) { this.populateUserObjects(user, store, model, locale); model.addAttribute(\"user\", user); return com.salesmanager.core.business.user.model.User.profile; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2988/buggy-version/sm-shop.src.main.java.com.salesmanager.web.admin.controller.user.UserController.java", "BodyUseAPI": [], "Fixed commit": "d32148c3ff9da7c2c181e1d5addc0818d65d9bac", "Url": "https://api.github.com/repos/asaad1982/laVetrina", "Date": "2016-03-23T19:34:57Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ucsb.cs56.F16.CourseScraper.Document.getElementsContainingText(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((content.size()) == 0) return \"Course description not found\"; else { edu.ucsb.cs56.F16.CourseScraper.Element panel = content.get(((content.size()) - 2)); edu.ucsb.cs56.F16.CourseScraper.Elements des = panel.select(\"div[style=padding-left: 2px;]\"); if ((des.size()) == 0) return \"Course description not found\"; else return des.get(1).html(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1438/buggy-version/src.edu.ucsb.cs56.F16.CoursesScraper.GetDescription.java", "BodyUseAPI": ["edu.ucsb.cs56.F16.CourseScraper.Elements.get(((content.size()) - 2))", "edu.ucsb.cs56.F16.CourseScraper.Elements.size()"], "Fixed commit": "1f8da1dd044074974755000464cab2573c87e7f6", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-utilities-GEscraper", "Date": "2016-11-20T04:59:49Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y > 1.5F) y = 1.5F; else if (y < (-1.5F)) y = -1.5F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9293/buggy-version/SoccerNight.src.com.ganzhiruyi.soccernight.world.World.java", "BodyUseAPI": [], "Fixed commit": "66d07ab36e53cc103dc17f066eea62bd4a4e17a8", "Url": "https://api.github.com/repos/ganzhiruyi/SoccerNight", "Date": "2014-02-03T15:35:41Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.hasMetadata(\"SpectateInventory\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4493/buggy-version/src.me.libraryaddict.Hungergames.Managers.InventoryManager.java", "BodyUseAPI": [], "Fixed commit": "4f35ba80c6e49f84733f24012ff9b3641cab6e18", "Url": "https://api.github.com/repos/libraryaddict/LibsHungergames", "Date": "2013-10-18T10:23:37Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nowPlaying) != (com.runrmby.runner.MainActivity.WIN_MUSIC_1)) { setMusicState(R.raw.finger_runner_win_1, com.runrmby.runner.MainActivity.WIN_MUSIC_1, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1039/buggy-version/app.src.main.java.com.runrmby.runner.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5a09aee217ab8e4892271762d3f38d696ee4744c", "Url": "https://api.github.com/repos/Nomadjackalope/Runner", "Date": "2017-02-15T00:16:02Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nowPlaying) != (com.runrmby.runner.MainActivity.WIN_MUSIC_NEW_RECORD)) { setMusicState(R.raw.finger_runner_win_new_record, com.runrmby.runner.MainActivity.WIN_MUSIC_NEW_RECORD, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1039/buggy-version/app.src.main.java.com.runrmby.runner.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5a09aee217ab8e4892271762d3f38d696ee4744c", "Url": "https://api.github.com/repos/Nomadjackalope/Runner", "Date": "2017-02-15T00:16:02Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeMusic) != null) { if (!(activeMusic.isPlaying())) { if (!(musicMuted)) { activeMusic.start(); } } }else { setMusicState(R.raw.finger_runner_main_menu, com.runrmby.runner.MainActivity.MENU_MUSIC, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1039/buggy-version/app.src.main.java.com.runrmby.runner.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5a09aee217ab8e4892271762d3f38d696ee4744c", "Url": "https://api.github.com/repos/Nomadjackalope/Runner", "Date": "2017-02-15T00:16:02Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nowPlaying) != (com.runrmby.runner.MainActivity.LOSE_MUSIC_1)) { setMusicState(R.raw.finger_runner_lose_1, com.runrmby.runner.MainActivity.LOSE_MUSIC_1, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1039/buggy-version/app.src.main.java.com.runrmby.runner.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5a09aee217ab8e4892271762d3f38d696ee4744c", "Url": "https://api.github.com/repos/Nomadjackalope/Runner", "Date": "2017-02-15T00:16:02Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nowPlaying) != (com.runrmby.runner.MainActivity.WIN_MUSIC_NEW_RECORD)) { setMusicState(R.raw.finger_runner_win_new_record, com.runrmby.runner.MainActivity.WIN_MUSIC_NEW_RECORD, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1039/buggy-version/app.src.main.java.com.runrmby.runner.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5a09aee217ab8e4892271762d3f38d696ee4744c", "Url": "https://api.github.com/repos/Nomadjackalope/Runner", "Date": "2017-02-15T00:16:02Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getAction()) == (android.view.MotionEvent.ACTION_UP)) { if ((type) == (me.timbals.materialdesigncomponents.views.BottomNavigationView.FIXED)) { active = id; animateChange(v); }else if ((type) == (me.timbals.materialdesigncomponents.views.BottomNavigationView.SHIFTING)) { if (id != (active)) { active = id; animateAppAndStatusBar(currentColor, colors[id], ((((int) (event.getX())) + ((int) (v.getX()))) + (((android.view.View) (v.getParent())).getLeft())), ((int) (event.getY()))); animateChange(v); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1548/buggy-version/materialdesigncomponents.src.main.java.me.timbals.materialdesigncomponents.views.BottomNavigationView.java", "BodyUseAPI": ["android.view.MotionEvent.getX()", "me.timbals.materialdesigncomponents.views.BottomNavigationView.1.animateAppAndStatusBar(int,int,((((int) (event.getX())) + ((int) (v.getX()))) + (((android.view.View) (v.getParent())).getLeft())),((int) (event.getY())))", "android.view.MotionEvent.getY()"], "Fixed commit": "b0919804f84c084a729897071c1ad957580a0f6c", "Url": "https://api.github.com/repos/Timbals/MaterialDesignComponents", "Date": "2016-08-20T19:25:32Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.duggan.workflow.client.util.AppContext.isValid()) { placeManager.revealDefaultPlace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/536/buggy-version/src.main.java.com.duggan.workflow.client.ui.login.LoginPresenter.java", "BodyUseAPI": [], "Fixed commit": "ef946014d0f2d8078bcc19c4f44bf3f1314f990b", "Url": "https://api.github.com/repos/duggankimani/JBPMHT", "Date": "2014-08-18T07:34:53Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.hasMetadata(\"NPC\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9232/buggy-version/src.main.java.me.limebyte.battlenight.core.util.SafeTeleporter.java", "BodyUseAPI": [], "Fixed commit": "355ba5a3d5242c983e27dcbe26dc24c63abef264", "Url": "https://api.github.com/repos/BattleNight/BattleNight-Core", "Date": "2013-03-07T11:16:28Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getPassword()) == null) user.setPassword(encodeUserPassword(user.getEmail())); else user.setPassword(encodeUserPassword(user.getPassword()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2593/buggy-version/src.main.java.app.services.UserService.java", "BodyUseAPI": ["app.models.User.getPassword()", "app.models.User.getEmail()", "app.models.User.setPassword(java.lang.String)", "app.services.UserService.encodeUserPassword(user.getEmail())", "app.models.User.setPassword(java.lang.String)", "app.services.UserService.encodeUserPassword(user.getPassword())"], "Fixed commit": "c172e86736da6bf629e8af22ed537bf705bf6e5f", "Url": "https://api.github.com/repos/sshaikh210/thugcoding", "Date": "2016-03-10T14:54:29Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(jsonContent.trim().startsWith(\"{\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6998/buggy-version/net.jplugin.core.kernel.src.net.jplugin.core.kernel.api.ctx.RequesterInfo.java", "BodyUseAPI": [], "Fixed commit": "7468ebaaf2a9ef791568f0f4dff5844c7ca6f8d6", "Url": "https://api.github.com/repos/sunlet/jplugin", "Date": "2017-10-10T11:02:51Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.jemos.podam.common.Size.max()", "uk.co.jemos.podam.common.Size.min()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((minValue < 1) && (maxValue > 0)) { minValue = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2084/buggy-version/src.main.java.uk.co.jemos.podam.common.BeanValidationStrategy.java", "BodyUseAPI": [], "Fixed commit": "98a9eb238dd56cb430d001992a1f95ea41d4bada", "Url": "https://api.github.com/repos/mtedone/podam", "Date": "2017-07-06T17:01:10Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mockit.internal.injection.ParameterNames.getName(java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parameterName == null) { parameterName = injectable.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7405/buggy-version/main.src.mockit.internal.injection.ConstructorInjection.java", "BodyUseAPI": [], "Fixed commit": "3ef2a18b24284f35b89920418b47b0f5ebb1e649", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2016-10-01T23:50:23Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teavm.dependency.FieldReference.getClassName()", "org.teavm.dependency.DependencyClassSource.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clsName.equals(cls.getParent())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6439/buggy-version/teavm-core.src.main.java.org.teavm.dependency.DependencyChecker.java", "BodyUseAPI": [], "Fixed commit": "9be6ce9bbf9b14a6aca0f85c8d66ad083bfc42d8", "Url": "https://api.github.com/repos/giko/teavm", "Date": "2014-11-03T17:31:49Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cls.getName().equals(\"java.lang.Object\")) { cls.setParent(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6439/buggy-version/teavm-core.src.main.java.org.teavm.parsing.Parser.java", "BodyUseAPI": ["org.teavm.parsing.ClassHolder.setParent(<nulltype>)"], "Fixed commit": "9be6ce9bbf9b14a6aca0f85c8d66ad083bfc42d8", "Url": "https://api.github.com/repos/giko/teavm", "Date": "2014-11-03T17:31:49Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((relatedNode.getRelationshipSort()) > (relatedNode2.getRelationshipSort())) { return 1; }else if ((relatedNode.getRelationshipSort()) < (relatedNode2.getRelationshipSort())) { return -1; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9153/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.sort.CSRelatedNodeSorter.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.wrapper.CSRelatedNodeWrapper.getRelationshipSort()", "org.jboss.pressgang.ccms.wrapper.CSRelatedNodeWrapper.getRelationshipSort()"], "Fixed commit": "ed07d21b379b9afc5f31c20dae56fb0a7af27a6a", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2013-07-27T03:18:48Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (spatial != null) { lastSpawnPos = spatial.getWorldTranslation().clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1261/buggy-version/src.de.jlab.spacefight.effect.trail.TrailControl.java", "BodyUseAPI": ["com.jme3.scene.Spatial.getWorldTranslation()", "spatial.getWorldTranslation().clone()"], "Fixed commit": "ab14cc66f04975a91c63601bf0412bd2e989999d", "Url": "https://api.github.com/repos/rampage128/space-fight", "Date": "2016-07-10T18:48:32Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.antar.binding.TypeUtils.getBaseClass(java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (typeClass == null) { java.lang.System.out.println((\"Cannot find typeClass for \" + parentType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3038/buggy-version/flexodesktop.model.flexoutils.src.main.java.org.openflexo.antar.binding.JavaMethodPathElement.java", "BodyUseAPI": [], "Fixed commit": "15bfd61d9577c0518faf5a1ae0023ac327341d12", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-03-28T14:07:34Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((possiblyMatchingMethods.size()) == 0) { for (java.lang.reflect.Method method : allMethods) { if ((method.getName().equals(methodName)) && ((method.getGenericParameterTypes().length) == (args.size()))) { possiblyMatchingMethods.add(method); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3038/buggy-version/flexodesktop.model.flexoutils.src.main.java.org.openflexo.antar.binding.JavaMethodPathElement.java", "BodyUseAPI": ["java.util.Vector<java.lang.reflect.Method>.add(java.lang.reflect.Method)"], "Fixed commit": "15bfd61d9577c0518faf5a1ae0023ac327341d12", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-03-28T14:07:34Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (factoryClass == null) { throw new java.lang.RuntimeException((\"Invalid elasticsearch client type: \" + factoryClass)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6089/buggy-version/gateway.engine.es.src.main.java.io.apiman.gateway.engine.es.AbstractESComponent.java", "BodyUseAPI": [], "Fixed commit": "0f77f288846c73595cc42206ec5db75ed5cf8af5", "Url": "https://api.github.com/repos/kahboom/apiman", "Date": "2016-05-10T17:14:36Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jsonArrayToday == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8601/buggy-version/app.src.main.java.dariogonzalez.fitplaygames.utils.FitbitHelper.java", "BodyUseAPI": [], "Fixed commit": "8f162179a922e05ee5b81c0f536691cfed9a8118", "Url": "https://api.github.com/repos/dariogs2001/FitPlayGames", "Date": "2016-03-06T07:01:27Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jsonObjectToday == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8601/buggy-version/app.src.main.java.dariogonzalez.fitplaygames.utils.FitbitHelper.java", "BodyUseAPI": [], "Fixed commit": "8f162179a922e05ee5b81c0f536691cfed9a8118", "Url": "https://api.github.com/repos/dariogs2001/FitPlayGames", "Date": "2016-03-06T07:01:27Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((comboForecasts.size()) == 1) { return comboForecasts.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2624/buggy-version/src.com.ubcsolar.weather.WeatherController.java", "BodyUseAPI": ["java.util.List<com.github.dvdme.ForecastIOLib.ForecastIO>.get(int)"], "Fixed commit": "4995f078c788a62cfac67499380a1e0fcfe2e2e2", "Url": "https://api.github.com/repos/UBC-Solar/Simulator", "Date": "2016-09-08T17:29:03Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(textList.isEmpty())) { prevX = ((int) (textList.getLast().getX())); prevY = ((int) (textList.getLast().getY())); prevCharWidth = ((int) (textList.getLast().getLayoutBounds().getWidth())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8728/buggy-version/editor.Editor.java", "BodyUseAPI": ["java.util.LinkedList<javafx.scene.text.Text>.getLast()", "java.util.LinkedList<javafx.scene.text.Text>.getLast()", "textList.getLast().getY()", "textList.getLast().getLayoutBounds().getWidth()", "textList.getLast().getX()", "textList.getLast().getLayoutBounds()", "java.util.LinkedList<javafx.scene.text.Text>.getLast()"], "Fixed commit": "264903bd4daa01e51a77a60bd488cd9d2aea1d5d", "Url": "https://api.github.com/repos/jonmigueljara/javaEditor", "Date": "2017-08-30T00:45:03Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tagsJSON != null) { org.json.JSONArray jsonArray = tagsJSON.getJSONArray(\"members\"); tags.getMembers().addAll(net.dahanne.gallery3.client.utils.ItemUtils.convertJSONArrayToList(jsonArray)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5031/buggy-version/g3-java-client.src.main.java.net.dahanne.gallery3.client.utils.ItemUtils.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "a3bce8d9470850721da5e78044554a9995fa6351", "Url": "https://api.github.com/repos/anthonydahanne/ReGalAndroid", "Date": "2011-10-20T03:53:16Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.reflect.Modifier.isAbstract(method.getModifiers())) { method = mTarget.getClass().getDeclaredMethod(method.getName(), method.getParameterTypes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1454/buggy-version/src.main.java.com.clarionmedia.infinitum.aop.impl.AdvisedJdkDynamicProxy.java", "BodyUseAPI": ["java.lang.reflect.Method.getParameterTypes()", "java.lang.reflect.Method.getName()", "mTarget.getClass().getDeclaredMethod(java.lang.String,java.lang.Class<?>[])"], "Fixed commit": "1a5e9e14a2c310c0b15afdced4581e8ea57d382a", "Url": "https://api.github.com/repos/InfinitumFramework/Infinitum-AOP", "Date": "2013-03-16T18:27:48Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.isEmpty()) { io.github.kszatan.gocd.phabricator.stagingmaterial.handlers.bodies.ScmConfigurationValidationError error = new io.github.kszatan.gocd.phabricator.stagingmaterial.handlers.bodies.ScmConfigurationValidationError(); error.key = \"url\"; error.message = \"URL is empty\"; errors.add(error); }else if (!(io.github.kszatan.gocd.phabricator.stagingmaterial.scm.ConfigurationValidator.pattern.matcher(url).matches())) { io.github.kszatan.gocd.phabricator.stagingmaterial.handlers.bodies.ScmConfigurationValidationError error = new io.github.kszatan.gocd.phabricator.stagingmaterial.handlers.bodies.ScmConfigurationValidationError(); error.key = \"url\"; error.message = \"Invalid git remote URL format\"; errors.add(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3295/buggy-version/src.main.java.io.github.kszatan.gocd.phabricator.stagingmaterial.scm.ConfigurationValidator.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)", "java.util.regex.Matcher.matches()"], "Fixed commit": "ae1dbd0e4311a31556713db5a49fe1d6b55c0c90", "Url": "https://api.github.com/repos/kszatan/gocd-phabricator-staging-material", "Date": "2017-09-25T11:42:18Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (healingAmount > 0) { this.healingAmount = healingAmount; }else { this.healingAmount = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3376/buggy-version/project.project.src.game.Potion.java", "BodyUseAPI": [], "Fixed commit": "5e2684ab62145bb85f15be446d961bb07927a9fa", "Url": "https://api.github.com/repos/eddyxq/233", "Date": "2017-11-20T05:33:39Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (weaponDamage > 0) { this.weaponDamage = weaponDamage; }else { this.weaponDamage = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3376/buggy-version/project.project.src.game.Weapon.java", "BodyUseAPI": [], "Fixed commit": "5e2684ab62145bb85f15be446d961bb07927a9fa", "Url": "https://api.github.com/repos/eddyxq/233", "Date": "2017-11-20T05:33:39Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ship1.id) < (ship2.id)) { ship1.setMass(((int) (java.lang.Math.ceil((combinedMass / 2.0F))))); ship2.setMass(((int) (java.lang.Math.floor((combinedMass / 2.0F))))); }else { ship2.setMass(((int) (java.lang.Math.ceil((combinedMass / 2.0F))))); ship1.setMass(((int) (java.lang.Math.floor((combinedMass / 2.0F))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4417/buggy-version/core.src.com.gmail.dajinchu.Ship.java", "BodyUseAPI": ["com.gmail.dajinchu.Ship.setMass(double)", "com.gmail.dajinchu.Ship.setMass(double)", "com.gmail.dajinchu.Ship.setMass(double)", "com.gmail.dajinchu.Ship.setMass(double)"], "Fixed commit": "655f300b272ed12be0b2667f6b80b86198d8a170", "Url": "https://api.github.com/repos/dajinchu/ships-and-suns", "Date": "2015-03-05T01:49:29Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (negative_index == 0) { com.badlogic.gdx.Screen new_top_screen = screens.get(((screens.size) - 1)); setScreen(new_top_screen); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/291/buggy-version/ScreenStackGame.java", "BodyUseAPI": [], "Fixed commit": "7a936ffc56bb3305a0d1cea7a5b76a06f890c68c", "Url": "https://api.github.com/repos/henu/gdxextras", "Date": "2014-11-03T13:06:43Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dx) > 0) dx = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7041/buggy-version/src.com.neumont.csc150.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "4ffd36a151ae3771a84999305992cf5d4238310d", "Url": "https://api.github.com/repos/Barricader/Donutz", "Date": "2016-02-26T16:27:32Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dy) > 0) dy = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7041/buggy-version/src.com.neumont.csc150.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "4ffd36a151ae3771a84999305992cf5d4238310d", "Url": "https://api.github.com/repos/Barricader/Donutz", "Date": "2016-02-26T16:27:32Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dy) < 0) dy = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7041/buggy-version/src.com.neumont.csc150.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "4ffd36a151ae3771a84999305992cf5d4238310d", "Url": "https://api.github.com/repos/Barricader/Donutz", "Date": "2016-02-26T16:27:32Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dx) < 0) dx = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7041/buggy-version/src.com.neumont.csc150.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "4ffd36a151ae3771a84999305992cf5d4238310d", "Url": "https://api.github.com/repos/Barricader/Donutz", "Date": "2016-02-26T16:27:32Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["overwatch.controllers.Database.query(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(vehicle.isEmpty())) { java.lang.Integer pilot = vehicle.getElemAs(\"personNo\", java.lang.Integer.class); java.lang.String pilotName = \"\"; if (pilot != null) { pilotName = overwatch.controllers.Database.querySingle(java.lang.String.class, (((\"select name \" + (\"from Personnel \" + \"where personNo = \")) + pilot) + \";\")); } tab.number.field.setText((\"\" + (vehicle.getElemAs(\"vehicleNo\", java.lang.Integer.class)))); tab.type.field.setText(vehicle.getElemAs(\"type\", java.lang.String.class)); tab.pilot.field.setText(pilotName); }else { overwatch.core.Gui.showErrorDialogue(\"No longer exists\", \"The selected vehicle no longer exists\"); populateTabList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2807/buggy-version/overwatch.src.overwatch.controllers.VehicleLogic.java", "BodyUseAPI": ["overwatch.controllers.EnhancedResultSet.getElemAs(java.lang.String,java.lang.Class)", "tab.type.field.setText(vehicle.getElemAs(\"type\", java.lang.String.class))", "tab.number.field.setText((\"\" + (vehicle.getElemAs(\"vehicleNo\", java.lang.Integer.class))))", "overwatch.controllers.EnhancedResultSet.getElemAs(java.lang.String,java.lang.Class)", "overwatch.controllers.EnhancedResultSet.getElemAs(java.lang.String,java.lang.Class)"], "Fixed commit": "de7b553fabcac09c19328f8ba1763298807c13d5", "Url": "https://api.github.com/repos/LeeCIT/overwatch", "Date": "2013-04-11T00:47:35Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key) { ii.add(actual[i]); key = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3390/buggy-version/src.main.java.com.swansoftwaresolutions.jirareport.core.helper.HelperMethods.java", "BodyUseAPI": [], "Fixed commit": "15a5a5e3e3aa42539538466fdcbf17de609c35e4", "Url": "https://api.github.com/repos/wa1demar/JiraReportService", "Date": "2016-03-27T15:46:04Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (peopleWithBagsEditText.getText().toString().isEmpty()) { survey.getHeader().setPeopleWithBags(0); }else { survey.getHeader().setPeopleWithBags(java.lang.Integer.parseInt(peopleWithBagsEditText.getText().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/126/buggy-version/SiMoPuVe.app.src.main.java.com.simopuve.activity.PDVRowListActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(peopleWithBagsEditText.getText().toString())", "peopleWithBagsEditText.getText().toString()", "survey.getHeader().setPeopleWithBags(int)", "android.widget.EditText.getText()"], "Fixed commit": "1b814a762dd32cc4ebace9d498cf05e24f4595b6", "Url": "https://api.github.com/repos/aldoram5/simopuve", "Date": "2017-06-12T00:15:27Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (peoplePMEditText.getText().toString().isEmpty()) { survey.getHeader().setNumberOfPeoplePM(0); }else { survey.getHeader().setNumberOfPeoplePM(java.lang.Integer.parseInt(peoplePMEditText.getText().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/126/buggy-version/SiMoPuVe.app.src.main.java.com.simopuve.activity.PDVRowListActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "survey.getHeader().setNumberOfPeoplePM(int)", "java.lang.Integer.parseInt(peoplePMEditText.getText().toString())", "peoplePMEditText.getText().toString()"], "Fixed commit": "1b814a762dd32cc4ebace9d498cf05e24f4595b6", "Url": "https://api.github.com/repos/aldoram5/simopuve", "Date": "2017-06-12T00:15:27Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (peopleDeclinedEditText.getText().toString().isEmpty()) { survey.getHeader().setNumberOfPeopleDidNotAnswer(0); }else { survey.getHeader().setNumberOfPeopleDidNotAnswer(java.lang.Integer.parseInt(peopleDeclinedEditText.getText().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/126/buggy-version/SiMoPuVe.app.src.main.java.com.simopuve.activity.PDVRowListActivity.java", "BodyUseAPI": ["peopleDeclinedEditText.getText().toString()", "survey.getHeader().setNumberOfPeopleDidNotAnswer(int)", "java.lang.Integer.parseInt(peopleDeclinedEditText.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "1b814a762dd32cc4ebace9d498cf05e24f4595b6", "Url": "https://api.github.com/repos/aldoram5/simopuve", "Date": "2017-06-12T00:15:27Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (peopleAMEditText.getText().toString().isEmpty()) { survey.getHeader().setNumberOfPeopleAM(0); }else { survey.getHeader().setNumberOfPeopleAM(java.lang.Integer.parseInt(peopleAMEditText.getText().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/126/buggy-version/SiMoPuVe.app.src.main.java.com.simopuve.activity.PDVRowListActivity.java", "BodyUseAPI": ["peopleAMEditText.getText().toString()", "android.widget.EditText.getText()", "java.lang.Integer.parseInt(peopleAMEditText.getText().toString())", "survey.getHeader().setNumberOfPeopleAM(int)"], "Fixed commit": "1b814a762dd32cc4ebace9d498cf05e24f4595b6", "Url": "https://api.github.com/repos/aldoram5/simopuve", "Date": "2017-06-12T00:15:27Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.micah.randomselect.Data.getLength()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (length <= 0) { android.app.AlertDialog.Builder builder1 = new android.app.AlertDialog.Builder(this); builder1.setMessage(\"Unable to find any data. Please try again later.\"); builder1.setCancelable(true); builder1.setPositiveButton(\"Okay\", new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int id) { dialog.cancel(); } }); android.app.AlertDialog alert11 = builder1.create(); alert11.show(); }else { int selection = -1; while ((selection < 0) || (selection > (com.example.micah.randomselect.Data.getLength()))) { selection = ((int) ((java.lang.Math.random()) * (com.example.micah.randomselect.Data.getLength()))); } tvOutput.setText(com.example.micah.randomselect.Data.getData(selection)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8905/buggy-version/app.src.main.java.com.example.micah.randomselect.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cb9faeeca0217e48fe50cbedb271e5662c88e6a0", "Url": "https://api.github.com/repos/MicahFender/RandomSelect", "Date": "2016-03-03T04:03:20Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(getServiceSites().contains(site))) { l.add(site); setServiceSites(l); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2697/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Data.ServerData.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "41104be50fcfccfa8478e0ee5896c04bc4535a54", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2017-10-17T01:56:10Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.lwjgl.input.Mouse.isButtonDown(1)) { this.creerElem(TypeElements.SOL, Game.mouseXGrid, Game.mouseYGrid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7676/buggy-version/Colonie.src.fr.benoitsepe.colonie.main.Gestion.java", "BodyUseAPI": [], "Fixed commit": "d696e580d6d7cc412f46381ed7237e1f075b0318", "Url": "https://api.github.com/repos/Ogdentrod/Colonie", "Date": "2015-12-21T15:49:29Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entities.FactoryOrderScan.getVin()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((vin.length()) > 17) { scan.setVin(vin.substring(0, 17)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1257/buggy-version/VehicleScan.src.webservices.FactoryOrderScanResource.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "entities.FactoryOrderScan.setVin(java.lang.String)"], "Fixed commit": "8c7e150d6b8ce4516aa7de9c667a704a4ea80a18", "Url": "https://api.github.com/repos/steeler906/vehiclescan", "Date": "2016-10-19T21:16:36Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entities.FactoryOrderScan.getFactoryOrder()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fo.length()) > 10) { scan.setFactoryOrder(fo.substring(0, 10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1257/buggy-version/VehicleScan.src.webservices.FactoryOrderScanResource.java", "BodyUseAPI": ["entities.FactoryOrderScan.setFactoryOrder(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "8c7e150d6b8ce4516aa7de9c667a704a4ea80a18", "Url": "https://api.github.com/repos/steeler906/vehiclescan", "Date": "2016-10-19T21:16:36Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Invocation.Builder.put(javax.ws.rs.client.Entity.xml(project))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((response.getStatusInfo().getFamily()) != (Response.Status.Family.SUCCESSFUL)) { throw new java.lang.RuntimeException(response.getStatusInfo().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8533/buggy-version/client.zanata-rest-client.src.main.java.org.zanata.rest.client.ProjectClient.java", "BodyUseAPI": ["javax.ws.rs.core.Response.getStatusInfo()", "response.getStatusInfo().toString()"], "Fixed commit": "78c1ef9932495bf8bc23801370709e8d0ba35903", "Url": "https://api.github.com/repos/zanata/zanata-platform", "Date": "2017-01-21T02:14:51Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["webResource().request().put(javax.ws.rs.client.Entity.xml(projectVersion))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((response.getStatusInfo().getFamily()) != (Response.Status.Family.SUCCESSFUL)) { throw new java.lang.RuntimeException(response.getStatusInfo().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8533/buggy-version/client.zanata-rest-client.src.main.java.org.zanata.rest.client.ProjectIterationClient.java", "BodyUseAPI": ["response.getStatusInfo().toString()", "javax.ws.rs.core.Response.getStatusInfo()"], "Fixed commit": "78c1ef9932495bf8bc23801370709e8d0ba35903", "Url": "https://api.github.com/repos/zanata/zanata-platform", "Date": "2017-01-21T02:14:51Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 1) { runFile(cmdSender, args[1]); }else { throw new net.minecraft.command.WrongUsageException(((\"/\" + (this.getCommandName())) + \" dofile filename\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8493/buggy-version/src.minecraft.com.vbitz.MinecraftScript.commands.ScriptingCommand.java", "BodyUseAPI": ["com.vbitz.MinecraftScript.commands.ScriptingCommand.runFile(net.minecraft.command.ICommandSender,java.lang.String)"], "Fixed commit": "875bca7a8e63ae8e664ac4f1de74da7c2fe24602", "Url": "https://api.github.com/repos/Vbitz/MinecraftScript", "Date": "2013-01-28T23:09:15Z"},
{"Line": "=>1413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCardType()) != (mcjty.rftools.items.shapecard.ShapeCardItem.CARD_UNKNOWN)) { calculateBoxShaped(); scan = new mcjty.lib.varia.Coordinate(minBox.getX(), maxBox.getY(), minBox.getZ()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1208/buggy-version/src.main.java.mcjty.rftools.blocks.spaceprojector.BuilderTileEntity.java", "BodyUseAPI": [], "Fixed commit": "1c088954773daa77f6466d3a39ecb3fd0df08347", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-10-29T20:13:02Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mcjty.lib.container.InventoryHelper.getStackInSlot(BuilderContainer.SLOT_TAB)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (shapeCard == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1208/buggy-version/src.main.java.mcjty.rftools.blocks.spaceprojector.BuilderTileEntity.java", "BodyUseAPI": [], "Fixed commit": "1c088954773daa77f6466d3a39ecb3fd0df08347", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-10-29T20:13:02Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathList.isEmpty()) { return new java.util.ArrayList<org.apache.cloudstack.iam.api.AclGroup>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8566/buggy-version/services.iam.server.src.org.apache.cloudstack.iam.server.IAMServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0b5b861994b14abb95c461489ba6191436d189a8", "Url": "https://api.github.com/repos/redbridge/cloudstack", "Date": "2014-02-07T22:13:56Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getBlockTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (TE != null) { if (carpentersblocks.util.BlockProperties.hasCover(TE, 6)) { int lightOutput = net.minecraft.block.Block.lightValue[blockID]; for (int side = 0; side < 7; ++side) { if (carpentersblocks.util.BlockProperties.hasCover(TE, side)) { int tempLightOutput = lightValue[carpentersblocks.util.BlockProperties.getCoverID(TE, side)]; if (tempLightOutput > lightOutput) { lightOutput = tempLightOutput; } } } int auxLightValue = auxiliaryGetLightValue(TE, world, x, y, z); if (auxLightValue > lightOutput) { lightOutput = auxLightValue; } return lightOutput; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7153/buggy-version/carpentersblocks.block.BlockCoverable.java", "BodyUseAPI": ["carpentersblocks.util.BlockProperties.hasCover(carpentersblocks.tileentity.TEBase,int)", "carpentersblocks.block.BlockCoverable.auxiliaryGetLightValue(carpentersblocks.tileentity.TEBase,net.minecraft.world.IBlockAccess,int,int,int)", "carpentersblocks.util.BlockProperties.getCoverID(carpentersblocks.tileentity.TEBase,int)", "carpentersblocks.util.BlockProperties.hasCover(carpentersblocks.tileentity.TEBase,int)"], "Fixed commit": "2e19b98eb801fbede4d7dde22523147cb3c3c0aa", "Url": "https://api.github.com/repos/Mineshopper/carpentersblocks", "Date": "2014-02-22T04:19:22Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((refDateAfterLeapDay && ((birthYear % 4) != 0)) && (birthDayOfYear > 60)) { birthDayOfYear += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/123/buggy-version/app.src.main.java.com.unnamedgreencompany.btwhahaa.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3b36faf57eb1549179c842a8f9a35f8d40b654f5", "Url": "https://api.github.com/repos/krzheng3150/btw-haHAA", "Date": "2017-06-23T00:49:46Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dsi.areErrors()) { result.errors.add((((zipEntry.getName()) + \" \") + (dsi.getErrors()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5624/buggy-version/ClassySharkWS.src.com.google.classyshark.silverghost.translator.apk.ApkTranslator.java", "BodyUseAPI": ["com.google.classyshark.silverghost.translator.apk.DynamicSymbolsInspector.getErrors()", "java.util.List<java.lang.String>.add((((zipEntry.getName()) + \" \") + (dsi.getErrors())))"], "Fixed commit": "f135d82e197ca87f6be1ff909ff0050fc923b9d1", "Url": "https://api.github.com/repos/google/android-classyshark", "Date": "2016-06-19T09:43:33Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.angcyo.ondemand.BuildConfig.DEBUG) { return \"2015-11-13\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4494/buggy-version/app.src.main.java.com.angcyo.ondemand.util.Util.java", "BodyUseAPI": [], "Fixed commit": "bf6187c680a4ac4e52d1823fc16f396f7f2e69e2", "Url": "https://api.github.com/repos/angcyo/OnDemand", "Date": "2016-01-29T04:14:06Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((beverage) != null) { ws.wiklund.guides.model.Category c = beverage.getCategory(); if (c != null) { category.setSelection(categoryAdapter.getPosition(c)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5418/buggy-version/src.ws.wiklund.vinguiden_pro.activities.ModifyWineActivity.java", "BodyUseAPI": [], "Fixed commit": "78599c063e98a5441d3cec6c52a34f4bf4531a4f", "Url": "https://api.github.com/repos/lawi75/Vinguiden-Pro", "Date": "2012-11-04T20:04:20Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.Jsoup.parse(msg.get(i).toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((doc.getElementsByClass(\"details\").first()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4845/buggy-version/src.zhihu.UserFollowers.java", "BodyUseAPI": [], "Fixed commit": "1fbe09049f388c150d01a0e41e03f2f626d9eece", "Url": "https://api.github.com/repos/LuckySherry/ZhihuGrab", "Date": "2014-03-13T18:07:53Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.buffer.ByteBuf.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_GENERIC_NACK)) { pdu = new com.cloudhopper.smpp.transcoder.GenericNack(); }else if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_SUBMIT_MULTI_RESP)) { pdu = new com.cloudhopper.smpp.transcoder.SubmitMultiResp(); }else { pdu = new com.cloudhopper.smpp.transcoder.PartialPduResp(commandId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6923/buggy-version/src.main.java.com.cloudhopper.smpp.transcoder.DefaultPduTranscoder.java", "BodyUseAPI": [], "Fixed commit": "6db41499064f73a98c875b0a5bbcb579310a0691", "Url": "https://api.github.com/repos/RestComm/cloudhopper-smpp", "Date": "2013-06-09T08:31:22Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.buffer.ByteBuf.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_UNBIND)) { pdu = new com.cloudhopper.smpp.transcoder.Unbind(); }else if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_SUBMIT_MULTI)) { pdu = new com.cloudhopper.smpp.transcoder.SubmitMulti(); }else { pdu = new com.cloudhopper.smpp.transcoder.PartialPdu(commandId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6923/buggy-version/src.main.java.com.cloudhopper.smpp.transcoder.DefaultPduTranscoder.java", "BodyUseAPI": [], "Fixed commit": "6db41499064f73a98c875b0a5bbcb579310a0691", "Url": "https://api.github.com/repos/RestComm/cloudhopper-smpp", "Date": "2013-06-09T08:31:22Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(moduleName.equals(analysisModulesBox.getSelectedItem()))) { moduleName = ((java.lang.String) (analysisModulesBox.getItemAt(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5647/buggy-version/MicroNuclei.src.org.micromanager.micronuclei.MicroNucleiForm.java", "BodyUseAPI": [], "Fixed commit": "e35120f1c14db18634e8f16e7419ca9d2afbd727", "Url": "https://api.github.com/repos/nicost/mnfinder", "Date": "2017-03-13T22:11:13Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((widget) instanceof javax.swing.JCheckBox) { ((javax.swing.JCheckBox) (widget)).removeActionListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7478/buggy-version/src.es.icarto.gvsig.navtableforms.ormlite.widgetsdependency.EnabledComponentBasedOnWidget.java", "BodyUseAPI": [], "Fixed commit": "72ee0b8efd17c9becf88c913bb87c11835574fad", "Url": "https://api.github.com/repos/navtable/navtableforms", "Date": "2013-03-20T15:11:30Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((widget) instanceof javax.swing.JComboBox) { ((javax.swing.JComboBox) (widget)).removeActionListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7478/buggy-version/src.es.icarto.gvsig.navtableforms.ormlite.widgetsdependency.EnabledComponentBasedOnWidget.java", "BodyUseAPI": [], "Fixed commit": "72ee0b8efd17c9becf88c913bb87c11835574fad", "Url": "https://api.github.com/repos/navtable/navtableforms", "Date": "2013-03-20T15:11:30Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array[left]) < (array[right])) { for (int i : array) { if (i < min) { min = i; } } return min; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/890/buggy-version/codingoffer.src.main.java.mininwhirlingarray.Solution.java", "BodyUseAPI": [], "Fixed commit": "6dae3fad2ea135f7ce512bbbfc7a371388075e8b", "Url": "https://api.github.com/repos/wususu/codingpower", "Date": "2017-12-18T14:52:26Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (contextPath == null) contextPath = this.getProperty(BaseWebappServlet.ALIAS);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8402/buggy-version/base.src.main.java.org.jbundle.util.webapp.base.HttpServiceActivator.java", "BodyUseAPI": [], "Fixed commit": "35253959aff23300b252e49dffbf117b2334bb24", "Url": "https://api.github.com/repos/jbundle/webapp", "Date": "2013-06-04T10:04:25Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (contextPath == null) contextPath = this.getProperty(BaseWebappServlet.ALIAS.substring(BaseWebappServlet.PROPERTY_PREFIX.length()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8402/buggy-version/base.src.main.java.org.jbundle.util.webapp.base.HttpServiceActivator.java", "BodyUseAPI": [], "Fixed commit": "35253959aff23300b252e49dffbf117b2334bb24", "Url": "https://api.github.com/repos/jbundle/webapp", "Date": "2013-06-04T10:04:25Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((masterApiRoot) == null) || ((masterApiRoot.length()) == 0)) { return ((masterHost) + \":\") + (masterPort); }else { return ((((masterHost) + \":\") + (masterPort)) + \"/\") + (masterApiRoot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/722/buggy-version/src.main.java.com.github.ywilkof.sparkrestclient.SparkRestClient.java", "BodyUseAPI": [], "Fixed commit": "ed21acd2aa337489dcf6bc57f404c781f091f6ea", "Url": "https://api.github.com/repos/rominparekh/spark-jobs-rest-client", "Date": "2017-02-07T17:29:12Z"},
{"Line": "=>3026", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uiModeIsToggled != (mUiModeIsToggled)) { updateSettings(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7074/buggy-version/packages.SystemUI.src.com.android.systemui.statusbar.phone.PhoneStatusBar.java", "BodyUseAPI": [], "Fixed commit": "5ba3a6fa80dd0a7afb50395244f5379f27ee317f", "Url": "https://api.github.com/repos/Root-Box/frameworks_base", "Date": "2013-03-22T01:49:08Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (searchFile.exists()) { if (searchFile.isDirectory()) { for (java.lang.String childFileName : searchFile.list()) { copyAllFile(searchRootDir, ((relativePath + \"/\") + childFileName)); } }else { if (fileSouldBeCopied(searchFile)) { java.lang.System.out.println((\"copy file \" + relativePath)); copyFile(searchFile, new java.io.File(runtimeContext.getTargetDirectory(), relativePath)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4155/buggy-version/src.com.taozeyu.calico.copier.ResourceFileCopier.java", "BodyUseAPI": ["java.io.File.list()", "java.io.File.isDirectory()", "com.taozeyu.calico.copier.ResourceFileCopier.fileSouldBeCopied(java.io.File)", "com.taozeyu.calico.copier.ResourceFileCopier.copyFile(java.io.File,java.io.File)"], "Fixed commit": "d3807c1312ee29f870a6b634197cd998bc970429", "Url": "https://api.github.com/repos/Moskize91/Calico", "Date": "2016-08-07T03:34:20Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(key.user_allowed())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6966/buggy-version/src.main.java.water.api.Parse.java", "BodyUseAPI": [], "Fixed commit": "f1962a4f48cbd02a9b7d8b816d9af7b4832e5716", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-01-18T00:02:17Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck.isPipeOperator(ast))) { context.visitBooleanOperator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8591/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.metrics.BooleanExpressionComplexityCheck.java", "BodyUseAPI": [], "Fixed commit": "84115fe9bfa4e0310d5832ad9fad5e54fef545b0", "Url": "https://api.github.com/repos/cs1331/checkstyle", "Date": "2015-02-20T18:41:56Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret < 0) ret += 200;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1499/buggy-version/TS_PrepareData.src.linegroup3.tweetstream.preparedata.HashFamily.java", "BodyUseAPI": [], "Fixed commit": "1830f7498cb3fd53d6ff00732132e3b67809076d", "Url": "https://api.github.com/repos/linegroup/TweetStream", "Date": "2012-10-13T14:57:15Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.simplejavamail.internal.util.ConfigLoader.parsePropertyValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (asSystemProperty != null) { resolvedProps.put(prop, asSystemProperty); filePropertiesLeft.remove(prop.key); }else { final java.lang.Object asEnvProperty = org.simplejavamail.internal.util.ConfigLoader.parsePropertyValue(java.lang.System.getenv().get(prop.key)); if (asEnvProperty != null) { resolvedProps.put(prop, asEnvProperty); filePropertiesLeft.remove(prop.key); }else { final java.lang.String rawValue = ((java.lang.String) (filePropertiesLeft.remove(prop.key))); if (rawValue != null) { resolvedProps.put(prop, org.simplejavamail.internal.util.ConfigLoader.parsePropertyValue(rawValue)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3056/buggy-version/src.main.java.org.simplejavamail.internal.util.ConfigLoader.java", "BodyUseAPI": ["java.util.Map<org.simplejavamail.internal.util.ConfigLoader.Property, java.lang.Object>.put(org.simplejavamail.internal.util.ConfigLoader.Property,java.lang.Object)"], "Fixed commit": "6337dc9a1257dab8fcb0e38e61e72f109cfb6363", "Url": "https://api.github.com/repos/bbottema/simple-java-mail", "Date": "2016-07-05T18:04:35Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kmecpp.jspark.tokenizer.Tokenizer.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (token.is(Symbol.CLOSE_BRACE)) { if (tokenizer.hasNext()) { java.lang.System.err.println((\"Encounted extra closing brace: \" + token)); } }else { java.lang.System.err.println((\"Could not parse unknown \" + (token == null ? \"token: null\" : (((token.getType()) + \" '\") + (token.getText())) + \"'\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8147/buggy-version/src.main.java.com.kmecpp.jspark.parser.Parser.java", "BodyUseAPI": ["java.io.PrintStream.println((\"Encounted extra closing brace: \" + token))", "com.kmecpp.jspark.tokenizer.Token.getType()", "com.kmecpp.jspark.tokenizer.Token.getText()", "java.io.PrintStream.println((\"Could not parse unknown \" + (token == null ? \"token: null\" : (((token.getType()) + \" '\") + (token.getText())) + \"'\")))"], "Fixed commit": "2ecc11ebb3822dfd105d90de31a27c46fb1ad868", "Url": "https://api.github.com/repos/kmecpp/JSpark", "Date": "2017-12-02T04:56:08Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<playermanager.Player>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tPlayer.getAccount()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4444/buggy-version/src.looks.LookView.java", "BodyUseAPI": [], "Fixed commit": "5b8cf3e0d2b63c0be7768629ee80d2de6a9b5059", "Url": "https://api.github.com/repos/Cptnobvious/HECKmoo", "Date": "2017-09-09T03:47:56Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.viewers.StructuredSelection.getFirstElement()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (viewerItem != null) { ch.elexis.data.Prescription pr = viewerItem.getPrescription(); if (pr != null) { ch.elexis.core.ui.dialogs.ArticleDefaultSignatureTitleAreaDialog adtad = new ch.elexis.core.ui.dialogs.ArticleDefaultSignatureTitleAreaDialog(ch.elexis.core.ui.UiDesk.getTopShell(), pr); adtad.open(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2343/buggy-version/ch.elexis.core.ui.medication.src.ch.elexis.core.ui.medication.views.MedicationView.java", "BodyUseAPI": ["ch.elexis.core.ui.medication.views.MedicationTableViewerItem.getPrescription()"], "Fixed commit": "eb518d05a435fbacc7ef7eaab1b279180e2cf4fd", "Url": "https://api.github.com/repos/ngiger/elexis-3-core", "Date": "2016-02-29T08:59:23Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev100924.Ipv4Address, org.opendaylight.ovsdb.openstack.netvirt.providers.openflow13.services.arp.ArpResolverMetadata>.get(org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev100924.Ipv4Address)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (gatewayArpMetadata == null) { org.opendaylight.ovsdb.openstack.netvirt.providers.openflow13.services.arp.GatewayMacResolverService.LOG.warn(\"No metadata found for gatewayIp: {}\", gatewayIp); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6103/buggy-version/openstack.net-virt-providers.src.main.java.org.opendaylight.ovsdb.openstack.netvirt.providers.openflow13.services.arp.GatewayMacResolverService.java", "BodyUseAPI": [], "Fixed commit": "7a3fc572b602b234f6977ab9d5900e571262a24e", "Url": "https://api.github.com/repos/opendaylight/ovsdb", "Date": "2015-12-09T21:13:31Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getValueAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cell instanceof lisong_mechlab.model.chassi.ChassisStandard) { lisong_mechlab.model.chassi.ChassisStandard chassi = ((lisong_mechlab.model.chassi.ChassisStandard) (cell)); lisong_mechlab.view.ProgramInit.lsml().tabbedPane.setSelectedComponent(lisong_mechlab.view.ProgramInit.lsml().mechLabPane); lisong_mechlab.view.ProgramInit.lsml().mechLabPane.openLoadout(new lisong_mechlab.model.loadout.LoadoutStandard(chassi, lisong_mechlab.view.ProgramInit.lsml().xBar)); }else if (cell instanceof lisong_mechlab.model.chassi.ChassisOmniMech) { lisong_mechlab.model.chassi.ChassisOmniMech chassi = ((lisong_mechlab.model.chassi.ChassisOmniMech) (cell)); lisong_mechlab.view.ProgramInit.lsml().tabbedPane.setSelectedComponent(lisong_mechlab.view.ProgramInit.lsml().mechLabPane); lisong_mechlab.view.ProgramInit.lsml().mechLabPane.openLoadout(new lisong_mechlab.model.loadout.LoadoutOmniMech(lisong_mechlab.model.loadout.component.ComponentBuilder.getOmniPodFactory(), chassi, lisong_mechlab.view.ProgramInit.lsml().xBar)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5014/buggy-version/src.lisong_mechlab.view.ChassiSelectionPane.java", "BodyUseAPI": [], "Fixed commit": "e4e35654e4c72a4c00bc6ecacffddc24c4351a39", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2014-06-17T15:29:25Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.profbingo.android.NetUtil.postJsonData(org.json.JSONObject,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (jsonResult.get(\"result\").equals(\"FAIL\")) { android.util.Log.d(\"PB\", \"Login Failed, no authcode key found in the JSON result\"); return authCode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5782/buggy-version/ProfBingo_21.src.com.profbingo.android.NetUtil.java", "BodyUseAPI": [], "Fixed commit": "c37a461b1f89e5847ce1b9c9a83ec72f11e88c4a", "Url": "https://api.github.com/repos/ProfessorBingo/android", "Date": "2011-03-22T22:50:56Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pt.up.fe.dceg.neptus.mra.NeptusMRA.vtkEnabled) { pt.up.fe.dceg.neptus.NeptusLog.pub().info((\"Vtk source version: \" + (new vtk.vtkVersion().GetVTKSourceVersion()))); pt.up.fe.dceg.neptus.NeptusLog.pub().info((\"VTK Library Dir (searches for vtk.jar): \" + (vtkSettings.GetVTKLibraryDir()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3982/buggy-version/plugins-dev.vtk.pt.up.fe.dceg.neptus.plugins.vtk.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "dd4ae0d76ddf014f16c5e110d412593b38ce691b", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2013-07-30T13:23:21Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<com.linkedin.pinot.routing.ServerToSegmentSetMap>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (serverToSegmentSetMaps.isEmpty()) { return java.util.Collections.emptyMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8818/buggy-version/pinot-transport.src.main.java.com.linkedin.pinot.routing.HelixExternalViewBasedRouting.java", "BodyUseAPI": [], "Fixed commit": "3a533fc9625b85de2b816d92fc5b3954abf01417", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2015-08-27T21:33:08Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataTablesModel) == null) { workspace.add((dataTablesModel = new org.gephi.desktop.datalab.DataTablesModel(workspace))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8036/buggy-version/modules.DesktopDataLaboratory.src.main.java.org.gephi.desktop.datalab.DataTableTopComponent.java", "BodyUseAPI": [], "Fixed commit": "1f9af048abf0d786b0b41c8ce0720eee6f7fc30b", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-10-27T21:24:48Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position) != 5) { if ((position) == (oldPosition)) { return; }else { oldPosition = position; } setTitle(sNewsList[position]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3043/buggy-version/screenlocker.src.main.java.com.roger.screenlocker.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "9e5c1842aaf031d3346590fa4c0fa91ee0bcb97c", "Url": "https://api.github.com/repos/Rogero0o/ScreenLocker", "Date": "2015-12-10T09:13:04Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) { friendb.shared.LoginInfo login = new friendb.shared.LoginInfo(); login.email = email.getText(); login.password = password.getText(); if (((login.email.toUpperCase()) == \"ADMIN\") && ((login.password.toUpperCase()) == \"ADMIN\")) { myController.loadScreen(FrienDBClient.CustomerWelcomePageID, FrienDBClient.CustomerWelcomePage); } javax.ws.rs.core.Response rsp = AUTHENTICATE.request(login); if ((rsp.getStatus()) != (Response.Status.OK.getStatusCode())) { javafx.scene.control.Alert alert = new javafx.scene.control.Alert(Alert.AlertType.INFORMATION); alert.setTitle(\"Login Error\"); alert.setHeaderText(\"Incorrect Username\"); alert.setContentText(\"Username does not exist\"); alert.show(); return; }else { if ((login.email.indexOf('@')) != (-1)) { friendb.shared.SimpleCustomer cust = rsp.readEntity(friendb.shared.SimpleCustomer.class); myController.createStudentSession(cust); myController.loadScreen(FrienDBClient.CustomerWelcomePageID, FrienDBClient.CustomerWelcomePage); myController.loadScreen(FrienDBClient.CirclePageID, FrienDBClient.CirclePage); myController.loadScreen(FrienDBClient.NewCirclePageID, FrienDBClient.NewCirclePage); myController.loadScreen(FrienDBClient.NewCommentPageID, FrienDBClient.NewCommentPage); myController.loadScreen(FrienDBClient.CommentsPageID, FrienDBClient.CommentsPage); myController.loadScreen(FrienDBClient.NewPostPageID, FrienDBClient.NewPostPage); myController.loadScreen(FrienDBClient.ManageCustomerInfoID, FrienDBClient.ManageCustomerInfo); myController.loadScreen(FrienDBClient.AccountPageID, FrienDBClient.AccountPage); myController.setScreen(FrienDBClient.CustomerWelcomePageID); }else { friendb.shared.SimpleEmployee emp = rsp.readEntity(friendb.shared.SimpleEmployee.class); java.lang.String upperRole = emp.role.toUpperCase(); if (upperRole == \"MANAGER\") { myController.createEmployeeSession(emp); myController.loadScreen(FrienDBClient.EmployeePageID, FrienDBClient.EmployeePage); myController.loadScreen(FrienDBClient.SalesPageID, FrienDBClient.SalesPage); myController.loadScreen(FrienDBClient.AdsPageID, FrienDBClient.AdsPage); myController.setScreen(FrienDBClient.EmployeePageID); }else { myController.createEmployeeSession(emp); if (emp.role.equalsIgnoreCase(\"Manager\")) { }else { myController.loadScreen(FrienDBClient.EmployeePageID, FrienDBClient.EmployeePage); myController.loadScreen(FrienDBClient.SalesPageID, FrienDBClient.SalesPage); myController.loadScreen(FrienDBClient.AdsPageID, FrienDBClient.AdsPage); myController.setScreen(FrienDBClient.EmployeePageID); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2426/buggy-version/FrienDB-Client.src.friendb.client.view.LoginPageController.java", "BodyUseAPI": [], "Fixed commit": "160965da2998c996f7530eaaa8484331558520e3", "Url": "https://api.github.com/repos/FrienDB/FrienDBSystem", "Date": "2015-05-06T02:56:13Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.uima.cas.FSIterator<org.apache.uima.jcas.cas.TOP>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((doc.getAbstract()) == null) || ((doc.getAbstract().trim().length()) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1883/buggy-version/src.main.java.edu.cmu.lti.deiis.project.reranker.DocReranker.java", "BodyUseAPI": [], "Fixed commit": "b57054fc68e5c31079d9e02e389f527f8479d267", "Url": "https://api.github.com/repos/11791-01/project-team01", "Date": "2014-11-19T05:40:15Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.aprilapps.easyphotopicker.EasyImageFiles.publicAppExternalDir(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (publicAppExternalDir != null) { defaultFolderLocation = publicAppExternalDir.getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3255/buggy-version/library.src.main.java.pl.aprilapps.easyphotopicker.EasyImageFiles.java", "BodyUseAPI": ["java.io.File.getPath()"], "Fixed commit": "59e67ffb2693c4fabf6ff4a6569dd5ad2cc85de2", "Url": "https://api.github.com/repos/Subito-it/EasyImage", "Date": "2016-04-27T13:09:25Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["joshua.decoder.phrase.Hypothesis.getScore()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((this.end) == null) || (score > (this.end.getScore()))) this.end = hyp;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5/buggy-version/src.joshua.decoder.phrase.Stacks.java", "BodyUseAPI": [], "Fixed commit": "f2729d3841689bf5fc2b2012dbb3c1942e6a07d0", "Url": "https://api.github.com/repos/lelou6666/incubator-joshua", "Date": "2014-11-08T02:54:33Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useDepthTexture) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1953/buggy-version/GameEngine.src.de.nerogar.render.RenderTarget.java", "BodyUseAPI": [], "Fixed commit": "45c7d7188f6b76e3f0c1bf2ecbbde9fc8e4fd5aa", "Url": "https://api.github.com/repos/Nerogar/GameEngine", "Date": "2015-02-04T19:26:33Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dungeon.ai.AttackBehaviour.getGoal(dungeon.model.items.mobs.Creature,dungeon.model.Game)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(samePlace(goal, fCreature.getLocation()))) fCreature.setGoal(goal, game);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7163/buggy-version/src.dungeon.ai.AttackBehaviour.java", "BodyUseAPI": ["dungeon.model.items.mobs.Creature.setGoal(java.awt.geom.Point2D,dungeon.model.Game)"], "Fixed commit": "04efa39abcdbcaa5267ef7e3e4b072ac2412a88a", "Url": "https://api.github.com/repos/hale/dungeon", "Date": "2013-02-08T14:26:04Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entryOffset == (-256)) { entryOffset = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6243/buggy-version/src.main.java.tingeltangel.core.Importer.java", "BodyUseAPI": [], "Fixed commit": "b3a3ef902f5e53569d6447bda0fce1c9915aedc6", "Url": "https://api.github.com/repos/Martin-Dames/Tingeltangel", "Date": "2015-05-07T12:40:33Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemStack.getName().equals(((org.bukkit.ChatColor.GOLD) + \"REWARD!\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4541/buggy-version/src.main.java.info.faceland.loot.listeners.InteractListener.java", "BodyUseAPI": [], "Fixed commit": "2d123bce4efbd4a3a8ad39a82f7d088155bd2654", "Url": "https://api.github.com/repos/TealCube/loot", "Date": "2017-04-14T21:33:47Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemStack.getName().startsWith(\"***{\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4541/buggy-version/src.main.java.info.faceland.loot.listeners.InteractListener.java", "BodyUseAPI": [], "Fixed commit": "2d123bce4efbd4a3a8ad39a82f7d088155bd2654", "Url": "https://api.github.com/repos/TealCube/loot", "Date": "2017-04-14T21:33:47Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1006/buggy-version/hu.documaison.data.src.hu.documaison.data.entities.AbstractMetadata.java", "BodyUseAPI": [], "Fixed commit": "cd14de7599943cb25612bcf63693c0328dc6e968", "Url": "https://api.github.com/repos/darvasd/documaison", "Date": "2012-11-22T14:53:23Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1006/buggy-version/hu.documaison.data.src.hu.documaison.data.entities.AbstractMetadata.java", "BodyUseAPI": [], "Fixed commit": "cd14de7599943cb25612bcf63693c0328dc6e968", "Url": "https://api.github.com/repos/darvasd/documaison", "Date": "2012-11-22T14:53:23Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parent.getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.LITERAL_NEW)) { checkFinal = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8576/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck.java", "BodyUseAPI": [], "Fixed commit": "d8d4db535ac8e644f08c031eb65e0bf9c6ddb839", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2015-11-02T00:11:14Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (max == 0) max = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4487/buggy-version/Java.ShoprExplanation.src.main.java.com.adiguzel.shopr.explanation.model.ScoreComputer.java", "BodyUseAPI": [], "Fixed commit": "a0d21c2291bcc82332b4a09f9f13c88f8c1118c5", "Url": "https://api.github.com/repos/adiguzel/Shopr", "Date": "2014-04-15T14:13:54Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.exoplatform.portal.webui.page.UIPage.isFullPreview())) { uiPage = uiToolPanel.findFirstComponentOfType(org.exoplatform.portal.webui.page.UIPage.class); }else { uiPage = uiWorkingWS.findFirstComponentOfType(org.exoplatform.portal.webui.page.UIPage.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5139/buggy-version/webui.portal.src.main.java.org.exoplatform.portal.webui.portal.UIPortalComposer.java", "BodyUseAPI": [], "Fixed commit": "d7431399b32e125bed0814ead4a3f6693e3b705e", "Url": "https://api.github.com/repos/lucasponce/gatein-portal", "Date": "2014-04-09T09:50:18Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newX < 0) || (newY < 0)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6480/buggy-version/app.src.main.java.game.Game.java", "BodyUseAPI": [], "Fixed commit": "438886f38f74c7f69dde0fed6ebde36606e8a491", "Url": "https://api.github.com/repos/AugustanaCSC490Spring2015/CipherSquadGame", "Date": "2015-05-12T19:30:22Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<net.countercraft.movecraft.utils.EntityUpdateCommand>.next()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (eUpdate != null) { org.bukkit.entity.Entity eTest = eUpdate.getEntity(); org.bukkit.Location lTest = eUpdate.getNewLocation().clone(); if (eTest != null) { org.bukkit.util.Vector velocity = eTest.getVelocity().clone(); eTest.teleport(lTest); eTest.setVelocity(velocity); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3898/buggy-version/src.main.java.net.countercraft.movecraft.utils.MapUpdateManager.java", "BodyUseAPI": ["net.countercraft.movecraft.utils.EntityUpdateCommand.getNewLocation()", "net.countercraft.movecraft.utils.EntityUpdateCommand.getEntity()", "eUpdate.getNewLocation().clone()"], "Fixed commit": "e8656c129c550ed52e2c738f91f0fdf23a3d6031", "Url": "https://api.github.com/repos/AJCStriker/Movecraft-3", "Date": "2013-10-31T05:19:36Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (solversFailed == solversAdded) { solutionLog.log(\"All solvers failed to execute.\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7073/buggy-version/code.com.jivesoftware.os.miru.miru-service.src.main.java.com.jivesoftware.os.miru.service.solver.MiruLowestLatencySolver.java", "BodyUseAPI": [], "Fixed commit": "0a1fed01cfe904cf3fd96f7321dfe1495cd0c1ff", "Url": "https://api.github.com/repos/jivesoftware/miru", "Date": "2014-11-19T17:25:35Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastPoint) != null) { lastPoint.setId(nodeTextField.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8496/buggy-version/src.main.java.WPI.CampusMap.UI.AppUIObject.java", "BodyUseAPI": [], "Fixed commit": "a975e12822c97a70d4bba3ac3d0d3dd5efae93f8", "Url": "https://api.github.com/repos/Team11b/CampusMap", "Date": "2015-12-02T08:11:31Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (right.isJsonNode()) { com.jayway.jsonpath.internal.filter.ValueNode vn = right.asJsonNode().asValueListNode(ctx); if (vn.isUndefinedNode()) { return false; }else { valueListNode = vn.asValueListNode(); } }else { valueListNode = right.asValueListNode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8840/buggy-version/json-path.src.main.java.com.jayway.jsonpath.internal.filter.EvaluatorFactory.java", "BodyUseAPI": ["right.asJsonNode().asValueListNode(Predicate.PredicateContext)", "com.jayway.jsonpath.internal.filter.ValueNode.asValueListNode()", "com.jayway.jsonpath.internal.filter.ValueNode.asJsonNode()"], "Fixed commit": "fd2ac6c0bea5ef079ebdf60c1f0be8c1e0d55111", "Url": "https://api.github.com/repos/json-path/JsonPath", "Date": "2015-11-21T12:44:21Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.camel.util.ObjectHelper.isNotEmpty(configuration.getAmazonSNSEndpoint())) { org.apache.camel.component.aws.sns.SnsEndpoint.LOG.trace((\"Updating the SNS region with : {} \" + (configuration.getAmazonSNSEndpoint()))); getSNSClient().setEndpoint(configuration.getAmazonSNSEndpoint()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6757/buggy-version/components.camel-aws.src.main.java.org.apache.camel.component.aws.sns.SnsEndpoint.java", "BodyUseAPI": ["org.slf4j.Logger.trace((\"Updating the SNS region with : {} \" + (configuration.getAmazonSNSEndpoint())))", "org.apache.camel.component.aws.sns.SnsConfiguration.getAmazonSNSEndpoint()", "com.amazonaws.services.sns.AmazonSNS.setEndpoint(configuration.getAmazonSNSEndpoint())", "org.apache.camel.component.aws.sns.SnsConfiguration.getAmazonSNSEndpoint()"], "Fixed commit": "5dd1179e5a7e4e2728cc92b617ddf62b2e813660", "Url": "https://api.github.com/repos/grgrzybek/camel", "Date": "2014-03-12T02:45:19Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (slseByElement.get(uri)) remove_from.addAll(slseByElement.get(uri));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2480/buggy-version/src.main.java.eu.spitfire_project.smart_service_proxy.backends.slse.ServiceLevelSemanticEntityBuilder.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.get(java.lang.String)", "java.util.Set<java.lang.String>.addAll(java.util.Set<java.lang.String>)"], "Fixed commit": "65df51f48dc1efed7fa7f220e911a67eecbb8266", "Url": "https://api.github.com/repos/smartsantander/smart-service-proxy", "Date": "2012-04-30T13:14:20Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.table.TableModel.getValueAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.getImmutableProperties().contains(name)) { javax.swing.JOptionPane.showMessageDialog(Main.mainFrame, \"Immutable formulas cannot be deleted.\", \"Immutable formula\", javax.swing.JOptionPane.INFORMATION_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4593/buggy-version/src.main.java.design.properties.E3PropertiesEditor.java", "BodyUseAPI": [], "Fixed commit": "798e8f22413c426d84f8d71c9d48c8a858bcdb8e", "Url": "https://api.github.com/repos/danionita/e3tools", "Date": "2016-10-15T12:35:56Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leasePaths) != null) { org.apache.hadoop.hdfs.server.namenode.LeaseManager.LOG.debug((((\"Total Paths \" + (leasePaths.size())) + \" Paths: \") + (java.util.Arrays.toString(leasePaths.toArray())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8455/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.server.namenode.LeaseManager.java", "BodyUseAPI": [], "Fixed commit": "920d009cc4d78f108fc1048939c01af67dea2402", "Url": "https://api.github.com/repos/smkniazi/hops", "Date": "2015-09-12T12:00:58Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((new net.waqassiddiqi.app.crew.db.VesselDAO().getAll().size()) > 0) enableToolbar(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/367/buggy-version/src.net.waqassiddiqi.app.crew.ui.AddVesselForm.java", "BodyUseAPI": [], "Fixed commit": "094184fd8657d40d9f4c699ce8a6ba1d5a0e9b9c", "Url": "https://api.github.com/repos/waqassiddiqi/restApp", "Date": "2014-10-01T08:06:38Z"},
{"Line": "=>715", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.launchPhase) >= (EnumLaunchPhase.LAUNCHED.ordinal())) return true; else return (this.currentPowerCapacity) == (this.getPowerMaxCapacity());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5615/buggy-version/src.main.java.com.mjr.extraplanets.entities.rockets.EntityElecticAutoRocket.java", "BodyUseAPI": [], "Fixed commit": "ff8994b7314c9c3a92cc6f79d44b807bf9efe5ba", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-06-20T15:46:32Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getIntent().getBooleanExtra(\"EXIT\", false)) { this.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3809/buggy-version/src.ru.ifmo.ctddev.isaev.LanguageChoosingActivity.java", "BodyUseAPI": [], "Fixed commit": "9d4e38f7c1abebce4efd6b7a95953b0a60ce8498", "Url": "https://api.github.com/repos/isae/FlashCards", "Date": "2014-01-08T00:55:31Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.result) == null) { callbackContext.success(new org.json.JSONObject()); }else { callbackContext.success(new org.json.JSONObject(response.result.toJSONMap())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2015/buggy-version/src.android.RogerthatPaymentsPlugin.java", "BodyUseAPI": ["org.apache.cordova.CallbackContext.success(org.json.JSONObject)", "response.result.toJSONMap()"], "Fixed commit": "370a57510c251aca60a1b8d2e9b4f583302d394d", "Url": "https://api.github.com/repos/rogerthat-platform/cordova-rogerthat-payments-plugin", "Date": "2017-10-09T09:49:35Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((argumentVariableNames.hasVariableNames()) && ((argumentVariableNames.getVariableNames().get(argumentNumber).length()) != 0)) { java.lang.String variableName = argumentVariableNames.getVariableNames().get(argumentNumber); argument.setBoundVariableName(variableName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2752/buggy-version/src.main.java.org.swrlapi.drools.DroolsSWRLBuiltInInvoker.java", "BodyUseAPI": ["org.swrlapi.drools.swrl.BAVNs.getVariableNames()", "argumentVariableNames.getVariableNames().get(int)"], "Fixed commit": "1e254822a9f15e4a6c12ee46b38739502a8ae34f", "Url": "https://api.github.com/repos/protegeproject/swrlapi-drools-engine", "Date": "2014-04-17T23:39:11Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getPublicKeyBytes()) != null) { out += (\"public key bytes\\t:\" + (new java.lang.String(this.getPublicKeyBytes()))) + delimiter; }else { out += \"public key bytes\\t:empty\" + delimiter; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6134/buggy-version/src.dto.UserDto.java", "BodyUseAPI": [], "Fixed commit": "8f1ea18172686531fed9a3931806abdbec11bbeb", "Url": "https://api.github.com/repos/sfrink/CERTUS-Common", "Date": "2014-03-31T00:25:54Z"},
{"Line": "=>964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nodebox.client.NodeBoxDocument.saveToFile(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (saved) nodebox.client.NodeBoxMenuBar.addRecentFile(documentFile);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4834/buggy-version/src.nodebox.client.NodeBoxDocument.java", "BodyUseAPI": [], "Fixed commit": "846f3bbbb3da755ca078d761c2171fc503b783fa", "Url": "https://api.github.com/repos/nodebox/nodebox", "Date": "2011-12-25T15:57:17Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cell.getDisplayValue()) != null) { val = new java.lang.String(cell.getDisplayValue().getBytes(java.nio.charset.Charset.defaultCharset()), \"UTF-8\"); }else { val = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/557/buggy-version/src.com.smartsheet.platform.tableau.SmartsheetExtractor.java", "BodyUseAPI": ["com.smartsheet.platform.tableau.model.Cell.getDisplayValue()", "cell.getDisplayValue().getBytes(java.nio.charset.Charset)"], "Fixed commit": "0decfc3c34a6621cea2c33bb5339a13df6bb5c23", "Url": "https://api.github.com/repos/smartsheet-platform/smartsheet-tableau-extract", "Date": "2013-11-27T16:51:03Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (multi) { builder.upsert().update(update); }else { builder.upsert().updateOne(update); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6296/buggy-version/datastore-mongodb.src.main.java.org.opencb.datastore.mongodb.MongoDBNativeQuery.java", "BodyUseAPI": [], "Fixed commit": "6aabde37d63ec63d78eb781f0fab5d22723a69e9", "Url": "https://api.github.com/repos/j-coll/datastore", "Date": "2015-06-18T12:15:06Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uiPrefs_.alwaysCompleteCharacters().getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (completeChars >= 2) { java.lang.String currentToken = org.rstudio.core.client.StringUtil.getToken(currentLine, cursorColumn, \"^[a-zA-Z0-9._\\'\\\"`]$\", false, false); java.lang.String[] keywords = new java.lang.String[]{ \"for\", \"if\", \"in\", \"function\", \"while\", \"repeat\", \"break\", \"switch\", \"return\", \"library\", \"require\", \"TRUE\", \"FALSE\" }; for (java.lang.String keyword : keywords) if (((currentToken.length()) <= (keyword.length())) && (keyword.substring(0, currentToken.length()).equals(currentToken))) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3280/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.console.shell.assist.RCompletionManager.java", "BodyUseAPI": [], "Fixed commit": "a2dbac09ef30cfd92064bf54de9068eeb4e98ad3", "Url": "https://api.github.com/repos/piersharding/rstudio", "Date": "2015-03-03T10:14:00Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (compare == 0) { if (TreeRoot.p.equals(PointToInsert)) { TreeRoot.p = PointToInsert; }else { TreeRoot.rt = insert(TreeRoot.rt, TreeRoot.rect, PointToInsert, (level + 1), false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6971/buggy-version/KdTree.src.KdTree.java", "BodyUseAPI": [], "Fixed commit": "2fa9b539876dfcd45ecfff27beffda029efb9d70", "Url": "https://api.github.com/repos/abhishekbhardwaj007/Algorithms", "Date": "2013-11-09T13:34:34Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(appUserRepository.exists(appUser.getId()))) { appUserRepository.save(appUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1200/buggy-version/src.main.java.de.fred4jupiter.fredbet.service.UserService.java", "BodyUseAPI": ["de.fred4jupiter.fredbet.repository.AppUserRepository.save(de.fred4jupiter.fredbet.domain.AppUser)"], "Fixed commit": "d63e39bde7a5c95a75c8b0039100e8f427d7b324", "Url": "https://api.github.com/repos/fred4jupiter/fredbet", "Date": "2015-08-28T11:45:43Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((state) == (RxpState.FIN_WAIT_1)) && (packet.ack)) { state = RxpState.FIN_WAIT_2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/737/buggy-version/src.RxpSocket.java", "BodyUseAPI": [], "Fixed commit": "9bd8e4c603a3c1c625bb96249cf4bf9cdf6032bb", "Url": "https://api.github.com/repos/louiswilliams/fxa", "Date": "2015-11-27T16:40:57Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((countBills.size()) == 1) { int month = java.lang.Integer.parseInt(countBills.get(0).getMonth()); if (value < 0) { result = (java.lang.String.valueOf((month - 1))) + \" \u6708\"; }else if (value == 1) { result = (java.lang.String.valueOf((month + 1))) + \" \u6708\"; }else { result = (java.lang.String.valueOf(month)) + \" \u6708\"; } }else if ((countBills.size()) == 2) { if ((value > 0) && (value < 1)) { return \"\"; } int month = java.lang.Integer.parseInt(countBills.get(((int) (value))).getMonth()); result = (java.lang.String.valueOf(month)) + \" \u6708\"; }else { if ((value > 0) && (java.lang.String.valueOf(value).endsWith(\".0\"))) { return \"\"; } int month = java.lang.Integer.parseInt(countBills.get(((int) (java.lang.Math.ceil(java.lang.Double.parseDouble(java.lang.String.valueOf(value)))))).getMonth()); result = (java.lang.String.valueOf(month)) + \" \u6708\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4005/buggy-version/app.src.main.java.com.giot.memo.analysis.overall.MonthAxisValueFormatter.java", "BodyUseAPI": ["java.util.List<com.giot.memo.data.entity.CountBill>.get(int)", "countBills.get(((int) (java.lang.Math.ceil(java.lang.Double.parseDouble(java.lang.String.valueOf(value)))))).getMonth()", "java.util.List<com.giot.memo.data.entity.CountBill>.get(double)", "countBills.get(0).getMonth()", "java.util.List<com.giot.memo.data.entity.CountBill>.size()", "java.lang.Integer.parseInt(countBills.get(((int) (value))).getMonth())", "java.lang.Integer.parseInt(countBills.get(((int) (java.lang.Math.ceil(java.lang.Double.parseDouble(java.lang.String.valueOf(value)))))).getMonth())", "java.lang.Integer.parseInt(countBills.get(0).getMonth())", "countBills.get(((int) (value))).getMonth()", "java.util.List<com.giot.memo.data.entity.CountBill>.get(float)"], "Fixed commit": "16478c7baf2c941fa283e06c4155fa810361cdad", "Url": "https://api.github.com/repos/jiangmalone/memo", "Date": "2016-09-14T09:40:33Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((neighborIds.length) <= k) { return neighborIds; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8970/buggy-version/src.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "a6f5cb8ee6d6402cc57da7a6c0af97809f489893", "Url": "https://api.github.com/repos/jeremychen0127/bfs-trees", "Date": "2016-10-25T01:18:32Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.instachat.emojilibrary.util.SharedPreferencesManager.popRecents()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null == emojis) || ((emojis.size()) == 0)) { emojis = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7056/buggy-version/emoji-library.src.main.java.br.com.instachat.emojilibrary.util.SharedPreferencesManager.java", "BodyUseAPI": [], "Fixed commit": "3fe95c08545725032afd4dd540265e698e72d7a4", "Url": "https://api.github.com/repos/edsilfer/emoji-keyboard", "Date": "2016-05-30T01:55:24Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != (mData)) && ((mData.size()) > 0)) { mAdapter = new br.com.instachat.emojilibrary.adapter.EmojiAdapter(view.getContext(), this.mData, this.mUseSystemDefault); this.mGridView.setAdapter(mAdapter); this.mGridView.setOnItemClickListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7056/buggy-version/emoji-library.src.main.java.br.com.instachat.emojilibrary.controller.emoji_pages.FragmentEmojiRecents.java", "BodyUseAPI": [], "Fixed commit": "3fe95c08545725032afd4dd540265e698e72d7a4", "Url": "https://api.github.com/repos/edsilfer/emoji-keyboard", "Date": "2016-05-30T01:55:24Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (inputArray[i].equals(\"http\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/9084/buggy-version/src.AI.NaturalLanguage.java", "BodyUseAPI": [], "Fixed commit": "d315039fe5b72779484a3769f9169b2a78c56aff", "Url": "https://api.github.com/repos/doogyb/32pac", "Date": "2015-04-26T19:01:50Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (item != null) { java.awt.Point position = item.getPosition(); if ((nearestItem == null) || ((position.distance(headPosition)) < (nearestItem.getPosition().distance(headPosition)))) nearestItem = item; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7675/buggy-version/src.control.snakecontroller.Pathfinder.java", "BodyUseAPI": ["model.item.Item.getPosition()"], "Fixed commit": "57dd7f115324397326e840e4cb792d71962961f7", "Url": "https://api.github.com/repos/armbruer/Snake", "Date": "2015-07-06T13:29:52Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2385/buggy-version/utilities.twitter-preprocess.src.edu.columbia.watson.twitter.HTMLLuceneIndexBuilder.java", "BodyUseAPI": [], "Fixed commit": "401241a0e42fdabebc0955636d5bccac555b18cc", "Url": "https://api.github.com/repos/qiao-y/twitter-semantic-search", "Date": "2013-05-15T04:46:57Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((move.charAt(i)) != '-') || ((move.charAt(i)) != (game.S_MARK))) || ((move.charAt(i)) != (game.C_MARK))) { i = 0; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5715/buggy-version/Client.java", "BodyUseAPI": [], "Fixed commit": "5e8a5b2df4df52a6aad0e73841e3fd741f36866b", "Url": "https://api.github.com/repos/maxam56/TicTacToe", "Date": "2017-11-08T21:42:17Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player.worldObj.isRemote)) { RPGCore.network.sendTo(new co.uk.silvania.rpgcore.network.LevelPacket(getXP(), (-1), skillId), ((net.minecraft.entity.player.EntityPlayerMP) (player))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4500/buggy-version/src.main.java.co.uk.silvania.rpgcore.skills.SkillLevelBase.java", "BodyUseAPI": [], "Fixed commit": "f959e6fc05ee6dac818f4219eb28d48a4447f9e7", "Url": "https://api.github.com/repos/Flenix/RPGCore", "Date": "2016-04-24T23:08:17Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myMaze.getGrid()[((getX()) + x)][((getY()) + y)]) == 'd') { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1486/buggy-version/src.logic.Hero.java", "BodyUseAPI": [], "Fixed commit": "d1b4e27e4961cd3fb2be4aa2e25e16fdbad0c2a7", "Url": "https://api.github.com/repos/Antonio-Melo/Maze", "Date": "2016-04-03T12:05:59Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.isFunctionName()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/179/buggy-version/vaadin-spreadsheet.src.main.java.com.vaadin.addon.spreadsheet.NamedRangeUtils.java", "BodyUseAPI": [], "Fixed commit": "baffc2f3dd1bcf126237d4375b2f3ba62c964d9a", "Url": "https://api.github.com/repos/ianscriven/spreadsheet", "Date": "2017-10-24T04:15:14Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((image) != null) { holder.mUserImage.setImageDrawable(com.sims.topaz.utils.CameraUtils.getDrwableFromBytes(image)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3568/buggy-version/android.src.com.sims.topaz.adapter.UserMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "1d5093cff84acb79adec1cad0667d369a9dfa544", "Url": "https://api.github.com/repos/SIMS-Topaz/sims-topaz-android", "Date": "2014-03-10T21:46:10Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((turboPower.isActive()) || ((enemy.x_position) > (player.x_position))) enemy.move();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6359/buggy-version/acornchase.src.acornchase.model.Game.java", "BodyUseAPI": ["acornchase.model.Squirrel.move()"], "Fixed commit": "cd320389d2de726b5af86904c5ed73375ba4935b", "Url": "https://api.github.com/repos/lsom/acornchase", "Date": "2014-02-24T19:52:07Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuffer.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"font-face\".equals(nm)) return new org.zkoss.zuss.impl.in.Keyword(Keyword.Value.FONTFACE, getLine());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8541/buggy-version/zuss.src.org.zkoss.zuss.impl.in.Tokenizer.java", "BodyUseAPI": [], "Fixed commit": "48087dd5fb2bec5e48c3e7455c6b9f54272a5153", "Url": "https://api.github.com/repos/laeubi/ZUSS", "Date": "2014-07-17T08:21:40Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (child != null) { java.lang.Object childId = com.impetus.kundera.property.PropertyAccessorHelper.getId(child, childMetadata); com.impetus.kundera.persistence.context.PersistenceCacheManager.addEntityToPersistenceCache(child, delegator, childId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8310/buggy-version/kundera-core.src.main.java.com.impetus.kundera.persistence.AssociationBuilder.java", "BodyUseAPI": ["com.impetus.kundera.property.PropertyAccessorHelper.getId(java.lang.Object,com.impetus.kundera.metadata.model.EntityMetadata)", "com.impetus.kundera.persistence.context.PersistenceCacheManager.addEntityToPersistenceCache(java.lang.Object,com.impetus.kundera.persistence.PersistenceDelegator,java.lang.Object)"], "Fixed commit": "075de1ec022280559402bcd928a3d2e0258f6755", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-02-28T09:25:18Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.simplePDObject) != null) { return java.lang.Boolean.valueOf(((org.verapdf.pd.PDResource) (simplePDObject)).isInherited()); }else if ((this.pdFont) != null) { return this.pdFont.isInherited(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4924/buggy-version/validation-model.src.main.java.org.verapdf.model.impl.pd.GFPDResource.java", "BodyUseAPI": [], "Fixed commit": "56b8e8571572bc7e2eb7782038189e5b9015c20e", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-validation", "Date": "2016-09-12T11:45:05Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (drawable == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2581/buggy-version/app.src.main.java.com.example.rohinbhasin.nflapp.FormattingUtilities.java", "BodyUseAPI": [], "Fixed commit": "ad251003dd7ae615fd300208a992d586b1df4a82", "Url": "https://api.github.com/repos/rohinb2/pick-six", "Date": "2017-12-14T05:38:22Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(firstLevelOfLocation.equals(\"\u043d\u0435 \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e\"))) { com.mycompany.model.entity.FirstLevelOfLocation firstLevelOfLocation_ = firstLevelOfLocationRepository.findByName(firstLevelOfLocation); java.util.List<com.mycompany.model.entity.PublicAssociation> publicAssociations_ = new java.util.ArrayList<>(); for (com.mycompany.model.entity.PublicAssociation p : publicAssociations) { if (((char) (p.getFirstLevelOfLocation())) == ((char) (firstLevelOfLocation_.getCode()))) publicAssociations_.add(p); } publicAssociations = publicAssociations_; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7441/buggy-version/src.main.java.com.mycompany.controller.MainController.java", "BodyUseAPI": ["com.mycompany.model.repository.FirstLevelOfLocationRepository.findByName(java.lang.String)"], "Fixed commit": "0a2e64327b5c263a988a4894e65a6b2b5374c895", "Url": "https://api.github.com/repos/Andrii97/RegisterOfPublicAssociations", "Date": "2016-06-01T19:05:57Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(kind.equals(\"\u043d\u0435 \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e\"))) || (!(status.equals(\"\u043d\u0435 \u0432\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e\")))) { com.mycompany.model.entity.Kind kind_ = kindRepository.findByName(kind); com.mycompany.model.entity.Statuse status_ = statuseRepository.findByName(status); publicAssociations = filterPublicAssociations(publicAssociations, kind_, status_); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7441/buggy-version/src.main.java.com.mycompany.controller.MainController.java", "BodyUseAPI": ["com.mycompany.model.repository.KindRepository.findByName(java.lang.String)", "com.mycompany.model.repository.StatuseRepository.findByName(java.lang.String)"], "Fixed commit": "0a2e64327b5c263a988a4894e65a6b2b5374c895", "Url": "https://api.github.com/repos/Andrii97/RegisterOfPublicAssociations", "Date": "2016-06-01T19:05:57Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_adapterFactory) != null) { _adapterFactory.dispose(); _adapterFactory = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6464/buggy-version/plugins.org.eclipse.emf.diffmerge.src.org.eclipse.emf.diffmerge.EMFDiffMergePlugin.java", "BodyUseAPI": [], "Fixed commit": "7499c382556dff359fb1f76a3ddb47b19d6179a7", "Url": "https://api.github.com/repos/eclipse/emf.diffmerge.core", "Date": "2017-05-24T14:03:10Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position != ((getCount()) - 1)) ribbon.setBackgroundColor(android.graphics.Color.parseColor((\"#\" + (category.getBaseColor()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5930/buggy-version/ESCAPE.src.se.chalmers.dat255.group22.escape.adapters.SpinnerCategoryAdapter.java", "BodyUseAPI": [], "Fixed commit": "6ff450c0577acec52b5a3b45e08250d2a7a197a7", "Url": "https://api.github.com/repos/simonjrp/ESCAPE", "Date": "2013-10-18T15:27:55Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.FileUtils.listFiles(java.io.File,org.apache.commons.io.filefilter.RegexFileFilter,DirectoryFileFilter.DIRECTORY)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((files.size()) == 0) { return path + \" is empty\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7958/buggy-version/src.main.java.com.github.webdriverextensions.Utils.java", "BodyUseAPI": [], "Fixed commit": "eb825b58e8f4ab9e695398bd4ea6dff620406c50", "Url": "https://api.github.com/repos/webdriverextensions/webdriverextensions-maven-plugin", "Date": "2016-04-22T21:53:27Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultado.size()) == 0) { throw new Excecoes.DadosProibidos(\"Imposs\u00edvel derivar uma s\u00e9rie a partir deste hexacorde.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6332/buggy-version/src.main.java.Controle.GeradorDerivacaoSerial.java", "BodyUseAPI": [], "Fixed commit": "a7a1f8e86faf1229d9258cef5dd4265b1de7d856", "Url": "https://api.github.com/repos/sonologico/lewin", "Date": "2015-08-31T14:22:30Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isMaster) { ps.setLowerBound(min_values[((min_values.length) - 1)]); ps.setUpperBound(max_values[((max_values.length) - 1)]); }else { ps.setLowerBound(1); ps.setUpperBound(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5682/buggy-version/saas.compss-plugin.ascetic-deployer.src.es.bsc.servicess.ide.editors.deployers.Manifest.java", "BodyUseAPI": [], "Fixed commit": "7b340943fce63ac40f8face04dace3f3ba50f549", "Url": "https://api.github.com/repos/ascetictoolbox/ascetictoolbox", "Date": "2016-10-10T15:16:12Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((n) == 1) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/903/buggy-version/src.main.java.Percolation.java", "BodyUseAPI": [], "Fixed commit": "03ed7651d54fbedc5193dc545cc465ffdcb46123", "Url": "https://api.github.com/repos/ps-aux/coursera-algs4", "Date": "2016-12-05T01:38:36Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.reflect.Modifier.isAbstract(c.getModifiers())) { result = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/402/buggy-version/src.main.java.squier.john.typeInformation.ReflectionUtils.java", "BodyUseAPI": [], "Fixed commit": "5ab38bec99c1c9fd71ac6b69996ba612ab124201", "Url": "https://api.github.com/repos/jasquier/TypeInformation", "Date": "2017-02-16T16:44:52Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.cmu.ml.proppr.prove.wam.plugins.FactsPlugin.log.isDebugEnabled()) edu.cmu.ml.proppr.prove.wam.plugins.FactsPlugin.log.debug((((\"Fetching outlinks for \" + jumpTo) + \": \") + (edu.cmu.ml.proppr.util.Dictionary.buildString(argConst, new java.lang.StringBuilder(), \", \").toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5064/buggy-version/src.java.main.edu.cmu.ml.proppr.prove.wam.plugins.FactsPlugin.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug((((\"Fetching outlinks for \" + jumpTo) + \": \") + (edu.cmu.ml.proppr.util.Dictionary.buildString(argConst, new java.lang.StringBuilder(), \", \").toString())))"], "Fixed commit": "ea75f6ce36e59aea9db222000e91d1be02b2acd7", "Url": "https://api.github.com/repos/TeamCohen/ProPPR", "Date": "2015-10-30T16:24:24Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ean.length()) < 13) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4956/buggy-version/Alexandria.app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": [], "Fixed commit": "c78e2950dabb6fdcd9a4fc90bcc69eea32fac34f", "Url": "https://api.github.com/repos/sknutti/nd-super-duo", "Date": "2015-09-19T02:19:20Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((facebookLogin) != null) { result.setFacebookLogin(facebookLogin.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2779/buggy-version/server.src.main.java.com.devicehive.model.updates.UserUpdate.java", "BodyUseAPI": [], "Fixed commit": "030af501e4971b677ec749cb74e2435a70f55816", "Url": "https://api.github.com/repos/devicehive/devicehive-java", "Date": "2014-12-18T18:32:07Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((googleLogin) != null) { result.setGoogleLogin(googleLogin.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2779/buggy-version/server.src.main.java.com.devicehive.model.updates.UserUpdate.java", "BodyUseAPI": [], "Fixed commit": "030af501e4971b677ec749cb74e2435a70f55816", "Url": "https://api.github.com/repos/devicehive/devicehive-java", "Date": "2014-12-18T18:32:07Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((githubLogin) != null) { result.setGithubLogin(githubLogin.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2779/buggy-version/server.src.main.java.com.devicehive.model.updates.UserUpdate.java", "BodyUseAPI": [], "Fixed commit": "030af501e4971b677ec749cb74e2435a70f55816", "Url": "https://api.github.com/repos/devicehive/devicehive-java", "Date": "2014-12-18T18:32:07Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(displayInventory(items))) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/998/buggy-version/src.View.ItemView.java", "BodyUseAPI": [], "Fixed commit": "c546c1cc1fbdd5ead15b0d52f8214d56d45305b2", "Url": "https://api.github.com/repos/jos10002/Bise-Joseph-Team", "Date": "2015-02-27T16:42:40Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Float.parseFloat(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((floatValue == 0) || (floatValue == (java.lang.Float.POSITIVE_INFINITY))) { char c0 = strVal.charAt(0); if ((c0 > '0') && (c0 <= '9')) { throw new com.alibaba.fastjson.JSONException((\"float overflow : \" + strVal)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7049/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONLexerBase.java", "BodyUseAPI": [], "Fixed commit": "c87a081964c87a36245e30dcb7e5d80e8448807c", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-11-10T03:01:22Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.sociallabel.service.UserService.convert(t.getFollowing())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (relation.contains(ut)) { m.put(\"followed\", \"1\"); }else { m.put(\"followed\", \"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5840/buggy-version/src.main.java.com.github.sociallabel.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "4fd2fb44f9c9de4936c2acb56d98f7443611a69f", "Url": "https://api.github.com/repos/JohnWhite80/SocialLabelServer", "Date": "2014-09-11T03:54:33Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraft.client.Minecraft.getMinecraft().theWorld) != null) { net.minecraft.client.Minecraft.getMinecraft().addScheduledTask(new java.lang.Runnable() { public void run() { processMessage(message); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7162/buggy-version/src.main.java.com.projectreddog.machinemod.network.MachineModMessageEntityInventoryChangedToClientHandler.java", "BodyUseAPI": [], "Fixed commit": "f79c67073dfc5652659484227e62e5c82bbcbe6b", "Url": "https://api.github.com/repos/TechStack/TechStack-s-HeavyMachineryMod", "Date": "2015-01-28T01:47:36Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraft.client.Minecraft.getMinecraft().theWorld) != null) { net.minecraft.client.Minecraft.getMinecraft().addScheduledTask(new java.lang.Runnable() { public void run() { processMessage(message); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7162/buggy-version/src.main.java.com.projectreddog.machinemod.network.MachineModMessageEntityToClientHandler.java", "BodyUseAPI": [], "Fixed commit": "f79c67073dfc5652659484227e62e5c82bbcbe6b", "Url": "https://api.github.com/repos/TechStack/TechStack-s-HeavyMachineryMod", "Date": "2015-01-28T01:47:36Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.RandomAccessFile.read(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (readLen > 0) { return java.nio.ByteBuffer.wrap(data, 0, readLen); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5282/buggy-version/remusFS.src.main.java.org.remus.fs.FileServer.java", "BodyUseAPI": ["java.nio.ByteBuffer.wrap(byte[],int,int)"], "Fixed commit": "f80ab620ea95e9a7f7d126238c49b719ca3231ad", "Url": "https://api.github.com/repos/kellrott/Remus", "Date": "2011-11-29T22:21:32Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) > 4096) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/936/buggy-version/plugins.org.eclipse.tcf.debug.ui.src.org.eclipse.tcf.internal.debug.ui.model.TCFNodeExpression.java", "BodyUseAPI": [], "Fixed commit": "3c9e99795dacc26f5e6caf1e05dfee6b9e46da44", "Url": "https://api.github.com/repos/eclipse/tcf", "Date": "2014-11-04T18:30:20Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((pos < ((mBufferStartPosition) + length)) && (pos >= (mBufferStartPosition)))) { mBufferStartPosition = (((int) (pos)) / length) * length; mCurrentBuffer = readRemoteByteBuffer(mBlockInfo, mBufferStartPosition, length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3922/buggy-version/src.main.java.tachyon.client.RemoteBlockInStream.java", "BodyUseAPI": ["tachyon.client.RemoteBlockInStream.readRemoteByteBuffer(tachyon.thrift.ClientBlockInfo,long,long)"], "Fixed commit": "c5fcf17942275e5bc182119c675b19c9137236a8", "Url": "https://api.github.com/repos/anuragkh/tachyon", "Date": "2014-01-28T23:54:13Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["offset.getBlock().getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (c instanceof org.bukkit.block.BlockState) ((org.bukkit.block.BlockState) (c)).update();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/146/buggy-version/src.main.java.com.sk89q.craftbook.circuits.gates.world.items.ContainerStocker.java", "BodyUseAPI": [], "Fixed commit": "fb20617e4d176e5fe5867c5c459b6329ffdec5d6", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-07-23T05:57:55Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((comp.itemWeight) > 0) { splitCompWeight = java.lang.Math.max(1, ((comp.itemWeight) / roomVariations)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4311/buggy-version/src.main.java.ivorius.structuregen.blocks.TileEntityMazeGenerator.java", "BodyUseAPI": ["java.lang.Math.max(int,((comp.itemWeight) / roomVariations))"], "Fixed commit": "0f2f2f813aef3a26590ffc6353250e6621e17497", "Url": "https://api.github.com/repos/Ivorforce/StructureGen", "Date": "2014-06-26T20:57:09Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeTasks) == null) { activeTasks = org.onexus.ui.workspace.progressbar.ProgressBar.getActiveTasks().getActiveTasks(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4961/buggy-version/org.onexus.ui.src.main.java.org.onexus.ui.workspace.progressbar.ProgressBarPanel.java", "BodyUseAPI": [], "Fixed commit": "6b3391d295c147485276b598240fdd60729db044", "Url": "https://api.github.com/repos/onexus/onexus", "Date": "2012-04-19T10:35:57Z"},
{"Line": "=>1400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<org.cqframework.cql.cql2elm.TimingOperatorContext>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!isRightPoint) && (!(((timingOperator.getRight().getResultType()) instanceof org.cqframework.cql.cql2elm.IntervalType) || ((timingOperator.getRight().getResultType()) instanceof org.cqframework.cql.cql2elm.ListType)))) { isRightPoint = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4002/buggy-version/Src.java.cql-to-elm.src.main.java.org.cqframework.cql.cql2elm.Cql2ElmVisitor.java", "BodyUseAPI": [], "Fixed commit": "dcbfc29e51b91bd0a0479da71fe93a0ce3b1ee71", "Url": "https://api.github.com/repos/cqframework/clinical_quality_language", "Date": "2015-02-10T21:47:41Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["framework.scuba.domain.LocalVarLocFactory.f().findLocalVarLoc(joeq.Compiler.Quad.RegisterFactory.Register)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (varLoc == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/7882/buggy-version/src.framework.scuba.analyses.alias.P2SetComparison.java", "BodyUseAPI": [], "Fixed commit": "d4ca885250e8398717a5c20ae912d4412f51a26b", "Url": "https://api.github.com/repos/xwangsd/Scuba", "Date": "2014-08-27T02:15:09Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (endIndex == (-1)) { set.setContents(input.substring(startIndex)); }else { set.setContents(input.substring(startIndex, (endIndex + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3733/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.processor.utils.ProcessorUtilities.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "org.jboss.pressgang.ccms.contentspec.processor.structures.VariableSet.setContents(java.lang.String)"], "Fixed commit": "6bc69e458bae0e990ca6f4f3f4684be41343fcc6", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpecProcessor", "Date": "2013-09-02T23:19:01Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sensorhub.impl.comm.RobustHTTPConnection.tryConnectTCP(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tcpOk) module.reportError(\"Cannot connect to HTTP server\", e, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3078/buggy-version/sensorhub-core.src.main.java.org.sensorhub.impl.comm.RobustHTTPConnection.java", "BodyUseAPI": [], "Fixed commit": "6c21ad347ac0aabafdd2a1757a51bb1cbaa78ce9", "Url": "https://api.github.com/repos/opensensorhub/osh-core", "Date": "2016-07-05T16:11:30Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (index)) { throw new java.io.IOException(\"The reading of one header initiates an infinite loop\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1766/buggy-version/modules.org.restlet.src.org.restlet.engine.header.HeaderReader.java", "BodyUseAPI": [], "Fixed commit": "30815cbda6145f3fbaedcb81b6795ab86dd31df8", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-12-21T11:56:57Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Package.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (jetbrick.template.parser.support.ClassUtils.default_package_set.contains(pkg)) { if (klass.isMemberClass()) { return ((klass.getEnclosingClass().getSimpleName()) + \".\") + (klass.getSimpleName()); }else { return klass.getSimpleName(); } }else { if (klass.isMemberClass()) { return ((klass.getEnclosingClass().getName()) + \".\") + (klass.getSimpleName()); }else { return klass.getName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/5716/buggy-version/src.main.java.jetbrick.template.parser.support.ClassUtils.java", "BodyUseAPI": [], "Fixed commit": "0b2ab5003ded1c9500320275e6d4d8f4a916dd2c", "Url": "https://api.github.com/repos/subchen/jetbrick-template", "Date": "2014-06-25T14:27:52Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IProject.getNature(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (nature != null) { natureContent.put(key(\"class\"), nature.getClass().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2176/buggy-version/sk.stuba.fiit.perconik.activity.src.sk.stuba.fiit.perconik.activity.serializers.resource.ProjectSerializer.java", "BodyUseAPI": ["nature.getClass().getName()", "sk.stuba.fiit.perconik.data.content.StructuredContent.put(key(\"class\"),nature.getClass().getName())", "org.eclipse.core.resources.IProjectNature.getClass()"], "Fixed commit": "00ab16753be92c4a834a7726b085e802ce2c07ae", "Url": "https://api.github.com/repos/perconik/perconik", "Date": "2015-03-02T21:58:16Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.net.HttpURLConnection.HTTP_OK) == (com.tomohamat.apicem.Model.RestClient.responseCode)) { result = com.tomohamat.apicem.Model.RestClient.RESULT_OK; }else { result = com.tomohamat.apicem.Model.RestClient.RESULT_BAD; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6680/buggy-version/app.src.main.java.com.tomohamat.apicem.Model.RestClient.java", "BodyUseAPI": [], "Fixed commit": "8bc26bdd5f5a0a66b4edbe17ad5a8b61fd345fc5", "Url": "https://api.github.com/repos/rtomoham/apicem-android", "Date": "2017-04-05T18:43:08Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (idx == 0) throw new java.lang.IllegalArgumentException(\"Placeholder doesn't exist\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1825/buggy-version/src.com.github.danfickle.javasqlquerybuilder.generic.QbSelectImp.java", "BodyUseAPI": [], "Fixed commit": "7f5990105d369ef08020a57be6d492350183cc8f", "Url": "https://api.github.com/repos/danfickle/java-sql-query-builder", "Date": "2012-06-05T07:47:45Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.arong.egdownloader.spider.Spider.getTextFromSource(java.lang.String,setting.getNamePrefix(),java.lang.String)", "org.arong.egdownloader.spider.Spider.getTextFromSource(java.lang.String,setting.getTotalPrefix(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((total_ == null) || (name == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6417/buggy-version/src.org.arong.egdownloader.model.ParseEngine.java", "BodyUseAPI": [], "Fixed commit": "dd39e67ceac275e65161d02c4c752a3bfc8ea84f", "Url": "https://api.github.com/repos/dipoo/egdownloader", "Date": "2014-06-28T06:24:15Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(s.getLine(1).equalsIgnoreCase(\"[Teleport]\"))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8697/buggy-version/mechanisms.src.main.java.com.sk89q.craftbook.mech.Teleporter.java", "BodyUseAPI": [], "Fixed commit": "8e4beace7614bdad01490354571d2e7a1d5a3004", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2012-07-09T23:41:05Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sign.getLine(1).equalsIgnoreCase(\"[Teleport]\"))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8697/buggy-version/mechanisms.src.main.java.com.sk89q.craftbook.mech.Teleporter.java", "BodyUseAPI": [], "Fixed commit": "8e4beace7614bdad01490354571d2e7a1d5a3004", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2012-07-09T23:41:05Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((song) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2471/buggy-version/src.main.java.com.sk89q.craftbook.circuits.jinglenote.StringJingleSequencer.java", "BodyUseAPI": [], "Fixed commit": "be4e7ec4f526eb614a02c94ee58133618d87a1ad", "Url": "https://api.github.com/repos/MCRUS/craftbook", "Date": "2013-02-12T09:43:08Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (execution instanceof org.camunda.bpm.engine.impl.persistence.entity.ExecutionEntity) { dto.superExecutionId = ((org.camunda.bpm.engine.impl.persistence.entity.ExecutionEntity) (execution)).getSuperExecutionId(); dto.parentId = ((org.camunda.bpm.engine.impl.persistence.entity.ExecutionEntity) (execution)).getParentId(); dto.activityId = ((org.camunda.bpm.engine.impl.persistence.entity.ExecutionEntity) (execution)).getCurrentActivityId(); dto.activityName = ((org.camunda.bpm.engine.impl.persistence.entity.ExecutionEntity) (execution)).getCurrentActivityName(); dto.isActive = ((org.camunda.bpm.engine.impl.persistence.entity.ExecutionEntity) (execution)).isActive(); dto.suspensionState = ((org.camunda.bpm.engine.impl.persistence.entity.ExecutionEntity) (execution)).getSuspensionState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/3192/buggy-version/engine-rest.src.main.java.org.camunda.bpm.engine.rest.dto.runtime.ExecutionDto.java", "BodyUseAPI": [], "Fixed commit": "9d119b76bfdd4cb0b190972845f018e120a49590", "Url": "https://api.github.com/repos/1and1/camunda-bpm-platform", "Date": "2013-09-25T11:34:25Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ch instanceof com.shatteredpixel.shatteredpixeldungeon.actors.mobs.npcs.Shopkeeper) ch.damage(0, this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/2302/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.items.wands.WandOfTelekinesis.java", "BodyUseAPI": ["com.shatteredpixel.shatteredpixeldungeon.actors.Char.damage(int,com.shatteredpixel.shatteredpixeldungeon.items.wands.WandOfTelekinesis)"], "Fixed commit": "d196fda2dd54cfc0f939c58f20be1949b4ec16d4", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2014-12-14T06:21:59Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.craftercms.studio.api.v1.service.content.ObjectMetadataManager.getProperties(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (metadata != null) { if ((metadata.getRenamed()) != 0) { java.lang.String oldPath = metadata.getOldUrl(); missingItem.setOldPath(oldPath); missingItem.setAction(PublishRequest.Action.MOVE); } missingItem.setCommitId(metadata.getCommitId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6815/buggy-version/src.main.java.org.craftercms.studio.impl.v1.service.deployment.PublishingManagerImpl.java", "BodyUseAPI": ["org.craftercms.studio.api.v1.dal.PublishRequest.setCommitId(metadata.getCommitId())", "org.craftercms.studio.api.v1.dal.ItemMetadata.getRenamed()", "org.craftercms.studio.api.v1.dal.ItemMetadata.getOldUrl()", "org.craftercms.studio.api.v1.dal.ItemMetadata.getCommitId()"], "Fixed commit": "b839b6c9170b2d689d217b78fc0918fa91bd6067", "Url": "https://api.github.com/repos/jdrossl/studio", "Date": "2017-10-10T16:56:44Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.stream.Stream.collect(java.util.stream.Collector<java.lang.Object, ?, java.util.List<java.lang.Object>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((given.size()) < 2) { java.util.List<java.util.List<java.lang.String>> sentence = getSentence(); if ((sentence == null) || ((sentence.size()) < 2)) { return java.util.Collections.singletonList(\"beep. boop. beep.\"); } return getSentence().get(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6473/buggy-version/src.main.java.com.demigodsrpg.chitchatbot.ai.Brain.java", "BodyUseAPI": [], "Fixed commit": "9a0504cd95ebb7446f8f98c877f02a0072818018", "Url": "https://api.github.com/repos/DemigodsRPG/ChitchatBot", "Date": "2016-04-03T04:58:07Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.splitByWholeSeparator(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((avdsOutput[i].contains(\"Name:\")) == false) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1982/buggy-version/selendroid-standalone.src.main.java.io.selendroid.android.impl.DefaultAndroidEmulator.java", "BodyUseAPI": [], "Fixed commit": "de5915bf8d52a48efc572446d4f0958e3d75c437", "Url": "https://api.github.com/repos/lukeis/selendroid", "Date": "2013-06-19T13:35:51Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerHand[0].size()) > 0) index = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8122/buggy-version/Java.src.client.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "8b5be6af6d2bc92fc633f8738e6859970248516b", "Url": "https://api.github.com/repos/kwakobo/speed", "Date": "2016-08-13T19:29:06Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerHand[0].size()) > 2) index = 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8122/buggy-version/Java.src.client.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "8b5be6af6d2bc92fc633f8738e6859970248516b", "Url": "https://api.github.com/repos/kwakobo/speed", "Date": "2016-08-13T19:29:06Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerHand[0].size()) > 1) index = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8122/buggy-version/Java.src.client.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "8b5be6af6d2bc92fc633f8738e6859970248516b", "Url": "https://api.github.com/repos/kwakobo/speed", "Date": "2016-08-13T19:29:06Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerHand[0].size()) > 3) index = 4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8122/buggy-version/Java.src.client.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "8b5be6af6d2bc92fc633f8738e6859970248516b", "Url": "https://api.github.com/repos/kwakobo/speed", "Date": "2016-08-13T19:29:06Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof microbat.model.ClassLocation) { microbat.model.ClassLocation other = ((microbat.model.ClassLocation) (obj)); return (classCanonicalName.equals(other.getClassCanonicalName())) && ((lineNo) == (other.getLineNumber())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6593/buggy-version/microbat.src.main.microbat.model.BreakPoint.java", "BodyUseAPI": [], "Fixed commit": "bad7f5b9369f14d2709d9ce5ca271d3ba7f08039", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2017-08-14T12:33:01Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entries.size()) == 0) readEntries();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/898/buggy-version/libaums.src.main.java.com.github.mjdev.libaums.fs.fat32.FatDirectory.java", "BodyUseAPI": [], "Fixed commit": "e5c34c81ed512f43e5b709369836306f69a5a5de", "Url": "https://api.github.com/repos/magnusja/libaums", "Date": "2016-03-20T23:57:40Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(valid)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/6399/buggy-version/src.com.nilunder.bdx.GameObject.java", "BodyUseAPI": [], "Fixed commit": "d3f5b0218901e5471733ee9ef4c594b1ec048361", "Url": "https://api.github.com/repos/aliasaila/bdx", "Date": "2015-09-30T04:16:09Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldCheckToken()) { android.util.Log.v(ohtu.beddit.activity.MainActivity.TAG, \"Starting token validation\"); tokenChecker = new ohtu.beddit.activity.MainActivity.TokenChecker(); tokenChecker.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4221/buggy-version/beddit_alarm.src.ohtu.beddit.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "707350c285de974b4758b25664515bf2cb4eae4b", "Url": "https://api.github.com/repos/bedditor/ohtu-Alarmclock", "Date": "2012-06-21T08:23:56Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(randoop.sequence.Value.stringLengthOK(x))) { map.add(clazz, new randoop.operation.NonreceiverTerm(randoop.types.JavaTypes.STRING_TYPE, x)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/8264/buggy-version/src.main.java.randoop.util.ClassFileConstants.java", "BodyUseAPI": ["randoop.util.MultiMap<java.lang.Class<?>, randoop.operation.NonreceiverTerm>.add(java.lang.Class<?>,randoop.operation.NonreceiverTerm)"], "Fixed commit": "8cdc74fea8530e9e0994d0f9e79a9cf13054a507", "Url": "https://api.github.com/repos/jkotalik/randoop", "Date": "2017-02-08T21:07:04Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pieces[1].equals(mPassword)) { startActivity(loginIntent); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/4569/buggy-version/src.com.classwarfare.financialapp.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "3dd7a159103aaca00682fd79cde654d732a6c533", "Url": "https://api.github.com/repos/tituswoo/FinancialApp", "Date": "2014-02-11T17:33:26Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAlarmId) == (com.jk.alienalarm.AlarmEditActivity.NO_ALARM_ID)) { mSelectedItems = new boolean[]{ false, false, false }; }else { mSelectedItems = com.jk.alienalarm.db.RepeatabilityHelper.parseRepeatability(mInfo.repeatability); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1349/buggy-version/src.com.jk.alienalarm.AlarmEditActivity.java", "BodyUseAPI": [], "Fixed commit": "079a4a2941dff6c3d78aee8cfda8c0ef50999b32", "Url": "https://api.github.com/repos/jacky0karl/AlienAlarm", "Date": "2014-03-15T13:07:27Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAlarmId) == (com.jk.alienalarm.AlarmEditActivity.NO_ALARM_ID)) { mInfo = new com.jk.alienalarm.db.AlarmInfo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/1349/buggy-version/src.com.jk.alienalarm.AlarmEditActivity.java", "BodyUseAPI": [], "Fixed commit": "079a4a2941dff6c3d78aee8cfda8c0ef50999b32", "Url": "https://api.github.com/repos/jacky0karl/AlienAlarm", "Date": "2014-03-15T13:07:27Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((depth < (-1)) || (depth == 0)) throw new org.apache.chemistry.shell.command.CommandException(((\"Given depth \\\"\" + depthParam) + \"\\\" is not allowed\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V119/802/buggy-version/src.main.java.org.apache.chemistry.shell.cmds.cmis.DumpTree.java", "BodyUseAPI": [], "Fixed commit": "073ef7140cf01c556be9720b6f4b870d778ae5ef", "Url": "https://api.github.com/repos/OpenDataSpace/chemistry-shell", "Date": "2013-08-12T17:50:09Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.equals(\"\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7640/buggy-version/searchUI.src.edu.noteaid.util.EHRMetaMapExtractor.java", "BodyUseAPI": [], "Fixed commit": "c1b4121211823ef6cb755f952670903b9865c363", "Url": "https://api.github.com/repos/venetclover/searchUI", "Date": "2014-03-01T05:26:10Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (processedGFFLine.get(\"strand\").equals(\"-\")) startNuc -= 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4067/buggy-version/biolab3.bioGUI.GeneAnalytics.java", "BodyUseAPI": [], "Fixed commit": "be4442a709550ff5260d1a0a592e6e8611091aeb", "Url": "https://api.github.com/repos/louisnet/csc448", "Date": "2013-04-24T00:19:27Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (processedGFFLine.get(\"strand\").equals(\"+\")) endNuc -= 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4067/buggy-version/biolab3.bioGUI.GeneAnalytics.java", "BodyUseAPI": [], "Fixed commit": "be4442a709550ff5260d1a0a592e6e8611091aeb", "Url": "https://api.github.com/repos/louisnet/csc448", "Date": "2013-04-24T00:19:27Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showOptionDialog(<nulltype>,((\"Are you sure you want to clear the queue \\\"\" + (queue.getName())) + \"\\\"?\"),java.lang.String,int,int,<nulltype>,java.lang.String[],<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (optionDialog == (javax.swing.JOptionPane.YES_OPTION)) { com.intellij.openapi.progress.ProgressManager.getInstance().run(new com.intellij.openapi.progress.Task.Backgroundable(project, \"Clearing queue messages\", false) { @java.lang.Override public void run(@org.jetbrains.annotations.NotNull com.intellij.openapi.progress.ProgressIndicator progressIndicator) { try { com.microsoftopentechnologies.tooling.msservices.helpers.azure.sdk.AzureSDKManagerImpl.getManager().clearQueue(storageAccount, queue); com.intellij.openapi.application.ApplicationManager.getApplication().invokeLater(new java.lang.Runnable() { @java.lang.Override public void run() { fillGrid(); } }); } catch (com.microsoftopentechnologies.tooling.msservices.helpers.azure.AzureCmdException e) { com.microsoftopentechnologies.tooling.msservices.components.DefaultLoader.getUIHelper().showException(\"Error clearing queue messages\", e, \"Service Explorer\", false, true); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2967/buggy-version/src.android.com.microsoftopentechnologies.intellij.helpers.storage.QueueFileEditor.java", "BodyUseAPI": [], "Fixed commit": "94328ade0e66fac587352b22ec6a42de559bd3d2", "Url": "https://api.github.com/repos/leotilli/msopentech-tools-for-intellij", "Date": "2015-05-19T14:38:01Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (false) { int sideOffs = hdr.getTrackOffset(hdr.tracks); tracksideoffset += sideOffs; }else { tracksideoffset = ((hdr.track0offs) + (hdr.getTrackOffset((((hdr.tracks) * 2) - 1)))) - (hdr.getTrackOffset(((seektrack) % (hdr.tracks)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/896/buggy-version/v9t9.v9t9-java.v9t9-engine.src.v9t9.engine.files.image.BaseDiskImage.java", "BodyUseAPI": [], "Fixed commit": "15cb6869d32bfd19ba67a6dedfb92090b3b353ce", "Url": "https://api.github.com/repos/eswartz/emul", "Date": "2013-05-20T03:13:57Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collection == null) sql = \"select * from cards\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2832/buggy-version/src.org.magic.api.dao.impl.HsqlDAO.java", "BodyUseAPI": [], "Fixed commit": "b4f6bc6fd98d0bbb0e72901de6019d946d0470dd", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2016-04-20T14:18:56Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"One argument is expected\"); }else if ((arguments.size()) != 1) { throw new java.lang.IllegalArgumentException(((\"One argument was expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7216/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionHasValue.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "05271704211f881dc47c8d4f725067583813a29f", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-22T16:19:23Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valueMap == null) { throw new java.lang.IllegalArgumentException(\"valueMap is expected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7216/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionHasValue.java", "BodyUseAPI": [], "Fixed commit": "05271704211f881dc47c8d4f725067583813a29f", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-22T16:19:23Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((historyData) != null) historyData.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1868/buggy-version/app.src.main.java.pl.srw.billcalculator.history.HistoryPresenter.java", "BodyUseAPI": [], "Fixed commit": "66925ab00f5af2f7ac35c2dc579cca0627a6cfc9", "Url": "https://api.github.com/repos/sewerk/Bill-Calculator", "Date": "2017-04-28T19:09:20Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != br) { try { br.close(); } catch (java.lang.Exception ignore) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4705/buggy-version/src.main.java.org.jenkinsci.plugins.mib3flash.Mib3Flash.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "7ecc760d29bb4087b5dee5c175cf3fd1877d756b", "Url": "https://api.github.com/repos/krystian-wojtas/sii-dir-digger", "Date": "2017-10-31T12:30:12Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (info.fetter.logstashforwarder.Forwarder.logger.isDebugEnabled()) { info.fetter.logstashforwarder.Forwarder.logger.error(((\"Failed to connect to server \" + (serverList.get(randomServerIndex))) + \" : \"), ex); }else { info.fetter.logstashforwarder.Forwarder.logger.error((((\"Failed to connect to server \" + (serverList.get(randomServerIndex))) + \" : \") + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5745/buggy-version/src.main.java.info.fetter.logstashforwarder.Forwarder.java", "BodyUseAPI": ["org.apache.log4j.Logger.error(java.lang.String,java.lang.Exception)", "org.apache.log4j.Logger.error(java.lang.String)"], "Fixed commit": "8f082be6c929879c31498caf61181a2b252feca0", "Url": "https://api.github.com/repos/pichljan/logstash-forwarder-java", "Date": "2015-07-22T09:47:50Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (server == null) { throw new java.io.IOException(\"Server address not configured\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5745/buggy-version/src.main.java.info.fetter.logstashforwarder.protocol.LumberjackClient.java", "BodyUseAPI": [], "Fixed commit": "8f082be6c929879c31498caf61181a2b252feca0", "Url": "https://api.github.com/repos/pichljan/logstash-forwarder-java", "Date": "2015-07-22T09:47:50Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (keyStorePath == null) { throw new java.io.IOException(\"Key store not configured\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5745/buggy-version/src.main.java.info.fetter.logstashforwarder.protocol.LumberjackClient.java", "BodyUseAPI": [], "Fixed commit": "8f082be6c929879c31498caf61181a2b252feca0", "Url": "https://api.github.com/repos/pichljan/logstash-forwarder-java", "Date": "2015-07-22T09:47:50Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (refactoredFunctionName != null) { jsObjectBuilder.append(\";\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3476/buggy-version/wffweb.src.main.java.com.webfirmframework.wffweb.tag.html.formsandinputs.Form.java", "BodyUseAPI": [], "Fixed commit": "9680f990e049f289c754901e62348d35cf210f13", "Url": "https://api.github.com/repos/webfirmframework/wff", "Date": "2017-10-15T21:20:13Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((utils.DatasetMap.getDatasetMap()) == null) utils.DatasetMap.initMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3092/buggy-version/src.main.java.operator.filter.NoBallsAndRefsFilter.java", "BodyUseAPI": [], "Fixed commit": "ab61b8aae6ace7d3676b49f8ccb142871e08f978", "Url": "https://api.github.com/repos/gianhub1/soccer", "Date": "2017-07-08T10:52:17Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((utils.DatasetMap.getDatasetMap()) == null) utils.DatasetMap.initMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3092/buggy-version/src.main.java.operator.window.HeatMapWF.java", "BodyUseAPI": [], "Fixed commit": "ab61b8aae6ace7d3676b49f8ccb142871e08f978", "Url": "https://api.github.com/repos/gianhub1/soccer", "Date": "2017-07-08T10:52:17Z"},
{"Line": "=>2391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(processing.app.syntax.Base.isWindows())) { if ((event.isPopupTrigger()) && ((popup) != null)) { popup.show(painter, event.getX(), event.getY()); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2497/buggy-version/app.src.processing.app.syntax.JEditTextArea.java", "BodyUseAPI": [], "Fixed commit": "fd4e5f8f7f0ac895790116e790bbde8cc7b5035a", "Url": "https://api.github.com/repos/processing/processing", "Date": "2014-01-22T04:18:02Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (queryOptions.containsKey(QueryOptions.SKIP)) { solrQuery.setStart(queryOptions.getInt(QueryOptions.SKIP)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/726/buggy-version/opencga-storage.opencga-storage-core.src.main.java.org.opencb.opencga.storage.core.search.solr.ParseSolrQuery.java", "BodyUseAPI": ["org.opencb.commons.datastore.core.QueryOptions.getInt(QueryOptions.SKIP)", "org.apache.solr.client.solrj.SolrQuery.setStart(queryOptions.getInt(QueryOptions.SKIP))"], "Fixed commit": "afdfbc525fcbe168149bf32bb25ecf0902b3dcbf", "Url": "https://api.github.com/repos/opencb/opencga", "Date": "2017-03-03T09:37:32Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((field instanceof java.lang.Integer) && (fieldTypeInfo.getTypeName().equals(\"double\"))) { field = new java.lang.Double(((java.lang.Integer) (field)).doubleValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1947/buggy-version/hive-serdes.src.main.java.com.cloudera.hive.serde.JSONSerDe.java", "BodyUseAPI": [], "Fixed commit": "e18b72259bd9c9985c0c194876e6981cdb399a19", "Url": "https://api.github.com/repos/viirya/cdh-twitter-example", "Date": "2013-03-04T03:11:13Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (simSteps < 0) throw new java.lang.IllegalArgumentException(\"Simulation step amount needs to be a positive number\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/9240/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "2bc73f2bcccce6e515fc97970c92b9b88bdc617e", "Url": "https://api.github.com/repos/Dakostu/CellularFreeway", "Date": "2017-11-28T21:13:18Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bi.getDataType().equals(\"iso_lang\")) { val = nVal; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2541/buggy-version/dspace-api.src.main.java.org.dspace.browse.SolrBrowseCreateDAO.java", "BodyUseAPI": [], "Fixed commit": "5a8a357eaeaa92726c1fb1f7e904385f8126c9da", "Url": "https://api.github.com/repos/ufal/clarin-dspace", "Date": "2015-04-24T11:05:38Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portlet.trash.service.impl.TrashEntryServiceImpl.getPermissionChecker()", "com.liferay.portal.kernel.trash.TrashHandlerRegistryUtil.getTrashHandler(entry.getClassName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(trashHandler.hasTrashPermission(permissionChecker, 0, entry.getClassPK(), ActionKeys.VIEW))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4688/buggy-version/portal-impl.src.com.liferay.portlet.trash.service.impl.TrashEntryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "19a9ab21c6f4bc486f6cad862321a36a7188d771", "Url": "https://api.github.com/repos/liferay/liferay-portal", "Date": "2013-03-20T12:46:19Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status >= 400) in = conn.getErrorStream(); else in = conn.getInputStream();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5212/buggy-version/src.com.mozz.http.HttpUtils.java", "BodyUseAPI": [], "Fixed commit": "32cd03500bc29b47fa9efc8b6797fc31dc97a1c4", "Url": "https://api.github.com/repos/hsllany/MozzAndroid", "Date": "2016-04-27T04:16:04Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status >= 400) in = urlConnection.getErrorStream(); else in = urlConnection.getInputStream();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5212/buggy-version/src.com.mozz.http.HttpUtils.java", "BodyUseAPI": [], "Fixed commit": "32cd03500bc29b47fa9efc8b6797fc31dc97a1c4", "Url": "https://api.github.com/repos/hsllany/MozzAndroid", "Date": "2016-04-27T04:16:04Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status >= 400) in = urlConnection.getErrorStream(); else in = urlConnection.getInputStream();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5212/buggy-version/src.com.mozz.http.HttpUtils.java", "BodyUseAPI": [], "Fixed commit": "32cd03500bc29b47fa9efc8b6797fc31dc97a1c4", "Url": "https://api.github.com/repos/hsllany/MozzAndroid", "Date": "2016-04-27T04:16:04Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.createMatch)) { android.content.Intent refereeProfileIntent = new android.content.Intent(mainActivity, com.example.nickozoulis.teamproj.activities.ActivityCreateMatch.class); startActivityForResult(refereeProfileIntent, com.example.nickozoulis.teamproj.activities.MainActivity.REQUEST_CODE_MATCH); }else if (id == (R.id.viewBarChart)) { android.content.Intent refereeProfileIntent = new android.content.Intent(mainActivity, com.example.nickozoulis.teamproj.activities.ActivityBarChart.class); startActivityForResult(refereeProfileIntent, com.example.nickozoulis.teamproj.activities.MainActivity.REQUEST_CODE); }else if (id == (R.id.exit)) { saveAndQuit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5237/buggy-version/app.src.main.java.com.example.nickozoulis.teamproj.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c19158943c89527b9fdf157e3412cd6b355b645e", "Url": "https://api.github.com/repos/nickozoulis/javaball", "Date": "2015-09-24T12:20:21Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editedBitmap) == null) { baseBitmap.compress(Bitmap.CompressFormat.PNG, 100, stream); }else { editedBitmap.compress(Bitmap.CompressFormat.PNG, 100, stream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7106/buggy-version/app.src.main.java.com.sailrobotics.posterize.ApplyEffectsActivity.java", "BodyUseAPI": [], "Fixed commit": "475fe415be87061e05cfd107c547c8b154c7e4ba", "Url": "https://api.github.com/repos/SAIL-Robotics/Posterize-Android", "Date": "2015-07-25T03:21:05Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((null != target) && (null != source)) { org.springframework.beans.BeanUtils.copyProperties(source, target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7121/buggy-version/src.main.java.hu.elte.projekteszkozok.service.BeanMapper.java", "BodyUseAPI": ["org.springframework.beans.BeanUtils.copyProperties(S,T)"], "Fixed commit": "2f6b9e956785b4182b43036d22db6c9da0fcbb81", "Url": "https://api.github.com/repos/kadlecsik/projekteszk", "Date": "2017-05-22T06:42:08Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((((options.requireEncryption()) != null) && (options.requireEncryption())) && (encryptionDataString == null)) { throw new com.microsoft.azure.storage.StorageException(com.microsoft.azure.storage.StorageErrorCodeStrings.DECRYPTION_ERROR, com.microsoft.azure.storage.core.SR.ENCRYPTION_DATA_NOT_PRESENT_ERROR, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5310/buggy-version/microsoft-azure-storage.src.com.microsoft.azure.storage.blob.BlobEncryptionPolicy.java", "BodyUseAPI": [], "Fixed commit": "17c8f69a18221133d4f3d9213618ee5d8e093f91", "Url": "https://api.github.com/repos/mirobers/azure-storage-java", "Date": "2017-04-27T22:32:25Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geotools.process.spatialstatistics.transformation.MergeFeatureCollection.getBounds()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (bounds == null) { bounds = features.getBounds(); }else { if ((features.getBounds()) != null) { bounds.include(features.getBounds()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8684/buggy-version/GeoTools.process-spatialstatistics.src.main.java.org.geotools.process.spatialstatistics.transformation.MergeFeatureCollection.java", "BodyUseAPI": ["org.geotools.geometry.jts.ReferencedEnvelope.include(features.getBounds())"], "Fixed commit": "6d846c81c6fb922f9d50ddd7d13100dd0ad73724", "Url": "https://api.github.com/repos/mapplus/spatial_statistics_for_geotools_udig", "Date": "2016-03-03T13:44:14Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wrappedStack2.wrappedStack) instanceof net.minecraft.item.ItemStack) { return -1; }else if ((wrappedStack2.wrappedStack) instanceof com.pahimar.ee3.exchange.OreStack) { int compareResult = com.pahimar.ee3.exchange.OreStack.compare(((com.pahimar.ee3.exchange.OreStack) (wrappedStack1.wrappedStack)), ((com.pahimar.ee3.exchange.OreStack) (wrappedStack2.wrappedStack))); if (compareResult == 0) { return (wrappedStack1.stackSize) - (wrappedStack2.stackSize); }else { return compareResult; } }else { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8049/buggy-version/src.main.java.com.pahimar.ee3.exchange.WrappedStack.java", "BodyUseAPI": ["com.pahimar.ee3.exchange.OreStack.compare(java.lang.Object,java.lang.Object)"], "Fixed commit": "79bf272f283f1bf3f40dcac2e6fdd913fb6171df", "Url": "https://api.github.com/repos/pahimar/Equivalent-Exchange-3", "Date": "2016-05-26T20:04:04Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((wrappedStack2.wrappedStack) instanceof net.minecraft.item.ItemStack) || ((wrappedStack2.wrappedStack) instanceof com.pahimar.ee3.exchange.OreStack)) { return -1; }else if ((wrappedStack2.wrappedStack) instanceof net.minecraftforge.fluids.FluidStack) { int compareResult = com.pahimar.ee3.util.FluidHelper.compare(((net.minecraftforge.fluids.FluidStack) (wrappedStack1.wrappedStack)), ((net.minecraftforge.fluids.FluidStack) (wrappedStack2.wrappedStack))); if (compareResult == 0) { return (wrappedStack1.stackSize) - (wrappedStack2.stackSize); }else { return compareResult; } }else { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8049/buggy-version/src.main.java.com.pahimar.ee3.exchange.WrappedStack.java", "BodyUseAPI": ["com.pahimar.ee3.util.FluidHelper.compare(java.lang.Object,java.lang.Object)"], "Fixed commit": "79bf272f283f1bf3f40dcac2e6fdd913fb6171df", "Url": "https://api.github.com/repos/pahimar/Equivalent-Exchange-3", "Date": "2016-05-26T20:04:04Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wrappedStack2.wrappedStack) instanceof net.minecraft.item.ItemStack) { int compareResult = com.pahimar.ee3.util.ItemHelper.compare(((net.minecraft.item.ItemStack) (wrappedStack1.wrappedStack)), ((net.minecraft.item.ItemStack) (wrappedStack2.wrappedStack))); if (compareResult == 0) { return (wrappedStack1.stackSize) - (wrappedStack2.stackSize); }else { return compareResult; } }else { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8049/buggy-version/src.main.java.com.pahimar.ee3.exchange.WrappedStack.java", "BodyUseAPI": ["com.pahimar.ee3.util.ItemHelper.compare(java.lang.Object,java.lang.Object)"], "Fixed commit": "79bf272f283f1bf3f40dcac2e6fdd913fb6171df", "Url": "https://api.github.com/repos/pahimar/Equivalent-Exchange-3", "Date": "2016-05-26T20:04:04Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((oids.length) > 0) { for (org.mushare.tsukuba.service.impl.Option option : optionDao.findInOids(oids)) { org.mushare.tsukuba.service.impl.Answer answer = new org.mushare.tsukuba.service.impl.Answer(); answer.setCreateAt(java.lang.System.currentTimeMillis()); answer.setMessage(message); answer.setOption(option); if ((answerDao.save(answer)) == null) { org.mushare.common.util.Debug.error(\"Answer save failed\"); return null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1513/buggy-version/src.main.java.org.mushare.tsukuba.service.impl.MessageManagerImpl.java", "BodyUseAPI": ["org.mushare.tsukuba.service.impl.MessageManagerImpl.findInOids(java.lang.String[])"], "Fixed commit": "a4fe65604eb57a7c208a1b5f8ce53d77f25bc057", "Url": "https://api.github.com/repos/MuShare/Tsukuba-Server", "Date": "2017-05-07T14:56:28Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (distinct) { elProp = beanDescriptor.getElGetValue(expression); }else { elProp = beanDescriptor.getElPropertyDeploy(expression); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7141/buggy-version/src.main.java.io.ebeaninternal.server.deploy.DeployPropertyParser.java", "BodyUseAPI": [], "Fixed commit": "95affd06df60324dab2c4a3a10a6b1e82b93f4b7", "Url": "https://api.github.com/repos/FOCONIS/ebean", "Date": "2017-05-10T09:52:28Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kruntime.getKieBase().getProcess(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (processFrom instanceof org.kie.api.definition.process.WorkflowProcess) { from = org.jbpm.workflow.instance.WorkflowProcessInstanceUpgrader.getNodeId(((org.kie.api.definition.process.WorkflowProcess) (processFrom)).getNodes(), entry.getKey(), true); }else if (processFrom instanceof org.jbpm.ruleflow.core.RuleFlowProcess) { from = org.jbpm.workflow.instance.WorkflowProcessInstanceUpgrader.getNodeId(((org.jbpm.ruleflow.core.RuleFlowProcess) (processFrom)).getNodes(), entry.getKey(), true); }else if (processFrom != null) { throw new java.lang.IllegalArgumentException((\"Suported processes are WorkflowProcess and RuleFlowProcess, it was:\" + (processFrom.getClass()))); }else { throw new java.lang.IllegalArgumentException((\"Can not find process with id: \" + fromProcessIdString)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1605/buggy-version/jbpm-flow.src.main.java.org.jbpm.workflow.instance.WorkflowProcessInstanceUpgrader.java", "BodyUseAPI": ["java.lang.Process.getClass()"], "Fixed commit": "a739d16d301f0e89ab0b9dfa56b4585bbad6b793", "Url": "https://api.github.com/repos/mbiarnes/jbpm", "Date": "2015-06-30T07:47:03Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((portalRedirects) == null) { portalRedirects = new java.util.ArrayList<org.exoplatform.portal.config.model.PortalRedirect>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4295/buggy-version/component.portal.src.main.java.org.exoplatform.portal.config.model.PortalConfig.java", "BodyUseAPI": [], "Fixed commit": "1ca5362033fa2928191c135589eb552f8f3570a4", "Url": "https://api.github.com/repos/mwringe/gatein-portal", "Date": "2012-12-18T16:47:32Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.confluent.connect.hdfs.storage.Storage.listStatus(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((statuses.length) != 1) { throw new java.lang.AssertionError(java.lang.String.format(\"Expected one log file at path: %s. Found multiple files.\", logFile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4602/buggy-version/src.main.java.io.confluent.connect.hdfs.wal.FSWAL.java", "BodyUseAPI": [], "Fixed commit": "cc864b71119d26d3a346b8f6bb3d79dbb2a79572", "Url": "https://api.github.com/repos/shopkick/kafka-connect-hdfs", "Date": "2016-07-07T22:37:31Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.confluent.connect.hdfs.storage.Storage.listStatus(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((statuses[0].getLen()) == 0) { io.confluent.connect.hdfs.wal.FSWAL.log.warn(java.lang.String.format(\"Found empty log file at path: %s\", logFile)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4602/buggy-version/src.main.java.io.confluent.connect.hdfs.wal.FSWAL.java", "BodyUseAPI": [], "Fixed commit": "cc864b71119d26d3a346b8f6bb3d79dbb2a79572", "Url": "https://api.github.com/repos/shopkick/kafka-connect-hdfs", "Date": "2016-07-07T22:37:31Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentStat.hp) < 0) currentStat.hp = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8583/buggy-version/out.production.LifeOfLight.src.lol.gameentities.stataffects.processors.HpAffectProcessor.java", "BodyUseAPI": [], "Fixed commit": "b9895c88a9d78dad37b0ff591868dd6f2e825aad", "Url": "https://api.github.com/repos/qhuydtvt/lifeoflight", "Date": "2017-09-16T04:47:10Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentStat.hp) < 0) currentStat.hp = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8583/buggy-version/src.lol.gameentities.stataffects.processors.HpAffectProcessor.java", "BodyUseAPI": [], "Fixed commit": "b9895c88a9d78dad37b0ff591868dd6f2e825aad", "Url": "https://api.github.com/repos/qhuydtvt/lifeoflight", "Date": "2017-09-16T04:47:10Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((imp.getPersonal()) != null) if (imp.getPersonal().getIdPersonal().equals(idPersonal)) { for (edu.uv.model.pojos.ExperieciaEducativa e1 : ExpsAll) { if (e1.getIdExperieciaEducativa().equals(imp.getExperieciaEducativa().getIdExperieciaEducativa())) { mats.add(e1); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5961/buggy-version/src.java.edu.uv.controller.LoginController.java", "BodyUseAPI": ["e1.getIdExperieciaEducativa().equals(imp.getExperieciaEducativa().getIdExperieciaEducativa())", "imp.getPersonal().getIdPersonal().equals(int)", "imp.getPersonal().getIdPersonal()", "edu.uv.model.pojos.Imparte.getPersonal()", "edu.uv.model.pojos.Imparte.getExperieciaEducativa()", "imp.getExperieciaEducativa().getIdExperieciaEducativa()"], "Fixed commit": "740e3e5660135554320191d5a4419621e9168b53", "Url": "https://api.github.com/repos/DaFreddyIniguez/tallerii", "Date": "2014-06-18T01:15:32Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.apimgt.gateway.throttling.util.jms.JMSMessageListener.log.isDebugEnabled()) { org.wso2.carbon.apimgt.gateway.throttling.util.jms.JMSMessageListener.log.debug((\"Event received in JMS Event Receiver - \" + message)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3980/buggy-version/components.apimgt.org.wso2.carbon.apimgt.gateway.src.main.java.org.wso2.carbon.apimgt.gateway.throttling.util.jms.JMSMessageListener.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug((\"Event received in JMS Event Receiver - \" + message))"], "Fixed commit": "6ecce3b9f754035951056d95e2973d4a2071709e", "Url": "https://api.github.com/repos/dinusha92/carbon-apimgt", "Date": "2016-04-05T12:50:40Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getContextPath()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((baseUrl != null) && ((baseUrl.length()) > 0)) { requestUri = rawRequestUri.substring(0, baseUrl.length()); }else { requestUri = rawRequestUri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2368/buggy-version/src.main.java.ru.spb.iac.storager.server.RequestForwardFilter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "ad6d710291c936c61fa44b5849587a69d093aaf1", "Url": "https://api.github.com/repos/onlythenaive/storager-backend-proto", "Date": "2017-01-17T14:59:35Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"dp\".equals(type)) { path = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5510/buggy-version/exportLibraries.netappc.src.main.java.com.emc.storageos.netappc.NetAppClusterApi.java", "BodyUseAPI": [], "Fixed commit": "cf771706cd2cb6833c4784e95948e2a4da219ef5", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-05-22T06:28:54Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.scene.input.Clipboard.getContent(javafx.scene.input.DataFormat)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (v == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5730/buggy-version/src.main.java.jp.uphy.clipboardwatcher.Clipboard.java", "BodyUseAPI": [], "Fixed commit": "750b1e7ab847e9c44556fd7b68c32d8a3a8d06a3", "Url": "https://api.github.com/repos/uphy/clipboard-watcher", "Date": "2015-10-13T09:33:38Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 2) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8776/buggy-version/src.main.java.Prime.java", "BodyUseAPI": [], "Fixed commit": "e9e5a92c410d11ecfd8dd55f58b8038f98296f1e", "Url": "https://api.github.com/repos/s-koizumi/demo", "Date": "2017-11-07T10:06:13Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["driver.drugInfoDao.selectRlike(java.util.Map<java.lang.String, java.lang.Object>,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (drugInfoList == null) { return errorData; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3344/buggy-version/src.main.java.com.curus.services.drug.DrugSearchService.java", "BodyUseAPI": [], "Fixed commit": "be52e58d348b708e9252493c34a508786a37650d", "Url": "https://api.github.com/repos/stupid-coder/CurusSpring", "Date": "2016-06-01T04:10:25Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["transItem.getItemElements().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (catalogTitle.contains(\"\\n\")) { catalogTitle = catalogTitle.replace(\"\\n\", \" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8660/buggy-version/api.transformation.src.main.java.esride.opendatabridge.processing.ItemContainer.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "e4c6a79f9463e25fdbad29d693072f5b31ca8070", "Url": "https://api.github.com/repos/EsriDE/OpenDataBridge", "Date": "2013-11-21T12:36:35Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["window.customEvents.getEvts()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(cEvnts.contains(\"Nothing\"))) { cEvnts.add(\"Nothing\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/379/buggy-version/src.com.stormdev.minigamez.editor.Objective.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "901f27b49c61b270ff247b1b081a34dd213b7f78", "Url": "https://api.github.com/repos/storm345/Minigamez", "Date": "2013-06-26T19:15:53Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.database.sqlite.SQLiteDiskIOException.class.isAssignableFrom(e.getClass())) { throw e; }else { throw new java.lang.IllegalStateException(msgLog, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7259/buggy-version/app.src.main.java.org.andstatus.app.service.CommandQueue.java", "BodyUseAPI": [], "Fixed commit": "0b3bcd763d941c732d8a94f9fdfc338527c64e87", "Url": "https://api.github.com/repos/andstatus/andstatus", "Date": "2017-02-05T06:09:56Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (info != null) node.info = info;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4761/buggy-version/vertigo-cluster.src.main.java.net.kuujo.vertigo.cluster.VertigoNode.java", "BodyUseAPI": [], "Fixed commit": "3a6bf3842d00e7a91df4052852e53008b4569eb9", "Url": "https://api.github.com/repos/kuujo/vertigo", "Date": "2014-02-15T00:11:00Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nesto.gankio.ui.activity.content.ContentActivity.4.findViewById(R.id.toolbar)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (toolbar != null) { toolbar.setFitsSystemWindows(false); android.widget.FrameLayout.LayoutParams layoutParams = ((android.support.design.widget.CollapsingToolbarLayout.LayoutParams) (toolbar.getLayoutParams())); layoutParams.setMargins(0, 0, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7490/buggy-version/app.src.main.java.nesto.gankio.ui.activity.content.ContentActivity.java", "BodyUseAPI": ["android.support.v7.widget.Toolbar.getLayoutParams()", "android.support.v7.widget.Toolbar.setFitsSystemWindows(boolean)"], "Fixed commit": "badce581f7f40eda9b9beb4b10c4a4593660ea9f", "Url": "https://api.github.com/repos/nestorm001/Gank.io", "Date": "2016-05-16T13:42:02Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (expected > 0) f = new java.util.concurrent.CompletableFuture<>(); else f = java.util.concurrent.CompletableFuture.completedFuture(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7775/buggy-version/src.main.java.org.rakam.kume.util.FutureUtil.java", "BodyUseAPI": [], "Fixed commit": "df814e5c87ca68c883c974581618b7a93cf31bb7", "Url": "https://api.github.com/repos/buremba/kume", "Date": "2015-03-14T19:14:03Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((brSystemSelectionChanged) != null) { unregisterReceiver(brSystemSelectionChanged); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4307/buggy-version/ThermicsControl.thermicsControl.src.main.java.com.therm.thermicscontrol.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "5130c1c4bac881aabe29f76e1d9aae9fa358e1b6", "Url": "https://api.github.com/repos/ifelsedeveloper/thermicsgsm", "Date": "2016-09-28T06:56:24Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((br) != null) { unregisterReceiver(br); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4307/buggy-version/ThermicsControl.thermicsControl.src.main.java.com.therm.thermicscontrol.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "5130c1c4bac881aabe29f76e1d9aae9fa358e1b6", "Url": "https://api.github.com/repos/ifelsedeveloper/thermicsgsm", "Date": "2016-09-28T06:56:24Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((br_clear_unreaded_sms) != null) { unregisterReceiver(br_clear_unreaded_sms); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4307/buggy-version/ThermicsControl.thermicsControl.src.main.java.com.therm.thermicscontrol.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "5130c1c4bac881aabe29f76e1d9aae9fa358e1b6", "Url": "https://api.github.com/repos/ifelsedeveloper/thermicsgsm", "Date": "2016-09-28T06:56:24Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (sw == null) { roi.setStrokeWidth(((float) (1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3916/buggy-version/components.bio-formats-plugins.src.loci.plugins.util.ROIHandler.java", "BodyUseAPI": [], "Fixed commit": "15a51405e40b8ac70bf475cb7e535ba02481f98c", "Url": "https://api.github.com/repos/sbesson/bioformats", "Date": "2015-03-19T12:30:15Z"},
{"Line": "=>1668", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (localActiveSiteUUID.equals(siteResp.getUuid())) { com.emc.storageos.api.service.impl.resource.DisasterRecoveryService.log.info(\"Remote standby still reconganize me, no failback\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4298/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.DisasterRecoveryService.java", "BodyUseAPI": [], "Fixed commit": "709363ff782b932a6f8348a4793066f5c07df198", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-16T11:48:25Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isConnected())) { throw new org.csstudio.headless.common.xmpp.XmppSessionException(\"XMPP connection failed.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5287/buggy-version/applications.plugins.org.csstudio.headless.common.src.org.csstudio.headless.common.xmpp.XmppSessionHandler.java", "BodyUseAPI": [], "Fixed commit": "c622a4e241a6b1f85c0a3f667b855514a634a956", "Url": "https://api.github.com/repos/Desy-extern/cs-studio", "Date": "2013-06-28T14:10:46Z"},
{"Line": "=>780", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(get_search_results().isEmpty())) { modifyContent(get_search_results(), contentArea); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4419/buggy-version/LabPal.app.src.main.java.danandzach.labpal.ChemistrySearch.java", "BodyUseAPI": [], "Fixed commit": "3b79616826afd094f8841eac555674aeb25b6369", "Url": "https://api.github.com/repos/DanSGraham/ConstData", "Date": "2015-08-28T16:41:04Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newClass.courseType.equals(\"CHEM\")) && (newClass.courseNum.equals(\"101\"))) { int test = 1; test++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7746/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "8e0ea6ca9c68d0e27e33f43337bbff65f7dd7069", "Url": "https://api.github.com/repos/eclair4151/DrexelCatalogParser", "Date": "2015-07-02T14:15:20Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jcifs.smb.SmbRandomAccessFile.read(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (read > 0) dst.put(buffer, 0, read);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4653/buggy-version/src.main.java.ch.pontius.nio.smb.SeekableSMBByteChannel.java", "BodyUseAPI": ["java.nio.ByteBuffer.put(byte[],int,int)"], "Fixed commit": "247d54a4630107a673028bb87556a64e0aa83143", "Url": "https://api.github.com/repos/pontiussoftware/smb-nio", "Date": "2017-10-08T15:23:52Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((music) != null) && (!(music.isPlaying()))) && ((beat) >= (chrislo27.remixer.track.Remix.getBeatFromSec(musicStartTime, bpm)))) { music.play(); music.setPosition(((chrislo27.remixer.track.Remix.getSecFromBeat(beat, bpm)) - (musicStartTime))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3962/buggy-version/core.src.chrislo27.remixer.track.Remix.java", "BodyUseAPI": ["chrislo27.remixer.track.Remix.getSecFromBeat(float,float)", "com.badlogic.gdx.audio.Music.setPosition(float)", "com.badlogic.gdx.audio.Music.play()"], "Fixed commit": "a4e7e1f8ef75d40c02d7bfe583338e8803157dff", "Url": "https://api.github.com/repos/chrislo27/RHRE0", "Date": "2016-06-11T03:51:39Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((packetCount) != 0) { return ((double) (outOfOrderCount)) / (packetCount); }else { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7712/buggy-version/android.src.com.mobiperf.measurements.UDPBurstTask.java", "BodyUseAPI": [], "Fixed commit": "078be9130bd6dee44837615d96e4144e13c911a4", "Url": "https://api.github.com/repos/quietbamboo/MobiPerf", "Date": "2014-03-07T01:10:45Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) != null) { connection.disconnect(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3115/buggy-version/components.camel-mqtt.src.main.java.org.apache.camel.component.mqtt.MQTTEndpoint.java", "BodyUseAPI": [], "Fixed commit": "071ada4dcaa4e21dd64d9eb123a2095f3f7f9500", "Url": "https://api.github.com/repos/igorko/camel", "Date": "2017-11-03T16:36:56Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.isOnline()) { if (p.getPlayer().getGameMode().equals(GameMode.ADVENTURE)) { alivePlayers.add(p.getPlayer()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6323/buggy-version/src.tenny1028.assassin.AssassinMinigame.java", "BodyUseAPI": ["java.util.Set<org.bukkit.entity.Player>.add(p.getPlayer())", "p.getPlayer().getGameMode()", "tenny1028.assassin.OfflinePlayer.getPlayer()", "p.getPlayer().getGameMode().equals(GameMode.ADVENTURE)", "tenny1028.assassin.OfflinePlayer.getPlayer()"], "Fixed commit": "d7ccd71057e0585a8cfb06e3a24db85b5f470926", "Url": "https://api.github.com/repos/DrOverbuild/AssassinMinigame", "Date": "2016-06-02T22:33:27Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(server.canAccess(sender))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8942/buggy-version/proxy.src.main.java.net.md_5.bungee.command.CommandList.java", "BodyUseAPI": [], "Fixed commit": "0c144c38dbe72b0c65b91a0fef31d2e29080a02b", "Url": "https://api.github.com/repos/ElasticPortalSuite/BungeeCord", "Date": "2013-04-12T02:40:36Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.ohmage.Utilities.moveFile(org.ohmage.Utilities.fileForMediaStore(uri), file)) return org.ohmage.OhmageApplication.getContext().getContentResolver().delete(uri, null, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5655/buggy-version/src.org.ohmage.Utilities.java", "BodyUseAPI": ["org.ohmage.OhmageApplication.getContext().getContentResolver().delete(android.net.Uri,<nulltype>,<nulltype>)"], "Fixed commit": "87d3000de54b301c835fe18e288a3461b4b3fb85", "Url": "https://api.github.com/repos/cens/ohmagePhone", "Date": "2012-06-13T18:25:55Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.charleszq.picorner.model.MediaObject.getAuthor()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (a != null) { sb.append(((mPhoto.getAuthor().getUserName()) == null ? mPhoto.getAuthor().getUserId() : mPhoto.getAuthor().getUserName())); mUserName.setText(sb.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1660/buggy-version/UniversalPhotoStudio.src.com.gmail.charleszq.picorner.ui.ImageDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "33a2e99fd84b5a87aee89ea3e43e5c23221b5789", "Url": "https://api.github.com/repos/yuyang226/UniversalPhotoStudio", "Date": "2012-12-27T02:32:38Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_currentMoney) > (_maxMoney)) { _currentMoney = _maxMoney; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3433/buggy-version/app.src.main.java.tw.edu.ntut.csie.game.model.Money.java", "BodyUseAPI": [], "Fixed commit": "c74b753e40397fa6da8896ff1950deea6c926b0c", "Url": "https://api.github.com/repos/leon20121005/TheBattleCats", "Date": "2017-05-29T15:10:08Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (drawingFile.exists()) hive.apps.notebooks.Glavna.LoadaniDrawing = android.graphics.BitmapFactory.decodeFile(drawingFile.getAbsolutePath()); else { hive.apps.notebooks.Glavna.LoadaniDrawing = hive.apps.notebooks.Glavna.LoadaniDrawing.createBitmap(10, 10, Bitmap.Config.ARGB_8888); hive.apps.notebooks.Glavna.LoadaniDrawing.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/371/buggy-version/src.hive.apps.notebooks.Glavna.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeFile(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "377621575d178e8e192834206c129752c3c1d6dc", "Url": "https://api.github.com/repos/hiveos/hive_apps_notebooks", "Date": "2014-02-11T21:49:45Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.input.ReversedLinesFileReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((s.charAt(0)) != '{') { s = (\"{\\\"message\\\":\\\"\" + s) + \"\\\"}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8245/buggy-version/src.main.java.com.whizzosoftware.hobson.bootstrap.api.hub.OSGIHubManager.java", "BodyUseAPI": [], "Fixed commit": "1ec717bb60d6ad8da8ee33aa9155dd908dc342da", "Url": "https://api.github.com/repos/whizzosoftware/hobson-hub-core", "Date": "2017-01-31T20:03:23Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index > 0) { this.setTarget(this.nodeList.get((index - 1))); }else { this.setTarget(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3076/buggy-version/src.main.java.micdoodle8.mods.galacticraft.planets.asteroids.tile.TileEntityBeamOutput.java", "BodyUseAPI": ["java.util.LinkedList<micdoodle8.mods.galacticraft.api.power.ILaserNode>.get(int)", "micdoodle8.mods.galacticraft.planets.asteroids.tile.TileEntityBeamOutput.setTarget(this.nodeList.get((index - 1)))"], "Fixed commit": "3b51458a3338380d23ebbb51c742762c94917a89", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2016-10-13T01:39:28Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkWp) strDone += isebase.cognito.tourpilot.DataBase.HelperFactory.getHelper().getWayPointDAO().getDone();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5401/buggy-version/TourPilot.src.isebase.cognito.tourpilot.Connection.ConnectionAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "b3ce2a3c38deddd4d6befcb8cb40e950fa01b083", "Url": "https://api.github.com/repos/IseBaseSolutions/TourPilot", "Date": "2015-12-21T10:19:35Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hour < 12) { if (minutes != null) { if (hour == 0) { time = (((hour + 12) + \":\") + minutes) + \"am\"; }else { time = ((hour + \":\") + minutes) + \"am\"; } }else { if (hour == 0) { time = (hour + 12) + \"am\"; }else { time = hour + \"am\"; } } }else { if (minutes != null) { time = ((hour + \":\") + minutes) + \"pm\"; }else { time = hour + \"pm\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6558/buggy-version/src.doordonote.ui.UI.java", "BodyUseAPI": [], "Fixed commit": "0443a57e4048968ee1f13a61c2e1d040e129b59a", "Url": "https://api.github.com/repos/cyongrui/main", "Date": "2015-10-23T08:29:15Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["missionProxy.selection.getSelected()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selections.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4673/buggy-version/Android.src.org.droidplanner.android.proxy.mission.item.fragments.MissionDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "1b15a4e9307c559cfad51797efa026c2ac02b906", "Url": "https://api.github.com/repos/arthurbenemann/droidplanner", "Date": "2014-09-10T16:19:47Z"},
{"Line": "=>1154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inputLine.startsWith(\"ATMO_RELEASE_VERSION=\")) { nextMajorRelease = inputLine.substring(\"ATMO_RELEASE_VERSION=\".length()); if ((((nextMajorRelease.compareTo(org.atmosphere.util.Version.getRawVersion())) > 0) && ((nextMajorRelease.toLowerCase().indexOf(\"rc\")) == (-1))) && ((nextMajorRelease.toLowerCase().indexOf(\"beta\")) == (-1))) { nextAvailable = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5973/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereFramework.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "d0410c5d253f065918106174a3886f5ffa4bc1c8", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2015-04-22T16:38:31Z"},
{"Line": "=>1167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextAvailable) { msg = \"\\n\\n\\tAtmosphere Framework Updates\\n\\tMinor available (bugs fixes): {}\\n\\tMajor available (new features): {}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5973/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereFramework.java", "BodyUseAPI": [], "Fixed commit": "d0410c5d253f065918106174a3886f5ffa4bc1c8", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2015-04-22T16:38:31Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1011/buggy-version/src.backend.Util.java", "BodyUseAPI": [], "Fixed commit": "78fec3b28a4e1ad9dcfde60e6c810e3992b7cc20", "Url": "https://api.github.com/repos/skortchmark9/riMap", "Date": "2014-04-10T22:31:48Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (curMine.getCompositionReset()) { str = str.replaceAll(\"<PPER>\", ((curMine.getPercent()) + \"\")); str = str.replaceAll(\"<NPER>\", ((curMine.getCompositionPercent()) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1118/buggy-version/src.com.wolvencraft.prison.mines.util.Util.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,((curMine.getPercent()) + \"\"))", "com.wolvencraft.prison.mines.mine.Mine.getCompositionPercent()", "com.wolvencraft.prison.mines.mine.Mine.getPercent()", "java.lang.String.replaceAll(java.lang.String,((curMine.getCompositionPercent()) + \"\"))"], "Fixed commit": "0264274a2d9c0dd93ff0c29da3bd59d3f420a525", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2012-12-14T21:12:26Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.metacentrum.perun.oidc.client.UsersManager.getInstance().getUserByExtSourceNameAndExtLogin(pp.getExtSourceName(),pp.getUserExtSourceLogin())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user == null) { return null; }else { return user.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6186/buggy-version/perun-oidc-server-overlay.src.main.java.cz.metacentrum.perun.oidc.overlay.PerunAuthenticationFilter.java", "BodyUseAPI": ["cz.metacentrum.perun.oidc.client.PerunUser.getId()"], "Fixed commit": "6100a00033863878049a4831678edc1a858f4d02", "Url": "https://api.github.com/repos/jirmauritz/perun-oidc-server", "Date": "2017-05-02T15:35:13Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((files == null) || ((files.length) == 0)) { return new java.util.ArrayList<java.io.File>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8545/buggy-version/SimpleUI.srcJava.simpleui.util.IOHelper.java", "BodyUseAPI": [], "Fixed commit": "bfd1b697dca69e29b750732802beaef44359cb61", "Url": "https://api.github.com/repos/simon-heinen/SimpleUi", "Date": "2015-03-18T11:43:16Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.muvari.restaurantmediator.dragndrop.DragActivity.findViewById(R.id.image_grid_view2)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (gridView2 == null) toast(\"Unable to find GridView\"); else { gridView2.setAdapter(new com.muvari.restaurantmediator.dragndrop.ImageCellAdapter(this, mDragController)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/68/buggy-version/restaurantmediator.src.com.muvari.restaurantmediator.dragndrop.DragActivity.java", "BodyUseAPI": ["android.widget.GridView.setAdapter(com.muvari.restaurantmediator.dragndrop.ImageCellAdapter)"], "Fixed commit": "038b0d182de773168d52102206e496a59394e510", "Url": "https://api.github.com/repos/muvari/restaurant-mediator", "Date": "2014-07-10T22:22:06Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.baidu.disconf.web.service.app.service.AppMgr.getById(config.getAppId())", "com.baidu.disconf.web.service.env.service.EnvMgr.getById(config.getEnvId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((app == null) || (env == null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5048/buggy-version/disconf-web.src.main.java.com.baidu.disconf.web.service.config.service.impl.ConfigMgrImpl.java", "BodyUseAPI": [], "Fixed commit": "313f06938846c2a1b5ce859129394cac6b661888", "Url": "https://api.github.com/repos/markyao/disconf", "Date": "2016-10-28T08:02:16Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.BlockingQueue<com.github.aklatt1194.SuperAwesomeOverlay.network.NetworkInterface.ChangeRequest>.take()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tcpLinkTable.get(request.addr)) == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1150/buggy-version/src.main.java.com.github.aklatt1194.SuperAwesomeOverlay.network.NetworkInterface.java", "BodyUseAPI": [], "Fixed commit": "ea6872dc6fb7fdf8ea95251baffb12c607d0b737", "Url": "https://api.github.com/repos/aklatt1194/SuperAwesomeOverlay", "Date": "2014-12-03T07:15:51Z"},
{"Line": "=>762", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ge.research.sadl.sADL.Expression.getElement()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (el instanceof com.ge.research.sadl.sADL.PropOfSubject) { com.ge.research.sadl.jena.JenaBasedSadlModelValidator.TypeCheckInfo listtype = getType(((com.ge.research.sadl.sADL.PropOfSubject) (el)).getRight()); if ((listtype.getRangeValueType()) != (com.ge.research.sadl.model.ConceptName.RangeValueType.LIST)) { issueAcceptor.addError(\"Expected a List\", el); }else { listtype.setRangeValueType((((listtype.getTypeCheckType()) != null) && ((listtype.getTypeCheckType()) instanceof com.ge.research.sadl.model.ConceptName) ? ((com.ge.research.sadl.model.ConceptName) (listtype.getTypeCheckType())).getRangeValueType() : com.ge.research.sadl.model.ConceptName.RangeValueType.CLASS_OR_DT)); return listtype; } }else { issueAcceptor.addError(((\"Unhandled element type in element in list construct: \" + (el.getClass().getCanonicalName())) + \"; please report\"), expression); if ((metricsProcessor) != null) { metricsProcessor.addMarker(null, MetricsProcessor.ERROR_MARKER_URI, MetricsProcessor.UNCLASSIFIED_FAILURE_URI); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/954/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": ["com.ge.research.sadl.processing.ValidationAcceptor.addError(java.lang.String,com.ge.research.sadl.sADL.Expression)", "com.ge.research.sadl.processing.ValidationAcceptor.addError(((\"Unhandled element type in element in list construct: \" + (el.getClass().getCanonicalName())) + \"; please report\"),com.ge.research.sadl.sADL.Expression)", "el.getClass().getCanonicalName()", "com.ge.research.sadl.sADL.Expression.getClass()"], "Fixed commit": "23c7e2cd5759677a60707a91093cdeb132f170fc", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-09-19T15:12:51Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((res.getInt(\"friendID\")) == userID) { idd = res.getInt(\"userID\"); }else { idd = res.getInt(\"friendID\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5275/buggy-version/src.Database.UserDaoImpl.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "d70d4f6124423bcbb30c1183eb8c55dc221c8620", "Url": "https://api.github.com/repos/gdemu13/ShaurmaTeam", "Date": "2016-07-03T22:43:00Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.wifi.WifiInfo.getSSID()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (ssid != null) { ssid = ssid.toLowerCase(); if (ssid.contains(\"pu@campus\")) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4914/buggy-version/app.src.main.java.simararora.puautologin.Functions.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "b72a1104c4fb7f5ae9c8774e7a4d8ce933d623dd", "Url": "https://api.github.com/repos/simararora7/puautologin", "Date": "2015-03-27T05:31:48Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.schabi.newpipe.SettingsActivity.SettingsFragment.1.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (a != null) { updateSummary(); if (defaultPreferences.getBoolean(USE_TOR_KEY, false)) { if (info.guardianproject.netcipher.proxy.OrbotHelper.isOrbotInstalled(a)) { org.schabi.newpipe.App.configureTor(true); info.guardianproject.netcipher.proxy.OrbotHelper.requestStartTor(a); }else { android.content.Intent intent = info.guardianproject.netcipher.proxy.OrbotHelper.getOrbotInstallIntent(a); a.startActivityForResult(intent, org.schabi.newpipe.SettingsActivity.REQUEST_INSTALL_ORBOT); } }else { org.schabi.newpipe.App.configureTor(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4395/buggy-version/app.src.main.java.org.schabi.newpipe.SettingsActivity.java", "BodyUseAPI": ["info.guardianproject.netcipher.proxy.OrbotHelper.getOrbotInstallIntent(android.app.Activity)", "info.guardianproject.netcipher.proxy.OrbotHelper.requestStartTor(android.app.Activity)", "info.guardianproject.netcipher.proxy.OrbotHelper.isOrbotInstalled(android.app.Activity)", "android.app.Activity.startActivityForResult(android.content.Intent,int)"], "Fixed commit": "d9cd92810089a8080e2cfc60787cdc791e85e184", "Url": "https://api.github.com/repos/TeamNewPipe/NewPipe", "Date": "2016-03-02T22:23:52Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Integer.MAX_VALUE) - offset) > ((b.length()) - minOverlap)) offset += (b.length()) - minOverlap;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5344/buggy-version/src.UtilMethods.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "616c4a72b582dd2c5235fcfd118b872e320977df", "Url": "https://api.github.com/repos/Daniel-Liu-c0deb0t/FastQParse", "Date": "2017-09-11T22:42:36Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(node.getChildNodes().item(ii).getTextContent().isEmpty())) setIpv6(node.getChildNodes().item(ii).getTextContent());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5717/buggy-version/src.main.java.com.weliano.sdk.object.datacenter.ComputeNode.java", "BodyUseAPI": [], "Fixed commit": "25db077a9c794b845f2f7284589b080a6e8bbf84", "Url": "https://api.github.com/repos/weliano/weliano-sdk-for-java", "Date": "2013-07-03T14:04:24Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((soapMessage.getAttachments()) == null) { soapMessage.setAttachments(new java.util.ArrayList<org.apache.cxf.message.Attachment>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3781/buggy-version/rt.ws.security.src.main.java.org.apache.cxf.ws.security.wss4j.AttachmentCallbackHandler.java", "BodyUseAPI": ["org.apache.cxf.binding.soap.SoapMessage.setAttachments(java.util.ArrayList<org.apache.cxf.message.Attachment>)"], "Fixed commit": "19b53fc0db0dd96a824ab83b53b65e0a26835eda", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2016-01-05T16:32:46Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arrayValues.isEmpty()) { defaultValueExpr = newEmptyStringHashSet(); }else { com.helger.jcodemodel.JInvocation arrayAsList = getClasses().ARRAYS.staticInvoke(\"asList\"); for (java.lang.String arrayValue : arrayValues) { arrayAsList.arg(lit(arrayValue)); } defaultValueExpr = com.helger.jcodemodel.JExpr._new(getClasses().HASH_SET.narrow(getClasses().STRING)).arg(arrayAsList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/891/buggy-version/AndroidAnnotations.androidannotations-core.androidannotations.src.main.java.org.androidannotations.internal.core.handler.SharedPrefHandler.java", "BodyUseAPI": [], "Fixed commit": "9d22682d3f9a718c9a4f23be4d857b8d303e50d5", "Url": "https://api.github.com/repos/shiraji/androidannotations", "Date": "2015-11-14T20:10:45Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dsa.iot.dslink.util.json.JsonArray.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (v instanceof org.dsa.iot.dslink.util.json.JsonArray) { org.dsa.iot.dslink.util.json.JsonArray array = ((org.dsa.iot.dslink.util.json.JsonArray) (v)); org.dsa.iot.dslink.methods.responses.Action act = org.dsa.iot.dslink.methods.responses.ListResponse.getOrCreateAction(node, Permission.NONE); org.dsa.iot.dslink.methods.responses.ListResponse.iterateActionMetaData(act, array, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/36/buggy-version/sdk.dslink.src.main.java.org.dsa.iot.dslink.methods.responses.ListResponse.java", "BodyUseAPI": [], "Fixed commit": "e08241b4c400385b9e38581cc8e72cf54583ff37", "Url": "https://api.github.com/repos/IOT-DSA/sdk-dslink-java", "Date": "2016-08-09T17:04:02Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dsa.iot.dslink.util.json.JsonArray.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (v instanceof org.dsa.iot.dslink.util.json.JsonArray) { org.dsa.iot.dslink.util.json.JsonArray array = ((org.dsa.iot.dslink.util.json.JsonArray) (v)); org.dsa.iot.dslink.methods.responses.Action act = org.dsa.iot.dslink.methods.responses.ListResponse.getOrCreateAction(node, Permission.NONE); org.dsa.iot.dslink.methods.responses.ListResponse.iterateActionMetaData(act, array, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/36/buggy-version/sdk.dslink.src.main.java.org.dsa.iot.dslink.methods.responses.ListResponse.java", "BodyUseAPI": [], "Fixed commit": "e08241b4c400385b9e38581cc8e72cf54583ff37", "Url": "https://api.github.com/repos/IOT-DSA/sdk-dslink-java", "Date": "2016-08-09T17:04:02Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((calls) != null) { if (ID == 0) { calls.deleteAllCalls(); }else { calls.deleteCallsByID(ID); } this.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5820/buggy-version/src.maincontroller.MainControllerImpl.java", "BodyUseAPI": [], "Fixed commit": "231599e4e704a9641041189799e3d45199fdf700", "Url": "https://api.github.com/repos/gscaparrotti/SwitchboardManager", "Date": "2016-05-16T11:07:37Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (printDefaultValue) { pretty.append(line.replace(\" \", \" #\")); pretty.append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5850/buggy-version/cores.portal-properties-prettier-core.src.main.java.br.com.thiagomoreira.liferay.plugins.portalpropertiesprettier.PortalPropertiesPrettier.java", "BodyUseAPI": [], "Fixed commit": "99f0985ef905a12eb9bfbff3e5cf87882f901ed0", "Url": "https://api.github.com/repos/tmoreira2020/portal-properties-prettier-app", "Date": "2015-07-04T21:46:12Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.darkware.cltools.utils.ListFile.stripLine(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (data != null) this.lines.add(data);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3530/buggy-version/src.main.java.org.darkware.cltools.utils.ListFile.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "ef7666525e151de8cd6bff217116e5714cc95c7d", "Url": "https://api.github.com/repos/zpxio/WPManager", "Date": "2016-02-12T05:11:37Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.maxiee.heartbeat.database.utils.LabelUtils.hasLabel(android.content.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (id == (com.maxiee.heartbeat.database.utils.LabelUtils.NOT_FOUND)) { ret.add(com.maxiee.heartbeat.database.utils.LabelUtils.addLabel(context, l)); }else { ret.add(com.maxiee.heartbeat.database.utils.LabelUtils.getLabelByLabelId(context, id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5449/buggy-version/app.src.main.java.com.maxiee.heartbeat.database.utils.LabelUtils.java", "BodyUseAPI": ["com.maxiee.heartbeat.database.utils.LabelUtils.getLabelByLabelId(android.content.Context,long)", "java.util.ArrayList<com.maxiee.heartbeat.model.Label>.add(com.maxiee.heartbeat.model.Label)"], "Fixed commit": "689417aa490e1a1a30b37d9c1cc996fb59b4c3a8", "Url": "https://api.github.com/repos/maxiee/HeartBeat", "Date": "2015-11-13T04:22:53Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeConcern.isAcknowledged()) { throw e; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8215/buggy-version/driver-core.src.main.com.mongodb.connection.WriteProtocol.java", "BodyUseAPI": [], "Fixed commit": "8fad64a5778ae70992fd94b917dc3df96f943dc6", "Url": "https://api.github.com/repos/jyemin/mongo-java-driver", "Date": "2015-09-16T15:10:37Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.ucl.medicaldb.Patient.checker.completedObligatoryField(patientID)) && (org.ucl.medicaldb.Patient.checker.isValid(patientID))) && (org.ucl.medicaldb.Patient.checker.isUniqueID(patientID))) { this.patientID = patientID; }else { java.lang.System.out.println(\"Not a valid id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1851/buggy-version/src.main.java.org.ucl.medicaldb.Patient.java", "BodyUseAPI": [], "Fixed commit": "2491dffb50ac7213a1aa49be5bd7d4fdef1e89ce", "Url": "https://api.github.com/repos/kellino/medicaldb", "Date": "2015-11-26T10:41:31Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collidedOn instanceof nl.tudelft.jpacman.level.GhostPlayer) { playerVersusGhostPlayer(player, ((nl.tudelft.jpacman.level.GhostPlayer) (collidedOn))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5968/buggy-version/src.main.java.nl.tudelft.jpacman.level.PlayerCollisions.java", "BodyUseAPI": [], "Fixed commit": "e42bab8da93eb1d221bb2817ef11b1c7494a09ed", "Url": "https://api.github.com/repos/bendebled/jpacman-framework", "Date": "2016-03-26T14:48:51Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(iMonitorID.getStatus().equals(JobState.UNKNOWN))) { iMonitorID.setFailedCount(0); }else { iMonitorID.setLastMonitored(new java.sql.Timestamp(new java.util.Date().getTime())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4137/buggy-version/modules.gfac.gfac-monitor.src.main.java.org.apache.airavata.gfac.monitor.impl.pull.qstat.HPCPullMonitor.java", "BodyUseAPI": ["org.apache.airavata.gfac.core.monitor.MonitorID.setLastMonitored(java.sql.Timestamp)", "org.apache.airavata.gfac.core.monitor.MonitorID.setFailedCount(int)"], "Fixed commit": "53dd791bd1689c3d43196f7654b6b91f17cab189", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2014-07-12T04:08:55Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.yepstudio.legolas.description.ParameterDescription>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (pd.isMuitiParameter()) { try { addMuitiParameter(map, arguments[i]); } catch (java.lang.Exception e) { com.yepstudio.legolas.internal.RequestBuilder.log.e(\"\", e); } }else { map.put(pd.getName(), arguments[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4431/buggy-version/legolas.src.main.java.com.yepstudio.legolas.internal.RequestBuilder.java", "BodyUseAPI": ["com.yepstudio.legolas.description.ParameterDescription.getName()", "java.util.Map<java.lang.String, java.lang.Object>.put(pd.getName(),java.lang.Object)"], "Fixed commit": "5c325e8bd3533e5e44a79a695b89b6df4eb0d446", "Url": "https://api.github.com/repos/zzljob/legolas", "Date": "2014-07-05T09:00:30Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.classDataLoaded)) { this.auditWarnings = ((java.util.Collection<hudson.plugins.findbugs.audit.AuditFingerprint>) (file.read())); this.classDataLoaded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3801/buggy-version/plugin.src.main.java.hudson.plugins.findbugs.audit.FindBugsAudit.java", "BodyUseAPI": [], "Fixed commit": "53e76a448a5256bb61f4ddc1e7c06a5d42418acf", "Url": "https://api.github.com/repos/willtmwu/findbugs-plugin", "Date": "2015-07-16T12:26:31Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (patientVisits == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2719/buggy-version/src.org.ses.android.soap.utils.VisitUtilities.java", "BodyUseAPI": [], "Fixed commit": "a23935f4627b7131bd9657ef1114c305c0e650c1", "Url": "https://api.github.com/repos/hathix/6P", "Date": "2016-01-20T21:43:52Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.api.ConceptService.getConceptByUuid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (((concept != null) && (concept.getDatatype().isNumeric())) && (!(concept instanceof org.openmrs.ConceptNumeric))) { concept = org.openmrs.api.context.Context.getConceptService().getConceptNumeric(concept.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2571/buggy-version/api.src.main.java.org.openmrs.module.metadatadeploy.handler.impl.ConceptDeployHandler.java", "BodyUseAPI": ["org.openmrs.api.context.Context.getConceptService().getConceptNumeric(concept.getId())", "org.openmrs.Concept.getId()"], "Fixed commit": "f361f1197458243a8f51689ca44e183273e58737", "Url": "https://api.github.com/repos/openmrs/openmrs-module-metadatadeploy", "Date": "2015-04-24T21:15:19Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.indexOf(\"CONFLICT:\")) > (-1)) { java.lang.String[] temp = line.split(\":\"); conflictMpesaCode.add(temp[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5625/buggy-version/mifosng-provider.src.main.java.com.conflux.mifosplatform.mpesa.reconcilation.upload.service.UploadWritePlatformServiceJpaRepositoryImpl.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "8cf39492ee1127aca292be751eea0b2a1ec8cc25", "Url": "https://api.github.com/repos/confluxtoo/caritasmifosx", "Date": "2016-02-24T05:48:31Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conflictMpesaCode.size()) > 0) { mpesaCode = \"CONFLICT:\" + (conflictMpesaCode.toString()); }else { mpesaCode = result.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5625/buggy-version/mifosng-provider.src.main.java.com.conflux.mifosplatform.mpesa.reconcilation.upload.service.UploadWritePlatformServiceJpaRepositoryImpl.java", "BodyUseAPI": ["java.util.ArrayList.toString()"], "Fixed commit": "8cf39492ee1127aca292be751eea0b2a1ec8cc25", "Url": "https://api.github.com/repos/confluxtoo/caritasmifosx", "Date": "2016-02-24T05:48:31Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (marker != (myLocation)) { com.vanshil.checkpoint.SelectedActivity.start(this, businesses.get(java.lang.Integer.parseInt(marker.getSnippet()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3856/buggy-version/app.src.main.java.com.vanshil.checkpoint.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(marker.getSnippet())", "com.google.android.gms.maps.model.Marker.getSnippet()", "java.util.List<BusinessResponse.BusinessResult>.get(int)", "com.vanshil.checkpoint.SelectedActivity.start(com.vanshil.checkpoint.MainActivity,businesses.get(java.lang.Integer.parseInt(marker.getSnippet())))"], "Fixed commit": "8a880a8e7466a7c91e77ff163197326516c81f98", "Url": "https://api.github.com/repos/VanshilShah/Checkpoint", "Date": "2016-05-15T12:51:25Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((i.getId()) <= 0) setId(null); else setId(i.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3889/buggy-version/src.main.java.inventory.model.ItemEntity.java", "BodyUseAPI": [], "Fixed commit": "6b10713b256b050c071a42ee0432f2b2ee4384ef", "Url": "https://api.github.com/repos/ibm-cloud-architecture/refarch-integration-inventory-dal", "Date": "2017-05-27T00:25:23Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ivk.receiver) != null) { resolve(ivk.receiver, environment, imports); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3157/buggy-version/src.wyc.stages.NameResolution.java", "BodyUseAPI": ["wyc.stages.NameResolution.resolve(ivk.receiver,java.util.HashMap<java.lang.String, java.util.Set<wyc.lang.Expr>>,java.util.ArrayList<wyc.stages.PkgID>)"], "Fixed commit": "430804cf047eecd20791386ef8452bd2c8b5d766", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-27T06:30:58Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((code.type.receiver()) != null) { environment.push(code.type.receiver()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3157/buggy-version/src.wyil.transforms.BackPropagation.java", "BodyUseAPI": ["code.type.receiver()", "wyil.transforms.BackPropagation.Env.push(code.type.receiver())"], "Fixed commit": "430804cf047eecd20791386ef8452bd2c8b5d766", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-27T06:30:58Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((code.type.ret()) != (Type.T_VOID)) && (code.retval)) { wyil.transforms.Type req = environment.pop(); coerce(req, code.type.ret(), index, entry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3157/buggy-version/src.wyil.transforms.BackPropagation.java", "BodyUseAPI": ["wyil.transforms.BackPropagation.coerce(wyil.transforms.Type,code.type.ret(),int,wyil.lang.Block.Entry)", "code.type.ret()"], "Fixed commit": "430804cf047eecd20791386ef8452bd2c8b5d766", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-27T06:30:58Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (quiz.isMultiple_page()) { link = \"./Quiz/MultipleRes.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7470/buggy-version/src.View.CheckAnswersServlet.java", "BodyUseAPI": [], "Fixed commit": "cd8ffc51dc82de62efb09544a26aa432fe7f52bf", "Url": "https://api.github.com/repos/gdemu13/ShaurmaTeam", "Date": "2016-07-06T06:47:05Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jooq.Record.getValue(SOURCEDOCUMENT.LOCALE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (language.contains(\"_\")) { java.lang.String[] languageCountry = language.split(\"_\"); language = languageCountry[0]; country = languageCountry[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7721/buggy-version/src.de.catma.repository.db.mapper.SourceDocumentMapper.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "77a42cd9fb7a0375b4c2506a083a80cfaa757420", "Url": "https://api.github.com/repos/mpetris/catma", "Date": "2014-09-11T11:19:26Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(net.i2p.i2ptunnel.TunnelController.isClient(_type))) && (!(TunnelController.TYPE_HTTP_SERVER.equals(_type)))) && (!(TunnelController.TYPE_STREAMR_SERVER.equals(_type)))) { config.setProperty(TunnelController.OPT_BUNDLE_REPLY, \"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4409/buggy-version/apps.i2ptunnel.java.src.net.i2p.i2ptunnel.ui.TunnelConfig.java", "BodyUseAPI": [], "Fixed commit": "f34a05c35dc57e9d2dc14c7122a2e1d3f0af7c9c", "Url": "https://api.github.com/repos/i2p/i2p.i2p", "Date": "2016-02-25T13:52:00Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.i2p.i2ptunnel.TunnelController.getType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((type.equals(net.i2p.i2ptunnel.TunnelController.TYPE_HTTP_SERVER)) || (type.equals(net.i2p.i2ptunnel.TunnelController.TYPE_STREAMR_SERVER))) { if (!(_config.containsKey(net.i2p.i2ptunnel.TunnelController.OPT_BUNDLE_REPLY))) _config.setProperty(net.i2p.i2ptunnel.TunnelController.OPT_BUNDLE_REPLY, \"false\"); }else if (!(net.i2p.i2ptunnel.TunnelController.isClient(type))) { _config.setProperty(net.i2p.i2ptunnel.TunnelController.OPT_BUNDLE_REPLY, \"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4409/buggy-version/apps.i2ptunnel.java.src.net.i2p.i2ptunnel.TunnelController.java", "BodyUseAPI": ["net.i2p.i2ptunnel.TunnelController.isClient(java.lang.String)"], "Fixed commit": "f34a05c35dc57e9d2dc14c7122a2e1d3f0af7c9c", "Url": "https://api.github.com/repos/i2p/i2p.i2p", "Date": "2016-02-25T13:52:00Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.eclipse.dawnsci.analysis.dataset.impl.AbstractDataset.squeezeShape(dataset.getShape(), false).length) == 0) { dataset = dataset.getSliceView().squeeze(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7397/buggy-version/org.eclipse.dawnsci.hdf5.src.org.eclipse.dawnsci.hdf5.operation.HierarchicalFileExecutionVisitor.java", "BodyUseAPI": ["dataset.getSliceView().squeeze()", "org.eclipse.dawnsci.analysis.api.dataset.IDataset.getSliceView()"], "Fixed commit": "ebc2ece65f415c2ccf0195d363ff9e723de99bf4", "Url": "https://api.github.com/repos/eclipse/dawnsci", "Date": "2015-06-12T10:49:31Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataset.getRank()) == 0) { int[] shape = new int[newShape.length]; java.util.Arrays.fill(shape, 1); dataset.setShape(shape); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7397/buggy-version/org.eclipse.dawnsci.hdf5.src.org.eclipse.dawnsci.hdf5.operation.HierarchicalFileExecutionVisitor.java", "BodyUseAPI": ["org.eclipse.dawnsci.analysis.api.dataset.IDataset.setShape(int[])"], "Fixed commit": "ebc2ece65f415c2ccf0195d363ff9e723de99bf4", "Url": "https://api.github.com/repos/eclipse/dawnsci", "Date": "2015-06-12T10:49:31Z"},
{"Line": "=>834", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.cdt.core.IAddress.add(int)", "org.eclipse.cdt.core.IAddress.add(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((modBlockStart.distanceTo(cachedBlockStart).longValue()) >= 0) && ((cachedBlockEnd.distanceTo(modBlockEnd).longValue()) >= 0)) { int pos = ((int) (modBlockStart.distanceTo(cachedBlockStart).longValue())); java.lang.System.arraycopy(modBlock, pos, cachedBlock.fBlock, 0, ((int) (cachedBlock.fLength))); }else if (((cachedBlockStart.distanceTo(modBlockStart).longValue()) >= 0) && ((modBlockStart.distanceTo(cachedBlockEnd).longValue()) > 0)) { int pos = ((int) (cachedBlockStart.distanceTo(modBlockStart).longValue())); int length = ((int) (modBlockStart.distanceTo(cachedBlockEnd).longValue())); java.lang.System.arraycopy(modBlock, 0, cachedBlock.fBlock, pos, length); }else if (((cachedBlockStart.distanceTo(modBlockEnd).longValue()) > 0) && ((modBlockEnd.distanceTo(cachedBlockEnd).longValue()) >= 0)) { int pos = ((int) (modBlockStart.distanceTo(cachedBlockStart).longValue())); int length = ((int) (cachedBlockStart.distanceTo(modBlockEnd).longValue())); java.lang.System.arraycopy(modBlock, pos, cachedBlock.fBlock, 0, length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7091/buggy-version/dsf-gdb.org.eclipse.cdt.dsf.gdb.src.org.eclipse.cdt.dsf.mi.service.MIMemory.java", "BodyUseAPI": ["org.eclipse.cdt.core.IAddress.distanceTo(org.eclipse.cdt.core.IAddress)", "org.eclipse.cdt.core.IAddress.distanceTo(org.eclipse.cdt.core.IAddress)", "org.eclipse.cdt.core.IAddress.distanceTo(org.eclipse.cdt.core.IAddress)", "org.eclipse.cdt.core.IAddress.distanceTo(org.eclipse.cdt.core.IAddress)", "org.eclipse.cdt.core.IAddress.distanceTo(org.eclipse.cdt.core.IAddress)", "modBlockStart.distanceTo(cachedBlockEnd).longValue()", "modBlockEnd.distanceTo(cachedBlockEnd).longValue()", "modBlockStart.distanceTo(cachedBlockEnd).longValue()", "cachedBlockStart.distanceTo(modBlockStart).longValue()", "cachedBlockStart.distanceTo(modBlockStart).longValue()", "modBlockStart.distanceTo(cachedBlockStart).longValue()", "cachedBlockStart.distanceTo(modBlockEnd).longValue()", "cachedBlockStart.distanceTo(modBlockEnd).longValue()", "org.eclipse.cdt.core.IAddress.distanceTo(org.eclipse.cdt.core.IAddress)", "org.eclipse.cdt.core.IAddress.distanceTo(org.eclipse.cdt.core.IAddress)", "modBlockStart.distanceTo(cachedBlockStart).longValue()", "org.eclipse.cdt.core.IAddress.distanceTo(org.eclipse.cdt.core.IAddress)", "org.eclipse.cdt.core.IAddress.distanceTo(org.eclipse.cdt.core.IAddress)"], "Fixed commit": "00ca041f6bd35ee1b6d206c737055f8f354df887", "Url": "https://api.github.com/repos/NVIDIA/cdt-nsight", "Date": "2012-09-24T14:21:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.size()) != (this._matrix.size())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5067/buggy-version/ca.leesoft.SudokuMatrix.java", "BodyUseAPI": [], "Fixed commit": "d56b2ed43370e3a86fb953734ae7973c2d197738", "Url": "https://api.github.com/repos/stelee/sudoku", "Date": "2017-10-01T23:56:32Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((item.getType()) != (org.bukkit.Material.CARPET)) || ((item.getType()) != (org.bukkit.Material.STAINED_GLASS_PANE))) { e.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/908/buggy-version/src.ch.JarJarBings12.helpbook.BookEvent.InventoryMoveEvent.java", "BodyUseAPI": [], "Fixed commit": "e4d07fe7f8110a093ef8f68c96411c687a2ba1c4", "Url": "https://api.github.com/repos/JarJarBings12/HelpBook", "Date": "2014-09-20T21:19:30Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getSlot()) == (e.getRawSlot())) { org.bukkit.entity.Player pl = ((org.bukkit.entity.Player) (e.getWhoClicked())); if (e.getInventory().getName().contains(\"\ufffd6Plugin Data\")) { e.setCancelled(true); pl.updateInventory(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/908/buggy-version/src.ch.JarJarBings12.helpbook.BookEvent.InventoryMoveEvent.java", "BodyUseAPI": ["org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)", "org.bukkit.event.inventory.InventoryClickEvent.getWhoClicked()", "e.getInventory().getName().contains(java.lang.String)", "e.getInventory().getName()", "org.bukkit.event.inventory.InventoryClickEvent.getInventory()"], "Fixed commit": "e4d07fe7f8110a093ef8f68c96411c687a2ba1c4", "Url": "https://api.github.com/repos/JarJarBings12/HelpBook", "Date": "2014-09-20T21:19:30Z"},
{"Line": "=>2769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (account.isMarkMessageAsReadOnView()) { message.setFlag(Flag.SEEN, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2708/buggy-version/src.com.fsck.k9.controller.MessagingController.java", "BodyUseAPI": [], "Fixed commit": "9a5ba8001cf13fe4a5e133522ba5149b100ec9a9", "Url": "https://api.github.com/repos/justdave/k-9", "Date": "2012-09-10T00:31:58Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { startDragAndDrop(data, shadowBuilder, card, 0); }else { startDrag(data, shadowBuilder, card, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6220/buggy-version/app.src.main.java.com.cow006.gui.GameView.java", "BodyUseAPI": [], "Fixed commit": "337eb0e2fedfd507b2a6ce3097cbe00cdcc7c712", "Url": "https://api.github.com/repos/Denzed/Cow.006", "Date": "2016-12-17T19:46:16Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.mcgill.mcb.pcingola.bigDataScript.task.TaskDependency.depOperator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!needsUpdate) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/53/buggy-version/src.ca.mcgill.mcb.pcingola.bigDataScript.lang.ExpressionTask.java", "BodyUseAPI": [], "Fixed commit": "ae9e7c865938475844161b50d5950f1bfa32eef0", "Url": "https://api.github.com/repos/pcingola/BigDataScript", "Date": "2014-12-19T18:25:07Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playground.dziemke.analysis.TripAnalyzerV2Extended.onlySpecificActivityEndType) && (playground.dziemke.analysis.TripAnalyzerV2Extended.onlySpecificActivityStartType)) { org.jfree.util.Log.warn((\"onlySpecificActivityEndType and onlySpecificActivityStartType activated at the same time. This\" + \" may lead to results that are hard to interpret: rather not use these options simultaneously.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/740/buggy-version/playgrounds.dziemke.src.main.java.playground.dziemke.analysis.TripAnalyzerV2Extended.java", "BodyUseAPI": [], "Fixed commit": "fb3285b3240f7b12063a894d122add9cd0364353", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2016-12-06T13:21:26Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playground.dziemke.analysis.TripAnalyzerV2Extended.onlySpecificActivityStartType) { if (!(trip.getActivityEndActType().equals(playground.dziemke.analysis.TripAnalyzerV2Extended.spedificActivityStartType))) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/740/buggy-version/playgrounds.dziemke.src.main.java.playground.dziemke.analysis.TripAnalyzerV2Extended.java", "BodyUseAPI": [], "Fixed commit": "fb3285b3240f7b12063a894d122add9cd0364353", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2016-12-06T13:21:26Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playground.dziemke.analysis.TripAnalyzerV2Extended.useDistanceFilter) { playground.dziemke.analysis.TripAnalyzerV2Extended.outputDirectory = (playground.dziemke.analysis.TripAnalyzerV2Extended.outputDirectory) + \"_dist\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/740/buggy-version/playgrounds.dziemke.src.main.java.playground.dziemke.analysis.TripAnalyzerV2Extended.java", "BodyUseAPI": [], "Fixed commit": "fb3285b3240f7b12063a894d122add9cd0364353", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2016-12-06T13:21:26Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (url.contains(\"urn%3Abtih%3A\")) { url = url.replace(\"urn%3Abtih%3A\", \"urn:btih:\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/428/buggy-version/src.gui.com.frostwire.android.gui.transfers.TransferManager.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "7f9c4b3a7d4b28c17092356f7bd0654b51c70a6c", "Url": "https://api.github.com/repos/gubatron/frostwire-android", "Date": "2014-10-23T22:19:13Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (urlAtopic == urlBtopic) { wurl = m_topicmatch; }else { wurl = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2646/buggy-version/src.ehupatras.webrecommendation.sequencealignment.SequenceAlignmentBacktrack.java", "BodyUseAPI": [], "Fixed commit": "f6a627498d2b77e2ae6931bc60e210e9256cc8c6", "Url": "https://api.github.com/repos/theodori/WebRecommendation", "Date": "2014-04-15T11:56:14Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (urlAtopic == urlBtopic) { wurl = m_topicmatch; }else { wurl = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2646/buggy-version/src.ehupatras.webrecommendation.sequencealignment.SequenceAlignmentLevenshtein.java", "BodyUseAPI": [], "Fixed commit": "f6a627498d2b77e2ae6931bc60e210e9256cc8c6", "Url": "https://api.github.com/repos/theodori/WebRecommendation", "Date": "2014-04-15T11:56:14Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((part) != null) { page.bringToTop(part); }else { part = page.showView(View.ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3121/buggy-version/xstampp.xstpa.src.xstpa.ui.CSContextEditor.java", "BodyUseAPI": [], "Fixed commit": "38b77add2bf42a8ae232d8cbec84356df0b868fa", "Url": "https://api.github.com/repos/SE-Stuttgart/XSTAMPP", "Date": "2017-08-15T15:50:26Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { android.support.design.widget.Snackbar snackbar = android.support.design.widget.Snackbar.make(findViewById(R.id.home_coordinator_layout), \"New delivery created!\", Snackbar.LENGTH_LONG); snackbar.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5319/buggy-version/app.src.main.java.nz.emissary.emissaryapp.activities.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "060eeff26cffb9ae165626bbad9563c317e8be33", "Url": "https://api.github.com/repos/SDupZ/EmissaryApp", "Date": "2016-03-12T04:58:43Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bindingResult.hasErrors()) { return \"redirect:/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3638/buggy-version/spring-boot-soes.src.main.java.com.sahajsoft.soes.controller.OrderControllerImpl.java", "BodyUseAPI": [], "Fixed commit": "c5438d8b42aa9c78ac8e755d2a2c858d8cf964fb", "Url": "https://api.github.com/repos/nsaravanas/my-space", "Date": "2015-12-15T03:45:53Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<android.database.Cursor>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (c4 != null) { tvmessage.setText((\"Queru Executed successfully.Number of rows returned :\" + (c4.getCount()))); if ((c4.getCount()) > 0) { AndroidDatabaseManager.indexInfo.maincursor = c4; refreshTable(1); } }else { tvmessage.setText(\"Queru Executed successfully\"); refreshTable(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2266/buggy-version/AndroidDatabaseManager.java", "BodyUseAPI": ["android.database.Cursor.getCount()", "android.database.Cursor.getCount()", "android.widget.TextView.setText((\"Queru Executed successfully.Number of rows returned :\" + (c4.getCount())))"], "Fixed commit": "64c7527dcb90c031938422e9852db4d063f7da4c", "Url": "https://api.github.com/repos/sanathp/DatabaseManager_For_Android", "Date": "2015-02-19T06:53:42Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (destination.getName().equals(\"Inbox\")) { fs = ((Email.FileSystemFolder) (destination)); persistStore.moveFolder(this.getPath(), fs.getPath()); }else { fsdest = ((Email.FileSystemFolderProxy) (destination)); persistStore.moveFolder(this.getPath(), fsdest.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4490/buggy-version/EmailClient.src.Email.FileSystemFolder.java", "BodyUseAPI": [], "Fixed commit": "9a5d26a5f9fc9bb53abfa0a115d5886e92ef33ab", "Url": "https://api.github.com/repos/er1/cloaked-dangerzone", "Date": "2013-06-17T04:59:48Z"},
{"Line": "=>1100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (token != (TokenManager.emptyToken)) setOption(new ch.ethz.inf.vs.californium.coap.Option(token, ch.ethz.inf.vs.californium.coap.registries.OptionNumberRegistry.TOKEN));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4612/buggy-version/californium.src.main.java.ch.ethz.inf.vs.californium.coap.Message.java", "BodyUseAPI": ["ch.ethz.inf.vs.californium.coap.Message.setOption(ch.ethz.inf.vs.californium.coap.Option)"], "Fixed commit": "d224cb067d438e7673a1d0f9b1d1c16992838139", "Url": "https://api.github.com/repos/mkovatsc/Californium", "Date": "2012-11-23T22:11:32Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (docsProcessed != 0) { start = docsProcessed + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7497/buggy-version/src.main.java.org.linkedgov.taskhopper.Dataset.java", "BodyUseAPI": [], "Fixed commit": "98f9da83bebc0cb777aa85f994ec8bc46db3bec2", "Url": "https://api.github.com/repos/linkedgov/taskhopper", "Date": "2011-09-26T14:06:42Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7524/buggy-version/src.minecraft.com.github.AbrarSyed.SecretRooms.client.SecretKey.java", "BodyUseAPI": [], "Fixed commit": "e760dd5cf3203cb114d87d83c7d8729005dbd057", "Url": "https://api.github.com/repos/AbrarSyed/SecretRoomsMod-forge", "Date": "2013-04-16T23:44:29Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.itsnat.impl.core.clientdoc.ClientDocumentImpl.getBrowser()", "org.itsnat.impl.comp.ItsNatHTMLFormCompChangeBased.getHTMLElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((browser instanceof org.itsnat.impl.core.browser.web.webkit.BrowserWebKit) && (((org.itsnat.impl.core.browser.web.webkit.BrowserWebKit) (browser)).isChangeEventNotFiredUseBlur(elem))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8885/buggy-version/itsnat_server.src.main.java.org.itsnat.impl.comp.ItsNatHTMLFormCompChangeBasedSharedImpl.java", "BodyUseAPI": [], "Fixed commit": "2b62a68087a531092a62bc53f89c6eb213c73112", "Url": "https://api.github.com/repos/jmarranz/itsnat_server", "Date": "2015-08-28T21:29:52Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.parseInt(order)) > 9000) { return this.desc; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5865/buggy-version/src.main.java.org.thiki.kanban.foundation.apiDocument.NumberFormatter.java", "BodyUseAPI": [], "Fixed commit": "aa336de4e8de5cf7d76420c9d4d9710762036b59", "Url": "https://api.github.com/repos/thiki-org/thiki-kanban-backend", "Date": "2016-09-17T08:55:31Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.societies.context.userPrediction.impl.UserContextPrediction.predictContextTraining(java.lang.String,java.util.HashMap<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (prdValue != null) { predictedCtxAttr.setStringValue(prdValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4249/buggy-version/context-management.UserContextPrediction.src.main.java.org.societies.context.userPrediction.impl.UserContextPrediction.java", "BodyUseAPI": ["org.societies.api.context.model.CtxAttribute.setStringValue(java.lang.String)"], "Fixed commit": "14b4363f6f12d3b453aa063f4d4c864e8dddfb52", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-09-09T09:29:41Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (predictedCtxAttr == null) { throw new java.lang.NullPointerException((\"attribute requested for prediction doesn't exist, attrID:\" + ctxAttrID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4249/buggy-version/context-management.UserContextPrediction.src.main.java.org.societies.context.userPrediction.impl.UserContextPrediction.java", "BodyUseAPI": [], "Fixed commit": "14b4363f6f12d3b453aa063f4d4c864e8dddfb52", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-09-09T09:29:41Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((l.size()) > 0) { return l.toArray(new java.net.URL[l.size()]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6056/buggy-version/user.src.com.google.gwt.resources.ext.ResourceGeneratorUtil.java", "BodyUseAPI": ["java.util.List<java.net.URL>.toArray(java.net.URL[])", "java.util.List<java.net.URL>.size()"], "Fixed commit": "2cc811278529f23f4620456427c0511c0032ba7d", "Url": "https://api.github.com/repos/chris-malloy-mri/gwt", "Date": "2017-12-13T17:40:22Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tokenList.length) == 1) { return new java.lang.String[1]; }else { java.lang.String[] parameters = new java.lang.String[(tokenList.length) - 1]; for (int i = 0; i < (parameters.length); i++) { parameters[i] = tokenList[(i + 1)]; } return parameters; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6322/buggy-version/src.com.nexus.simplify.Parser.java", "BodyUseAPI": [], "Fixed commit": "42d5aee0c7a7195cec4d42e99f60bf0f65e643df", "Url": "https://api.github.com/repos/cs2103jan2015-w15-2j/main", "Date": "2015-03-03T15:55:44Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(a.getIpOrigem().equals(c.getIp()))) { arq[i] = a.getName(); ips[i] = a.getIpOrigem(); i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2676/buggy-version/src.Model.Servidor.java", "BodyUseAPI": ["Model.Arquivo.getName()", "Model.Arquivo.getIpOrigem()"], "Fixed commit": "46735c7bc6ea9cdba70d105c5b82da78c396f67c", "Url": "https://api.github.com/repos/grmiranda/LavaDutoServer", "Date": "2016-08-17T04:40:05Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cal.equals(calT)) dbacc.setPresentPlayer(cal, player, fChecked);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3696/buggy-version/ExFlexFociAndroid.src.com.gzroger.exflexfoci.ExFlexFociActivity.java", "BodyUseAPI": ["com.gzroger.exflexfoci.Dbacc.setPresentPlayer(java.util.Calendar,com.gzroger.exflexfoci.Player,boolean)"], "Fixed commit": "6ed49bdb2fe7a5b7a1bd0d7709b969f3d1990ca6", "Url": "https://api.github.com/repos/gzroger/ExFlexFoci", "Date": "2012-04-15T22:06:02Z"},
{"Line": "=>4660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((qualifyingType != null) && ((qualifyingType.getDeclaration()) instanceof com.redhat.ceylon.compiler.typechecker.model.Constructor)) { qualifyingType = qualifyingType.getQualifyingType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5129/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.typechecker.model.ProducedType.getQualifyingType()"], "Fixed commit": "8936c4d12539e62353b7d9c2753747a19e6407e7", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2015-01-08T14:40:34Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getBlock().getType()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((material == null) || (!(plugin.canGainCraftEfficency(material)))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4995/buggy-version/WaywardProfessions.src.main.java.net.wayward_realms.waywardprofessions.BlockBreakListener.java", "BodyUseAPI": [], "Fixed commit": "16ccb359a4becee5c734cdd12736f41bd1cfaf18", "Url": "https://api.github.com/repos/WaywardRealms/Wayward", "Date": "2014-05-28T20:06:37Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (json.isNull(\"result\")) { org.json.JSONObject errorObj = json.getJSONObject(\"error\"); java.lang.String errorMsg = errorObj.getString(\"message\"); throw new com.shuffle.bitcoin.CoinNetworkException(errorMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7678/buggy-version/shuffler.src.main.java.com.shuffle.bitcoin.blockchain.Btcd.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "0478bc64f1a83bc54c9f270a3f113f87edb5924f", "Url": "https://api.github.com/repos/vnnkl/Shufflepuff", "Date": "2016-08-04T06:28:00Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdditionDate) != null) { res = ((java.util.Date) (mAdditionDate.clone())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8137/buggy-version/app.src.main.java.com.nbossard.packlist.model.Item.java", "BodyUseAPI": [], "Fixed commit": "934cf45cd07f1033dbdc9542de62cb20dad6efc1", "Url": "https://api.github.com/repos/nbossard/packlist", "Date": "2016-10-03T21:37:34Z"},
{"Line": "=>2291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clientID % 100) == 0) Main._logger.outputLog(((str + \"=>\") + strStat));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6565/buggy-version/plugins.plugins.XactThrashingScenario.java", "BodyUseAPI": [], "Fixed commit": "b31bdc9e28db881791d81074b1c7b99d6086e107", "Url": "https://api.github.com/repos/yksuh/thrashing_study", "Date": "2014-05-13T02:11:29Z"},
{"Line": "=>2250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clientID % 100) == 0) Main._logger.outputLog(((str + \"=>\") + strStat));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6565/buggy-version/plugins.plugins.XactThrashingScenario.java", "BodyUseAPI": [], "Fixed commit": "b31bdc9e28db881791d81074b1c7b99d6086e107", "Url": "https://api.github.com/repos/yksuh/thrashing_study", "Date": "2014-05-13T02:11:29Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((url.contains(\"companies\")) && (url.contains(\"/jobs/\"))) && (!(url.endsWith(\"jobs\")))) { title = doc.getElementsByClass(\"job-title\").get(0).text(); body = doc.getElementsByClass(\"three\").get(0).text(); com.company.Indexer.add(url, title, body, date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7392/buggy-version/src.com.company.Crawler.java", "BodyUseAPI": ["com.company.Indexer.add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "b83e515e4dde7b3dd3fe76a2ab42d7cc17825c64", "Url": "https://api.github.com/repos/tagizaade/IRFinalProject", "Date": "2016-01-06T05:53:14Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Character.isUpperCase(className.charAt(0))) { return className; }else { return new java.lang.StringBuilder().append(java.lang.Character.toUpperCase(className.charAt(0))).append(className.substring(1)).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1022/buggy-version/src.com.magnet.plugin.ui.ControllerNameBoxItemListener.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.StringBuilder.append(char)", "java.lang.Character.toUpperCase(char)", "java.lang.String.substring(int)", "java.lang.String.charAt(int)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "3a1864d29401e8e909cd30f8ad3967cf2a661846", "Url": "https://api.github.com/repos/magnetsystems/r2m-plugin-android", "Date": "2015-01-31T00:23:55Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cursor.moveToFirst()) { out.println((((\"id : \" + (cursor.getInt(0))) + \", content : \") + (cursor.getString(1)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2744/buggy-version/src.main.java.com.tianli.DBSelectServlet.java", "BodyUseAPI": ["android.database.Cursor.getString(int)", "android.database.Cursor.getInt(int)", "java.io.PrintWriter.println((((\"id : \" + (cursor.getInt(0))) + \", content : \") + (cursor.getString(1))))"], "Fixed commit": "2afa93a23ebff6faf021706ce00dc9778a0f3ccd", "Url": "https://api.github.com/repos/tianliplus/appservice", "Date": "2014-06-21T14:57:57Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controllers.managers.TagCloudBuilder.wordList.size()) == 0) break; else continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2192/buggy-version/app.controllers.managers.TagCloudBuilder.java", "BodyUseAPI": [], "Fixed commit": "4339f47fa884ccecc993f39c5a82ebee1511e85a", "Url": "https://api.github.com/repos/ahmedkhattab/RiskPerception", "Date": "2015-03-15T13:03:06Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file == null) { inputStream = getClass().getClassLoader().getResourceAsStream(org.csu.cs517.tmcs.map.RailroadSystemMapParser.DEFAULT_FILE); }else { inputStream = new java.io.FileInputStream(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8547/buggy-version/TrainManagementControlSystem.src.org.csu.cs517.tmcs.map.RailroadSystemMapParser.java", "BodyUseAPI": [], "Fixed commit": "850b0e81523a48cb24cc89de1cb29a5aa5d1e648", "Url": "https://api.github.com/repos/rudrasharma/TCS", "Date": "2014-05-01T01:09:20Z"},
{"Line": "=>1049", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["__eval.getCurrentEnvt().getSimpleVariable(this.getQualifiedName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (var != null) { return var; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1772/buggy-version/src.org.rascalmpl.semantics.dynamic.Assignable.java", "BodyUseAPI": [], "Fixed commit": "9897c189e7d75e000f7e3a52023f2893df8926f5", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2016-03-30T17:56:03Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nutz.dao.entity.LinkField.getValue(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { org.nutz.dao.impl.link.DoDeleteLinkVisitor.log.infof(\"Value of LinkField(@%s-->%s.%s) is null, ingore\", lnk.getLinkType(), lnk.getEntity().getType().getSimpleName(), lnk.getHostField().getName()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2776/buggy-version/src.org.nutz.dao.impl.link.DoDeleteLinkVisitor.java", "BodyUseAPI": [], "Fixed commit": "aabf925d5eecc75649922bf05ab432c0fbe6df1a", "Url": "https://api.github.com/repos/hzl7652/nutz", "Date": "2012-10-26T01:32:42Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.startsWith(rmStr)) { return str.substring(rmStr.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3757/buggy-version/src.main.java.com.jeeffy.code.util.StringUtil.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int)"], "Fixed commit": "73f3326184d6f210bf26d81a00c61c35ba6d1138", "Url": "https://api.github.com/repos/jeeffy/code-generator", "Date": "2017-07-24T08:01:40Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, java.lang.String>.get(Records.FOLDER_LOCATION_COLUMN)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (directoryString == null) { java.lang.System.err.println(\"Skipping malformed exec folder\"); continue loop; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4836/buggy-version/src.main.java.westrun.Collect.java", "BodyUseAPI": [], "Fixed commit": "730c0f08262fbdd718389b8ef4d736d63245b37d", "Url": "https://api.github.com/repos/alexandrebouchard/westrun", "Date": "2016-04-24T19:07:33Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.common.tools.SourceArgumentsResolver.searchModulePath(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((dir == null) || (!(dir.isDirectory()))) { if (modName.contains(\"/\")) { throw new com.redhat.ceylon.common.tool.ToolUsageError(com.redhat.ceylon.common.tools.CeylonToolMessages.msg(\"error.invalid.module.or.file\", modName)); } for (java.lang.String suffix : suffixes) { if (modName.endsWith(suffix)) { throw new com.redhat.ceylon.common.tool.ToolUsageError(com.redhat.ceylon.common.tools.CeylonToolMessages.msg(\"error.file.not.found\", modName)); } } java.lang.String ps = sourceDirs.toString(); ps = ps.substring(1, ((ps.length()) - 1)); throw new com.redhat.ceylon.common.tool.ToolUsageError(com.redhat.ceylon.common.tools.CeylonToolMessages.msg(\"error.module.not.found\", modName, ps)); }else { throw new com.redhat.ceylon.common.tool.ToolUsageError(com.redhat.ceylon.common.tools.CeylonToolMessages.msg(\"error.not.module\", modName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5114/buggy-version/src.com.redhat.ceylon.common.tools.SourceArgumentsResolver.java", "BodyUseAPI": [], "Fixed commit": "caac085867f7821867f92e147c510394271ad3d1", "Url": "https://api.github.com/repos/ceylon/ceylon-common", "Date": "2014-09-24T21:45:13Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ca != null) { makeCV(ca.length); assign(cv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/961/buggy-version/src.tools.util.CV.java", "BodyUseAPI": [], "Fixed commit": "7233ea9f720ac93240b826c804366be602daa010", "Url": "https://api.github.com/repos/stephenfreund/RoadRunner", "Date": "2013-01-17T00:53:01Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (matchName || matchType) { result = instance; }else { result = super.instantiate(beanDefinition, beanName, owner); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/699/buggy-version/k2-core.src.main.java.com.k2.core.K2InstantiationStrategy.java", "BodyUseAPI": [], "Fixed commit": "93d4a353f89d26694974e5489d0b1e3213462e49", "Url": "https://api.github.com/repos/katari/k2", "Date": "2017-02-05T00:57:14Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newGraphNeeded) { graph = buildTinkerPopGraph(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/38/buggy-version/grakn-graph.src.main.java.ai.grakn.factory.AbstractInternalFactory.java", "BodyUseAPI": [], "Fixed commit": "cd9a06e0396f1ac9dfebf6abf72000f5ec17a2a8", "Url": "https://api.github.com/repos/fppt/grakn", "Date": "2016-11-23T17:42:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vDigit.rpm.dto.Contractors.getContractor(c.getPhone())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (saved != null) { c.setId(saved.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2200/buggy-version/src.main.java.com.vDigit.rpm.dto.Contractors.java", "BodyUseAPI": ["com.vDigit.rpm.dto.Contractor.getId()", "com.vDigit.rpm.dto.Contractor.setId(saved.getId())"], "Fixed commit": "88dc213b6f56629747b015a5d6741efddc296c37", "Url": "https://api.github.com/repos/vDigit-solutions/rpm", "Date": "2017-07-09T21:16:29Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vDigit.rpm.dao.ManagerDao.findByPhoneLike(pm.getPhone())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(org.springframework.util.CollectionUtils.isEmpty(manager))) { pm.setId(manager.iterator().next().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2200/buggy-version/src.main.java.com.vDigit.rpm.dto.PropertyManagers.java", "BodyUseAPI": ["manager.iterator().next().getId()", "com.vDigit.rpm.dto.PropertyManager.setId(manager.iterator().next().getId())", "manager.iterator().next()", "java.util.List<com.vDigit.rpm.dto.PropertyManager>.iterator()"], "Fixed commit": "88dc213b6f56629747b015a5d6741efddc296c37", "Url": "https://api.github.com/repos/vDigit-solutions/rpm", "Date": "2017-07-09T21:16:29Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.matrunks.shooter.models.World.rag_doll.isHidden())) { if (hitOnRagDoll(com.matrunks.shooter.models.World.rag_doll)) { java.lang.System.out.println(\"Hit\"); com.matrunks.shooter.models.World.rag_doll.damage(10); com.matrunks.shooter.models.World.rag_doll.Freeze(); Assets.hit.play(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4944/buggy-version/Shooter.src.com.matrunks.shooter.models.World.java", "BodyUseAPI": ["com.matrunks.shooter.models.RagDoll.damage(int)", "com.matrunks.shooter.models.World.hitOnRagDoll(com.matrunks.shooter.models.RagDoll)", "com.matrunks.shooter.models.RagDoll.Freeze()"], "Fixed commit": "7bcf13f97d4696d7c5e3aacb1da73e346ef6df6a", "Url": "https://api.github.com/repos/Matrunks/Shooter", "Date": "2013-04-26T16:15:35Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((af.getId()) != null) { map.setIdColumn(af.getId().getIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2833/buggy-version/src.main.java.org.gbif.ipt.service.manage.impl.ResourceManagerImpl.java", "BodyUseAPI": ["org.gbif.ipt.model.ExtensionMapping.setIdColumn(af.getId().getIndex())", "af.getId().getIndex()", "org.gbif.dwca.io.ArchiveFile.getId()"], "Fixed commit": "6cd7c0480e477fae178b446df338c4558ee54924", "Url": "https://api.github.com/repos/gbif/ipt", "Date": "2016-09-30T10:33:48Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.phenotips.security.authorization.AuthorizationService.hasAccess(this.userManager.getUser(userName),Right.EDIT,patient.getDocument())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hasEditRights) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/23/buggy-version/components.patient-data-sharing.receiver-api.src.main.java.org.phenotips.data.receive.internal.DefaultReceivePatientData.java", "BodyUseAPI": [], "Fixed commit": "c4bc3a4b52c4f969eb4f3a34e397b5c6226f6087", "Url": "https://api.github.com/repos/mjshepherd/phenotips", "Date": "2014-12-22T21:39:18Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sikuli.script.Region.exists(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (huoqujiangli != null) { huoqujiangli.click(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/813/buggy-version/src.main.java.com.peace.auto.bl.task.JiangLi.java", "BodyUseAPI": ["org.sikuli.script.Match.click()"], "Fixed commit": "b17ff5149b76a5d13d3c342d68ff00294289efa5", "Url": "https://api.github.com/repos/peace0phmind/blauto", "Date": "2017-01-09T13:52:37Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(mModified.remove(event))) && (event.isCancelled())) || ((event.getMessage()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4665/buggy-version/src.au.com.addstar.pandora.modules.KeywordFilter.java", "BodyUseAPI": [], "Fixed commit": "f5ec2e87ea0d2c1cc0d6b2d8936e8c7076fd22b8", "Url": "https://api.github.com/repos/addstar/Pandora", "Date": "2013-11-20T09:22:48Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_handler) != null) _handler.uncaughtException(thread, ex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7899/buggy-version/src.main.java.com.jexbox.ExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "dd54f328eae3f344e261a7ab95e53985837ae561", "Url": "https://api.github.com/repos/jexbox/java-core", "Date": "2014-01-25T11:01:43Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (commandLookup.contains(command.getName(), command.getParameterCount())) { org.terasology.logic.console.internal.ConsoleImpl.logger.warn(\"Command already registered with same name and param count: {} : {}, skipping\", command.getName(), command.getParameterCount()); }else { commands.add(command); commandLookup.put(command.getName(), command.getParameterCount(), command); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2511/buggy-version/engine.src.main.java.org.terasology.logic.console.internal.ConsoleImpl.java", "BodyUseAPI": ["com.google.common.collect.Table<java.lang.String, java.lang.Integer, org.terasology.logic.console.internal.CommandInfo>.put(command.getName(),command.getParameterCount(),org.terasology.logic.console.internal.CommandInfo)", "org.terasology.logic.console.internal.CommandInfo.getName()", "org.terasology.logic.console.internal.CommandInfo.getParameterCount()", "org.terasology.logic.console.internal.CommandInfo.getParameterCount()", "java.util.List<org.terasology.logic.console.internal.CommandInfo>.add(org.terasology.logic.console.internal.CommandInfo)", "org.terasology.logic.console.internal.CommandInfo.getName()", "org.slf4j.Logger.warn(java.lang.String,command.getName(),command.getParameterCount())"], "Fixed commit": "3e113145676c09eadd7ec15a99928f786819392a", "Url": "https://api.github.com/repos/synopia/Terasology", "Date": "2014-01-18T05:39:21Z"},
{"Line": "=>2482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tmatesoft.svn.core.internal.wc17.db.SVNWCDb.getColumnText(org.tmatesoft.svn.core.internal.wc17.db.SVNSqlJetStatement,ACTUAL_NODE__Fields.conflict_new)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(conflict_new)) { conflict_new = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2075/buggy-version/svnkit.src.main.java.org.tmatesoft.svn.core.internal.wc17.db.SVNWCDb.java", "BodyUseAPI": [], "Fixed commit": "8cbe9bc780f6a16cfb149cad98fec79090c686fd", "Url": "https://api.github.com/repos/jenkinsci/svnkit", "Date": "2012-11-16T14:19:22Z"},
{"Line": "=>2486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tmatesoft.svn.core.internal.wc17.db.SVNWCDb.getColumnText(org.tmatesoft.svn.core.internal.wc17.db.SVNSqlJetStatement,ACTUAL_NODE__Fields.conflict_working)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(conflict_working)) { conflict_working = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2075/buggy-version/svnkit.src.main.java.org.tmatesoft.svn.core.internal.wc17.db.SVNWCDb.java", "BodyUseAPI": [], "Fixed commit": "8cbe9bc780f6a16cfb149cad98fec79090c686fd", "Url": "https://api.github.com/repos/jenkinsci/svnkit", "Date": "2012-11-16T14:19:22Z"},
{"Line": "=>2478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tmatesoft.svn.core.internal.wc17.db.SVNWCDb.getColumnText(org.tmatesoft.svn.core.internal.wc17.db.SVNSqlJetStatement,ACTUAL_NODE__Fields.conflict_old)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(conflict_old)) { conflict_old = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2075/buggy-version/svnkit.src.main.java.org.tmatesoft.svn.core.internal.wc17.db.SVNWCDb.java", "BodyUseAPI": [], "Fixed commit": "8cbe9bc780f6a16cfb149cad98fec79090c686fd", "Url": "https://api.github.com/repos/jenkinsci/svnkit", "Date": "2012-11-16T14:19:22Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (classes == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1802/buggy-version/src.main.java.io.github.lukehutch.fastclasspathscanner.classgraph.ClassGraphBuilder.java", "BodyUseAPI": [], "Fixed commit": "7de37526f9875cf7ea485f4a47ca384fb7d159cb", "Url": "https://api.github.com/repos/rbkcapdm/fast-classpath-scanner", "Date": "2015-02-04T14:09:41Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(turn.getCommonInfo().getTurnType().equals(TurnType.Attack))) || (!(turn.getCommonInfo().getFights().isEmpty()))) result.add(main.Utils.finish);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1656/buggy-version/src.main.Utils.java", "BodyUseAPI": [], "Fixed commit": "073ab1c42467d5c5362be01e1ceb2898fc0e1e2b", "Url": "https://api.github.com/repos/xormrr/Durak", "Date": "2017-03-20T20:48:35Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((hashKeyAttributeValue) != null) && (entityInformation.isGlobalIndexRangeKeyProperty(hashKeyPropertyName))) { hasIndexRangeKeyCondition = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3102/buggy-version/src.main.java.org.socialsignin.spring.data.dynamodb.repository.query.AbstractDynamoDBQueryCriteria.java", "BodyUseAPI": [], "Fixed commit": "4b936172d4e92b70fce1910dfa83a39e16fc8ac5", "Url": "https://api.github.com/repos/michaellavelle/spring-data-dynamodb", "Date": "2014-02-05T09:21:09Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((hashKeyAttributeValue) != null) && (entityInformation.isGlobalIndexHashKeyProperty(hashKeyPropertyName))) { hasIndexHashKeyEqualCondition = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3102/buggy-version/src.main.java.org.socialsignin.spring.data.dynamodb.repository.query.AbstractDynamoDBQueryCriteria.java", "BodyUseAPI": [], "Fixed commit": "4b936172d4e92b70fce1910dfa83a39e16fc8ac5", "Url": "https://api.github.com/repos/michaellavelle/spring-data-dynamodb", "Date": "2014-02-05T09:21:09Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((session) != null) session.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6147/buggy-version/src.main.java.cassandra.benchmark.service.internal.scenario.datastax.DatastaxBenchmark.java", "BodyUseAPI": [], "Fixed commit": "f5d76571268129f52b02e9463df69e56fd527b94", "Url": "https://api.github.com/repos/cosh/CassandraBenchmark", "Date": "2014-06-29T17:37:31Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cluster) != null) cluster.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6147/buggy-version/src.main.java.cassandra.benchmark.service.internal.scenario.datastax.DatastaxBenchmark.java", "BodyUseAPI": [], "Fixed commit": "f5d76571268129f52b02e9463df69e56fd527b94", "Url": "https://api.github.com/repos/cosh/CassandraBenchmark", "Date": "2014-06-29T17:37:31Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.astyanaxContext) != null) { this.astyanaxContext.start(); this.cluster = astyanaxContext.getClient(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6147/buggy-version/src.main.java.cassandra.benchmark.service.internal.scenario.astyanax.AstyanaxBenchmark.java", "BodyUseAPI": [], "Fixed commit": "f5d76571268129f52b02e9463df69e56fd527b94", "Url": "https://api.github.com/repos/cosh/CassandraBenchmark", "Date": "2014-06-29T17:37:31Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((astyanaxContext) != null) astyanaxContext.shutdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6147/buggy-version/src.main.java.cassandra.benchmark.service.internal.scenario.astyanax.AstyanaxBenchmark.java", "BodyUseAPI": [], "Fixed commit": "f5d76571268129f52b02e9463df69e56fd527b94", "Url": "https://api.github.com/repos/cosh/CassandraBenchmark", "Date": "2014-06-29T17:37:31Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.layer.atlas.messagetypes.threepartimage.GallerySender.scaleBitmap(android.content.Context,android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bitmap == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7898/buggy-version/layer-atlas.src.main.java.com.layer.atlas.messagetypes.threepartimage.GallerySender.java", "BodyUseAPI": [], "Fixed commit": "aa4d917be7b07cac44234dfc2d19a6cfaf4f058a", "Url": "https://api.github.com/repos/5minutes/Atlas-Android", "Date": "2016-08-29T12:22:58Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (imageInfo.isLogScaled()) { if (value == min) { weight = 0; }else if (value == max) { weight = 1; }else { weight = getLinearWeightFromLogValue(value, min, max); } }else { weight = getLinearWeightFromLinearValue(value, min, max); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5586/buggy-version/beam-core.src.main.java.org.esa.beam.framework.datamodel.ImageLegend.java", "BodyUseAPI": [], "Fixed commit": "6ad60a150a937cbad59604999bf973202f55dfa2", "Url": "https://api.github.com/repos/seadas/beam", "Date": "2016-02-29T17:51:56Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) { result = getDeterministicUnsupervisedMappings(cache, cache2); if (!(mappingResults.containsKey(cache))) { mappingResults.put(cache, new java.util.HashMap<de.uni_leipzig.simba.cache.Cache, de.uni_leipzig.simba.data.Mapping>()); } mappingResults.get(cache).put(cache2, result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2972/buggy-version/src.main.java.org.aksw.lassie.core.ExpressiveSchemaMappingGenerator.java", "BodyUseAPI": [], "Fixed commit": "9d6adf7a0b6caa595b2fc4669ab76faf7af92e1d", "Url": "https://api.github.com/repos/AKSW/LASSIE", "Date": "2013-10-01T21:30:25Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((articleInfo.uploadTime) == null) { articleInfo.uploadTime = new java.util.Date(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/351/buggy-version/ArticleManagerServer.ArticleManagerServer.src.database.Public.java", "BodyUseAPI": [], "Fixed commit": "9e215b6f4a2651220cac68360bc61a73182a07e2", "Url": "https://api.github.com/repos/NThering/UCF-COP4331C-17Fall-0001-T15", "Date": "2017-11-28T17:53:58Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trigger) != null) { currentPlace = trigger.getMyPlacesInMap().get(position); }else { currentPlace = currentMap.getPlacesInMap().get(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1560/buggy-version/AppLowerOS.app.src.main.java.dynamicGridActivity.CheeseDynamicAdapter.java", "BodyUseAPI": [], "Fixed commit": "e67856f72e5784d42700e0d0ca92694511ab0d51", "Url": "https://api.github.com/repos/artkar22/inzynierka", "Date": "2017-01-04T21:24:02Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.triggerSimulet) != null) { init(triggerSimulet.getMyPlacesInMap()); }else { init(currentMap.getPlacesInMap()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1560/buggy-version/AppLowerOS.app.src.main.java.dynamicGrid.BaseDynamicGridAdapter.java", "BodyUseAPI": [], "Fixed commit": "e67856f72e5784d42700e0d0ca92694511ab0d51", "Url": "https://api.github.com/repos/artkar22/inzynierka", "Date": "2017-01-04T21:24:02Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((applicationData.getTriggers().size()) > 0) { gridView.setAdapter(new dynamicGridActivity.CheeseDynamicAdapter(this, applicationData.getSimulets(), applicationData.getTriggers().get(0), applicationData.getAllMaps().get(0), true)); }else { gridView.setAdapter(new dynamicGridActivity.CheeseDynamicAdapter(this, applicationData.getSimulets(), null, applicationData.getAllMaps().get(0), true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1560/buggy-version/AppLowerOS.app.src.main.java.dynamicGridActivity.GridActivity.java", "BodyUseAPI": ["applicationData.getTriggers().get(int)", "ApplicationData.ApplicationData.getSimulets()", "ApplicationData.ApplicationData.getAllMaps()", "applicationData.getAllMaps().get(int)", "applicationData.getAllMaps().get(int)", "dynamicGrid.DynamicGridView.setAdapter(dynamicGridActivity.CheeseDynamicAdapter)", "ApplicationData.ApplicationData.getSimulets()", "dynamicGrid.DynamicGridView.setAdapter(dynamicGridActivity.CheeseDynamicAdapter)", "ApplicationData.ApplicationData.getAllMaps()", "ApplicationData.ApplicationData.getTriggers()"], "Fixed commit": "e67856f72e5784d42700e0d0ca92694511ab0d51", "Url": "https://api.github.com/repos/artkar22/inzynierka", "Date": "2017-01-04T21:24:02Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toolbar) != null) { getSupportActionBar().setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8135/buggy-version/app.src.main.java.edu.grinnell.grinnell_publications_android.Activities.MainSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "5546863ff42a9d5a74e24790c8c1d4bdca469b3b", "Url": "https://api.github.com/repos/GrinnellAppDev/Publications-Android", "Date": "2016-12-04T03:03:06Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getResources().getIdentifier(java.lang.String,java.lang.String,getActivity().getPackageName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (resId != 0) { android.graphics.drawable.Drawable d = getActivity().getResources().getDrawable(resId); imageView.setImageDrawable(d); imageView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7442/buggy-version/app.src.main.java.com.byteshaft.licenseservice.fragments.QuestionsFragment.java", "BodyUseAPI": ["getActivity().getResources().getDrawable(int)"], "Fixed commit": "e898ddd35668dfdb1f318f718e13a32689b05a08", "Url": "https://api.github.com/repos/rb-shahid/lisence-service", "Date": "2016-05-09T05:37:58Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.karumi.dexter.Dexter.instance) != null) { com.karumi.dexter.Dexter.instance.onActivityDestroyed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5811/buggy-version/dexter.src.main.java.com.karumi.dexter.Dexter.java", "BodyUseAPI": [], "Fixed commit": "d713fc52814e4e48a040b63bdb5e3a0e615eba9e", "Url": "https://api.github.com/repos/Coppernic/Dexter", "Date": "2017-05-11T14:42:47Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isFactory) != null) { try (java.io.InputStream is = isFactory.get(source)) { install(is, dest); } }else { super.install(source, dest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7981/buggy-version/kbox.kibe.src.main.java.org.aksw.kbox.kibe.KBInstall.java", "BodyUseAPI": [], "Fixed commit": "a7694a93260012ab3c47beecbc927ecc2a9d9a8a", "Url": "https://api.github.com/repos/AKSW/KBox", "Date": "2017-03-05T23:44:48Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Tree.Declaration.getMainToken()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (token == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1018/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.old-sources.com.redhat.ceylon.eclipse.code.correct.ChangeDeclarationProposal.java", "BodyUseAPI": [], "Fixed commit": "7ae308ee8eefa3bfa189cd1773b6a2ff8f616f59", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2016-03-20T21:41:05Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.theme.equals(THEME_DARK)) view.setBackgroundColor(getResources().getColor(R.color.colorPrimaryDarker)); else if (this.theme.equals(THEME_LIGHT)) view.setBackgroundColor(getResources().getColor(R.color.colorPrimaryLighter));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8325/buggy-version/app.src.main.java.locale.audioplayer.MainActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "c072f2923026060566b18d8911e5176318c9d92b", "Url": "https://api.github.com/repos/asarry/AudioPlayer", "Date": "2017-11-30T22:09:58Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jbutton == (btnC1stPlayer)) { engine.computerMove(); refreshGUI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4786/buggy-version/src.TicTacJoeGUI.java", "BodyUseAPI": [], "Fixed commit": "2598f899a16c2d9e816725c17b34c6d55e478413", "Url": "https://api.github.com/repos/denn0134/TicTacJoe", "Date": "2016-12-30T20:46:34Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TicTacToe.checkVictory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (victoryState == (TicTacToe.VictoryState.XWINS)) javax.swing.JOptionPane.showMessageDialog(null, \"X has won\"); else if (victoryState == (TicTacToe.VictoryState.OWINS)) javax.swing.JOptionPane.showMessageDialog(null, \"O has won\"); else if (victoryState == (TicTacToe.VictoryState.DRAW)) javax.swing.JOptionPane.showMessageDialog(null, \"DRAW\"); else if ((engine.gameMode) != (TicTacToe.GameMode.TWOPLAYER)) { engine.computerMove(); refreshGUI(); victoryState = engine.checkVictory(); if (victoryState == (TicTacToe.VictoryState.XWINS)) javax.swing.JOptionPane.showMessageDialog(null, \"X has won\"); else if (victoryState == (TicTacToe.VictoryState.OWINS)) javax.swing.JOptionPane.showMessageDialog(null, \"O has won\"); else if (victoryState == (TicTacToe.VictoryState.DRAW)) javax.swing.JOptionPane.showMessageDialog(null, \"DRAW\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4786/buggy-version/src.TicTacJoeGUI.java", "BodyUseAPI": [], "Fixed commit": "2598f899a16c2d9e816725c17b34c6d55e478413", "Url": "https://api.github.com/repos/denn0134/TicTacJoe", "Date": "2016-12-30T20:46:34Z"},
{"Line": "=>2389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tmp.length()) == 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6293/buggy-version/web.app.dao.DatasetsDAO.java", "BodyUseAPI": [], "Fixed commit": "52ec0e3cede00670dae4418e8f2916aa50534947", "Url": "https://api.github.com/repos/thomas-young-2013/Wherehows-eXtension", "Date": "2017-07-06T08:08:56Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((out) != null) { out.println(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8422/buggy-version/src.ghzclickerserver.ServerController.java", "BodyUseAPI": [], "Fixed commit": "fe41fe3b626e6202aadb08665a1eb5d81150f909", "Url": "https://api.github.com/repos/thesymbol/GHzClickerMAHProjekt", "Date": "2014-04-28T10:58:41Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((out) != null) { out.println(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8422/buggy-version/src.ghzclicker.NetworkClient.java", "BodyUseAPI": [], "Fixed commit": "fe41fe3b626e6202aadb08665a1eb5d81150f909", "Url": "https://api.github.com/repos/thesymbol/GHzClickerMAHProjekt", "Date": "2014-04-28T10:58:41Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Looper.myLooper()) == (android.os.Looper.getMainLooper())) { cityAdapter.notifyDataSetChanged(); }else { com.hy.materialweather.Utils.sendEmptyMessage(mHandler, com.hy.materialweather.ui.activity.UPDATE_LIST_VIEW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4618/buggy-version/app.src.main.java.com.hy.materialweather.ui.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a90824e0498f3996ef99864c21422e64a8fe634f", "Url": "https://api.github.com/repos/hyUrbanManager/MaterialWeather", "Date": "2017-03-20T05:44:19Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isExpired(java.time.LocalDateTime.now().toEpochSecond(java.time.ZoneOffset.UTC))) { this.status = AuctionStatus.EXPIRED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4563/buggy-version/workspace.auction.dbimport.src.main.java.mrwolf.dbimport.model.AuctionRecord.java", "BodyUseAPI": [], "Fixed commit": "ed7ecfdd622703ed5ae03eaf30521a0b733eb07d", "Url": "https://api.github.com/repos/mzingg/wow_ah_analysis", "Date": "2015-01-11T13:50:11Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deplacementValide) { personnnageSelectionne.setFinPlacement(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/750/buggy-version/src.Map.java", "BodyUseAPI": [], "Fixed commit": "4dae90afd75cfac7ab2b7b58de415824c78f6845", "Url": "https://api.github.com/repos/frederic-prochnow/Projet-dut-n2", "Date": "2016-05-06T14:59:33Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (opcode > 97) { opcode -= 96; mod1 = 1; mod2 = 1; }else if (opcode > 63) { opcode -= 64; mod2 = 1; }else { opcode -= 32; mod1 = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4606/buggy-version/src.backend.Computer.java", "BodyUseAPI": [], "Fixed commit": "263cd2ccc212677e7b8bf5628390a8946c86b17f", "Url": "https://api.github.com/repos/Ballester/ProjetoPS", "Date": "2016-10-19T23:24:46Z"},
{"Line": "=>1232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (as == null) { if (matchAny) { } return informationSpaces(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3312/buggy-version/src.main.java.net.sharkfw.knowledgeBase.inmemory.InMemoSharkKB.java", "BodyUseAPI": [], "Fixed commit": "ceb34a6aeeabc335ac5ae8c03993e2cfc082fa11", "Url": "https://api.github.com/repos/SharedKnowledge/SharkFW", "Date": "2016-08-23T14:04:30Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(APIStrings.METHOD)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (method.equals(APIStrings.LEADER_BOARD)) { org.json.JSONArray arr = json.getJSONArray(APIStrings.ITEMS); for (int i = 0; i < (arr.length()); i++) { org.json.JSONObject jsonItem = arr.getJSONObject(i); ru.mishaignatov.touristquiz.game.LeaderBoardItem item = new ru.mishaignatov.touristquiz.game.LeaderBoardItem(jsonItem.getString(APIStrings.NAME), java.lang.Integer.parseInt(jsonItem.getString(APIStrings.PLACE)), java.lang.Integer.parseInt(jsonItem.getString(APIStrings.SCORES))); list.add(item); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7380/buggy-version/app.src.main.java.ru.mishaignatov.touristquiz.presenters.LeaderBoardPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "f2532bd1b7df3964100eab30fe60c0c4de2cf5e0", "Url": "https://api.github.com/repos/imsnow/TouristQuiz", "Date": "2016-02-16T08:28:16Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((baseGeometry.getParent()) == (parentGeometry.innerGeometry)) { colors = parentGeometry.colors; }else { de.jreality.shader.Color[] newColors = new de.jreality.shader.Color[baseGeometry.getFacesIndices().length]; int i = 0; java.util.List<unam.dcct.view.geometry.Face> parentFaces = parentGeometry.getFaces(); for (unam.dcct.view.geometry.Face f : baseGeometry.getFaces()) { unam.dcct.view.geometry.Face parentFace = f.getParent(); newColors[(i++)] = parentGeometry.colors[parentFaces.indexOf(parentFace)]; } colors = newColors; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8786/buggy-version/src.unam.dcct.view.tools.ColorFacesTool.java", "BodyUseAPI": [], "Fixed commit": "c588993023ce9346d12837fa340a9cbef8db6026", "Url": "https://api.github.com/repos/fdsmora/DCCT", "Date": "2016-02-02T21:10:33Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iconUrl.indexOf(\"/\")) == 0) { if (urlStr.endsWith(\"/\")) { iconUrl = iconUrl.substring(1); } iconUrl = urlStr + iconUrl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5357/buggy-version/src.main.java.com.teardowall.task.IconGenerator.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "521048c5cc4c59505897e55c524d361fab4e410f", "Url": "https://api.github.com/repos/liyang1069/teardowall", "Date": "2017-01-23T03:04:44Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x2 >= (width)) x2 -= width;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8152/buggy-version/app.src.main.java.ru.ifmo.md.lesson1.WhirlView.java", "BodyUseAPI": [], "Fixed commit": "dd86786b4fc873b5c870885be63840a5a49e37f5", "Url": "https://api.github.com/repos/ilya4544/lesson1", "Date": "2014-09-15T16:47:21Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(check.containsKey(sizeColorMap.getSizeId()))) { sizeDtos.add(sizeDto); check.put(sizeColorMap.getSizeId(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4811/buggy-version/src.main.java.com.weavers.duqhun.business.impl.ProductServiceImpl.java", "BodyUseAPI": ["com.weavers.duqhun.domain.ProductSizeColorMap.getSizeId()", "java.util.HashMap<java.lang.Long, java.lang.Object>.put(sizeColorMap.getSizeId(),<nulltype>)"], "Fixed commit": "25d5efb589fd03f30417c962ba995dabe2e6b047", "Url": "https://api.github.com/repos/lakshmanb4u/duqhanBackend", "Date": "2017-01-16T15:14:24Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(check1.containsKey(sizeColorMap.getColorId()))) { colorDtos.add(colorDto); check1.put(sizeColorMap.getColorId(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4811/buggy-version/src.main.java.com.weavers.duqhun.business.impl.ProductServiceImpl.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Long, java.lang.Object>.put(sizeColorMap.getColorId(),<nulltype>)", "com.weavers.duqhun.domain.ProductSizeColorMap.getColorId()"], "Fixed commit": "25d5efb589fd03f30417c962ba995dabe2e6b047", "Url": "https://api.github.com/repos/lakshmanb4u/duqhanBackend", "Date": "2017-01-16T15:14:24Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.serde2.compression.CompDe.init(java.util.Map<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (compDeResponse != null) { return org.apache.hadoop.hive.serde2.compression.CompDeServiceLoader.compDe.init(config); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7735/buggy-version/serde.src.java.org.apache.hadoop.hive.serde2.compression.CompDeServiceLoader.java", "BodyUseAPI": [], "Fixed commit": "9fe0376e18e8b1a8fb016020aafa163246073645", "Url": "https://api.github.com/repos/kliewkliew/hive", "Date": "2016-07-20T15:10:11Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.bogus.geocaching.egpx.BuildConfig.DEBUG) { android.util.Log.i(org.bogus.domowygpx.activities.OAuthSigningActivity.LOG_TAG, (\"OAuth URI 2 \" + uri2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7294/buggy-version/src.org.bogus.domowygpx.activities.OAuthSigningActivity.java", "BodyUseAPI": [], "Fixed commit": "7dfbeb8efe375663e32ac0eefb5a4ecbff683df1", "Url": "https://api.github.com/repos/f-ranek/opencaching4locus", "Date": "2014-04-17T22:37:37Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.bogus.geocaching.egpx.BuildConfig.DEBUG) { android.util.Log.i(org.bogus.domowygpx.activities.OAuthSigningActivity.LOG_TAG, (\"OAuth URI 3 \" + uri3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7294/buggy-version/src.org.bogus.domowygpx.activities.OAuthSigningActivity.java", "BodyUseAPI": [], "Fixed commit": "7dfbeb8efe375663e32ac0eefb5a4ecbff683df1", "Url": "https://api.github.com/repos/f-ranek/opencaching4locus", "Date": "2014-04-17T22:37:37Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progress) != null) { progress.dismiss(); progress = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7294/buggy-version/src.org.bogus.domowygpx.activities.OAuthSigningActivity.java", "BodyUseAPI": [], "Fixed commit": "7dfbeb8efe375663e32ac0eefb5a4ecbff683df1", "Url": "https://api.github.com/repos/f-ranek/opencaching4locus", "Date": "2014-04-17T22:37:37Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.bogus.geocaching.egpx.BuildConfig.DEBUG) { android.util.Log.i(org.bogus.domowygpx.activities.OAuthSigningActivity.LOG_TAG, (\"OAuth URI 1 \" + uri1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7294/buggy-version/src.org.bogus.domowygpx.activities.OAuthSigningActivity.java", "BodyUseAPI": [], "Fixed commit": "7dfbeb8efe375663e32ac0eefb5a4ecbff683df1", "Url": "https://api.github.com/repos/f-ranek/opencaching4locus", "Date": "2014-04-17T22:37:37Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.Set<js.rbuddyapp.IPhotoListener>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (listeners.isEmpty()) listenersMap.remove(receiptId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1729/buggy-version/RBuddyApp.src.js.rbuddyapp.SimplePhotoStore.java", "BodyUseAPI": [], "Fixed commit": "8b1d7e692f095ec1cf1b93f296587bb2ee2c1ff3", "Url": "https://api.github.com/repos/jpsember/RBuddy", "Date": "2014-06-26T07:26:55Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.Set<js.rbuddyapp.IPhotoListener>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (listeners.isEmpty()) listenersMap.remove(receiptId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1729/buggy-version/RBuddyApp.src.js.rbuddyapp.DrivePhotoStore.java", "BodyUseAPI": [], "Fixed commit": "8b1d7e692f095ec1cf1b93f296587bb2ee2c1ff3", "Url": "https://api.github.com/repos/jpsember/RBuddy", "Date": "2014-06-26T07:26:55Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.uni.freiburg.iig.telematik.swat.workbench.SwatTabView.getInstance().getComponentCount()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8442/buggy-version/src.de.uni.freiburg.iig.telematik.swat.workbench.action.SaveActiveComponentAction.java", "BodyUseAPI": [], "Fixed commit": "8ac5d5857e666386b9e1a03eb547e6cd7ed04a24", "Url": "https://api.github.com/repos/iig-uni-freiburg/SWAT20", "Date": "2016-03-02T14:41:18Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((analysedContextFigures.size()) > 0) { java.util.ArrayList<husacct.common.dto.AbstractDTO> tmp = new java.util.ArrayList<husacct.common.dto.AbstractDTO>(); for (husacct.graphics.presentation.figures.BaseFigure figure : analysedContextFigures) if ((!(figure.isLine())) && (!(figure.isParent()))) { husacct.common.dto.AbstractDTO dto = getFigureMap().getModuleDTO(figure); if (dto instanceof husacct.common.dto.AnalysedModuleDTO) { husacct.common.dto.AnalysedModuleDTO moduleDTO = ((husacct.common.dto.AnalysedModuleDTO) (getFigureMap().getModuleDTO(figure))); for (java.lang.String parentName : parentNames) { java.lang.String[] partParentName = parentName.split(\"\\\\.\"); java.lang.String[] partModuleParentName = moduleDTO.uniqueName.split(\"\\\\.\"); if (!(allChildren.containsKey(partModuleParentName[0]))) { if (!(partParentName[0].equals(partModuleParentName[0]))) { if (dto != null) { tmp.add(dto); break; }else { logger.debug((((figure.getName()) + \" -> \") + figure)); } } } } } }else if ((!(figure.isLine())) && (!(figure.isModule()))) { java.util.ArrayList<husacct.common.dto.AbstractDTO> knownChildren = getChildrenOf(figure.getName()); if ((knownChildren.size()) > 0) allChildren.put(figure.getName(), knownChildren); } if ((tmp.size()) > 0) allChildren.put(\"\", tmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7252/buggy-version/src.husacct.graphics.task.AnalysedController.java", "BodyUseAPI": [], "Fixed commit": "3a3231e276bb74946092fa750008e4dfc13b9cd6", "Url": "https://api.github.com/repos/krageon/HUSACCT", "Date": "2013-09-08T16:40:43Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["moduleDTO.uniqueName.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(allChildren.containsKey(partModuleParentName[0]))) { if (!(partParentName[0].equals(partModuleParentName[0]))) { if (dto != null) { tmp.add(dto); break; }else { logger.debug((((figure.getName()) + \" -> \") + figure)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7252/buggy-version/src.husacct.graphics.task.AnalysedController.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "3a3231e276bb74946092fa750008e4dfc13b9cd6", "Url": "https://api.github.com/repos/krageon/HUSACCT", "Date": "2013-09-08T16:40:43Z"},
{"Line": "=>1494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.splicemachine.db.iapi.services.sanity.SanityManager.DEBUG) { com.splicemachine.db.iapi.services.sanity.SanityManager.DEBUG_PRINT(\"COMPRESS\", (\"agent.canCompress() \" + (agent.canCompress()))); com.splicemachine.db.iapi.services.sanity.SanityManager.DEBUG_PRINT(\"COMPRESS\", (\"totalSize \" + totalSize)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8815/buggy-version/db-drda.src.main.java.com.splicemachine.db.impl.drda.DDMWriter.java", "BodyUseAPI": [], "Fixed commit": "39fb0db67952d22c58b80b5ec39151dc7da045fd", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2016-12-10T20:01:46Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((firstNumber.getText()) == null) || (firstNumber.getText().toString().isEmpty())) { firstNumber.setError(\"Please input data\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3492/buggy-version/app.src.main.java.up1.mycalculator.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(java.lang.String)"], "Fixed commit": "b7442aa84634a37576b98803849334075e1341df", "Url": "https://api.github.com/repos/up1/basic-android-calculator", "Date": "2016-01-25T16:33:02Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((secondNumber.getText()) == null) || (secondNumber.getText().toString().isEmpty())) { secondNumber.setError(\"Please input data\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3492/buggy-version/app.src.main.java.up1.mycalculator.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(java.lang.String)"], "Fixed commit": "b7442aa84634a37576b98803849334075e1341df", "Url": "https://api.github.com/repos/up1/basic-android-calculator", "Date": "2016-01-25T16:33:02Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AndroidRun.flagView.equals(\"Menu\")) logicMenu.buttonClick(screenX, screenY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/433/buggy-version/core.src.com.FortPinnsvin.fallingman.GameInputListener.java", "BodyUseAPI": [], "Fixed commit": "bd1fa86edcddcc381c2500bb8efeb6bdbebc5742", "Url": "https://api.github.com/repos/FortPinnsvin/fallingman", "Date": "2014-06-24T11:52:18Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dataString.equals(\"\"))) { matchStartPos = (dataString.length()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4282/buggy-version/src.fancy4.taskie.model.TaskieParser.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "294631ede4a976c7ba372700b32d0320f4e72b43", "Url": "https://api.github.com/repos/cs2103aug2015-w13-1j/main", "Date": "2015-10-11T06:16:10Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (reqUser.equals(null)) { resp.getWriter().println(\"Null Parameter\"); }else { com.ciandt.gcc.User user = new com.ciandt.gcc.User(); if (reqUser.contains(setMail)) { try { resp.getWriter().println(user.QueryContactsAncestor(reqUser)); } catch (org.json.JSONException e) { e.printStackTrace(); } }else if (reqUser.equals(\"all\")) { try { resp.getWriter().println(user.QueryContacts()); } catch (org.json.JSONException e) { e.printStackTrace(); } }else { resp.getWriter().println(\"Invalid Parameter\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1271/buggy-version/src.main.java.com.ciandt.gcc.SendContacts.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.equals(java.lang.String)", "com.ciandt.gcc.User.QueryContactsAncestor(java.lang.String)", "resp.getWriter().println(user.QueryContactsAncestor(reqUser))"], "Fixed commit": "e9f21c1dc677d85806460b58ecd172e0eb42ec7c", "Url": "https://api.github.com/repos/ciandt-dev/google-contacts-crawler", "Date": "2015-04-09T17:40:23Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedCountry) == null) { setSelectedCountry(country); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/9130/buggy-version/lib.src.main.java.com.auth0.android.lock.views.CountryCodeSelectorView.java", "BodyUseAPI": [], "Fixed commit": "252950281e986a8d66a4abf394482c289ba0c2f5", "Url": "https://api.github.com/repos/auth0/Lock.Android", "Date": "2016-06-02T15:12:21Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index <= 0) { index = newInv.indexOf(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7413/buggy-version/src.ca.agnate.RepairDispenser.RDBlockListener.java", "BodyUseAPI": [], "Fixed commit": "4455931cc47e2a59c3d745bbf177d5a784562b2b", "Url": "https://api.github.com/repos/Agnate/RepairDispenser", "Date": "2011-12-23T20:26:17Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOnCanceledListener) != null) { mOnCanceledListener.onCanceled(task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6111/buggy-version/task-manager.src.main.java.org.unfoldingword.tools.taskmanager.SimpleTaskWatcher.java", "BodyUseAPI": [], "Fixed commit": "7379fdf5db70704c22096d0e6d8a9348812f5f53", "Url": "https://api.github.com/repos/unfoldingWord-dev/android-task-manager", "Date": "2016-12-29T19:24:37Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<soot.jimple.infoflow.data.AccessPath, soot.jimple.infoflow.data.AccessPath>.putIfAbsent(soot.jimple.infoflow.data.AccessPath,soot.jimple.infoflow.data.AccessPath)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tracingEnabled) && (oldAP != ap)) reuseCounter.incrementAndGet();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1497/buggy-version/src.soot.jimple.infoflow.data.FlowDroidMemoryManager.java", "BodyUseAPI": [], "Fixed commit": "088527f85455e1c610b9a8fd81a8449d4d458ace", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow", "Date": "2015-08-07T15:42:41Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(HttpHeaders.ACCEPT)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (acceptHeader != null) { for (final java.lang.String accept : com.google.common.base.Splitter.on(',').split(acceptHeader)) { try { final javax.ws.rs.core.MediaType mediaType = javax.ws.rs.core.MediaType.valueOf(accept); final java.lang.String subtype = mediaType.getSubtype().toLowerCase(); if ((subtype.equals(\"json\")) || (subtype.endsWith(\"+json\"))) { return new net.ripe.db.whois.api.rest.StreamingMarshalJson(); }else if ((subtype.equals(\"xml\")) || (subtype.endsWith(\"+xml\"))) { return new net.ripe.db.whois.api.rest.StreamingMarshalXml(); } } catch (java.lang.IllegalArgumentException ignored) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1541/buggy-version/whois-api.src.main.java.net.ripe.db.whois.api.rest.WhoisRestService.java", "BodyUseAPI": ["com.google.common.base.Splitter.on(',').split(java.lang.String)"], "Fixed commit": "f466f15c029721fe4c3e1ee091ac4f21d5a58b6c", "Url": "https://api.github.com/repos/RIPE-NCC/whois", "Date": "2013-12-13T10:39:17Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(outStk.empty())) throw new ru.ifmo.md.lesson4.CalculationException(\"Malformed expression\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7099/buggy-version/app.src.main.java.ru.ifmo.md.lesson4.ExpressionParser.java", "BodyUseAPI": [], "Fixed commit": "9c1003520da5a65ab2b5bc02897bcea5ebac22b6", "Url": "https://api.github.com/repos/knah/lesson4", "Date": "2014-10-05T17:55:37Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mojang.mojam.mod.ModSystem.numEntitiesLoaded()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (modentloaded <= 0) { modentloaded = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3175/buggy-version/src.com.mojang.mojam.entity.building.SpawnerEntity.java", "BodyUseAPI": [], "Fixed commit": "65ca6ba6a0ed24d83ee4b4f7ff0c4ee2c016d26c", "Url": "https://api.github.com/repos/KyleBrodie/Catacomb-Snatch", "Date": "2012-11-17T23:31:29Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((directory != null) && (!(directory.isDirectory()))) { if (!(directory.mkdirs())) { java.lang.System.out.println((\"Cannot create directory: \" + (directory.getPath()))); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1163/buggy-version/src.SerializationControl.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.File.mkdirs()", "java.io.File.getPath()"], "Fixed commit": "f82566f63d129169cf98ad4b25865d2ce421af2f", "Url": "https://api.github.com/repos/supercontact/PhotoMagician", "Date": "2016-09-26T18:34:49Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bldr.length()) > 0) { labels.put(labelName, bldr.toString().substring(0, ((bldr.length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3698/buggy-version/code.iaas.service-discovery.api.src.main.java.io.cattle.platform.servicediscovery.api.service.impl.ServiceDiscoveryApiServiceImpl.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.StringBuilder.length()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "c2d88c07a1b2f945c2694ee75f7223079a3b8c96", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2015-07-24T17:34:09Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xabber.xmpp.delay.Delay.getDelay(org.jivesoftware.smack.packet.Message)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (delay != null) { notify = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4931/buggy-version/app.src.main.java.com.xabber.android.data.extension.muc.RoomChat.java", "BodyUseAPI": [], "Fixed commit": "9cbd34fcc6b0b32cf93c2f3a4ab7825b772fe690", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2015-07-08T23:53:48Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputPath) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5042/buggy-version/extGIA.src.es.icarto.gvsig.extgia.consultas.Composite.java", "BodyUseAPI": [], "Fixed commit": "1c91eb30fe94061a7cef1b7c6cee5e82db49a2c2", "Url": "https://api.github.com/repos/iCarto/siga", "Date": "2014-09-15T18:39:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) map.remove(field);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/772/buggy-version/modules.kontraktor-reallive.src.main.java.org.nustaq.reallive.records.MapRecord.java", "BodyUseAPI": [], "Fixed commit": "fc99acae269434641ee790dd303a9eb4d43fcc41", "Url": "https://api.github.com/repos/RuedigerMoeller/kontraktor", "Date": "2016-01-10T13:32:26Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status) context.startActivity(new android.content.Intent(context, in.co.praveenkumar.mdroid.activity.CourseActivity.class));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6855/buggy-version/src.in.co.praveenkumar.mdroid.task.Login.java", "BodyUseAPI": [], "Fixed commit": "37afe0764e4182c3d250a937312761a21646a8db", "Url": "https://api.github.com/repos/praveendath92/MDroid", "Date": "2014-08-29T21:54:26Z"},
{"Line": "=>952", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cmb_torusType[0].getSelectionIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i == 0) && (torusType == 0)) { sb.append(removeTrailingZeros(org.nschmidt.ldparteditor.dialogs.primgen2.PrimGen2Dialog.DEC_FORMAT_4F.format(xMiddleCurr))); sb.append(((\" \" + (removeTrailingZeros(org.nschmidt.ldparteditor.dialogs.primgen2.PrimGen2Dialog.DEC_FORMAT_4F.format(yLower)))) + \" \")); sb.append(removeTrailingZeros(org.nschmidt.ldparteditor.dialogs.primgen2.PrimGen2Dialog.DEC_FORMAT_4F.format(zMiddleCurr))); }else if ((i == 0) && (torusType == 1)) { sb.append(removeTrailingZeros(org.nschmidt.ldparteditor.dialogs.primgen2.PrimGen2Dialog.DEC_FORMAT_4F.format((0.5 * xMiddleCurr)))); sb.append(((\" \" + (removeTrailingZeros(org.nschmidt.ldparteditor.dialogs.primgen2.PrimGen2Dialog.DEC_FORMAT_4F.format(yMiddle)))) + \" \")); sb.append(removeTrailingZeros(org.nschmidt.ldparteditor.dialogs.primgen2.PrimGen2Dialog.DEC_FORMAT_4F.format((0.5 * zMiddleCurr)))); }else { sb.append(removeTrailingZeros(org.nschmidt.ldparteditor.dialogs.primgen2.PrimGen2Dialog.DEC_FORMAT_4F.format(xLowerCurr))); sb.append(((\" \" + (removeTrailingZeros(org.nschmidt.ldparteditor.dialogs.primgen2.PrimGen2Dialog.DEC_FORMAT_4F.format(yLower)))) + \" \")); sb.append(removeTrailingZeros(org.nschmidt.ldparteditor.dialogs.primgen2.PrimGen2Dialog.DEC_FORMAT_4F.format(zLowerCurr))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7839/buggy-version/src.org.nschmidt.ldparteditor.dialogs.primgen2.PrimGen2Dialog.java", "BodyUseAPI": [], "Fixed commit": "c6b46d2921517536d6f202a32c2c5c945b4a5ed4", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-08-09T21:19:29Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((criteria.getOffset()) > 0) { if (limit == 0) query.append(' ').append(SqlConstants.LIMIT).append(' ').append(java.lang.Integer.MAX_VALUE); query.append(' ').append(SqlConstants.OFFSET).append(' ').append(criteria.getOffset()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4750/buggy-version/src.com.clarionmedia.infinitum.orm.sqlite.impl.SqliteBuilder.java", "BodyUseAPI": ["com.clarionmedia.infinitum.orm.criteria.Criteria<?>.getOffset()", "query.append(' ').append(SqlConstants.OFFSET).append(' ').append(criteria.getOffset())"], "Fixed commit": "5c498fa01f8f8c187fc5eca6c5d42186c076252a", "Url": "https://api.github.com/repos/InfinitumFramework/Infinitum-ORM", "Date": "2013-01-01T23:48:25Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((criteria.getOffset()) > 0) { if (limit == 0) query.append(' ').append(SqlConstants.LIMIT).append(' ').append(java.lang.Integer.MAX_VALUE); query.append(' ').append(SqlConstants.OFFSET).append(' ').append(criteria.getOffset()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4750/buggy-version/src.com.clarionmedia.infinitum.orm.sqlite.impl.SqliteBuilder.java", "BodyUseAPI": ["query.append(' ').append(SqlConstants.OFFSET).append(' ').append(criteria.getOffset())", "com.clarionmedia.infinitum.orm.criteria.Criteria<?>.getOffset()"], "Fixed commit": "5c498fa01f8f8c187fc5eca6c5d42186c076252a", "Url": "https://api.github.com/repos/InfinitumFramework/Infinitum-ORM", "Date": "2013-01-01T23:48:25Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kuali.hr.time.service.base.TkServiceLocator.getCalendarService().getCurrentCalendarDatesForLeaveCalendar(java.lang.String,java.sql.Date)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (calendarEntry != null) { lcf.setCalEntryId(calendarEntry.getHrCalendarEntriesId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8014/buggy-version/src.main.java.org.kuali.hr.lm.leavecalendar.web.LeaveCalendarAction.java", "BodyUseAPI": ["org.kuali.hr.time.calendar.CalendarEntries.getHrCalendarEntriesId()", "org.kuali.hr.lm.leavecalendar.web.LeaveCalendarForm.setCalEntryId(calendarEntry.getHrCalendarEntriesId())"], "Fixed commit": "01247b95badeb2d31eab03da047c7ce393888e5c", "Url": "https://api.github.com/repos/kuali/kpme", "Date": "2012-08-01T18:48:18Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lcd.getCalendarEntry()) != null) { leaveForm.setCalEntryId(lcd.getCalendarEntry().getHrCalendarEntriesId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8014/buggy-version/src.main.java.org.kuali.hr.lm.leavecalendar.web.LeaveCalendarAction.java", "BodyUseAPI": ["org.kuali.hr.lm.leavecalendar.web.LeaveCalendarForm.setCalEntryId(lcd.getCalendarEntry().getHrCalendarEntriesId())", "lcd.getCalendarEntry().getHrCalendarEntriesId()", "org.kuali.hr.lm.leavecalendar.LeaveCalendarDocument.getCalendarEntry()"], "Fixed commit": "01247b95badeb2d31eab03da047c7ce393888e5c", "Url": "https://api.github.com/repos/kuali/kpme", "Date": "2012-08-01T18:48:18Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (calendarEntry != null) { lcf.setCalEntryId(calendarEntry.getHrCalendarEntriesId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8014/buggy-version/src.main.java.org.kuali.hr.lm.leavecalendar.web.LeaveCalendarAction.java", "BodyUseAPI": ["org.kuali.hr.lm.leavecalendar.web.LeaveCalendarForm.setCalEntryId(calendarEntry.getHrCalendarEntriesId())", "org.kuali.hr.time.calendar.CalendarEntries.getHrCalendarEntriesId()"], "Fixed commit": "01247b95badeb2d31eab03da047c7ce393888e5c", "Url": "https://api.github.com/repos/kuali/kpme", "Date": "2012-08-01T18:48:18Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((buffer.size()) > 0) { builder.addAllMetrics(buffer); builder.setApplicationInstanceId(RemoteDownstreamConfig.Agent.APPLICATION_INSTANCE_ID); stub.collect(builder.build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1746/buggy-version/apm-sniffer.apm-agent-core.src.main.java.org.skywalking.apm.agent.core.jvm.JVMService.java", "BodyUseAPI": ["JVMMetrics.Builder.addAllMetrics(java.util.LinkedList<org.skywalking.apm.network.proto.JVMMetric>)"], "Fixed commit": "ca7619d06938777ec7d65510e052e4c4d391a042", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2017-07-25T03:34:29Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBeforeMin(calendar)) { if ((mMinDate) != null) return ((java.util.Calendar) (mMinDate.clone())); java.util.Calendar output = java.util.Calendar.getInstance(); output.set(java.util.Calendar.YEAR, mMinYear); output.set(java.util.Calendar.MONTH, java.util.Calendar.JANUARY); output.set(java.util.Calendar.DAY_OF_MONTH, 1); return com.wdullaer.materialdatetimepicker.Utils.trimToMidnight(output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1123/buggy-version/library.src.main.java.com.wdullaer.materialdatetimepicker.date.DefaultDateRangeLimiter.java", "BodyUseAPI": [], "Fixed commit": "5632a09ca2efa5c23d9f606e2571d832234c515d", "Url": "https://api.github.com/repos/wdullaer/MaterialDateTimePicker", "Date": "2017-12-25T20:40:57Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAfterMax(calendar)) { if ((mMaxDate) != null) return ((java.util.Calendar) (mMaxDate.clone())); java.util.Calendar output = java.util.Calendar.getInstance(); output.set(java.util.Calendar.YEAR, mMaxYear); output.set(java.util.Calendar.MONTH, java.util.Calendar.DECEMBER); output.set(java.util.Calendar.DAY_OF_MONTH, 31); return com.wdullaer.materialdatetimepicker.Utils.trimToMidnight(output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1123/buggy-version/library.src.main.java.com.wdullaer.materialdatetimepicker.date.DefaultDateRangeLimiter.java", "BodyUseAPI": [], "Fixed commit": "5632a09ca2efa5c23d9f606e2571d832234c515d", "Url": "https://api.github.com/repos/wdullaer/MaterialDateTimePicker", "Date": "2017-12-25T20:40:57Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pkjiao.friends.mm.activity.InviteFriendsActivity.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (intent.getBooleanExtra(\"invite_friends\", false)) { mInviteFinishBtn.setVisibility(View.INVISIBLE); }else { mInviteFinishBtn.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/9247/buggy-version/src.com.pkjiao.friends.mm.activity.InviteFriendsActivity.java", "BodyUseAPI": [], "Fixed commit": "b61779ed025ffd54ec9583f47274c80d815c7e5e", "Url": "https://api.github.com/repos/413326885/Marry_Social", "Date": "2015-04-11T10:23:28Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.body().asFormUrlEncoded()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((param.get(\"device\")) != null) { device = param.get(\"device\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6887/buggy-version/app.controllers.PrivateTweet.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String[]>.get(java.lang.String)"], "Fixed commit": "1031a1e22927e08bcebbb4344f73cd667012546c", "Url": "https://api.github.com/repos/jiangecho/maopao_server", "Date": "2015-11-21T03:36:31Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.rohanx96.admobproto.elements.GenericAnswerDetails.getStatus((currentPage + 1), category)) == (com.rohanx96.admobproto.utils.Constants.CORRECT)) feebackTv.setText(com.rohanx96.admobproto.utils.CharacterStrings.getStringAlreadyAnsweredRightButWrongNow(context)); else feebackTv.setText(com.rohanx96.admobproto.utils.CharacterStrings.getStringNowAnsweredWrong(context));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/526/buggy-version/app.src.main.java.com.rohanx96.admobproto.ui.CharacterHelper.java", "BodyUseAPI": [], "Fixed commit": "20aa6fbf31a0f3bc945c3e6010e2dffcec40c25e", "Url": "https://api.github.com/repos/rohanx96/Perplexy", "Date": "2016-04-06T22:34:41Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dbHandler.getDOB().getDday().equals(\"null\"))) { alarmStart.instantImmCheck(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5577/buggy-version/app.src.main.java.com.babyandi.stephnoutsa.babyandi.BootReceiver.java", "BodyUseAPI": [], "Fixed commit": "df73dc4ea0c5963bf09e05784a4b1b74681473d0", "Url": "https://api.github.com/repos/stephanenoutsa/motherslove", "Date": "2016-08-13T13:18:42Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dbHandler.getLMP().equals(\"null\"))) { alarmStart.instantCheck(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5577/buggy-version/app.src.main.java.com.babyandi.stephnoutsa.babyandi.BootReceiver.java", "BodyUseAPI": [], "Fixed commit": "df73dc4ea0c5963bf09e05784a4b1b74681473d0", "Url": "https://api.github.com/repos/stephanenoutsa/motherslove", "Date": "2016-08-13T13:18:42Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskId) != null) taskId.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1363/buggy-version/src.main.java.com.sk89q.craftbook.circuits.gates.logic.LowDelayer.java", "BodyUseAPI": [], "Fixed commit": "ccdf5b398f9409aa99848bf1a6f03f871818c96d", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-04-15T07:44:09Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskId) != null) taskId.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1363/buggy-version/src.main.java.com.sk89q.craftbook.circuits.gates.logic.Delayer.java", "BodyUseAPI": [], "Fixed commit": "ccdf5b398f9409aa99848bf1a6f03f871818c96d", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-04-15T07:44:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskId) != null) taskId.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1363/buggy-version/src.main.java.com.sk89q.craftbook.circuits.gates.logic.NotLowDelayer.java", "BodyUseAPI": [], "Fixed commit": "ccdf5b398f9409aa99848bf1a6f03f871818c96d", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-04-15T07:44:09Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskId) != null) taskId.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1363/buggy-version/src.main.java.com.sk89q.craftbook.circuits.gates.logic.NotDelayer.java", "BodyUseAPI": [], "Fixed commit": "ccdf5b398f9409aa99848bf1a6f03f871818c96d", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-04-15T07:44:09Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object.has(\"avatar\")) { return org.tndata.officehours.model.Person.class; }else if ((object.has(\"from\")) && (object.has(\"to\"))) { return OfficeHours.TimeSlot.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2396/buggy-version/app.src.main.java.org.tndata.officehours.util.Util.java", "BodyUseAPI": ["com.google.gson.JsonObject.has(java.lang.String)", "com.google.gson.JsonObject.has(java.lang.String)"], "Fixed commit": "f0fb2c75eed1c2fac201ebd25af5edfb076418f5", "Url": "https://api.github.com/repos/izzyalonso/OfficeHours-Android", "Date": "2017-02-09T17:08:33Z"},
{"Line": "=>840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentLevel.equals(bundleLevel))) { setLevel(bundleLevel); levelBox.setSelectedItem(bundleLevel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/783/buggy-version/src.ucar.unidata.idv.control.GridTrajectoryControl.java", "BodyUseAPI": ["javax.swing.JComboBox.setSelectedItem(java.lang.Object)", "ucar.unidata.idv.control.GridTrajectoryControl.setLevel(java.lang.Object)"], "Fixed commit": "c2fd4784ee935daa44c5e748041ed891f29fbe3b", "Url": "https://api.github.com/repos/jon4than/IDV", "Date": "2013-02-21T00:04:43Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rs.isAfterLast())) { highestId = rs.getLong(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5231/buggy-version/src.database.SQLiteConnector.java", "BodyUseAPI": ["java.sql.ResultSet.getLong(int)"], "Fixed commit": "8ff7f45591521022624e087692c188368008a696", "Url": "https://api.github.com/repos/MarkWesterhoff/timeflecks", "Date": "2014-10-26T18:35:55Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((com.logicalpanda.geoshare.other.Globals.getCurrentUser()) == null) || ((com.logicalpanda.geoshare.other.Globals.getCurrentUser().getGoogle_instance_id()) == null)) || ((com.logicalpanda.geoshare.other.Globals.getCurrentUser().getGoogle_instance_id()) == \"\")) { android.content.Intent intent = new android.content.Intent(this, com.logicalpanda.geoshare.activities.StartupActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3143/buggy-version/app.src.main.java.com.logicalpanda.geoshare.activities.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "0ba53327bfbc16e812a096c0dfbff4df1a59b42a", "Url": "https://api.github.com/repos/gercorr/GeoShareFrontend", "Date": "2017-01-31T22:35:47Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ScheduleHacks.History.indexOfCommand) > 0) { commandHistory.remove(((ScheduleHacks.History.indexOfCommand) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8128/buggy-version/src.ScheduleHacks.History.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.remove(int)"], "Fixed commit": "964a7ca4b49c6bfaff7789d60fc6032bb6df9af6", "Url": "https://api.github.com/repos/cs2103jan2016-t09-2j/main", "Date": "2016-04-08T15:27:03Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.serotonin.m2m2.rt.dataImage.PointValueFacade.getPointValues(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((list.isEmpty()) || ((list.get(0).getTime()) != since)) { list.add(0, new com.serotonin.m2m2.rt.dataImage.PointValueTime(prevValue.getValue(), since)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1474/buggy-version/Core.src.com.serotonin.m2m2.rt.dataImage.PointValueFacade.java", "BodyUseAPI": ["java.util.List<com.serotonin.m2m2.rt.dataImage.PointValueTime>.add(int,com.serotonin.m2m2.rt.dataImage.PointValueTime)"], "Fixed commit": "ef0386d0ed7b1585227f13bae440e812cbcdbb60", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2015-04-28T06:44:50Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.serotonin.m2m2.rt.dataImage.PointValueFacade.getPointValuesBetween(long,long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((list.isEmpty()) || ((list.get(0).getTime()) != from)) { list.add(0, new com.serotonin.m2m2.rt.dataImage.PointValueTime(prevValue.getValue(), from)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1474/buggy-version/Core.src.com.serotonin.m2m2.rt.dataImage.PointValueFacade.java", "BodyUseAPI": ["java.util.List<com.serotonin.m2m2.rt.dataImage.PointValueTime>.add(int,com.serotonin.m2m2.rt.dataImage.PointValueTime)"], "Fixed commit": "ef0386d0ed7b1585227f13bae440e812cbcdbb60", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2015-04-28T06:44:50Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activity == (com.aitorvs.android.allowme.AllowMe.getInstance().mActivity)) { com.aitorvs.android.allowme.AllowMe.getInstance().mActivity = null; }else { android.util.Log.w(com.aitorvs.android.allowme.AllowMe.TAG, \"unregisterActivity: Old activity is trying to unregister\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4246/buggy-version/library.src.main.java.com.aitorvs.android.allowme.AllowMe.java", "BodyUseAPI": [], "Fixed commit": "1fdf81306a43c11cbb33505c8a10b2f17115d730", "Url": "https://api.github.com/repos/aitorvs/allowme", "Date": "2015-12-07T09:33:03Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row) == 0) { feed.errors.add(new com.conveyal.gtfs.error.EmptyTableError(tableName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7894/buggy-version/src.main.java.com.conveyal.gtfs.model.Entity.java", "BodyUseAPI": [], "Fixed commit": "e32e85a65aee04ca6d34e96cca026cde575b9719", "Url": "https://api.github.com/repos/conveyal/gtfs-lib", "Date": "2017-04-05T19:24:10Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.csvreader.CsvReader.readHeaders()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!hasHeaders) { feed.errors.add(new com.conveyal.gtfs.error.EmptyTableError(tableName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7894/buggy-version/src.main.java.com.conveyal.gtfs.model.Entity.java", "BodyUseAPI": [], "Fixed commit": "e32e85a65aee04ca6d34e96cca026cde575b9719", "Url": "https://api.github.com/repos/conveyal/gtfs-lib", "Date": "2017-04-05T19:24:10Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.beanutils.PropertyUtils.getPropertyDescriptor(java.lang.Object,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (descriptor != null) { java.lang.reflect.Method m = org.apache.commons.beanutils.PropertyUtils.getReadMethod(descriptor); if (m.isAnnotationPresent(com.threewks.thundr.rest.serializer.Ignore.class)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3404/buggy-version/src.main.java.com.threewks.thundr.rest.serializer.JsonSerializer.java", "BodyUseAPI": ["org.apache.commons.beanutils.PropertyUtils.getReadMethod(java.beans.PropertyDescriptor)"], "Fixed commit": "506d6c6a7d2cc5ff8b84f36833708629638901be", "Url": "https://api.github.com/repos/kuhnza/thundr-rest", "Date": "2013-09-05T05:44:08Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((team == null) || ((team.getName()) == null)) { throw new javax.ws.rs.WebApplicationException(javax.ws.rs.core.Response.status(Response.Status.BAD_REQUEST).entity((\"Nieprawid\u0142owa nazwa zespo\u0142u: \" + team)).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3460/buggy-version/typer.src.matuszek.typer.controller.WinnerBetController.java", "BodyUseAPI": ["javax.ws.rs.core.Response.status(Response.Status.BAD_REQUEST).entity((\"Nieprawid\u0142owa nazwa zespo\u0142u: \" + team)).build()", "javax.ws.rs.core.Response.status(Response.Status.BAD_REQUEST).entity((\"Nieprawid\u0142owa nazwa zespo\u0142u: \" + team))"], "Fixed commit": "d5460cb3a920bf359b7831c4bdadaf9f6f8c3327", "Url": "https://api.github.com/repos/mmatuszek/typer", "Date": "2014-06-15T07:00:58Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((betEntry.getBetAway()) == null) || ((betEntry.getBetHome()) == null)) { throw new javax.ws.rs.WebApplicationException(javax.ws.rs.core.Response.status(Response.Status.BAD_REQUEST).entity((((\"Nieprawid\u0142owy wynik: \" + (betEntry.getBetHome())) + \":\") + (betEntry.getBetAway()))).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3460/buggy-version/typer.src.matuszek.typer.controller.MatchBetController.java", "BodyUseAPI": ["matuszek.typer.model.BetEntry.getBetHome()", "matuszek.typer.model.BetEntry.getBetAway()", "javax.ws.rs.core.Response.status(Response.Status.BAD_REQUEST).entity((((\"Nieprawid\u0142owy wynik: \" + (betEntry.getBetHome())) + \":\") + (betEntry.getBetAway())))", "javax.ws.rs.core.Response.status(Response.Status.BAD_REQUEST).entity((((\"Nieprawid\u0142owy wynik: \" + (betEntry.getBetHome())) + \":\") + (betEntry.getBetAway()))).build()"], "Fixed commit": "d5460cb3a920bf359b7831c4bdadaf9f6f8c3327", "Url": "https://api.github.com/repos/mmatuszek/typer", "Date": "2014-06-15T07:00:58Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (i > 0) { extension = fileName.substring((i + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3151/buggy-version/src.denoflionsx.denLib.CoreMod.ASM.FileRequest.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "47000c4e2aa8d292b00ce5878b4d92db85138aef", "Url": "https://api.github.com/repos/denoflionsx/denLib", "Date": "2013-09-21T23:49:39Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String[]>.get(Constants.PARAM_PRETTY)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((prettyParams != null) && ((prettyParams.length) > 0)) { if (Constants.PARAM_PRETTY_VALUE_FALSE.equals(prettyParams[0])) { prettyPrintResponse = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4809/buggy-version/hapi-fhir-base.src.main.java.ca.uhn.fhir.rest.server.interceptor.ResponseHighlighterInterceptor.java", "BodyUseAPI": ["Constants.PARAM_PRETTY_VALUE_FALSE.equals(java.lang.String)"], "Fixed commit": "3d686e9383937bfe606aa32115244ef88a252bf0", "Url": "https://api.github.com/repos/danleahy/hapi-fhir", "Date": "2016-10-18T18:58:28Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (prettyPrintResponse) { p.setPrettyPrint(prettyPrintResponse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4809/buggy-version/hapi-fhir-base.src.main.java.ca.uhn.fhir.rest.server.interceptor.ResponseHighlighterInterceptor.java", "BodyUseAPI": ["ca.uhn.fhir.parser.IParser.setPrettyPrint(boolean)"], "Fixed commit": "3d686e9383937bfe606aa32115244ef88a252bf0", "Url": "https://api.github.com/repos/danleahy/hapi-fhir", "Date": "2016-10-18T18:58:28Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root) instanceof org.zkoss.zk.ui.HtmlBasedComponent) { ((org.zkoss.zk.ui.HtmlBasedComponent) (root)).setStyle(\"visibility: hidden\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6568/buggy-version/org.carewebframework.rpms.ui-parent.org.carewebframework.rpms.ui.core.src.main.java.org.carewebframework.rpms.ui.common.BgoBaseController.java", "BodyUseAPI": [], "Fixed commit": "4f848bb77107001716d78788fcbf104f3fc67271", "Url": "https://api.github.com/repos/carewebframework/carewebframework-rpms", "Date": "2015-06-09T22:18:11Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clusterMemberList.size()) != 0) { for (akka.cluster.Member member : clusterMemberList) { play.PlayInternal.logger().info((\"---------------> notify = \" + (member.address()))); getContext().actorSelection(((member.address()) + \"/user/Greeter\")).tell(controllers.Greeter.Msg.GREET, getSelf()); } }else { controllers.Greeter.actorRef.tell(controllers.Greeter.Msg.GREET, getSelf()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8169/buggy-version/app.controllers.Greeter.java", "BodyUseAPI": [], "Fixed commit": "9e554fd1ee83e57c79835bce3efe8b23346aef85", "Url": "https://api.github.com/repos/zarinfam/play-akka-cluster-pub-sub", "Date": "2014-10-04T05:21:30Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_selectedContactPosition) < 0) { _selectedContactPosition = (_contactList.size()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2696/buggy-version/app.src.main.java.com.gum.dlt.groupuniquemessaging.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5256ddc157af8567a5d99774bb7f6c3a68ab7cf5", "Url": "https://api.github.com/repos/squigglemufkinz/GroupUniqueMessaging", "Date": "2017-12-12T16:52:29Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (manager.getAllProviders().contains(LocationManager.GPS_PROVIDER)) { manager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 2000L, 0, listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/964/buggy-version/src.com.poguico.palmabici.synchronizers.LocationSynchronizer.java", "BodyUseAPI": [], "Fixed commit": "599feaa4f65f5b11e607c3d308f39cbba69568b9", "Url": "https://api.github.com/repos/SeGarVi/PalmaBici", "Date": "2014-06-06T16:23:48Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (manager.getAllProviders().contains(LocationManager.NETWORK_PROVIDER)) { manager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000L, 0, listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/964/buggy-version/src.com.poguico.palmabici.synchronizers.LocationSynchronizer.java", "BodyUseAPI": [], "Fixed commit": "599feaa4f65f5b11e607c3d308f39cbba69568b9", "Url": "https://api.github.com/repos/SeGarVi/PalmaBici", "Date": "2014-06-06T16:23:48Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.iutiao.model.User.request(com.iutiao.model.RequestMethod,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,java.lang.Class,com.iutiao.net.RequestOptions)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((user.getToken()) != null) && (!(user.getToken().isEmpty()))) { com.iutiao.net.RequestOptions.getInstance().setToken(user.getToken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2478/buggy-version/src.main.java.com.iutiao.model.User.java", "BodyUseAPI": ["com.iutiao.model.User.getToken()", "com.iutiao.net.RequestOptions.getInstance().setToken(java.lang.String)"], "Fixed commit": "66668e96c1bdb2150beea4d2725f8a0b7da0de35", "Url": "https://api.github.com/repos/prchance/iutiao", "Date": "2016-04-28T02:42:57Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (string.equals(\"\")) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/687/buggy-version/app.src.main.java.com.cerebellio.noted.utils.TextFunctions.java", "BodyUseAPI": [], "Fixed commit": "40bf8db0d8a30e0b43c2b2ecb3aaefa64e4d8d62", "Url": "https://api.github.com/repos/jamtartley/Noted", "Date": "2016-02-25T18:17:22Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eclipsesource.json.JsonObject.readFrom(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mainObject.get(\"keepAlive\")) != null) { java.lang.System.out.println((((\"get keep alive from \" + (yourClubMusicWebSocket.getHostname())) + \", which is connected to \") + (mapClientStation.get(yourClubMusicWebSocket).getName()))); }else if (mapClientStation.containsKey(yourClubMusicWebSocket)) mapClientStation.get(yourClubMusicWebSocket).receiveMessageFromClient(yourClubMusicWebSocket, msg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/863/buggy-version/src.de.uniol.yourclubmusic.data.YourClubMusicManager.java", "BodyUseAPI": [], "Fixed commit": "9b764b44d8d1d09c325a92e30843f713adc5cf7f", "Url": "https://api.github.com/repos/swi88/YourClubMusicServer", "Date": "2014-01-28T16:46:03Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(application.getCuInstanceName().equalsIgnoreCase(cuInstanceName))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/950/buggy-version/cu-manager.src.main.java.fr.treeptik.cloudunit.service.impl.MonitoringServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0a9bd838a521c15da6860cd767af74c8868c3d81", "Url": "https://api.github.com/repos/Treeptik/cloudunit", "Date": "2016-01-14T16:26:44Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(application.getCuInstanceName().equalsIgnoreCase(cuInstanceName))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/950/buggy-version/cu-manager.src.main.java.fr.treeptik.cloudunit.service.impl.LogServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0a9bd838a521c15da6860cd767af74c8868c3d81", "Url": "https://api.github.com/repos/Treeptik/cloudunit", "Date": "2016-01-14T16:26:44Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (eReference.equals(EcorePackage.eINSTANCE.getEAnnotation_References())) { return getExistingEAnnotation_EReferencesFor(eReference); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3423/buggy-version/org.eclipse.emf.ecp.ecoreeditor.ecore.src.org.eclipse.emf.ecp.ecoreeditor.ecore.referenceservices.EcoreReferenceService.java", "BodyUseAPI": ["org.eclipse.emf.ecp.ecoreeditor.ecore.referenceservices.EcoreReferenceService.getExistingEAnnotation_EReferencesFor(org.eclipse.emf.ecore.EReference)"], "Fixed commit": "95f853d481213245304213c426e838c4ae0f003b", "Url": "https://api.github.com/repos/ClemensElflein/EcoreEditor2", "Date": "2015-01-21T17:07:59Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.asList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (excludedStuff.contains(artifact.toString().replaceAll(\":jar:.*$\", \":jar\"))) { getLog().warn((\"Hardwired patch for issue-166: excluding \" + artifact)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2367/buggy-version/src.main.java.com.jayway.maven.plugins.android.AbstractAndroidMojo.java", "BodyUseAPI": ["getLog().warn((\"Hardwired patch for issue-166: excluding \" + artifact))"], "Fixed commit": "2107229eef9cfcb600eef820f544f9e7e05a1fb2", "Url": "https://api.github.com/repos/fabriziogiudici/maven-android-plugin", "Date": "2011-05-22T13:09:59Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isStepAnAlreadyShowingActiveStep(step))) { super.showStep(step, alwaysReplaceView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6175/buggy-version/backbone.src.main.java.org.researchstack.backbone.ui.ActiveTaskActivity.java", "BodyUseAPI": ["org.researchstack.backbone.ui.ViewTaskActivity.showStep(org.researchstack.backbone.step.Step,boolean)"], "Fixed commit": "80dff47db8f3487e67a4b471af7a06f81b768436", "Url": "https://api.github.com/repos/dephillipsmichael/ResearchStack-1", "Date": "2017-02-10T20:53:23Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.spine3.server.storage.EntityStorageRecord>.next()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (record == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/9242/buggy-version/server.src.main.java.org.spine3.server.entity.EntityRepository.java", "BodyUseAPI": [], "Fixed commit": "6f8bd40b121a99b29015deec407070b90a3e4c62", "Url": "https://api.github.com/repos/SpineEventEngine/core-java", "Date": "2016-10-04T09:24:22Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.size()) < resultExpectedSize) { result.add(null); resultExpectedSize++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/9242/buggy-version/server.src.main.java.org.spine3.server.storage.memory.InMemoryRecordStorage.java", "BodyUseAPI": ["java.util.Collection<org.spine3.server.storage.EntityStorageRecord>.add(<nulltype>)"], "Fixed commit": "6f8bd40b121a99b29015deec407070b90a3e4c62", "Url": "https://api.github.com/repos/SpineEventEngine/core-java", "Date": "2016-10-04T09:24:22Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((supportingAccess) == null) || (\"\".equals(supportingAccess))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4276/buggy-version/src.main.java.no.uio.duo.bagit.BagIt.java", "BodyUseAPI": [], "Fixed commit": "8fbf8af33280ef6990c95b4c8448132164daa873", "Url": "https://api.github.com/repos/nye-duo/BagItLibrary", "Date": "2012-06-20T11:36:26Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { dataCountText = savedInstanceState.getString(org.fraunhofer.cese.madcap.StartFragment.STATE_DATA_COUNT); uploadResultText = savedInstanceState.getString(org.fraunhofer.cese.madcap.StartFragment.STATE_UPLOAD_STATUS); }else { dataCountText = \"Computing...\"; uploadResultText = \"None.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6247/buggy-version/app.src.main.java.org.fraunhofer.cese.madcap.StartFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)", "android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "fa1d07f939a4e10a4e1a002228f1c6c7df918d59", "Url": "https://api.github.com/repos/FraunhoferCESE/madcap", "Date": "2016-11-04T13:39:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (set != null) { java.util.Iterator it = set.iterator(); while (it.hasNext()) { android.util.Log.i(\"1234567\", it.next().toString()); } android.preference.MultiSelectListPreference prefer = ((android.preference.MultiSelectListPreference) (preference)); prefer.setValues(set); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6105/buggy-version/app.src.main.java.com.PATHnwei.news.SettingActivity.java", "BodyUseAPI": ["android.preference.MultiSelectListPreference.setValues(java.util.Set<java.lang.String>)", "java.util.Set<java.lang.String>.iterator()"], "Fixed commit": "dce890068000c192632fc85c4fd2366aac892614", "Url": "https://api.github.com/repos/lixw1021/News", "Date": "2017-08-17T03:17:51Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["NetworkParser.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((learned.size()) == 0) { error = \"No SNPs were accepted.\"; }else { precision = ((double) (truePositives)) / (learned.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/711/buggy-version/MCMCStructureLearning.src.PrecisionRecallCalc.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.size()"], "Fixed commit": "e679d66864c4ba3b8a89d7f83329528ab86b6045", "Url": "https://api.github.com/repos/seadams/MCMCStructureLearning", "Date": "2013-07-05T22:36:09Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (error != null) { out.println(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/711/buggy-version/MCMCStructureLearning.src.PrecisionRecallCalc.java", "BodyUseAPI": ["java.io.PrintWriter.println(java.lang.String)"], "Fixed commit": "e679d66864c4ba3b8a89d7f83329528ab86b6045", "Url": "https://api.github.com/repos/seadams/MCMCStructureLearning", "Date": "2013-07-05T22:36:09Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date_1.isAfter(date_2)) { java.time.LocalDate swap = date_2; date_2 = date_1; date_1 = swap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8972/buggy-version/src.plainsimple.DataHandler.java", "BodyUseAPI": [], "Fixed commit": "75201d7bef67c0c9475e2cde9f4c386abfc56dca", "Url": "https://api.github.com/repos/Plain-Simple/PracticeLog", "Date": "2015-06-16T19:37:04Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateQueued) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7528/buggy-version/src.main.java.io.darkcraft.darkcore.mod.impl.EntityEffectStore.java", "BodyUseAPI": [], "Fixed commit": "2d7bc41ce549682de9ac2ba67ab950a536a29033", "Url": "https://api.github.com/repos/DarkholmeTenk/Darkcore", "Date": "2016-03-28T23:58:56Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (object.has(\"photos\")) { org.json.JSONArray photos = new org.json.JSONArray(object.getString(\"photos\")); photoReference = new org.json.JSONObject(photos.get(0).toString()).getString(\"photo_reference\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8668/buggy-version/app.src.main.java.com.stormx.wheretogo.Utils.PlacesGetter.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "dabfc91072789f823e487fa84e8a241765b246b2", "Url": "https://api.github.com/repos/MarkKazakov/WhereToGo-Android", "Date": "2017-04-07T09:21:33Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((kvstore) != null) { kvstore.disconnect(); kvstore = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/471/buggy-version/StorageServer.src.app_kvClient.KVClient.java", "BodyUseAPI": [], "Fixed commit": "8974dc06b81ddb00edc6f90f4212c2e413b3b6dc", "Url": "https://api.github.com/repos/NeilVeira/ECE419", "Date": "2017-01-28T00:30:40Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (ch == null) { ch = lookup(inflector.getSingular(word)); m = new edu.arizona.biosemantics.semanticmarkup.know.lib.Match(ch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4640/buggy-version/src.main.java.edu.arizona.biosemantics.semanticmarkup.know.lib.LearnedCharacterKnowledgeBase.java", "BodyUseAPI": [], "Fixed commit": "b511f8331ad35ba52470ac58081f955810f25700", "Url": "https://api.github.com/repos/biosemantics/charaparser", "Date": "2015-05-20T18:53:00Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remainLive) < 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4891/buggy-version/core.src.com.gdx.ohmylove.Lover.java", "BodyUseAPI": [], "Fixed commit": "ba776274382bae0f52c49b5bb01e95a69a31f970", "Url": "https://api.github.com/repos/mameaw14/ohmylove", "Date": "2016-11-17T16:15:22Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(mudmap2.frontend.WorldTab,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (name != null) worldPanel.pushPosition(new mudmap2.backend.WorldCoordinate(getWorld().getNewLayer(name).getId(), 0, 0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5620/buggy-version/src.main.java.mudmap2.frontend.WorldTab.java", "BodyUseAPI": ["mudmap2.frontend.GUIElement.WorldPanel.WorldPanel.pushPosition(mudmap2.backend.WorldCoordinate)", "getWorld().getNewLayer(name).getId()", "mudmap2.backend.World.getNewLayer(java.lang.String)"], "Fixed commit": "5782a2bff75fcebbfe400c3956baf1cd97e4c8b5", "Url": "https://api.github.com/repos/Neop/mudmap2", "Date": "2017-03-02T15:33:24Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getUser()) != null) showPage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8454/buggy-version/src.com.fave100.client.pages.lists.ListPresenter.java", "BodyUseAPI": [], "Fixed commit": "a62e445341aebab8a5d4973e500a0eb2a009450b", "Url": "https://api.github.com/repos/yissachar/fave100", "Date": "2013-08-30T18:24:15Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hashtag) == null) { hashtag = com.fave100.shared.Constants.DEFAULT_HASHTAG; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8454/buggy-version/src.com.fave100.client.pages.lists.widgets.favelist.FavelistPresenter.java", "BodyUseAPI": [], "Fixed commit": "a62e445341aebab8a5d4973e500a0eb2a009450b", "Url": "https://api.github.com/repos/yissachar/fave100", "Date": "2013-08-30T18:24:15Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getConf().get(CommonConfigurationKeys.FS_DEFAULT_NAME_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fsDefaultName == null) { throw new org.apache.hadoop.hoya.exceptions.BadConfigException(\"Key not found in conf: {}\", org.apache.hadoop.fs.CommonConfigurationKeysPublic.FS_DEFAULT_NAME_KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7450/buggy-version/hoya-core.src.main.java.org.apache.hadoop.hoya.providers.accumulo.AccumuloClientProvider.java", "BodyUseAPI": [], "Fixed commit": "38f44357fd7a50b5a8132a9a5ad1a30833b25ac3", "Url": "https://api.github.com/repos/hortonworks/hoya", "Date": "2013-10-02T18:34:50Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentEpisodeList) != null) && ((currentEpisodeList.size()) > 0)) setFilteredEpisodeList(); else { currentEpisodeList = null; episodeListFragment.showLoadFailed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6952/buggy-version/src.net.alliknow.podcatcher.EpisodeListActivity.java", "BodyUseAPI": [], "Fixed commit": "5438113ee322efa26288dd057090423ffcf009b5", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2013-06-12T18:57:00Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Game.inventory.furnaceOn) { com.madbros.adventurecraft.GameStates.Slot[][] slots = new com.madbros.adventurecraft.GameStates.Slot[][]{ Game.inventory.invBar, Game.inventory.invBag, Game.inventory.invCrafting, Game.inventory.invCrafted, Game.inventory.invClothing, Game.inventory.invTable, Game.inventory.invChest, Game.level.activeBlocks[Game.inventory.currentInvActiveBlockX][Game.inventory.currentInvActiveBlockY].layers[com.madbros.adventurecraft.Constants.OBJECT_LAYER].furnaceSlots }; for (int i = 0; i < (slots.length); i++) { for (int j = 0; j < (slots[i].length); j++) { if (mouseRect.detectCollision(slots[i][j].slotRect)) { slots[i][j].isHighlighted = true; }else { slots[i][j].isHighlighted = false; } } } }else { com.madbros.adventurecraft.GameStates.Slot[][] slots = new com.madbros.adventurecraft.GameStates.Slot[][]{ Game.inventory.invBar, Game.inventory.invBag, Game.inventory.invCrafting, Game.inventory.invCrafted, Game.inventory.invClothing, Game.inventory.invTable, Game.inventory.invChest }; for (int i = 0; i < (slots.length); i++) { for (int j = 0; j < (slots[i].length); j++) { if (mouseRect.detectCollision(slots[i][j].slotRect)) { slots[i][j].isHighlighted = true; }else { slots[i][j].isHighlighted = false; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/899/buggy-version/src.com.madbros.adventurecraft.GameStates.InventoryStateInput.java", "BodyUseAPI": [], "Fixed commit": "2df13c4a9c4328c5fbc165c733d115e887c1f06f", "Url": "https://api.github.com/repos/rpmadden08/adventure-craft", "Date": "2013-12-10T00:25:31Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!alarmSet) if (!(alarm.isWeekly())) { com.alphan.mcan.snoozecharity.services.AlarmManagerHelper.setAlarm(context, calendar, pIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7306/buggy-version/app.src.main.java.com.alphan.mcan.snoozecharity.services.AlarmManagerHelper.java", "BodyUseAPI": [], "Fixed commit": "ee8958dddcc7bb4be31db434607e51247314c336", "Url": "https://api.github.com/repos/aeneas1163/EffectiveNavigation", "Date": "2014-12-07T16:15:54Z"},
{"Line": "=>1953", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFactura()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6842/buggy-version/BackGestionTextilLevel.src.ar.com.textillevel.gui.acciones.JDialogCargaFactura.java", "BodyUseAPI": [], "Fixed commit": "983534c213d71cd2ba58f819f799c014984b994d", "Url": "https://api.github.com/repos/nacho270/GTL", "Date": "2017-04-05T21:22:11Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (o == null) ps.print(\"null\"); else { java.lang.String field = o.toString(); field = org.apache.commons.lang3.StringEscapeUtils.escapeCsv(field); ps.print(field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5607/buggy-version/src.main.java.org.repodriller.persistence.csv.CSVFile.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "3db3a60fa4918affb7cc15356dd946f1ce815e61", "Url": "https://api.github.com/repos/mauricioaniche/repodriller", "Date": "2016-11-25T07:12:52Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (title != null) { java.lang.String idstring = prefs.getString(\"ids\", null); if (idstring != null) { android.util.Log.i(\"IDSTRING\", idstring); android.util.Log.i(\"TITLE\", title); found = (idstring.indexOf(title)) > 0; }else { found = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2006/buggy-version/app.src.main.java.ins.com.mk.popularmovies.DetailFragment.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "4c56a426632d3918a5b12780006336e27794c7fb", "Url": "https://api.github.com/repos/Ajrulovski/PopularMovies", "Date": "2015-10-04T22:37:38Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.commonProperties.get(key).equals(this.specProperties.get(key))) { this.specProperties.remove(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1135/buggy-version/gobblin-api.src.main.java.gobblin.configuration.State.java", "BodyUseAPI": [], "Fixed commit": "57f5a555e0d389b991b914daed986a824e62b2e8", "Url": "https://api.github.com/repos/ydai1124/gobblin-1", "Date": "2017-04-06T16:48:32Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x >= (minefield.getWidth())) || (y >= (minefield.getHeight()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6436/buggy-version/android.src.uk.ac.york.minesweeper.android.MinefieldView.java", "BodyUseAPI": [], "Fixed commit": "da1ff2dd1b77e0919b3ff53629d40e34d31863e2", "Url": "https://api.github.com/repos/jcowgill/java-minesweeper", "Date": "2013-07-18T19:51:24Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (argCount <= 1) { return new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1488/buggy-version/hoya-core.src.main.java.org.apache.hadoop.yarn.service.launcher.ServiceLauncher.java", "BodyUseAPI": [], "Fixed commit": "6a6df7c60264abf53058a5e1d0c23a97ac8f21f7", "Url": "https://api.github.com/repos/hortonworks/hoya", "Date": "2013-10-02T17:56:21Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value < 0) { value = value + 256; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2365/buggy-version/designs.graal.plugins.org.obeonetwork.graal.design.src.org.obeonetwork.graal.design.ui.decoration.AbstractUserStoryDecorator.java", "BodyUseAPI": [], "Fixed commit": "a8d62d0e9f6fdea2954b85779c8ded179a6ed3bf", "Url": "https://api.github.com/repos/ObeoNetwork/InformationSystem", "Date": "2013-04-04T14:35:47Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.equals(Crawler.Attributes.DB)) { freemarker.ext.beans.BeansWrapperBuilder bwb = new freemarker.ext.beans.BeansWrapperBuilder(freemarker.template.Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS); freemarker.ext.beans.BeansWrapper bw = bwb.build(); return bw.wrap(db); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/9244/buggy-version/src.main.java.org.jbake.template.FreemarkerTemplateEngine.java", "BodyUseAPI": [], "Fixed commit": "f63380de815e1fef8f85fc4b5fff491671bdb3e9", "Url": "https://api.github.com/repos/manikmagar/jbake", "Date": "2017-05-10T23:09:29Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeout) > 0) { org.apache.camel.impl.DefaultShutdownStrategy.LOG.info(((((\"Waiting as there are still \" + size) + \" inflight and pending exchanges to complete, timeout in \") + ((java.util.concurrent.TimeUnit.SECONDS.convert(timeout, timeUnit)) - ((loopCount++) * loopDelaySeconds))) + \" seconds.\")); java.lang.Thread.sleep((loopDelaySeconds * 1000)); }else { throw new java.lang.InterruptedException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8025/buggy-version/camel-core.src.main.java.org.apache.camel.impl.DefaultShutdownStrategy.java", "BodyUseAPI": [], "Fixed commit": "6c27433e25d706cd643c4dec5bb39099d0079ce7", "Url": "https://api.github.com/repos/rafacm/camel", "Date": "2013-05-09T05:57:46Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeout < 0) { throw new java.lang.IllegalArgumentException(\"Timeout must not be lesser than 0.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8025/buggy-version/camel-core.src.main.java.org.apache.camel.impl.DefaultShutdownStrategy.java", "BodyUseAPI": [], "Fixed commit": "6c27433e25d706cd643c4dec5bb39099d0079ce7", "Url": "https://api.github.com/repos/rafacm/camel", "Date": "2013-05-09T05:57:46Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (suspendedAfterYield) { java.lang.Object rootInstance = org.jcoro.Coro.popRef(); if (rootInstance != (runnable)) throw new java.lang.AssertionError(\"This shouldn't happen\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7809/buggy-version/jcoro-api.src.main.java.org.jcoro.Coro.java", "BodyUseAPI": [], "Fixed commit": "60dc098435e13ac851c6658f5d0607db4ad14427", "Url": "https://api.github.com/repos/elw00d/jcoro", "Date": "2015-07-12T21:11:48Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getConfigList().getSelectedIndices().length) != 0) { if (evaluation.simulator.gui.pluginRegistry.SimPropRegistry.getInstance().getUnsavedChanges()) { int backValue = javax.swing.JOptionPane.showConfirmDialog(evaluation.simulator.gui.service.GuiService.getInstance().getMainGui(), \"There are unchanged changes! They will get lost if you load a new configuration. Do you want to discard changes and load a new configuration?\", \"Unchanged changes\", javax.swing.JOptionPane.YES_NO_OPTION); if (backValue == (javax.swing.JOptionPane.YES_OPTION)) { load(); } }else { load(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2105/buggy-version/src.evaluation.simulator.gui.customElements.ConfigChooserPanel.java", "BodyUseAPI": [], "Fixed commit": "2d51bc8f6df3b1328f3ffa071a8366114d5ddd84", "Url": "https://api.github.com/repos/abeifuss/simgui", "Date": "2014-03-11T09:42:05Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((finalEstimate) < 0) { finalEstimate = ((int) (this.getMean())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5876/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.models.Estimate.java", "BodyUseAPI": [], "Fixed commit": "51c491113e9412a42be5b902c3fb6cea4c0dc01b", "Url": "https://api.github.com/repos/zoccihedron/wpi-suite", "Date": "2014-04-23T02:04:39Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(innerPersonsList.isEmpty())) innerPersonsList.remove(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7734/buggy-version/src.generator.Generator.java", "BodyUseAPI": ["java.util.List<models.Person>.remove(int)"], "Fixed commit": "306bf0c7da984387cf4bd54c6e8894b1a36080c4", "Url": "https://api.github.com/repos/eggnet/stca", "Date": "2012-07-11T00:55:59Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((server.getContainingComponents().size()) > 0) { this.runtimeDeploymentNodes.put(server.getResourceContainerID(), server); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6602/buggy-version/analysis.src.main.java.org.iobserve.adaption.ModelComparision.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, org.iobserve.analysis.graph.DeploymentNode>.put(server.getResourceContainerID(),org.iobserve.analysis.graph.DeploymentNode)", "org.iobserve.analysis.graph.DeploymentNode.getResourceContainerID()"], "Fixed commit": "57c2e566ef4ac2964738dd3ca4ed380774181f19", "Url": "https://api.github.com/repos/research-iobserve/iobserve-analysis", "Date": "2017-05-20T18:28:57Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((blockIDs) != null) for (int m = 0; m < (blockIDs.length); m++) { str += ((\",\" + (cpw.mods.fml.common.registry.GameData.getBlockRegistry().getNameForObject(blockIDs[m]))) + \"-\") + (blockMDs[m]); if ((((extraData) != null) && ((extraData[m]) != null)) && (!(extraData[m].equals(\"\")))) str += \"-\" + (extraData[m]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1227/buggy-version/assets.generator.TemplateRule.java", "BodyUseAPI": [], "Fixed commit": "b3d9b33febc6cee969fe21c1d194e84140793218", "Url": "https://api.github.com/repos/GotoLink/Generatormods", "Date": "2014-08-10T14:31:48Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (model.isFinished()) { font.draw(batch, (\"Betyg: \" + (model.getGrade())), 470, 350); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7137/buggy-version/core.src.se.alexanderkarlsson.beerchug.BeerChug.java", "BodyUseAPI": ["com.badlogic.gdx.graphics.g2d.BitmapFont.draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,(\"Betyg: \" + (model.getGrade())),int,int)", "se.alexanderkarlsson.beerchug.beerchugmodel.BottleBeerChug.getGrade()"], "Fixed commit": "fe05133a02df5136b801171b5448acea84c4516d", "Url": "https://api.github.com/repos/Sweshiman/BeerChug", "Date": "2015-04-20T10:57:43Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clazz == (java.lang.Double.class)) || (clazz == (java.lang.Double.class))) { return ((S) (queryForDouble(sql.toString(), qt.whereValues()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7760/buggy-version/JazminServer.src.jazmin.driver.jdbc.SmartBeanDAO.java", "BodyUseAPI": [], "Fixed commit": "7befc20d19fa6ac56bffc5fe3d5f536cac40b720", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2017-06-21T08:13:12Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clazz == (java.lang.Float.class)) || (clazz == (java.lang.Float.class))) { return ((S) (queryForFloat(sql.toString(), qt.whereValues()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7760/buggy-version/JazminServer.src.jazmin.driver.jdbc.SmartBeanDAO.java", "BodyUseAPI": [], "Fixed commit": "7befc20d19fa6ac56bffc5fe3d5f536cac40b720", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2017-06-21T08:13:12Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (menuRotated) { menu.startAnimation(openRotateAnimation); menuItemsLayout.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/190/buggy-version/app.src.main.java.com.savinoordine.menuanimation.MyActivity.java", "BodyUseAPI": [], "Fixed commit": "4e6f79a9b74259bf99e356e3ae4b69b8621c1385", "Url": "https://api.github.com/repos/onivas/MenuAnimation", "Date": "2014-09-08T08:11:02Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((customer.isEmpty(CustomerFieldTypes.DOB)) == false) { customerTable.put(FlatUserFieldTypes.USER_BIRTH_DATE.name(), customer.get(CustomerFieldTypes.DOB)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1101/buggy-version/src.mecard.customer.FlatFormattedCustomer.java", "BodyUseAPI": [], "Fixed commit": "2be98ba7e8d69a1111c7573ffb78cdc861654bcc", "Url": "https://api.github.com/repos/anisbet/Metro", "Date": "2013-09-27T19:36:54Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cgeo.geocaching.settings.Settings.useOrientationSensor(app)) { sensorDirectionObservable = cgeo.geocaching.sensors.OrientationProvider.create(app); }else if (cgeo.geocaching.sensors.RotationProvider.hasRotationSensor(app)) { sensorDirectionObservable = cgeo.geocaching.sensors.RotationProvider.create(app); }else { sensorDirectionObservable = cgeo.geocaching.sensors.MagnetometerAndAccelerometerProvider.create(app); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3104/buggy-version/main.src.cgeo.geocaching.sensors.Sensors.java", "BodyUseAPI": ["cgeo.geocaching.sensors.RotationProvider.create(cgeo.geocaching.CgeoApplication)", "cgeo.geocaching.sensors.RotationProvider.hasRotationSensor(cgeo.geocaching.CgeoApplication)", "cgeo.geocaching.sensors.MagnetometerAndAccelerometerProvider.create(cgeo.geocaching.CgeoApplication)", "cgeo.geocaching.sensors.OrientationProvider.create(cgeo.geocaching.CgeoApplication)"], "Fixed commit": "fdb59c915481b64d8c9c39c1eb96ebc9b984e8b2", "Url": "https://api.github.com/repos/tobiasge/cgeo", "Date": "2015-11-02T19:50:26Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eventList) == null) { return 0; }else { return eventList.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7321/buggy-version/app.src.main.java.com.iitb.moodindigo.mi2016.BookmarkedEventsListAdapter.java", "BodyUseAPI": [], "Fixed commit": "af12fb634da6f793ae65ab024a7671c080dc4361", "Url": "https://api.github.com/repos/Arunabh98/MI-2016", "Date": "2016-12-17T18:28:52Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.server.OClientConnection.getDatabase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(ccDB.isClosed())) && ((ccDB.getURL()) != null)) { if (ccDB.getURL().equals(dbURL)) { ccDB.reloadUser(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/9249/buggy-version/server.src.main.java.com.orientechnologies.orient.server.security.ODefaultServerSecurity.java", "BodyUseAPI": ["com.orientechnologies.orient.core.db.document.ODatabaseDocumentTx.getURL()", "com.orientechnologies.orient.core.db.document.ODatabaseDocumentTx.reloadUser()", "ccDB.getURL().equals(java.lang.String)"], "Fixed commit": "674f37854515a7199df7e0f955579d5eae1ba70e", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-05-06T15:31:46Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.raml.model.parameter.AbstractParam.getExample()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (oReturn.endsWith(\"\\n\")) { oReturn = oReturn.substring(0, ((oReturn.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4202/buggy-version/src.main.java.fr.pagesjaunes.tools.ramlcodegen.renderers.adaptators.Resolver.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "7140d3b9bcaa72481ce1126132f9ecc4de0fcaf7", "Url": "https://api.github.com/repos/pagesjaunes/raml-codegen", "Date": "2014-05-25T14:40:55Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActionMode) != null) { mActionMode.finish(); mActionMode = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2861/buggy-version/src.com.mnishiguchi.android.movingestimator.RoomListFragment.java", "BodyUseAPI": [], "Fixed commit": "8973c8cbef974698dced4b7f3b764276b7e21601", "Url": "https://api.github.com/repos/mnishiguchi/MovingEstimator", "Date": "2014-12-07T03:31:33Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter.getCount()) > 1) { setDefaultListSelection(); }else { getActivity().getActionBar().setSubtitle(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2861/buggy-version/src.com.mnishiguchi.android.movingestimator.RoomListFragment.java", "BodyUseAPI": [], "Fixed commit": "8973c8cbef974698dced4b7f3b764276b7e21601", "Url": "https://api.github.com/repos/mnishiguchi/MovingEstimator", "Date": "2014-12-07T03:31:33Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.pm.PackageManager.getLaunchIntentForPackage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (i != null) { context.startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5068/buggy-version/app.src.main.java.com.freshollie.headunitcontroller.input.DeviceInputManager.java", "BodyUseAPI": ["android.content.Context.startActivity(android.content.Intent)"], "Fixed commit": "58e25d34a82250a15ce1857cafbd511976195a80", "Url": "https://api.github.com/repos/freshollie/headunit-controller-android", "Date": "2017-06-22T19:10:23Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, yahoofinance.Stock>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((stock.getCurrency()) == null) { com.udacity.stockhawk.data.PrefUtils.removeStock(context, stock.getSymbol()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3385/buggy-version/app.src.main.java.com.udacity.stockhawk.sync.QuoteSyncJob.java", "BodyUseAPI": ["yahoofinance.Stock.getSymbol()", "com.udacity.stockhawk.data.PrefUtils.removeStock(android.content.Context,stock.getSymbol())"], "Fixed commit": "e600b2dd1c4915325f6c1634fae231ca90aec481", "Url": "https://api.github.com/repos/davegogol/StockHawk", "Date": "2017-04-13T10:41:59Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eclipse.core.runtime.Platform.getNL().substring(0, 2).equals(\"de\")) { lang = \"de\"; }else { lang = \"en\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2235/buggy-version/org.jcryptool.visual.jctca.src.org.jcryptool.visual.jctca.listeners.ResizeListener.java", "BodyUseAPI": [], "Fixed commit": "804f3ad14679874dfe3851c81b8c8d64ef250cf0", "Url": "https://api.github.com/repos/Kalliope/minica", "Date": "2013-06-14T09:31:33Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(hasGottenMilestone(m))) { setTotalMileStone(m, ((getTotalMileStone(m)) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/942/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.User.java", "BodyUseAPI": ["com.Ben12345rocks.VotingPlugin.Objects.User.setTotalMileStone(int,int)", "com.Ben12345rocks.VotingPlugin.Objects.User.getTotalMileStone(int)"], "Fixed commit": "228b3cb41b2cba4a10693f9ab8898657a25baf1c", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-11-09T02:08:34Z"},
{"Line": "=>959", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Main.mainController.getWebViewAttributes().getHeight()) >= 750) { uiAttributeSB.append(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((\"<div class='attribute-container'>\" + ((\"<p style='text-align:center;padding:0;margin:0;'><b>Attributes</b></p>\" + \"<div class='full-width-container' style='margin:8 0 0 0; margin:0; padding:0;'>\") + \"<div class='icon small'><div class='icon-content'>\")) + (com.base.game.character.attributes.StrengthLevel.getStrengthLevelFromValue(com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.STRENGTH)).getRelatedStatusEffect().getSVGString(com.base.rendering.RenderingEngine.npcToRender))) + \"</div></div>\") + \"<div class='barBackgroundAtt'>\") + \"<div style='width:\") + ((com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.STRENGTH)) * 0.65)) + \"vw; height:5vw; background:\") + (Colour.GENERIC_ATTRIBUTE.toWebHexString())) + \"; float:left; border-radius: 2;'></div>\") + \"</div>\") + \"<p style='text-align:center; margin:2vw 0 0 0; padding:0;color:\") + ((com.base.rendering.RenderingEngine.renderedNPCStrengthValue) < (com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.STRENGTH)) ? Colour.GENERIC_GOOD.toWebHexString() : (com.base.rendering.RenderingEngine.renderedNPCStrengthValue) > (com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.STRENGTH)) ? Colour.GENERIC_BAD.toWebHexString() : \"default\")) + \";'>\") + ((int) (java.lang.Math.ceil(com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.STRENGTH))))) + \"</p>\") + \"<div class='overlay' id='NPC_\") + (Attribute.STRENGTH.getName())) + \"'></div>\") + \"</div>\") + \"<div class='full-width-container' style='margin:0;padding:0;'>\") + \"<div class='icon small'><div class='icon-content'>\") + (com.base.game.character.attributes.IntelligenceLevel.getIntelligenceLevelFromValue(com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.INTELLIGENCE)).getRelatedStatusEffect().getSVGString(com.base.rendering.RenderingEngine.npcToRender))) + \"</div></div>\") + \"<div class='barBackgroundAtt'>\") + \"<div style='width:\") + ((com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.INTELLIGENCE)) * 0.65)) + \"vw; height:5vw; background:\") + (Colour.GENERIC_ATTRIBUTE.toWebHexString())) + \"; float:left; border-radius: 2;'></div>\") + \"</div>\") + \"<p style='text-align:center; margin:2vw 0 0 0; padding:0;color:\") + ((com.base.rendering.RenderingEngine.renderedNPCIntelligenceValue) < (com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.INTELLIGENCE)) ? Colour.GENERIC_GOOD.toWebHexString() : (com.base.rendering.RenderingEngine.renderedNPCIntelligenceValue) > (com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.INTELLIGENCE)) ? Colour.GENERIC_BAD.toWebHexString() : \"default\")) + \";'>\") + ((int) (java.lang.Math.ceil(com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.INTELLIGENCE))))) + \"</p>\") + \"<div class='overlay' id='NPC_\") + (Attribute.INTELLIGENCE.getName())) + \"'></div>\") + \"</div>\") + \"<div class='full-width-container' style='margin:0;padding:0;'>\") + \"<div class='icon small'><div class='icon-content'>\") + (com.base.game.character.attributes.FitnessLevel.getFitnessLevelFromValue(com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.FITNESS)).getRelatedStatusEffect().getSVGString(com.base.rendering.RenderingEngine.npcToRender))) + \"</div></div>\") + \"<div class='barBackgroundAtt'>\") + \"<div style='width:\") + ((com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.FITNESS)) * 0.65)) + \"vw; height:5vw; background:\") + (Colour.GENERIC_ATTRIBUTE.toWebHexString())) + \"; float:left; border-radius: 2;'></div>\") + \"</div>\") + \"<p style='text-align:center; margin:2vw 0 0 0; padding:0;color:\") + ((com.base.rendering.RenderingEngine.renderedNPCFitnessValue) < (com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.FITNESS)) ? Colour.GENERIC_GOOD.toWebHexString() : (com.base.rendering.RenderingEngine.renderedNPCFitnessValue) > (com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.FITNESS)) ? Colour.GENERIC_BAD.toWebHexString() : \"default\")) + \";'>\") + ((int) (java.lang.Math.ceil(com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.FITNESS))))) + \"</p>\") + \"<div class='overlay' id='NPC_\") + (Attribute.FITNESS.getName())) + \"'></div>\") + \"</div>\") + \"<div class='full-width-container' style='padding:0;'>\") + \"<div class='icon small'><div class='icon-content'>\") + (com.base.game.character.attributes.CorruptionLevel.getCorruptionLevelFromValue(com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.CORRUPTION)).getRelatedStatusEffect().getSVGString(com.base.rendering.RenderingEngine.npcToRender))) + \"</div></div>\") + \"<div class='barBackgroundAtt corruption'>\") + \"<div style='width:\") + ((com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.CORRUPTION)) * 0.65)) + \"vw; height:5vw; background:\") + (Attribute.CORRUPTION.getColour().toWebHexString())) + \"; float:left; border-radius: 2;'></div>\") + \"</div>\") + \"<p style='text-align:center; margin:2vw 0 0 0; padding:0;color:\") + ((com.base.rendering.RenderingEngine.renderedNPCCorruptionValue) < (com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.CORRUPTION)) ? Colour.GENERIC_GOOD.toWebHexString() : (com.base.rendering.RenderingEngine.renderedNPCCorruptionValue) > (com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.CORRUPTION)) ? Colour.GENERIC_BAD.toWebHexString() : \"default\")) + \";'>\") + ((int) (java.lang.Math.ceil(com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.CORRUPTION))))) + \"</p>\") + \"<div class='overlay' id='NPC_\") + (Attribute.CORRUPTION.getName())) + \"'></div>\") + \"</div>\") + \"</div>\")); }else { uiAttributeSB.append(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((\"<div class='attribute-container'>\" + ((\"<p style='text-align:center;padding:0;margin:0;'><b>Attributes</b></p>\" + \"<div class='quarter-width-container'>\") + \"<div class='icon' style='width:45%'><div class='icon-content'>\")) + (com.base.game.character.attributes.StrengthLevel.getStrengthLevelFromValue(com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.STRENGTH)).getRelatedStatusEffect().getSVGString(com.base.rendering.RenderingEngine.npcToRender))) + \"</div></div>\") + \"<div style='text-align:center;height:30px;padding:0;margin:0;line-height:30px;'>\") + \"<b style='color:\") + (Attribute.STRENGTH.getColour().toWebHexString())) + \";'>\") + ((int) (com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.STRENGTH)))) + \"</b>\") + \"</div>\") + \"<div class='overlay' id='NPC_\") + (Attribute.STRENGTH.getName())) + \"'></div>\") + \"</div>\") + \"<div class='quarter-width-container'>\") + \"<div class='icon' style='width:45%'><div class='icon-content'>\") + (com.base.game.character.attributes.IntelligenceLevel.getIntelligenceLevelFromValue(com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.INTELLIGENCE)).getRelatedStatusEffect().getSVGString(com.base.rendering.RenderingEngine.npcToRender))) + \"</div></div>\") + \"<div style='text-align:center;height:30px;padding:0;margin:0;line-height:30px;'>\") + \"<b style='color:\") + (Attribute.INTELLIGENCE.getColour().toWebHexString())) + \";'>\") + ((int) (com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.INTELLIGENCE)))) + \"</b>\") + \"</div>\") + \"<div class='overlay' id='NPC_\") + (Attribute.INTELLIGENCE.getName())) + \"'></div>\") + \"</div>\") + \"<div class='quarter-width-container'>\") + \"<div class='icon' style='width:45%'><div class='icon-content'>\") + (com.base.game.character.attributes.FitnessLevel.getFitnessLevelFromValue(com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.FITNESS)).getRelatedStatusEffect().getSVGString(com.base.rendering.RenderingEngine.npcToRender))) + \"</div></div>\") + \"<div style='text-align:center;height:30px;padding:0;margin:0;line-height:30px;'>\") + \"<b style='color:\") + (Attribute.FITNESS.getColour().toWebHexString())) + \";'>\") + ((int) (com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.FITNESS)))) + \"</b>\") + \"</div>\") + \"<div class='overlay' id='NPC_\") + (Attribute.FITNESS.getName())) + \"'></div>\") + \"</div>\") + \"<div class='quarter-width-container'>\") + \"<div class='icon' style='width:45%'><div class='icon-content'>\") + (com.base.game.character.attributes.CorruptionLevel.getCorruptionLevelFromValue(com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.CORRUPTION)).getRelatedStatusEffect().getSVGString(com.base.rendering.RenderingEngine.npcToRender))) + \"</div></div>\") + \"<div style='text-align:center;height:30px;padding:0;margin:0;line-height:30px;'>\") + \"<b style='color:\") + (Attribute.CORRUPTION.getColour().toWebHexString())) + \";'>\") + ((int) (com.base.rendering.RenderingEngine.npcToRender.getAttributeValue(Attribute.CORRUPTION)))) + \"</b>\") + \"</div>\") + \"<div class='overlay' id='NPC_\") + (Attribute.CORRUPTION.getName())) + \"'></div>\") + \"</div>\") + \"</div>\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5758/buggy-version/src.com.base.rendering.RenderingEngine.java", "BodyUseAPI": [], "Fixed commit": "9be09fc69fc79107e9fdd5ae3353ae61c906ef22", "Url": "https://api.github.com/repos/Rfpnj/liliths-throne-public", "Date": "2017-09-23T05:01:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (this.versionOldest)) { element.setAttribute(\"version\", this.version); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8584/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.EASettings.java", "BodyUseAPI": [], "Fixed commit": "f8240eec5806eecaac5f6b8dc05bd150829ecd8f", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2017-02-20T21:25:37Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (this.uuid)) { element.setAttribute(\"uuid\", this.uuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8584/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.EASettings.java", "BodyUseAPI": [], "Fixed commit": "f8240eec5806eecaac5f6b8dc05bd150829ecd8f", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2017-02-20T21:25:37Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (this.versionOldest)) { element.setAttribute(\"versionOldest\", this.versionOldest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8584/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.EASettings.java", "BodyUseAPI": [], "Fixed commit": "f8240eec5806eecaac5f6b8dc05bd150829ecd8f", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2017-02-20T21:25:37Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((element) == null) { throw new java.util.NoSuchElementException(); }else { T e = element; element = null; return e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4758/buggy-version/troilus-core-java7.src.main.java.net.oneandone.troilus.SingleEntryResultListAdapter.java", "BodyUseAPI": [], "Fixed commit": "d4127548a1576a578aa5ff91e6d4ca341945ffdd", "Url": "https://api.github.com/repos/1and1/Troilus", "Date": "2015-03-08T07:40:25Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getProperty(\"javafx.runtime.path\")) == null) { java.lang.System.getProperties().setProperty(\"javafx.runtime.path\", java.lang.System.getProperty(\"java.home\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6133/buggy-version/app.src.main.java.net.jidget.Launch.java", "BodyUseAPI": [], "Fixed commit": "22ca3779c8612694421049a5811c6e69a949229e", "Url": "https://api.github.com/repos/derari/jidget", "Date": "2013-02-22T09:14:22Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (iscompleted.equals(\"false\")) { isCompleted = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2625/buggy-version/Muffins.src.java.SERVLETS.editTaskServlet.java", "BodyUseAPI": [], "Fixed commit": "4192497b9007170bbc1704a28d26355957d4841d", "Url": "https://api.github.com/repos/jngadiman/IS480-IIE", "Date": "2017-09-21T18:07:28Z"},
{"Line": "=>990", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (fieldAnnotation != null) { if (!(fieldAnnotation.serialize())) { continue; } if ((fieldAnnotation.name().length()) != 0) { propertyName = fieldAnnotation.name(); if (aliasMap != null) { propertyName = aliasMap.get(propertyName); if (propertyName == null) { continue; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5996/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": ["com.alibaba.fastjson.annotation.JSONField.serialize()", "fieldAnnotation.name().length()", "com.alibaba.fastjson.annotation.JSONField.name()", "com.alibaba.fastjson.annotation.JSONField.name()"], "Fixed commit": "239dd97e1543cb9ae1f9378e7b8b528b64e4f5ea", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2013-06-22T03:10:57Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((locale.getLanguage().equals(new java.util.Locale(\"ru\").getLanguage())) || (locale.getLanguage().equals(new java.util.Locale(\"en\").getLanguage()))) { this.res = java.util.ResourceBundle.getBundle(\"message\", locale); }else { java.util.Locale defaultLocale = new java.util.Locale(\"en\"); this.res = java.util.ResourceBundle.getBundle(\"message\", defaultLocale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8857/buggy-version/src.main.java.ru.kle10wka.main.TimeUtil.java", "BodyUseAPI": [], "Fixed commit": "b80ef98da40f4342888a1177f5e68181fd16a19e", "Url": "https://api.github.com/repos/kle10wka/TimeTest", "Date": "2017-09-11T10:50:35Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.agilewiki.utils.immutable.collections.VersionedMapNode.listAccessor(java.lang.String,long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (vlistAccessor == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/456/buggy-version/cow.src.main.java.org.agilewiki.utils.ids.composites.SecondaryId.java", "BodyUseAPI": [], "Fixed commit": "6db5f53fe8273264216e078389528c936c212196", "Url": "https://api.github.com/repos/laforge49/utils", "Date": "2015-04-08T19:08:19Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["db.mapAccessor().listAccessor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (listAccessor == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/456/buggy-version/cow.src.main.java.org.agilewiki.utils.ids.composites.SecondaryId.java", "BodyUseAPI": [], "Fixed commit": "6db5f53fe8273264216e078389528c936c212196", "Url": "https://api.github.com/repos/laforge49/utils", "Date": "2015-04-08T19:08:19Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time == null) return de.tbressler.waterrower.workout.db.utils.DerbyUtils.NULL;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4850/buggy-version/src.main.java.de.tbressler.waterrower.workout.db.utils.DerbyUtils.java", "BodyUseAPI": [], "Fixed commit": "cabb80d23240544fb33f6d9b2b41c422358d8ab9", "Url": "https://api.github.com/repos/tbressler/waterrower-workout", "Date": "2017-11-25T13:48:10Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4850/buggy-version/src.main.java.de.tbressler.waterrower.workout.db.utils.DerbyUtils.java", "BodyUseAPI": [], "Fixed commit": "cabb80d23240544fb33f6d9b2b41c422358d8ab9", "Url": "https://api.github.com/repos/tbressler/waterrower-workout", "Date": "2017-11-25T13:48:10Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (datetime == null) return de.tbressler.waterrower.workout.db.utils.DerbyUtils.NULL;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4850/buggy-version/src.main.java.de.tbressler.waterrower.workout.db.utils.DerbyUtils.java", "BodyUseAPI": [], "Fixed commit": "cabb80d23240544fb33f6d9b2b41c422358d8ab9", "Url": "https://api.github.com/repos/tbressler/waterrower-workout", "Date": "2017-11-25T13:48:10Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) return de.tbressler.waterrower.workout.db.utils.DerbyUtils.NULL;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4850/buggy-version/src.main.java.de.tbressler.waterrower.workout.db.utils.DerbyUtils.java", "BodyUseAPI": [], "Fixed commit": "cabb80d23240544fb33f6d9b2b41c422358d8ab9", "Url": "https://api.github.com/repos/tbressler/waterrower-workout", "Date": "2017-11-25T13:48:10Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getKeyboard()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1438/buggy-version/src.com.anysoftkeyboard.keyboards.views.AnyKeyboardView.java", "BodyUseAPI": [], "Fixed commit": "80a6895f1cac026c68dd49e69eaf85eb376c8285", "Url": "https://api.github.com/repos/menny/AnySoftKeyboard", "Date": "2013-07-22T14:41:45Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mReminders.size()) > 0) { return mReminders.get(i); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6431/buggy-version/app.src.main.java.com.cs151.helpfulhints.Subject.java", "BodyUseAPI": ["java.util.ArrayList<com.cs151.helpfulhints.Reminder>.get(int)"], "Fixed commit": "d944bdd4521f83b56f08c685aee435caffb8d29b", "Url": "https://api.github.com/repos/chrpham/cs151", "Date": "2015-11-24T15:48:26Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current) == (previous)) { previous = n; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6869/buggy-version/java.src.com.sigmund_hansen.datastructures.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "a63dd1f79f0e850987d4f57651cf7dffe3f02914", "Url": "https://api.github.com/repos/Sardtok/datastructures", "Date": "2013-12-11T13:45:22Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current) == (next)) { next = n; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6869/buggy-version/java.src.com.sigmund_hansen.datastructures.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "a63dd1f79f0e850987d4f57651cf7dffe3f02914", "Url": "https://api.github.com/repos/Sardtok/datastructures", "Date": "2013-12-11T13:45:22Z"},
{"Line": "=>764", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isntAtTopLevel()) { this.consumeOptionalTerminator(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4664/buggy-version/src.com.steelypip.powerups.minxson.MinXSONParser.java", "BodyUseAPI": [], "Fixed commit": "f4b1e22c27c4b948a401c389743721dacf9e2877", "Url": "https://api.github.com/repos/sfkleach/MinXML", "Date": "2014-11-06T09:04:04Z"},
{"Line": "=>774", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isntAtTopLevel()) { this.consumeOptionalTerminator(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4664/buggy-version/src.com.steelypip.powerups.minxson.MinXSONParser.java", "BodyUseAPI": [], "Fixed commit": "f4b1e22c27c4b948a401c389743721dacf9e2877", "Url": "https://api.github.com/repos/sfkleach/MinXML", "Date": "2014-11-06T09:04:04Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentManager.findFragmentByTag(HomeListFragment.TAG)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (homeListFragment == null) { fragmentManager.beginTransaction().add(R.id.main_content, new com.ddmeng.todorealm.home.HomeListFragment(), HomeListFragment.TAG).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6690/buggy-version/app.src.main.java.com.ddmeng.todorealm.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "19995f519aa0eac8d87c376fc90353303a07e6dc", "Url": "https://api.github.com/repos/mengdd/TodoRealm", "Date": "2017-02-10T08:17:21Z"},
{"Line": "=>790", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == (this.getWorld().getCurrentWorm())) this.getWorld().startNextTurn();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3239/buggy-version/1314-Worms-Part2.src.worms.model.Worm.java", "BodyUseAPI": [], "Fixed commit": "82465d504d61c7b2c02a9f9b9e2163f906363d9d", "Url": "https://api.github.com/repos/WormsRepository/Project", "Date": "2014-04-29T21:03:48Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotBlank(getWorkspace())) { args.add(\"-workspace\", getWorkspace()); }else { context.log(((\"Using \\'\" + (projectDirectory)) + \"\\' as workspace auto search directory\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1872/buggy-version/src.main.java.jenkins.plugins.clangscanbuild.commands.ScanBuildCommand.java", "BodyUseAPI": [], "Fixed commit": "e7e84753eeb1cc231d7078973671f8b26905b611", "Url": "https://api.github.com/repos/kenji21/clang-scanbuild-plugin", "Date": "2014-10-11T04:02:04Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bowlStack == null) bowlStack = inSlot.copy(); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1023/buggy-version/src.main.java.dk.mrspring.kitchen.recipe.RecipeRegistry.java", "BodyUseAPI": [], "Fixed commit": "8d8aa753629f6e5684dccbb4d7ce643ba3520189", "Url": "https://api.github.com/repos/MrSpring/TheKitchenMod", "Date": "2015-01-25T15:32:17Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getFile().getType()) == (FileType.FILE)) startLoading(new com.idvp.platform.journal.reader.loading.VfsSource(event.getFile()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6826/buggy-version/src.main.java.com.idvp.platform.journal.reader.JournalRecordsReader.java", "BodyUseAPI": ["com.idvp.platform.journal.reader.JournalRecordsReader<T>.startLoading(com.idvp.platform.journal.reader.loading.VfsSource)", "com.idvp.platform.journal.reader.FileChangeEvent.getFile()"], "Fixed commit": "779355bc133a978d994515e035940c1e74da1b01", "Url": "https://api.github.com/repos/andrew--i/journal", "Date": "2017-04-18T10:19:48Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.length()) == 0) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1751/buggy-version/src.main.java.com.github.ucchyocean.lc.japanize.IMEConverter.java", "BodyUseAPI": [], "Fixed commit": "2e032f9ecf1cc415388bd2ff54aa1158ba3ca37d", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2015-08-01T04:16:25Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.agilereview.core.external.storage.Reply.getReplies()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (jaxbReplies != null) { reply.setReplies(org.agilereview.storage.xml.conversion.Jaxb2Pojo.getReplies(reply, jaxbReplies)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7818/buggy-version/org.agilereview.storage.xml.src.main.java.org.agilereview.storage.xml.conversion.Jaxb2Pojo.java", "BodyUseAPI": ["org.agilereview.core.external.storage.Reply.setReplies(java.util.List<org.agilereview.core.external.storage.Reply>)", "org.agilereview.storage.xml.conversion.Jaxb2Pojo.getReplies(org.agilereview.core.external.storage.Reply,org.agilereview.xmlschema.author.Replies)"], "Fixed commit": "8073f528ed7a151637ebb933fe9dabe671db7bdb", "Url": "https://api.github.com/repos/AgileReview-Project/AgileReview-Plugin", "Date": "2014-03-16T21:06:10Z"},
{"Line": "=>1168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.storage.impl.local.paginated.wal.OWriteAheadLog.getFlushedLSN()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (minLsn == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8207/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.cache.OWOWCache.java", "BodyUseAPI": [], "Fixed commit": "fd8c76dfc546f46ec515477e5f3e65669a58e360", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-07T15:06:19Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos == totalPlayers) { affected = 0; }else { affected++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4663/buggy-version/src.practiceUno.SpecialCard.java", "BodyUseAPI": [], "Fixed commit": "3d31c4467788d49e6d919e5ba85aae52574eaad1", "Url": "https://api.github.com/repos/MikeGuantonio/practiceUno", "Date": "2013-04-05T19:12:35Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(java.lang.String,org.springframework.jdbc.core.namedparam.MapSqlParameterSource)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == 0) meal = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8491/buggy-version/src.main.java.ru.javawebinar.topjava.repository.jdbc.JdbcMealRepositoryImpl.java", "BodyUseAPI": [], "Fixed commit": "34aee63e3ddba095c34d21d85bb30cd3f1bcfaeb", "Url": "https://api.github.com/repos/IvanRomanoff/topjava", "Date": "2017-04-12T22:23:52Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(classes.isEmpty())) { defaultTriggers.clear(); for (java.lang.String triggerName : classes) { hudson.plugins.emailext.plugins.EmailTriggerDescriptor d = ((hudson.plugins.emailext.plugins.EmailTriggerDescriptor) (jenkins.model.Jenkins.getInstance().getDescriptorByName(triggerName))); if (d != null) { defaultTriggers.add(d); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7193/buggy-version/src.main.java.hudson.plugins.emailext.ExtendedEmailPublisherDescriptor.java", "BodyUseAPI": [], "Fixed commit": "3ba5e9cba61b08ed0c9dd8411f5302e22072731c", "Url": "https://api.github.com/repos/jenkinsci/email-ext-plugin", "Date": "2015-04-10T03:32:53Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(formData.optString(\"defaultTriggers\"))) { java.lang.String triggerName = formData.getString(\"defaultTriggers\"); classes.add(triggerName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7193/buggy-version/src.main.java.hudson.plugins.emailext.ExtendedEmailPublisherDescriptor.java", "BodyUseAPI": ["net.sf.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "3ba5e9cba61b08ed0c9dd8411f5302e22072731c", "Url": "https://api.github.com/repos/jenkinsci/email-ext-plugin", "Date": "2015-04-10T03:32:53Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOnItemClickListener) != null) { mobItemViewHolder.itemView.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { mOnItemClickListener.onItemClick(view, position); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8645/buggy-version/app.src.main.java.online.himakeit.skylark.adapter.MobItemAdapter.java", "BodyUseAPI": [], "Fixed commit": "9b2299d58ced3272310c05fe1ebbe36c226d17df", "Url": "https://api.github.com/repos/skylarklxlong/WoodenBox", "Date": "2017-10-24T12:08:21Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (qid == null) return new org.trec.liveqa.Response(Response.Status.INTERNAL_ERROR, MIME_PLAINTEXT, \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5210/buggy-version/src.org.trec.liveqa.TrecLiveQaDemoServer.java", "BodyUseAPI": [], "Fixed commit": "310602c77bfd9d0320a931882e7a8359fe5f23ed", "Url": "https://api.github.com/repos/rueycheng/TRECLiveQAServer", "Date": "2015-06-09T02:50:19Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((extrasSheetPopulator.getPaymentTypesSize()) == 0) paymentTypeGroup.setRefersToFormula(\"Extras!$D$2:$D$2\"); else paymentTypeGroup.setRefersToFormula((\"Extras!$D$2:$D$\" + ((extrasSheetPopulator.getPaymentTypesSize()) + 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4675/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.infrastructure.dataimport.domain.populator.savings.SavingsTransactionWorkbookPopulator.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Name.setRefersToFormula((\"Extras!$D$2:$D$\" + ((extrasSheetPopulator.getPaymentTypesSize()) + 1)))", "org.mifosplatform.infrastructure.dataimport.domain.populator.ExtrasSheetPopulator.getPaymentTypesSize()"], "Fixed commit": "d16c11e0c395d4f8a4576a0fe87a6e620a35e642", "Url": "https://api.github.com/repos/diunuge/mifosx", "Date": "2014-08-01T14:14:51Z"},
{"Line": "=>1156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (text == null) { write(\"null\"); }else { writeStringWithDoubleQuote(text, ((char) (0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5766/buggy-version/src.main.java.com.alibaba.fastjson.serializer.SerializeWriter.java", "BodyUseAPI": ["com.alibaba.fastjson.serializer.SerializeWriter.writeStringWithDoubleQuote(java.lang.String,int)"], "Fixed commit": "82bdb5ba10274e0856642660ac2522f00a4791c1", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2016-04-20T14:28:29Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (RoleEnum.AC_CANDIDATE.equals(sourceUser.getLastLoginRole())) { targetUser.setLastLoginRole(RoleEnum.CANDIDATE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4971/buggy-version/gde-backend.src.main.java.com.nagarro.gde.service.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "bb8fd071ce29784323f0901220240975ff905f85", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-06-23T11:50:08Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rits.cloning.Cloner.deepClone(com.nagarro.gde.persistence.model.UserRole)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (RoleEnum.AC_CANDIDATE.equals(targetUserRole.getRole().getCode())) { targetUserRole.setRole(new com.nagarro.gde.persistence.model.base.Role(com.nagarro.gde.persistence.model.enums.RoleEnum.CANDIDATE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4971/buggy-version/gde-backend.src.main.java.com.nagarro.gde.service.UserRoleServiceImpl.java", "BodyUseAPI": ["com.nagarro.gde.persistence.model.UserRole.setRole(com.nagarro.gde.persistence.model.base.Role)"], "Fixed commit": "bb8fd071ce29784323f0901220240975ff905f85", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-06-23T11:50:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((planFragments) == null) { planFragments = new com.olilay.oplang.PlanFragment[2]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7267/buggy-version/app.src.main.java.com.olilay.oplang.PlanManager.java", "BodyUseAPI": [], "Fixed commit": "ea2f4d58a94062aa02f4f0eb56584e4d9971f5e2", "Url": "https://api.github.com/repos/OliLay/OPlanG", "Date": "2015-11-19T12:50:05Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (argLength >= 0) { msg.append(args[argLength]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/825/buggy-version/src.main.java.org.cyberiantiger.minecraft.duckchat.command.BroadcastSubCommand.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "a62ee048a0e91a51ba96ac4796b484768f026ea5", "Url": "https://api.github.com/repos/cybertiger/Bukkit-DuckChat", "Date": "2014-08-16T17:15:00Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(event.hasPermission(\"giveall.give\"))) { event.sendMessage(((Main.PREFIX) + \"You do not have the correct permission to use htis command.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8795/buggy-version/net.gb.chrizc.giveall.Commands.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(((Main.PREFIX) + \"You do not have the correct permission to use htis command.\"))"], "Fixed commit": "77e3a3ef37400f5842efd5d546b4f07895508a0b", "Url": "https://api.github.com/repos/ChrizC/GiveAll", "Date": "2012-03-20T18:43:27Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.normandra.data.ManyJoinColumnAccessor.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == value) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3072/buggy-version/src.main.java.org.normandra.data.ManyJoinColumnAccessor.java", "BodyUseAPI": [], "Fixed commit": "6b4119bdb16892899568974013d9bb7ed64fa8d9", "Url": "https://api.github.com/repos/trajar/normandra", "Date": "2014-09-02T01:52:53Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.normandra.data.ManyJoinColumnAccessor.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(value instanceof java.util.Collection)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3072/buggy-version/src.main.java.org.normandra.data.ManyJoinColumnAccessor.java", "BodyUseAPI": [], "Fixed commit": "6b4119bdb16892899568974013d9bb7ed64fa8d9", "Url": "https://api.github.com/repos/trajar/normandra", "Date": "2014-09-02T01:52:53Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasFiscalCountry()) && (fiscalCountry == null)) { throw new org.fenixedu.academic.domain.exceptions.DomainException(\"error.PartySocialSecurityNumber.cannot.remove.fiscal.country\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1983/buggy-version/src.main.java.org.fenixedu.academic.domain.organizationalStructure.PartySocialSecurityNumber.java", "BodyUseAPI": [], "Fixed commit": "8d899872c3d66ad1195098eed550ff8131ed75ac", "Url": "https://api.github.com/repos/qub-it/fenixedu-academic", "Date": "2017-01-20T15:40:56Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasSocialSecurityNumber()) && (com.google.common.base.Strings.isNullOrEmpty(socialSecurityNumber))) { throw new org.fenixedu.academic.domain.exceptions.DomainException(\"error.PartySocialSecurityNumber.cannot.remove.social.security.number\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1983/buggy-version/src.main.java.org.fenixedu.academic.domain.organizationalStructure.PartySocialSecurityNumber.java", "BodyUseAPI": [], "Fixed commit": "8d899872c3d66ad1195098eed550ff8131ed75ac", "Url": "https://api.github.com/repos/qub-it/fenixedu-academic", "Date": "2017-01-20T15:40:56Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(hasSocialSecurityNumber())) && (!(hasFiscalCountry()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1983/buggy-version/src.main.java.org.fenixedu.academic.domain.organizationalStructure.PartySocialSecurityNumber.java", "BodyUseAPI": [], "Fixed commit": "8d899872c3d66ad1195098eed550ff8131ed75ac", "Url": "https://api.github.com/repos/qub-it/fenixedu-academic", "Date": "2017-01-20T15:40:56Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dy < 0) && (at.pcgf.flymod.LiteModFlyMod.minecraft.world.isBlockNormalCube(new net.minecraft.util.math.BlockPos(((from.xCoord) + dx), (((from.yCoord) + dy) - 1.0), ((from.zCoord) + dz)), false))) { dy = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7656/buggy-version/src.main.java.at.pcgf.flymod.LiteModFlyMod.java", "BodyUseAPI": [], "Fixed commit": "4e58b286978579ad8b9b7ae5a8e497208032c89c", "Url": "https://api.github.com/repos/MarkusWME/Minecraft-Fly-Mod", "Date": "2017-01-04T22:35:20Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.todoroo.astrid.core.LinkActionExposer.getActionsForTask(android.content.Context,com.todoroo.astrid.data.Task,boolean,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (action != null) { taskActionLoader.put(task.getId(), action); return action; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/639/buggy-version/src.main.java.com.todoroo.astrid.adapter.TaskAdapter.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, com.todoroo.astrid.api.TaskAction>.put(task.getId(),com.todoroo.astrid.api.TaskAction)"], "Fixed commit": "6c5728b62babe1b6ce2b60459e94a8ca865ae896", "Url": "https://api.github.com/repos/Alexey-V/tasks", "Date": "2015-10-15T21:00:35Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result != null) { try { jarray = new org.json.JSONArray(result); } catch (org.json.JSONException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5409/buggy-version/src.com.sysu.youtour.dao.JSONFunctions.java", "BodyUseAPI": [], "Fixed commit": "3673a24f42716837591629c853c4d5ebb9611338", "Url": "https://api.github.com/repos/shenguojun/YouTour", "Date": "2013-11-16T06:51:41Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recyclerView) != null) { try { ((android.app.Activity) (context)).runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { if ((0 <= pos) && (pos < (getItemCount()))) recyclerView.smoothScrollToPosition(pos); } }); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6280/buggy-version/app.src.main.java.jp.gr.java_conf.ya.yumura.TlAdapter.java", "BodyUseAPI": [], "Fixed commit": "bdab1a3f41a6f182fe2d22b86ff644ca3a7f26aa", "Url": "https://api.github.com/repos/YA-androidapp/Yumura", "Date": "2016-11-19T09:49:57Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((swipeRefresh) != null) { try { ((android.app.Activity) (context)).runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { if (enable) { swipeRefresh.setRefreshing(true); }else { swipeRefresh.setRefreshing(false); } } }); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6280/buggy-version/app.src.main.java.jp.gr.java_conf.ya.yumura.TlAdapter.java", "BodyUseAPI": [], "Fixed commit": "bdab1a3f41a6f182fe2d22b86ff644ca3a7f26aa", "Url": "https://api.github.com/repos/YA-androidapp/Yumura", "Date": "2016-11-19T09:49:57Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (smartcity.accessibility.mapmanagement.Location.LocationTypes.valueOf(type.toUpperCase()).equals(LocationTypes.STREET)) { try { java.lang.String segmentId = java.lang.String.valueOf(smartcity.accessibility.navigation.Navigation.getMapSegmentOfLatLng(lat, lng).getLinkId()); loc.setSegmentId(segmentId); } catch (smartcity.accessibility.navigation.exception.CommunicationFailed e) { smartcity.accessibility.services.ReviewsService.logger.error(\"CommunicationFailed {} \", e); throw new smartcity.accessibility.services.exceptions.ReviewFailed(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4657/buggy-version/server-side.src.main.java.smartcity.accessibility.services.ReviewsService.java", "BodyUseAPI": [], "Fixed commit": "0068bc58d52dd788d36d73379e45986f31cd026d", "Url": "https://api.github.com/repos/TechnionYP5777/SmartCity-Accessibility", "Date": "2017-06-28T13:38:58Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stack.peek().next()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nxt == null) { throw new java.util.NoSuchElementException(\"No more elements\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8709/buggy-version/src.main.java.nl.esciencecenter.xenon.adaptors.filesystems.jclouds.JCloudsFileSytem.java", "BodyUseAPI": [], "Fixed commit": "5d7da68b0dfe79f59d7e1919e090ac17514cc977", "Url": "https://api.github.com/repos/NLeSC/Xenon", "Date": "2017-10-19T08:32:04Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nxt) == null) { throw new java.util.NoSuchElementException(\"No more elements\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8709/buggy-version/src.main.java.nl.esciencecenter.xenon.adaptors.filesystems.jclouds.JCloudsFileSytem.java", "BodyUseAPI": [], "Fixed commit": "5d7da68b0dfe79f59d7e1919e090ac17514cc977", "Url": "https://api.github.com/repos/NLeSC/Xenon", "Date": "2017-10-19T08:32:04Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (missingEl != null) errorMsg = \"Expected \" + missingEl; else errorMsg = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8429/buggy-version/src.main.java.org.expresso.parse.impl.SequenceMatcher.java", "BodyUseAPI": [], "Fixed commit": "6c8ce36388b5e0c1af817cf2857a6d0503969795", "Url": "https://api.github.com/repos/Updownquark/Expresso", "Date": "2015-12-03T22:20:15Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfPods == 0) { numberOfPods = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8002/buggy-version/library.src.main.java.com.example.podslider.PodSlider.java", "BodyUseAPI": [], "Fixed commit": "830e50fe56e0dfa063220e8e2b1fd0c22c4c0622", "Url": "https://api.github.com/repos/bhargavms/PodSLider", "Date": "2016-07-05T16:50:20Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.Row.getFirstCellNum()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (firstCell == (-1)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1454/buggy-version/src.main.java.org.sysmodb.WorkbookParser.java", "BodyUseAPI": [], "Fixed commit": "413c4bab58abb7f4d009ea10c3dfc4071c6eef0f", "Url": "https://api.github.com/repos/stuzart/simple-spreadsheet-extractor", "Date": "2011-07-08T12:04:14Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (rest == null) { items.add(null); }else { items.addAll(java.util.Arrays.asList(rest)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8781/buggy-version/core.src.main.java.org.truth0.subjects.SubjectUtils.java", "BodyUseAPI": ["java.util.List<T>.addAll(java.util.List<T>)", "java.util.Arrays.asList(T[])"], "Fixed commit": "ea184541994a1c029bd94d5ae07df08b3c6055ae", "Url": "https://api.github.com/repos/truth0/truth", "Date": "2012-09-05T22:08:27Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.element.Element.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (msgSrcs != null) { for (final org.dejava.component.i18n.source.annotation.MessageSource currentMsgSrc : msgSrcs.sources()) { final java.util.Set<java.lang.String> entries = new java.util.LinkedHashSet<>(); for (final java.lang.String currentProcessorClassName : currentMsgSrc.processors()) { try { final org.dejava.component.i18n.source.processor.MessageSourceEntryProcessor currentProcessor = ((org.dejava.component.i18n.source.processor.MessageSourceEntryProcessor) (java.lang.Class.forName(currentProcessorClassName).newInstance())); for (final javax.lang.model.element.TypeElement currentClassToProcess : getClassesToProcess(((javax.lang.model.element.TypeElement) (currentClass)), currentMsgSrc.processSuperclasses())) { entries.addAll(currentProcessor.processClass(((javax.lang.model.element.TypeElement) (currentClass)), currentClassToProcess)); for (final java.lang.String currentLocaleText : currentMsgSrc.availableLocales()) { addEntries(currentMsgSrc.sourcePath(), currentMsgSrc.bundleBaseName(), currentLocaleText, entries, currentMsgSrc.description()); } } } catch (final java.lang.Exception exception) { } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7007/buggy-version/components.I18n.src.main.java.org.dejava.component.i18n.source.MessageSourceCreator.java", "BodyUseAPI": ["org.dejava.component.i18n.source.annotation.MessageSources.sources()"], "Fixed commit": "c5ed11f691b6fb90675d3a4963a82369fe24fb57", "Url": "https://api.github.com/repos/rvcoutinho/dejava", "Date": "2013-07-26T03:08:28Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.dividerRLayout) != null) { timeRLayout.removeAllViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4348/buggy-version/vendor.src.main.java.org.unimelb.itime.vendor.dayview.DayViewBodyController.java", "BodyUseAPI": [], "Fixed commit": "73a8b49754eb4f74658c547acf43201f9f9183ad", "Url": "https://api.github.com/repos/itime-team/ITimeVendor-android", "Date": "2016-09-09T01:40:05Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.debug) { this.plugin.log(java.util.logging.Level.INFO, \"broadcast_permission set to {0}\", this.broadcastPermission); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1515/buggy-version/src.main.java.com.programmerdan.minecraft.simpleadminhacks.SimpleAdminHacksConfig.java", "BodyUseAPI": [], "Fixed commit": "8ea94c46c266ee785c4933f0be73b03720c9ed32", "Url": "https://api.github.com/repos/ProgrammerDan/SimpleAdminHacks", "Date": "2016-04-19T11:57:32Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(it.jaschke.alexandria.CommonHelper.isNetworkConnected(getContext()))) { android.widget.Toast.makeText(getContext(), R.string.network_unavailable, Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7385/buggy-version/app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": [], "Fixed commit": "9bab51022eb162c55855a8a6bcd4b239cddadef5", "Url": "https://api.github.com/repos/dnbit/Nanodegree-Alexandria", "Date": "2015-08-22T20:54:53Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTitle) != null) { title.setText(android.text.Html.fromHtml(mTitle)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7369/buggy-version/src.com.ferg.awful.thread.AwfulThread.java", "BodyUseAPI": [], "Fixed commit": "8a0289ff1e248751e7557fadfc60dbfa7c3b60c3", "Url": "https://api.github.com/repos/Awful/Awful.apk", "Date": "2011-10-24T20:14:07Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transactionData.hasBeenDeleted(changeWriter.getRoot())) { throw new com.graphaware.runtime.module.DeliberateTransactionRollbackException(\"Not allowed to delete change feed root!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2737/buggy-version/src.main.java.com.graphaware.module.changefeed.ChangeFeedModule.java", "BodyUseAPI": [], "Fixed commit": "5bfb418a728dafb90e0bafd9d8a63ced0cf7bad5", "Url": "https://api.github.com/repos/graphaware/neo4j-changefeed", "Date": "2014-08-28T11:56:53Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cMsg.isEmpty())) { int contentLength = cMsg.getFullMessageLength(); if (contentLength > 0) { cMsg.setHeader(Constants.HTTP_CONTENT_LENGTH, java.lang.String.valueOf(contentLength)); } cMsg.removeHeader(Constants.HTTP_TRANSFER_ENCODING); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3500/buggy-version/http.org.wso2.carbon.transport.http.netty.src.main.java.org.wso2.carbon.transport.http.netty.common.Util.java", "BodyUseAPI": ["org.wso2.carbon.transport.http.netty.message.HTTPCarbonMessage.setHeader(Constants.HTTP_CONTENT_LENGTH,java.lang.String)", "org.wso2.carbon.transport.http.netty.message.HTTPCarbonMessage.removeHeader(Constants.HTTP_TRANSFER_ENCODING)", "org.wso2.carbon.transport.http.netty.message.HTTPCarbonMessage.getFullMessageLength()"], "Fixed commit": "2466f180db0e992e097354170160aeb793b15294", "Url": "https://api.github.com/repos/ChathurikaA/carbon-transports", "Date": "2017-11-01T08:04:52Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(dictItem)) { name = dictItem.getItemName(locale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6414/buggy-version/portlets.opencps-portlet.docroot.WEB-INF.src.org.opencps.util.PortletUtil.java", "BodyUseAPI": ["org.opencps.datamgt.model.DictItem.getItemName(java.util.Locale)"], "Fixed commit": "4bb5816aea2893645612b6e1a81acb1cf12b56f6", "Url": "https://api.github.com/repos/dunglt91/opencps", "Date": "2016-09-12T10:46:42Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTargetVersion) == null) { mDownloadPath = null; mDownloadPathOfTargetVersion = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1282/buggy-version/MUtilsProject.MUtils.src.main.java.cn.mutils.app.util.fir.FIRUpdateAgent.java", "BodyUseAPI": [], "Fixed commit": "2663192c56b016f9d5ce67b98d461b8acc188994", "Url": "https://api.github.com/repos/wavinsun/MUtils", "Date": "2016-01-15T07:13:00Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metadata & 8) != 0) { return new StevenDimDoors.mod_pocketDim.tileentities.TileEntityDimDoor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2985/buggy-version/src.main.java.StevenDimDoors.mod_pocketDim.blocks.BaseDimDoor.java", "BodyUseAPI": [], "Fixed commit": "e47e9597ac9aa00c300473c15c60e83f274c9724", "Url": "https://api.github.com/repos/CannibalVox/DimDoors", "Date": "2015-03-09T14:35:06Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dialog.getCardTableComponent().getDiscountCardsTable().isEditing()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2807/buggy-version/finance.swing.src.main.java.com.lavida.swing.handler.AddNewDiscountCardsDialogHandler.java", "BodyUseAPI": [], "Fixed commit": "bd959f6ec0d9a2729299298fcea5e1945328a1ec", "Url": "https://api.github.com/repos/pavel-slyvka/lavida", "Date": "2013-09-15T12:55:49Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dialog.getCardTableComponent().getDiscountCardsTable().isEditing()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2807/buggy-version/finance.swing.src.main.java.com.lavida.swing.handler.AddNewDiscountCardsDialogHandler.java", "BodyUseAPI": [], "Fixed commit": "bd959f6ec0d9a2729299298fcea5e1945328a1ec", "Url": "https://api.github.com/repos/pavel-slyvka/lavida", "Date": "2013-09-15T12:55:49Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command.length()) < 3) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5390/buggy-version/vlo.src.main.java.pl.krakow.vlo.jpks.JpksClient.java", "BodyUseAPI": [], "Fixed commit": "04b67cd3b9f32610e8ebaf43e41f8748e5ce8bc7", "Url": "https://api.github.com/repos/m4tx/vloandroid", "Date": "2014-05-04T20:19:14Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (backward == (-1)) { isNeg = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8916/buggy-version/src.edu.ucla.cs.utils.InfixToPrefixConvertor.java", "BodyUseAPI": [], "Fixed commit": "d39ccbf303633f36a3dfcef57c210082f2ae4620", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-28T10:00:22Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((person.getRelationship()) != null) relationshipName = person.getRelationship().name();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5486/buggy-version/plugins.enroll-plugin.enroll.java.edu.wpi.always.enroll.EnrollClient.java", "BodyUseAPI": ["edu.wpi.always.enroll.Person.getRelationship()", "person.getRelationship().name()"], "Fixed commit": "d7e6660b435146a017ae679bc8442bb79535c6cf", "Url": "https://api.github.com/repos/candysidner/always", "Date": "2013-10-23T17:40:59Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Location.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(WirelessRedstone.WireBox.isValidLocation(block))) { WirelessRedstone.WireBox.signWarning(block, 1); }else { if (net.licks92.WirelessRedstone.WirelessRedstone.getBukkitVersion().contains(\"v1_8\")) block.setTypeIdAndData(76, ((byte) (0)), true); else block.setTypeIdAndData(76, ((byte) (5)), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8127/buggy-version/src.main.java.net.licks92.WirelessRedstone.Channel.WirelessReceiver.java", "BodyUseAPI": ["WirelessRedstone.WireBox.signWarning(org.bukkit.block.Block,int)", "org.bukkit.block.Block.setTypeIdAndData(int,int,boolean)", "org.bukkit.block.Block.setTypeIdAndData(int,int,boolean)"], "Fixed commit": "f5e2a790ef539188eae18a6e415f5ca9ebff1803", "Url": "https://api.github.com/repos/WirelessRedstoneGroup/WirelessRedstone", "Date": "2015-06-27T21:41:54Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.gdx.physics.box2d.Body.getMass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bodyMass == 0.0F) { bodyMass = 1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2000/buggy-version/catroid.src.at.tugraz.ist.catroid.physics.PhysicObject.java", "BodyUseAPI": [], "Fixed commit": "d7d20fb3eaa3402f7969f627f071f876a292f292", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-08-30T17:22:58Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance().getStorageType().equals(UserStorage.MYSQL)) && ((com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance().getMysql()) != null)) { com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance().getMysql().clearCacheBasic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/886/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.UserManager.UserManager.java", "BodyUseAPI": [], "Fixed commit": "f12df11c7d33ee1fa275206b74c25ddc1562d835", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-10-22T18:02:40Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.getText().length()) == 0) || ((oauth.getText().length()) == 0)) { addLine(\"Error: username or oauth are missing\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5239/buggy-version/TwitchIRC.src.twitchirc.TwitchPokemonGui.java", "BodyUseAPI": [], "Fixed commit": "c22f1d8ed1d98a38a7f672eecd8fb875bebd22a8", "Url": "https://api.github.com/repos/tmrlvi/twitch-pokemon-controller", "Date": "2014-02-27T00:30:13Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (delim.equals(\"\\\\\")) { delim += \"\\\\\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5220/buggy-version/src.com.colin81.rubiktimer.Utils.java", "BodyUseAPI": [], "Fixed commit": "316557c4606cebb064c3e52c4a2467cce30c91ff", "Url": "https://api.github.com/repos/Colin81/Rubik-Timer", "Date": "2013-08-15T20:59:46Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getVersion().equals(\"v1_8_R1.\")) nmsChatSerializer = getNMSClass(\"ChatSerializer\"); else nmsChatSerializer = getNMSClass(\"IChatBaseComponent$ChatSerializer\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6730/buggy-version/src.me.kevupton.duels.utils.Title.java", "BodyUseAPI": [], "Fixed commit": "9af7582f59d82429ea6e5cc0bb32660edb0d793a", "Url": "https://api.github.com/repos/kevupton/Duels", "Date": "2015-06-01T12:52:10Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (vcfLine.getContig().startsWith(\"chr\")) { contig = vcfLine.getContig(); }else { contig = \"chr\" + (vcfLine.getContig()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4059/buggy-version/src.main.java.genepi.imputationserver.steps.vcf.VcfLiftOverFast.java", "BodyUseAPI": ["genepi.imputationserver.steps.vcf.sort.VcfLine.getContig()", "genepi.imputationserver.steps.vcf.sort.VcfLine.getContig()"], "Fixed commit": "d76392c755050fd00dd4daffdf09382bf2037d63", "Url": "https://api.github.com/repos/genepi/imputationserver", "Date": "2017-10-18T14:03:32Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.boutique.common.util.Util.isNotNullAndEmpty(this.getAllStores())) { this.storeId = this.getAllStores().get(0).getId(); }else { this.storeId = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3842/buggy-version/src.main.java.com.boutique.controller.admin.StockBean.java", "BodyUseAPI": [], "Fixed commit": "cf86a608c00b9bbcca2e45675a3fed9bd05498bc", "Url": "https://api.github.com/repos/mukeshm4m/boutique", "Date": "2017-04-17T16:12:25Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (typeLibraryName == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/9099/buggy-version/plugins.org.ebayopensource.turmeric.eclipse.typelibrary.ui.src.org.ebayopensource.turmeric.eclipse.typelibrary.ui.TypeLibraryUIActivator.java", "BodyUseAPI": [], "Fixed commit": "639423e9e20ea72ebe78ef6421eb8fdedefbabfd", "Url": "https://api.github.com/repos/ebayopensource/turmeric-eclipse", "Date": "2011-08-02T09:01:23Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((notification) != null) { setNotification(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5418/buggy-version/app.src.main.java.com.grandblanchs.gbhs.AnnounceFragment.java", "BodyUseAPI": [], "Fixed commit": "44addc2fe3f45d779f55137195e8fed237f07629", "Url": "https://api.github.com/repos/mwesner/GBHS-Android", "Date": "2015-08-07T04:59:39Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasPlayingMusic) { com.mopub.mobileads.AppLovinInterstitialAdapter.LOG.info(\"adDisplayed(): wasPlayingMusic, ensuring music playback continues\"); com.andrew.apollo.utils.MusicUtils.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/298/buggy-version/android.src.com.mopub.mobileads.AppLovinInterstitialAdapter.java", "BodyUseAPI": [], "Fixed commit": "be3cd3d75c7cf0cc4ba9b0f5896db5ee4a0b0476", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2017-10-12T07:17:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (options == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8068/buggy-version/opentripplanner-routing.src.main.java.org.opentripplanner.routing.core.TraversalRequirements.java", "BodyUseAPI": [], "Fixed commit": "f3296bf4dc3541b0ef2279636496913c2869c715", "Url": "https://api.github.com/repos/flamholz/OpenTripPlanner", "Date": "2012-12-03T04:04:34Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getProcessedUnManagedVolumeMap().get(unmanagedVolumeGuid)) != null) { return getProcessedUnManagedVolumeMap().get(unmanagedVolumeGuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3961/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.blockingestorchestration.context.impl.VplexVolumeIngestionContext.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.emc.storageos.api.service.impl.resource.blockingestorchestration.context.VolumeIngestionContext>.get(java.lang.String)"], "Fixed commit": "4e851bd47b2b373e01f5617a355b3c33d39d2676", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-05T14:42:39Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getProcessedUnManagedVolumeMap().get(unmanagedVolumeGuid)) != null) { getProcessedUnManagedVolumeMap().get(unmanagedVolumeGuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3961/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.blockingestorchestration.context.impl.BaseIngestionRequestContext.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.emc.storageos.api.service.impl.resource.blockingestorchestration.context.VolumeIngestionContext>.get(java.lang.String)"], "Fixed commit": "4e851bd47b2b373e01f5617a355b3c33d39d2676", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-05T14:42:39Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getProcessedUnManagedVolumeMap().get(unmanagedVolumeGuid)) != null) { return getProcessedUnManagedVolumeMap().get(unmanagedVolumeGuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3961/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.blockingestorchestration.context.impl.RecoverPointVolumeIngestionContext.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.emc.storageos.api.service.impl.resource.blockingestorchestration.context.VolumeIngestionContext>.get(java.lang.String)"], "Fixed commit": "4e851bd47b2b373e01f5617a355b3c33d39d2676", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-05T14:42:39Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tabellone) != null) tabellone.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/890/buggy-version/Tombola.src.zz.ClientShell.java", "BodyUseAPI": [], "Fixed commit": "0f782c5c57dde3d32720fd539b293aaddff7b296", "Url": "https://api.github.com/repos/Igor16/Tombolismo", "Date": "2017-03-04T09:45:17Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (aValue != null) { if (com.bearsoft.citiesfetcher.transforms.CityToCsv.ESCAPED_TEMPLATE.matcher(aValue).matches()) { java.lang.StringBuilder escaped = new java.lang.StringBuilder(); escaped.append('\\\"').append(com.bearsoft.citiesfetcher.transforms.CityToCsv.QUOTES_TEMPLATE.matcher(aValue).replaceAll(\"\\\"\\\"\")).append('\\\"'); return escaped; }else { return new java.lang.StringBuilder(aValue); } }else { return new java.lang.StringBuilder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2009/buggy-version/src.main.java.com.bearsoft.citiesfetcher.transforms.CityToCsv.java", "BodyUseAPI": ["java.util.regex.Matcher.replaceAll(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.String)", "java.lang.StringBuilder.append(char)", "java.util.regex.Matcher.matches()"], "Fixed commit": "07bad9d5a38227203d773c3e7607cdbefe4dafd9", "Url": "https://api.github.com/repos/marat-gainullin/cities-fetcher", "Date": "2016-07-17T11:09:57Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage()) != null) { actionErrors.add(\"error\", new org.apache.struts.action.ActionMessage(e.getMessage())); }else { actionErrors.add(\"error\", new org.apache.struts.action.ActionMessage(\"label.invalid.student.number\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3270/buggy-version/src.main.java.org.fenixedu.academic.ui.struts.action.teacher.ManageExecutionCourseDA.java", "BodyUseAPI": ["org.apache.struts.action.ActionErrors.add(java.lang.String,org.apache.struts.action.ActionMessage)", "org.fenixedu.academic.service.services.exceptions.FenixServiceException.getMessage()"], "Fixed commit": "9a791509473195cc71246f3ffe743e06b223c0f0", "Url": "https://api.github.com/repos/qub-it/fenixedu-academic", "Date": "2015-03-30T11:28:19Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.fenixframework.FenixFramework.getDomainObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((selectedShift.getLotacao().intValue()) <= (selectedShift.getStudentsSet().size())) { throw new org.fenixedu.academic.service.services.exceptions.FenixServiceException(\"error.exception.shift.full\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3270/buggy-version/src.main.java.org.fenixedu.academic.service.services.enrollment.shift.EnrollStudentInShifts.java", "BodyUseAPI": [], "Fixed commit": "9a791509473195cc71246f3ffe743e06b223c0f0", "Url": "https://api.github.com/repos/qub-it/fenixedu-academic", "Date": "2015-03-30T11:28:19Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newTypeID == 149) || (newTypeID == 150)) { w.getBlockAt(x, y, z).setTypeIdAndData(0, ((byte) (0)), false); w.getBlockAt(x, y, z).setTypeIdAndData(newTypeID, data, false); }else { if ((origType != 0) && (origType != newTypeID)) { c.a((x & 15), y, (z & 15), org.bukkit.craftbukkit.v1_7_R2.util.CraftMagicNumbers.getBlock(0), 0); } if ((origType != newTypeID) || (origData != data)) { success = c.a((x & 15), y, (z & 15), org.bukkit.craftbukkit.v1_7_R2.util.CraftMagicNumbers.getBlock(newTypeID), data); }else { success = true; } if (!success) { w.getBlockAt(x, y, z).setTypeIdAndData(newTypeID, data, false); } if (!(chunks.contains(c))) { chunks.add(c); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5165/buggy-version/src.main.java.net.countercraft.movecraft.utils.MapUpdateManager.java", "BodyUseAPI": ["org.bukkit.Chunk.a(int,int,int,org.bukkit.craftbukkit.v1_7_R2.util.CraftMagicNumbers.getBlock(newTypeID),byte)", "w.getBlockAt(x, y, z).setTypeIdAndData(int,byte,boolean)", "w.getBlockAt(x, y, z).setTypeIdAndData(int,byte,boolean)", "org.bukkit.craftbukkit.v1_7_R2.util.CraftMagicNumbers.getBlock(int)"], "Fixed commit": "cf26074b3b9e4c67f8d70b696e7437c22f4bc7a8", "Url": "https://api.github.com/repos/AJCStriker/Movecraft-3", "Date": "2014-03-29T16:21:54Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.Sheet.getSheetName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((sheetName.equals(\"Clients\")) || (sheetName.equals(\"Center\"))) || (sheetName.equals(\"Groups\"))) || (sheetName.equals(\"Staff\"))) if ((row.getCell(((cell.getColumnIndex()) + 1)).getCellType()) == (org.apache.poi.ss.usermodel.Cell.CELL_TYPE_NUMERIC)) { return ((java.lang.Double) (row.getCell(((cell.getColumnIndex()) + 1)).getNumericCellValue())).intValue(); }else { return ((java.lang.Double) (row.getCell(((cell.getColumnIndex()) + 2)).getNumericCellValue())).intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7338/buggy-version/src.main.java.org.openmf.mifos.dataimport.handler.AbstractDataImportHandler.java", "BodyUseAPI": [], "Fixed commit": "c52894fd433e9f83309ff270d260bcdcffc1dfac", "Url": "https://api.github.com/repos/openMF/DataImportTool", "Date": "2015-12-27T02:30:24Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.isOnline()) { return player.getPlayer(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7352/buggy-version/src.keepcalm.mods.bukkit.bukkitAPI.BukkitServer.java", "BodyUseAPI": ["org.bukkit.OfflinePlayer.getPlayer()"], "Fixed commit": "39e03313cea31099a28f50cecb9d33e887568f25", "Url": "https://api.github.com/repos/keepcalm/BukkitForge", "Date": "2013-01-02T07:02:25Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (map.containsKey(PageConstant.PAGE_KEY)) { java.lang.Object pageObj = map.get(PageConstant.PAGE_KEY); if ((pageObj != null) && (pageObj instanceof org.mybatis.extend.page.param.Page)) { return ((org.mybatis.extend.page.param.Page) (pageObj)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2689/buggy-version/mybatis-page.src.main.java.org.mybatis.extend.page.dialect.GenericDialect.java", "BodyUseAPI": ["java.util.Map.get(PageConstant.PAGE_KEY)"], "Fixed commit": "1bd2fa5a9d38758b251fe291039dd18637f2e84d", "Url": "https://api.github.com/repos/BobJiangGit/mybatis-extend", "Date": "2017-07-20T08:44:31Z"},
{"Line": "=>907", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rsp.status.state.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"submitted\".equals(state)) { continue; }else { currentItem.setStatus(ContentReviewItem.REPORT_ERROR_NO_RETRY_CODE); currentItem.setLastError(rsp.status.message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8832/buggy-version/impl.src.java.org.sakaiproject.contentreview.impl.urkund.UrkundReviewServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ac0a92696015f812bb88650de26979db0624ae50", "Url": "https://api.github.com/repos/cambrosakai/urkund", "Date": "2016-09-30T11:39:51Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastRead) == ']') { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2743/buggy-version/src.main.java.org.jsonbuddy.parse.JsonParser.java", "BodyUseAPI": [], "Fixed commit": "1f86288f1481006d23247d37845cbfecd320bf9c", "Url": "https://api.github.com/repos/anders88/jsonbuddy", "Date": "2015-09-06T10:40:17Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isGroupFiles())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4089/buggy-version/components.formats-bsd.src.loci.formats.in.MicromanagerReader.java", "BodyUseAPI": [], "Fixed commit": "1faf0aead1bf2a0a4bc30b26796ce6d8c2948652", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-03-25T20:34:40Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.FormatReader.isThisType(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valid && (!(isGroupFiles()))) { try { return isSingleFile(metaFile); } catch (java.lang.Exception e) { loci.formats.in.LOGGER.debug(\"\", e); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4089/buggy-version/components.formats-bsd.src.loci.formats.in.OMETiffReader.java", "BodyUseAPI": [], "Fixed commit": "1faf0aead1bf2a0a4bc30b26796ce6d8c2948652", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-03-25T20:34:40Z"},
{"Line": "=>626", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (homeScore.isEmpty()) { homeScore = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/9016/buggy-version/backend.src.main.java.com.cavellandcavell.leavethehouseoutofit.backend.PlayerAPI.java", "BodyUseAPI": [], "Fixed commit": "4d252174ee49a0975054e709e3077d75454235b5", "Url": "https://api.github.com/repos/BurgherJon/LTHOIv3", "Date": "2017-10-21T00:30:35Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (awayScore.isEmpty()) { awayScore = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/9016/buggy-version/backend.src.main.java.com.cavellandcavell.leavethehouseoutofit.backend.PlayerAPI.java", "BodyUseAPI": [], "Fixed commit": "4d252174ee49a0975054e709e3077d75454235b5", "Url": "https://api.github.com/repos/BurgherJon/LTHOIv3", "Date": "2017-10-21T00:30:35Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (byteLength == 1) { return houtbecke.rs.antbytes.BitBytes.input(msbInput, 0, firstBitpos, bitlength, signed); }else { return houtbecke.rs.antbytes.BitBytes.input(msbInput, 0, lastBitPos, bitlength, signed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5201/buggy-version/src.main.java.houtbecke.rs.antbytes.BitBytes.java", "BodyUseAPI": [], "Fixed commit": "169e9b1a08c1de80c91ddcbf84bf90595c0988de", "Url": "https://api.github.com/repos/jaspervp/AntBytes", "Date": "2015-08-04T09:51:17Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(auctions_running.contains(p))) { auctions_running.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2951/buggy-version/src.main.java.at.ac.tuwien.big.we16.ue2.model.User.java", "BodyUseAPI": ["java.util.List<at.ac.tuwien.big.we16.ue2.model.Product>.add(at.ac.tuwien.big.we16.ue2.model.Product)"], "Fixed commit": "284f9d3e882c5974093c04293d7c261174a6cb79", "Url": "https://api.github.com/repos/max-frank/WebEng2", "Date": "2016-04-24T13:05:08Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (width == 0) { width = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1909/buggy-version/src.com.nucleus.texture.android.AndroidImageFactory.java", "BodyUseAPI": [], "Fixed commit": "208e37a3e5ec556e84d02e141f01bbbe9ccd49d6", "Url": "https://api.github.com/repos/rsahlin/graphics-by-opengl", "Date": "2015-04-16T18:09:31Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (height == 0) { height = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1909/buggy-version/src.com.nucleus.texture.android.AndroidImageFactory.java", "BodyUseAPI": [], "Fixed commit": "208e37a3e5ec556e84d02e141f01bbbe9ccd49d6", "Url": "https://api.github.com/repos/rsahlin/graphics-by-opengl", "Date": "2015-04-16T18:09:31Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (docId == 1) { client.admin().indices().prepareCreate((((indexNamePrefix + (java.lang.String.valueOf(indexId))) + \"r\") + (java.lang.String.valueOf(repId)))).setSettings(org.elasticsearch.common.settings.ImmutableSettings.settingsBuilder().put(\"number_of_shards\", 5).put(\"number_of_replicas\", repId)).execute().actionGet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5918/buggy-version/src.main.java.es.index.writes.AsyncWritesApp.java", "BodyUseAPI": [], "Fixed commit": "d539e50e836b17372de2bbd218624179ecc691ed", "Url": "https://api.github.com/repos/netankit/ESSyncAsyncWrite", "Date": "2015-03-09T18:13:19Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (docId == 1) { client.admin().indices().prepareCreate((((indexNamePrefix + (java.lang.String.valueOf(indexId))) + \"r\") + (java.lang.String.valueOf(repId)))).setSettings(org.elasticsearch.common.settings.ImmutableSettings.settingsBuilder().put(\"number_of_shards\", 5).put(\"number_of_replicas\", repId)).execute().actionGet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5918/buggy-version/src.main.java.es.index.writes.AsyncWritesServerAsyncTrueApp.java", "BodyUseAPI": [], "Fixed commit": "d539e50e836b17372de2bbd218624179ecc691ed", "Url": "https://api.github.com/repos/netankit/ESSyncAsyncWrite", "Date": "2015-03-09T18:13:19Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((hudson.Util.fixEmptyAndTrim(mavenHome)) == null) { throw new hudson.AbortException(hudson.maven.Messages.MavenVersionCallable_MavenHomeDoesntExist(mavenHome)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7027/buggy-version/src.main.java.hudson.maven.MavenVersionCallable.java", "BodyUseAPI": [], "Fixed commit": "e6849a7ccec07f67ed8d5c8760ef3f7166af66cf", "Url": "https://api.github.com/repos/mrebasti/maven-plugin", "Date": "2013-11-02T10:50:24Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlusOneButton) != null) { cordova.getActivity().runOnUiThread(new java.lang.Runnable() { public void run() { mPlusOneButton.setVisibility(View.GONE); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5674/buggy-version/src.android.PlusOneButtonPlugin.java", "BodyUseAPI": [], "Fixed commit": "4c7cbb1e8ddaf41843ec7abf0f1c4ea3b1eb5d13", "Url": "https://api.github.com/repos/rodrigograca31/plusOneButtonPlugin", "Date": "2016-04-22T12:01:37Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Collections.min(com.google.common.collect.Lists.newArrayList(distanceToBlinky, distanceToInky, distanceToPinky, distanceToSue))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (distanceToNearestGhost >= 20) { ghostScore = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2034/buggy-version/src.main.java.entrants.pacman.silvaw.MyPacManMiniMax.java", "BodyUseAPI": [], "Fixed commit": "1e3713e508990ae57f981a1f8496520b320b5313", "Url": "https://api.github.com/repos/wmvsilva/cs5100-hw2-pacman", "Date": "2016-07-23T02:31:39Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirstCheckPoint) { return virtualEnvironment.getListOfDelayedAGVs(agvID, startTime, checkPoints.getFirst()).isEmpty(); }else { return virtualEnvironment.getListOfDelayedAGVs(agvID, checkPoints.getFirst().getExpectedTime(), checkPoints.get(1)).isEmpty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6804/buggy-version/AgentWiseAGV.src.main.java.singlestage.contextaware.VehicleAgent.java", "BodyUseAPI": [], "Fixed commit": "dbe73b33436078fbfe033723c0d827e0fdb179a4", "Url": "https://api.github.com/repos/hoangtungdinh/AgentWiseAGV", "Date": "2015-09-10T12:25:27Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cancel) { android.util.Log.d(org.jraf.android.backport.switchwidget.Switch.TAG, \"no need to do anything\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6911/buggy-version/src.org.jraf.android.backport.switchwidget.Switch.java", "BodyUseAPI": [], "Fixed commit": "0fbad6405912d5e76ccaa065104976e9fc439f69", "Url": "https://api.github.com/repos/RichardLuo/libAnimatedSwitch", "Date": "2015-07-08T14:57:33Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.apimgt.migration.client.MigrateFrom19to110.log.isDebugEnabled()) { org.wso2.carbon.apimgt.migration.client.MigrateFrom19to110.log.debug((((\"Target LC Status : \" + currentState) + \". Performing LC Action : \") + action)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6202/buggy-version/modules.distribution.resources.migration.wso2-api-migration-client.src.main.java.org.wso2.carbon.apimgt.migration.client.MigrateFrom19to110.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "efa18b792e4515c7dc04e45c047f24c36beb23e4", "Url": "https://api.github.com/repos/wso2/product-apim", "Date": "2016-01-17T13:50:26Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.rubisoft.photon.categorization.Categorizer.getCategories()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (categories == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3139/buggy-version/app.src.main.java.net.rubisoft.photon.service.CacheService.java", "BodyUseAPI": [], "Fixed commit": "c66abc33a8013e9d16d87db2d531ad5603f22523", "Url": "https://api.github.com/repos/yavor87/Photon", "Date": "2016-06-06T10:42:40Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.inject.Injector.getExistingBinding(com.google.inject.Key<T>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (binding != null) { return binding; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8024/buggy-version/src.main.java.org.ttang.hk2.GuiceBridgeJitInjector.java", "BodyUseAPI": [], "Fixed commit": "20105b308f1c56655325edbf612d0d15901beae9", "Url": "https://api.github.com/repos/t-tang/guice-bridge-jit-injector", "Date": "2014-07-04T12:03:16Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (length > (file.length())) file.setLength(length); else numberOfChunks = ((int) ((file.length()) / (chunkSize)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5588/buggy-version/src.org.uiowa.cs2820.engine.fileoperations.RAFile.java", "BodyUseAPI": ["java.io.RandomAccessFile.setLength(int)", "java.io.RandomAccessFile.length()"], "Fixed commit": "10f6804f3d7db5d1ed07ea08a1be159651c68533", "Url": "https://api.github.com/repos/TomWerner/SearchEngineV2", "Date": "2014-12-09T17:48:19Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getName()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5782/buggy-version/de.jutzig.jabylon.properties.src.main.java.de.jutzig.jabylon.properties.impl.ProjectImpl.java", "BodyUseAPI": [], "Fixed commit": "8e64eb00f44b2946f54601fcbf2aa4970e39fc45", "Url": "https://api.github.com/repos/jutzig/jabylon", "Date": "2012-09-14T20:53:50Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParentFragment()) instanceof com.fastaccess.ui.modules.editor.popup.EditorLinkImageMvp.EditorLinkCallback) { callback = ((com.fastaccess.ui.modules.editor.popup.EditorLinkImageMvp.EditorLinkCallback) (getParentFragment())); }else if (context instanceof com.fastaccess.ui.modules.editor.popup.EditorLinkImageMvp.EditorLinkCallback) { callback = ((com.fastaccess.ui.modules.editor.popup.EditorLinkImageMvp.EditorLinkCallback) (context)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3853/buggy-version/app.src.main.java.com.fastaccess.ui.modules.editor.popup.EditorLinkImageDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "1152fbbe2c50144701d8d8b29ec5513f789c2b40", "Url": "https://api.github.com/repos/dedepete/FastHub", "Date": "2017-08-25T07:41:20Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getUri().lastIndexOf('/')) > 1) { if (gui.WebServer.uriValid(request.getUri().substring(1, request.getUri().lastIndexOf('/')))) { protocol.ServletProcessor processor = new protocol.ServletProcessor(); processor.process(request, response); }else { protocol.StaticResourceProcessor processor = new protocol.StaticResourceProcessor(); processor.process(request, response); } }else { protocol.StaticResourceProcessor processor = new protocol.StaticResourceProcessor(); processor.process(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3397/buggy-version/edu.rosehulman.sws.src.server.ConnectionHandler.java", "BodyUseAPI": ["request.getUri().substring(int,request.getUri().lastIndexOf('/'))", "protocol.StaticResourceProcessor.process(protocol.ServletRequest,protocol.ServletResponse)", "protocol.ServletProcessor.process(protocol.ServletRequest,protocol.ServletResponse)", "protocol.ServletRequest.getUri()", "protocol.StaticResourceProcessor.process(protocol.ServletRequest,protocol.ServletResponse)", "request.getUri().lastIndexOf(char)", "gui.WebServer.uriValid(request.getUri().substring(1, request.getUri().lastIndexOf('/')))", "protocol.ServletRequest.getUri()"], "Fixed commit": "d269209667f9d075e656bef228b85e4cb727fe4d", "Url": "https://api.github.com/repos/oharace/477-Server-Project", "Date": "2015-05-04T19:53:47Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currLocMarker) != null) { setupDestMarker(mDestination); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5408/buggy-version/Android.DispatchMobile.app.src.main.java.vanderbilt.cs279.org.dispatchmobile.MapViewFragment.java", "BodyUseAPI": [], "Fixed commit": "acfe3aead4fcab7784fab095d1ed2ba7bdb01c13", "Url": "https://api.github.com/repos/CS279-2017/Automatic-Service-Dispatcher", "Date": "2017-04-19T05:51:59Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.miwok.WordAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (currentWord.hasImage()) { imageView.setImageResource(currentWord.getImageResourceId()); }else { imageView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2804/buggy-version/app.src.main.java.com.example.android.miwok.WordAdapter.java", "BodyUseAPI": ["com.example.android.miwok.Word.getImageResourceId()", "android.widget.ImageView.setImageResource(currentWord.getImageResourceId())"], "Fixed commit": "57f09d6b7bc5c1774c03779d638b25fdc1e5700a", "Url": "https://api.github.com/repos/wszeborowskimateusz/ud839_Miwok", "Date": "2017-09-11T11:06:52Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.runops.instagramviewer.adapter.MediaArrayAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((media.getCaption()) != null) { viewHolder.llComments.addView(commentSum, 1); }else { viewHolder.llComments.addView(commentSum, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3753/buggy-version/app.src.main.java.com.runops.instagramviewer.adapter.MediaArrayAdapter.java", "BodyUseAPI": [], "Fixed commit": "6889d24dbbbd088b9c831b3a61ef4c8ce5ec2d62", "Url": "https://api.github.com/repos/danielhochman/codepath-instagramviewer", "Date": "2015-02-23T08:43:17Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.gdx.physics.box2d.Body.getLinearVelocity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Math.abs(linearVelocity.y)) > 0.1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6947/buggy-version/core.src.game.crb.gf.Player.java", "BodyUseAPI": [], "Fixed commit": "196d8ed6d9b57478ff4f70a06e7a4a853b8cce4c", "Url": "https://api.github.com/repos/LaDivinaCommedia/Cutriba", "Date": "2017-04-22T19:53:32Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JMenu.getMenuComponentCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (menuComponentCount == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8856/buggy-version/freeplane.src.org.freeplane.core.ui.MenuSplitter.java", "BodyUseAPI": [], "Fixed commit": "66fb0fc0a3c63ce62fbf6c22ab044926a5755813", "Url": "https://api.github.com/repos/htgoebel/freeplane", "Date": "2013-06-09T19:26:07Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(g.isSocketConnected())) g.connectSocket();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/9087/buggy-version/app.src.main.java.main.trespass.ConnectionActivity.java", "BodyUseAPI": ["main.trespass.GameDriver.connectSocket()"], "Fixed commit": "fed87ae29e09f2d2e3fc89ae2f2b01fe4a292a5b", "Url": "https://api.github.com/repos/jleopold28/Trespass", "Date": "2015-07-20T15:34:50Z"},
{"Line": "=>2311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.android.server.NotificationManagerService.NotificationRecord>.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (n > 0) { mLedNotification = mLights.get((n - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/970/buggy-version/services.java.com.android.server.NotificationManagerService.java", "BodyUseAPI": ["java.util.ArrayList<com.android.server.NotificationManagerService.NotificationRecord>.get(int)"], "Fixed commit": "089319d5e02297c6a2cb0f389700648e8979a819", "Url": "https://api.github.com/repos/HazyTeam/platform_frameworks_base", "Date": "2014-08-08T18:18:32Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Thread.State.NEW.equals(mGameManager.getState())) { mGameManager.setRunning(true); mGameManager.start(); }else { onResume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8430/buggy-version/labirynth.src.com.flexymind.labirynth.screens.GameView.java", "BodyUseAPI": ["com.flexymind.labirynth.screens.GameManager.setRunning(boolean)", "com.flexymind.labirynth.screens.GameManager.start()"], "Fixed commit": "dbebc583e5de87d42ee13a8d267b16aa5731f583", "Url": "https://api.github.com/repos/KovalyovLex/Labirynth", "Date": "2012-05-16T09:53:45Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b == 0) { return a; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6384/buggy-version/org.xtext.module.dsl.src.org.xtext.utils.GetRational.java", "BodyUseAPI": [], "Fixed commit": "c3b28cbb79124054bc905148be842cca34d297d5", "Url": "https://api.github.com/repos/skangoye/mcdc_dsl", "Date": "2015-03-03T14:33:13Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((output.length()) > 2) { output = output.substring(0, ((output.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8780/buggy-version/app.src.main.java.com.example.truman.firstapplication.DiceRollerResults.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "2d604fb5d9a4cdd4452511eeab8a875adfa68d4d", "Url": "https://api.github.com/repos/twtse/Tabletop-Companion", "Date": "2016-11-02T01:25:55Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aUser == null) { fxapp.FXApplication._user = null; }else { fxapp.FXApplication._user = new model.User(aUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5612/buggy-version/src.main.java.fxapp.FXApplication.java", "BodyUseAPI": [], "Fixed commit": "153a01d9cd13a14960b279ce1ddab3c0df4a9128", "Url": "https://api.github.com/repos/aaronstrickland81/bobbin-in-the-waters", "Date": "2016-10-06T14:04:21Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Config.valueFor(java.lang.String)", "Config.valueFor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (myIP.equals(contactIP)) DstrGroupMembership.ownList.add(myIP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5557/buggy-version/DistributedGroupMembership.src.DstrGroupMembership.java", "BodyUseAPI": ["MembershipList.add(java.lang.String)"], "Fixed commit": "3cc0c18a8d51a9614db2c75e003331e463f2a72b", "Url": "https://api.github.com/repos/christian-com-techniques/DstrGroupMem", "Date": "2013-09-30T06:26:59Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(userAnswers.get(i).equals(correctAnswers.get(i)))) { html += (\"&emsp; <b>Wrong!</b> correct answer is: &emsp; <select disabled><option>\" + (correctAnswers.get(i))) + \"</option></select>\"; }else html += \"&emsp; <b>Correct!</b>\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7943/buggy-version/src.Questions.Matching.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "f7f58739369465a31f3b3ae992d21815f51a74f8", "Url": "https://api.github.com/repos/Nop1ks/Immutable", "Date": "2017-07-10T15:53:36Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (rootNodeField != null) { if ((rootNodeField.getType()) == (java.util.List.class)) { io.leocad.dumbledroid.data.XmlReflector.processListField(model, rootNodeField, node); }else { io.leocad.dumbledroid.data.XmlReflector.reflectXmlObject(model, node); } }else { io.leocad.dumbledroid.data.XmlReflector.reflectXmlObject(model, node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4869/buggy-version/Dumbledroid.src.io.leocad.dumbledroid.data.XmlReflector.java", "BodyUseAPI": ["io.leocad.dumbledroid.data.XmlReflector.processListField(java.lang.Object,java.lang.reflect.Field,io.leocad.dumbledroid.data.xml.Node)", "java.lang.reflect.Field.getType()"], "Fixed commit": "73ca33cc291df348993d5f9390af4cd23cd3ea9e", "Url": "https://api.github.com/repos/leocadiotine/Dumbledroid", "Date": "2013-01-28T22:15:45Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mWakelock.isHeld()) { mWakelock.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6238/buggy-version/src.com.rakesh.alarmmanagerexample.AlarmManagerBroadcastReceiver.java", "BodyUseAPI": ["android.os.PowerManager.WakeLock.release()"], "Fixed commit": "d9a94b3b90619b468ed5832e95163a14ddcc0353", "Url": "https://api.github.com/repos/devil1437/AlarmManagerExample", "Date": "2014-11-28T00:10:50Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mWakelock.isHeld()) { mWakelock.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6238/buggy-version/src.com.rakesh.alarmmanagerexample.AlarmManagerBroadcastReceiver.java", "BodyUseAPI": ["android.os.PowerManager.WakeLock.release()"], "Fixed commit": "d9a94b3b90619b468ed5832e95163a14ddcc0353", "Url": "https://api.github.com/repos/devil1437/AlarmManagerExample", "Date": "2014-11-28T00:10:50Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mayAboutClosed) { mayAboutClosed = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3577/buggy-version/src.listener.ClientListener.java", "BodyUseAPI": [], "Fixed commit": "cc267e860dceb3ebf6838eb5ba926ee7ddc29a79", "Url": "https://api.github.com/repos/tamfign/Mindplus", "Date": "2016-09-13T02:32:15Z"},
{"Line": "=>1126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lenght > 0) { area2 = area2 + lenght; if (oldNormals.containsKey(t2)) { org.nschmidt.ldparteditor.helpers.math.Vector3d ref = new org.nschmidt.ldparteditor.helpers.math.Vector3d(new java.math.BigDecimal((z1 / lenght)), new java.math.BigDecimal((z2 / lenght)), new java.math.BigDecimal((z3 / lenght))); double angle = org.nschmidt.ldparteditor.helpers.math.Vector3d.angle(ref, oldNormals.get(t2)); if (angle > 10) { isCollinear = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4636/buggy-version/src.org.nschmidt.ldparteditor.data.GDataCSG.java", "BodyUseAPI": [], "Fixed commit": "d4a4afafaf08151cff3dc44d331b99cc846da7d8", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-11-17T20:13:07Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blocksCalculated == 0) { return new int[]{ 135, 135, 135 }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8525/buggy-version/src.main.java.com.vel0cityx.chameleoncreepers.BiomeColors.java", "BodyUseAPI": [], "Fixed commit": "f11a0fc7313213d6c257448b3890f4b9c0cdc3e7", "Url": "https://api.github.com/repos/VelocityRa/ChameleonCreepersMod", "Date": "2016-05-28T12:30:18Z"},
{"Line": "=>1016", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.Action.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (toolbar != null) { regactions.put(toolbar, action); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6244/buggy-version/src.org.openstreetmap.josm.gui.preferences.ToolbarPreferences.java", "BodyUseAPI": ["java.util.Map<java.lang.String, javax.swing.Action>.put(java.lang.String,javax.swing.Action)"], "Fixed commit": "ecbbf7a0542fa5637469fd8665d4df0376712e6c", "Url": "https://api.github.com/repos/wiktorn/josm", "Date": "2015-05-23T17:26:57Z"},
{"Line": "=>1539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.pressgang.ccms.contentspec.KeyValueNode<?>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((value instanceof org.jboss.pressgang.ccms.contentspec.SpecTopic) && (!(metaDataEntity.getNodeType().equals(CommonConstants.CS_NODE_META_DATA_TOPIC)))) { metaDataEntity.setNodeType(CommonConstants.CS_NODE_META_DATA_TOPIC); }else if ((!(value instanceof org.jboss.pressgang.ccms.contentspec.SpecTopic)) && (!(metaDataEntity.getNodeType().equals(CommonConstants.CS_NODE_META_DATA)))) { metaDataEntity.setNodeType(CommonConstants.CS_NODE_META_DATA); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3939/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.processor.ContentSpecProcessor.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.wrapper.CSNodeWrapper.setNodeType(CommonConstants.CS_NODE_META_DATA)", "org.jboss.pressgang.ccms.wrapper.CSNodeWrapper.getNodeType()", "metaDataEntity.getNodeType().equals(CommonConstants.CS_NODE_META_DATA)", "org.jboss.pressgang.ccms.wrapper.CSNodeWrapper.setNodeType(CommonConstants.CS_NODE_META_DATA_TOPIC)"], "Fixed commit": "d3b043362e90bfd06bce5d4298b43ec34e919011", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpecProcessor", "Date": "2013-11-25T01:19:16Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (book != null) bookLang = Settings.BookSettings.getSavedBook(book).lang; else bookLang = org.sefaria.sefaria.Settings.getDefaultTextLang();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5939/buggy-version/app.src.main.java.org.sefaria.sefaria.activities.SuperTextActivity.java", "BodyUseAPI": ["Settings.BookSettings.getSavedBook(org.sefaria.sefaria.database.Book)"], "Fixed commit": "63ef122e917b342546d077fe65c1ac9cbcf32e6f", "Url": "https://api.github.com/repos/Sefaria/Sefaria-Android", "Date": "2016-06-06T19:58:44Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/375/buggy-version/src.com.wasteofplastic.askyblock.panels.SettingsPanel.java", "BodyUseAPI": [], "Fixed commit": "682a256bff56144b8e91c2588f5d96ef9f6d78ba", "Url": "https://api.github.com/repos/tastybento/askyblock", "Date": "2015-08-23T19:31:33Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(ImageTable.TABLE_NAME,java.lang.String[],((((idv.jason.lib.imagemanager.db.ImageTable.COLUMN_IMAGE_URL) + \"=? AND \") + (idv.jason.lib.imagemanager.db.ImageTable.COLUMN_ATTRIBUTE)) + \"=?\"),java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((cursor != null) && ((cursor.getCount()) > 0)) { cursor.moveToFirst(); DBId = cursor.getLong(0); cursor.close(); }else { android.content.ContentValues cv = new android.content.ContentValues(); cv.put(ImageTable.COLUMN_IMAGE_URL, url); cv.put(ImageTable.COLUMN_ATTRIBUTE, (android.text.TextUtils.isEmpty(attr) ? \"NULL\" : attr)); cv.put(ImageTable.COLUMN_ACCESS_TIME, java.util.Calendar.getInstance().getTime().toGMTString()); DBId = mWritableDb.insert(ImageTable.TABLE_NAME, \"\", cv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2143/buggy-version/src.idv.jason.lib.imagemanager.ImageManager.java", "BodyUseAPI": ["android.database.Cursor.getLong(int)", "android.database.Cursor.moveToFirst()", "android.database.Cursor.close()"], "Fixed commit": "6000e0b7bde64c5aa8de2f52c721901d5dcf2312", "Url": "https://api.github.com/repos/camge/ImageManager", "Date": "2013-06-04T16:14:01Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["api.DataController.getData(request.queryParams(\"id\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (json == null) { response.status(404); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5027/buggy-version/java.src.main.java.api.Api.java", "BodyUseAPI": [], "Fixed commit": "159c4f644714df5b9c8539aa791cb30822a232e9", "Url": "https://api.github.com/repos/AnnDah/ScientistNotebook", "Date": "2015-05-06T18:54:38Z"},
{"Line": "=>1315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (aux.getTipo().equals(\"Integer\")) { compilador.ParserCup.tablaSimbolos.inicializarSimbolo(aux.getValor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8088/buggy-version/src.compilador.ParserCup.java", "BodyUseAPI": ["compilador.TablaSimbolos.inicializarSimbolo(aux.getValor())", "compilador.Nodo.getValor()"], "Fixed commit": "cff78522c0a75bc50b21e5a3de73de0e765b75e4", "Url": "https://api.github.com/repos/Zeirt/Compilador", "Date": "2016-12-09T19:54:28Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.silverpeas.util.StringUtil.isInteger(strDomainId)) { loginUrl += \"?DomainId=\" + strDomainId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8495/buggy-version/war-core.src.main.java.com.silverpeas.core.AutoRedirectServlet.java", "BodyUseAPI": [], "Fixed commit": "b9a2a663a502a2266fd905d0b3b9a3fd0b42da21", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Core", "Date": "2014-11-27T15:19:14Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((container.getChildCount()) == 0) { container.addView(layout); }else { android.util.Log.e(\"childs\", (\"\" + (container.getChildCount()))); android.util.Log.e(\"position\", (\"\" + position)); int index = 0; while ((index < (container.getChildCount())) && (((java.lang.Integer) (container.getChildAt(index).getTag())) < position)) { index++; } container.addView(layout, index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6212/buggy-version/guesswho.src.com.dropbox.guesswho.FunFactPagerAdapter.java", "BodyUseAPI": ["android.view.ViewGroup.addView(android.widget.LinearLayout)", "android.view.ViewGroup.getChildCount()", "android.util.Log.e(java.lang.String,(\"\" + (container.getChildCount())))", "android.view.ViewGroup.getChildCount()", "android.view.ViewGroup.getChildAt(int)", "android.view.ViewGroup.addView(android.widget.LinearLayout,int)", "container.getChildAt(index).getTag()"], "Fixed commit": "6d2e5d8641c829c4a0c0b524ed8844410506cf60", "Url": "https://api.github.com/repos/mfulbright/Icebreaker-android", "Date": "2013-08-09T18:33:35Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (user == null) { user = com.gitblit.models.UserModel.ANONYMOUS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5066/buggy-version/src.main.java.com.gitblit.wicket.panels.RepositoryNamePanel.java", "BodyUseAPI": [], "Fixed commit": "90c9c9a9af20de464767c7a5726ae7088c6cab3b", "Url": "https://api.github.com/repos/gitblit/gitblit", "Date": "2014-09-04T16:37:06Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((profile.getCompany()) != null) { profileDto.setCompanyId(profile.getCompany().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5393/buggy-version/src.main.java.com.softserveinc.tender.facade.impl.ProfileServiceFacadeImpl.java", "BodyUseAPI": ["com.softserveinc.tender.entity.Profile.getCompany()", "profile.getCompany().getId()", "com.softserveinc.tender.dto.ProfileDto.setCompanyId(profile.getCompany().getId())"], "Fixed commit": "20ffdfeaf15c1384a243b6dfc7d10fce37d38be5", "Url": "https://api.github.com/repos/if045/tender", "Date": "2014-06-27T09:16:51Z"},
{"Line": "=>789", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.server.impl.SchemaUtil.queryLocalVdc(com.emc.storageos.db.client.DbClient)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (localVdc.getLocal()) { checkIPChanged(localVdc, dbClient); }else { com.emc.storageos.db.server.impl.SchemaUtil._log.warn(\"Vdc record is not local for {}\", _vdcShortId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/78/buggy-version/dbsvc.src.main.java.com.emc.storageos.db.server.impl.SchemaUtil.java", "BodyUseAPI": ["com.emc.storageos.db.server.impl.SchemaUtil.checkIPChanged(com.emc.storageos.db.server.impl.VirtualDataCenter,com.emc.storageos.db.client.DbClient)"], "Fixed commit": "db539273bfec3a235738436ea7ab03b9c5cf1106", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-09-26T16:48:15Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (altName != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1959/buggy-version/src.bento.lang.AbstractConstruction.java", "BodyUseAPI": [], "Fixed commit": "a4ee3fef66dc5b571a1eb4dd7acbbc25fa3981ec", "Url": "https://api.github.com/repos/bentodev/bentolang", "Date": "2016-11-08T14:04:44Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (init) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3010/buggy-version/src.net.meisen.dissertation.impl.cache.MemoryMetaDataCache.java", "BodyUseAPI": [], "Fixed commit": "4a364c97e2cebdd4ac47411062a9977c7cb36c45", "Url": "https://api.github.com/repos/pmeisen/dis-timeintervaldataanalyzer", "Date": "2015-01-13T23:14:06Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["melnorme.lang.tooling.parser.lexer.ICharacterReader.lookahead()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(((la == '{') || (la == '}')) || (isHexDigit(la)))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2563/buggy-version/plugin_tooling.src-lang.melnorme.lang.tooling.parser.lexer.CharacterLexingRule.java", "BodyUseAPI": [], "Fixed commit": "cba04a7f29958e0dd9697a236cd2d7afea0830c3", "Url": "https://api.github.com/repos/bruno-medeiros/MelnormeEclipse", "Date": "2015-04-09T20:13:21Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((r.getID()) != null) { java.util.Map<java.lang.String, java.lang.Object> props = new java.util.HashMap<java.lang.String, java.lang.Object>(r.getProperties()); props.remove(IPathMap.PROP_ID); r = new org.eclipse.tcf.internal.debug.launch.TCFLaunchDelegate.PathMapRule(props); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7569/buggy-version/target_explorer.plugins.org.eclipse.tcf.te.tcf.launch.core.src.org.eclipse.tcf.te.tcf.launch.core.internal.services.PathMapService.java", "BodyUseAPI": ["org.eclipse.tcf.services.IPathMap.PathMapRule.getProperties()"], "Fixed commit": "d3dde2c20a00d5b2c8c098d0257255be59a69e64", "Url": "https://api.github.com/repos/eclipse/tcf", "Date": "2015-06-18T07:08:00Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((value != null) && (value.equals(\"\"))) { value = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2092/buggy-version/src.com.dotmarketing.portlets.contentlet.model.Contentlet.java", "BodyUseAPI": [], "Fixed commit": "813baed5620591282081a2a951704b807cae9a0d", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2013-07-31T22:44:23Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fieldName.equals(\"this\")) { field = new org.jboss.errai.codegen.framework.meta.impl.build.BuildMetaField(null, null, org.jboss.errai.codegen.framework.builder.impl.Scope.Private, statement.getType(), \"this\"); }else { field = statement.getType().getField(fieldName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3615/buggy-version/errai-codegen.src.main.java.org.jboss.errai.codegen.framework.builder.callstack.LoadField.java", "BodyUseAPI": ["statement.getType().getField(java.lang.String)"], "Fixed commit": "933b470f611edeb4ac3d76223637531b06c4f943", "Url": "https://api.github.com/repos/errai/errai", "Date": "2011-09-06T16:15:00Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dk.frv.enav.esd.ESD.getMainFrame()) != null) { dk.frv.enav.esd.ESD.getMainFrame().setActiveMapWindow(((dk.frv.enav.esd.gui.JMapFrame) (f))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7932/buggy-version/src.main.java.dk.frv.enav.esd.gui.JMainDesktopManager.java", "BodyUseAPI": [], "Fixed commit": "0be0cd56576d8eb7b44470c39249c87cd65266f3", "Url": "https://api.github.com/repos/DaMSA/eNav-Shore-Display", "Date": "2012-06-06T06:52:58Z"},
{"Line": "=>1508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isDay)) && (isInProgress())) waiting.endNight();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2816/buggy-version/logic.Narrator.java", "BodyUseAPI": [], "Fixed commit": "af19f74ced7ddd929f1dd6859af154f8c83a6c8b", "Url": "https://api.github.com/repos/vossnarrator/TheNarrator", "Date": "2017-03-01T10:23:10Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(userSession.isLoggedIn())) { return edu.emory.mathcs.backport.java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5762/buggy-version/sonar-server.src.main.java.org.sonar.server.issue.IssueFilterService.java", "BodyUseAPI": [], "Fixed commit": "f75f69b162e01c9822d966038df47e5ad103d7d4", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-07-17T21:44:51Z"},
{"Line": "=>905", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nodeList != null) && (nodeList.isEmpty())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4459/buggy-version/nuxeo-studioviz-operations.src.main.java.org.nuxeo.studioviz.helper.GraphHelper.java", "BodyUseAPI": [], "Fixed commit": "d730b38fe03e8c678a43b28eda5292be03a7849c", "Url": "https://api.github.com/repos/nuxeo-sandbox/nuxeo-studioviz", "Date": "2016-03-01T16:53:39Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg instanceof org.zstack.compute.vm.APIGetInterdependentL3NetworksImagesMsg) { validate(((org.zstack.compute.vm.APIGetInterdependentL3NetworksImagesMsg) (msg))); }else if (msg instanceof org.zstack.compute.vm.APIUpdateVmInstanceMsg) { validate(((org.zstack.compute.vm.APIUpdateVmInstanceMsg) (msg))); }else if (msg instanceof org.zstack.compute.vm.APISetVmConsolePasswordMsg) { validate(((org.zstack.compute.vm.APISetVmConsolePasswordMsg) (msg))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8893/buggy-version/compute.src.main.java.org.zstack.compute.vm.VmInstanceApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "c56c4dbd8a5306ecf0a4239caf8b7505c790a48f", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-03-13T06:33:38Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (call.callJava()) { methodVisitor.visitMethodInsn(loop.INVOKESTATIC, \"loop/runtime/Caller\", \"callStatic\", \"(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\"); }else { methodVisitor.visitMethodInsn(loop.INVOKESTATIC, \"loop/runtime/Caller\", \"callStatic\", \"(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5322/buggy-version/src.loop.AsmCodeEmitter.java", "BodyUseAPI": [], "Fixed commit": "0627ba25dccb0e95a03691db4e030eea39a1b9b8", "Url": "https://api.github.com/repos/yohanbeschi/loop", "Date": "2012-08-18T07:21:19Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (itemList != null) { addAll(itemList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2859/buggy-version/app.src.main.java.com.codepath.timeline.fragments.UserStoriesFragment.java", "BodyUseAPI": ["com.codepath.timeline.fragments.UserStoriesFragment.1.addAll(java.util.List<com.codepath.timeline.models.Story>)"], "Fixed commit": "738e827fb65dd6acab725b21c0140ba955ebced8", "Url": "https://api.github.com/repos/dbautist/timeline", "Date": "2016-08-27T19:45:27Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((diskOffering != null) && (diskOffering.isCustomized())) { diskOffering.setDiskSize(sizeBefore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/9013/buggy-version/server.src.com.cloud.storage.VolumeManagerImpl.java", "BodyUseAPI": ["com.cloud.storage.DiskOfferingVO.setDiskSize(long)"], "Fixed commit": "2b0d397b49ec8828a505ed1d8063d08ff29ca184", "Url": "https://api.github.com/repos/greenqloud/cloudstack", "Date": "2015-01-06T16:34:43Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i % 3) == 0) { brushColor = getDarker(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4292/buggy-version/src.edu.ucsb.cs56.projects.utilities.cs56_utilities_binary_clock.Block.java", "BodyUseAPI": [], "Fixed commit": "31c1cc14f84ec835dcdd8698989231aabbe4700e", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-utilities-binary-clock", "Date": "2015-03-04T01:38:38Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i % 3) == 0) { brushColor = getDarker(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4292/buggy-version/src.edu.ucsb.cs56.projects.utilities.cs56_utilities_binary_clock.Block.java", "BodyUseAPI": [], "Fixed commit": "31c1cc14f84ec835dcdd8698989231aabbe4700e", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-utilities-binary-clock", "Date": "2015-03-04T01:38:38Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((httpResponse.getStatusLine().getStatusCode()) == 200) { java.lang.String responseAsString = org.apache.http.util.EntityUtils.toString(entity); com.hawkware.apollo.client.http.DefaultHttpService.logger.debug(((\"responseAsString = [\" + responseAsString) + \"]\")); response.setPayload(responseAsString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2201/buggy-version/client.src.main.java.com.hawkware.apollo.client.http.DefaultHttpService.java", "BodyUseAPI": [], "Fixed commit": "943514c46efbab609e51c76971f9d7a513e8d714", "Url": "https://api.github.com/repos/hawkware/apollo", "Date": "2013-02-12T00:23:19Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.gemini.spModel.target.sync.ISPNode.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parent instanceof edu.gemini.spModel.target.sync.ISPObservation) { edu.gemini.spModel.target.sync.GuideSync.update(((edu.gemini.spModel.target.sync.ISPObservation) (parent))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4500/buggy-version/bundle.edu.gemini.pot.src.main.java.edu.gemini.spModel.target.sync.GuideSync.java", "BodyUseAPI": [], "Fixed commit": "eb14c5e19e41cf603db742fe960dc0e0f9b3dbb0", "Url": "https://api.github.com/repos/swalker2m/ocs", "Date": "2015-03-11T13:34:31Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ctx.getChild(0).getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(stack.isDefined(toAsn))) { java.lang.System.out.println(\"Declaration Error\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5735/buggy-version/src.main.java.littleCompiler.ParserListener.java", "BodyUseAPI": [], "Fixed commit": "46e87940bbbff0c374d226a69ca1f8209d4f586e", "Url": "https://api.github.com/repos/sdilts/little-compiler", "Date": "2017-04-25T07:32:41Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["builder.getSuccesses().keySet()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (successes != null) { successes = new java.util.HashSet(successes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2690/buggy-version/cas-server-core.src.main.java.org.jasig.cas.authentication.SuccessfulHandlerMetaDataPopulator.java", "BodyUseAPI": [], "Fixed commit": "d69a3cd4aeb04eaa6c774860de02f582421abd93", "Url": "https://api.github.com/repos/apereo/cas", "Date": "2015-07-25T20:03:18Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (option.equals(\"cache\")) { for (java.lang.String line : fileLines) { if (line.startsWith(\"cache.\")) { template.put(line.split(\" \")[0], line.split(\" \")[0]); } } }else { com.alfresco.support.alfjmxdump.AlfJmxDump.showUsage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6592/buggy-version/src.main.java.com.alfresco.support.alfjmxdump.JmxDumpHandler.java", "BodyUseAPI": [], "Fixed commit": "f24ca8c22afdb5084ce914268b1ad8434e58b9f4", "Url": "https://api.github.com/repos/hseritt/alfjmxdump", "Date": "2016-12-29T13:00:12Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((productModel.getDescription()) != null) { description = productModel.getDescription(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/200/buggy-version/axelor-base.src.main.java.com.axelor.apps.base.service.ProductServiceImpl.java", "BodyUseAPI": ["com.axelor.apps.base.db.Product.getDescription()"], "Fixed commit": "a8c96153f22745cfec9fd94371e3cf956623307e", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2015-11-13T16:22:34Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((productModel.getInternalDescription()) != null) { internalDescription = productModel.getInternalDescription(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/200/buggy-version/axelor-base.src.main.java.com.axelor.apps.base.service.ProductServiceImpl.java", "BodyUseAPI": ["com.axelor.apps.base.db.Product.getInternalDescription()"], "Fixed commit": "a8c96153f22745cfec9fd94371e3cf956623307e", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2015-11-13T16:22:34Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jp.ac.nitech.cs.simplecardapp.dbutil.AccessWrapper.getCard(int,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (c.contents[i].type.equals(\"img\")) { for (int j = 0; j < ((c.contents[i].content.length) / 2); j++) { byte[] b = new byte[]{ c.contents[i].content[(2 * j)], c.contents[i].content[((2 * j) + 1)] }; sb.append(new java.lang.String(b, \"UTF-8\")); } }else { sb.append(new java.lang.String(c.contents[i].content, \"UTF-8\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7980/buggy-version/app.src.main.java.jp.ac.nitech.cs.simplecardapp.CardPagerAdapter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "20cc6827279f497d4a6023fa5a606508cdb7e6ec", "Url": "https://api.github.com/repos/k-taro/SimpleCardApp", "Date": "2015-04-17T02:12:00Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (1 == true) { if (11 == true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3045/buggy-version/stadler_seibezeder_android.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e097681e68a1a8fb967b34d3377d9c342ecb3d89", "Url": "https://api.github.com/repos/anikaseibezeder/Tools2017stadlerseibezeder", "Date": "2017-04-28T06:48:02Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(metadata.containsKey(\"FirstJoin\"))) { metadata.put(\"FirstJoin\", net.visualillusionsent.utils.DateUtils.longToDateTime(java.lang.System.currentTimeMillis())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7568/buggy-version/src.main.java.net.minecraft.server.EntityPlayer.java", "BodyUseAPI": ["net.minecraft.server.EntityPlayer.put(java.lang.String,net.visualillusionsent.utils.DateUtils.longToDateTime(java.lang.System.currentTimeMillis()))"], "Fixed commit": "823251d450c8c59aba65524446989b42c86ddd01", "Url": "https://api.github.com/repos/FallenMoonNetwork/CanaryRecode", "Date": "2013-10-15T02:41:36Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 0) && callingBoundMethod) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/132/buggy-version/plugins.com.python.pydev.analysis.src.com.python.pydev.analysis.scopeanalysis.AbstractScopeAnalyzerVisitor.java", "BodyUseAPI": [], "Fixed commit": "2b34d277c913a390b73aa387e7d589553680546a", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2012-02-21T15:49:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cacheConfigMap.get(cacheName)) != null) { isStatisticsEnabled = cacheConfigMap.get(cacheName).isStatisticsEnabled(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6959/buggy-version/components.org.wso2.carbon.security.caas.src.main.java.org.wso2.carbon.security.caas.user.core.util.CacheHelper.java", "BodyUseAPI": ["cacheConfigMap.get(cacheName).isStatisticsEnabled()", "java.util.Map<java.lang.String, org.wso2.carbon.security.caas.user.core.config.CacheConfig>.get(java.lang.String)"], "Fixed commit": "4d8f1bfe58106b0119bc2761bf2e8628ee2b584d", "Url": "https://api.github.com/repos/JKAUSHALYA/carbon-security", "Date": "2016-06-08T11:09:59Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (betCount >= 2) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5207/buggy-version/src.main.java.betix.bet365.Bet365.java", "BodyUseAPI": [], "Fixed commit": "082abb96547c1cd52f24863cecc66d1a6e098623", "Url": "https://api.github.com/repos/macypa/betix", "Date": "2015-03-02T17:48:20Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((resultString.length()) > 128) { Length = 128; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7203/buggy-version/src.main.java.com.plugish.woominecraft.Util.RcHttp.java", "BodyUseAPI": [], "Fixed commit": "b9648560e8c87f9ac7fe4a7f77cad342e2def0cf", "Url": "https://api.github.com/repos/WooMinecraft/WooMinecraft", "Date": "2017-01-01T20:43:28Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((resultString.length()) > 128) { Length = 128; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7203/buggy-version/src.main.java.com.plugish.woominecraft.Util.RcHttp.java", "BodyUseAPI": [], "Fixed commit": "b9648560e8c87f9ac7fe4a7f77cad342e2def0cf", "Url": "https://api.github.com/repos/WooMinecraft/WooMinecraft", "Date": "2017-01-01T20:43:28Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(indexOfDot == (-1))) { nameNoExtension = fileName.substring(0, indexOfDot); extension = fileName.substring(indexOfDot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2229/buggy-version/extensions.src.org.pentaho.platform.web.http.api.resources.FileResource.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "4f13a24e528c082f44c18b90147066a10a75b5b2", "Url": "https://api.github.com/repos/pentaho/pentaho-platform", "Date": "2014-05-02T17:43:17Z"},
{"Line": "=>1376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((direction > 0) && ((mSlideOffset) <= (mAnchorPoint))) { target = computePanelTopPosition(mAnchorPoint); }else if ((direction > 0) && ((mSlideOffset) > (mAnchorPoint))) { target = computePanelTopPosition(1.0F); }else if ((direction < 0) && ((mSlideOffset) >= (mAnchorPoint))) { target = computePanelTopPosition(mAnchorPoint); }else if ((direction < 0) && ((mSlideOffset) < (mAnchorPoint))) { target = computePanelTopPosition(0.0F); }else if ((mSlideOffset) >= ((1.0F + (mAnchorPoint)) / 2)) { target = computePanelTopPosition(1.0F); }else if ((mSlideOffset) >= ((mAnchorPoint) / 2)) { target = computePanelTopPosition(mAnchorPoint); }else { target = computePanelTopPosition(0.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8314/buggy-version/library.src.com.sothree.slidinguppanel.SlidingUpPanelLayout.java", "BodyUseAPI": [], "Fixed commit": "51e1651276f72fbb7faf95b966e2fe12e27b5abd", "Url": "https://api.github.com/repos/TR4Android/AndroidSlidingUpPanel", "Date": "2015-07-23T22:00:33Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (permissionIds.contains(FrameworkConstants.PER_VIEW_REPO)) { permissions.setViewRepo(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5979/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.commons.FrameworkUtil.java", "BodyUseAPI": [], "Fixed commit": "8d8492ee127e3227f9ff8900cfe6b4b371b3cc9f", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2014-04-18T07:31:50Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ipbhalle.metfraglib.process.CombinedMetFragProcess.retrieveCompounds()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!candidatesRetrieved) return new de.ipbhalle.metfraglib.list.CandidateList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5324/buggy-version/MetFragR.src.main.java.de.ipbhalle.metfrag.r.MetfRag.java", "BodyUseAPI": [], "Fixed commit": "515aaf296c4c170c2cc8d66724678e27ef09f271", "Url": "https://api.github.com/repos/c-ruttkies/MetFragRelaunched", "Date": "2016-05-20T14:33:43Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((TAR.getReason()) == \"The game did not start yet!\") modell.netcom.Comm.log.debug(\"THE FUCK IS HAPPENING???????????????????????????????????????????????????????????????????????\"); else modell.netcom.Comm.log.debug(TAR.getReason());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7523/buggy-version/Client.src.main.java.modell.netcom.Comm.java", "BodyUseAPI": ["modell.netcom.Turnackresponse.getReason()", "org.slf4j.Logger.debug(TAR.getReason())"], "Fixed commit": "059b53c60d1f5db577b9477b834977405150289d", "Url": "https://api.github.com/repos/Arnor1711/SWE_1", "Date": "2017-12-22T12:12:37Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedPresentation) == null) { android.widget.Toast.makeText(getActivity(), \"Please, select a presentation!\", Toast.LENGTH_SHORT).show(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3075/buggy-version/Calendula.src.main.java.es.usc.citius.servando.calendula.fragments.MedicineCreateOrEditFragment.java", "BodyUseAPI": [], "Fixed commit": "5701ff9a79af6b77d4fd77ba973ac9977e6dd1fd", "Url": "https://api.github.com/repos/citiususc/calendula", "Date": "2015-02-10T16:44:13Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validate())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3075/buggy-version/Calendula.src.main.java.es.usc.citius.servando.calendula.fragments.MedicineCreateOrEditFragment.java", "BodyUseAPI": [], "Fixed commit": "5701ff9a79af6b77d4fd77ba973ac9977e6dd1fd", "Url": "https://api.github.com/repos/citiususc/calendula", "Date": "2015-02-10T16:44:13Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isDetached()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2910/buggy-version/OsmAnd.src.net.osmand.plus.dashboard.DashDownloadMapsFragment.java", "BodyUseAPI": [], "Fixed commit": "83911e44b599aee602dc73359514b7de4fb78703", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-12-19T09:49:43Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isDetached()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2910/buggy-version/OsmAnd.src.net.osmand.plus.dashboard.DashDownloadMapsFragment.java", "BodyUseAPI": [], "Fixed commit": "83911e44b599aee602dc73359514b7de4fb78703", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-12-19T09:49:43Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o1.isNotForStorage()) { return 1; }else if (o2.isNotForStorage()) { return -1; }else { return (-1) * (com.google.common.primitives.Longs.compare(o1.getTimestamp(), o2.getTimestamp())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4955/buggy-version/concourse-server.src.main.java.org.cinchapi.concourse.server.model.Storables.java", "BodyUseAPI": ["org.cinchapi.concourse.server.model.Storable.getTimestamp()", "com.google.common.primitives.Longs.compare(o1.getTimestamp(),o2.getTimestamp())"], "Fixed commit": "7254d386f5eccc9a8943be90f542b8964f9bff04", "Url": "https://api.github.com/repos/cinchapi/concourse", "Date": "2013-10-08T12:58:17Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.PriorityQueue<Link>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (forwardLink.isShortCut()) { nextActivePriorityNode.addLink(newBacklink); }else { nextActivePriorityNode.setBacklink(newBacklink); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3447/buggy-version/FuzzySearch.src.ActivePriorityNode.java", "BodyUseAPI": [], "Fixed commit": "756d702103a977552935a21c2deac9bc729e1bc5", "Url": "https://api.github.com/repos/Sigurdw/SteinkjerSearch", "Date": "2012-10-19T11:25:40Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intermediateChunk.equals(\"\")) { intermediateChunk = line; }else { intermediateChunk += (cz.filmtit.share.TitChunkSeparator.SUBLINE_SEPARATOR_OUT) + line; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6131/buggy-version/src.share.src.main.java.cz.filmtit.share.TitChunkSeparator.java", "BodyUseAPI": [], "Fixed commit": "76eac4ecbb58ae045d28245c1a685a3448dd0d2b", "Url": "https://api.github.com/repos/runn1ng/FilmTit", "Date": "2012-06-17T16:13:19Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiFile.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (psiDirectory == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6391/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.references.StructValueReference.java", "BodyUseAPI": [], "Fixed commit": "c4aa8c238c1db63fe3c5aa2906931d10e2671dd1", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2017-08-18T05:45:15Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ballerinalang.plugins.idea.psi.IdentifierPSINode.getContainingFile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (containingFile == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6391/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.references.StructValueReference.java", "BodyUseAPI": [], "Fixed commit": "c4aa8c238c1db63fe3c5aa2906931d10e2671dd1", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2017-08-18T05:45:15Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ballerinalang.plugins.idea.psi.impl.BallerinaPsiImplUtil.resolveElementInPackage(com.intellij.psi.PsiDirectory,org.ballerinalang.plugins.idea.psi.IdentifierPSINode,boolean,boolean,boolean,boolean,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (element != null) { return element; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6391/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.references.StructValueReference.java", "BodyUseAPI": [], "Fixed commit": "c4aa8c238c1db63fe3c5aa2906931d10e2671dd1", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2017-08-18T05:45:15Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (RSSManagerConstants.H2.equalsIgnoreCase(org.wso2.carbon.rssmanager.common.RSSManagerHelper.getDatabasePrefix(url))) { return url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2683/buggy-version/components.rss-manager.org.wso2.carbon.rssmanager.common.src.main.java.org.wso2.carbon.rssmanager.common.RSSManagerHelper.java", "BodyUseAPI": [], "Fixed commit": "145d3678868419fc6b6cc319f0eefd5bd72773af", "Url": "https://api.github.com/repos/harsha89/carbon-storage-management", "Date": "2015-01-14T11:15:08Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMeasurementFrag) != null) mMeasurementFrag.stopTimer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/785/buggy-version/app.src.main.java.com.heartrate.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "247a8baf5e676a3653a9b2c12a08cbd59df2249e", "Url": "https://api.github.com/repos/chillcoding-at-the-beach/bachamada", "Date": "2015-07-30T16:54:31Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.getCols()) == (v.getRows())) { vec = new double[this.getRows()][v.getCols()]; for (int i = 0; i < (vec.length); i++) { for (int j = 0; j < (vec[i].length); j++) { for (int r = 0; r < (this.getCols()); r++) { vec[i][j] += (this.array[i][r]) * (v.getArray()[r][j]); } } } }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1876/buggy-version/vectors.Vector.java", "BodyUseAPI": ["vectors.Vector.getCols()", "vectors.Vector.getArray()"], "Fixed commit": "ea7650a5c22d6ef34d84218c978967c550998ac9", "Url": "https://api.github.com/repos/leeklarich/Functional-Neural-Network", "Date": "2016-09-22T00:31:19Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (json.trim().isEmpty()) throw new org.araqne.logdb.QueryParseException(\"10201\", (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5230/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.parser.JsonParser.java", "BodyUseAPI": [], "Fixed commit": "72cd5e18737388d5c60e15db0465fbcae42cf45a", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-12-17T02:23:37Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (item != null) { item.setBackgroundColor(Color.TRANSPARENT); item.setTextColor(getResources().getColor(R.color.primary_dark_material_dark)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6552/buggy-version/app.src.main.java.za.co.lukestonehm.logicaldefence.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setTextColor(getResources().getColor(R.color.primary_dark_material_dark))", "android.widget.TextView.setBackgroundColor(Color.TRANSPARENT)"], "Fixed commit": "fd6b68d4ea58e818b578e53b416029d9c907d5ea", "Url": "https://api.github.com/repos/LukeStonehm/LogicalDefence", "Date": "2017-03-29T10:13:23Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (item != null) { item.setBackgroundColor(getResources().getColor(R.color.colorPrimary)); item.setTextColor(Color.WHITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6552/buggy-version/app.src.main.java.za.co.lukestonehm.logicaldefence.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setBackgroundColor(getResources().getColor(R.color.colorPrimary))", "android.widget.TextView.setTextColor(Color.WHITE)"], "Fixed commit": "fd6b68d4ea58e818b578e53b416029d9c907d5ea", "Url": "https://api.github.com/repos/LukeStonehm/LogicalDefence", "Date": "2017-03-29T10:13:23Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.tallty.smart_life_android.fragment.home.HomeFragment.firstUse) { org.greenrobot.eventbus.EventBus.getDefault().post(new com.tallty.smart_life_android.event.TransferDataEvent(new android.os.Bundle(), \"\u521d\u6b21\u8fdb\u5165\")); com.tallty.smart_life_android.fragment.home.HomeFragment.firstUse = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5597/buggy-version/app.src.main.java.com.tallty.smart_life_android.fragment.home.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "ead9a568c737ea223e43ecb4b621af41db4eebe6", "Url": "https://api.github.com/repos/tallydev/smart_life_android", "Date": "2016-08-12T09:42:08Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first) { first = false; }else { list.add(article); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6165/buggy-version/src.Network.SQLManager.java", "BodyUseAPI": [], "Fixed commit": "3c3da493bfa9f1d2fdcfdfc836b9468f67e804a5", "Url": "https://api.github.com/repos/RobinLanneer/elasticSearch", "Date": "2017-03-15T14:44:04Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (c.equalsIgnoreCase(\",\")) strLeftRightMinMax = strLeftRightMinMax.substring(0, (len - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7739/buggy-version/core.JavaRendererServer.src.main.java.RenderMultipoints.clsRenderer.java", "BodyUseAPI": [], "Fixed commit": "0f5748efef0d5f214f04d3117d08628ad39e29ab", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2014-11-17T23:11:48Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indexB > 0) indexB--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/116/buggy-version/src.mergingTwoArrays.java", "BodyUseAPI": [], "Fixed commit": "d7a255bda0779cc94a21b37d833975244852f21b", "Url": "https://api.github.com/repos/cahules/inf111-w12", "Date": "2012-03-12T19:26:54Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indexA > 0) indexA--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/116/buggy-version/src.mergingTwoArrays.java", "BodyUseAPI": [], "Fixed commit": "d7a255bda0779cc94a21b37d833975244852f21b", "Url": "https://api.github.com/repos/cahules/inf111-w12", "Date": "2012-03-12T19:26:54Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((binarySB.length()) < 8) { s = java.lang.String.format(\"%-8s\", s).replace(' ', '0'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3733/buggy-version/src.Compressor.java", "BodyUseAPI": [], "Fixed commit": "b46e47ff98e80912328f8d36381d881895c1b62c", "Url": "https://api.github.com/repos/n23sharm/DataCompression", "Date": "2017-04-17T22:01:01Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Deque<Elementos.CartaSorteOuReves>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((card.getAction()) != 6) && ((card.getAction()) != 7)) { cartas_sorte_ou_reves.add(card); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/9026/buggy-version/Elementos.CartaSorteOuRevesAuxiliar.java", "BodyUseAPI": ["java.util.Deque<Elementos.CartaSorteOuReves>.add(Elementos.CartaSorteOuReves)"], "Fixed commit": "fa14c8ba938147ee51041949b092a591a681f808", "Url": "https://api.github.com/repos/alxtpimenta/tp3", "Date": "2016-12-21T00:35:17Z"},
{"Line": "=>823", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cxn != null) { cxn.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6335/buggy-version/stripes.src.main.java.net.sourceforge.stripes.controller.DynamicMappingFilter.java", "BodyUseAPI": ["java.net.HttpURLConnection.disconnect()"], "Fixed commit": "8b89c24354df923186e7b79c794b9fc79dd6c40e", "Url": "https://api.github.com/repos/iluvtr/stripes", "Date": "2015-11-17T22:15:46Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((networks.getNetwork(groupPosition).getBuffers()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8011/buggy-version/QuasselDroid.src.main.java.com.iskrembilen.quasseldroid.gui.fragments.BufferFragment.java", "BodyUseAPI": [], "Fixed commit": "47092d56d95101a9c4087b007465bcc8a5f59906", "Url": "https://api.github.com/repos/sandsmark/QuasselDroid", "Date": "2015-11-15T23:15:00Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((networks.getNetwork(groupPosition)) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8011/buggy-version/QuasselDroid.src.main.java.com.iskrembilen.quasseldroid.gui.fragments.BufferFragment.java", "BodyUseAPI": [], "Fixed commit": "47092d56d95101a9c4087b007465bcc8a5f59906", "Url": "https://api.github.com/repos/sandsmark/QuasselDroid", "Date": "2015-11-15T23:15:00Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((networks.getNetworkList().size()) <= groupPosition) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8011/buggy-version/QuasselDroid.src.main.java.com.iskrembilen.quasseldroid.gui.fragments.BufferFragment.java", "BodyUseAPI": [], "Fixed commit": "47092d56d95101a9c4087b007465bcc8a5f59906", "Url": "https://api.github.com/repos/sandsmark/QuasselDroid", "Date": "2015-11-15T23:15:00Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.findViewById(R.id.progressBar)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (mProgress == null) { activity.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { try { activity.onBackPressed(); } catch (java.lang.Exception x) { } } }); }else { activity.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { mProgress.setVisibility(View.INVISIBLE); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1609/buggy-version/src.com.example.imagechatapplication.connection.connectionstrategies.NodeServerConnectionStrategy.java", "BodyUseAPI": ["android.app.Activity.runOnUiThread(java.lang.Runnable)", "android.widget.ProgressBar.setVisibility(View.INVISIBLE)"], "Fixed commit": "12596d2e8102b636bcb5a8179e5cff11b0d535c9", "Url": "https://api.github.com/repos/Dammic/ImageChatApplication", "Date": "2016-06-21T20:55:58Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fluid) != null) && (fluid.isFluidEqual(resource))) { if ((tile) instanceof buildcraftAdditions.tileEntities.Bases.TileBase) ((buildcraftAdditions.tileEntities.Bases.TileBase) (tile)).sync(); drained = drain(resource.amount, doDrain); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3925/buggy-version/src.main.java.buildcraftAdditions.utils.fluids.Tank.java", "BodyUseAPI": ["buildcraftAdditions.utils.fluids.Tank.drain(resource.amount,boolean)"], "Fixed commit": "13526a69cdcb08ac5ad48df8930a22e6879a6bba", "Url": "https://api.github.com/repos/BCA-Team/Buildcraft-Additions", "Date": "2015-04-06T10:27:11Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()", "java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (a == b) { java.lang.System.out.println((a * numbers)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3850/buggy-version/src.algorithms.warmup.ManasaAndStones.java", "BodyUseAPI": ["java.io.PrintStream.println(int)"], "Fixed commit": "063e8db898a36689ee2c81d544dcb373e4dd9862", "Url": "https://api.github.com/repos/wangkekekexili/HackerRank", "Date": "2015-02-09T23:38:14Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(activated)) { game.Game.getInstance().removeEntity(target_id); activated = true; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/9162/buggy-version/src.game.event.RemoveEntityEvent.java", "BodyUseAPI": [], "Fixed commit": "ec77ce3bd100916d29de293d5819488c62a10f95", "Url": "https://api.github.com/repos/patrick478/Medieval-Madness", "Date": "2012-10-14T09:04:17Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (activeFilename == null) { activeNote = noteControl.createNewNote(); }else { activeNote = noteControl.loadNote(activeFilename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7362/buggy-version/src.org.fennd.note.simple.view.NoteView.java", "BodyUseAPI": ["org.fennd.note.simple.controller.NoteController.loadNote(java.lang.String)"], "Fixed commit": "29b45bf67e8d78b6fd0c60088885c12a42f64dd2", "Url": "https://api.github.com/repos/dwfennell/android-noteapp", "Date": "2012-11-13T06:38:52Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["OsmMap.get(wayNode.getNodeId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tile == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5226/buggy-version/src.MapSplit.java", "BodyUseAPI": [], "Fixed commit": "be6d5aca9f58551c84b2481b232b357236d6d4ba", "Url": "https://api.github.com/repos/nrenner/mapsplit", "Date": "2013-06-25T17:07:04Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((goldStand.size()) == 0) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/7268/buggy-version/project-team01.src.main.java.util.RetrievalMeasures.java", "BodyUseAPI": [], "Fixed commit": "7665792933963fdcf52c42c3eda13927301e9826", "Url": "https://api.github.com/repos/lubronzhan/project-team01", "Date": "2014-11-11T02:47:45Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getAttribute().getValueAsObject()) != null) { equalValues = this.getAttribute().getValueAsObject().equals(other.getAttribute().getValueAsObject()); }else { equalValues = (other.getAttribute().getValueAsObject()) == null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8372/buggy-version/src.gov.nist.javax.sdp.fields.AttributeField.java", "BodyUseAPI": [], "Fixed commit": "1564c480a03164bd001cdf76629b48ab3329f44e", "Url": "https://api.github.com/repos/RestComm/jain-sip", "Date": "2017-06-20T19:11:32Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.motechproject.mobile.omp.manager.intellivr.MessageRequest.getNotificationType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (notificationType != null) notificationIDs.append(notificationType.getId().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2946/buggy-version/motech-mobile-omp.src.main.java.org.motechproject.mobile.omp.manager.intellivr.IntellIVRBean.java", "BodyUseAPI": ["org.motechproject.mobile.omp.manager.intellivr.NotificationType.getId()", "notificationType.getId().toString()", "java.lang.StringBuilder.append(notificationType.getId().toString())"], "Fixed commit": "975d59c9848eae05edb040e576794331410de031", "Url": "https://api.github.com/repos/motech/MOTECH-Mobile", "Date": "2011-10-08T05:22:30Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contactList) instanceof net.java.sip.communicator.impl.gui.main.contactlist.TreeContactList) { ((net.java.sip.communicator.impl.gui.main.contactlist.TreeContactList) (contactList)).setAutoSectionAllowed(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2682/buggy-version/src.net.java.sip.communicator.impl.gui.main.contactlist.ContactListSearchKeyDispatcher.java", "BodyUseAPI": [], "Fixed commit": "ede6a9bcbfdf563331c6bd34b3cca9a77a8e90e9", "Url": "https://api.github.com/repos/egbonrelu/jitsi", "Date": "2014-02-28T10:07:03Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contactList) instanceof net.java.sip.communicator.impl.gui.main.contactlist.TreeContactList) { ((net.java.sip.communicator.impl.gui.main.contactlist.TreeContactList) (contactList)).setAutoSectionAllowed(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/2682/buggy-version/src.net.java.sip.communicator.impl.gui.main.contactlist.ContactListSearchKeyDispatcher.java", "BodyUseAPI": [], "Fixed commit": "ede6a9bcbfdf563331c6bd34b3cca9a77a8e90e9", "Url": "https://api.github.com/repos/egbonrelu/jitsi", "Date": "2014-02-28T10:07:03Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg2 == 4) { com.jlhuang.ptuiapi.Intent i = new com.jlhuang.ptuiapi.Intent(this, com.jlhuang.ptuiapi.SixthActivity.class); startActivity(i); }else { if (arg2 == 5) { com.jlhuang.ptuiapi.Intent i = new com.jlhuang.ptuiapi.Intent(this, com.jlhuang.ptuiapi.SeventhActivity.class); startActivity(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/5241/buggy-version/PTUIAPI.app.src.main.java.com.jlhuang.ptuiapi.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "337316a74707399747001b9f05dcec49c9d24ff4", "Url": "https://api.github.com/repos/jlhuang1224/PTUI-Projects", "Date": "2017-07-30T11:08:01Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(main.java.com.texasgamer.bedtime.Config.readString(\"run-on-idle\").equalsIgnoreCase(\"missingno\"))) p.performCommand(main.java.com.texasgamer.bedtime.Config.readString(\"run-on-idle\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6441/buggy-version/src.main.java.com.texasgamer.bedtime.idleChecker.java", "BodyUseAPI": [], "Fixed commit": "091a43893450cb0c45c8763752fee80b4da66cba", "Url": "https://api.github.com/repos/ThomasGaubert/bedtime", "Date": "2011-10-08T16:46:02Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getId().equals(\"A0000\")) { javax.faces.context.FacesContext.getCurrentInstance().addMessage(null, new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_INFO, \"You are not allowed to delete SuperAdmin.\", \"\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/6146/buggy-version/IRMS.IRMS-war.src.java.commonInfrastructure.ERMS.managedbean.ManageEmployeeManagedBean.java", "BodyUseAPI": [], "Fixed commit": "98aafc71e25605459b983ae926cf5d5b261690e2", "Url": "https://api.github.com/repos/liuPATHn-nus/Test", "Date": "2013-09-29T13:16:20Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smi.travel.datalayer.service.PaymentOutboundService.savePaymentOutbound(com.smi.travel.datalayer.entity.PaymentOutbound)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"success\".equalsIgnoreCase(result)) { return new org.springframework.web.servlet.ModelAndView(new org.springframework.web.servlet.view.RedirectView((((\"PaymentOutbound.smi?action=search&payNo=\" + (paymentOutbound.getPayNo())) + \"&resultRedirect=\") + result), true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3902/buggy-version/src.java.com.smi.travel.controller.PaymentOutboundController.java", "BodyUseAPI": [], "Fixed commit": "32a49a898206b39c550d3262ee3c462ee137bfdf", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-02-18T09:55:26Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((!(\"\".equalsIgnoreCase(resultRedirect))) && (resultRedirect != null)) { request.setAttribute(com.smi.travel.controller.PaymentOutboundController.RESULT, resultRedirect); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3902/buggy-version/src.java.com.smi.travel.controller.PaymentOutboundController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "32a49a898206b39c550d3262ee3c462ee137bfdf", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-02-18T09:55:26Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hDistance == vDistance) { java.lang.System.out.println(\"equals\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8398/buggy-version/src.scenario.ScenarioManager.java", "BodyUseAPI": [], "Fixed commit": "918d4b7f4f4edea0348eaeed4300d6de9cabb8d9", "Url": "https://api.github.com/repos/BrunoRafael/wumpus", "Date": "2016-09-30T17:33:14Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hDistance == 0) && (vDistance == 0)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/8398/buggy-version/src.scenario.ScenarioManager.java", "BodyUseAPI": [], "Fixed commit": "918d4b7f4f4edea0348eaeed4300d6de9cabb8d9", "Url": "https://api.github.com/repos/BrunoRafael/wumpus", "Date": "2016-09-30T17:33:14Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((savedInstanceState.getString(\"tmpFileUri\")) != null) { tmpFile = new java.io.File(android.net.Uri.parse(savedInstanceState.getString(\"tmpFileUri\")).getPath()); uri = android.net.Uri.parse(savedInstanceState.getString(\"fileUri\")); displayFile(tmpFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3533/buggy-version/app.src.main.java.com.workingagenda.fissure.ViewActivity.java", "BodyUseAPI": ["android.net.Uri.parse(savedInstanceState.getString(\"tmpFileUri\")).getPath()", "android.os.Bundle.getString(java.lang.String)", "android.net.Uri.parse(savedInstanceState.getString(\"fileUri\"))", "android.net.Uri.parse(savedInstanceState.getString(\"tmpFileUri\"))", "android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "0dbb8f2fcb132f3d2e74f97538d3b8bc04b7c570", "Url": "https://api.github.com/repos/Swati4star/fissure-android", "Date": "2016-09-13T03:24:14Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.isInRange(x, y)) { lu.innocence.ignis.engine.TileCell tsCell = new lu.innocence.ignis.engine.TileCell(x, y, tsX, tsY); return this.matrix.get(x).set(y, tsCell); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/4148/buggy-version/src.main.java.lu.innocence.ignis.engine.TilesetLayer.java", "BodyUseAPI": ["java.util.List<java.util.List<lu.innocence.ignis.engine.TileCell>>.get(int)", "this.matrix.get(x).set(int,lu.innocence.ignis.engine.TileCell)"], "Fixed commit": "44fd7563c752dd58a36cb3f36f9e14c6a756578a", "Url": "https://api.github.com/repos/Meldrion/Ignis2017", "Date": "2017-01-11T01:52:13Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((globalData.get(champion)) == null) { java.lang.System.out.println(champion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1349/buggy-version/ChampionSelectGUI.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "6a1c243502baa717a447be497abf782f38c6868a", "Url": "https://api.github.com/repos/Kevin-Chant/LoL-ChampionSelectGUI", "Date": "2015-10-20T04:58:31Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newRecipeNumber < (recipes.size())) { currentRecipe = recipes.get(newRecipeNumber); currentRecipeNumber = newRecipeNumber; }else { currentRecipe = recipes.get(0); currentRecipeNumber = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/1706/buggy-version/src.com.github.igotyou.FactoryMod.Factorys.ProductionFactory.java", "BodyUseAPI": ["java.util.List<com.github.igotyou.FactoryMod.recipes.ProductionRecipe>.get(int)", "java.util.List<com.github.igotyou.FactoryMod.recipes.ProductionRecipe>.get(int)"], "Fixed commit": "21e5b0dbc7f3816e36678567368ee60ca20a7a00", "Url": "https://api.github.com/repos/pruby/FactoryMod-1", "Date": "2013-05-14T15:10:50Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((isGpsAvailable) != null) && (isGpsAvailable.booleanValue())) { if (location.hasSpeed()) { resStr = unitUtils.speedToStr(location.getSpeed()); }else if ((((presenter.isTracking()) && ((presenter.getTrackSmoother()) != null)) && ((presenter.getTrackSmoother().getGeoPoints()) != null)) && ((presenter.getTrackSmoother().getGeoPoints().size()) > 1)) { java.util.ArrayList<android.location.Location> points = presenter.getTrackSmoother().getGeoPoints(); android.location.Location l = points.get(((points.size()) - 1)); if (l.hasSpeed()) resStr = \"~\" + (unitUtils.speedToStr(l.getSpeed())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V120/3899/buggy-version/app.src.main.java.com.kivsw.forjoggers.ui.map.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "a02a574871d7e9dfdc9abcf476fd4033856c6b79", "Url": "https://api.github.com/repos/IvanKovalchuk/forJoggers", "Date": "2016-05-20T07:48:42Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof wyc.stages.LocalVariable) { }else if (e instanceof wyc.stages.UnknownVariable) { e = resolve(((wyc.stages.UnknownVariable) (e)), environment, imports); }else if (e instanceof wyc.stages.NaryOp) { e = resolve(((wyc.stages.NaryOp) (e)), environment, imports); }else if (e instanceof wyc.stages.Comprehension) { e = resolve(((wyc.stages.Comprehension) (e)), environment, imports); }else if (e instanceof wyc.stages.BinOp) { e = resolve(((wyc.stages.BinOp) (e)), environment, imports); }else if (e instanceof wyc.stages.Convert) { e = resolve(((wyc.stages.Convert) (e)), environment, imports); }else if (e instanceof wyc.stages.ListAccess) { e = resolve(((wyc.stages.ListAccess) (e)), environment, imports); }else if (e instanceof wyc.stages.UnOp) { e = resolve(((wyc.stages.UnOp) (e)), environment, imports); }else if (e instanceof wyc.stages.Invoke) { e = resolve(((wyc.stages.Invoke) (e)), environment, imports); }else if (e instanceof wyc.stages.RecordAccess) { e = resolve(((wyc.stages.RecordAccess) (e)), environment, imports); }else if (e instanceof wyc.stages.RecordGen) { e = resolve(((wyc.stages.RecordGen) (e)), environment, imports); }else if (e instanceof wyc.stages.TupleGen) { e = resolve(((wyc.stages.TupleGen) (e)), environment, imports); }else if (e instanceof wyc.stages.DictionaryGen) { e = resolve(((wyc.stages.DictionaryGen) (e)), environment, imports); }else if (e instanceof wyc.stages.TypeConst) { e = resolve(((wyc.stages.TypeConst) (e)), environment, imports); }else if (e instanceof wyc.stages.FunConst) { e = resolve(((wyc.stages.FunConst) (e)), environment, imports); }else { syntaxError((\"unknown expression encountered: \" + (e.getClass().getName())), filename, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/142/buggy-version/src.wyc.stages.NameResolution.java", "BodyUseAPI": [], "Fixed commit": "1ef6fb58b4096efda543d0624e834bd55ef5d041", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-08-28T00:19:02Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((rpgsvg.MainGUI.team1.get(0).currenthealth) > 0) && ((rpgsvg.MainGUI.healthBarP1.getValue()) == 0)) rpgsvg.MainGUI.healthBarP1.setValue(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9173/buggy-version/src.rpgsvg.MainGUI.java", "BodyUseAPI": ["javax.swing.JProgressBar.setValue(int)"], "Fixed commit": "e48607c2910621dba21cb3639ce667bb6b24edb6", "Url": "https://api.github.com/repos/jgrayson676/RPG-SVG", "Date": "2014-01-13T16:58:25Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((rpgsvg.MainGUI.team2.get(0).currenthealth) > 0) && ((rpgsvg.MainGUI.healthBarP2.getValue()) == 0)) rpgsvg.MainGUI.healthBarP2.setValue(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9173/buggy-version/src.rpgsvg.MainGUI.java", "BodyUseAPI": ["javax.swing.JProgressBar.setValue(int)"], "Fixed commit": "e48607c2910621dba21cb3639ce667bb6b24edb6", "Url": "https://api.github.com/repos/jgrayson676/RPG-SVG", "Date": "2014-01-13T16:58:25Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gs.collections.impl.map.mutable.primitive.LongIntHashMap.getIfAbsent(long,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (edu.washington.escience.myria.storage.TupleUtils.tupleEquals(tb, key, row, data, keyColumns, index)) { return index; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2611/buggy-version/src.edu.washington.escience.myria.operator.UniqueTupleHashTable.java", "BodyUseAPI": [], "Fixed commit": "09256cdda33b2416caf50774fc666d8781500b70", "Url": "https://api.github.com/repos/uwescience/myria", "Date": "2017-05-05T01:09:36Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((m.find()) && (m.matches())) { argument = m.group(8); Person = m.group(1); sendPrivmsg(target, (((Person) + \" \") + argument)); }else { argument = m.group(6); Person = m.group(1); sendPrivmsg(target, (((Person) + \" \") + argument)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6737/buggy-version/src.Bot.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "d97694efa13ffdab1c4a98e7ed0913ea1d4f4c38", "Url": "https://api.github.com/repos/Inf3cti0us/IRCbot", "Date": "2013-07-07T17:58:18Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (color == (Launchpad.COLOR_OFF)) { setLedOff(column, row, owner); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2221/buggy-version/src.com.sinius15.launchpad.OwnedLaunchpad.java", "BodyUseAPI": [], "Fixed commit": "78cf91947a33e86fb8b799d11803204c4dc71e5c", "Url": "https://api.github.com/repos/Sinius15/Java-Launchpad-Library", "Date": "2014-10-09T16:43:00Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.myProject.isDefault())) { startupManager.registerStartupActivity(new java.lang.Runnable() { public void run() { org.zkoss.zkidea.project.ZKProjectsManager.this.doInit(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3924/buggy-version/src.org.zkoss.zkidea.project.ZKProjectsManager.java", "BodyUseAPI": [], "Fixed commit": "f6b5112172e185eb34e2713d9c14e92b4675d699", "Url": "https://api.github.com/repos/jumperchen/zkidea", "Date": "2017-07-19T10:14:25Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nVVFComponentIndex == 3) return mesh.nVertex; else throw new java.lang.RuntimeException(\"nVVFComponentIndex should be 1, 2 or 3\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2359/buggy-version/src.edu.uta.futureye.lib.element.FEQuadraticV_LinearP.java", "BodyUseAPI": [], "Fixed commit": "c3497e1b1d461334b60ff2cbfa6f11c400132c54", "Url": "https://api.github.com/repos/yuemingl/Futureye_JIT", "Date": "2017-02-20T09:52:17Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (beforeResetObject.isArray()) sendCommand(\"/firestep/reset\", beforeResetObject.getArray()); else sendCommand(\"/firestep/reset\", beforeResetObject.getObject());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6523/buggy-version/src.main.java.org.openpnp.machine.reference.driver.FireNodeJsDriver.java", "BodyUseAPI": ["com.mashape.unirest.http.JsonNode.getObject()", "org.openpnp.machine.reference.driver.FireNodeJsDriver.sendCommand(java.lang.String,beforeResetObject.getObject())", "com.mashape.unirest.http.JsonNode.getArray()", "org.openpnp.machine.reference.driver.FireNodeJsDriver.sendCommand(java.lang.String,beforeResetObject.getArray())"], "Fixed commit": "098c15638c157e1039a23a23da49543380f55784", "Url": "https://api.github.com/repos/exmachina-dev/openpnp", "Date": "2016-04-05T18:12:32Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object.isJsonNull()) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9278/buggy-version/src.main.java.pl.llp.aircasting.api.gson.MeasurementAdapter.java", "BodyUseAPI": [], "Fixed commit": "37f1316e82bbf911264828e6ba3f43b786104527", "Url": "https://api.github.com/repos/HabitatMap/AirCastingAndroidClient", "Date": "2014-07-29T11:22:12Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tokeniser.getTokenType()) == (com.itextpdf.text.pdf.PRTokeniser.TokenType.OTHER)) && (\"def\".equals(tokeniser.getStringValue()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5356/buggy-version/src.main.java.com.itextpdf.text.pdf.PdfContentParser.java", "BodyUseAPI": [], "Fixed commit": "2e336b76ea0c8bee8cfdeb3f77d37b435496b5b5", "Url": "https://api.github.com/repos/itext/itextpdf", "Date": "2012-03-29T09:20:51Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aksw.gerbil.transfer.nif.Document.getMarkings(java.lang.Class)", "java.util.List<org.aksw.gerbil.transfer.nif.data.NamedEntity>.indexOf(org.aksw.gerbil.transfer.nif.data.NamedEntity)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (i < (entities.size())) { org.aksw.gscheck.error.CombinedTaggingError.text1 = org.aksw.gscheck.error.CombinedTaggingError.text.substring(((entity.getStartPosition()) + (entity.getLength())), entities.get((i + 1)).getStartPosition()); if (org.aksw.gscheck.error.CombinedTaggingError.text1.equals(\"//s\")) { sb.append(org.aksw.gscheck.error.CombinedTaggingError.text.substring(entity.getStartPosition(), ((entities.get((i + 1)).getStartPosition()) + (entities.get((i + 1)).getLength())))); s = true; }else { s = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2238/buggy-version/src.main.java.org.aksw.gscheck.error.CombinedTaggingError.java", "BodyUseAPI": ["java.util.List<org.aksw.gerbil.transfer.nif.data.NamedEntity>.get(int)", "java.lang.String.substring(entity.getStartPosition(),((entities.get((i + 1)).getStartPosition()) + (entities.get((i + 1)).getLength())))", "java.lang.StringBuffer.append(java.lang.String)", "entities.get((i + 1)).getStartPosition()", "java.util.List<org.aksw.gerbil.transfer.nif.data.NamedEntity>.get(int)", "java.lang.String.substring(((entity.getStartPosition()) + (entity.getLength())),entities.get((i + 1)).getStartPosition())", "entities.get((i + 1)).getLength()", "entities.get((i + 1)).getStartPosition()", "java.util.List<org.aksw.gerbil.transfer.nif.data.NamedEntity>.get(int)"], "Fixed commit": "b8c456909407cf09403e4a75fe34d07d7d529f3e", "Url": "https://api.github.com/repos/dice-group/Eaglet", "Date": "2016-02-03T15:50:46Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == true) { result.add(sb.toString()); sb.delete(0, sb.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2238/buggy-version/src.main.java.org.aksw.gscheck.error.CombinedTaggingError.java", "BodyUseAPI": [], "Fixed commit": "b8c456909407cf09403e4a75fe34d07d7d529f3e", "Url": "https://api.github.com/repos/dice-group/Eaglet", "Date": "2016-02-03T15:50:46Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.PlatformUI.getWorkbench().getEditorRegistry().getEditors(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((ids == null) || ((ids.length) == 0)) { ids = new org.eclipse.ui.IEditorDescriptor[]{ org.eclipse.ui.PlatformUI.getWorkbench().getEditorRegistry().getDefaultEditor(\"bla.txt\") }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5439/buggy-version/src.org.rascalmpl.eclipse.editor.EditorUtil.java", "BodyUseAPI": [], "Fixed commit": "24a30a46eef71338c8fa6280a276aeb31ebd9f5f", "Url": "https://api.github.com/repos/usethesource/rascal-eclipse", "Date": "2015-01-18T21:07:58Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((text == null) || (text.isEmpty())) text = not.tickerText.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2649/buggy-version/src.net.screenfreeze.deskcon.NotificationUtils.java", "BodyUseAPI": [], "Fixed commit": "a973c530f87e1789d2e91acb522ab89fdebccb58", "Url": "https://api.github.com/repos/MK-42/deskcon-android", "Date": "2015-10-19T16:49:28Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doMerge) merge(MergeTo.NEAREST_EDGE, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2125/buggy-version/src.org.nschmidt.ldparteditor.data.VM22TJunctionFixer.java", "BodyUseAPI": [], "Fixed commit": "a918f366f7f8c9d64ac0ac59bd991bff8968d12c", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-30T10:44:30Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (articles.containsKey(profile)) { articles.get(profile).addAll(articleList); }else { articles.put(profile, articleList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2497/buggy-version/ClippingGorilla.src.main.java.dhbw.clippinggorilla.objects.clipping.Clipping.java", "BodyUseAPI": ["java.util.HashMap<dhbw.clippinggorilla.objects.interestprofile.InterestProfile, java.util.LinkedHashSet<dhbw.clippinggorilla.objects.article.Article>>.put(dhbw.clippinggorilla.objects.interestprofile.InterestProfile,java.util.LinkedHashSet<dhbw.clippinggorilla.objects.article.Article>)", "articles.get(profile).addAll(java.util.LinkedHashSet<dhbw.clippinggorilla.objects.article.Article>)", "java.util.HashMap<dhbw.clippinggorilla.objects.interestprofile.InterestProfile, java.util.LinkedHashSet<dhbw.clippinggorilla.objects.article.Article>>.get(dhbw.clippinggorilla.objects.interestprofile.InterestProfile)"], "Fixed commit": "b76535eaeeecaf19a2fee622e9cc6f14e74ab55b", "Url": "https://api.github.com/repos/ClippingGorilla/ClippingGorilla", "Date": "2017-05-13T12:19:35Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (articlesFromGroup.containsKey(profile)) { articlesFromGroup.get(profile).addAll(articleList); }else { articlesFromGroup.put(profile, articleList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2497/buggy-version/ClippingGorilla.src.main.java.dhbw.clippinggorilla.objects.clipping.Clipping.java", "BodyUseAPI": ["articlesFromGroup.get(profile).addAll(java.util.LinkedHashSet<dhbw.clippinggorilla.objects.article.Article>)", "java.util.HashMap<dhbw.clippinggorilla.objects.group.GroupInterestProfile, java.util.LinkedHashSet<dhbw.clippinggorilla.objects.article.Article>>.put(dhbw.clippinggorilla.objects.group.GroupInterestProfile,java.util.LinkedHashSet<dhbw.clippinggorilla.objects.article.Article>)", "java.util.HashMap<dhbw.clippinggorilla.objects.group.GroupInterestProfile, java.util.LinkedHashSet<dhbw.clippinggorilla.objects.article.Article>>.get(dhbw.clippinggorilla.objects.group.GroupInterestProfile)"], "Fixed commit": "b76535eaeeecaf19a2fee622e9cc6f14e74ab55b", "Url": "https://api.github.com/repos/ClippingGorilla/ClippingGorilla", "Date": "2017-05-13T12:19:35Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (notifications != null) { this.dataSource.addAll(notifications); this.adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/131/buggy-version/app.src.main.java.br.edu.ifce.swappers.swappers.fragments.principal.NotificationsFragment.java", "BodyUseAPI": ["java.util.ArrayList<br.edu.ifce.swappers.swappers.model.Notification>.addAll(java.util.ArrayList<br.edu.ifce.swappers.swappers.model.Notification>)"], "Fixed commit": "6532d93705d64a647d998bc93fabad4999664986", "Url": "https://api.github.com/repos/francisceioseph/Swappers", "Date": "2016-03-26T14:29:11Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiFile.getVirtualFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (virtualFile == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6004/buggy-version/src.ru.eaze.domain.EazeProjectStructure.java", "BodyUseAPI": [], "Fixed commit": "40c66c02deffc238faf0778d854f4269a15110c2", "Url": "https://api.github.com/repos/hrefr/eazestorm", "Date": "2013-09-29T21:39:49Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduleInfo.getReoccurrence()) == 1) return msg;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5792/buggy-version/vipr-portal.StorageAPI.src.java.com.emc.sa.api.ScheduledEventService.java", "BodyUseAPI": [], "Fixed commit": "daffbeed5e5167a77cf9aa28d32c370e17ba190b", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-09-27T13:59:18Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((node.getLeft().getType()) instanceof com.d401f17.Visitors.CodeGenerator.CharType) || ((node.getRight().getType()) instanceof com.d401f17.Visitors.CodeGenerator.CharType)) { }else { mv.visitTypeInsn(com.d401f17.Visitors.CodeGenerator.NEW, \"java/lang/StringBuilder\"); mv.visitInsn(com.d401f17.Visitors.CodeGenerator.DUP); node.getLeft().accept(this); mv.visitMethodInsn(com.d401f17.Visitors.CodeGenerator.INVOKESPECIAL, \"java/lang/StringBuilder\", \"<init>\", \"(Ljava/lang/String;)V\", false); node.getRight().accept(this); mv.visitMethodInsn(com.d401f17.Visitors.CodeGenerator.INVOKEVIRTUAL, \"java/lang/StringBuilder\", \"append\", \"(Ljava/lang/String;)Ljava/lang/StringBuilder;\", false); mv.visitMethodInsn(com.d401f17.Visitors.CodeGenerator.INVOKEVIRTUAL, \"java/lang/Object\", \"toString\", \"()Ljava/lang/String;\", false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7144/buggy-version/TeshCompiler.src.com.d401f17.Visitors.CodeGenerator.ByteCodeVisitor.java", "BodyUseAPI": ["com.d401f17.Visitors.CodeGenerator.AdditionNode.getLeft()", "node.getRight().accept(com.d401f17.Visitors.CodeGenerator.ByteCodeVisitor)", "node.getLeft().accept(com.d401f17.Visitors.CodeGenerator.ByteCodeVisitor)", "com.d401f17.Visitors.CodeGenerator.AdditionNode.getRight()"], "Fixed commit": "ad6aadb516a7b3c3e00f09101f47d298d0f64b9a", "Url": "https://api.github.com/repos/hrjakobsen/BetterBash", "Date": "2017-05-25T10:02:47Z"},
{"Line": "=>1336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!skip) types.add(new com.d401f17.Visitors.CodeGenerator.OkType());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7144/buggy-version/TeshCompiler.src.com.d401f17.Visitors.CodeGenerator.ByteCodeVisitor.java", "BodyUseAPI": [], "Fixed commit": "ad6aadb516a7b3c3e00f09101f47d298d0f64b9a", "Url": "https://api.github.com/repos/hrjakobsen/BetterBash", "Date": "2017-05-25T10:02:47Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mods.length()) == 0) { player.sendMessage(ModTRSMessage.noModerators); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2725/buggy-version/src.yetanotherx.bukkitplugin.ModTRS.command.ModlistCommand.java", "BodyUseAPI": [], "Fixed commit": "91a183b6582152505a009b8f26b16752d0c4e7b8", "Url": "https://api.github.com/repos/yetanotherx/ModTRS", "Date": "2011-04-09T18:32:29Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((text != null) && ((text.length()) > 0)) { int textHeight = ((int) ((mTextPaint.descent()) + (mTextPaint.ascent()))); iconCanvas.drawText(text, ((mTextAnchorU) * (finalIcon.getWidth())), (((mTextAnchorV) * (finalIcon.getHeight())) - (textHeight / 2)), mTextPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6116/buggy-version/app.src.main.java.de.k3b.android.osmdroid.IconFactory.java", "BodyUseAPI": ["android.graphics.Canvas.drawText(java.lang.String,((mTextAnchorU) * (finalIcon.getWidth())),(((mTextAnchorV) * (finalIcon.getHeight())) - (textHeight / 2)),android.graphics.Paint)"], "Fixed commit": "8db9a2dee359b0651fbc4fcc1469d92d3ce52ea5", "Url": "https://api.github.com/repos/k3b/APhotoManager", "Date": "2017-04-19T05:27:03Z"},
{"Line": "=>763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.postcondition().size()) > 0) { return c.postcondition().get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7955/buggy-version/modules.wyil.src.wyil.builders.VcTransformer.java", "BodyUseAPI": ["c.postcondition().get(int)", "WyilFile.Case.postcondition()"], "Fixed commit": "f0127c016ead352680a917b0b327cb66ebff1e73", "Url": "https://api.github.com/repos/hjwylde/whiley-compiler", "Date": "2014-04-08T00:19:37Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((currentDisplay.length()) > 2) { currentDisplay = currentDisplay.substring(0, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9149/buggy-version/src.screenstudio.sources.Screen.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "31b24c1acdb20e6774ae6dd86715d3cece417dc3", "Url": "https://api.github.com/repos/patrickballeux/screenstudio", "Date": "2016-06-30T00:38:24Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userFeedback.equals(\"\")) { userFeedback += storage.done(id, setDone); }else { userFeedback += \"\\n\" + (storage.done(id, setDone)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2644/buggy-version/CS2103_gtd.src.DoneCommand.java", "BodyUseAPI": [], "Fixed commit": "c518cf1fa49359cb5fdc545b20357d2fd955b4f8", "Url": "https://api.github.com/repos/cs2103jan2015-t15-1j/main", "Date": "2015-03-26T06:00:19Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != exportFontConfig) { exportFontConfigService.delete(exportFontConfig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6547/buggy-version/igamt-lite-controller.src.main.java.gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.controller.ExportConfigController.java", "BodyUseAPI": ["gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.ExportFontConfigService.delete(gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.ExportFontConfig)"], "Fixed commit": "58bdbf1bada53d8597e48cfc3975eec5a4b4afc7", "Url": "https://api.github.com/repos/haffonist/igamt", "Date": "2017-03-02T16:09:22Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((resource) == null) || ((target) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7694/buggy-version/src.main.java.org.concordion.ext.storyboard.StoryboardListener.java", "BodyUseAPI": [], "Fixed commit": "ca29a734c2c7030dde3a5d10cf4da4003ef974ab", "Url": "https://api.github.com/repos/concordion/concordion-storyboard-extension", "Date": "2015-11-10T19:41:49Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (currentID != null) ids.add(currentID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7106/buggy-version/uk.ac.diamond.scisoft.analysis.rcp.src.uk.ac.diamond.scisoft.analysis.rcp.plotting.Plotting2DUI.java", "BodyUseAPI": ["java.util.Set<java.util.UUID>.add(java.util.UUID)"], "Fixed commit": "f909c4956f6d6dd9cf4c88d5663a417f0f138ca8", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2014-01-10T16:42:35Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userHaveCars()) { setContentView(R.layout.activity_car_settings); initHaveNoCar(); setListenersHaveNoCar(); }else android.util.Log.d(\"User have\", \"Car\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3482/buggy-version/app.src.main.java.com.example.celien.drivemycar.core.CarSettings.java", "BodyUseAPI": [], "Fixed commit": "816da9eb5035f3e08b4aab23549ca952c75e039c", "Url": "https://api.github.com/repos/Mornor/Android_DMC", "Date": "2015-03-04T11:01:59Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p instanceof org.itxtech.synapseapi.SynapsePlayer) { sp = ((org.itxtech.synapseapi.SynapsePlayer) (p)); sPlayer = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5310/buggy-version/src.main.java.synapse.transfer.SynapseTransfer.java", "BodyUseAPI": [], "Fixed commit": "7102df221852773d491377c7784b9d7d208d08df", "Url": "https://api.github.com/repos/SupremeMortal/SynapseTransfer", "Date": "2016-10-29T10:26:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["result[i].get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (outcome.asString().equals(\"failed\")) throw new java.lang.RuntimeException((\"Operation failed:\" + (result[i].asString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8929/buggy-version/src.main.java.com.redhat.jcliff.Configurable.java", "BodyUseAPI": [], "Fixed commit": "07890ecaeb97d64dc639f67a25be82be27df8dc7", "Url": "https://api.github.com/repos/bserdar/jcliff", "Date": "2013-12-11T15:34:09Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (predicate instanceof seedu.address.model.module.predicates.FavouriteListPredicate) { seedu.address.commons.core.EventsCenter.getInstance().post(new seedu.address.commons.events.ui.ViewedLessonEvent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4098/buggy-version/src.main.java.seedu.address.logic.commands.ListCommand.java", "BodyUseAPI": [], "Fixed commit": "9ce2cef25eb04e81393127e8418d307931faedab", "Url": "https://api.github.com/repos/cctdaniel/addressbook-level4", "Date": "2017-10-25T03:56:56Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token.matches(\"0+\")) { isWord = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8971/buggy-version/languagetool-core.src.main.java.org.languagetool.rules.WordRepeatRule.java", "BodyUseAPI": [], "Fixed commit": "9d677ada28aca708f315ded3596715015f55fc5c", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2015-08-06T18:52:27Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cardId == alreadyOpenedCard) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8201/buggy-version/src.com.hariharaknarayanan.MemoryGame.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "3643a7b11a4c84db3d70c496d10f0b681038b20b", "Url": "https://api.github.com/repos/hhk1989/MemoryGameApp", "Date": "2014-01-18T15:29:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (fragment != null) { tab.select(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4617/buggy-version/src.org.monospace.smsfilter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5a569f9a3c8c5c671fc835eb08ceb1203483b404", "Url": "https://api.github.com/repos/rhgb/SMSFilter", "Date": "2013-08-03T04:58:57Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (equals(other)) { return 0; }else if (this.geneticAlgorithm.getCalculateScore().shouldMinimize()) { if ((getScore()) > (other.getScore())) { return 1; } return -1; }else { if ((getScore()) > (other.getScore())) { return -1; } return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5817/buggy-version/src.main.java.org.encog.ml.genetic.genome.BasicGenome.java", "BodyUseAPI": ["org.encog.ml.genetic.genome.Genome.getScore()", "org.encog.ml.genetic.genome.Genome.getScore()"], "Fixed commit": "8afa07fd1936326ca9f8d46dae7b4ee8c2dd4526", "Url": "https://api.github.com/repos/encog/encog-java-core", "Date": "2011-07-29T02:28:00Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row_count) == 0) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5338/buggy-version/rtcharts-swing.src.main.java.org.thingml.rtcharts.swing.DataBuffer.java", "BodyUseAPI": [], "Fixed commit": "d76a6fed79221171b713afe2ebafcfba5d9f366a", "Url": "https://api.github.com/repos/SINTEF-9012/rtcharts", "Date": "2013-01-29T16:03:11Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["timeBundles.get(0).getCalendar()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (myCal == null) { java.lang.System.out.println((\"convertion error: \" + input)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1924/buggy-version/time_Extraction.main.java", "BodyUseAPI": [], "Fixed commit": "16c313019b29b46b322a80d7ece5c57078ac5477", "Url": "https://api.github.com/repos/kailun-wu/TimeExtraction", "Date": "2015-05-07T02:54:42Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leadPlayer == (-1)) { mLivePlayers.clear(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4849/buggy-version/gameofwar.src.main.java.gameofwar.War.java", "BodyUseAPI": [], "Fixed commit": "4005ccdcae4fe8194166c4877d596a6eb71b1f8a", "Url": "https://api.github.com/repos/ntekchandani/gameofwar", "Date": "2016-05-31T17:08:04Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mLivePlayers.size()) == 0) { java.lang.System.out.println(\"NO ONE WINS!\"); }else { java.lang.System.out.println(((\"Player \" + (mLivePlayers.iterator().next())) + \" WINS THE GAME!!!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4849/buggy-version/gameofwar.src.main.java.gameofwar.War.java", "BodyUseAPI": ["java.util.TreeSet<java.lang.Integer>.iterator()", "java.util.Iterator<java.lang.Integer>.next()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "4005ccdcae4fe8194166c4877d596a6eb71b1f8a", "Url": "https://api.github.com/repos/ntekchandani/gameofwar", "Date": "2016-05-31T17:08:04Z"},
{"Line": "=>1181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.getParentOfType(net.masterthought.dlanguage.psi.impl.DLanguageAutoDeclarationY,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((parent.getParent()) instanceof net.masterthought.dlanguage.psi.impl.DLanguageDeclarationStatement) { storageClasses = ((net.masterthought.dlanguage.psi.impl.DLanguageDeclarationStatement) (parent.getParent())).getStorageClasses(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2829/buggy-version/src.main.java.net.masterthought.dlanguage.psi.impl.DPsiImplUtil.java", "BodyUseAPI": ["net.masterthought.dlanguage.psi.impl.DLanguageDeclaration.getParent()", "((net.masterthought.dlanguage.psi.impl.DLanguageDeclarationStatement) (parent.getParent())).getStorageClasses()"], "Fixed commit": "b997548cb2082a8d2dd890d26ac8429d21785362", "Url": "https://api.github.com/repos/intellij-dlanguage/intellij-dlanguage", "Date": "2017-06-17T18:42:03Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(memberUuid.isEmpty())) { java.util.UUID uuid = java.util.UUID.fromString(memberUuid); if (org.spongepowered.api.Sponge.getServer().getPlayer(uuid).isPresent()) { org.spongepowered.api.Sponge.getServer().getPlayer(uuid).get().sendMessage(org.spongepowered.api.text.Text.of(TextColors.GREEN, \"[Polis]: \", TextColors.GOLD, \"Your Polis has been deleted!\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8414/buggy-version/src.main.java.io.github.hsyyid.polis.utils.ConfigManager.java", "BodyUseAPI": ["java.util.UUID.fromString(java.lang.String)"], "Fixed commit": "303259eb43daeb6417f9cb4fa62e053b00e19907", "Url": "https://api.github.com/repos/hsyyid/Polis", "Date": "2016-03-26T02:11:37Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cellAdapter) != null) { for (int r = 0; r < rows; r++) { for (int c = 0; c < columns; c++) { setCell(r, c, new double[cellAdapter.getPropertyCount()]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5353/buggy-version/gitools-core.src.main.java.org.gitools.matrix.model.ObjectMatrix.java", "BodyUseAPI": [], "Fixed commit": "79a87007bceb2506d8a9162ed92108264dc0de93", "Url": "https://api.github.com/repos/gitools/gitools", "Date": "2012-07-18T08:24:59Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((useWrapper) == null) useWrapper = java.lang.Boolean.FALSE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/415/buggy-version/src.main.java.com.g2one.hudson.grails.GrailsBuilder.java", "BodyUseAPI": [], "Fixed commit": "9236327cd1096b6ca821270fdd7ee931a44c8efb", "Url": "https://api.github.com/repos/jenkinsci/grails-plugin", "Date": "2012-05-18T02:18:03Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.Boolean) { return ((java.lang.Boolean) (value)) ? \"1\" : \"0\"; }else { return value.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5967/buggy-version/src.com.roscopeco.ormdroid.NumericTypeMapping.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "ef5178b6631bdc426d3a9d128de9e1df286e0500", "Url": "https://api.github.com/repos/roscopeco/ormdroid", "Date": "2012-12-19T02:08:41Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expectedType.equals(java.lang.Boolean.class)) || (expectedType.equals(boolean.class))) { int i = c.getInt(columnIndex); return i == 0 ? false : true; }else { return c.getInt(columnIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5967/buggy-version/src.com.roscopeco.ormdroid.NumericTypeMapping.java", "BodyUseAPI": [], "Fixed commit": "ef5178b6631bdc426d3a9d128de9e1df286e0500", "Url": "https://api.github.com/repos/roscopeco/ormdroid", "Date": "2012-12-19T02:08:41Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getSelectedSongs().isEmpty()) { selectAll(true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6837/buggy-version/src.github.daneren2005.dsub.fragments.SelectDirectoryFragment.java", "BodyUseAPI": [], "Fixed commit": "d6b422d63993314d6e4f5fc8823e21254512fcee", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2013-12-21T03:50:30Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plans.size()) == 1) { p.setScore = 1; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2971/buggy-version/source.GameMap.java", "BodyUseAPI": [], "Fixed commit": "fcc774619c681e114cc4023a6a39ecdba6611925", "Url": "https://api.github.com/repos/N33t/WallE", "Date": "2016-04-12T15:53:22Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.web.rest.AssetRecordResource.getAssetRecord(org.opennms.netmgt.model.OnmsNode)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((assetRecord.getGeolocation()) == null) { assetRecord.setGeolocation(new org.opennms.netmgt.model.OnmsGeolocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2819/buggy-version/opennms-webapp.src.main.java.org.opennms.web.rest.AssetRecordResource.java", "BodyUseAPI": ["org.opennms.netmgt.model.OnmsAssetRecord.setGeolocation(org.opennms.netmgt.model.OnmsGeolocation)"], "Fixed commit": "3df500fc893dd0cb5d4472fee3ed7e333bcb328b", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2015-04-04T01:45:23Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.netmgt.dao.api.NodeDao.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((node.getAssetRecord().getGeolocation()) == null) { node.getAssetRecord().setGeolocation(new org.opennms.netmgt.model.OnmsGeolocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2819/buggy-version/opennms-webapp.src.main.java.org.opennms.web.rest.NodeRestService.java", "BodyUseAPI": ["org.opennms.netmgt.model.OnmsNode.getAssetRecord()", "node.getAssetRecord().setGeolocation(org.opennms.netmgt.model.OnmsGeolocation)"], "Fixed commit": "3df500fc893dd0cb5d4472fee3ed7e333bcb328b", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2015-04-04T01:45:23Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (perso.getAccount().getGameClient().getActions().containsKey(GA.getId())) perso.getAccount().getGameClient().getActions().remove(GA.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5925/buggy-version/emulator.src.now.org.ancestra.evolutive.map.Case.java", "BodyUseAPI": ["perso.getAccount().getGameClient().getActions().remove(GA.getId())", "org.ancestra.evolutive.client.Player.getAccount()", "org.ancestra.evolutive.game.GameAction.getId()", "perso.getAccount().getGameClient().getActions()", "perso.getAccount().getGameClient()"], "Fixed commit": "58803b57e583e37447434e98844ed864de2a7c2e", "Url": "https://api.github.com/repos/F-Locos/Ancestra-Evolutive", "Date": "2014-06-27T15:51:35Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.vfs.VirtualFile.relativePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(path.contains(RythmPlugin.R_VIEW_ROOT))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/292/buggy-version/src.com.greenlaw110.rythm.play.RythmTemplateLoader.java", "BodyUseAPI": [], "Fixed commit": "b656ddda9b6918b17a66020af5b22bef78068734", "Url": "https://api.github.com/repos/greenlaw110/play-rythm", "Date": "2012-04-17T04:29:34Z"},
{"Line": "=>1446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.contains(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (win8) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8258/buggy-version/commons-eid-client.src.main.java.be.fedict.commons.eid.client.BeIDCard.java", "BodyUseAPI": [], "Fixed commit": "39af94b0ffb2fc8be416f38e2acda96f779b758c", "Url": "https://api.github.com/repos/e-Contract/commons-eid", "Date": "2015-09-04T15:56:24Z"},
{"Line": "=>1450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.contains(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (win10) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8258/buggy-version/commons-eid-client.src.main.java.be.fedict.commons.eid.client.BeIDCard.java", "BodyUseAPI": [], "Fixed commit": "39af94b0ffb2fc8be416f38e2acda96f779b758c", "Url": "https://api.github.com/repos/e-Contract/commons-eid", "Date": "2015-09-04T15:56:24Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (route.getPathExpression().equals(\"/\")) { s.append(\"/\"); }else { java.lang.String[] pathElements = route.getPathExpression().split(\"/\"); for (java.lang.String pathElement : pathElements) { if ((pathElement.length()) > 0) { s.append(\"/\"); if (pathElement.startsWith(\":\")) { s.append(\"(\\\\w+)\"); parameters.add(new net.openvision.tools.restlight.PatternRoutes.Parameter(pathElement.substring(1))); }else { s.append(pathElement); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2263/buggy-version/src.net.openvision.tools.restlight.PatternRoutes.java", "BodyUseAPI": ["net.openvision.tools.restlight.Route.getPathExpression()", "route.getPathExpression().split(java.lang.String)"], "Fixed commit": "13ab659cb6b6a1f7837666f786a9cce45dc16ffc", "Url": "https://api.github.com/repos/widmoser/restlight", "Date": "2013-12-29T19:06:18Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentPhotoPath) != null) outState.putString(\"PhotoPath\", mCurrentPhotoPath);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5232/buggy-version/app.src.main.java.com.apps.inen.cameraapp.AddActivity.java", "BodyUseAPI": [], "Fixed commit": "80490073b40a9bb72787e608504c36668b147745", "Url": "https://api.github.com/repos/Inen/CameraApp", "Date": "2015-10-13T07:19:27Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 16) { btnBgSelector.setBackground(selectorBackgroundColor(this, getResources().getColor(R.color.blue), getResources().getColor(R.color.orange))); }else { btnBgSelector.setBackgroundDrawable(selectorBackgroundColor(this, getResources().getColor(R.color.blue), getResources().getColor(R.color.orange))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1178/buggy-version/app.src.main.java.com.takeoffandroid.selectorview.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ae6eb1f68c2473a63f51353014d3bafbe37e8845", "Url": "https://api.github.com/repos/TakeoffAndroid/SelectorViewDrawable", "Date": "2015-07-19T05:37:51Z"},
{"Line": "=>768", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pb instanceof de.lmu.ifi.bio.watchdog.processblocks.ProcessReturnValueAdder) { pb = ((de.lmu.ifi.bio.watchdog.processblocks.ProcessBlock) (((de.lmu.ifi.bio.watchdog.processblocks.ProcessReturnValueAdder) (pb)).clone())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/171/buggy-version/java_source.de.lmu.ifi.bio.watchdog.xmlParser.XMLParser.java", "BodyUseAPI": [], "Fixed commit": "f03b5c5c8e2379b962337c2ad199c1f8c387e992", "Url": "https://api.github.com/repos/klugem/watchdog", "Date": "2017-12-04T15:43:44Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getEquipment()) != null) { for (com.example.beajo.choremanager2.model.Item i : t.getEquipment()) { items.add(i.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4817/buggy-version/app.src.main.java.com.example.beajo.choremanager2.views.TaskIndividualActivity.java", "BodyUseAPI": ["com.example.beajo.choremanager2.model.TaskItem.getEquipment()"], "Fixed commit": "3d05c8680eb0c28c9255f75078523e2344e1984e", "Url": "https://api.github.com/repos/Beatrice084/ChoreManager", "Date": "2017-11-30T20:23:14Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getEquipment()) != null) { for (com.example.beajo.choremanager2.model.Item i : task.getEquipment()) { itemB.add(i.getName()); adapterB.notifyDataSetChanged(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4817/buggy-version/app.src.main.java.com.example.beajo.choremanager2.views.NewTaskActivity.java", "BodyUseAPI": ["com.example.beajo.choremanager2.model.TaskItem.getEquipment()"], "Fixed commit": "3d05c8680eb0c28c9255f75078523e2344e1984e", "Url": "https://api.github.com/repos/Beatrice084/ChoreManager", "Date": "2017-11-30T20:23:14Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((actualPosClicked[1]) < 0) || ((actualPosClicked[1]) > (model.getNumx()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1950/buggy-version/ClipsMonitorCore.src.org.clipsmonitor.gui.MapGeneratorTopComponent.java", "BodyUseAPI": [], "Fixed commit": "60e0d3312ce5df1dcfc5427a9576c88c84563fab", "Url": "https://api.github.com/repos/Chosko/ClipsMonitor", "Date": "2016-09-13T20:05:22Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((actualPosClicked[0]) < 0) || ((actualPosClicked[0]) > (model.getNumx()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1950/buggy-version/ClipsMonitorCore.src.org.clipsmonitor.gui.MapGeneratorTopComponent.java", "BodyUseAPI": [], "Fixed commit": "60e0d3312ce5df1dcfc5427a9576c88c84563fab", "Url": "https://api.github.com/repos/Chosko/ClipsMonitor", "Date": "2016-09-13T20:05:22Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaPlayerSetup) != null) mediaPlayerSetup.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5334/buggy-version/src.com.frankandrobot.reminderer.alarm.AlarmRingerService.java", "BodyUseAPI": [], "Fixed commit": "1f5d552521d0994d5dddcd299a339d8195c83a95", "Url": "https://api.github.com/repos/frankandrobot/Reminderer", "Date": "2013-11-03T23:49:21Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["caldroidFragment.getDatePagerAdapters().get(0).getStartSelectedDate()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (startSelectedDate != null) startCalendar.setTimeInMillis(startSelectedDate.getMilliseconds(java.util.TimeZone.getDefault()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1265/buggy-version/caldroidSampleActivity.src.main.java.com.caldroidsample.CaldroidSampleActivity.java", "BodyUseAPI": ["java.util.Calendar.setTimeInMillis(startSelectedDate.getMilliseconds(java.util.TimeZone.getDefault()))", "com.hirondelle.date4j.DateTime.getMilliseconds(java.util.TimeZone)"], "Fixed commit": "76912ee1f3689d3e78041a5c933752cdf1ce34ee", "Url": "https://api.github.com/repos/amorenew/Caldroid", "Date": "2017-02-19T09:36:57Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["caldroidFragment.getDatePagerAdapters().get(0).getEndSelectedDate()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (endSelectedDate != null) endCalendar.setTimeInMillis(endSelectedDate.getMilliseconds(java.util.TimeZone.getDefault()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1265/buggy-version/caldroidSampleActivity.src.main.java.com.caldroidsample.CaldroidSampleActivity.java", "BodyUseAPI": ["com.hirondelle.date4j.DateTime.getMilliseconds(java.util.TimeZone)", "java.util.Calendar.setTimeInMillis(endSelectedDate.getMilliseconds(java.util.TimeZone.getDefault()))"], "Fixed commit": "76912ee1f3689d3e78041a5c933752cdf1ce34ee", "Url": "https://api.github.com/repos/amorenew/Caldroid", "Date": "2017-02-19T09:36:57Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(customSerializers.containsKey(encodingType))) { customSerializers.put(encodingType, serializer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1617/buggy-version/SensorThingsServer.Core.src.main.java.de.fraunhofer.iosb.ilt.sta.serialize.custom.CustomSerializationManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, de.fraunhofer.iosb.ilt.sta.serialize.custom.CustomSerializer>.put(java.lang.String,de.fraunhofer.iosb.ilt.sta.serialize.custom.CustomSerializer)"], "Fixed commit": "e607d675b29fe13542b694c1d5c7a934f0e06946", "Url": "https://api.github.com/repos/FraunhoferIOSB/FROST-Server", "Date": "2016-07-28T14:33:51Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((moves5.size()) > 0) { returnMove = moves5.get(gen.nextInt(moves5.size())); }else { returnMove = moves.get(gen.nextInt(moves.size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7934/buggy-version/cc2.g9.Player.java", "BodyUseAPI": ["java.util.ArrayList<cc2.sim.Move>.size()", "java.util.ArrayList<cc2.sim.Move>.get(int)", "java.util.Random.nextInt(moves5.size())"], "Fixed commit": "b7b41e06e1ff2740a6ea0495c42b21e6c97ab507", "Url": "https://api.github.com/repos/tingtingtwice/Cookie_Cutter_Grp9", "Date": "2015-11-09T06:03:23Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["blobPS.getMap().getGrid().getAreaWithPoint(com.google.android.gms.maps.model.LatLng)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tappedArea.getGroundOverlay()) != null) { tappedArea.removeGroundOverlay(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4082/buggy-version/src.ps.blob.blobps.android.MapsActivity.java", "BodyUseAPI": ["ps.blob.blobps.Map.Area.removeGroundOverlay()"], "Fixed commit": "2fb911290f66e3d89f6ba9a38af80f56e45124e0", "Url": "https://api.github.com/repos/OJ7/BlobPS", "Date": "2014-12-15T07:05:22Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.esbjon.inventories.Teammate.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (inventory != null) { if ((inventory.getLevel()) instanceof com.esbjon.UI.BarLevelSquad) { if ((inventory.getLevel()) != (this.getRefLevel())) { return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7725/buggy-version/core.src.com.esbjon.UI.BarSlotCollectible.java", "BodyUseAPI": ["com.esbjon.inventories.TeamInventory.getLevel()", "com.esbjon.inventories.TeamInventory.getLevel()"], "Fixed commit": "5592157fff96fe3bfcd38e9ba9d44d4245959979", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2017-12-08T17:24:37Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cop.containsNaN()) { cop.setToZero(soleFrame); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4296/buggy-version/CommonWalkingControlModules.src.us.ihmc.commonWalkingControlModules.controlModules.foot.HoldPositionState.java", "BodyUseAPI": ["us.ihmc.robotics.geometry.FramePoint2d.setToZero(us.ihmc.robotics.referenceFrames.ReferenceFrame)"], "Fixed commit": "2055d00cc03a808970f0e84beeb66f10b29acb4f", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2016-05-24T16:28:28Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((++count) > 100000) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2713/buggy-version/src.main.java.com.hljunlp.laozhongyi.Laozhongyi.java", "BodyUseAPI": [], "Fixed commit": "cb54b3509b132ed5affb15c793f592c4da1669bb", "Url": "https://api.github.com/repos/chncwang/laozhongyi", "Date": "2017-08-17T13:34:31Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(de)) < 1.0E-4) { return originalIndex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2713/buggy-version/src.main.java.com.hljunlp.laozhongyi.strategy.TraiditionalSimulatedAnnealingStrategy.java", "BodyUseAPI": [], "Fixed commit": "cb54b3509b132ed5affb15c793f592c4da1669bb", "Url": "https://api.github.com/repos/chncwang/laozhongyi", "Date": "2017-08-17T13:34:31Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(url.getPath().equals(newUrl.getPath()))) { content = content.replaceFirst(newUrl.getPath(), url.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/368/buggy-version/src.wms.src.main.java.org.geoserver.wms.capabilities.Capabilities_1_3_0_Transformer.java", "BodyUseAPI": ["java.net.URL.getPath()", "java.net.URL.getPath()", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "21aa4c8b018fa0ee0aa4bb04a41211ed893581b6", "Url": "https://api.github.com/repos/mike-es/geoserver", "Date": "2012-07-10T22:12:50Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((m_Connection) != null) && (m_Connection.isConnected())) { m_Connection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5547/buggy-version/src.main.java.net.wimpi.modbus.io.ModbusTCPTransaction.java", "BodyUseAPI": ["net.wimpi.modbus.net.TCPMasterConnection.close()"], "Fixed commit": "688945496b8500759eb89e915b5121677144c704", "Url": "https://api.github.com/repos/openhab/jamod", "Date": "2015-10-02T06:06:45Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input instanceof java.io.InputStream) { entity = new org.apache.http.entity.InputStreamEntity(((java.io.InputStream) (input)), org.apache.http.entity.ContentType.DEFAULT_BINARY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4330/buggy-version/src.main.java.com.clickntap.vimeo.Vimeo.java", "BodyUseAPI": [], "Fixed commit": "8f9b34542259d50e63bf47828bdd9d5086832c82", "Url": "https://api.github.com/repos/clickntap/Vimeo", "Date": "2016-08-17T07:54:45Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input instanceof java.io.File) { entity = new org.apache.http.entity.FileEntity(((java.io.File) (input)), org.apache.http.entity.ContentType.MULTIPART_FORM_DATA); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4330/buggy-version/src.main.java.com.clickntap.vimeo.Vimeo.java", "BodyUseAPI": [], "Fixed commit": "8f9b34542259d50e63bf47828bdd9d5086832c82", "Url": "https://api.github.com/repos/clickntap/Vimeo", "Date": "2016-08-17T07:54:45Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event instanceof org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent) { assert last == null; aggregateEvent = ((org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent) (event)); }else if (last == null) { aggregateEvent = org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.getAggregatedEvent(event, eventCountOnCreation); }else { assert last instanceof org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent; org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent aggregateLastEvent = ((org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent) (last)); aggregateEvent = org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.appendOneEditEvent(aggregateLastEvent, event, eventCountOnCreation, toNewDuration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5733/buggy-version/org.eclipse.mylyn.context.core.src.org.eclipse.mylyn.internal.context.core.DegreeOfInterest.java", "BodyUseAPI": ["org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.getAggregatedEvent(org.eclipse.mylyn.monitor.core.InteractionEvent,int)", "org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent.appendOneEditEvent(org.eclipse.mylyn.internal.context.core.AggregateInteractionEvent,org.eclipse.mylyn.monitor.core.InteractionEvent,int,boolean)"], "Fixed commit": "97fc1c5d1d09b40d103d7cb3f5c9e93474b0415a", "Url": "https://api.github.com/repos/conachang/mylyn.context", "Date": "2015-05-28T07:39:07Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Gdx.files.absolute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fh.exists())) { fh = Gdx.files.internal((((resourcesUri) + \"/\") + uri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4312/buggy-version/core.engine-core.src.main.java.es.eucm.ead.engine.assets.AssetHandlerImpl.java", "BodyUseAPI": [], "Fixed commit": "221bfc4e064b821e451a18ed942c3be989b2a183", "Url": "https://api.github.com/repos/e-ucm/eadventure", "Date": "2013-08-21T11:16:32Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((weakReference.get()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2834/buggy-version/bannerview.src.main.java.cn.isif.plug.bannerview.BannerView.java", "BodyUseAPI": [], "Fixed commit": "20aacab0dd9e1b87f7011f5fdf984663baceef52", "Url": "https://api.github.com/repos/uncle404/banner", "Date": "2016-07-02T09:09:49Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cinchapi.concourse.server.model.Value.getObject()", "org.cinchapi.concourse.server.model.Value.getObject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((o1 instanceof java.lang.Number) && (o2 instanceof java.lang.Number)) { return org.cinchapi.concourse.util.Numbers.compare(((java.lang.Number) (o1)), ((java.lang.Number) (o2))); }else if (o1 instanceof java.lang.Number) { return -1; }else if (o2 instanceof java.lang.Number) { return 1; }else { return o1.toString().compareTo(o2.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5710/buggy-version/concourse-server.src.main.java.org.cinchapi.concourse.server.model.Value.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.String.compareTo(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "d2e0eb717b07c3a6fad971e6ea7e52714824ada3", "Url": "https://api.github.com/repos/knd/concourse", "Date": "2014-06-02T12:56:01Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.parser.JSONParser.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (result.containsKey(\"uri\")) { uri = new java.net.URI(result.get(\"uri\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2224/buggy-version/src.com.client.Client.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)", "result.get(\"uri\").toString()"], "Fixed commit": "cfe9f0a2f8a8e879f0384d4623c9d8d6b17e458f", "Url": "https://api.github.com/repos/mengnans/Distributed-System", "Date": "2017-04-26T15:05:57Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getInstance().getCurrentUser()) != null) return getInstance().getCurrentUser().getUid(); else return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6802/buggy-version/app.src.main.java.edu.bilkent.findatutor.misc.NotificationsListener.java", "BodyUseAPI": [], "Fixed commit": "797ea297efe9269e99e881a7b1e538a09e107a70", "Url": "https://api.github.com/repos/arash-ash/FindATutor", "Date": "2016-07-22T08:47:38Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message.getAck()) { gateway.write(org.openhab.binding.mysensors.internal.MessageUtil.getResponse(message, message.getPayload())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4464/buggy-version/bundles.binding.org.openhab.binding.mysensors.src.main.java.org.openhab.binding.mysensors.internal.MySensorsBinding.java", "BodyUseAPI": ["org.openhab.binding.mysensors.internal.gateway.Gateway.write(org.openhab.binding.mysensors.internal.MessageUtil.getResponse(message, message.getPayload()))", "org.openhab.binding.mysensors.internal.Message.getPayload()", "org.openhab.binding.mysensors.internal.MessageUtil.getResponse(org.openhab.binding.mysensors.internal.Message,message.getPayload())"], "Fixed commit": "5c67e7e3497ef24e5594a0469af6ce7ac05174d5", "Url": "https://api.github.com/repos/bloft/openhab", "Date": "2016-02-22T20:21:56Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mouseEvent.getSource()) instanceof DrawButton) { drawCard(); playRound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3074/buggy-version/Uno.src.Controller.java", "BodyUseAPI": [], "Fixed commit": "3fa3098f2df95d66927970bbe68fb464faa8c7b8", "Url": "https://api.github.com/repos/EnJoIsKaTe/ProjectBA", "Date": "2017-08-10T08:35:32Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (relativePath.contains(java.io.File.separator)) { fmd.setDirectoryLabel(relativePath.replace(((java.io.File.separator) + (file.getName())), \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8271/buggy-version/src.main.java.edu.harvard.iq.dataverse.batch.jobs.importer.filesystem.FileRecordWriter.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "edu.harvard.iq.dataverse.FileMetadata.setDirectoryLabel(java.lang.String)"], "Fixed commit": "16caeb25c9b4f2127dd941fd4e36c4e5a49dad6b", "Url": "https://api.github.com/repos/IQSS/dataverse", "Date": "2016-12-07T13:26:30Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((example.Map.padsThree) == (example.Map.padsTwo)) { example.Map.padsThree += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5460/buggy-version/src.example.Map.java", "BodyUseAPI": [], "Fixed commit": "d1d7ab9caab8fc56796a6803e403941717f073e6", "Url": "https://api.github.com/repos/kevinpoulsen/OOSE2015", "Date": "2015-05-07T23:07:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((example.Map.padsOne) == (example.Map.padsThree)) { example.Map.padsOne += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5460/buggy-version/src.example.Map.java", "BodyUseAPI": [], "Fixed commit": "d1d7ab9caab8fc56796a6803e403941717f073e6", "Url": "https://api.github.com/repos/kevinpoulsen/OOSE2015", "Date": "2015-05-07T23:07:47Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((example.Map.padsOne) == (example.Map.padsTwo)) { example.Map.padsTwo += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5460/buggy-version/src.example.Map.java", "BodyUseAPI": [], "Fixed commit": "d1d7ab9caab8fc56796a6803e403941717f073e6", "Url": "https://api.github.com/repos/kevinpoulsen/OOSE2015", "Date": "2015-05-07T23:07:47Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.pdpModel.getParcelState(context.currentTarget)) == (rinde.sim.core.model.pdp.PDPModel.ParcelState.AVAILABLE)) { context.pdpModel.pickup(context.truck, context.currentTarget, context.currentTime); }else { context.currentTime.consumeAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7838/buggy-version/src.main.java.rinde.evo4mas.gendreau06.HeuristicTruck.java", "BodyUseAPI": ["context.pdpModel.pickup(rinde.evo4mas.gendreau06.HeuristicTruck,rinde.sim.core.model.pdp.Parcel,rinde.sim.core.TimeLapse)", "rinde.sim.core.TimeLapse.consumeAll()"], "Fixed commit": "81afc985902aee0fc69f4ba04d973feda76b6663", "Url": "https://api.github.com/repos/rinde/evo4mas", "Date": "2013-01-21T14:23:19Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["interfaces.MFMusic.getLyrics()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (mfL != null) { java.lang.String lyrics = mfL.getLyricsBody(); if ((lyrics != null) && (!(lyrics.isEmpty()))) { lyrics = mfL.getLyricsBody().substring(0, ((mfL.getLyricsBody().length()) - (api.musixMatch.utils.MusixMatchUtils.SIZE_OF_LYRICS_END))); nosql.mongo.MongoServiceInsert.ms.insertLyricsIfNotExists(lyrics, mf.getTrackId(), mf.getArtistId(), mf.getArtistName(), mf.getTrackName(), mfL.getLyrics_language(), mf.getTrackSpotifyId(), mf.getTrackSoundcloudId()); java.util.List<java.lang.String> tags = utils.textMining.ParserMaison.parserProcess(lyrics, mfL.getLyrics_language()); if ((tags != null) && (!(tags.isEmpty()))) { for (java.lang.String tag : tags) { nosql.mongo.MongoServiceInsert.ms.insertTagIfNotExists(tag, mf.getTrackId()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8267/buggy-version/src.nosql.mongo.MongoServiceInsert.java", "BodyUseAPI": ["interfaces.MFLyrics.getLyricsBody()", "interfaces.MFLyrics.getLyrics_language()", "interfaces.MFLyrics.getLyricsBody()", "utils.textMining.ParserMaison.parserProcess(java.lang.String,mfL.getLyrics_language())", "interfaces.MFLyrics.getLyrics_language()", "nosql.mongo.MongoService.insertLyricsIfNotExists(java.lang.String,mf.getTrackId(),mf.getArtistId(),mf.getArtistName(),mf.getTrackName(),mfL.getLyrics_language(),mf.getTrackSpotifyId(),mf.getTrackSoundcloudId())", "mfL.getLyricsBody().substring(int,((mfL.getLyricsBody().length()) - (api.musixMatch.utils.MusixMatchUtils.SIZE_OF_LYRICS_END)))", "mfL.getLyricsBody().length()", "interfaces.MFLyrics.getLyricsBody()"], "Fixed commit": "b35df50b02b940490a9c8393b3fa8490855a45c7", "Url": "https://api.github.com/repos/JulienMrgrd/MuzikFinder", "Date": "2016-11-08T10:35:28Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkWheelStraight(hand)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4241/buggy-version/src.poker.hand_card.CheckerImpl.java", "BodyUseAPI": [], "Fixed commit": "7a6b40aa94bfb38dcd1c7d0db5a878bd6ddbe5d6", "Url": "https://api.github.com/repos/BBK-PiJ-2012-86/PokerProject", "Date": "2013-03-14T07:38:14Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.raml.model.MimeType.getFormParameters()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (formParameters != null) { for (final java.util.Map.Entry<java.lang.String, java.util.List<org.raml.model.parameter.FormParameter>> namedFormParameters : formParameters.entrySet()) { final java.lang.StringBuilder sb = new java.lang.StringBuilder(); sb.append(namedFormParameters.getKey()).append(\": \"); for (final org.raml.model.parameter.FormParameter formParameter : namedFormParameters.getValue()) { appendParameterJavadocDescription(formParameter, sb); } javadoc.addParam(org.raml.jaxrs.codegen.core.Names.GENERIC_PAYLOAD_ARGUMENT_NAME).add(sb.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/9052/buggy-version/raml-to-jaxrs.core.src.main.java.org.raml.jaxrs.codegen.core.AbstractGenerator.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<org.raml.model.parameter.FormParameter>>.entrySet()"], "Fixed commit": "8413cb507d1ace9fe16cee30adaf83a2856cf653", "Url": "https://api.github.com/repos/mulesoft-labs/raml-for-jax-rs", "Date": "2015-06-04T16:19:16Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<SubStatusListModel.SubStatusModel>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size > 0) { android.view.View childView = android.view.LayoutInflater.from(getActivity()).inflate(R.layout.status_update_item, null); ((android.widget.ImageView) (childView.findViewById(R.id.statusIndicator))).setImageResource(R.drawable.status_in_progress); ((android.widget.TextView) (childView.findViewById(R.id.tvStatusText))).setText(list.get(0).getSubStatusName()); android.widget.LinearLayout.LayoutParams layoutParams = new android.widget.LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT); layoutParams.setMargins(0, 5, 0, 5); linearLayoutStatus.addView(childView, layoutParams); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5712/buggy-version/app.src.main.java.com.mygaadi.driverassistance.fragments.StatusUpdateFragment.java", "BodyUseAPI": [], "Fixed commit": "57ab4857233ac86c7e64bd3f96212ca067d257f3", "Url": "https://api.github.com/repos/AmbujeshTripathi/Driver-Assistance", "Date": "2016-02-10T14:01:37Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((children.get(1)) instanceof org.apache.phoenix.expression.BaseJSONExpression) { if ((((org.apache.phoenix.expression.BaseJSONExpression) (children.get(1))).getRealDataType()) != (org.apache.phoenix.schema.types.PJson.INSTANCE)) { ptr.set(PDataType.FALSE_BYTES); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/654/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.expression.JsonSubsetExpression.java", "BodyUseAPI": ["((org.apache.phoenix.expression.BaseJSONExpression) (children.get(1))).getRealDataType()", "org.apache.phoenix.expression.JsonSubsetExpression.get(int)"], "Fixed commit": "fd4604cbb799600a87da0647671e8dbad6a8c6a7", "Url": "https://api.github.com/repos/petercdc/phoenix", "Date": "2015-07-13T12:22:08Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((children.get(1)) instanceof org.apache.phoenix.expression.BaseJSONExpression) { if ((((org.apache.phoenix.expression.BaseJSONExpression) (children.get(1))).getRealDataType()) != (org.apache.phoenix.schema.types.PJson.INSTANCE)) { ptr.set(PDataType.FALSE_BYTES); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/654/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.expression.JsonSupersetExpression.java", "BodyUseAPI": ["org.apache.phoenix.expression.JsonSupersetExpression.get(int)", "((org.apache.phoenix.expression.BaseJSONExpression) (children.get(1))).getRealDataType()"], "Fixed commit": "fd4604cbb799600a87da0647671e8dbad6a8c6a7", "Url": "https://api.github.com/repos/petercdc/phoenix", "Date": "2015-07-13T12:22:08Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (defaultFile != null) { java.io.File file = baseFolder.resolve(defaultFile).toFile(); if (file.exists()) { if (file.isDirectory()) { baseFolder = baseFolder.resolve(defaultFile); }else { this.defaultFile = defaultFile; } }else { org.hcjf.log.Log.w(org.hcjf.properties.SystemProperties.get(SystemProperties.Net.Http.Folder.LOG_TAG), \"Default file doesn't exist %s\", defaultFile); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2862/buggy-version/src.main.java.org.hcjf.io.net.http.FolderContext.java", "BodyUseAPI": [], "Fixed commit": "8277d3c0f92f460450299f7dd63d3c78f42c9296", "Url": "https://api.github.com/repos/javaito/HolandaCatalinaFw", "Date": "2017-07-14T18:00:18Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endHandler) != null) { endHandler.handle(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7998/buggy-version/src.main.java.org.vertx.java.core.sockjs.impl.Session.java", "BodyUseAPI": [], "Fixed commit": "97fb515a06cc90d9b0080910bec0ef0541679ec5", "Url": "https://api.github.com/repos/johr/vert.x", "Date": "2012-04-25T16:50:22Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.aliyun.fs.oss.nat.ObjectMetadata.getContentLength()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (contentLength <= (MAX_COPY_SIZE)) { ossClient.copyObject(bucket, srcKey, bucket, dstKey); }else { com.aliyun.fs.oss.nat.InitiateMultipartUploadRequest initiateMultipartUploadRequest = new com.aliyun.fs.oss.nat.InitiateMultipartUploadRequest(bucket, dstKey); com.aliyun.fs.oss.nat.InitiateMultipartUploadResult initiateMultipartUploadResult = ossClient.initiateMultipartUpload(initiateMultipartUploadRequest); java.lang.String uploadId = initiateMultipartUploadResult.getUploadId(); java.lang.Long partSize = (1024 * 1024) * 100L; int partCount = ((int) (contentLength / partSize)); if ((contentLength % partSize) != 0) { partCount++; } java.util.List<com.aliyun.fs.oss.nat.PartETag> partETags = new java.util.ArrayList<com.aliyun.fs.oss.nat.PartETag>(); for (int i = 0; i < partCount; i++) { long skipBytes = partSize * i; long size = (partSize < (contentLength - skipBytes)) ? partSize : contentLength - skipBytes; com.aliyun.fs.oss.nat.UploadPartCopyRequest uploadPartCopyRequest = new com.aliyun.fs.oss.nat.UploadPartCopyRequest(); uploadPartCopyRequest.setSourceKey((((\"/\" + (bucket)) + \"/\") + srcKey)); uploadPartCopyRequest.setBucketName(bucket); uploadPartCopyRequest.setKey(dstKey); uploadPartCopyRequest.setUploadId(uploadId); uploadPartCopyRequest.setPartSize(size); uploadPartCopyRequest.setBeginIndex(skipBytes); uploadPartCopyRequest.setPartNumber((i + 1)); com.aliyun.fs.oss.nat.UploadPartCopyResult uploadPartCopyResult = ossClient.uploadPartCopy(uploadPartCopyRequest); partETags.add(uploadPartCopyResult.getPartETag()); } com.aliyun.fs.oss.nat.CompleteMultipartUploadRequest completeMultipartUploadRequest = new com.aliyun.fs.oss.nat.CompleteMultipartUploadRequest(bucket, dstKey, initiateMultipartUploadResult.getUploadId(), partETags); ossClient.completeMultipartUpload(completeMultipartUploadRequest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8286/buggy-version/core.src.main.java.com.aliyun.fs.oss.nat.JetOssNativeFileSystemStore.java", "BodyUseAPI": [], "Fixed commit": "b967e9572d126e1134b41fb5d026e34220085eff", "Url": "https://api.github.com/repos/aliyun/aliyun-emapreduce-sdk", "Date": "2015-10-09T14:19:27Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.headers().get(io.netty.handler.codec.http.HttpHeaders.Names.COOKIE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (header == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3051/buggy-version/src.main.java.org.rakam.server.http.IRequestParameter.java", "BodyUseAPI": [], "Fixed commit": "b24a0a273847a21cbbeccd3df3a9e6fb01ff46aa", "Url": "https://api.github.com/repos/buremba/netty-rest", "Date": "2015-10-30T05:49:26Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.util.EntityUtils.toString(response.getEntity())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((stringResponse.length()) > 10) { java.lang.String arrayStringResponse = stringResponse.substring(1, ((stringResponse.length()) - 1)); java.lang.String[] accounts = arrayStringResponse.split(\"\\\\}\"); java.util.ArrayList<java.lang.String> accountNameArray = new java.util.ArrayList<java.lang.String>(); for (java.lang.String account : accounts) { java.lang.String[] attr = account.substring(2).split(\",\"); accountNameArray.add(attr[2]); } for (java.lang.String name : accountNameArray) { createButton(name.substring(16, ((name.length()) - 1))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7811/buggy-version/src.com.example.m3.AccountsOverviewActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "828952cd7016d00323e54beee89accc5c5ec50f4", "Url": "https://api.github.com/repos/mkmerritt1004/2340Project", "Date": "2014-02-26T05:32:08Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasWorldObj()) { markDirtyClient(); }else { markDirty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7578/buggy-version/src.main.java.mcjty.deepresonance.blocks.crystals.ResonatingCrystalTileEntity.java", "BodyUseAPI": [], "Fixed commit": "532aede96859bcbcdcef457ec6e4c55628c87171", "Url": "https://api.github.com/repos/McJtyMods/DeepResonance", "Date": "2016-02-29T16:22:57Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (output.contains(\"*\")) { output = output.replaceAll(\"\\\\*\", \"-1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3441/buggy-version/src.main.java.me.haosdent.cgroup.subsystem.Devices.java", "BodyUseAPI": [], "Fixed commit": "e5caea5f4a6813a24dca6cabb4a8a8a6394f7313", "Url": "https://api.github.com/repos/haosdent/jcgroup", "Date": "2014-01-26T16:49:13Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((errorFileContents[i]) != null) && (!(errorFileContents[i].equals(\"\")))) { execErrors = ((execErrors) + \"\\n\") + (errorFileContents[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7281/buggy-version/src.edu.ucdenver.ccp.PhenoGen.driver.ExecHandler.java", "BodyUseAPI": [], "Fixed commit": "31622b381fe1545c1847950a3b0ca62d7d036c0f", "Url": "https://api.github.com/repos/TabakoffLab/PhenoGen", "Date": "2015-03-10T22:59:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs(angle)) > (((java.lang.Math.PI) * 2) - 1)) || (collides(player_cell, next, nearby_cells, nearby_pheromes))) { angle = (((gen.nextDouble()) * 2) * (java.lang.Math.PI)) - (java.lang.Math.PI); next = new slather.sim.Point(java.lang.Math.cos(angle), java.lang.Math.sin(angle)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8275/buggy-version/slather.g23.Player.java", "BodyUseAPI": [], "Fixed commit": "79463743cdddace82ea46b0ad2f8549d4848baad", "Url": "https://api.github.com/repos/yogeshg/slather", "Date": "2016-10-05T00:16:06Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.rstudio.core.client.StringUtil.isNullOrEmpty(targetFile.getExtension())) { targetFile = org.rstudio.core.client.files.FileSystemItem.createFile(((targetFile.getPath()) + (selectedFiles.get(0).getExtension()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5669/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.files.Files.java", "BodyUseAPI": [], "Fixed commit": "db47b8bc140d56160683c8a8963bfd93321fb589", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-04-28T18:21:29Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input instanceof org.rstudio.studio.client.workbench.views.source.editors.text.TextEditingTarget) { ((org.rstudio.studio.client.workbench.views.source.editors.text.TextEditingTarget) (input)).setPath(toPath); }else { input.getName().setValue(toPath.getName(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5669/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.Source.java", "BodyUseAPI": ["input.getName().setValue(toPath.getName(),boolean)", "org.rstudio.studio.client.workbench.views.source.editors.EditingTarget.getName()"], "Fixed commit": "db47b8bc140d56160683c8a8963bfd93321fb589", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-04-28T18:21:29Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends me.prettyprint.cassandra.service.JmxMonitor>.getClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (loader == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5070/buggy-version/core.src.main.java.me.prettyprint.cassandra.service.JmxMonitor.java", "BodyUseAPI": [], "Fixed commit": "4be28e7d287b02b6f1036b415c5e732ec804065f", "Url": "https://api.github.com/repos/memoleaf/hector", "Date": "2011-10-31T08:01:46Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasWindowFocus) { applyTint(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8568/buggy-version/stripe.src.main.java.com.stripe.android.view.CardInputWidget.java", "BodyUseAPI": [], "Fixed commit": "11a7d6f1453ab0cbdf18cf14852f186936ee7c99", "Url": "https://api.github.com/repos/stripe/stripe-android", "Date": "2017-02-21T20:05:02Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (captionFile.createFile()) { getLogger().info(\"Created Caption File\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7314/buggy-version/src.main.java.com.worldcretornica.plotme_core.PlotMe_Core.java", "BodyUseAPI": [], "Fixed commit": "e7ca01011a0071b1c6e0dcb09d9f09c13320d1eb", "Url": "https://api.github.com/repos/WorldCretornica/PlotMe-Core", "Date": "2015-03-08T22:15:33Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (configFile.createFile()) { getLogger().info(\"Created Config File\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7314/buggy-version/src.main.java.com.worldcretornica.plotme_core.PlotMe_Core.java", "BodyUseAPI": [], "Fixed commit": "e7ca01011a0071b1c6e0dcb09d9f09c13320d1eb", "Url": "https://api.github.com/repos/WorldCretornica/PlotMe-Core", "Date": "2015-03-08T22:15:33Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cycles.size()) == 0) { return new edu.cmu.cs.dickerson.kpd.solver.solution.Solution(0, 0, new java.util.HashSet<edu.cmu.cs.dickerson.kpd.structure.Cycle>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5125/buggy-version/src.edu.cmu.cs.dickerson.kpd.ir.solver.IRCPLEXSolver.java", "BodyUseAPI": [], "Fixed commit": "47a9a2403918757d14d08439c197ed344620b071", "Url": "https://api.github.com/repos/JohnDickerson/KidneyExchange", "Date": "2014-07-14T02:58:47Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cycles.size()) == 0) { return new edu.cmu.cs.dickerson.kpd.solver.solution.Solution(0, 0, new java.util.HashSet<edu.cmu.cs.dickerson.kpd.structure.Cycle>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5125/buggy-version/src.edu.cmu.cs.dickerson.kpd.solver.CycleFormulationCPLEXSolver.java", "BodyUseAPI": [], "Fixed commit": "47a9a2403918757d14d08439c197ed344620b071", "Url": "https://api.github.com/repos/JohnDickerson/KidneyExchange", "Date": "2014-07-14T02:58:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(line.equals(\"\"))) { java.lang.String[] ta = line.split(cvsSplitBy, 5); temp = new gov.nist.toolkit.errorrecording.client.assertions.Assertion(ta[0], ta[1], ta[2], ta[3], ta[4]); this.add(temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5774/buggy-version/error-recording.src.main.java.gov.nist.toolkit.errorrecording.client.assertions.AssertionLibrary.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String,int)"], "Fixed commit": "6e83c3225c8d0250f73497a089f22cccc3a89935", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2016-11-15T19:19:12Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/400/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "05348f0d13ec6ec8d81ac49ebdd80beba68e31a9", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-12T11:08:51Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sort != null) { org.springframework.data.domain.Sort.Order sortProp = ((org.springframework.data.domain.Sort.Order) (sort.iterator().next())); model.addAttribute(\"sortColumn\", sortProp.getProperty()); model.addAttribute(\"sortDirection\", sortProp.getDirection()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5044/buggy-version/ngrinder-controller.src.main.java.org.ngrinder.user.controller.UserController.java", "BodyUseAPI": ["org.springframework.data.domain.Sort.iterator()", "sort.iterator().next()"], "Fixed commit": "be00d643378217de5b3a596032aaf0aff3dd116d", "Url": "https://api.github.com/repos/nhnopensource/ngrinder", "Date": "2013-06-11T04:58:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.LOLLIPOP_MR1)) { methodName = \"bindGuts\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1345/buggy-version/app.src.main.java.daylemk.xposed.xbridge.hook.StatusBarHook.java", "BodyUseAPI": [], "Fixed commit": "f5c8019e323b4d8dadb23b916c1b19df7b21e5cf", "Url": "https://api.github.com/repos/lj3lj3/XBridge", "Date": "2016-08-10T04:09:37Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fos != null) { fos.flush(); fos.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4702/buggy-version/editor.exporter.src.main.java.es.eucm.ead.editor.utils.ZipUtils.java", "BodyUseAPI": ["java.io.OutputStream.flush()", "java.io.OutputStream.close()"], "Fixed commit": "e485ac77faa19c5853198ec9d1ae0e0c960cf24d", "Url": "https://api.github.com/repos/jtorrente/ead", "Date": "2014-11-19T13:46:34Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state == (me.cassiano.thunder.LexicalAnalyzer.State.Q_START)) && (isNewLine(currentChar))) { lineNumber += 1; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3536/buggy-version/src.me.cassiano.thunder.LexicalAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "012234a15abcdf5e137a106f46f9a70cec4f601d", "Url": "https://api.github.com/repos/mcassiano/thunder", "Date": "2016-09-18T20:10:29Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((se.wiklund.minecraft2d.menu.Settings.lastInstance) == null) || ((se.wiklund.minecraft2d.Main.getState()) != (se.wiklund.minecraft2d.menu.Settings.lastInstance))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3440/buggy-version/src.se.wiklund.minecraft2d.menu.Settings.java", "BodyUseAPI": [], "Fixed commit": "4ec282655047c96b68e342835f6d9c2f1a6d447f", "Url": "https://api.github.com/repos/Hadermite/Minecraft2D", "Date": "2017-01-11T08:53:54Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getLocalName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (localName != null) { result = new org.exist.xquery.value.StringValue(localName); }else { result = org.exist.xquery.value.StringValue.EMPTY_STRING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1172/buggy-version/src.org.exist.xquery.functions.fn.FunLocalName.java", "BodyUseAPI": [], "Fixed commit": "ed6f612611e1cdff6eadef07978822e4e3566057", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2016-08-07T19:13:46Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callback.target.returnType) != (org.spongepowered.asm.lib.Type.VOID_TYPE)) { (callback.invoke)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1451/buggy-version/src.main.java.org.spongepowered.asm.mixin.injection.callback.CallbackInjector.java", "BodyUseAPI": [], "Fixed commit": "b134940a19078d26eace3bce0b435123dfe3e8d1", "Url": "https://api.github.com/repos/SpongePowered/Mixin", "Date": "2015-12-19T00:03:57Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.json.JSONObject.fromObject(application.getFormData())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(getFormValue(formData, \"field-underage-grounds\"))) { fields.put(\"Hakemusperusteet\", getFormValue(formData, \"field-underage-grounds\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/53/buggy-version/pyramus.src.main.java.fi.otavanopisto.pyramus.views.applications.ViewApplicationViewController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "fi.otavanopisto.pyramus.views.applications.ViewApplicationViewController.getFormValue(net.sf.json.JSONObject,java.lang.String)"], "Fixed commit": "d5a0ab502d24f26801fbd154be4fcbc0ba38e573", "Url": "https://api.github.com/repos/otavanopisto/pyramus", "Date": "2017-10-16T09:14:43Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkText())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3851/buggy-version/app.src.main.java.co.infinum.workshop_4.activites.AddDataToDbActivity.java", "BodyUseAPI": [], "Fixed commit": "d324ebc7ef5c9c82fdedb3d266b427833b80db15", "Url": "https://api.github.com/repos/sjugc/TVZMc2-Android-4", "Date": "2014-11-17T20:09:37Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((templateDir.exists()) == false) { throw new java.io.FileNotFoundException((\"The Import service's template directory is missing: \" + (org.collectionspace.services.imports.ImportsResource._templateDir))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7674/buggy-version/services.imports.service.src.main.java.org.collectionspace.services.imports.ImportsResource.java", "BodyUseAPI": [], "Fixed commit": "d8fa9f41245be4fdaf14f4b1a7a9431aa22737e8", "Url": "https://api.github.com/repos/ray-lee/services", "Date": "2013-01-31T19:35:18Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cacheBackend != null) { org.aksw.jena_sparql_api.cache.extra.CacheEx cacheFrontend = new org.aksw.jena_sparql_api.cache.extra.CacheExImpl(cacheBackend); org.aksw.sparql2nl.naturallanguagegeneration.URIConverter.qef = new org.aksw.jena_sparql_api.cache.core.QueryExecutionFactoryCacheEx(org.aksw.sparql2nl.naturallanguagegeneration.URIConverter.qef, cacheFrontend); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7039/buggy-version/src.main.java.org.aksw.sparql2nl.naturallanguagegeneration.URIConverter.java", "BodyUseAPI": [], "Fixed commit": "6eebe2b14a1d78ba23affb03f40860013192a7d3", "Url": "https://api.github.com/repos/AKSW/SPARQL2NL", "Date": "2013-12-12T11:04:30Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((se.mah.k3.NiagaraApp.MainActivity.currentfragment) == \"howTo\") { android.app.FragmentManager fm = getFragmentManager(); android.app.FragmentTransaction ft = fm.beginTransaction(); ft.replace(R.id.container, new se.mah.k3.NiagaraApp.LoginFragment()); ft.addToBackStack(null); ft.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2883/buggy-version/ScreenAndroid.src.main.java.se.mah.k3.NiagaraApp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "01e23417666bc4741d51ff479f80def22ee597a2", "Url": "https://api.github.com/repos/Halexsson/ScreenAndroid", "Date": "2015-06-03T14:44:46Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((addKeyValueForEncryptedKey) != null) { setProperty(camelContext, dataFormat, \"addKeyValueForEncryptedKey\", isAddKeyValueForEncryptedKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7774/buggy-version/camel-core.src.main.java.org.apache.camel.model.dataformat.XMLSecurityDataFormat.java", "BodyUseAPI": [], "Fixed commit": "279b7f3d0fe12abbc516aecc64979c6c9fb1c754", "Url": "https://api.github.com/repos/tadayosi/camel", "Date": "2014-12-03T02:12:36Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.gots.seed.service.SeedSyncService.application) == null) { org.gots.seed.service.SeedSyncService.application = ((org.gots.context.SimpleGotsApplication) (getApplicationContext())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4490/buggy-version/gardening-manager-android.src.org.gots.seed.service.SeedSyncService.java", "BodyUseAPI": [], "Fixed commit": "6be0cbb5e73decfe65f1ed0f0e549a4dddb73e60", "Url": "https://api.github.com/repos/artmoni/gardening-manager-android", "Date": "2014-12-04T22:54:15Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.provider.Settings.Global.getFloat(this.getContentResolver(),android.provider.Settings.Global.ANIMATOR_DURATION_SCALE,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (durationScale == 0) durationScale = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6742/buggy-version/app.src.main.java.org.shadowice.flocke.andotp.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5368038d0c467547f46ce859be2f177c8c9df081", "Url": "https://api.github.com/repos/andOTP/andOTP", "Date": "2017-10-15T07:12:12Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parameters != null) parameters.remove(\"actionMethod\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4793/buggy-version/jboss-seam.src.main.java.org.jboss.seam.exception.RedirectHandler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.remove(java.lang.String)"], "Fixed commit": "264bcd82ed147e1d4f0f48ec4baa67131ec4e4f4", "Url": "https://api.github.com/repos/omidp/seam", "Date": "2016-03-02T07:33:49Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.toDex.PrimitiveType.getByName(destinationReg.getType().toString())", "soot.toDex.RegisterAllocator.asImmediate(soot.Value,soot.toDex.ConstantVisitor)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (isBiggerThan(soot.toDex.PrimitiveType.getByName(secondOpReg.getType().toString()), destRegType)) { destinationReg = regAlloc.asTmpReg(secondOpReg.getType()); }else if (isBiggerThan(soot.toDex.PrimitiveType.getByName(firstOpReg.getType().toString()), destRegType)) { destinationReg = regAlloc.asTmpReg(firstOpReg.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8175/buggy-version/src.soot.toDex.ExprVisitor.java", "BodyUseAPI": ["soot.toDex.Register.getType()", "soot.toDex.ExprVisitor.isBiggerThan(soot.toDex.PrimitiveType.getByName(firstOpReg.getType().toString()),soot.toDex.PrimitiveType)", "soot.toDex.RegisterAllocator.asTmpReg(secondOpReg.getType())"], "Fixed commit": "5218e5e16577e296ccee24188a58e892d50d83f2", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2017-01-10T19:25:16Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value < 0) { value = value + 256; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/294/buggy-version/designs.graal.plugins.org.obeonetwork.graal.design.src.org.obeonetwork.graal.design.ui.decoration.AbstractUserStoryDecorator.java", "BodyUseAPI": [], "Fixed commit": "87de054f73c460f3881399bacb7c294201ce4f95", "Url": "https://api.github.com/repos/ObeoNetwork/InformationSystem", "Date": "2013-04-04T14:41:03Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(updatingListSelectionModel)) { updatingListSelectionModel = true; try { int min = listSelectionModel.getMinSelectionIndex(); int max = listSelectionModel.getMaxSelectionIndex(); clearSelection(); if ((min != (-1)) && (max != (-1))) { for (int counter = min; counter <= max; counter++) { if (listSelectionModel.isSelectedIndex(counter)) { javax.swing.tree.TreePath selPath = tree.getPathForRow(counter); if (selPath != null) { addSelectionPath(selPath); } } } } } catch (java.lang.Exception e) { e.printStackTrace(); } finally { updatingListSelectionModel = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7627/buggy-version/src.net.sf.memoranda.ui.treetable.JTreeTable.java", "BodyUseAPI": [], "Fixed commit": "4fc1823852616ff799fafa081b96c6ffaae3e510", "Url": "https://api.github.com/repos/ser316asu/SER316-Nuremberg", "Date": "2017-04-21T18:28:58Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pauseDialog) != null) { pauseDialog.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8565/buggy-version/core.src.com.fd.etf.stages.GameScreenScript.java", "BodyUseAPI": [], "Fixed commit": "f08aa904ef49b3c01ce7350019d0dbe75c63c029", "Url": "https://api.github.com/repos/Teatree/Krashe3", "Date": "2017-05-16T18:54:58Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index >= (slices.length)) index = (slices.length) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/738/buggy-version/resource-container.src.main.java.org.unfoldingword.resourcecontainer.Semver.java", "BodyUseAPI": [], "Fixed commit": "5d1b21cb0d34395414f95df240f0248269a6b94a", "Url": "https://api.github.com/repos/unfoldingWord-dev/android-resource-container", "Date": "2016-12-29T08:05:21Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((slices.length) > 0) { return clean(slices[index]).equals(\"*\"); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/738/buggy-version/resource-container.src.main.java.org.unfoldingword.resourcecontainer.Semver.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "org.unfoldingword.resourcecontainer.Semver.Version.clean(java.lang.String)"], "Fixed commit": "5d1b21cb0d34395414f95df240f0248269a6b94a", "Url": "https://api.github.com/repos/unfoldingWord-dev/android-resource-container", "Date": "2016-12-29T08:05:21Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 0) { return ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/392/buggy-version/src.main.java.org.wilson.world.manager.ConsoleManager.java", "BodyUseAPI": [], "Fixed commit": "2b9303652bdac11ba5dc612edcc3fd96dfe14965", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2016-08-25T13:28:28Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(params.containsKey(\"user_id\"))) || (params.getString(\"user_id\").isEmpty())) || (params.getString(\"user_id\").equals(\"\"))) { res.put(\"result_code\", (-1)); res.put(\"result_msg\", \"\uc720\uc800 \uc544\uc774\ub514\ub97c \uc785\ub825\ud574\uc8fc\uc138\uc694.\"); return res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/763/buggy-version/src.main.java.api.JoinRoomAPI.java", "BodyUseAPI": [], "Fixed commit": "fc159287afa85089ae1ba00c6987d7d9d6756411", "Url": "https://api.github.com/repos/kyeongwan/OneCardServer", "Date": "2016-06-05T13:29:14Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1790/buggy-version/sdf2table.core.src.main.java.org.metaborg.sdf2table.core.CollisionSet.java", "BodyUseAPI": [], "Fixed commit": "913f90b216ff2195fe3825e688a6907df12e5790", "Url": "https://api.github.com/repos/metaborg/sdf", "Date": "2016-09-15T12:20:08Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(forumAreas.isEmpty())) threads = forumThreadDAO.listLatestOrdered(forumAreas, firstResult, maxResults); else threads = new java.util.ArrayList<fi.muikku.plugins.forum.model.ForumThread>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4496/buggy-version/muikku-core-plugins.src.main.java.fi.muikku.plugins.forum.ForumController.java", "BodyUseAPI": ["fi.muikku.plugins.forum.dao.ForumThreadDAO.listLatestOrdered(java.util.List<fi.muikku.plugins.forum.model.ForumArea>,int,int)"], "Fixed commit": "05a5e259079827618becb01aa81713f1cb3199ed", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2015-03-18T08:11:50Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(actionBarCTR.titleEquals(getActivity().getActionBar(), R.string.title_activity_account, getActivity()))) { actionBarCTR.setActionBar(getActivity().getActionBar(), R.drawable.ic_action_back, R.string.new_account); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7512/buggy-version/app.src.main.java.br.com.inmypocket.fragments.AccountFragment.java", "BodyUseAPI": ["br.com.inmypocket.controllers.ActionBarCTR.setActionBar(getActivity().getActionBar(),R.drawable.ic_action_back,R.string.new_account)"], "Fixed commit": "4cdfce96afb01414f0a306d9f8ff77c2c2399e03", "Url": "https://api.github.com/repos/kevinmelo/InMyPocket", "Date": "2016-01-25T11:03:34Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.bitwalker.useragentutils.UserAgent.getOperatingSystem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (os == null) { insertStatistics.setString(4, \"Unknown\"); insertStatistics.setString(5, \"Unknown\"); }else { insertStatistics.setString(4, os.getGroup().toString()); insertStatistics.setString(5, os.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4777/buggy-version/src.DAOs.StatisticsDAO.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,os.getGroup().toString())", "eu.bitwalker.useragentutils.OperatingSystem.getName()", "os.getGroup().toString()", "eu.bitwalker.useragentutils.OperatingSystem.getGroup()", "java.sql.PreparedStatement.setString(int,os.getName())"], "Fixed commit": "31f5450272ba711b5b865ebe7d58eb5ad0fc4f17", "Url": "https://api.github.com/repos/CryptoCubik/browserprint", "Date": "2017-05-03T02:03:28Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thinkaurelius.titan.graphdb.query.BaseVertexCentricQuery.getCondition()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (condition instanceof com.thinkaurelius.titan.graphdb.query.condition.And) newcond.addAll(((com.thinkaurelius.titan.graphdb.query.condition.And) (condition))); else newcond.add(condition);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6207/buggy-version/titan-core.src.main.java.com.thinkaurelius.titan.graphdb.query.MultiVertexCentricQueryBuilder.java", "BodyUseAPI": ["com.thinkaurelius.titan.graphdb.query.condition.And<com.thinkaurelius.titan.graphdb.query.TitanRelation>.add(com.thinkaurelius.titan.graphdb.query.condition.Condition<com.thinkaurelius.titan.graphdb.query.TitanRelation>)"], "Fixed commit": "6d3cfd22aa976594ca3abceb1d66309b96b48d90", "Url": "https://api.github.com/repos/batali/titan", "Date": "2013-10-23T07:20:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == (emdDetail.getEmdId())) { org.springframework.validation.ValidationUtils.rejectIfEmptyOrWhitespace(errors, \"aliasProjectName\", \"required.aliasProjectName\", \"Please Select Project Name.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8488/buggy-version/src.main.java.com.psk.pms.validator.EmdValidator.java", "BodyUseAPI": [], "Fixed commit": "6e1edd9c0d47f51c190114df8c27d80dfa4eccba", "Url": "https://api.github.com/repos/devintqa/pms", "Date": "2015-06-11T04:31:07Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasMore) lastKey = jsonObj.getString(\"last_key\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6658/buggy-version/src.controller.Pike13ApiController.java", "BodyUseAPI": [], "Fixed commit": "c5d5f77e21acbcac6cfe9d3288407ca685a4c883", "Url": "https://api.github.com/repos/wavis421/LeagueStudentTrackr", "Date": "2017-11-07T18:19:41Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (curFragment.equals(searchFragment)) { searchFragment.addTracks(tracks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6712/buggy-version/app.src.main.java.com.example.lucasrosario.extensionchord.RoomActivity.java", "BodyUseAPI": ["com.example.lucasrosario.extensionchord.SearchFragment.addTracks(java.util.ArrayList<com.example.lucasrosario.extensionchord.LocalTrack>)"], "Fixed commit": "fccf9c815dc632f39aa5bb8c3f4dba47bed1682f", "Url": "https://api.github.com/repos/rosario-luke/ExtensionChord", "Date": "2015-04-08T14:58:45Z"},
{"Line": "=>3282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.silverpeas.util.StringUtil.isDefined(sTableClientId)) { return java.lang.Integer.parseInt(sTableClientId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1129/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.beans.admin.Admin.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e11f185784b8d338761d22f0d84d721e19b94a00", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Core", "Date": "2015-02-24T13:56:35Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (assertion.isSigned()) { if ((assertion.getSaml1()) != null) { assertion.getSaml1().getDOM().setIdAttributeNS(null, \"AssertionID\", true); }else { assertion.getSaml2().getDOM().setIdAttributeNS(null, \"ID\", true); } try { assertion.verifySignature(requestData, new org.apache.ws.security.WSDocInfo(samlResponse.getDOM().getOwnerDocument())); } catch (org.apache.ws.security.WSSecurityException e) { throw new org.apache.ws.security.WSSecurityException(org.apache.ws.security.WSSecurityException.FAILURE, \"invalidSAMLsecurity\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6390/buggy-version/filter.security-filter-login.src.main.java.org.codice.ddf.security.filter.login.LoginFilter.java", "BodyUseAPI": ["org.apache.ws.security.saml.ext.AssertionWrapper.verifySignature(org.apache.ws.security.handler.RequestData,org.apache.ws.security.WSDocInfo)", "assertion.getSaml2().getDOM().setIdAttributeNS(<nulltype>,java.lang.String,boolean)", "assertion.getSaml1().getDOM().setIdAttributeNS(<nulltype>,java.lang.String,boolean)", "org.apache.ws.security.saml.ext.AssertionWrapper.getSaml1()", "assertion.getSaml1().getDOM()", "org.apache.ws.security.saml.ext.AssertionWrapper.getSaml2()", "assertion.getSaml2().getDOM()", "org.apache.ws.security.saml.ext.AssertionWrapper.getSaml1()"], "Fixed commit": "6f4fa790d7600be204b9a997f6cbeb337d30b04e", "Url": "https://api.github.com/repos/ricklarsen/ddf-security", "Date": "2015-02-09T19:25:04Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.jetpad.vclang.term.expr.visitor.Expression.normalize(NormalizeVisitor.Mode.NF)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((expectedType1.toUniverse()) != null) && ((actualType.toUniverse()) == null)) { result.type = expectedType1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/967/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.term.expr.visitor.CheckTypeVisitor.java", "BodyUseAPI": [], "Fixed commit": "5f2a89550c5b75d13b4c2e33b25b24d44d1f7cef", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2016-04-26T15:47:02Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numBuilder.length()) == 0) { builder.append(\"#\"); return --pos; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4231/buggy-version/app.src.main.java.com.tpb.projects.util.Data.java", "BodyUseAPI": [], "Fixed commit": "640222e7b718f512793b3ddb901767b456e8a7ca", "Url": "https://api.github.com/repos/tpb1908/AndroidProjectsClient", "Date": "2017-01-08T21:53:52Z"},
{"Line": "=>1289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (monitor_date != null) { for (java.lang.String sub_cate : values_lastest.keySet()) { java.sql.Date measure_date = values_lastest.getJSONObject(sub_cate).getSqlDate(\"measure_date\"); monitor_date.put(sub_cate, com.curus.utils.TimeUtils.date2Long(com.curus.utils.TimeUtils.getDate(measure_date, monitor_interval.getInteger(sub_cate)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8515/buggy-version/src.main.java.com.curus.utils.service.supervise.bdsugar.SBdSugarServiceUtils.java", "BodyUseAPI": ["com.alibaba.fastjson.JSONObject.put(java.lang.String,com.curus.utils.TimeUtils.date2Long(com.curus.utils.TimeUtils.getDate(measure_date, monitor_interval.getInteger(sub_cate))))"], "Fixed commit": "60c7d27923b21eb8253faf5847c34d75b40a7ec7", "Url": "https://api.github.com/repos/stupid-coder/CurusSpring", "Date": "2016-07-14T02:43:07Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 0) { averageTime = totalTime / count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/628/buggy-version/src.main.java.com.corosus.inv.EventHandlerForge.java", "BodyUseAPI": [], "Fixed commit": "2c65f8931345649459f427fd549f410d2412109a", "Url": "https://api.github.com/repos/Corosauce/HostileWorlds_Invasions", "Date": "2016-02-29T05:08:30Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Constructor.newInstance(java.lang.Object[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ent.getCanSpawnHere()) { ent.onInitialSpawn(player.worldObj.getDifficultyForLocation(new net.minecraft.util.BlockPos(ent)), ((net.minecraft.entity.IEntityLivingData) (null))); enhanceMobForDifficulty(ent, difficultyScale); player.worldObj.spawnEntityInWorld(ent); ent.setAttackTarget(player); }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/628/buggy-version/src.main.java.com.corosus.inv.EventHandlerForge.java", "BodyUseAPI": ["net.minecraft.entity.EntityCreature.setAttackTarget(net.minecraft.entity.EntityLivingBase)", "net.minecraft.entity.EntityCreature.onInitialSpawn(player.worldObj.getDifficultyForLocation(new net.minecraft.util.BlockPos(ent)),<nulltype>)", "player.worldObj.spawnEntityInWorld(net.minecraft.entity.EntityCreature)", "player.worldObj.getDifficultyForLocation(net.minecraft.util.BlockPos)", "com.corosus.inv.EventHandlerForge.enhanceMobForDifficulty(net.minecraft.entity.EntityCreature,float)"], "Fixed commit": "2c65f8931345649459f427fd549f410d2412109a", "Url": "https://api.github.com/repos/Corosauce/HostileWorlds_Invasions", "Date": "2016-02-29T05:08:30Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (holder instanceof com.alexvasilkov.gestures.sample.adapters.FlickrPhotoListAdapter.ViewHolder) { return ((com.alexvasilkov.gestures.sample.adapters.FlickrPhotoListAdapter.ViewHolder) (holder)).image; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8055/buggy-version/sample.src.main.java.com.alexvasilkov.gestures.sample.adapters.FlickrPhotoListAdapter.java", "BodyUseAPI": [], "Fixed commit": "8002b5cdb3dad6133e329d27a7868ab0b2158a5c", "Url": "https://api.github.com/repos/alexvasilkov/GestureViews", "Date": "2015-12-28T06:23:51Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((totalBytes) > 0) { double progress = (((double) (totalBytesWritten)) / ((double) (totalBytes))) * 100; io.linuxserver.davos.transfer.ftp.connection.progress.ProgressListener.LOGGER.debug(\"Progress downloaded: {}%\", progress); return progress; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2647/buggy-version/src.main.java.io.linuxserver.davos.transfer.ftp.connection.progress.ProgressListener.java", "BodyUseAPI": [], "Fixed commit": "08306b109d068e3d50229cdbe3cef87236f96f2d", "Url": "https://api.github.com/repos/linuxserver/davos", "Date": "2017-03-22T22:09:35Z"},
{"Line": "=>1241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.enabled) != enabled) { this.enabled = enabled; changed.put(\"enabled\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2600/buggy-version/src.tree.Tree.java", "BodyUseAPI": [], "Fixed commit": "b3bcfa40efd69ddd35f2a94bb55aac12dcf2edcd", "Url": "https://api.github.com/repos/manolama/opentsdb", "Date": "2013-05-24T16:53:09Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (overwrite || (tree.changed.get(\"enabled\"))) { enabled = tree.enabled; changed.put(\"enabled\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2600/buggy-version/src.tree.Tree.java", "BodyUseAPI": [], "Fixed commit": "b3bcfa40efd69ddd35f2a94bb55aac12dcf2edcd", "Url": "https://api.github.com/repos/manolama/opentsdb", "Date": "2013-05-24T16:53:09Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((memory.getBoard().getCell(x, y).getResourceType()) == type) resources.add(new java.awt.Point(x, y));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/961/buggy-version/src.main.java.com.km.mouse.modules.MemoryModule.java", "BodyUseAPI": ["java.util.List<java.awt.Point>.add(java.awt.Point)"], "Fixed commit": "e2d2403e240311267e7b2a0798279af231c55d18", "Url": "https://api.github.com/repos/kacper-/mouse", "Date": "2016-04-13T10:44:13Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.getY()) == (o.getY())) { return (this.getX()) < (o.getX()) ? -1 : 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8431/buggy-version/src.entity.AbstractEntity.java", "BodyUseAPI": ["entity.AbstractEntity.getX()"], "Fixed commit": "4de330d3c07752ac08cfa999c107c2cf08870560", "Url": "https://api.github.com/repos/DominikRidder/RTSProjekt", "Date": "2015-10-15T08:48:48Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (utilityHelper.isConnectedToInternet()) { setUpMapIfNeeded(); }else { android.widget.Toast.makeText(getApplicationContext(), \"The map could not be opened because of no internet connection.\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3449/buggy-version/app.src.main.java.org.gudim.android.jogger.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "07419c98bfc18688ab53a462829a7e2b2b5a26d8", "Url": "https://api.github.com/repos/MrGudim/Jogger", "Date": "2015-04-29T18:08:15Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(started)) { started = true; if (java.lang.System.getProperties().get(\"os.name\").equals(\"Linux\")) { game.enterState(MainScreenGameState.ID); }else { game.enterState(WindowGame.ID); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/934/buggy-version/src.View.LoadingScreen.java", "BodyUseAPI": [], "Fixed commit": "58f385ddea0930ee1d2dca4849caaa2d3b60da91", "Url": "https://api.github.com/repos/pbelabbes/Zombautomate", "Date": "2016-06-19T14:29:24Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.fml.relauncher.FMLLaunchHandler.side()) == (net.minecraftforge.fml.relauncher.Side.CLIENT)) { net.epoxide.surge.features.FeatureManager.featureHideUnseenEntities = net.epoxide.surge.features.FeatureManager.registerFeature(new net.epoxide.surge.features.rendering.FeatureHideUnseenEntities(), \"Hide Unseen Entities\", \"Prevents the rendering of entities that are not in view of the camera.\"); net.epoxide.surge.features.FeatureManager.featureGroupRenderCulling = net.epoxide.surge.features.FeatureManager.registerFeature(new net.epoxide.surge.features.rendering.FeatureGroupRenderCulling(), \"Group Render Culling\", \"Cuts down on the amount of entities rendered, when they are bunched together.\"); net.epoxide.surge.features.FeatureManager.featureHidePlayers = net.epoxide.surge.features.FeatureManager.registerFeature(new net.epoxide.surge.features.rendering.FeatureHidePlayer(), \"Hide Players\", \"Command to disable the rendering of other players on the client.\"); net.epoxide.surge.features.FeatureManager.featureRedstoneFix = net.epoxide.surge.features.FeatureManager.registerFeature(new net.epoxide.surge.features.bugfix.FeatureRedstoneFix(), \"Redstone Toggle Fix\", \"Fixes a memory leak with toggle state of redstone torches. MC-101233\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6498/buggy-version/src.main.java.net.epoxide.surge.features.FeatureManager.java", "BodyUseAPI": [], "Fixed commit": "18415735b14bb0c2c39b561d7434ac151afa0c3a", "Url": "https://api.github.com/repos/Epoxide-Software/Surge", "Date": "2016-08-01T09:48:53Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (fragmentToRemove != null) { getSupportFragmentManager().beginTransaction().remove(fragmentToRemove).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7907/buggy-version/app.src.main.java.pl.grudowska.pjwstk.homesecureagent.SensorScreenActivity.java", "BodyUseAPI": ["getSupportFragmentManager().beginTransaction().remove(fragmentToRemove).commit()", "getSupportFragmentManager().beginTransaction().remove(android.support.v4.app.Fragment)"], "Fixed commit": "0a2da0d200351eb595a111b29a5b3782476c59d3", "Url": "https://api.github.com/repos/ForestNymph/Android_HomeSecureAgent", "Date": "2015-08-01T11:10:28Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultObj.getInt(\"status\")) == 210) { java.lang.System.out.println(\"\u6ca1\u6709\u4fe1\u606f\"); pw.println(\"\u6ca1\u6709\u4fe1\u606f\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3754/buggy-version/src.main.java.verify_service.credit_check.java", "BodyUseAPI": [], "Fixed commit": "c08eac4db17d073014219e87b601d5e430456596", "Url": "https://api.github.com/repos/fanfannnmn/aliyun-id-verify", "Date": "2017-11-03T03:37:14Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getOppositeComponent()) != null) { if (((((((e.getOppositeComponent().equals(WishlistDialog.btnAggiungiAnime)) || (e.getOppositeComponent().equals(WishlistDialog.btnDeleteAnime))) || (e.getOppositeComponent().equals(WishlistDialog.btnID))) || (e.getOppositeComponent().equals(WishlistDialog.comboBox))) || (e.getOppositeComponent().equals(WishlistDialog.searchBar))) || (e.getOppositeComponent().equals(WishlistDialog.wishlist))) || (e.getOppositeComponent().equals(WishlistDialog.wishlistSearch))) { releaseDateField.requestFocus(); }else { releaseDateField.requestFocusInWindow(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8040/buggy-version/src.util.window.AnimeInformation.java", "BodyUseAPI": ["java.awt.event.FocusEvent.getOppositeComponent()", "java.awt.Component.equals(WishlistDialog.btnDeleteAnime)", "java.awt.Component.equals(WishlistDialog.comboBox)", "java.awt.event.FocusEvent.getOppositeComponent()", "java.awt.event.FocusEvent.getOppositeComponent()", "java.awt.event.FocusEvent.getOppositeComponent()", "java.awt.Component.equals(WishlistDialog.searchBar)", "java.awt.event.FocusEvent.getOppositeComponent()", "java.awt.Component.equals(WishlistDialog.wishlist)", "java.awt.event.FocusEvent.getOppositeComponent()", "java.awt.event.FocusEvent.getOppositeComponent()", "java.awt.Component.equals(WishlistDialog.wishlistSearch)", "java.awt.Component.equals(WishlistDialog.btnAggiungiAnime)", "java.awt.Component.equals(WishlistDialog.btnID)"], "Fixed commit": "2507cf86cbf0766acdcc3bb781f7cce7226647c1", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-29T21:21:57Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getDatetimes().get(2)) != null) { if ((task.getDatetimes().get(3)) != null) { if (slots.inBetween(task.getIntStartTime())) { return true; }else if (slots.inBetween(task.getIntEndTime())) { return true; } }else { if (slots.inBetween(task.getIntStartTime())) { return true; } } }else if ((task.getDatetimes().get(3)) != null) { if (slots.inBetween(task.getIntEndTime())) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/461/buggy-version/src.logic.AddTask.java", "BodyUseAPI": ["logic.IntegerPair.inBetween(task.getIntEndTime())", "task.getDatetimes().get(int)", "logic.Task.getIntStartTime()", "logic.IntegerPair.inBetween(task.getIntEndTime())", "logic.Task.getIntEndTime()", "logic.Task.getDatetimes()", "logic.IntegerPair.inBetween(task.getIntStartTime())", "task.getDatetimes().get(int)", "logic.IntegerPair.inBetween(task.getIntStartTime())", "logic.Task.getIntEndTime()", "logic.Task.getIntStartTime()", "logic.Task.getDatetimes()"], "Fixed commit": "cea17dba97d4c038cc292e08fcde228882cd8e35", "Url": "https://api.github.com/repos/cs2103jan2016-f14-1j/main", "Date": "2016-04-08T07:09:12Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(Obj instanceof oracle.sql.TIMESTAMP)) { row[i] = Obj; }else { java.util.Date date = null; try { date = new java.util.Date(((oracle.sql.TIMESTAMP) (Obj)).timestampValue().getTime()); row[i] = date; } catch (java.sql.SQLException e) { row[i] = Obj; e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/972/buggy-version/software.DynamicExtentions.src.java.edu.common.dynamicextensions.query.Query.java", "BodyUseAPI": [], "Fixed commit": "90956aa8dae6a86b9684b23a58d63214f6d01502", "Url": "https://api.github.com/repos/NCIP/catissue-dynamic-extensions", "Date": "2015-06-22T18:31:00Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.ehcache.Cache.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (element != null) user = ((com.jobook.account.pojo.SysUser) (element.getObjectValue()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/264/buggy-version/jobook-account.src.main.java.com.jobook.account.controller.SysUserController.java", "BodyUseAPI": ["net.sf.ehcache.Element.getObjectValue()"], "Fixed commit": "7ca4dcd85a67bba75734704e1da580a0c0fdcf5e", "Url": "https://api.github.com/repos/memorygh/Jobook", "Date": "2016-09-05T16:37:25Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((condition.getParamTypes()) != null) { try { return candidateDbo.getClass().getDeclaredMethod(methodName, condition.getParamTypes()); } catch (java.lang.NoSuchMethodException | java.lang.SecurityException e) { throw new org.toilelibre.libe.prime.PrimeException(((\"Problem with the method '\" + methodName) + \"'. Please check the syntax in your call.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5388/buggy-version/src.main.java.org.toilelibre.libe.prime.PrimeWhereMatcher.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getDeclaredMethod(java.lang.String,condition.getParamTypes())", "org.toilelibre.libe.prime.PrimeWhere.getParamTypes()"], "Fixed commit": "0d5f86e915ecb7174c77261b59c1df1af7848ea0", "Url": "https://api.github.com/repos/libetl/prime", "Date": "2016-02-19T21:00:32Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentValue) < 0) { this.currentValue = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5340/buggy-version/src.main.java.critters.genes.Gene.java", "BodyUseAPI": [], "Fixed commit": "92b1557d376d98b87de30c6f02bb17dd5ef11647", "Url": "https://api.github.com/repos/JKyte/ArtificialLife", "Date": "2016-06-23T21:54:08Z"},
{"Line": "=>1079", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((orgId.getBase()) instanceof org.osate.aadl2.FeatureGroup) { org.osate.aadl2.FeatureGroup featGroup = ((org.osate.aadl2.FeatureGroup) (orgId.getBase())); reverseDirection = featGroup.isInverse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/3230/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.analysis.src.com.rockwellcollins.atc.agree.analysis.AgreeAnnexEmitter.java", "BodyUseAPI": ["com.rockwellcollins.atc.agree.agree.NestedDotID.getBase()"], "Fixed commit": "466305daf99c2a60a01b6b07d72b28143df7d89d", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2014-03-31T13:58:57Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.animals.app.repository.AnimalRepository.getById(long)", "javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(session.getAttribute(com.animals.app.controller.resource.UserResource.SESSION_USER_ID).equals(java.lang.Integer.toString(animal.getUser().getId())))) { return UNAUTHORIZED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2344/buggy-version/AnimalWebApp.src.main.java.com.animals.app.controller.resource.UserResource.java", "BodyUseAPI": [], "Fixed commit": "362ea85eef8cfaf724ee1893f0953c4f82afe575", "Url": "https://api.github.com/repos/if-056-java/animalsRepo", "Date": "2015-09-26T21:53:41Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.parser.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (directory == null) { return new java.lang.Error(\"Missing directory. Syntax: MKDIR [directoryPath]\").execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7196/buggy-version/src.edu.wright.cs.jfiles.commands.Mkdir.java", "BodyUseAPI": [], "Fixed commit": "3332cb8238ddac16004cb3e34d5a57123b953b6a", "Url": "https://api.github.com/repos/rsanchez-wsu/jfiles", "Date": "2017-03-14T07:30:08Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((my_viewer.hour_modulus) == 4) { last_mod = ((int) (java.lang.Math.round((((2.0F / (java.lang.Math.PI)) * (new_angle)) + 1.0F)))); if ((last_mod) < 0) last_mod += 4; }else { last_mod = ((int) (java.lang.Math.round((((4.0F / (java.lang.Math.PI)) * (new_angle)) + 2.0F)))); if ((last_mod) < 0) last_mod += 8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/550/buggy-version/app.src.main.java.name.cantanima.chineseremainderclock.CRC_View_Ballsy.java", "BodyUseAPI": [], "Fixed commit": "e10080495523e5d4415eb6a4cf129da978e83b8f", "Url": "https://api.github.com/repos/johnperry-math/Chinese-Remainder-Clock", "Date": "2017-07-11T12:06:38Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_CANCELED)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4269/buggy-version/app.src.main.java.com.example.adsulliv.cpsc481project.CreateActivity.java", "BodyUseAPI": [], "Fixed commit": "609954e782eceee5aacdad03ba3567d1bd912cf8", "Url": "https://api.github.com/repos/JohnnySimmonds/CPSC481Project", "Date": "2016-11-14T21:48:56Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((name) != null) && ((version) != null)) { double browserVersion = java.lang.Double.parseDouble(version); if (((\"Mozilla\".equals(name)) && (browserVersion < 10)) || ((\"IE\".equals(name)) && (browserVersion < 10))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5528/buggy-version/central.plugins.org.jboss.tools.central.src.org.jboss.tools.central.internal.browser.VersionedBrowser.java", "BodyUseAPI": [], "Fixed commit": "0c0710b30bd2f9de7127b9217b8f598691f0fc5f", "Url": "https://api.github.com/repos/jbosstools/jbosstools-central", "Date": "2016-07-26T14:52:30Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBind) unbindService(serviceConnection);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1068/buggy-version/app.src.main.java.com.marketing.sign.aty.WorkActivity.java", "BodyUseAPI": [], "Fixed commit": "c94ca016c9e003abe86628b7f87cfdf86cb6bb42", "Url": "https://api.github.com/repos/shixueqiang/MarketingSign", "Date": "2017-07-06T15:43:07Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((id) != null) && ((finishedAt) == null)) { finishedAt = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2555/buggy-version/src.main.java.com.treasuredata.android.Session.java", "BodyUseAPI": [], "Fixed commit": "c5da8bfc71a9f4cb8440c8bfc16b6e333eaaa823", "Url": "https://api.github.com/repos/treasure-data/td-android-sdk", "Date": "2016-02-05T09:47:00Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (game.getPlayerUsernames().contains(username)) session.setAttribute(\"invalidUsername\", username);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5479/buggy-version/src.java.euchre.Controller.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "3c237fd93aff054e1158b2fb7e87a316e065dfdb", "Url": "https://api.github.com/repos/zachjwheeler/gccweb", "Date": "2013-12-09T21:00:37Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!allowEmpty) { return ((values.size()) == (this.availableValues.size())) && (sum == (this.sumMatch)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8370/buggy-version/src.main.java.com.game.shudu.ShuDu.java", "BodyUseAPI": [], "Fixed commit": "c11db6beaaafa62caaefb21006c37e2499411706", "Url": "https://api.github.com/repos/justbeay/smallGames", "Date": "2017-09-10T14:25:30Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isFull()) == false) { stock.add(book); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1546/buggy-version/Library.java", "BodyUseAPI": [], "Fixed commit": "95204edaa31906e094be309720e8a9e8c688821c", "Url": "https://api.github.com/repos/Justafigurehead/Library", "Date": "2017-02-14T10:06:38Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.nio.charset.Charset.isSupported(charsetMS)) { return charsetMS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6489/buggy-version/src.main.java.jline.WindowsTerminal.java", "BodyUseAPI": [], "Fixed commit": "66ff63a7b6fcadba3d4f611a1f8aad170273fcde", "Url": "https://api.github.com/repos/fantasy86/jline2", "Date": "2014-05-08T03:11:44Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.nio.charset.Charset.isSupported(charsetCP)) { return charsetCP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/6489/buggy-version/src.main.java.jline.WindowsTerminal.java", "BodyUseAPI": [], "Fixed commit": "66ff63a7b6fcadba3d4f611a1f8aad170273fcde", "Url": "https://api.github.com/repos/fantasy86/jline2", "Date": "2014-05-08T03:11:44Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tags.size()) > 0) { tagSelectedText.delete(((tagSelectedText.length()) - 2), tagSelectedText.length()); adapter = new android.widget.ArrayAdapter<java.lang.String>(tagEditor.getContext(), android.R.layout.simple_spinner_item, new java.lang.String[]{ tagSelectedText.toString() }); }else { adapter = new android.widget.ArrayAdapter<java.lang.String>(tagEditor.getContext(), android.R.layout.simple_spinner_item, new java.lang.String[]{ i18n.string(R.string.label_select_tag) }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7079/buggy-version/dailymoney.src.com.bottleworks.dailymoney.ui.DetailEditorActivity.java", "BodyUseAPI": [], "Fixed commit": "5b5b2151d6cadffc065e7c006c8ea9451d56e5bd", "Url": "https://api.github.com/repos/LancelotLiu/daily-money-1", "Date": "2012-12-18T14:51:36Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((address.trim().length()) > 0) internetAddresses.add(new javax.mail.internet.InternetAddress(address));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5536/buggy-version/src.main.java.hudson.plugins.emailext.EmailRecepientUtils.java", "BodyUseAPI": ["java.util.Set<javax.mail.internet.InternetAddress>.add(javax.mail.internet.InternetAddress)"], "Fixed commit": "dfeae6cff84f106d1ed3481f7ceac9b904d6286f", "Url": "https://api.github.com/repos/jenkinsci/email-ext-plugin", "Date": "2011-05-20T04:44:24Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (manager == null) { org.guanxi.idp.service.saml2.WebBrowserSSOAuthHandler.logger.error((\"no metadata for \" + entityID)); request.setAttribute(\"wbsso-handler-error-message\", messageSource.getMessage(\"sp.not.supported\", new java.lang.Object[]{ entityID }, request.getLocale())); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7688/buggy-version/src.main.java.org.guanxi.idp.service.saml2.WebBrowserSSOAuthHandler.java", "BodyUseAPI": [], "Fixed commit": "bceedc9d8ac7578858bd8787d81b0b2ee7e3475f", "Url": "https://api.github.com/repos/guanxi/guanxi-idp", "Date": "2011-03-24T15:04:20Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tiles.get(i).getToken()) == null) { java.lang.System.out.print(\" \"); }else if (!(tiles.get(i).getToken().isFaceUp())) { java.lang.System.out.print(\"## \"); }else { java.lang.System.out.print(((tiles.get(i).getToken().abbreviate()) + \" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2065/buggy-version/Code.src.Board.java", "BodyUseAPI": ["tiles.get(i).getToken()", "tiles.get(i).getToken()", "tiles.get(i).getToken().isFaceUp()", "java.io.PrintStream.print(((tiles.get(i).getToken().abbreviate()) + \" \"))", "java.util.ArrayList<Tile>.get(int)", "tiles.get(i).getToken().abbreviate()", "java.util.ArrayList<Tile>.get(int)"], "Fixed commit": "ed5d3a5c276628603a82a3a377904411a7f080a4", "Url": "https://api.github.com/repos/NickWaltCSU/cs414-f17-301-UltraLiteCoding", "Date": "2017-10-19T20:35:31Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.healthit.chpl.dao.DeveloperDAO.getTransparencyMapping(developer.getId(),certificationBody.getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((mapping == null) && (!(org.springframework.util.StringUtils.isEmpty(product.getTransparencyAttestation())))) { product.getWarningMessages().add(\"The transparency attestation for the developer is different in the system than in the upload file. This value will be overwritten by what is in the upload file if you proceed.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/920/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.certifiedProduct.validation.CertifiedProductValidatorImpl.java", "BodyUseAPI": ["product.getWarningMessages().add(java.lang.String)", "gov.healthit.chpl.dto.PendingCertifiedProductDTO.getWarningMessages()"], "Fixed commit": "6235b4bf7040fb1b9eab827e531a52daf9c62f57", "Url": "https://api.github.com/repos/chpladmin/chpl-api", "Date": "2016-03-30T19:31:49Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arg.endsWith(\"\\\"\")) { part.append(arg.substring(1, ((arg.length()) - 1))); }else { part.append(arg.substring(1, arg.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/8561/buggy-version/src.edu.wright.cs.jfiles.commands.Parser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "6f6b74583c78a48ec34a514ddcb558ba996517c2", "Url": "https://api.github.com/repos/rsanchez-wsu/jfiles", "Date": "2017-03-16T17:27:26Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (backPressedOnce) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7571/buggy-version/source-code.app.src.main.java.org.buildmlearn.toolkit.activity.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "6b5ea201e4dfeb023923142716a0f7a2b4fb9464", "Url": "https://api.github.com/repos/codingblazer/BuildmLearn-Toolkit-Android", "Date": "2016-12-04T11:53:08Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, shuntingyard.FunctionToken>.get(f.getTokenString())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (prevF != null) { if (((prevF.getDeclaration()) != null) && ((prevF.getDeclaration().getJumpTarget()) != null)) { int posInBytecode = functionByteCode.indexOf(prevF.getDeclaration().getJumpTarget()); if (posInBytecode != (-1)) { java.lang.System.out.println((\"Recompiling previously defined function: \" + (prevF.getTokenString()))); f.getDeclaration().jtbct = prevF.getDeclaration().getJumpTarget(); for (int i = posInBytecode; i >= 0; i--) { shuntingyard.Token currentToken = functionByteCode.get(i); if (currentToken instanceof shuntingyard.EndFunctionLineToken) { functionByteCode.set(i, null); break; } functionByteCode.set(i, null); } java.util.ListIterator li = functionByteCode.listIterator(); while (li.hasNext()) { java.lang.Object o = li.next(); if (o == null) { li.remove(); } } }else { java.lang.System.out.println((\"Warning, overwrote a function, which was duplicitely defined: \" + (prevF.getTokenString()))); } } }else { java.lang.System.out.println((\"Adding a function: \" + (f.getTokenString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/7445/buggy-version/src.shuntingyard.Compiler.java", "BodyUseAPI": ["java.io.PrintStream.println((\"Warning, overwrote a function, which was duplicitely defined: \" + (prevF.getTokenString())))", "prevF.getDeclaration().getJumpTarget()", "java.io.PrintStream.println((\"Recompiling previously defined function: \" + (prevF.getTokenString())))", "shuntingyard.FunctionToken.getTokenString()", "java.util.LinkedList<shuntingyard.Token>.indexOf(prevF.getDeclaration().getJumpTarget())", "prevF.getDeclaration().getJumpTarget()", "shuntingyard.FunctionToken.getDeclaration()", "prevF.getDeclaration().getJumpTarget()", "shuntingyard.FunctionToken.getDeclaration()", "shuntingyard.FunctionToken.getTokenString()", "shuntingyard.FunctionToken.getDeclaration()", "shuntingyard.FunctionToken.getDeclaration()"], "Fixed commit": "0aeec561d759b70d8e8c0b7b3804689721075646", "Url": "https://api.github.com/repos/thegoodhen/Instrumentation-platform-Language", "Date": "2017-03-05T12:09:28Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isPrimaryCallActive())) { ui.setPrimaryCallElapsedTime(false, 0); mCallTimer.cancel(); }else { final long connectTime = mPrimary.getConnectTimeMillis(); if (connectTime > 0) { ui.setPrimaryCallElapsedTime(true, mPrimary.getCallDuration()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/4440/buggy-version/InCallUI.src.com.android.incallui.CallCardPresenter.java", "BodyUseAPI": [], "Fixed commit": "92ea8c127ffa8364cd46023a493d5320c862b01d", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Dialer", "Date": "2017-01-12T06:15:54Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cb == null) { return _genPlainText(((java.lang.Void) (null))); }else if (cb instanceof java.lang.Object) { return _genPlainText(((java.lang.Object) (cb))); }else { throw new java.lang.IllegalArgumentException((\"Unhandled parameter types: \" + (java.util.Arrays.<java.lang.Object>asList(cb).toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/5908/buggy-version/org.eclipse.xtext.xdoc.xtend-gen.org.eclipse.xtext.xdoc.generator.PlainText.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.toString()", "java.util.Arrays.asList(java.lang.Object)"], "Fixed commit": "648f8cab3dd9020e3a639c484d134b6ebe8146ed", "Url": "https://api.github.com/repos/RvonMassow/xDoc", "Date": "2011-07-15T10:46:23Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (minimalHeightFittingProduct == null) { minimalHeightFittingProduct = product; }else if ((product.getHeight()) <= (minimalHeightFittingProduct.getHeight())) { if ((product.getHeight()) < (minimalHeightFittingProduct.getHeight())) { minimalHeightFittingProduct = product; }else if ((java.lang.Integer.parseInt(java.lang.String.valueOf(product.getMassstab()))) < (java.lang.Integer.parseInt(java.lang.String.valueOf(minimalHeightFittingProduct.getMassstab())))) { minimalHeightFittingProduct = product; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1018/buggy-version/src.main.java.de.cismet.cids.custom.utils.vermessungsunterlagen.tasks.VermUntTaskAPUebersicht.java", "BodyUseAPI": ["de.cismet.cids.custom.utils.alkis.AlkisProductDescription.getHeight()", "de.cismet.cids.custom.utils.alkis.AlkisProductDescription.getHeight()"], "Fixed commit": "76a3262a258c917c08d8e09aec64e3553676fee9", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal-server", "Date": "2016-10-06T16:21:02Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (minimalWidthFittingProduct == null) { minimalWidthFittingProduct = product; }else if ((product.getWidth()) <= (minimalWidthFittingProduct.getWidth())) { if ((product.getWidth()) < (minimalWidthFittingProduct.getWidth())) { minimalWidthFittingProduct = product; }else if ((java.lang.Integer.parseInt(java.lang.String.valueOf(product.getMassstab()))) < (java.lang.Integer.parseInt(java.lang.String.valueOf(minimalHeightFittingProduct.getMassstab())))) { minimalWidthFittingProduct = product; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1018/buggy-version/src.main.java.de.cismet.cids.custom.utils.vermessungsunterlagen.tasks.VermUntTaskAPUebersicht.java", "BodyUseAPI": ["de.cismet.cids.custom.utils.alkis.AlkisProductDescription.getWidth()", "de.cismet.cids.custom.utils.alkis.AlkisProductDescription.getWidth()"], "Fixed commit": "76a3262a258c917c08d8e09aec64e3553676fee9", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal-server", "Date": "2016-10-06T16:21:02Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMinimalWidthHoch) { return minimalWidthFittingProduct; }else { return minimalHeightFittingProduct; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/1018/buggy-version/src.main.java.de.cismet.cids.custom.utils.vermessungsunterlagen.tasks.VermUntTaskAPUebersicht.java", "BodyUseAPI": [], "Fixed commit": "76a3262a258c917c08d8e09aec64e3553676fee9", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal-server", "Date": "2016-10-06T16:21:02Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((customer != null) && (movie != null)) { long bonusPoints = calculateBonusPoints(movie.getMovieType()); customer.addBonusPoints(bonusPoints); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V121/2547/buggy-version/src.main.java.ee.meriloo.services.SimpleBonusPointsService.java", "BodyUseAPI": ["ee.meriloo.items.Movie.getMovieType()", "ee.meriloo.clients.BonusPointable.addBonusPoints(long)", "ee.meriloo.services.SimpleBonusPointsService.calculateBonusPoints(movie.getMovieType())"], "Fixed commit": "88fdfabe6db30163059832fa7d00dac8ce811493", "Url": "https://api.github.com/repos/lauriloo/videorental", "Date": "2015-10-15T20:25:31Z"}]}
