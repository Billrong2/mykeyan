{"UNKNOWN to If":[{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (intentOpen != null) { intentOpen.addCategory(Intent.CATEGORY_LAUNCHER); startActivity(intentOpen); }else { android.widget.Toast.makeText(mActivity, getString(R.string.message_error_open), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1881/buggy-version/permission.src.org.androidsoft.app.permission.ui.ApplicationFragment.java", "BodyUseAPI": ["android.content.Intent.addCategory(Intent.CATEGORY_LAUNCHER)", "org.androidsoft.app.permission.ui.ApplicationFragment.startActivity(android.content.Intent)"], "Fixed commit": "3b8eea7d2e4b801b117f870a4d3a08bdf86e166f", "Url": "https://api.github.com/repos/androidsoft-org/permission", "Date": "2011-12-05T01:23:35Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (intentGoToMarket != null) { startActivity(intentGoToMarket); }else { android.widget.Toast.makeText(mActivity, getString(R.string.message_error_market), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1881/buggy-version/permission.src.org.androidsoft.app.permission.ui.ApplicationFragment.java", "BodyUseAPI": ["org.androidsoft.app.permission.ui.ApplicationFragment.startActivity(android.content.Intent)"], "Fixed commit": "3b8eea7d2e4b801b117f870a4d3a08bdf86e166f", "Url": "https://api.github.com/repos/androidsoft-org/permission", "Date": "2011-12-05T01:23:35Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(edu.uml.cs.isense.riverwalk.Main.api.hasConnectivity())) { experimentNum = \"-1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3700/buggy-version/Android.River_Walk_Pictures.src.edu.uml.cs.isense.riverwalk.Main.java", "BodyUseAPI": [], "Fixed commit": "9e52531dd67f4f9dbc3d65cfdec245fc09e19317", "Url": "https://api.github.com/repos/bdonald25/iSENSE-Hardware", "Date": "2013-10-28T17:50:12Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File((((filepath) + nameLoad) + \".properties\")).exists())) nameLoad = \"birthday\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2771/buggy-version/src.main.java.bots.CalendarBot.CalendarBirthday.java", "BodyUseAPI": [], "Fixed commit": "46f77b56ed6ffb96d215e06ec76824a24f69f0d4", "Url": "https://api.github.com/repos/Vinpasso/BridgeMPP-Bot", "Date": "2016-05-12T14:20:56Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((facesInfo.trim().length()) > 0) { output.collect(key, new Text(combinedInfo)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5717/buggy-version/src.Geocoder.java", "BodyUseAPI": [], "Fixed commit": "a23d065aad498448efdbdbebc39c8f13afc4949a", "Url": "https://api.github.com/repos/aratabekov/GeocodingParser", "Date": "2014-12-11T08:38:56Z"},
{"Line": "=>1537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(thb03a.isChecked())) { sHB.put(\"thb05\", thb05.getSelectedItem().toString()); sHB.put(\"thb05Serial\", childsMap.get(thb05.getSelectedItem().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7009/buggy-version/app.src.main.java.edu.aku.hassannaqvi.uen_tmk.activities.SectionHBActivity.java", "BodyUseAPI": [], "Fixed commit": "61c0dba8f13104c2fc717b6e5c8b280f713a44dc", "Url": "https://api.github.com/repos/shznaqvi/UEN-TMK", "Date": "2017-09-18T09:21:24Z"},
{"Line": "=>1512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tha01a.isChecked())) { sHA.put(\"tha03\", tha03.getSelectedItem().toString()); sHA.put(\"tha03Serial\", childsMap.get(tha03.getSelectedItem().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7009/buggy-version/app.src.main.java.edu.aku.hassannaqvi.uen_tmk.activities.SectionHAActivity.java", "BodyUseAPI": [], "Fixed commit": "61c0dba8f13104c2fc717b6e5c8b280f713a44dc", "Url": "https://api.github.com/repos/shznaqvi/UEN-TMK", "Date": "2017-09-18T09:21:24Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((savedGames.getItemCount()) > 0) { it.mat.unical.Helion_Prime.SavesManager.PlayerState playerstate = it.mat.unical.Helion_Prime.SavesManager.PlayerState.getInstance().loadProfile(userField.getText(), ((java.sql.Timestamp) (savedGames.getSelectedItem()))); score.setText(java.lang.String.valueOf(playerstate.getScore())); bulletsGun1.setText(java.lang.String.valueOf(playerstate.getGunBullets1())); bulletsGun2.setText(java.lang.String.valueOf(playerstate.getGunBullets2())); bulletsGun3.setText(java.lang.String.valueOf(playerstate.getGunBullets3())); bulletsGun4.setText(java.lang.String.valueOf(playerstate.getGunBullets4())); }else { score.setText(\"0\"); bulletsGun1.setText(\"0\"); bulletsGun2.setText(\"0\"); bulletsGun3.setText(\"0\"); bulletsGun4.setText(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1386/buggy-version/src.it.mat.unical.Helion_Prime.GFX.LoginPanel.java", "BodyUseAPI": ["it.mat.unical.Helion_Prime.SavesManager.PlayerState.getInstance().loadProfile(java.lang.String,java.lang.Object)", "javax.swing.JComboBox<java.sql.Timestamp>.getSelectedItem()"], "Fixed commit": "be10062ce93f06418d2bcde5828adc67dd7ec89c", "Url": "https://api.github.com/repos/edge33/HelionPrime", "Date": "2014-05-14T14:49:15Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((intArray.length) > 0) sparkline_horizontal.addComponent(new dk.trustworks.adminportal.component.SparklineChart(\"income per day\", \"kkr\", \"today \", new com.vaadin.addon.charts.model.style.SolidColor(\"#AAAA00\"), intArray));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7840/buggy-version/adminportal.src.main.java.dk.trustworks.adminportal.view.DashboardDesign.java", "BodyUseAPI": [], "Fixed commit": "f935cb33ab328d9f69d54499efa070af0814a4b7", "Url": "https://api.github.com/repos/dabster2000/TrustWorksMicroservices", "Date": "2016-03-05T07:51:35Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (database.isEncrypted()) { if (passwordIsRight(password)) database.delItem(link); else throw new com.company.structures.Exceptions.InvalidPasswordException(\"Invalid password!\"); }else { database.delItem(link); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2299/buggy-version/src.com.company.structures.DatabaseControl.java", "BodyUseAPI": ["com.company.structures.Database.delItem(java.lang.String)", "com.company.structures.Database.delItem(java.lang.String)"], "Fixed commit": "6ea8e2bb9cdb2ec219598f0d8d223eb751015f8c", "Url": "https://api.github.com/repos/karashevich/passman", "Date": "2014-08-22T12:04:51Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isServiceRunning(com.phonemap.phonemap.services.Controller.class))) { startService(new android.content.Intent(this, com.phonemap.phonemap.services.Controller.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6421/buggy-version/PhoneMapAndroid.app.src.main.java.com.phonemap.phonemap.MainActivity.java", "BodyUseAPI": ["com.phonemap.phonemap.MainActivity.startService(android.content.Intent)"], "Fixed commit": "1e8f7b65db4c5b70b76ee503e6fd4aa7c9c25003", "Url": "https://api.github.com/repos/PhoneMapWebApps/PhoneMapAndroid", "Date": "2017-05-26T12:15:07Z"},
{"Line": "=>1244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.magnet.mmx.server.plugin.mmxmgmt.util.DBUtil.getTopicItemDAO().findById(request.getMessageId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.magnet.mmx.server.plugin.mmxmgmt.util.JIDUtil.getAppId(entity.getNodeId()).equals(request.getAppId()))) { response.setCode(ErrorCode.ILLEGAL_ARGUMENT.getCode()); response.setMessage(\"Message id and app id mismatch\"); return com.magnet.mmx.server.api.v1.RestUtils.getOKJAXRSResp(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6553/buggy-version/server.plugins.mmxmgmt.src.main.java.com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.IntegrationChannelResource.java", "BodyUseAPI": [], "Fixed commit": "62be451c8b2069a1d6a8dfa94eeb9da8bd3cf47b", "Url": "https://api.github.com/repos/magnetsystems/message-server", "Date": "2016-03-05T01:04:03Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(player.worldObj.isDaytime())) && (net.machinemuse.utils.MusePlayerUtils.getBiome(player).biomeName.equals(\"Desert\"))) { cool += 0.8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6104/buggy-version/src.minecraft.net.machinemuse.utils.MusePlayerUtils.java", "BodyUseAPI": [], "Fixed commit": "c4ea42b9170daf071cd53d299641dc2f6c008ed9", "Url": "https://api.github.com/repos/MachineMuse/MachineMusePowersuits", "Date": "2013-05-03T16:14:06Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((int) (player.posY)) > 128) { cool += 0.5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6104/buggy-version/src.minecraft.net.machinemuse.utils.MusePlayerUtils.java", "BodyUseAPI": [], "Fixed commit": "c4ea42b9170daf071cd53d299641dc2f6c008ed9", "Url": "https://api.github.com/repos/MachineMuse/MachineMusePowersuits", "Date": "2013-05-03T16:14:06Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getString(context.getResources().getIdentifier(\"quick_settings_tiles_default\", \"string\", XposedHook.PACKAGE_SYSTEMUI)).split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((availableSpecs.length) == 1) && (availableSpecs[0].equals(\"default\"))) throw new java.lang.Throwable();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2763/buggy-version/app.src.main.java.tk.wasdennnoch.androidn_ify.systemui.qs.QSTileHostHooks.java", "BodyUseAPI": [], "Fixed commit": "b1ba0ab40c949dcbe6a8c0ba153514d20b7b16af", "Url": "https://api.github.com/repos/wasdennnoch/AndroidN-ify", "Date": "2016-10-24T17:13:19Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(st.hasMoreTokens())) { throw new java.lang.IllegalArgumentException(\"Attempting to scan invalid header\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1441/buggy-version/src.com.meterware.httpunit.HttpUnitUtils.java", "BodyUseAPI": [], "Fixed commit": "cad8dc562341a7129cdac758e2af365ad369af87", "Url": "https://api.github.com/repos/emopers/httpunit", "Date": "2015-10-21T17:51:03Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((zoom) == 0) { init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6249/buggy-version/src.com.aaronncfca.jgrapherandroid.GraphPanel.java", "BodyUseAPI": [], "Fixed commit": "ee2f6566bf24f96fd231bef98f7b5d65e3366ca6", "Url": "https://api.github.com/repos/aaronncfca/jgrapherandroid", "Date": "2014-05-06T00:11:11Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bahmni.csv.column.CSVColumns<T>.getPosition(headerAnnotation.name(),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (headerColumnValueNotFoundForMandatoryColumn(aRow, position)) throw new org.bahmni.csv.exception.MigrationException((\"No Value found in the csv file for the column \" + (headerAnnotation.name())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2346/buggy-version/bahmni-migrator.src.main.java.org.bahmni.csv.column.CSVColumns.java", "BodyUseAPI": [], "Fixed commit": "6f3d15169ab8335c2b011a4a8a0a3788e7166df7", "Url": "https://api.github.com/repos/Bahmni/bahmni-java-utils", "Date": "2016-09-02T12:10:20Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mmOutputStream) != null) { try { mmOutputStream.write(cmd); } catch (java.io.IOException e) { android.util.Log.e(com.maeg3060.maeg3060.application.USBApplication.TAG, \"write failed\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/755/buggy-version/MAEG3060.app.src.main.java.com.maeg3060.maeg3060.application.UsbApplication.java", "BodyUseAPI": [], "Fixed commit": "1d170723971d7018edba6102cf1477141cdd6567", "Url": "https://api.github.com/repos/Sam-C/MAEG3060", "Date": "2017-09-07T10:43:05Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numOfResultsOfEachSat == 0) { numOfResultsOfEachSat = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5645/buggy-version/gnssws.WEB-INF.src.org.braincopy.ws.gnss.AzimuthAndElevationResource.java", "BodyUseAPI": [], "Fixed commit": "ee8642a5d6e800897154050fb84d10025c4f757d", "Url": "https://api.github.com/repos/tateshitah/gnssfinder", "Date": "2014-04-20T01:18:12Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((status == (UNCOVERED)) && ((boardStatus[y][x]) != (UNCOVERED))) { exoandIf0(x, y); }else if (status == (COVERED)) { boardStatus[y][x] = COVERED; }else { java.lang.System.out.println(\"Can't do that\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5525/buggy-version/src.minesweeper.Board.java", "BodyUseAPI": ["minesweeper.Board.exoandIf0(int,int)"], "Fixed commit": "c369dee67d22ae6c6aa02ee0f7b6d6063599b05c", "Url": "https://api.github.com/repos/shiera/minesweeper", "Date": "2013-06-13T21:03:26Z"},
{"Line": "=>1709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<?>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((aObj[29]) != null) { aJobShippingBean.setCreditUsed(((java.lang.String) (aObj[29]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1376/buggy-version/turbotracker.src.main.java.com.turborep.turbotracker.job.service.JobServiceImpl.java", "BodyUseAPI": ["com.turborep.turbotracker.job.dao.JobShippingBean.setCreditUsed(java.lang.Object)"], "Fixed commit": "ebd605568eb7d2f0551e2b4e0efb37eb9dabcf58", "Url": "https://api.github.com/repos/SenthilRaju/AandETurboPro", "Date": "2017-01-12T13:23:59Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSharedPreferences(SeekbarActivity.NOTIPREFS, Context.MODE_PRIVATE).getInt(SeekbarActivity.NOTIINT,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (progress != 0) startService(notiIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1651/buggy-version/snowman.src.com.androidstudio.snowman.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d69330105069d919a305d785c2ab22ad83593b2c", "Url": "https://api.github.com/repos/dal052/snowman", "Date": "2014-03-31T22:22:00Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mArticleList) == null) || (position >= (mArticleList.size()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7862/buggy-version/app.src.main.java.com.feeder.android.view.articlelist.ArticleAdapter.java", "BodyUseAPI": [], "Fixed commit": "b347e3ea9545ec166f9f17cdb8e94b743398c83e", "Url": "https://api.github.com/repos/zhangsr/Feeder2", "Date": "2016-12-07T14:09:24Z"},
{"Line": "=>837", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tigase.xmpp.XMPPIOServiceListener.xmppStreamOpened(tigase.xmpp.XMPPIOService<RefObject>,java.util.Map<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (response == null) { if (writeInProgress.tryLock()) { try { writeRawData(response); processWaitingPackets(); } finally { writeInProgress.unlock(); } } }else { writeInProgress.lock(); try { writeRawData(response); processWaitingPackets(); } finally { writeInProgress.unlock(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3889/buggy-version/src.main.java.tigase.xmpp.XMPPIOService.java", "BodyUseAPI": ["tigase.xmpp.XMPPIOService<RefObject>.writeRawData(java.lang.String)", "tigase.xmpp.XMPPIOService<RefObject>.writeRawData(java.lang.String)"], "Fixed commit": "e3b18a732ae184318d93e0c5e5eae1cf2a191255", "Url": "https://api.github.com/repos/wwjiang007/tigase-server", "Date": "2017-07-11T17:33:47Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTablet())) { drawerToggle.onConfigurationChanged(newConfig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8947/buggy-version/app.src.main.java.com.donnfelker.android.bootstrap.ui.NavigationDrawerFragment.java", "BodyUseAPI": [], "Fixed commit": "0b10cb9b50dc929b45fa7ac6997beb5412a4b13c", "Url": "https://api.github.com/repos/danielkutik/android-bootstrap", "Date": "2013-11-12T16:51:37Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d != null) { httpOpts.postData = new org.apache.http.client.entity.UrlEncodedFormEntity(d, \"ISO-8859-15\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1812/buggy-version/src.de.ub0r.android.websms.connector.sms77.ConnectorSms77.java", "BodyUseAPI": [], "Fixed commit": "7b0b3a270b44aa694cbd14a402c10044495100dd", "Url": "https://api.github.com/repos/felixb/websms-connector-sms77", "Date": "2012-05-15T17:14:02Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wilson.world.manager.CharManager.getInstance().getSkillPoints()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (skillpoints < 1) { return org.wilson.world.api.util.APIResultUtils.buildJSONResponse(org.wilson.world.api.util.APIResultUtils.buildErrorAPIResult(\"No enough skill points.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/983/buggy-version/src.main.java.org.wilson.world.api.TrainerAPI.java", "BodyUseAPI": [], "Fixed commit": "6a9f15f7d5350c470e3703b66ea642865d04b3c1", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2016-12-06T09:09:34Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msg.obj) != null) { java.lang.String encrypted = ((java.lang.String) (msg.obj)); java.lang.String hash = com.jtschohl.androidfirewall.MainActivity.md5(encrypted); if (!(pwd.equals(hash))) { requestPassword(pwd); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1088/buggy-version/src.com.jtschohl.androidfirewall.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9a38ce4bb2d5fa0bbf769789dc43079c9b63133d", "Url": "https://api.github.com/repos/iptux/android_packages_apps_Firewall", "Date": "2013-01-16T17:36:19Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isSecured) { return \"NONE\"; }else { java.lang.String scope = split[2]; return scope.toUpperCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/400/buggy-version/src.main.java.de.bahr.AuthorizationInterceptor.java", "BodyUseAPI": [], "Fixed commit": "58671c1047ada8320175b4adfc69b13f835f0ab1", "Url": "https://api.github.com/repos/bahrmichael/horde-delivery-backend", "Date": "2016-11-05T17:43:10Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectedAirplane.getVelocity()) != null) { font.draw(batch, (((int) (com.icarus.project.PIScreen.toMeters(selectedAirplane.getVelocity().len()))) + \"m/s\"), ((Gdx.graphics.getWidth()) - ((3.0F / 8.0F) * statusWidth)), ((Gdx.graphics.getHeight()) - ((3 * (font.getLineHeight())) / 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/895/buggy-version/core.src.com.icarus.project.MainUi.java", "BodyUseAPI": ["com.badlogic.gdx.graphics.g2d.BitmapFont.draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.String,((Gdx.graphics.getWidth()) - ((3.0F / 8.0F) * statusWidth)),((Gdx.graphics.getHeight()) - ((3 * (font.getLineHeight())) / 2)))", "com.icarus.project.PIScreen.toMeters(selectedAirplane.getVelocity().len())", "selectedAirplane.getVelocity().len()", "com.icarus.project.Airplane.getVelocity()"], "Fixed commit": "bb94b0ec6028d76c99be1622c9579fadef869ad4", "Url": "https://api.github.com/repos/project-icarus/icarus-atc", "Date": "2017-05-19T17:08:32Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.polito.mad17.madmax.entities.Group.getCurrencyBalances()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (balances != null) { for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry : balances.entrySet()) { android.util.Log.d(com.polito.mad17.madmax.utilities.FirebaseUtils.TAG, (((entry.getKey()) + \" \") + (entry.getValue()))); if ((entry.getValue()) < 0) debt = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2766/buggy-version/app.src.main.java.com.polito.mad17.madmax.utilities.FirebaseUtils.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Double>.entrySet()"], "Fixed commit": "283102bc06124e52523c28fa925fa6ea058c86f0", "Url": "https://api.github.com/repos/deviz92/MadMax", "Date": "2017-06-07T17:14:04Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getServletContext().getContextPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(contextPath))) { javax.servlet.http.Cookie newCookie = new javax.servlet.http.Cookie(pt.ist.bennu.core.filters.ContextPathFilter.CONTEXT_PATH_COOKIE_NAME, contextPath); newCookie.setPath(\"/\"); httpServletResponse.addCookie(newCookie); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2599/buggy-version/server.bennu-core.src.main.java.pt.ist.bennu.core.filters.ContextPathFilter.java", "BodyUseAPI": [], "Fixed commit": "f0f10e39e41e3ced117dcb9b27acbc291086c940", "Url": "https://api.github.com/repos/pedrosan7os/bennu", "Date": "2013-09-23T17:15:58Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (match == (Match.DEFAULT_SERVLET)) { pathInfo = servletPath; servletPath = org.eclipse.equinox.http.servlet.internal.util.Const.SLASH; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3566/buggy-version/bundles.org.eclipse.equinox.http.servlet.src.org.eclipse.equinox.http.servlet.internal.HttpServiceRuntimeImpl.java", "BodyUseAPI": [], "Fixed commit": "4120a581932ff2f31a4666f54b2add6a55372537", "Url": "https://api.github.com/repos/rotty3000/rt.equinox.bundles", "Date": "2014-07-18T22:48:12Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphMethod) == (i5.las2peer.services.recommender.graphs.GraphBuilder.GraphConstructionMethod.TAGS)) { userTagTableCBin = tagDataCBins(userTagTable); itemTagTableCBin = tagDataCBins(itemTagTable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3880/buggy-version/src.main.i5.las2peer.services.recommender.librec.rating.TimeComNeighSVD.java", "BodyUseAPI": [], "Fixed commit": "3010ac02e904703e1e99db7ac63e494e1286458e", "Url": "https://api.github.com/repos/martinb741/Recommender", "Date": "2016-10-06T19:13:24Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((jarFile.exists()) && (!(jarFile.isDirectory()))) { readConfig(new java.io.FileInputStream(new java.io.File(jarFile.getParent(), path))); }else { readConfig(new java.io.FileInputStream(path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6220/buggy-version/tygron-environment.src.main.java.nl.tudelft.contextproject.tygron.SettingsLoader.java", "BodyUseAPI": [], "Fixed commit": "2c0176c0ae6c0b1c53505ee8274bdfbade07a6f3", "Url": "https://api.github.com/repos/tygron-virtual-humans/tygron-connect", "Date": "2015-05-20T11:30:01Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getConfig().getString(\"newsmessage\")) == null) { getConfig().set(\"newsmessage\", ((org.bukkit.ChatColor.GRAY) + \"Is this a new server? Do /news set <msg>\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2856/buggy-version/src.com.worldciv.the60th.MainTorch.java", "BodyUseAPI": [], "Fixed commit": "def400f830a578130672c5ac2fe83fa06f8f6023", "Url": "https://api.github.com/repos/The60th/Torch-Light", "Date": "2017-10-06T00:26:45Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position != 0) de.oerntec.votenote.MainDialogHelper.showChangeLessonDialog(((de.oerntec.votenote.MainActivity) (getActivity())), mSubjectId, ((java.lang.Integer) (view.getTag())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1937/buggy-version/app.src.main.java.de.oerntec.votenote.SubjectFragmentStuff.LessonFragment.java", "BodyUseAPI": [], "Fixed commit": "856f8e2682cdee5e87776567472e44c972c14381", "Url": "https://api.github.com/repos/enra64/Votenote", "Date": "2015-07-10T21:06:13Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((dwCRC) != dwComputedCRC) { throw new java.lang.IllegalArgumentException((((\"dwCRC = \" + (dwCRC)) + \" <> dwComputedCRC = \") + dwComputedCRC)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7092/buggy-version/src.main.java.org.pipoware.pst.exp.Page.java", "BodyUseAPI": [], "Fixed commit": "0b6717d112ce590b5e6fcfc85f7f4aba65f1d394", "Url": "https://api.github.com/repos/farnulfo/pst-exp", "Date": "2015-09-14T20:40:38Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cls.isAbstract()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/956/buggy-version/experimental.uw.star.rts.analysis.QDoxJavaParser.java", "BodyUseAPI": [], "Fixed commit": "07c42589b6a1d525ff2ab0df5c0544953413df64", "Url": "https://api.github.com/repos/javaelk/ARTS", "Date": "2013-03-27T14:10:16Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cls.isAbstract()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/956/buggy-version/experimental.uw.star.rts.analysis.QDoxJavaParser.java", "BodyUseAPI": [], "Fixed commit": "07c42589b6a1d525ff2ab0df5c0544953413df64", "Url": "https://api.github.com/repos/javaelk/ARTS", "Date": "2013-03-27T14:10:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aksw.gerbil.config.GerbilConfiguration.getInstance().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (portString == null) { throw new org.aksw.gerbil.exceptions.GerbilException(((\"Couldn\\'t load needed property \\\"\" + (org.aksw.gerbil.annotators.AgdistisAnnotatorConfig.AGDISTIS_PORT_PROPERTY_NAME)) + \"\\\".\"), org.aksw.gerbil.datatypes.ErrorTypes.ANNOTATOR_LOADING_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7722/buggy-version/src.main.java.org.aksw.gerbil.annotators.AgdistisAnnotatorConfig.java", "BodyUseAPI": [], "Fixed commit": "7b2976bc4b58a6532a769e1d17e71ec76a962017", "Url": "https://api.github.com/repos/AKSW/gerbil", "Date": "2014-11-04T16:19:33Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aksw.gerbil.config.GerbilConfiguration.getInstance().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (host == null) { throw new org.aksw.gerbil.exceptions.GerbilException(((\"Couldn\\'t load needed property \\\"\" + (org.aksw.gerbil.annotators.AgdistisAnnotatorConfig.AGDISTIS_HOST_PROPERTY_NAME)) + \"\\\".\"), org.aksw.gerbil.datatypes.ErrorTypes.ANNOTATOR_LOADING_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7722/buggy-version/src.main.java.org.aksw.gerbil.annotators.AgdistisAnnotatorConfig.java", "BodyUseAPI": [], "Fixed commit": "7b2976bc4b58a6532a769e1d17e71ec76a962017", "Url": "https://api.github.com/repos/AKSW/gerbil", "Date": "2014-11-04T16:19:33Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_storeSecondaryBackup) { _memcached.delete(_sessionIdFormat.createBackupKey(sessionId)); _memcached.delete(_sessionIdFormat.createBackupKey(validityInfoKey)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5266/buggy-version/core.src.main.java.de.javakaffee.web.msm.LockingStrategy.java", "BodyUseAPI": [], "Fixed commit": "97d8646fb1f419de5c2f92dcce3eaa21140507c7", "Url": "https://api.github.com/repos/magro/memcached-session-manager", "Date": "2011-03-28T10:06:00Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arg0.getTitle()) != null) arg0.showInfoWindow();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/593/buggy-version/BeHear.app.src.main.java.com.mycompany.behear.MainActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.model.Marker.showInfoWindow()"], "Fixed commit": "87bc1cd43c32eaadff89095c3f943dce184816ae", "Url": "https://api.github.com/repos/alonbar/BeHear", "Date": "2016-06-14T20:06:51Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marker.getTitle()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/593/buggy-version/BeHear.app.src.main.java.com.mycompany.behear.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "87bc1cd43c32eaadff89095c3f943dce184816ae", "Url": "https://api.github.com/repos/alonbar/BeHear", "Date": "2016-06-14T20:06:51Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((this.left) == null) || ((this.left.size()) < 0)) { }else if (((this.right) == null) || ((this.right.size()) < 0)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7420/buggy-version/src.model.Algorithm.java", "BodyUseAPI": [], "Fixed commit": "24baf2aef6d2fd7043e525865c8b35fb64efc1bb", "Url": "https://api.github.com/repos/StaySharp0/SimpleMerge", "Date": "2017-06-09T10:05:04Z"},
{"Line": "=>1105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vars.vect2.set(Vector3f.NEGATIVE_INFINITY)", "vars.vect1.set(Vector3f.POSITIVE_INFINITY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(min.equals(Vector3f.POSITIVE_INFINITY))) && (!(max.equals(Vector3f.NEGATIVE_INFINITY)))) { com.jme3.bounding.BoundingBox bbox = ((com.jme3.bounding.BoundingBox) (this.getMesh().getBound())); bbox.setMinMax(min, max); this.setBoundRefresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4490/buggy-version/jme3-core.src.main.java.com.jme3.effect.ParticleEmitter.java", "BodyUseAPI": ["com.jme3.bounding.BoundingBox.setMinMax(com.jme3.math.Vector3f,com.jme3.math.Vector3f)"], "Fixed commit": "74858976ebc72d7989f30845b352f57ab9bfefd0", "Url": "https://api.github.com/repos/jMonkeyEngine/jmonkeyengine", "Date": "2017-01-26T20:09:02Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (makiMoveOutPlate(oldP, e)) { m.addAll(makiPlateMove(oldP, newP, e, false)); if (makiMoveOnePlate(newP, e)) { m.addAll(makiPlateMove(oldP, newP, e, true)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1230/buggy-version/game.src.main.java.org.geekygoblin.nedetlesmaki.game.systems.GameSystem.java", "BodyUseAPI": ["java.util.ArrayList<org.geekygoblin.nedetlesmaki.game.utils.Mouvement>.addAll(java.util.ArrayList<org.geekygoblin.nedetlesmaki.game.utils.Mouvement>)", "org.geekygoblin.nedetlesmaki.game.systems.GameSystem.makiPlateMove(org.geekygoblin.nedetlesmaki.game.components.gamesystems.Position,org.geekygoblin.nedetlesmaki.game.components.gamesystems.Position,com.artemis.Entity,boolean)", "java.util.ArrayList<org.geekygoblin.nedetlesmaki.game.utils.Mouvement>.addAll(java.util.ArrayList<org.geekygoblin.nedetlesmaki.game.utils.Mouvement>)", "org.geekygoblin.nedetlesmaki.game.systems.GameSystem.makiMoveOnePlate(org.geekygoblin.nedetlesmaki.game.components.gamesystems.Position,com.artemis.Entity)", "org.geekygoblin.nedetlesmaki.game.systems.GameSystem.makiPlateMove(org.geekygoblin.nedetlesmaki.game.components.gamesystems.Position,org.geekygoblin.nedetlesmaki.game.components.gamesystems.Position,com.artemis.Entity,boolean)"], "Fixed commit": "1f36f765fe0016ca381ea6648bd6d10d802aa47c", "Url": "https://api.github.com/repos/natir/ned-et-les-maki", "Date": "2013-12-02T08:07:22Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((id) != null) { android.database.sqlite.SQLiteDatabase db = com.orm.SugarRecord.getSugarContext().getDatabase().getDB(); db.delete(this.tableName, \"Id=?\", new java.lang.String[]{ getId().toString() }); android.util.Log.i(\"Sugar\", (((getClass().getSimpleName()) + \" deleted: \") + (id))); id = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3025/buggy-version/library.src.com.orm.SugarRecord.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)"], "Fixed commit": "44adf71eeb80e197eb7651801917c2e599ce98fc", "Url": "https://api.github.com/repos/gaddas/sugar", "Date": "2013-09-30T08:10:40Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logoutURL.startsWith(\"/\")) { return logoutURL.substring(1); }else { return logoutURL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8129/buggy-version/components.org.wso2.carbon.appmgt.api.src.main.java.org.wso2.carbon.appmgt.api.model.WebApp.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "4e7ba209cea6622a097f718f6df56b1657936194", "Url": "https://api.github.com/repos/lakshani/carbon-appmgt", "Date": "2016-07-06T13:35:21Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eu.etaxonomy.vaadin.ui.view.ToolbarDisplay.class.isAssignableFrom(viewDisplay.getClass())) { ((eu.etaxonomy.vaadin.ui.view.ToolbarDisplay) (viewDisplay)).setToolbar(toolbar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3864/buggy-version/src.main.java.eu.etaxonomy.cdm.vaadin.ui.DistributionStatusUI.java", "BodyUseAPI": [], "Fixed commit": "0645cd5aa08ff440a7e0e004e54f9b003886f06f", "Url": "https://api.github.com/repos/cybertaxonomy/cdm-vaadin", "Date": "2017-10-19T08:30:05Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.compile()) return this.compileManager.runInterpreter(ctrlPanel.getListener(), new at.jku.ssw.cmm.debugger.IOstream(this.main, this)); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6834/buggy-version/src.at.jku.ssw.cmm.gui.debug.GUIdebugPanel.java", "BodyUseAPI": [], "Fixed commit": "8527139986c198d5db5abbe745fe605e0a96e5bf", "Url": "https://api.github.com/repos/pointhi/CMM", "Date": "2014-11-20T19:08:10Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Float.isInfinite(num)) || (java.lang.Float.isNaN(num))) { return 0; }else { java.math.BigDecimal bd = new java.math.BigDecimal(num); java.math.BigDecimal rounded = bd.setScale(dec, java.math.RoundingMode.HALF_UP); return rounded.floatValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1717/buggy-version/src.project.Util.java", "BodyUseAPI": [], "Fixed commit": "fa57b51d42392704d15bd2a28a3230568f6e86b4", "Url": "https://api.github.com/repos/rxvcgiii/COMP585-project1", "Date": "2014-10-11T18:34:54Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Float.isInfinite(rating)) || (java.lang.Float.isNaN(rating))) { return 0; }else { return rating; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1717/buggy-version/src.project.Data.java", "BodyUseAPI": [], "Fixed commit": "fa57b51d42392704d15bd2a28a3230568f6e86b4", "Url": "https://api.github.com/repos/rxvcgiii/COMP585-project1", "Date": "2014-10-11T18:34:54Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.toDegrees(((java.lang.Math.atan2(((next.getY()) - (current.getY())), ((next.getX()) - (current.getX())))) - (java.lang.Math.atan2(((current.getY()) - (previous.getY())), ((current.getX()) - (previous.getX()))))))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (angle < (-115)) { counter += 1; result += (counter + \". \") + \"Take a hard left and \"; }else if ((angle < 10) && (angle > (-10))) { counter += 1; result += (counter + \". \") + \"Keep straight and \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4286/buggy-version/GetThere.src.Djikstra.java", "BodyUseAPI": [], "Fixed commit": "4caec560f4b97d8b1572e36611c2dcf95e44af43", "Url": "https://api.github.com/repos/wsully/MapTool", "Date": "2015-11-30T03:30:07Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user.isDefaultUser()) { return getGuestUserBag(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5785/buggy-version/portal-impl.src.com.liferay.portal.security.permission.AdvancedPermissionChecker.java", "BodyUseAPI": [], "Fixed commit": "33ffe11a4237c742473517ebe871437e6b0a0bd0", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2015-08-26T00:51:03Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.service.UserLocalServiceUtil.getUser(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user.isDefaultUser()) { return getGuestUserBag(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5785/buggy-version/portal-impl.src.com.liferay.portal.security.permission.AdvancedPermissionChecker.java", "BodyUseAPI": [], "Fixed commit": "33ffe11a4237c742473517ebe871437e6b0a0bd0", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2015-08-26T00:51:03Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEdit)) parent.tools.setTool(Tools.addEdge);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4514/buggy-version/src.uk.me.graphe.client.dialogs.EdgeDialog.java", "BodyUseAPI": [], "Fixed commit": "f288e765ff4fcded3753b9c1ae04df357232a7f7", "Url": "https://api.github.com/repos/Cheetah05/Grapheme", "Date": "2011-05-07T23:26:45Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEdit)) parent.tools.setTool(Tools.addVertex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4514/buggy-version/src.uk.me.graphe.client.dialogs.VertexDialog.java", "BodyUseAPI": [], "Fixed commit": "f288e765ff4fcded3753b9c1ae04df357232a7f7", "Url": "https://api.github.com/repos/Cheetah05/Grapheme", "Date": "2011-05-07T23:26:45Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.babushka.slav_squad.util.AppUtil.isPreNougat()) { photoURI = android.net.Uri.fromFile(photoFile); }else { photoURI = android.support.v4.content.FileProvider.getUriForFile(context, \"com.babushka.slav_squad.fileprovider\", photoFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5351/buggy-version/Slavstagram.app.src.main.java.com.babushka.slav_squad.util.IntentBuilder.java", "BodyUseAPI": [], "Fixed commit": "cb803d8a6d4e044671873083f3063d213ff4a8f3", "Url": "https://api.github.com/repos/ILIYANGERMANOV/slavstagram-mvp", "Date": "2017-06-22T05:45:46Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.server.qualityprofile.QProfileLookup.profile(importedProfile.getId(),org.apache.ibatis.session.SqlSession)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (newProfile == null) { throw new org.sonar.server.exceptions.BadRequestException(\"Restore of the profile has failed.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8379/buggy-version/sonar-server.src.main.java.org.sonar.server.qualityprofile.QProfileBackup.java", "BodyUseAPI": [], "Fixed commit": "f2cbd58e6a46c1c835c39f1dfc1c6316741a00eb", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2014-01-20T08:36:15Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (game.getStatus().equals(GameStatus.CLOSED)) { saveFinalEstimateBtn.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1335/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.results.ResultsDisplayPanel.java", "BodyUseAPI": [], "Fixed commit": "d631cbbd7a7fe695bb477b7675fe13e8c6ac1fc8", "Url": "https://api.github.com/repos/zoccihedron/wpi-suite", "Date": "2014-04-24T03:13:55Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (resource != null) { double threshold = org.reactome.web.diagram.data.InteractorsContent.getInteractorsThreshold(resource); uk.ac.ebi.pwp.structures.quadtree.client.QuadTree<org.reactome.web.diagram.data.interactors.model.DiagramInteractor> quadTree = this.interactorsTreeCache.get(resource.toLowerCase()); if (quadTree != null) { double f = 1 / factor; java.util.Set<org.reactome.web.diagram.data.interactors.model.DiagramInteractor> items = quadTree.getItems(new uk.ac.ebi.pwp.structures.quadtree.client.Box(((p.getX()) - f), ((p.getY()) - f), ((p.getX()) + f), ((p.getY()) + f))); for (org.reactome.web.diagram.data.interactors.model.DiagramInteractor item : items) { if (item instanceof org.reactome.web.diagram.data.interactors.model.InteractorLink) { org.reactome.web.diagram.data.interactors.model.InteractorLink link = ((org.reactome.web.diagram.data.interactors.model.InteractorLink) (item)); if ((link.getScore()) >= threshold) rtn.add(link); }else { org.reactome.web.diagram.data.interactors.model.InteractorEntity entity = ((org.reactome.web.diagram.data.interactors.model.InteractorEntity) (item)); for (org.reactome.web.diagram.data.interactors.model.InteractorLink interactorLink : entity.getLinks()) { if ((interactorLink.getScore()) >= threshold) { rtn.add(entity); break; } } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2666/buggy-version/src.main.java.org.reactome.web.diagram.data.InteractorsContent.java", "BodyUseAPI": ["org.reactome.web.diagram.data.InteractorsContent.getInteractorsThreshold(java.lang.String)", "java.lang.String.toLowerCase()", "org.reactome.web.pwp.model.util.LruCache<java.lang.String, uk.ac.ebi.pwp.structures.quadtree.client.QuadTree<org.reactome.web.diagram.data.interactors.model.DiagramInteractor>>.get(java.lang.String)"], "Fixed commit": "c5465faa355e923b5db0410d05d6239b5890c785", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2016-01-15T19:15:09Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((destinationCardList.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5209/buggy-version/sharedlib.src.main.java.modeling.DestinationCardList.java", "BodyUseAPI": [], "Fixed commit": "b533bd6ca3ca38aeb2ee6843fbfa3bd6e5fbe608", "Url": "https://api.github.com/repos/Jttanner/TicketToRide_Android", "Date": "2017-11-17T20:31:04Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (listFiles != null) { for (final java.io.File file : listFiles) { chartDatas.add(new javafx.scene.chart.PieChart.Data(file.getName(), file.getName().length())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7654/buggy-version/com.zuehlke.zfb.model.src.com.zuehlke.zfb.model.chart.ChartModel.java", "BodyUseAPI": [], "Fixed commit": "9c7e3179ff9fed6f1a0f3538ff5b9cd028e387be", "Url": "https://api.github.com/repos/anmorf/ZFB", "Date": "2012-09-12T13:55:36Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (PlayerSkeleton.isNeural) { moveValue = getValueFunctionNeural(features); }else { moveValue = PlayerSkeleton.getValueFunction(features); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3517/buggy-version/src.PlayerSkeleton.java", "BodyUseAPI": [], "Fixed commit": "cf70a16010b8adbb750cbe38c7e5850f9e084818", "Url": "https://api.github.com/repos/quarbby/Tetrisboys", "Date": "2015-02-26T00:09:59Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.bukkit.Bukkit.getPlayer(getName())) != null) { lastHealth = org.bukkit.Bukkit.getPlayer(getName()).getHealth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4674/buggy-version/src.main.java.com.tehbeard.BeardStat.containers.EntityStatBlob.java", "BodyUseAPI": [], "Fixed commit": "18fd4f4727f5a518514d40f8455edba81a7d5172", "Url": "https://api.github.com/repos/tehbeard/BeardStat", "Date": "2013-06-24T16:49:56Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((amount.getText().charAt(0)) == '.') || ((tax.getText().charAt(0)) == '.')) { android.widget.Toast test1 = android.widget.Toast.makeText(getBaseContext(), \"Please enter a number\", Toast.LENGTH_SHORT); taxesAmount.setText(\"0.00\"); taxTotal.setText(\"0.00\"); test1.show(); }else { java.lang.String input = amount.getText().toString(); java.lang.String taxAmount = tax.getText().toString(); java.lang.Double percent = java.lang.Double.parseDouble(taxAmount); java.lang.Double newAmount = java.lang.Double.parseDouble(input); percent = percent / 100.0; double total = (newAmount * percent) + newAmount; double taxes = newAmount * percent; java.math.BigDecimal result = java.math.BigDecimal.valueOf(total).setScale(2, java.math.RoundingMode.HALF_UP); java.math.BigDecimal taxResult = java.math.BigDecimal.valueOf(taxes).setScale(2, java.math.RoundingMode.HALF_UP); java.lang.String tt = taxResult.toString(); java.lang.String value = result.toString(); taxesAmount.setText((\"$\" + tt)); taxTotal.setText((\"$\" + value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7678/buggy-version/app.src.main.java.com.example.dmancilla.taxcalculator.TaxCalculator.java", "BodyUseAPI": ["android.widget.EditText.getText()", "tax.getText().toString()", "amount.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "d7b15e678fdf36a72be0042114eb93e954b6bda0", "Url": "https://api.github.com/repos/dm0275/TaxCalculator2", "Date": "2015-12-01T20:59:45Z"},
{"Line": "=>1380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rgb & 16777215) != 0) { edu.stanford.epad.epadws.handlers.dicom.DSOUtil.nonBlank.set(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8137/buggy-version/src.main.java.edu.stanford.epad.epadws.handlers.dicom.DSOUtil.java", "BodyUseAPI": [], "Fixed commit": "9ffb44202d9e49d44691e57865ecb421b0f4f6a7", "Url": "https://api.github.com/repos/RubinLab/epad-ws", "Date": "2016-06-28T19:44:07Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((viewMap) != null) { viewMap.onLowMemory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7887/buggy-version/app.src.main.java.com.rpham64.android.zumperproject.ui.map.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "d9a02cc738ae005dc9c5456ad062dfee1628ff21", "Url": "https://api.github.com/repos/rpham64/ZumperProject", "Date": "2017-04-03T12:05:43Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((viewMap) != null) { try { viewMap.onDestroy(); } catch (java.lang.NullPointerException e) { android.util.Log.e(com.rpham64.android.zumperproject.ui.map.MapFragment.TAG, \"Error while attempting MapView.onDestroy(), ignoring exception\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7887/buggy-version/app.src.main.java.com.rpham64.android.zumperproject.ui.map.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "d9a02cc738ae005dc9c5456ad062dfee1628ff21", "Url": "https://api.github.com/repos/rpham64/ZumperProject", "Date": "2017-04-03T12:05:43Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (conn != null) conn.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7295/buggy-version/org.eclipselabs.tapiji.translator.suggestionprovider.mymemory.src.org.eclipselabs.tapiji.translator.suggestionprovider.mymemory.MyMemoryProvider.java", "BodyUseAPI": ["java.net.HttpURLConnection.disconnect()"], "Fixed commit": "c1594e2c78f8f8abdf52d4be59cce60f893c70af", "Url": "https://api.github.com/repos/samirsoyer/tapiji", "Date": "2013-12-07T00:55:03Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((usernameTV) != null) { usernameTV.setText(com.github.cmput301f14t11.teamlort.Model.AppCache.getInstance().getProfile().getUsername()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/9170/buggy-version/Project.src.com.github.cmput301f14t11.teamlort.AppBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "bb29ba00fd4a002193832bd0b9d010840cfe7bf2", "Url": "https://api.github.com/repos/CMPUT301F14T11/TEAMLORT", "Date": "2014-11-30T00:48:52Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isReplaying) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8/buggy-version/src.frontEnd.MainBackEndHolder.java", "BodyUseAPI": [], "Fixed commit": "6012fa9f54ae22f415c900a6b36b88267653cc42", "Url": "https://api.github.com/repos/repeats/Repeat", "Date": "2017-06-11T17:03:03Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRecording) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8/buggy-version/src.frontEnd.MainBackEndHolder.java", "BodyUseAPI": [], "Fixed commit": "6012fa9f54ae22f415c900a6b36b88267653cc42", "Url": "https://api.github.com/repos/repeats/Repeat", "Date": "2017-06-11T17:03:03Z"},
{"Line": "=>1682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paperSize) != null) { printPS.setPaperSize(paperSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8508/buggy-version/qz-print.src.qz.PrintApplet.java", "BodyUseAPI": [], "Fixed commit": "3d4f0845bf323e7b47280984238303b7496c7ea6", "Url": "https://api.github.com/repos/qzindustries/qz-print", "Date": "2014-04-16T02:55:23Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (nodeDrive != null) { nodeDrive = nodeDrive.clone(); nodeDrive.getParameters().put(ManageDriveServiceImpl.DRIVE_PARAMATER_USER_ID, (((((((splitedPath[2]) + \"/\") + (splitedPath[3])) + \"/\") + (splitedPath[4])) + \"/\") + (splitedPath[5]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/628/buggy-version/core.services.src.main.java.org.exoplatform.services.cms.documents.impl.DocumentServiceImpl.java", "BodyUseAPI": ["org.exoplatform.services.cms.drives.DriveData.clone()"], "Fixed commit": "0f7accb2786344689c3172d4fc75f01bba9cd420", "Url": "https://api.github.com/repos/exodev/ecms", "Date": "2017-05-30T15:57:23Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (doc != null) { com.celements.pagetype.PageTypeReference pageTypeRef = getPageTypeRefForDoc(doc); if (pageTypeRef == null) { pageTypeRef = getDefaultPageTypeRefForDoc(doc.getDocumentReference()); } return pageTypeRef; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2217/buggy-version/src.main.java.com.celements.pagetype.service.PageTypeResolverService.java", "BodyUseAPI": ["com.celements.pagetype.service.PageTypeResolverService.getPageTypeRefForDoc(com.xpn.xwiki.doc.XWikiDocument)", "com.xpn.xwiki.doc.XWikiDocument.getDocumentReference()", "com.celements.pagetype.service.PageTypeResolverService.getDefaultPageTypeRefForDoc(doc.getDocumentReference())"], "Fixed commit": "e006b9118ae4a6d39f53baeaa62054bc5a3c7897", "Url": "https://api.github.com/repos/celements/celements-core", "Date": "2013-04-15T17:31:17Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["backend.commands.DisableOfferCommand.getOfferById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(offer.isAvailable())) { java.lang.System.out.println(\"Already Disabled!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7128/buggy-version/src.backend.commands.DisableOfferCommand.java", "BodyUseAPI": [], "Fixed commit": "896e1447730721fdc4843ac328d2a3af568450a6", "Url": "https://api.github.com/repos/klg71/KleinanzeigenUni", "Date": "2015-07-29T14:05:35Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["backend.commands.EnableOfferCommand.getOfferById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (offer.isAvailable()) { java.lang.System.out.println(\"Already Enabled!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7128/buggy-version/src.backend.commands.EnableOfferCommand.java", "BodyUseAPI": [], "Fixed commit": "896e1447730721fdc4843ac328d2a3af568450a6", "Url": "https://api.github.com/repos/klg71/KleinanzeigenUni", "Date": "2015-07-29T14:05:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.FileUtils.listFiles(java.io.File,java.lang.String[],boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (javaFiles != null) { for (java.io.File j : javaFiles) { try { cpler.addSource(root, j); } catch (java.io.IOException ex) { org.openide.util.Exceptions.printStackTrace(ex); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8845/buggy-version/src.main.java.kalang.ide.parser.KalangVirtualSource.java", "BodyUseAPI": [], "Fixed commit": "aed15666cc454cb48dea35a522fc3d472803f908", "Url": "https://api.github.com/repos/kasonyang/kalang-nb-support", "Date": "2016-05-15T03:52:52Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { final net.minecraft.nbt.NBTTagCompound idCompound = new net.minecraft.nbt.NBTTagCompound(); idCompound.setInteger(com.minecolonies.coremod.colony.buildings.AbstractBuildingWorker.TAG_ID, data.getId()); workersTagList.appendTag(idCompound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4853/buggy-version/src.main.java.com.minecolonies.coremod.colony.buildings.AbstractBuildingWorker.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.setInteger(java.lang.String,data.getId())", "com.minecolonies.coremod.colony.CitizenData.getId()"], "Fixed commit": "927b4505d6c2d30590b1758e700a2ce3b0468f5b", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2017-10-28T00:47:40Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parents[i][selectedParent].getGene(selectedGene)) == (-1)) nRoutes++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7756/buggy-version/src.com.MyGeneticA.MyGA.java", "BodyUseAPI": [], "Fixed commit": "156ec51ab2be02acb45bbb371506e1b589df3446", "Url": "https://api.github.com/repos/oma-vrptw/oma-vrptw", "Date": "2014-12-05T19:20:29Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chapter.getPage(1)) == null) chapter.addPage(new com.pratilipi.data.type.doc.PratilipiContentDocImpl.Page());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8643/buggy-version/src.main.java.com.pratilipi.common.util.PratilipiContentUtil.java", "BodyUseAPI": ["com.pratilipi.data.type.doc.PratilipiContentDocImpl.Chapter.addPage(com.pratilipi.data.type.doc.PratilipiContentDocImpl.Page)"], "Fixed commit": "552e9b7135324add08008d2ee62749d26d440bed", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-07-22T10:55:25Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((author == null) || ((author.value()) == null)) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8235/buggy-version/src.main.java.com.bikesandwheels.annotations.wrappers.AuthorWrapper.java", "BodyUseAPI": [], "Fixed commit": "5fc4892d0b1d6720311d402af4d3b46d62701439", "Url": "https://api.github.com/repos/IceHarley/annot-vc", "Date": "2015-04-08T20:10:32Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pikater.core.ontology.subtrees.newOption.base.NewOption.toSingleValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((value.getCurrentValue()) instanceof org.pikater.core.ontology.subtrees.newOption.values.NullValue) { this.model = null; }else { throw new java.lang.IllegalStateException(\"Option doesn't contain correct type\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5931/buggy-version/src.org.pikater.core.ontology.subtrees.batchDescription.ComputingAgent.java", "BodyUseAPI": [], "Fixed commit": "b69a03aeaf5c779f799a35ff210f36e7b1709f17", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-08-10T18:41:43Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model) == null) { modelOption = new org.pikater.core.ontology.subtrees.newOption.base.NewOption(\"model\", new org.pikater.core.ontology.subtrees.newOption.values.NullValue()); }else { modelOption = new org.pikater.core.ontology.subtrees.newOption.base.NewOption(\"model\", model); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5931/buggy-version/src.org.pikater.core.ontology.subtrees.batchDescription.ComputingAgent.java", "BodyUseAPI": [], "Fixed commit": "b69a03aeaf5c779f799a35ff210f36e7b1709f17", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-08-10T18:41:43Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (line != null) { sReader = new java.io.StringReader(line); hb = ((generated.nonstandard.heartbeat.Heartbeat) (uni.mitter.MitterServer.jaxbUnmarshallerHeartbeat.unmarshal(sReader))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/918/buggy-version/MitterServer.java", "BodyUseAPI": [], "Fixed commit": "938930c37266d106382223436e22b6d61fd7ae44", "Url": "https://api.github.com/repos/chairus/DS-assignment", "Date": "2017-09-19T12:49:19Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputMethodManager.isAcceptingText()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3230/buggy-version/roundedactivity.src.main.java.ro.tsuku.roundedactivity.RoundHelper.java", "BodyUseAPI": [], "Fixed commit": "d0af81ced347cb81a31342a4956482ea746b07c8", "Url": "https://api.github.com/repos/gitusp/rounded-activity", "Date": "2015-06-09T06:39:30Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((viewRealWidth) > (screenWidth)) { this.onScroll(distanceX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6327/buggy-version/app.src.main.java.me.zsj.moment.widget.FullImageView.java", "BodyUseAPI": [], "Fixed commit": "794247ec98efc63cf45759d066f388bf4d260d5e", "Url": "https://api.github.com/repos/Assassinss/Moment", "Date": "2017-01-15T06:50:34Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (SWConstants.PACKAGE_SMART_WATCH_2.equals(mHostAppPackageName)) { sensorLayout = ((android.widget.LinearLayout) (inflater.inflate(R.layout.generic_sensor_values_sw2, root, true))); }else { sensorLayout = ((android.widget.LinearLayout) (inflater.inflate(R.layout.generic_sensor_values, root, true))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5749/buggy-version/dConnectDevicePlugin.dConnectDeviceSonySW.app.src.main.java.org.deviceconnect.android.deviceplugin.sw.smartconnect.SWControlExtension.java", "BodyUseAPI": [], "Fixed commit": "3b2fa4af70d1345286e854a3e0d262cb8a205bb5", "Url": "https://api.github.com/repos/TakayukiHoshi1984/DeviceConnect-Android", "Date": "2016-03-23T04:37:01Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((deadline.length()) == 8) { try { date = saved.parse(deadline); if (deadline.equals(saved.format(date))) { return deadline; } } catch (java.text.ParseException e1) { throw new seedu.address.commons.exceptions.IllegalValueException(seedu.address.model.task.Deadline.MESSAGE_ADDRESS_CONSTRAINTS); } }else if ((deadline.length()) == 6) { try { java.lang.String result = output.format(input.parse(deadline)); return result; } catch (java.text.ParseException e) { throw new seedu.address.commons.exceptions.IllegalValueException(seedu.address.model.task.Deadline.MESSAGE_ADDRESS_CONSTRAINTS); } }else { throw new seedu.address.commons.exceptions.IllegalValueException(seedu.address.model.task.Deadline.MESSAGE_ADDRESS_CONSTRAINTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/413/buggy-version/src.main.java.seedu.address.model.task.Deadline.java", "BodyUseAPI": ["java.lang.String.length()", "java.text.DateFormat.parse(java.lang.String)", "java.text.SimpleDateFormat.parse(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.text.DateFormat.format(java.util.Date)"], "Fixed commit": "5dd67695ea96e47027585a9219daff386960b786", "Url": "https://api.github.com/repos/CS2103AUG2016-T16-C2/main", "Date": "2016-10-16T10:46:24Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.util.Arrays.asList(ImageEncrypt.exts).contains(ImageEncrypt.currentExt))) { java.lang.System.out.println(\"The selected file was not an image!\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3827/buggy-version/src.ImageEncrypt.java", "BodyUseAPI": [], "Fixed commit": "f12305e49c8a9265ebd0a2511b657c5af6d6dff5", "Url": "https://api.github.com/repos/axc450/cryptovision", "Date": "2017-08-28T20:29:06Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((subwaysIds) != null) && (!(subwaysIds.isEmpty()))) { map.put(\"subways\", subwaysIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7495/buggy-version/app.src.main.java.ru.tulupov.alex.teachme.views.activivties.ListTeachersActivity.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "7184388608eb6879d1f4a694642970f890a739e3", "Url": "https://api.github.com/repos/Algresh/TeachMeAndroid", "Date": "2017-12-03T12:07:13Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.data) != null) { java.util.List<int[]> newdata = new java.util.ArrayList<int[]>(); for (int row = 0; row < (this.data.length); row++) { if (rowset.contains(row)) { newdata.add(data[row]); } } array = new int[newdata.size()][]; for (int i = 0; i < (newdata.size()); i++) { array[i] = newdata.get(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/196/buggy-version/src.main.org.deidentifier.arx.framework.data.Data.java", "BodyUseAPI": [], "Fixed commit": "c7307e9bf23124f203d15a85b037f8e2931fff55", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-10-06T09:27:59Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.parse.ParseObject>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ingredient.get(\"Type\")) != null) { ingredientObject.type = ingredient.get(\"Type\").toString(); }else { ingredientObject.type = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/9134/buggy-version/app.src.main.java.com.example.carrc.seniorproject.ModifyIngredientActivity.java", "BodyUseAPI": ["com.parse.ParseObject.get(java.lang.String)", "ingredient.get(\"Type\").toString()"], "Fixed commit": "4bbe2fb197f5e8d76bed00ce378888480bae5dfc", "Url": "https://api.github.com/repos/CarrCarrCreations/SeniorProject", "Date": "2017-04-20T16:01:35Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRemoveAction()) { widget.setSelected(null); }else { if (widget.mayRepresent(newObject)) { widget.setSelected(newObject); }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4523/buggy-version/gina-core.src.main.java.org.openflexo.fib.view.widget.browser.FIBBrowserActionListener.java", "BodyUseAPI": [], "Fixed commit": "7ef5af58432591e88be3e095690355ca761722e4", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2015-04-08T22:27:35Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.core.JsonParser.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((!(org.apache.commons.lang3.StringUtils.isBlank(floatNumber))) && (org.apache.commons.lang3.math.NumberUtils.isNumber(floatNumber))) && (floatNumber.endsWith(\".0\"))) { floatNumber = floatNumber.substring(0, ((floatNumber.length()) - 2)); return java.lang.Integer.parseInt(floatNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1218/buggy-version/src.main.java.gov.nih.nci.pedmatch.util.DynamoIntegerDeserializer.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "bc79c769132832ab912f7de16098cd3824772fb7", "Url": "https://api.github.com/repos/BIAD/nci-match-rules", "Date": "2016-09-19T19:24:52Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.viewers.TreeSelection.getFirstElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selectedObj instanceof org.eclipse.core.resources.IProject) { project = ((org.eclipse.core.resources.IProject) (selectedObj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5914/buggy-version/PluginsAndFeatures.azure-toolkit-for-eclipse.com.microsoft.azuretools.hdinsight.src.com.microsoft.azuretools.hdinsight.spark.actions.SubmitHandler.java", "BodyUseAPI": [], "Fixed commit": "7cea9198c18eb987a811cdc5d2653b606b4b481a", "Url": "https://api.github.com/repos/voidfunction/azure-tools-for-java", "Date": "2017-07-05T04:10:16Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tracePoint == null) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2313/buggy-version/app.src.main.java.dominikschmidtlein.trace.model.TracePointIterator.java", "BodyUseAPI": [], "Fixed commit": "62a4fd78eef731d90d7de49bc6c7ca0b2e3d74fd", "Url": "https://api.github.com/repos/DominikSchmidtlein/trace", "Date": "2017-01-09T03:16:57Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_nuDeFeMeasureSymbolNames.length) > 0) && ((_maMeasureSymbolNames.length) > 0)) _sMeasureSymbol.append(\"|\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1546/buggy-version/marytts-languages.marytts-lang-de.src.main.java.marytts.language.de.preprocess.MeasureEP.java", "BodyUseAPI": [], "Fixed commit": "53246b28db0e9c0b5f2025bede7da780212ec558", "Url": "https://api.github.com/repos/marytts/marytts", "Date": "2016-12-05T10:11:57Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.engines.get(key).searchByKeywords(keywordsParameter.getKeywords())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((results.size()) > 0) request.setFlag(java.lang.Integer.valueOf(results.get(0)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4389/buggy-version/Software.src.model.entities.QTILSoftware.java", "BodyUseAPI": ["model.entities.history.Request.setFlag(java.lang.Integer)", "java.util.List<java.lang.String>.get(int)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "55dbe2c4c5898e3924c7357f81797920ccb77909", "Url": "https://api.github.com/repos/SauvageThomas/Red-String-Project", "Date": "2017-04-24T07:35:26Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(officeHoursCsv.isEmpty())) { officeHours = new java.util.ArrayList<>(java.util.Arrays.asList(officeHoursCsv.split(\",\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5536/buggy-version/model.src.main.java.org.tndata.officehours.model.User.java", "BodyUseAPI": [], "Fixed commit": "475cedbb2896ece918a9ebb44e2587e69543e28f", "Url": "https://api.github.com/repos/tndatacommons/OfficeHours-Android", "Date": "2016-12-01T18:19:23Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(officeHoursCsv.isEmpty())) { officeHoursCsv = officeHoursCsv.substring(0, ((officeHoursCsv.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5536/buggy-version/model.src.main.java.org.tndata.officehours.model.User.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "475cedbb2896ece918a9ebb44e2587e69543e28f", "Url": "https://api.github.com/repos/tndatacommons/OfficeHours-Android", "Date": "2016-12-01T18:19:23Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((importaPc.getNumeroPatrimonial()) != null) { try { chaveSerial = chaveSerialDao.buscaPorImportaPc(importaPc.getNumeroPatrimonial()); } catch (java.lang.Exception e) { } return chaveSerial; }else { return chaveSerial; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/181/buggy-version/src.mb.dsam.mb.ImportaPcBean.java", "BodyUseAPI": ["mb.dsam.dao.ChaveSerialDao.buscaPorImportaPc(importaPc.getNumeroPatrimonial())", "mb.dsam.modelo.ImportaPc.getNumeroPatrimonial()"], "Fixed commit": "2ff5fdc41dab861d53302a52af59c71c213b6fed", "Url": "https://api.github.com/repos/adilsonoj/ControleEquipamentos", "Date": "2015-02-06T12:18:20Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mValues.get(((holder.getAdapterPosition()) - 1)).isEnabled()) bluetoothConnection.sendMessageToDevice(deviceName, Constants.COMMAND_LED_FLASH_SLOW); else bluetoothConnection.sendMessageToDevice(deviceName, Constants.COMMAND_LED_OFF);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7713/buggy-version/Targit.app.src.main.java.be.howest.nmct.targit.adapters.MyArduinoButtonRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "cfaf6079630212a3c4077071f35a16415c4fb4a8", "Url": "https://api.github.com/repos/ikbendewilliam/TargitAndroid", "Date": "2017-06-14T13:56:44Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spectrumFilterFunction) == null) return spectrumToFilter;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8413/buggy-version/src.main.java.uk.ac.ebi.pride.spectracluster.engine.GreedyIncrementalClusteringEngine.java", "BodyUseAPI": [], "Fixed commit": "bb4eee92669049b5a139f5559e1c827ff829b566", "Url": "https://api.github.com/repos/spectra-cluster/spectra-cluster", "Date": "2015-05-28T07:04:07Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["teammates.storage.api.FeedbackSessionsDb.getEntity(teammates.common.datatransfer.FeedbackSessionAttributes)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fs.getRespondingInstructorList().contains(oldEmail)) { fs.getRespondingInstructorList().remove(oldEmail); fs.getRespondingInstructorList().add(newEmail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8553/buggy-version/src.main.java.teammates.storage.api.FeedbackSessionsDb.java", "BodyUseAPI": ["fs.getRespondingInstructorList().remove(java.lang.String)", "teammates.storage.entity.FeedbackSession.getRespondingInstructorList()", "teammates.storage.entity.FeedbackSession.getRespondingInstructorList()", "fs.getRespondingInstructorList().add(java.lang.String)"], "Fixed commit": "c038a9bffe4b2825d74bfde4cc5e07fb9fcddc83", "Url": "https://api.github.com/repos/TEAMMATES/repo", "Date": "2014-09-14T20:02:14Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["teammates.storage.api.FeedbackSessionsDb.getEntity(teammates.common.datatransfer.FeedbackSessionAttributes)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fs.getRespondingStudentList().contains(oldEmail)) { fs.getRespondingStudentList().remove(oldEmail); fs.getRespondingStudentList().add(newEmail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8553/buggy-version/src.main.java.teammates.storage.api.FeedbackSessionsDb.java", "BodyUseAPI": ["fs.getRespondingStudentList().add(java.lang.String)", "teammates.storage.entity.FeedbackSession.getRespondingStudentList()", "fs.getRespondingStudentList().remove(java.lang.String)", "teammates.storage.entity.FeedbackSession.getRespondingStudentList()"], "Fixed commit": "c038a9bffe4b2825d74bfde4cc5e07fb9fcddc83", "Url": "https://api.github.com/repos/TEAMMATES/repo", "Date": "2014-09-14T20:02:14Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["World.getWorldObjects()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((desiredObjs.size()) >= 1) { Goal goal = new Goal(pddlString.toString()); goals.add(goal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1433/buggy-version/javaprolog.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "90fa863f921bf2bd28024c5627d1b52fdf5e25a4", "Url": "https://api.github.com/repos/anerud/AIGroup1", "Date": "2014-03-27T10:42:47Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Integer>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hintCount < hintUsed) { javax.swing.JOptionPane.showMessageDialog(null, \"SORRY: You've used all availble hints\"); int getLength = (guessedWord.length()) - 1; char firstChar = hW.charAt(0); char lastChar = hW.charAt(getLength); javax.swing.JOptionPane.showMessageDialog(null, ((((\"A Bonus Hint: The name starts with '\" + firstChar) + \"' and ends with '\") + lastChar) + \"'.\")); }else { char yesno = yn.charAt(0); int j = 0; java.lang.String hintMessage = \"\"; if ((yesno == 'y') || (yesno == 'Y')) { for (int i = 0; i < (hint.get(a)); i++) hintMessage = hintDef.get((j++)); a++; hintUsed++; javax.swing.JOptionPane.showMessageDialog(null, hintMessage); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8390/buggy-version/CENG310.Lab4.GuessWordGame.java", "BodyUseAPI": [], "Fixed commit": "0b2f4ebda179c549872882cbefdd5317f798dbff", "Url": "https://api.github.com/repos/kennyhunter16/Java", "Date": "2014-04-14T14:02:05Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.eclipse.code.editor.CeylonEditor.getSelection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((selection.getLength()) > 0) { offset = selection.getOffset(); length = selection.getLength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2814/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.editor.MarkOccurrencesAction.java", "BodyUseAPI": ["org.eclipse.jface.text.IRegion.getOffset()", "org.eclipse.jface.text.IRegion.getLength()"], "Fixed commit": "329ab9a20cb0692592aaf5e786db47a490798003", "Url": "https://api.github.com/repos/ceylon/ceylon-ide-eclipse", "Date": "2012-07-28T18:05:44Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filesCount > 0) { if (((version != null) && (version.supportsRemoteThumbnails())) && (imagesCount == filesCount)) { switchToGridView(); }else { switchToListView(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5286/buggy-version/src.com.owncloud.android.ui.fragment.OCFileListFragment.java", "BodyUseAPI": [], "Fixed commit": "8e6d060c486a87b85222d3243b74aace09ddffbe", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2015-06-22T13:37:38Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT_WATCH)) { mTopInset = windowInsets.getSystemWindowInsetTop(); view.onApplyWindowInsets(windowInsets); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3507/buggy-version/XYZReader.src.main.java.com.example.xyzreader.ui.ArticleDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "b1846fec364b0a002e0c17dac76aca215f48ea36", "Url": "https://api.github.com/repos/TNTest/xyzreader", "Date": "2017-04-13T07:09:53Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kpi.service.ProjectTypeService.getByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8784/buggy-version/src.main.java.org.kpi.controller.ProjectTypeController.java", "BodyUseAPI": [], "Fixed commit": "96962389efaaf221e8245d76a32938fdce4d4c4d", "Url": "https://api.github.com/repos/ILkrAzy/kpi", "Date": "2017-07-19T03:13:22Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lexer.token()) != (com.alibaba.druid.sql.parser.Token.FROM)) { com.alibaba.druid.sql.ast.SQLExpr trim_character = this.primary(); trim_character.setParent(methodExpr); methodExpr.putAttribute(\"trim_character\", trim_character); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3995/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.java", "BodyUseAPI": [], "Fixed commit": "9f07744b03c875d3b6cd29db63012f520c9ce58b", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2016-07-15T12:17:06Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fallbackList.get(idx)) != null) { rawCoordinate = fallbackList.get(idx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5908/buggy-version/src.main.java.net.canadensys.api.narwhal.service.impl.APIServiceImpl.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "32f55d8028e1a2356428188c95558363ad8b6638", "Url": "https://api.github.com/repos/Canadensys/narwhal-api", "Date": "2013-10-09T17:14:23Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (orderStatus == 3) { com.cb.eshop.model.OrderDetail orderDetail = orderDetailDao.selectOrderDetailByOrderId(orderId); commodityDao.updateStorageByCommodityIdRoll(orderDetail.getCommodityId(), 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6267/buggy-version/src.main.java.com.cb.eshop.service.impl.OrderService.java", "BodyUseAPI": [], "Fixed commit": "6ed8ed24e51f688b00454b260fc2affe2910ea73", "Url": "https://api.github.com/repos/cbcbc/proj", "Date": "2017-07-24T12:56:08Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5582/buggy-version/src.main.java.com.mycar.service.impl.OrderServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "4a5833150c7c60db70bb2257cdc71a609b927aba", "Url": "https://api.github.com/repos/qiong-coder/mycar", "Date": "2017-08-16T12:31:14Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (channel == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4683/buggy-version/src.com.orange.common.network.ChannelUserManager.java", "BodyUseAPI": [], "Fixed commit": "91cca5b47ab004479d6fa9115d9a9045e76b85d1", "Url": "https://api.github.com/repos/gckjdev/Common_Java", "Date": "2013-01-14T13:40:33Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!broken) { intersections.add(i, newInt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5741/buggy-version/src.engine.lighting.RayCastData.java", "BodyUseAPI": [], "Fixed commit": "a73445b02c0800bab9a3eb5825f3b1adcc5c81d1", "Url": "https://api.github.com/repos/iebaker/game-final-project", "Date": "2013-11-27T22:57:14Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getCause()) instanceof javax.persistence.OptimisticLockException) { message = org.zkoss.util.resource.Labels.getLabel(\"msg.warnings.optimistic_lock_exception\"); showErrorMessage(id.co.sigma.zk.ui.controller.base.BaseSimpleDirectToDBEditor.getEditorState(), message); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1700/buggy-version/lib-zk-bccore.src.main.java.id.co.sigma.zk.ui.controller.base.BaseSimpleDirectToDBEditor.java", "BodyUseAPI": [], "Fixed commit": "7ebb7b91cc6539f228c0106c061a339fb43a1764", "Url": "https://api.github.com/repos/balicamp/balicamp-lib-zk", "Date": "2015-03-02T08:18:04Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.naming.directory.SearchResult.getNameInNamespace()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((userDn == null) || (\"\".equals(userDn))) { throw new javax.naming.NamingException(\"username may not be empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5130/buggy-version/jetty-jaas.src.main.java.org.eclipse.jetty.jaas.spi.LdapLoginModule.java", "BodyUseAPI": [], "Fixed commit": "99e1a16d07bb0ac240583fe533244c0d31e11c09", "Url": "https://api.github.com/repos/WalkerWatch/jetty.project", "Date": "2016-06-17T23:56:41Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((password == null) || (\"\".equals(password))) { throw new javax.naming.NamingException(\"password may not be empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5130/buggy-version/jetty-jaas.src.main.java.org.eclipse.jetty.jaas.spi.LdapLoginModule.java", "BodyUseAPI": [], "Fixed commit": "99e1a16d07bb0ac240583fe533244c0d31e11c09", "Url": "https://api.github.com/repos/WalkerWatch/jetty.project", "Date": "2016-06-17T23:56:41Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.metabroadcast.common.collect.OptionalMap<org.atlasapi.entity.Id, org.atlasapi.content.Content>.get(ref.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(possibleContent.isPresent())) { throw new org.atlasapi.entity.util.WriteException((\"update failed. content not found for id \" + (ref.getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3594/buggy-version/atlas-core.src.main.java.org.atlasapi.content.AbstractEquivalentContentStore.java", "BodyUseAPI": [], "Fixed commit": "3f0a187c8b5d1dbc7cf860898f1129c0dc8a83a4", "Url": "https://api.github.com/repos/atlasapi/atlas-deer", "Date": "2014-03-12T14:48:19Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minVersionMatchLength == 1) && (maxVersionMatchLength >= 3)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3118/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.utils.DependencyVersion.java", "BodyUseAPI": [], "Fixed commit": "aef118d3757edc7d2c10ec29f775198519e82a02", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2016-09-09T10:36:56Z"},
{"Line": "=>2942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((handler.getExitValue()) != 0) { throw new java.lang.Exception((((\"Failed to start Solr using command: \" + startCmd) + \" Exception : \") + (handler.getException()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1024/buggy-version/solr.core.src.java.org.apache.solr.util.SolrCLI.java", "BodyUseAPI": ["org.apache.commons.exec.DefaultExecuteResultHandler.getException()"], "Fixed commit": "65b4530fb39842418eae8d2acb7c463182039083", "Url": "https://api.github.com/repos/bloomberg/lucene-solr", "Date": "2017-04-03T20:45:54Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((checkPassive.isSelected()) || (checkDefault.isSelected())) || (checkUlti.isSelected()))) new guiGuess_v1_2(mainFrame_v3.champions, true, true, true); else new guiGuess_v1_2(mainFrame_v3.champions, checkPassive.isSelected(), checkDefault.isSelected(), checkUlti.isSelected());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2188/buggy-version/src.mainFrame_v3.java", "BodyUseAPI": ["javax.swing.JCheckBox.isSelected()", "javax.swing.JCheckBox.isSelected()", "javax.swing.JCheckBox.isSelected()"], "Fixed commit": "cee144d1a95db3bdefc5e179c3f95bd8a1760cec", "Url": "https://api.github.com/repos/beheshtipar/ICS4UFinal", "Date": "2015-06-16T15:23:08Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readBufferPosition < 1023) { buffer[(readBufferPosition++)] = b; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7647/buggy-version/app.src.main.java.com.chariotinstruments.chariotgauge.BluetoothSerialService.java", "BodyUseAPI": [], "Fixed commit": "7c6ae19b654c2094f06caaa96e32f5aa83b07735", "Url": "https://api.github.com/repos/mikemey01/ChariotGaugeAndroid", "Date": "2015-05-23T22:08:45Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((w > 0) && (h > 0)) { regenerateBackground(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7647/buggy-version/app.src.main.java.com.chariotinstruments.chariotgauge.GaugeBuilder.java", "BodyUseAPI": [], "Fixed commit": "7c6ae19b654c2094f06caaa96e32f5aa83b07735", "Url": "https://api.github.com/repos/mikemey01/ChariotGaugeAndroid", "Date": "2015-05-23T22:08:45Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 2) { sender.sendMessage(\"Please supply the name of the instance to add this exit point to!\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2854/buggy-version/src.nmt.minecraft.Regicide.IO.RegicideCommands.java", "BodyUseAPI": [], "Fixed commit": "ac14416b3b22784cdb8e1e598af97e7237fca547", "Url": "https://api.github.com/repos/NMTMinecraftClub/Regicide", "Date": "2015-04-10T03:14:26Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.archive.wayback.resourcestore.FlexResourceStore.LOGGER.isLoggable(java.util.logging.Level.WARNING)) { org.archive.wayback.resourcestore.FlexResourceStore.LOGGER.warning(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7294/buggy-version/wayback-core.src.main.java.org.archive.wayback.resourcestore.FlexResourceStore.java", "BodyUseAPI": ["java.util.logging.Logger.warning(java.lang.String)"], "Fixed commit": "47eff442d89ba667c2b999bd8a01a6f7e83d81e8", "Url": "https://api.github.com/repos/internetarchive/wayback", "Date": "2013-03-01T03:26:55Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((prefixPath) != null) { paths.add(((prefixPath) + path)); }else { paths.add(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7294/buggy-version/wayback-core.src.main.java.org.archive.wayback.resourcestore.FlexResourceStore.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "47eff442d89ba667c2b999bd8a01a6f7e83d81e8", "Url": "https://api.github.com/repos/internetarchive/wayback", "Date": "2013-03-01T03:26:55Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((possibleScopes) != null) && ((possibleScopes.size()) > 0)) { for (java.lang.String possibleScope : possibleScopes) { topics.add(new com.jaeckel.amdroid.api.model.Topic(currentTopicDescription, currentTopicBest, possibleScope)); } }else { topics.add(new com.jaeckel.amdroid.api.model.Topic(currentTopicDescription, currentTopicBest, \"Ever\")); topics.add(new com.jaeckel.amdroid.api.model.Topic(currentTopicDescription, currentTopicBest, \"So far\")); topics.add(new com.jaeckel.amdroid.api.model.Topic(currentTopicDescription, currentTopicBest, \"This Year\")); topics.add(new com.jaeckel.amdroid.api.model.Topic(currentTopicDescription, currentTopicBest, \"Today\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8435/buggy-version/AmDroid.src.main.java.com.jaeckel.amdroid.statement.ChooseScopeActivity.java", "BodyUseAPI": [], "Fixed commit": "a7d7dafc52b492da9f8cd6ef4059efd94697ad7a", "Url": "https://api.github.com/repos/biafra23/AmDroid", "Date": "2011-10-15T15:39:35Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentDirectory()) != (com.silverpeas.directory.control.DirectorySessionController.DIRECTORY_DEFAULT)) { lastListUsersCalled = new java.util.ArrayList<com.stratelia.webactiv.beans.admin.UserDetail>(); for (com.stratelia.webactiv.beans.admin.UserDetail connectedUser : connectedUsers) { if (lastAlllistUsersCalled.contains(connectedUser)) { lastListUsersCalled.add(connectedUser); } } }else { lastListUsersCalled = connectedUsers; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8442/buggy-version/war-core.src.main.java.com.silverpeas.directory.control.DirectorySessionController.java", "BodyUseAPI": [], "Fixed commit": "15fb271ed6a77b825dc78ca024898628bc78f720", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2013-02-28T23:11:42Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.mobile.util.ImageUtils.getSize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (size == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7767/buggy-version/src.com.github.mobile.util.ImageUtils.java", "BodyUseAPI": [], "Fixed commit": "b961e5588952f52411cc9f97165c34f9b237e3ca", "Url": "https://api.github.com/repos/slapperwan/gh4a", "Date": "2014-08-15T13:19:55Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ex.getResultCode()) == (ResultCode.GENERATION_ERROR)) { if ((retries++) < limitTries) { if ((com.spikeify.SpikeifyImpl.log.isLoggable(java.util.logging.Level.FINEST)) && (retries >= (limitTries - 3))) { com.spikeify.SpikeifyImpl.log.warning((((((\"Optimistic concurrency failure for \" + work) + \" (retrying:\") + retries) + \"): \") + ex)); } }else { if (com.spikeify.SpikeifyImpl.log.isLoggable(java.util.logging.Level.FINEST)) { com.spikeify.SpikeifyImpl.log.warning(((\"Optimistic concurrency failure for \" + work) + \": Could not update record.\")); } tlTransaction.remove(); throw new java.util.ConcurrentModificationException(\"Error: too much contention. Record could not be updated.\"); } }else { throw new com.spikeify.AerospikeException(ex.getResultCode(), ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7584/buggy-version/src.main.java.com.spikeify.SpikeifyImpl.java", "BodyUseAPI": ["com.spikeify.AerospikeException.getResultCode()", "com.spikeify.AerospikeException.getMessage()", "java.util.logging.Logger.warning((((((\"Optimistic concurrency failure for \" + work) + \" (retrying:\") + retries) + \"): \") + ex))"], "Fixed commit": "539e3a38797445c1e6b2387f2bfb5382faa042ad", "Url": "https://api.github.com/repos/Spikeify/spikeify", "Date": "2015-05-22T06:19:53Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cnt == 1) && (CommonConstants.GBDT_ALG_NAME.equalsIgnoreCase(modelConfig.getAlgorithm()))) { po.binLowestScore = score; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/960/buggy-version/src.main.java.ml.shifu.shifu.core.ConfusionMatrix.java", "BodyUseAPI": [], "Fixed commit": "6559e26fa502a2df3f6d5240adbce6cb09962d04", "Url": "https://api.github.com/repos/huzza/shifu", "Date": "2016-07-15T14:41:37Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isGBDT) { finalPredict = predictSum; }else { finalPredict = predictSum / weightSum; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/960/buggy-version/src.main.java.ml.shifu.shifu.core.TreeModel.java", "BodyUseAPI": [], "Fixed commit": "6559e26fa502a2df3f6d5240adbce6cb09962d04", "Url": "https://api.github.com/repos/huzza/shifu", "Date": "2016-07-15T14:41:37Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.rows) == 0) || ((this.cols) == 0)) { throw new sushi.exceptions.TerminationException(\"Minimizer invoked with no branches to cover and/or no traces that cover the uncovered branches\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7902/buggy-version/src.sushi.execution.minimizer.RunMinimizer.java", "BodyUseAPI": [], "Fixed commit": "22204acd113685bedbfbf6d95e12b66d34e86755", "Url": "https://api.github.com/repos/pietrobraione/sushi", "Date": "2017-05-18T09:17:44Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fromLevel == null) || (fromLevel == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4730/buggy-version/collect-core.src.main.java.org.openforis.collect.persistence.SamplingDesignDao.java", "BodyUseAPI": [], "Fixed commit": "4120eeddced493263f4adaca89c529566c07a923", "Url": "https://api.github.com/repos/openforis/collect", "Date": "2016-11-22T15:35:19Z"},
{"Line": "=>1116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(component instanceof fr.imag.adele.apam.declarations.InstanceDeclaration)) { java.lang.String field = parseString(component.getName(), definition, fr.imag.adele.apam.util.CoreMetadataParser.ATT_FIELD, false); java.lang.String callback = parseString(component.getName(), definition, fr.imag.adele.apam.util.CoreMetadataParser.ATT_METHOD, false); fr.imag.adele.apam.declarations.InjectedPropertyPolicy injected = parseInjectedPropertyPolicy(component.getName(), definition); component.getPropertyDefinitions().add(new fr.imag.adele.apam.declarations.PropertyDefinition(component, name, type, defaultValue, field, callback, injected, false)); }else component.getPropertyDefinitions().add(new fr.imag.adele.apam.declarations.PropertyDefinition(component, name, type, defaultValue, null, null, null, false));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7055/buggy-version/runtime.core.src.main.java.fr.imag.adele.apam.util.CoreMetadataParser.java", "BodyUseAPI": ["fr.imag.adele.apam.util.CoreMetadataParser.parseString(component.getName(),org.apache.felix.ipojo.metadata.Element,java.lang.String,boolean)", "component.getPropertyDefinitions().add(fr.imag.adele.apam.declarations.PropertyDefinition)", "fr.imag.adele.apam.util.CoreMetadataParser.parseInjectedPropertyPolicy(component.getName(),org.apache.felix.ipojo.metadata.Element)", "fr.imag.adele.apam.declarations.ComponentDeclaration.getName()", "fr.imag.adele.apam.declarations.ComponentDeclaration.getPropertyDefinitions()", "fr.imag.adele.apam.declarations.ComponentDeclaration.getName()", "fr.imag.adele.apam.declarations.ComponentDeclaration.getPropertyDefinitions()", "component.getPropertyDefinitions().add(fr.imag.adele.apam.declarations.PropertyDefinition)", "fr.imag.adele.apam.util.CoreMetadataParser.parseString(component.getName(),org.apache.felix.ipojo.metadata.Element,java.lang.String,boolean)", "fr.imag.adele.apam.declarations.ComponentDeclaration.getName()"], "Fixed commit": "c5ab6a8efef6381f5fb4f4be98a9bdf4a89d6f0d", "Url": "https://api.github.com/repos/AdeleResearchGroup/ApAM", "Date": "2013-09-11T12:50:57Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (cart != null) { Functions.DBFunctions.addCart(cart); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5742/buggy-version/src.Servlets.Login.java", "BodyUseAPI": ["Functions.DBFunctions.addCart(java.util.List<model.Sporder>)"], "Fixed commit": "cd9bf7380d32d3d1155327c222b6aa3ba17f1ba6", "Url": "https://api.github.com/repos/JoshPTucker/Samazon", "Date": "2016-07-15T17:43:05Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o == (AttoParser.INVALIDTOKEN)) { continue; }else { p = s.eval(o); java.lang.System.out.println(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7355/buggy-version/schluessel-atto.src.net.morilib.lisp.atto.LispAtto.java", "BodyUseAPI": ["net.morilib.lisp.atto.LispAtto.eval(java.lang.Object)"], "Fixed commit": "37495c7a7bf8a19b456ee71e1239a4b9929fbaed", "Url": "https://api.github.com/repos/y-moriguchi/schluessel-atto", "Date": "2014-07-29T22:20:17Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").equals(\"Linux\")) { try { grafica.Risorse.JAR_PATH = grafica.Risorse.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath(); } catch (java.net.URISyntaxException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4560/buggy-version/Gioco.src.grafica.Risorse.java", "BodyUseAPI": [], "Fixed commit": "a2b8bbffca56582511db4a75ea5b420128c560a8", "Url": "https://api.github.com/repos/gabrieleSarago/lab", "Date": "2017-04-04T17:44:36Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.element.ExecutableElement.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (modifiers.contains(javax.lang.model.element.Modifier.STATIC)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/385/buggy-version/robopupu-compiler.src.main.java.com.robopupu.compiler.plugin.PlugInterfaceAnnotatedInterface.java", "BodyUseAPI": [], "Fixed commit": "6052861b9847a20111e0d441a75a48953e179846", "Url": "https://api.github.com/repos/Fuusio/Robopupu-Compiler", "Date": "2016-10-22T18:53:19Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["HeapPQ.prim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((solution.size()) <= 10) { java.lang.System.out.println((((((e.getLeftNode()) + \" \") + (e.getRightNode())) + \" weight = \") + (e.getWeight()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2896/buggy-version/src.AdjacencyList.java", "BodyUseAPI": [], "Fixed commit": "7cb199e4305c1953424e955d854e0748cdf3c568", "Url": "https://api.github.com/repos/IAmRasputin/MinimumSpanningTree", "Date": "2014-05-16T02:19:24Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["HeapPQ.prim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((solution.size()) <= 10) { java.lang.System.out.println((((((e.getLeftNode()) + \" \") + (e.getRightNode())) + \" weight = \") + (e.getWeight()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2896/buggy-version/src.AdjacencyMatrix.java", "BodyUseAPI": [], "Fixed commit": "7cb199e4305c1953424e955d854e0748cdf3c568", "Url": "https://api.github.com/repos/IAmRasputin/MinimumSpanningTree", "Date": "2014-05-16T02:19:24Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element.getKind().isField()) { return isUnderModulePackage(((com.sun.tools.javac.code.Symbol.VarSymbol) (element)).owner); }else if ((element.getKind().equals(javax.lang.model.element.ElementKind.METHOD)) || (element.getKind().equals(javax.lang.model.element.ElementKind.CONSTRUCTOR))) { return isUnderModulePackage(((com.sun.tools.javac.code.Symbol) (element)).getEnclosingElement()); }else if (element.getKind().equals(javax.lang.model.element.ElementKind.PARAMETER)) { return isUnderModulePackage(((com.sun.tools.javac.code.Symbol) (element)).getEnclosingElement().getEnclosingElement()); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5376/buggy-version/errai-common-apt.src.main.java.org.jboss.errai.common.apt.module.ErraiModule.java", "BodyUseAPI": ["javax.lang.model.element.ElementKind.equals(javax.lang.model.element.ElementKind)", "javax.lang.model.element.Element.getKind()", "javax.lang.model.element.Element.getKind()", "javax.lang.model.element.Element.getKind()", "javax.lang.model.element.ElementKind.equals(javax.lang.model.element.ElementKind)", "javax.lang.model.element.ElementKind.equals(javax.lang.model.element.ElementKind)"], "Fixed commit": "5f6e73a35589abd6be653f9aec4e74dc2ebb1b94", "Url": "https://api.github.com/repos/tiagobento/errai", "Date": "2017-10-25T22:57:32Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getGame().getGameType()) == (com.fullmetalgalaxy.model.GameType.Puzzle)) { nextEvent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3656/buggy-version/src.com.fullmetalgalaxy.client.game.GameEngine.java", "BodyUseAPI": [], "Fixed commit": "23ae34b6a20159872cc293212af22333aa8933f0", "Url": "https://api.github.com/repos/kroc702/fullmetalgalaxy", "Date": "2016-06-21T20:48:52Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readLength == 0) { buf = java.util.Arrays.copyOf(buf, ((buf.length) * 2)); readLength = (buf.length) - startPos; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8760/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONReaderScanner.java", "BodyUseAPI": [], "Fixed commit": "c75ad8bf54deeb3e69078ef81c3f72a690adb4a8", "Url": "https://api.github.com/repos/rabbitgyk/fastjson", "Date": "2014-10-02T18:01:10Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(props.getProperty(\"LANGUAGE_ID\").equals(\"\"))) atts.put(PRODUCT_ATTS.idLanguage, props.getProperty(\"LANGUAGE_ID\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3136/buggy-version/src.org.magic.api.pricers.impl.MagicCardMarketPricer2.java", "BodyUseAPI": ["java.util.Map<org.api.mkm.modele.Product.PRODUCT_ATTS, java.lang.String>.put(PRODUCT_ATTS.idLanguage,props.getProperty(\"LANGUAGE_ID\"))", "org.magic.api.pricers.impl.MagicCardMarketPricer2.getProperty(java.lang.String)"], "Fixed commit": "fec02466c3f320009bee6962dd473713b61b98c6", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-06-18T17:30:14Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(props.getProperty(\"LANGUAGE_ID\").equals(\"\"))) aatts.put(ARTICLES_ATT.idLanguage, props.getProperty(\"LANGUAGE_ID\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3136/buggy-version/src.org.magic.api.pricers.impl.MagicCardMarketPricer2.java", "BodyUseAPI": ["java.util.Map<org.api.mkm.modele.Article.ARTICLES_ATT, java.lang.String>.put(ARTICLES_ATT.idLanguage,props.getProperty(\"LANGUAGE_ID\"))", "org.magic.api.pricers.impl.MagicCardMarketPricer2.getProperty(java.lang.String)"], "Fixed commit": "fec02466c3f320009bee6962dd473713b61b98c6", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-06-18T17:30:14Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (game.isStonePlacingPhase()) { game.passTurn(this); }else { game.applyGroupTypeChanges(this, new java.util.HashMap<java.lang.Integer, goserver.game.GoGroupType>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/977/buggy-version/tpGoServer.src.goserver.server.OnlineGoPlayer.java", "BodyUseAPI": ["goserver.game.GoGame.passTurn(goserver.server.OnlineGoPlayer)", "goserver.game.GoGame.applyGroupTypeChanges(goserver.server.OnlineGoPlayer,java.util.HashMap<java.lang.Integer, goserver.game.GoGroupType>)"], "Fixed commit": "fc343954281c6797633cb22c41ce8e0c2a339a0d", "Url": "https://api.github.com/repos/kozer1223/tpGoProjekt", "Date": "2016-12-20T15:44:54Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (areAllGroupsLocked()) { endGame(); }else { currentPlayer.notifyAboutTurn(GoMoveType.GROUP_NOCHANGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/977/buggy-version/tpGoServer.src.goserver.game.DefaultGoGame.java", "BodyUseAPI": [], "Fixed commit": "fc343954281c6797633cb22c41ce8e0c2a339a0d", "Url": "https://api.github.com/repos/kozer1223/tpGoProjekt", "Date": "2016-12-20T15:44:54Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (areAllGroupsLocked()) { endGame(); }else { currentPlayer.notifyAboutTurn(GoMoveType.GROUP_CHANGED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/977/buggy-version/tpGoServer.src.goserver.game.DefaultGoGame.java", "BodyUseAPI": [], "Fixed commit": "fc343954281c6797633cb22c41ce8e0c2a339a0d", "Url": "https://api.github.com/repos/kozer1223/tpGoProjekt", "Date": "2016-12-20T15:44:54Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.data.gemfire.repository.query.StringBasedGemfireRepositoryQuery.toCollection(template.find(query.toString(), parameters))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isSingleResultNonEntityQuery(method, result)) { return result.iterator().next(); }else { throw new java.lang.IllegalStateException((\"Unsupported query: \" + (query.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/9127/buggy-version/src.main.java.org.springframework.data.gemfire.repository.query.StringBasedGemfireRepositoryQuery.java", "BodyUseAPI": ["java.util.Iterator<?>.next()", "java.util.Collection<?>.iterator()"], "Fixed commit": "558bf88d8bf86b5e03932498b31037c0f7c07403", "Url": "https://api.github.com/repos/spring-projects/spring-data-gemfire", "Date": "2014-06-17T03:01:34Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<me.heraclitus.compiler.backend.Symbol>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ad.getSource().matches(\"^[01]{4}$\"))) { throw new me.heraclitus.compiler.errors.AddressIncorrect(ad); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2397/buggy-version/me.heraclitus.compiler.backend.Compiler.java", "BodyUseAPI": [], "Fixed commit": "a353f74950a0553450cd0817abeffc0c75828515", "Url": "https://api.github.com/repos/charmoniumQ/LALU-Assembler", "Date": "2015-02-12T08:07:03Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.ActionEvent.getActionCommand()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (command.equals(\"removeship\")) { }else if (command.equals(\"removeharbor\")) { }else if (command.equals(\"search\")) { Search_GUI frm = new Search_GUI(WorldMap.harborList, WorldMap.countryList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1494/buggy-version/src.WorldMap.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "411236d19d5d1acee44e359de8dd811ffb1747b0", "Url": "https://api.github.com/repos/tommysays/untidaled", "Date": "2012-11-15T15:08:44Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkLockOut()) end(); else { piece.lockDown(); piece = null; ghost = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2413/buggy-version/src.tetris.Game.java", "BodyUseAPI": [], "Fixed commit": "28e4797676d16da78c80a57fa9fa9fdd153a432e", "Url": "https://api.github.com/repos/mdciotti/tetris", "Date": "2016-04-26T19:48:05Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.api.context.Context.getPersonService().getRelationshipByUuid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (omrsRetrievedRelationship != null) { omrsRelationship = org.openmrs.module.fhir.api.util.FHIRRelatedPersonUtil.updateRelationshipAttributes(omrsRelationship, omrsRetrievedRelationship); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6997/buggy-version/api.src.main.java.org.openmrs.module.fhir.api.strategies.relatedperson.RelatedPersonStrategy.java", "BodyUseAPI": ["org.openmrs.module.fhir.api.util.FHIRRelatedPersonUtil.updateRelationshipAttributes(org.openmrs.Relationship,org.openmrs.Relationship)"], "Fixed commit": "f15279ee5004c4fa0c9630ceb712f402f9319c87", "Url": "https://api.github.com/repos/ubap/openmrs-module-fhir", "Date": "2017-11-23T16:17:39Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (len > 0) count += len;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6289/buggy-version/src.main.java.com.aoindustries.io.ByteCountOutputStream.java", "BodyUseAPI": [], "Fixed commit": "1f9f55c05d6f812ed9a39f6c04e72913b028bf5f", "Url": "https://api.github.com/repos/aoindustries/aocode-public", "Date": "2017-02-15T08:48:05Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bytes > 0) count += bytes;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6289/buggy-version/src.main.java.com.aoindustries.io.ByteCountInputStream.java", "BodyUseAPI": [], "Fixed commit": "1f9f55c05d6f812ed9a39f6c04e72913b028bf5f", "Url": "https://api.github.com/repos/aoindustries/aocode-public", "Date": "2017-02-15T08:48:05Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bytes > 0) count += bytes;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6289/buggy-version/src.main.java.com.aoindustries.io.ByteCountInputStream.java", "BodyUseAPI": [], "Fixed commit": "1f9f55c05d6f812ed9a39f6c04e72913b028bf5f", "Url": "https://api.github.com/repos/aoindustries/aocode-public", "Date": "2017-02-15T08:48:05Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (theBindingsIgnored == null) { theBindingsIgnored = this.bindings; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2553/buggy-version/src.main.java.org.logic2j.core.impl.FinalVarTermMarshaller.java", "BodyUseAPI": [], "Fixed commit": "7030871204b6cdd493637ff9338e72ebaaf7c993", "Url": "https://api.github.com/repos/ltettoni/logic2j", "Date": "2014-01-19T00:00:34Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((position > (-1)) && (position < ((originalList.size()) - 1))) { org.joda.time.DateTime date = new org.joda.time.DateTime(originalList.get(position).epochTime); currentItemPos = getPositionInList(date); invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6706/buggy-version/timeline.src.main.java.com.tusharchoudhary.timeline.TimelineView.java", "BodyUseAPI": ["java.util.List<com.tusharchoudhary.timeline.TimelineView.TimelineDataItem>.get(int)"], "Fixed commit": "0ba43b5148e5b12b41eaefc48578c117a00ace5e", "Url": "https://api.github.com/repos/cougarm6/Timeline", "Date": "2016-01-29T15:38:17Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentripplanner.routing.core.State.getBackEdge()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (e == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6011/buggy-version/opentripplanner-routing.src.main.java.org.opentripplanner.routing.spt.GraphPath.java", "BodyUseAPI": [], "Fixed commit": "837c488fdabaa08348c7b1c856885152c14d3bf5", "Url": "https://api.github.com/repos/flamholz/OpenTripPlanner", "Date": "2013-02-19T16:12:48Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3911/buggy-version/src.snorri.main.XRayCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "c76f803205125d51c7019710d2a12ac0f6ac0849", "Url": "https://api.github.com/repos/viking-sudo-rm/XRayField", "Date": "2015-12-02T07:30:57Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (f.exists()) { clientSecrets = com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets.load(jsonFactory, new java.io.FileReader(f)); }else { clientSecrets = com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets.load(jsonFactory, new java.io.InputStreamReader(com.google.api.services.drive.Drive.class.getResourceAsStream(\"/client_secrets.json\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3274/buggy-version/src.main.java.com.vgalloy.server.service.manager.impl.CredentialManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "20b6b8cf234eef78fb2f39f7fd2a6d2df5d08c32", "Url": "https://api.github.com/repos/vgalloy/server", "Date": "2016-01-28T14:53:12Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextSuggestion != null) { return nextSuggestion; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6768/buggy-version/semanticparser-impl.src.main.java.ai.labs.parser.internal.matches.MatchMatrix.java", "BodyUseAPI": [], "Fixed commit": "2945ce53996ef984e3e5bb37d2e7ed3f73c3015a", "Url": "https://api.github.com/repos/EdtechFoundry/EDDI", "Date": "2017-07-19T09:48:57Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.epita.sigl.mepa.core.service.AppUserService.getAllUsers()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((appUsers.size()) > 0) { modelMap.addAttribute(\"usersList\", appUsers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1256/buggy-version/mepa-front.src.main.java.fr.epita.sigl.mepa.front.controller.authentification.AuthController.java", "BodyUseAPI": ["org.springframework.ui.ModelMap.addAttribute(java.lang.String,java.util.List<fr.epita.sigl.mepa.core.domain.AppUser>)"], "Fixed commit": "dda41862e2d5ba41ed688cb53fb9c73e55839ff8", "Url": "https://api.github.com/repos/sigl-mepa-2017/mepa", "Date": "2016-07-26T02:34:55Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((patientEncounter.getMissionTrip()) != null) { patientEncounterItem.setMissionTripId(patientEncounter.getMissionTrip().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4489/buggy-version/app.femr.common.ItemModelMapper.java", "BodyUseAPI": ["femr.common.IPatientEncounter.getMissionTrip()", "femr.common.PatientEncounterItem.setMissionTripId(patientEncounter.getMissionTrip().getId())", "patientEncounter.getMissionTrip().getId()"], "Fixed commit": "6e8be7d4ec8d02890c0a749e81994ebfe47b55b5", "Url": "https://api.github.com/repos/kdunlap/femr", "Date": "2016-03-29T01:20:25Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.kpfu.itis.group11501.shatin.politics_web_project.services.UserService.createNewUser(ru.kpfu.itis.group11501.shatin.politics_web_project.helpers.Helper.getHashedString(request.getParameter(\"password\")),request.getParameter(\"email\").toLowerCase(),Role.USER,int,request.getParameter(\"passport_series\"),request.getParameter(\"passport_num\"),request.getParameter(\"name\"),request.getParameter(\"surname\"),request.getParameter(\"patronymic\"),java.time.LocalDate)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentNewUser != null) { response.sendRedirect(\"/login\"); }else { response.sendRedirect(\"/signup?error=data_error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7457/buggy-version/src.ru.kpfu.itis.group11501.shatin.politics_web_project.servlets.SignupServlet.java", "BodyUseAPI": [], "Fixed commit": "b2d441cd9e3201fe6cfc319c9fca9b5b3c903071", "Url": "https://api.github.com/repos/OlegShatin/Politics_project", "Date": "2016-11-25T15:41:53Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (token != null) { url.setToken(token); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5732/buggy-version/src.main.java.com.wouterbreukink.onedrive.client.ROOneDriveProvider.java", "BodyUseAPI": ["com.wouterbreukink.onedrive.client.OneDriveUrl.setToken(java.lang.String)"], "Fixed commit": "d4b8acf0e2a4e13b3ec229da8862035dde7e12e2", "Url": "https://api.github.com/repos/wooti/onedrive-java-client", "Date": "2015-07-26T22:07:44Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (print) { if (line.isEmpty()) { return sb.toString(); } sb.append(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8909/buggy-version/src.main.java.com.hazelcast.utils.BufferingOutputHandler.java", "BodyUseAPI": [], "Fixed commit": "1da4a85d9adafbf606f8ff91d0bf1b256eef8649", "Url": "https://api.github.com/repos/hazelcast/hazelcast-qa", "Date": "2017-07-10T15:52:31Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(comment)) { errorMessage.add(\"\u30b3\u30e1\u30f3\u30c8\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7928/buggy-version/src.bbs.controller.CommentServlet.java", "BodyUseAPI": [], "Fixed commit": "75e914f4e0ff12a18584e03a35b968456025ee7c", "Url": "https://api.github.com/repos/SatokoENDO/BBS", "Date": "2017-05-15T01:54:02Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (player != null) { player.sendMessage(((com.laytonsmith.abstraction.MCChatColor.YELLOW) + \"[CommandHelper]: MethodScript files processed\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3901/buggy-version/src.main.java.com.laytonsmith.core.AliasCore.java", "BodyUseAPI": ["com.laytonsmith.abstraction.MCPlayer.sendMessage(((com.laytonsmith.abstraction.MCChatColor.YELLOW) + \"[CommandHelper]: MethodScript files processed\"))"], "Fixed commit": "7035399e36faef72a8c4004415c5a1c1ab01897a", "Url": "https://api.github.com/repos/jb-aero/commandhelper", "Date": "2012-09-20T06:37:16Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (qName.equalsIgnoreCase(\"comment\")) { comment = new java.lang.StringBuilder(); }else if (qName.equalsIgnoreCase(\"tag\")) { if ((oci) != null) { java.lang.String tagName = attributes.getValue(\"name\"); java.lang.String tagText = attributes.getValue(\"text\").trim(); if ((methodName) != null) { boolean lGetterCheck = isGetter(methodName); boolean lSetterCheck = (!lGetterCheck) && (isSetter(methodName)); if (lGetterCheck || lSetterCheck) { if (com.datatorrent.stram.webapp.OperatorDiscoverer.MethodTagType.OMIT_FROM_UI.tag.equals(tagName)) { addTagToMethod((lGetterCheck ? oci.getMethods : oci.setMethods), tagText, com.datatorrent.stram.webapp.OperatorDiscoverer.MethodTagType.OMIT_FROM_UI); }else if (com.datatorrent.stram.webapp.OperatorDiscoverer.MethodTagType.USE_SCHEMA.tag.equals(tagName)) { addTagToMethod((lGetterCheck ? oci.getMethods : oci.setMethods), tagText, com.datatorrent.stram.webapp.OperatorDiscoverer.MethodTagType.USE_SCHEMA); }else if (com.datatorrent.stram.webapp.OperatorDiscoverer.MethodTagType.DESCRIPTION.tag.equals(tagName)) { addTagToMethod((lGetterCheck ? oci.getMethods : oci.setMethods), tagText, com.datatorrent.stram.webapp.OperatorDiscoverer.MethodTagType.DESCRIPTION); } } }else if ((fieldName) != null) { }else { oci.tags.put(tagName, tagText); } } }else if (qName.equalsIgnoreCase(\"field\")) { fieldName = attributes.getValue(\"name\"); }else if (qName.equalsIgnoreCase(\"method\")) { methodName = attributes.getValue(\"name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4733/buggy-version/engine.src.main.java.com.datatorrent.stram.webapp.OperatorDiscoverer.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "d24fa20f96866489f7633b885fc9a82f954eeb3f", "Url": "https://api.github.com/repos/otterc/Apex", "Date": "2015-09-15T01:08:34Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFragmentManager().findFragmentByTag(\"favorites\")) == null) { getFragmentManager().beginTransaction().add(R.id.base_navigation_drawer_content, new com.movile.up.seriestracker.fragment.FavoritesFragment(), \"favorites\").commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7702/buggy-version/SeriesTracker.app.src.main.java.com.movile.up.seriestracker.activity.base.BaseNavigationDrawerActivity.java", "BodyUseAPI": [], "Fixed commit": "1a2751b230e764059cb61cfbc1dceed7d1b0cbad", "Url": "https://api.github.com/repos/jovit/movile-up", "Date": "2015-07-29T01:41:07Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) return new ReturnObjectImpl(null, ErrorMessage.INVALID_ARGUMENT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5313/buggy-version/ArrayList.java", "BodyUseAPI": [], "Fixed commit": "069bce3328c2b699a15a4111fd1e6d266fed393d", "Url": "https://api.github.com/repos/aworton/cw-ds", "Date": "2016-11-08T10:45:13Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlockMetadata(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((meta == 4) || (meta == 5)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/322/buggy-version/src.main.java.net.quetzi.bluepower.blocks.BlockCrop.java", "BodyUseAPI": [], "Fixed commit": "20e54534c40d4e270b3a1c3ee72383e16fa40727", "Url": "https://api.github.com/repos/Quetzi/BluePower", "Date": "2014-06-04T12:27:23Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndexOrThrow(\"tbl_name\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(tableNames.contains(tableName))) { tableNames.add(tableName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4386/buggy-version/library.src.org.litepal.util.DBUtility.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "f6269fc3d2d1760723d96ee03d9b0fddfa931104", "Url": "https://api.github.com/repos/LitePalFramework/LitePal", "Date": "2014-07-14T08:14:47Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rs.getInt(\"isZombie\")) == 1) { user.isZombie = true; }else { user.isZombie = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/9031/buggy-version/server.src.main.java.hvz.server.DBHandler.java", "BodyUseAPI": [], "Fixed commit": "d1e505ac28066a422f7c021abff03c563fcfafe3", "Url": "https://api.github.com/repos/paulsteele/HvZ-App", "Date": "2015-04-09T22:42:55Z"},
{"Line": "=>4441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geotools.xml.xsi.XSISimpleTypes.find(ats.get(i).getType().getBinding())", "org.opengis.feature.simple.SimpleFeature.getAttribute(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(canEncodeValue(t, value))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3792/buggy-version/modules.library.xml.src.main.java.org.geotools.xml.gml.GMLComplexTypes.java", "BodyUseAPI": [], "Fixed commit": "488bdff40adf71564af8cc221211d49991289b29", "Url": "https://api.github.com/repos/mprins/geotools", "Date": "2016-09-01T12:45:16Z"},
{"Line": "=>4411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geotools.xml.schema.Element.getType()", "org.opengis.feature.simple.SimpleFeature.getAttribute(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(canEncodeValue(type, value))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3792/buggy-version/modules.library.xml.src.main.java.org.geotools.xml.gml.GMLComplexTypes.java", "BodyUseAPI": [], "Fixed commit": "488bdff40adf71564af8cc221211d49991289b29", "Url": "https://api.github.com/repos/mprins/geotools", "Date": "2016-09-01T12:45:16Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((level.getHeight()) - 1) < (level.getDefaultHeight())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1471/buggy-version/src.Workspace.java", "BodyUseAPI": [], "Fixed commit": "58b66995b9f82530bb3ed49ba3765da5ca938031", "Url": "https://api.github.com/repos/dnipromv/level-constructor", "Date": "2015-08-25T22:44:13Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == (R.id.detailPinnwand)) { if ((mJoinBtn.getText().equals(\"Nicht mehr teilnehmen\")) | (mJoinBtn.getText().equals(\"Event bearbeiten\"))) { android.content.Intent iPinnwand = new android.content.Intent(this, mcmrt.event_planer.CommentaryActivity.class); iPinnwand.putExtra(\"eventId\", event.getEventkey()); startActivity(iPinnwand); }else { android.widget.Toast.makeText(this, \"Verweigert: kein Teilnehmer des Events\", Toast.LENGTH_LONG).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/250/buggy-version/app.src.main.java.mcmrt.event_planer.EventDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "210de538f92394a5842d79d6f2dfc73b219468d1", "Url": "https://api.github.com/repos/RobWue/MC-EventPlaner", "Date": "2017-01-21T14:36:38Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (type == \"Regular\") { for (int i = 0; i < numberOfRooms; i++) { rm.getRooms().add(new Room(numberOfBeds, ((i + count1) + 100), cost, type)); } }else if (type == \"Deluxe\") { for (int i = 0; i < numberOfRooms; i++) { rm.getRooms().add(new Room(numberOfBeds, ((i + count2) + 200), cost, type)); } }else if (type == \"Platinum\") { for (int i = 0; i < numberOfRooms; i++) { rm.getRooms().add(new Room(numberOfBeds, ((i + count3) + 300), cost, type)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6945/buggy-version/src.DataManagementFrame.java", "BodyUseAPI": ["rm.getRooms().add(Room)", "rm.getRooms().add(Room)", "rm.getRooms().add(Room)"], "Fixed commit": "e3355238426a500b3efe6da33e2ba9248e78d2ae", "Url": "https://api.github.com/repos/Aris1353/Hotelio", "Date": "2014-06-08T12:25:40Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codelibs.fess.suggest.index.writer.SuggestIndexWriter.mergeItems(org.codelibs.fess.suggest.entity.SuggestItem[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mergedItems.length) == 0) { return new org.codelibs.fess.suggest.index.writer.SuggestWriterResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8903/buggy-version/src.main.java.org.codelibs.fess.suggest.index.writer.SuggestIndexWriter.java", "BodyUseAPI": [], "Fixed commit": "9d0860de471c71d150db94123681855c449199c1", "Url": "https://api.github.com/repos/codelibs/fess-suggest", "Date": "2015-12-22T06:21:25Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((biome.getSpawnableList(type)) != null) { biome.getSpawnableList(type).clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2475/buggy-version/src.jas.common.JustAnotherSpawner.java", "BodyUseAPI": ["net.minecraft.world.biome.BiomeGenBase.getSpawnableList(net.minecraft.entity.EnumCreatureType)", "biome.getSpawnableList(type).clear()"], "Fixed commit": "268a9c2455be6b4016f129e880d9bf07b935bebe", "Url": "https://api.github.com/repos/Crudedragos/JustAnotherSpawner", "Date": "2013-04-25T14:09:13Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.security.ProtectionDomain.getCodeSource()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (src != null) { java.net.URL jar = src.getLocation(); org.apache.drill.yarn.core.AppSpec.LOG.trace((\"Class found in URL: \" + (jar.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3404/buggy-version/drill-yarn.src.main.java.org.apache.drill.yarn.core.AppSpec.java", "BodyUseAPI": ["java.security.CodeSource.getLocation()"], "Fixed commit": "466f094984447790fc76a88e60373ebb393716ad", "Url": "https://api.github.com/repos/paul-rogers/drill", "Date": "2016-06-14T20:49:42Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((thisRail.getTransceiver()) != null) setOutputSignal(thisRail.getTransceiver(), true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2980/buggy-version/src.main.java.club.nsdn.nyasamarailway.Blocks.BlockRailSniffer.java", "BodyUseAPI": ["club.nsdn.nyasamarailway.TileEntities.Signals.TileEntityRailTransceiver.getTransceiver()", "club.nsdn.nyasamarailway.Blocks.BlockRailSniffer.setOutputSignal(thisRail.getTransceiver(),boolean)"], "Fixed commit": "f9a2f98e04768130808e0436d2a022aa080f13e3", "Url": "https://api.github.com/repos/NSDN/NyaSamaRailway", "Date": "2017-10-02T09:00:02Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((thisRail.getTransceiver()) != null) setOutputSignal(thisRail.getTransceiver(), false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2980/buggy-version/src.main.java.club.nsdn.nyasamarailway.Blocks.BlockRailSniffer.java", "BodyUseAPI": ["club.nsdn.nyasamarailway.TileEntities.Signals.TileEntityRailTransceiver.getTransceiver()", "club.nsdn.nyasamarailway.Blocks.BlockRailSniffer.setOutputSignal(thisRail.getTransceiver(),boolean)"], "Fixed commit": "f9a2f98e04768130808e0436d2a022aa080f13e3", "Url": "https://api.github.com/repos/NSDN/NyaSamaRailway", "Date": "2017-10-02T09:00:02Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (value == null) { metadataMap = new java.util.HashMap<>(); }else { java.lang.String metadataString = new java.lang.String(value, \"UTF8\"); metadataMap = org.apache.rya.api.domain.StatementMetadata.gson.fromJson(metadataString, java.util.HashMap.class); if ((metadataMap) == null) { metadataMap = new java.util.HashMap<>(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2930/buggy-version/common.rya.api.src.main.java.org.apache.rya.api.domain.StatementMetadata.java", "BodyUseAPI": [], "Fixed commit": "c20d9b3898842161160a1662529cc11fd5b8adf3", "Url": "https://api.github.com/repos/amihalik/incubator-rya", "Date": "2016-12-15T21:57:41Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (metadataMap.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2930/buggy-version/common.rya.api.src.main.java.org.apache.rya.api.domain.StatementMetadata.java", "BodyUseAPI": [], "Fixed commit": "c20d9b3898842161160a1662529cc11fd5b8adf3", "Url": "https://api.github.com/repos/amihalik/incubator-rya", "Date": "2016-12-15T21:57:41Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.hasErrors()) { edu.chl.dat076.foodfeed.controller.UserController.logger.error(result.getAllErrors().toString()); if (!(model.containsAttribute(\"error\"))) { model.addAttribute(\"error\", (\"The information you entered was not OK, \" + (result.getFieldError().getDefaultMessage()))); } return getRegisterForm(model); }else { userDao.create(usr); return \"redirect:login\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2441/buggy-version/src.main.java.edu.chl.dat076.foodfeed.controller.UserController.java", "BodyUseAPI": ["org.slf4j.Logger.error(result.getAllErrors().toString())", "org.springframework.validation.BindingResult.getAllErrors()", "result.getAllErrors().toString()", "org.springframework.ui.Model.addAttribute(java.lang.String,(\"The information you entered was not OK, \" + (result.getFieldError().getDefaultMessage())))", "org.springframework.validation.BindingResult.getFieldError()", "result.getFieldError().getDefaultMessage()"], "Fixed commit": "f3f82cbf0cc4201dab93dfef3bb375d3dc62e73b", "Url": "https://api.github.com/repos/kirayatail/foodfeed", "Date": "2012-10-22T12:46:48Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iuv.length()) <= 4) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7732/buggy-version/govpay-orm.src.main.java.it.govpay.bd.pagamento.util.IuvUtils.java", "BodyUseAPI": [], "Fixed commit": "49f03e51ff698e5631fef101056c554e58ff9e6c", "Url": "https://api.github.com/repos/link-it/GovPay", "Date": "2016-10-14T13:23:56Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((application == null) || (\"\".equals(application))) application = \"conference\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6033/buggy-version/web-application.src.main.local.java.io.microprofile.showcase.web.EndpointService.java", "BodyUseAPI": [], "Fixed commit": "0a77107caad56ce2bd348ecc31b20c5a4b73dbce", "Url": "https://api.github.com/repos/jimrigsbee/microprofile-conference", "Date": "2017-12-08T20:49:53Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de.escalon.hypermedia.spring.siren.DataType.isSingleValueType(item.getClass())) { java.lang.Object listObject = propertiesNode.get(name); if (listObject == null) { listObject = new java.util.ArrayList(); propertiesNode.put(name, listObject); } if (listObject instanceof java.util.Collection) { ((java.util.Collection) (listObject)).add(item); } }else if (item != null) { traverseSubEntity(objectNode, item, name, docUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7795/buggy-version/spring-hateoas-ext.src.main.java.de.escalon.hypermedia.spring.siren.SirenUtils.java", "BodyUseAPI": ["java.lang.Object.add(java.lang.Object)", "de.escalon.hypermedia.spring.siren.SirenUtils.traverseSubEntity(de.escalon.hypermedia.spring.siren.SirenEntityContainer,java.lang.Object,java.lang.String,java.lang.String)"], "Fixed commit": "87b16d177fe55b98c8f0023398d1540e5bc4849e", "Url": "https://api.github.com/repos/dschulten/hydra-java", "Date": "2016-04-28T16:49:07Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (content instanceof de.escalon.hypermedia.spring.siren.Resources) { throw new java.lang.UnsupportedOperationException(\"Resources not supported yet\"); }else if (content instanceof de.escalon.hypermedia.spring.siren.ResourceSupport) { bean = content; links = ((de.escalon.hypermedia.spring.siren.ResourceSupport) (content)).getLinks(); }else { bean = content; links = java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7795/buggy-version/spring-hateoas-ext.src.main.java.de.escalon.hypermedia.spring.siren.SirenUtils.java", "BodyUseAPI": [], "Fixed commit": "87b16d177fe55b98c8f0023398d1540e5bc4849e", "Url": "https://api.github.com/repos/dschulten/hydra-java", "Date": "2016-04-28T16:49:07Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.pms.configuration.RendererConfiguration.getCustomFFmpegOptions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(customFFmpegOptions.contains(\"-maxrate\"))) && (bufSize > 0)) { videoBitrateOptions.add(\"-maxrate\"); if (((defaultMaxBitrates[0]) > 0) && (!(params.mediaRenderer.isTranscodeToMPEGPS()))) { videoBitrateOptions.add(((java.lang.String.valueOf(defaultMaxBitrates[0])) + \"k\")); }else if (!(params.mediaRenderer.isTranscodeToMPEGPS())) { videoBitrateOptions.add(\"40M\"); }else if (params.mediaRenderer.isTranscodeToMPEGPS()) { videoBitrateOptions.add(\"9800k\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6544/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": [], "Fixed commit": "9008173e16bbbe440af3140cc03cdfc8d38548ef", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-12-01T18:58:26Z"},
{"Line": "=>694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(params.mediaRenderer.isTranscodeToMPEGPS())) { videoBitrateOptions.add(\"40M\"); }else if (params.mediaRenderer.isTranscodeToMPEGPS()) { videoBitrateOptions.add(\"9800k\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6544/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": ["params.mediaRenderer.isTranscodeToMPEGPS()"], "Fixed commit": "9008173e16bbbe440af3140cc03cdfc8d38548ef", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-12-01T18:58:26Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((altAllele.size()) > 1) { altAllele.clear(); altAllele.add(alt.get(leftFlank)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8472/buggy-version/src.org.cchmc.bmi.snpomics.annotation.interactive.HgvsProtName.java", "BodyUseAPI": ["java.util.List<org.cchmc.bmi.snpomics.translation.AminoAcid>.add(alt.get(leftFlank))", "java.util.List<org.cchmc.bmi.snpomics.translation.AminoAcid>.clear()"], "Fixed commit": "b5f3d3d7e84d605e92e5142315899770384336f3", "Url": "https://api.github.com/repos/aplassard/SNPomics", "Date": "2012-08-15T18:16:36Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((token.getType()) == (JavaLexer.COMMENT)) || ((token.getType()) == (JavaLexer.LINE_COMMENT))) { return \"\"; }else { return token.getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8595/buggy-version/src.advtrack.kevin.lexer.JavaSourceLexer.java", "BodyUseAPI": ["advtrack.kevin.lexer.Token.getText()"], "Fixed commit": "0cf4453d7df5e3b4f7abfc4e51acaf4940e889e8", "Url": "https://api.github.com/repos/kevinvandervlist/rascal-msr", "Date": "2012-12-16T09:05:20Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (q.getType().equals(Question.Type.GEO)) { qXML.setType(org.waterforpeople.mapping.app.web.SurveyAssemblyServlet.GEO_QUESTION_TYPE); if (((q.getGeoLocked()) != null) && (q.getGeoLocked())) { qXML.setLocked(q.getGeoLocked().toString()); } }else if (q.getType().equals(Question.Type.NUMBER)) { qXML.setType(org.waterforpeople.mapping.app.web.SurveyAssemblyServlet.FREE_QUESTION_TYPE); if (!hasValidation) { com.gallatinsystems.survey.domain.xml.ValidationRule vrule = new com.gallatinsystems.survey.domain.xml.ValidationRule(); vrule.setValidationType(\"numeric\"); vrule.setSigned(\"false\"); qXML.setValidationRule(vrule); } if (((q.getRequireDoubleEntry()) != null) && (q.getRequireDoubleEntry())) { qXML.setRequireDoubleEntry(q.getRequireDoubleEntry().toString()); } }else if (q.getType().equals(Question.Type.OPTION)) { qXML.setType(org.waterforpeople.mapping.app.web.SurveyAssemblyServlet.OPTION_QUESTION_TYPE); }else if (q.getType().equals(Question.Type.PHOTO)) { qXML.setType(org.waterforpeople.mapping.app.web.SurveyAssemblyServlet.PHOTO_QUESTION_TYPE); }else if (q.getType().equals(Question.Type.VIDEO)) { qXML.setType(org.waterforpeople.mapping.app.web.SurveyAssemblyServlet.VIDEO_QUESTION_TYPE); }else if (q.getType().equals(Question.Type.SCAN)) { qXML.setType(org.waterforpeople.mapping.app.web.SurveyAssemblyServlet.SCAN_QUESTION_TYPE); }else if (q.getType().equals(Question.Type.NAME)) { qXML.setType(org.waterforpeople.mapping.app.web.SurveyAssemblyServlet.FREE_QUESTION_TYPE); com.gallatinsystems.survey.domain.xml.ValidationRule vrule = new com.gallatinsystems.survey.domain.xml.ValidationRule(); vrule.setValidationType(\"name\"); qXML.setValidationRule(vrule); }else if (q.getType().equals(Question.Type.STRENGTH)) { qXML.setType(org.waterforpeople.mapping.app.web.SurveyAssemblyServlet.STRENGTH_QUESTION_TYPE); }else if (q.getType().equals(Question.Type.DATE)) { qXML.setType(org.waterforpeople.mapping.app.web.SurveyAssemblyServlet.DATE_QUESTION_TYPE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3697/buggy-version/GAE.src.org.waterforpeople.mapping.app.web.SurveyAssemblyServlet.java", "BodyUseAPI": ["q.getType().equals(Question.Type.VIDEO)", "q.getType().equals(Question.Type.NUMBER)", "com.gallatinsystems.survey.domain.Question.getType()", "com.gallatinsystems.survey.domain.Question.getRequireDoubleEntry()", "q.getType().equals(Question.Type.STRENGTH)", "q.getType().equals(Question.Type.NAME)", "com.gallatinsystems.survey.domain.Question.setRequireDoubleEntry(q.getRequireDoubleEntry().toString())", "com.gallatinsystems.survey.domain.Question.setLocked(q.getGeoLocked().toString())", "q.getType().equals(Question.Type.DATE)", "q.getGeoLocked().toString()", "q.getRequireDoubleEntry().toString()", "com.gallatinsystems.survey.domain.Question.getRequireDoubleEntry()", "q.getType().equals(Question.Type.PHOTO)", "com.gallatinsystems.survey.domain.Question.getGeoLocked()", "com.gallatinsystems.survey.domain.Question.getType()", "com.gallatinsystems.survey.domain.Question.getRequireDoubleEntry()", "com.gallatinsystems.survey.domain.Question.getGeoLocked()", "q.getType().equals(Question.Type.SCAN)", "q.getType().equals(Question.Type.OPTION)", "com.gallatinsystems.survey.domain.Question.getType()", "com.gallatinsystems.survey.domain.Question.getType()", "com.gallatinsystems.survey.domain.Question.getGeoLocked()", "com.gallatinsystems.survey.domain.Question.getType()", "com.gallatinsystems.survey.domain.Question.getType()", "com.gallatinsystems.survey.domain.Question.getType()", "com.gallatinsystems.survey.domain.Question.getType()"], "Fixed commit": "4181292146d06b14121026f4c259b2c7ccc08a45", "Url": "https://api.github.com/repos/akvo/akvo-flow", "Date": "2013-11-08T10:11:59Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (regex.getNotFollowSet().isEmpty()) { newRegularExpressions.add(regex.withCondition(org.jgll.grammar.condition.RegularExpressionCondition.notFollow(t.getRange()))); }else { for (org.jgll.grammar.symbol.Range range : regex.getNotFollowSet()) { if (!(range.overlaps(t.getRange()))) { newRegularExpressions.add(regex.withCondition(org.jgll.grammar.condition.RegularExpressionCondition.notFollow(t.getRange()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8042/buggy-version/src.org.jgll.regex.RegularExpressionsUtil.java", "BodyUseAPI": ["org.jgll.regex.RegularExpression.withCondition(org.jgll.grammar.condition.RegularExpressionCondition.notFollow(t.getRange()))", "org.jgll.regex.RegularExpression.getNotFollowSet()", "org.jgll.regex.RegularExpression.withCondition(org.jgll.grammar.condition.RegularExpressionCondition.notFollow(t.getRange()))", "java.util.Set<org.jgll.regex.RegularExpression>.add(regex.withCondition(org.jgll.grammar.condition.RegularExpressionCondition.notFollow(t.getRange())))", "java.util.Set<org.jgll.regex.RegularExpression>.add(regex.withCondition(org.jgll.grammar.condition.RegularExpressionCondition.notFollow(t.getRange())))"], "Fixed commit": "f89362ace8fce2ceeabe9b5ee8f2203f0259c566", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2014-05-06T11:36:02Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<loop.Context>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((context.thisFunction.children().get((i - 1))) instanceof loop.Assignment)) methodVisitor.visitInsn(loop.POP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3405/buggy-version/src.loop.AsmCodeEmitter.java", "BodyUseAPI": [], "Fixed commit": "0090febc277dcb2314a11a2d0155c8a3934754d3", "Url": "https://api.github.com/repos/dhanji/loop", "Date": "2012-08-20T07:02:24Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jComboBox1.getSelectedIndex()) == 0) { tot++; if (jCheckBox1.isSelected()) { tot++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6939/buggy-version/src.gui.java", "BodyUseAPI": [], "Fixed commit": "b4978df7fa51edfdef58995a4316dce4bc485453", "Url": "https://api.github.com/repos/rawells14/PointCollection", "Date": "2014-09-25T19:27:50Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jComboBox1.getSelectedIndex()) == 1) { tot += java.lang.Integer.parseInt(jTextField2.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6939/buggy-version/src.gui.java", "BodyUseAPI": [], "Fixed commit": "b4978df7fa51edfdef58995a4316dce4bc485453", "Url": "https://api.github.com/repos/rawells14/PointCollection", "Date": "2014-09-25T19:27:50Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == ((listWork.size()) - 1)) { view.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7990/buggy-version/Paditech_android_huynq_first.app.src.main.java.com.pesteam.paditech_android_huynq_first.Screen3Adapter.java", "BodyUseAPI": [], "Fixed commit": "271730b577913f5d4fd53d89c3d3cb5774db164a", "Url": "https://api.github.com/repos/kanblack/paditech_android_huynq_first", "Date": "2017-12-11T04:12:01Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kth.game.othello.ClassicOthello.getNode(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isFriendly(n, playerId)) { nodesToSwap.addAll(potentialSwapNodes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/9115/buggy-version/src.kth.game.othello.ClassicOthello.java", "BodyUseAPI": [], "Fixed commit": "4b8a3372c45cc3c56c1523b5250c2753238e5eba", "Url": "https://api.github.com/repos/jostjernberg/othello", "Date": "2013-11-14T14:44:31Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(topological2.hasOrder())) { edu.princeton.cs.algs4.StdOut.println(\"Not a DAG\"); }else { edu.princeton.cs.algs4.StdOut.print(\"Topological order: \"); for (int v : topological2.order()) { edu.princeton.cs.algs4.StdOut.print((v + \" \")); } edu.princeton.cs.algs4.StdOut.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4052/buggy-version/src.main.java.edu.princeton.cs.algs4.TopologicalX.java", "BodyUseAPI": ["edu.princeton.cs.algs4.TopologicalX.order()"], "Fixed commit": "2172e74cfd70ed5fe4a4ebadc100d9f3a0f68123", "Url": "https://api.github.com/repos/kevin-wayne/algs4", "Date": "2015-11-15T21:07:16Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dmillerw.bugSnag4MC.api.ICrashHandler.getAdditionalPackages()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (additionalPackages != null) { for (java.lang.String pack : additionalPackages) { if (traceElement.getClassName().contains(pack)) { sendFlag = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1578/buggy-version/src.com.dmillerw.bugSnag4MC.core.CrashReportHandler.java", "BodyUseAPI": [], "Fixed commit": "8779967d1a458d44e0a1720fbf9a5055ff15296b", "Url": "https://api.github.com/repos/dmillerw/BugSnag4MC", "Date": "2013-10-26T02:59:51Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSeperateWindow())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2944/buggy-version/src.org.nschmidt.ldparteditor.shells.editortext.EditorTextWindow.java", "BodyUseAPI": [], "Fixed commit": "31d3513bc00fdbe5afac44fc22ce17c2f773d741", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-24T10:24:14Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.wequick.small.ApkBundleLauncher.sLoadedActivities) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6769/buggy-version/Android.DevSample.small.src.main.java.net.wequick.small.ApkBundleLauncher.java", "BodyUseAPI": [], "Fixed commit": "1a2b410256fe508db64c2039815a0e1d8eb8c1d5", "Url": "https://api.github.com/repos/darlk/Small", "Date": "2016-02-04T00:51:00Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recipes == null) || (recipes.isEmpty())) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/148/buggy-version/DailyCookApp.src.main.java.com.vn.dailycookapp.restmodel.model.SearchRecipeModel.java", "BodyUseAPI": [], "Fixed commit": "13e18371e0e46764ac4e8c1d9b6e972d9ec5708a", "Url": "https://api.github.com/repos/duyetpt/dailycook_restructe", "Date": "2015-11-01T09:49:19Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCompleted()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2999/buggy-version/DungeonTales.java", "BodyUseAPI": [], "Fixed commit": "8549c05ef58e26e2728c3c9644d3c3b097daea45", "Url": "https://api.github.com/repos/JustinGranof/DungeonTales", "Date": "2017-01-16T19:08:14Z"},
{"Line": "=>1084", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Constants.CYCLE_TYPE_SG.equals(o.getCycleType())) { waitedOrderList.add(o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5697/buggy-version/xfjy.src.main.java.com.xyc.proj.service.ClientServiceImpl.java", "BodyUseAPI": ["java.util.List.add(com.xyc.proj.entity.Order)"], "Fixed commit": "866b760de5c046e4ffab22bb8a38fef4038831eb", "Url": "https://api.github.com/repos/xieyunchaobest/xfjy", "Date": "2015-12-15T15:16:27Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((cart != null) && (!(cart.isEmpty()))) { int customerID = new sample.product.CustomerDAO().customerIntoStore(cus); int orderID = new sample.product.OrderDetailsDAO().orderDetailsStore(cart); boolean checked = false; if ((customerID > 0) && (orderID > 0)) { checked = new sample.product.OrderDAO().orderStore(customerID, orderID); } if (checked) { out.println(\"<h2>Thank you for buying, see you agian!</h2>\"); request.getSession().invalidate(); } }else { out.println(\"<h2>Cart is empty</h2>\"); out.println(\"<a href='ProcessServlet?btAction=Continue'>Back to chek out</a>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2966/buggy-version/src.java.sample.servlet.CheckOutServlet.java", "BodyUseAPI": ["sample.product.OrderDetailsDAO.orderDetailsStore(java.util.List<sample.product.ProductDTO>)"], "Fixed commit": "09a1ed0429acf2de5b62124d02b4d52dd9397fd9", "Url": "https://api.github.com/repos/namlai000/Lab3", "Date": "2016-03-24T02:20:47Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode.equals(\"view\")) { adapter = new adapter.ChecklistAdapter(auth.getVistoriasArrayList().get(idVistoria).getEstacoesElevatorias().getConjuntoMotorBombaArrayList().get(position).getProblemasArrayList(), mode, this); }else { adapter = new adapter.ChecklistAdapter(auth.getProblemasArrayList(), mode, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/727/buggy-version/app.src.main.java.br.com.monster.smokeproject.MotorBombaActivity.java", "BodyUseAPI": [], "Fixed commit": "b1487e41f396d783fb13992a986fa75265397873", "Url": "https://api.github.com/repos/miqueias/smokeproject", "Date": "2017-01-25T16:33:52Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode.equals(\"view\")) { adapterDois = new adapter.ProblemasCheckListAdapter(auth.getVistoriasArrayList().get(position).getProblemasCheckListArrayList(), mode, this); }else { adapterDois = new adapter.ProblemasCheckListAdapter(auth.getProblemasCheckListArrayList(), mode, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/727/buggy-version/app.src.main.java.br.com.monster.smokeproject.NovaVistoriaActivity.java", "BodyUseAPI": [], "Fixed commit": "b1487e41f396d783fb13992a986fa75265397873", "Url": "https://api.github.com/repos/miqueias/smokeproject", "Date": "2017-01-25T16:33:52Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.com.softserveinc.bawl.controllers.IssueController.getCurrentUserId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userId == 0) { message = \"Please login first\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1683/buggy-version/app.src.main.java.edu.com.softserveinc.bawl.controllers.IssueController.java", "BodyUseAPI": [], "Fixed commit": "454e2ab94c9817b4877b2928bc2e35fd67021521", "Url": "https://api.github.com/repos/Social-projects-Rivne/issue-city-task-tool", "Date": "2015-10-06T17:22:42Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.com.softserveinc.bawl.controllers.IssueController.getCurrentUserId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userId == 0) { message.put(\"message\", \"Please login first\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1683/buggy-version/app.src.main.java.edu.com.softserveinc.bawl.controllers.IssueController.java", "BodyUseAPI": [], "Fixed commit": "454e2ab94c9817b4877b2928bc2e35fd67021521", "Url": "https://api.github.com/repos/Social-projects-Rivne/issue-city-task-tool", "Date": "2015-10-06T17:22:42Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((friend.getHabits().getHabit(i).getEvents().size()) == 0) { android.widget.Toast.makeText(getApplicationContext(), \"No habit events to view\", Toast.LENGTH_SHORT).show(); }else { android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.baard.ViewFriendHabitActivity.class); intent.putExtra(\"HabitPosition\", i); intent.putExtra(\"habitName\", habitList.get(i).toString()); intent.putExtra(\"user\", friend.getUsername()); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7005/buggy-version/app.src.main.java.com.example.baard.ViewFriendActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,int)", "java.lang.Object.toString()", "com.example.baard.User.getUsername()", "java.util.List.get(int)", "android.content.Intent.putExtra(java.lang.String,friend.getUsername())", "android.content.Intent.putExtra(java.lang.String,java.lang.String)"], "Fixed commit": "d53a8ed867a8947475df27ffc76a6594bce0c441", "Url": "https://api.github.com/repos/CMPUT301F17T02/BAARD", "Date": "2017-12-04T05:20:48Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6609/buggy-version/src.main.java.com.uwemeding.yarg.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "e893132b6c1788b68262d6e28af38aabcf3d093e", "Url": "https://api.github.com/repos/umeding/yarg", "Date": "2015-08-18T21:01:49Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["logisticspipes.routing.ServerRouter.getPipe()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (pipe != null) { pipe.refreshRender(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7262/buggy-version/common.logisticspipes.routing.ServerRouter.java", "BodyUseAPI": ["logisticspipes.pipes.basic.CoreRoutedPipe.refreshRender(boolean)"], "Fixed commit": "ded897cb38ff5d78885903259ace7f27e9716585", "Url": "https://api.github.com/repos/ArtForz/LogisticsPipes", "Date": "2013-01-28T02:47:06Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((currDateTime.equals(getEndDateTime())) && ((getEndDateTime().getHourOfDay()) == 0)) { leaveCalendarDay.setGray(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6284/buggy-version/src.main.java.org.kuali.hr.time.calendar.LeaveCalendar.java", "BodyUseAPI": [], "Fixed commit": "1def5c453e2ed2626a808f358facbbbb7fbe9143", "Url": "https://api.github.com/repos/kuali/kpme", "Date": "2012-07-31T21:27:29Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastAccelerationTimestamp) < 0) lastAccelerationTimestamp = java.lang.System.currentTimeMillis();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1512/buggy-version/src.org.usfirst.frc.team6678.robot.CustomMotorDrive.java", "BodyUseAPI": [], "Fixed commit": "618505f26faee67c1fdbe9107e601d9307ed15c2", "Url": "https://api.github.com/repos/dk-robotics/frc2017", "Date": "2017-05-31T15:42:23Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<by.rss.kr.NewsItem>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(card.getImageUrl()))) com.squareup.picasso.Picasso.with(context).load(card.getImageUrl()).into(holder.img);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4868/buggy-version/src.by.rss.kr.NewsAdapter.java", "BodyUseAPI": ["by.rss.kr.NewsItem.getImageUrl()", "com.squareup.picasso.Picasso.with(context).load(card.getImageUrl())", "com.squareup.picasso.Picasso.with(context).load(card.getImageUrl()).into(android.widget.ImageView)"], "Fixed commit": "7e20e9cf69830bcb7133a31827c2b79ff4adbe19", "Url": "https://api.github.com/repos/xgear-public/rss-kr", "Date": "2014-05-19T20:41:27Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (trajectory.isEmpty()) result = agent.getMapBuilder().getPlanner().pathPlan(status, status.coordinates); else result = agent.getMapBuilder().getPlanner().pathPlan(status, trajectory.lastElement());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7592/buggy-version/src.agent.coverage.GSAlgorithm.java", "BodyUseAPI": ["agent.getMapBuilder().getPlanner().pathPlan(agent.AgentStatus,trajectory.lastElement())", "java.util.Vector<lib.datastructs.Point>.lastElement()"], "Fixed commit": "0e916ff918c27627d773a41f8967d07e96b88927", "Url": "https://api.github.com/repos/aarellano/collaborative-agents", "Date": "2013-11-29T23:41:38Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (trajectory.isEmpty()) result = agent.getMapBuilder().getPlanner().pathPlan(status, status.coordinates); else result = agent.getMapBuilder().getPlanner().pathPlan(status, trajectory.lastElement());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7592/buggy-version/src.agent.coverage.DGSAlgorithm.java", "BodyUseAPI": ["agent.getMapBuilder().getPlanner().pathPlan(agent.AgentStatus,trajectory.lastElement())", "java.util.Vector<lib.datastructs.Point>.lastElement()"], "Fixed commit": "0e916ff918c27627d773a41f8967d07e96b88927", "Url": "https://api.github.com/repos/aarellano/collaborative-agents", "Date": "2013-11-29T23:41:38Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (email.getText().toString().isEmpty()) { email.setError(\"Please enter an email.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1638/buggy-version/TakeYourSeat.app.src.main.java.takeyourseat.activities.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(java.lang.String)"], "Fixed commit": "84d33596d628ddc3ebfb0935d7deaa78ab848028", "Url": "https://api.github.com/repos/PMA2017/Tim8", "Date": "2017-05-23T22:05:48Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(password.getText().toString().isEmpty())) && ((password.getText().toString().length()) < 6)) { password.setError(\"Password must be at least 6 characters long!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1638/buggy-version/TakeYourSeat.app.src.main.java.takeyourseat.activities.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(java.lang.String)"], "Fixed commit": "84d33596d628ddc3ebfb0935d7deaa78ab848028", "Url": "https://api.github.com/repos/PMA2017/Tim8", "Date": "2017-05-23T22:05:48Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(email.getText().toString().isEmpty())) && (!(takeyourseat.activities.MainActivity.isValidEmail(email.getText().toString())))) { email.setError(\"Please enter a valid email.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1638/buggy-version/TakeYourSeat.app.src.main.java.takeyourseat.activities.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(java.lang.String)"], "Fixed commit": "84d33596d628ddc3ebfb0935d7deaa78ab848028", "Url": "https://api.github.com/repos/PMA2017/Tim8", "Date": "2017-05-23T22:05:48Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (password.getText().toString().isEmpty()) { email.setError(\"Please enter password.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1638/buggy-version/TakeYourSeat.app.src.main.java.takeyourseat.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "84d33596d628ddc3ebfb0935d7deaa78ab848028", "Url": "https://api.github.com/repos/PMA2017/Tim8", "Date": "2017-05-23T22:05:48Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs((j - (ParkingEscape.Situation.exit.x)))) > 0) || ((java.lang.Math.abs((i - (ParkingEscape.Situation.exit.y)))) > 0)) res += \"|\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8484/buggy-version/ParkingEscape.Situation.java", "BodyUseAPI": [], "Fixed commit": "0f05c8d39814e17e3ef3ac77fa1f82c899f6f6ce", "Url": "https://api.github.com/repos/TheoVerhelst/BougeTaCaisse", "Date": "2015-12-15T11:47:26Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((state.getValue(BlockRedstoneComparator.MODE)) == (BlockRedstoneComparator.Mode.COMPARE)) { return state.getValue(BlockRedstoneComparator.POWERED); }else { return (((net.minecraft.tileentity.TileEntityComparator) (source.getTileEntity(pos))).getOutputSignal()) > 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8914/buggy-version/src.main.java.narcolepticfrog.rsmm.meterable.mixins.MixinBlockRedstoneComparatorMeterable.java", "BodyUseAPI": ["net.minecraft.block.state.IBlockState.getValue(BlockRedstoneComparator.POWERED)"], "Fixed commit": "d81680aeba8c02f9e12280e9dd13a80d5215f65b", "Url": "https://api.github.com/repos/NarcolepticFrog/RedstoneMultimeter", "Date": "2017-11-28T00:45:15Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(grid[((destX * (m)) + destY)].isAccesible())) return new com.jme3.math.Vector2f(0, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/923/buggy-version/src.battle.BattleMap.java", "BodyUseAPI": [], "Fixed commit": "0e89106f40ae243dc85a5e7cdfdb729bb3a44fa4", "Url": "https://api.github.com/repos/szendrodi-krisztian/RTS-project", "Date": "2016-02-11T12:42:17Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isVisible()) { android.widget.Toast.makeText(getContext(), \"Retrieving info failed! Check if you are online!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/165/buggy-version/app.src.main.java.com.toshkin.popularmovies.fragments.MoviesGridFragment.java", "BodyUseAPI": [], "Fixed commit": "a6035cb178192aca864c51c11e8f820381794aeb", "Url": "https://api.github.com/repos/mptrista/PopularMovies", "Date": "2015-11-05T21:54:55Z"},
{"Line": "=>813", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["delegates.ContextDelegate.getInstance().getContextIdByHashCode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (context != null) { contextId = context.getContextId(); java.lang.Long personForId = context.getPersonForId(); models.Person p = models.Person.read(personForId); personForName = ((p.getFirstname()) + \" \") + (p.getLastname()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3181/buggy-version/app.controllers.ContextControl.java", "BodyUseAPI": ["models.Context.getPersonForId()", "models.Context.getContextId()"], "Fixed commit": "748c56a933dbb1148d8ce2c86b71eaee8c0d5723", "Url": "https://api.github.com/repos/cdparra/reminiscens-lifeapi", "Date": "2013-09-30T01:09:50Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.epam.dlab.dto.base.DataEngineType.SPARK_STANDALONE) != (com.epam.dlab.dto.base.DataEngineType.fromDockerImageName(comp.getString(\"image\")))) { addResource(clusterList, comp, com.epam.dlab.backendapi.dao.STATUS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4678/buggy-version/services.self-service.src.main.java.com.epam.dlab.backendapi.dao.EnvStatusDAO.java", "BodyUseAPI": ["com.epam.dlab.backendapi.dao.EnvStatusDAO.addResource(java.util.List<com.epam.dlab.dto.status.EnvResource>,org.bson.Document,com.epam.dlab.backendapi.dao.STATUS)"], "Fixed commit": "62e3c08742788ad472e274bad03e337ae30f09cd", "Url": "https://api.github.com/repos/epam/DLab", "Date": "2017-10-18T15:53:05Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (treeStack.peek().getSequence().getNodes().get(0).getProperties().containsKey(\"SZ\")) { boardSize = java.lang.Integer.parseInt(treeStack.peek().getSequence().getNodes().get(0).getProperties().get(\"SZ\").getValues()[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2465/buggy-version/src.main.java.com.apetresc.sgfstream.SGFNode.java", "BodyUseAPI": ["treeStack.peek().getSequence().getNodes().get(0).getProperties()", "treeStack.peek().getSequence().getNodes()", "java.util.Stack<com.apetresc.sgfstream.SGFGameTree>.peek()", "treeStack.peek().getSequence().getNodes().get(0).getProperties().get(java.lang.String)", "treeStack.peek().getSequence()", "treeStack.peek().getSequence().getNodes().get(0).getProperties().get(\"SZ\").getValues()", "treeStack.peek().getSequence().getNodes().get(int)", "java.lang.Integer.parseInt(treeStack.peek().getSequence().getNodes().get(0).getProperties().get(\"SZ\").getValues()[0])"], "Fixed commit": "7dfbcdd4c30c3af4a0f163270eb02a2255eec3d2", "Url": "https://api.github.com/repos/apetresc/sgfstream", "Date": "2016-04-04T14:12:43Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (playoutCore.calendar.SpacerGenerator.spacer_template_path.endsWith(\"dist\")) { playoutCore.calendar.SpacerGenerator.spacer_template_path += \"/../templates/spacer.mpmlt\"; }else { playoutCore.calendar.SpacerGenerator.spacer_template_path += \"/templates/spacer.mpmlt\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7763/buggy-version/src.playoutCore.calendar.SpacerGenerator.java", "BodyUseAPI": [], "Fixed commit": "008d05abd561dc6834d6fe4beb02a860c63d3bd6", "Url": "https://api.github.com/repos/MagmaPlayout/mp-core", "Date": "2017-09-03T23:39:46Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getState()) == (shadowsocks.Shadowsocks.STOP)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8408/buggy-version/src.main.java.shadowsocks.Shadowsocks.java", "BodyUseAPI": [], "Fixed commit": "1e71b2956f7e9c681c060599581c5475ebad8b4d", "Url": "https://api.github.com/repos/Bestoa/shadowsocks-vertx", "Date": "2016-05-01T15:07:30Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quantity > 0) && addPlus) { quantityStr = \"+\" + quantityStr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4026/buggy-version/src.main.java.emcshop.util.NumberFormatter.java", "BodyUseAPI": [], "Fixed commit": "ca8a6f0c867b0c9a014dea34273c663214fdf2fd", "Url": "https://api.github.com/repos/mangstadt/emc-shopkeeper", "Date": "2013-12-28T17:11:35Z"},
{"Line": "=>1543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == (members.size())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/348/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.MXSession.java", "BodyUseAPI": [], "Fixed commit": "82f3a8db21af2972cc269ecabcf669601cdfd395", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2017-01-13T08:07:52Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["res.body().getObject(java.lang.String,org.vertx.java.core.json.JsonObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((r.getObject(\"softErrors\")) != null) { f.putObject(\"softErrors\", r.getObject(\"softErrors\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2054/buggy-version/directory.src.main.java.org.entcore.directory.services.impl.DefaultImportService.java", "BodyUseAPI": ["org.vertx.java.core.json.JsonObject.getObject(java.lang.String)", "org.vertx.java.core.json.JsonObject.putObject(java.lang.String,r.getObject(\"softErrors\"))"], "Fixed commit": "d051c6aba90de68e4f5520e43f806848ff16a47f", "Url": "https://api.github.com/repos/CGI-OPEN-ENT-NG/entcore", "Date": "2017-07-06T17:01:37Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mcmoddev.modernmetals.util.Config.Options.enableIridium) { logic.getDimension(OreSpawnAPI.DIMENSION_WILDCARD).addOre(Materials.iridium.ore.getDefaultState(), 6, 4, 5, 0, 64); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6265/buggy-version/src.main.java.com.mcmoddev.orespawn.ModernMetalsOreSpawn.java", "BodyUseAPI": [], "Fixed commit": "9b1133eb1e6aa8432268fdbffc9b5b32da49333a", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/ModernMetals", "Date": "2017-03-12T00:45:33Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mcmoddev.modernmetals.util.Config.Options.enableOsmium) { logic.getDimension(OreSpawnAPI.DIMENSION_WILDCARD).addOre(Materials.osmium.ore.getDefaultState(), 10, 4, 8, 0, 96); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6265/buggy-version/src.main.java.com.mcmoddev.orespawn.ModernMetalsOreSpawn.java", "BodyUseAPI": [], "Fixed commit": "9b1133eb1e6aa8432268fdbffc9b5b32da49333a", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/ModernMetals", "Date": "2017-03-12T00:45:33Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mcmoddev.modernmetals.util.Config.Options.enableManganese) { logic.getDimension(OreSpawnAPI.DIMENSION_WILDCARD).addOre(Materials.manganese.ore.getDefaultState(), 6, 4, 6, 0, 64); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6265/buggy-version/src.main.java.com.mcmoddev.orespawn.ModernMetalsOreSpawn.java", "BodyUseAPI": [], "Fixed commit": "9b1133eb1e6aa8432268fdbffc9b5b32da49333a", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/ModernMetals", "Date": "2017-03-12T00:45:33Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mcmoddev.modernmetals.util.Config.Options.enableRutile) { logic.getDimension(OreSpawnAPI.DIMENSION_WILDCARD).addOre(Materials.rutile.ore.getDefaultState(), 6, 4, 6, 0, 64); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6265/buggy-version/src.main.java.com.mcmoddev.orespawn.ModernMetalsOreSpawn.java", "BodyUseAPI": [], "Fixed commit": "9b1133eb1e6aa8432268fdbffc9b5b32da49333a", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/ModernMetals", "Date": "2017-03-12T00:45:33Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mcmoddev.modernmetals.util.Config.Options.enableCadmium) { logic.getDimension(OreSpawnAPI.DIMENSION_WILDCARD).addOre(Materials.cadmium.ore.getDefaultState(), 4, 8, 8, 0, 96); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6265/buggy-version/src.main.java.com.mcmoddev.orespawn.ModernMetalsOreSpawn.java", "BodyUseAPI": [], "Fixed commit": "9b1133eb1e6aa8432268fdbffc9b5b32da49333a", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/ModernMetals", "Date": "2017-03-12T00:45:33Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mcmoddev.modernmetals.util.Config.Options.enableMagnesium) { logic.getDimension(OreSpawnAPI.DIMENSION_WILDCARD).addOre(Materials.magnesium.ore.getDefaultState(), 6, 4, 8, 0, 96); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6265/buggy-version/src.main.java.com.mcmoddev.orespawn.ModernMetalsOreSpawn.java", "BodyUseAPI": [], "Fixed commit": "9b1133eb1e6aa8432268fdbffc9b5b32da49333a", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/ModernMetals", "Date": "2017-03-12T00:45:33Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mcmoddev.modernmetals.util.Config.Options.enableAluminum) { logic.getDimension(OreSpawnAPI.DIMENSION_WILDCARD).addOre(Materials.aluminum.ore.getDefaultState(), 10, 8, 8, 0, 96); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6265/buggy-version/src.main.java.com.mcmoddev.orespawn.ModernMetalsOreSpawn.java", "BodyUseAPI": [], "Fixed commit": "9b1133eb1e6aa8432268fdbffc9b5b32da49333a", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/ModernMetals", "Date": "2017-03-12T00:45:33Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mcmoddev.modernmetals.util.Config.Options.enableTantalum) { logic.getDimension(OreSpawnAPI.DIMENSION_WILDCARD).addOre(Materials.tantalum.ore.getDefaultState(), 6, 4, 6, 0, 64); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6265/buggy-version/src.main.java.com.mcmoddev.orespawn.ModernMetalsOreSpawn.java", "BodyUseAPI": [], "Fixed commit": "9b1133eb1e6aa8432268fdbffc9b5b32da49333a", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/ModernMetals", "Date": "2017-03-12T00:45:33Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mcmoddev.modernmetals.util.Config.Options.enablePlutonium) { logic.getDimension(OreSpawnAPI.DIMENSION_WILDCARD).addOre(Materials.plutonium.ore.getDefaultState(), 2, 4, 4, 0, 32); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6265/buggy-version/src.main.java.com.mcmoddev.orespawn.ModernMetalsOreSpawn.java", "BodyUseAPI": [], "Fixed commit": "9b1133eb1e6aa8432268fdbffc9b5b32da49333a", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/ModernMetals", "Date": "2017-03-12T00:45:33Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mcmoddev.modernmetals.util.Config.Options.enableChromium) { logic.getDimension(OreSpawnAPI.DIMENSION_WILDCARD).addOre(Materials.chromium.ore.getDefaultState(), 2, 4, 3, 0, 32); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6265/buggy-version/src.main.java.com.mcmoddev.orespawn.ModernMetalsOreSpawn.java", "BodyUseAPI": [], "Fixed commit": "9b1133eb1e6aa8432268fdbffc9b5b32da49333a", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/ModernMetals", "Date": "2017-03-12T00:45:33Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mcmoddev.modernmetals.util.Config.Options.enableTungsten) { logic.getDimension(OreSpawnAPI.DIMENSION_WILDCARD).addOre(Materials.tungsten.ore.getDefaultState(), 4, 4, 6, 0, 32); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6265/buggy-version/src.main.java.com.mcmoddev.orespawn.ModernMetalsOreSpawn.java", "BodyUseAPI": [], "Fixed commit": "9b1133eb1e6aa8432268fdbffc9b5b32da49333a", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/ModernMetals", "Date": "2017-03-12T00:45:33Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mcmoddev.modernmetals.util.Config.Options.enableZirconium) { logic.getDimension(OreSpawnAPI.DIMENSION_WILDCARD).addOre(Materials.zirconium.ore.getDefaultState(), 8, 4, 6, 0, 64); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6265/buggy-version/src.main.java.com.mcmoddev.orespawn.ModernMetalsOreSpawn.java", "BodyUseAPI": [], "Fixed commit": "9b1133eb1e6aa8432268fdbffc9b5b32da49333a", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/ModernMetals", "Date": "2017-03-12T00:45:33Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listening) stopServerListening();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5546/buggy-version/src.netsubmodul.Server.java", "BodyUseAPI": [], "Fixed commit": "4e32c261d1c084efb4fb367784cc0d3b72e6b921", "Url": "https://api.github.com/repos/RFT-2014-team3/Ticket-to-Ride", "Date": "2014-12-17T20:00:55Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id > 5) { stopServerListening(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5546/buggy-version/src.netsubmodul.Server.java", "BodyUseAPI": [], "Fixed commit": "4e32c261d1c084efb4fb367784cc0d3b72e6b921", "Url": "https://api.github.com/repos/RFT-2014-team3/Ticket-to-Ride", "Date": "2014-12-17T20:00:55Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FPlayers.i.get(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fp.equals(fme)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7489/buggy-version/src.markehme.factionsplus.Cmds.CmdWarp.java", "BodyUseAPI": [], "Fixed commit": "e3d063d240415630378e876e8089aaf36015c0b7", "Url": "https://api.github.com/repos/MarkehMe/FactionsPlus", "Date": "2012-07-16T17:37:22Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (invulnerableDimensionChange == null) { throw new java.lang.RuntimeException((\"invulnerableDimensionChange field not found in \" + (net.minecraft.entity.player.EntityPlayerMP.class.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6812/buggy-version/src.main.java.net.torocraft.teletoro.TeleToroUtil.java", "BodyUseAPI": [], "Fixed commit": "f78aa1bb417fcaef3f17f83a676e7be5455722a0", "Url": "https://api.github.com/repos/ToroCraft/TeleToro", "Date": "2016-05-28T15:04:55Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mef.dalgen.codegen.generators.MockDALCodeGen.getFieldType(org.mef.dalgen.parser.EntityDef,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fieldType.equals(\"String\")) { st.add(\"eq\", \".equals(val)\"); }else { st.add(\"eq\", \" == val\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1101/buggy-version/code.tools.dalgen.src.org.mef.dalgen.codegen.generators.MockDALCodeGen.java", "BodyUseAPI": [], "Fixed commit": "ce70f9412c924892d3100be6474b3fedc258a1b1", "Url": "https://api.github.com/repos/ianrae/dalgen", "Date": "2013-09-29T18:37:40Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (skip(in)) return read(in);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8779/buggy-version/src.main.java.com.selonj.gson.enclosed.EnclosingTypeAdapterFactory.java", "BodyUseAPI": ["com.selonj.gson.enclosed.EnclosingTypeAdapterFactory.EnclosingTypeAdapter<T>.read(com.google.gson.stream.JsonReader)"], "Fixed commit": "ecd0245c6735a1317f2f6044acf646223081e352", "Url": "https://api.github.com/repos/selonj/getstarted-oauth2-with-retrofit", "Date": "2016-04-20T03:43:34Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((original == null) || (copy == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6174/buggy-version/src.main.java.org.mixer2.xhtml.util.CopyUtil.java", "BodyUseAPI": [], "Fixed commit": "98928588e0213bd3244a8b9ca51d7a82a17955b2", "Url": "https://api.github.com/repos/nabedge/mixer2", "Date": "2016-07-17T11:02:00Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.getParentOfType(com.intellij.psi.PsiElement,java.lang.Class)", "com.intellij.psi.util.PsiTreeUtil.findCommonContext(com.intellij.psi.PsiElement,org.ballerinalang.plugins.idea.psi.references.NameReference)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((actionDefinitionNode != null) && (!(commonContext instanceof org.ballerinalang.plugins.idea.psi.CallableUnitBodyNode))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5016/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.references.NameReference.java", "BodyUseAPI": [], "Fixed commit": "f3d5cd60b0b876f8a097142fb0b7eeabe847a594", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2017-06-08T06:16:48Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.findCommonContext(com.intellij.psi.PsiElement,org.ballerinalang.plugins.idea.psi.references.NameReference)", "com.intellij.psi.util.PsiTreeUtil.getParentOfType(com.intellij.psi.PsiElement,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((resourceDefinitionNode != null) && (!(commonContext instanceof org.ballerinalang.plugins.idea.psi.CallableUnitBodyNode))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5016/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.references.NameReference.java", "BodyUseAPI": [], "Fixed commit": "f3d5cd60b0b876f8a097142fb0b7eeabe847a594", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2017-06-08T06:16:48Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((customer.getUUID()) == null) { customer.setUUID(java.util.UUID.randomUUID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/439/buggy-version/src.main.java.org.energyos.espi.common.service.impl.RetailCustomerServiceImpl.java", "BodyUseAPI": ["org.energyos.espi.common.domain.RetailCustomer.setUUID(java.util.UUID)"], "Fixed commit": "44d151533fb2dc91416ac7bb9676389ce668b020", "Url": "https://api.github.com/repos/jateeter/OpenESPI-Common-java", "Date": "2014-03-03T13:03:18Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.actionHistory.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/779/buggy-version/src.sandbox.Creature.java", "BodyUseAPI": [], "Fixed commit": "a78f977f99e5c46d0dcf4b4312e1f830f0e0c36c", "Url": "https://api.github.com/repos/CalebChan/jLOAF-Sandbox", "Date": "2015-01-05T21:17:28Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/656/buggy-version/app.src.main.java.studio365.exerapp2.WriteActivity.java", "BodyUseAPI": [], "Fixed commit": "e87c253d9d527a48ad97188e80db64b74597ad3d", "Url": "https://api.github.com/repos/ziskar/ExerApp", "Date": "2016-04-15T09:29:55Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldAskPermissions()) { askPermissions(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6968/buggy-version/SmartDialer.app.src.main.java.com.smartdialer.PhotoIntentActivity.java", "BodyUseAPI": [], "Fixed commit": "106876d2215be47c1f2002552a177c2f1752a962", "Url": "https://api.github.com/repos/novicasarenac/smart-dialer", "Date": "2017-02-02T20:22:26Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result != null) { mFeedDefn.loaded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/805/buggy-version/src.com.neoware.europlanner.NewsActivity.java", "BodyUseAPI": [], "Fixed commit": "a4d56950deb2ac8d6dffdaa5a10ca48903719015", "Url": "https://api.github.com/repos/steprobe/E12Planner", "Date": "2012-06-13T18:52:36Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldTryToOffsetCoords) { try { rootView.offsetDescendantRectToMyCoords(blurView, relativeViewBounds); } catch (java.lang.IllegalArgumentException e) { shouldTryToOffsetCoords = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/756/buggy-version/library.src.main.java.eightbitlab.com.blurview.BlockingBlurController.java", "BodyUseAPI": [], "Fixed commit": "478fdf05b457585e2f6df25d014cc9f79fb5b260", "Url": "https://api.github.com/repos/Dimezis/BlurView", "Date": "2017-04-03T19:15:39Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uuid == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2081/buggy-version/server.src.com.thoughtworks.go.server.websocket.AgentRemoteHandler.java", "BodyUseAPI": [], "Fixed commit": "c49dc8f324cca69aa9ed202efb12b52983bc3dd9", "Url": "https://api.github.com/repos/wpc/gocd", "Date": "2016-02-10T19:41:16Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((window.packetList[i]) != null) printWriter.print(new java.lang.String(window.packetList[i].data));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8393/buggy-version/src.Receiver.java", "BodyUseAPI": ["java.io.PrintWriter.print(java.lang.String)"], "Fixed commit": "d2c1ecb6ad28d81df668c5ff151337cbd9d44384", "Url": "https://api.github.com/repos/soniaghanekar/SelectiveRepeatARQ", "Date": "2013-12-01T23:18:24Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Node.getWorkspaceFor(org.cloudbees.jenkins.multibranch.freestyle.FreeStyleMultiBranchProject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parentWorkspace == null) { throw new java.lang.IllegalStateException(((\"node \" + (n.getNodeName())) + \"is no longer connected\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4551/buggy-version/src.main.java.org.cloudbees.jenkins.multibranch.freestyle.FreeStyleMultiBranchProject.java", "BodyUseAPI": [], "Fixed commit": "c5a6a5dcca26ef490b818921d5163b4b618262cc", "Url": "https://api.github.com/repos/jenkinsci/freestyle-multibranch-plugin", "Date": "2015-12-20T23:26:58Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.file.YamlConfiguration.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dataHandler.equalsIgnoreCase(\"sqlite\")) { ps = conn.prepareStatement(((\"DELETE FROM \" + mysqlTable) + \" WHERE name = ?\")); }else { ps = conn.prepareStatement(((\"DELETE FROM \" + mysqlTable) + \" WHERE name = ? ORDER BY time DESC LIMIT 1\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1719/buggy-version/src.com.modcrafting.ultrabans.db.SQLDatabases.java", "BodyUseAPI": [], "Fixed commit": "6c5638a71d13b4194063f34899642462e5ae8aad", "Url": "https://api.github.com/repos/deathmarine/Ultrabans", "Date": "2011-12-01T19:47:24Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getCodec().decode(byte[],request.getClz())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != obj) { handleSuccess(request.getThreadMode(), code, obj); }else { throw new lite.httpsupport.impl.HttpError().setHttpCode(code).setErrorMessage(\"\u89e3\u7801\u8fd4\u56de null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8857/buggy-version/src.lite.httpsupport.impl.HttpTask.java", "BodyUseAPI": ["lite.httpsupport.impl.HttpTask<RESP>.handleSuccess(request.getThreadMode(),int,RESP)"], "Fixed commit": "0d3af68bd903a37b14f477cca183532ccc4e71fe", "Url": "https://api.github.com/repos/daemon369/HttpSupportLite", "Date": "2015-08-17T06:54:06Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((((chunkX > ((chunkMap.length) - 1)) || (chunkY > ((chunkMap[0].length) - 1))) || (chunkX < 0)) || (chunkY < 0))) chunkMap[chunkX][chunkY].addZombie(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5472/buggy-version/src.entities.Zombie.java", "BodyUseAPI": ["chunkMap[chunkX][chunkY].addZombie(entities.Zombie)"], "Fixed commit": "8ca7d338c7633a741c88b43fef3b9114e67e1e31", "Url": "https://api.github.com/repos/pcjl/Project-Z", "Date": "2016-01-18T05:24:22Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openimaj.squall.compile.data.RuleWrappedFunction.ARVHComponent.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((clone.sourceVarHolder) != null) { clone.sourceVarHolder = clone.sourceVarHolder.clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4214/buggy-version/core.ReteStorm.src.main.java.org.openimaj.squall.functions.consequences.BaseConsequenceFunction.java", "BodyUseAPI": ["org.openimaj.squall.compile.data.AnonimisedRuleVariableHolder.clone()"], "Fixed commit": "2fd3a1bd235e5756725630d800839e800077f28c", "Url": "https://api.github.com/repos/scalen/squall", "Date": "2014-02-12T11:57:41Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (endPos < 0) { endPos = passageFull.indexOf(\"!\", posOfWord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5463/buggy-version/KnowYourBible.src.team.kyb.extragames.ScriptureForGameHelper.java", "BodyUseAPI": [], "Fixed commit": "7f902c2ef817c103c239be363c05372778fcdca5", "Url": "https://api.github.com/repos/khuongthai/Iknow", "Date": "2013-12-03T02:35:23Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (endPos < 0) { endPos = passageFull.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5463/buggy-version/KnowYourBible.src.team.kyb.extragames.ScriptureForGameHelper.java", "BodyUseAPI": [], "Fixed commit": "7f902c2ef817c103c239be363c05372778fcdca5", "Url": "https://api.github.com/repos/khuongthai/Iknow", "Date": "2013-12-03T02:35:23Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == result) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4664/buggy-version/app.src.main.java.com.k12nt.k12netframe.WebViewerActivity.java", "BodyUseAPI": [], "Fixed commit": "0e4e85b64fb1af649e221d6b503f4eec18a0a179", "Url": "https://api.github.com/repos/K12net/K12NET-Mobile-Android", "Date": "2016-12-27T17:32:28Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((forcedOrientationAppPackages) != null) result.putExtra(null, forcedOrientationAppPackages.toArray(new java.lang.String[forcedOrientationAppPackages.size()]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6472/buggy-version/app.src.main.java.samuelpalmer.sensorautorotation.ApplicationCommand.java", "BodyUseAPI": [], "Fixed commit": "ba9d224ccab82da2d6dd9c161311041aa79cc06d", "Url": "https://api.github.com/repos/sampalmer/sideways-mode", "Date": "2017-10-15T04:49:00Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Gdx.app.getPreferences(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(prefs.contains(\"highScore1\"))) { prefs.putInteger(\"highScore1\", 0); prefs.putInteger(\"highScore2\", 0); prefs.putInteger(\"highScore3\", 0); prefs.putInteger(\"highScore4\", 0); prefs.putInteger(\"highScore5\", 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3558/buggy-version/core.src.at.aau.game.Mechanics.World.java", "BodyUseAPI": ["com.badlogic.gdx.Preferences.putInteger(java.lang.String,int)", "com.badlogic.gdx.Preferences.putInteger(java.lang.String,int)", "com.badlogic.gdx.Preferences.putInteger(java.lang.String,int)", "com.badlogic.gdx.Preferences.putInteger(java.lang.String,int)", "com.badlogic.gdx.Preferences.putInteger(java.lang.String,int)"], "Fixed commit": "b00f79ef2e37fc1d2bea8d05f0f1d9b8b0e88813", "Url": "https://api.github.com/repos/Kruemelkatze/PixieSmack", "Date": "2016-04-16T13:06:40Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.gdx.Preferences.getInteger(java.lang.String)", "com.badlogic.gdx.Preferences.getInteger(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((this.highscore) > highscore1) && ((this.highscore) > highscore2)) { prefs.putInteger(\"highScore3\", highscore2); prefs.putInteger(\"highScore4\", highscore3); prefs.putInteger(\"highScore5\", highscore4); prefs.putInteger(\"highScore2\", this.highscore); }else if (((this.highscore) < highscore2) && ((this.highscore) > highscore3)) { prefs.putInteger(\"highScore4\", highscore3); prefs.putInteger(\"highScore5\", highscore4); prefs.putInteger(\"highScore3\", this.highscore); }else if (((this.highscore) < highscore3) && ((this.highscore) > highscore4)) { prefs.putInteger(\"highScore5\", highscore4); prefs.putInteger(\"highScore4\", this.highscore); }else if (((this.highscore) < highscore4) && ((this.highscore) > highscore5)) { prefs.putInteger(\"highScore5\", this.highscore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3558/buggy-version/core.src.at.aau.game.Mechanics.World.java", "BodyUseAPI": ["com.badlogic.gdx.Preferences.putInteger(java.lang.String,int)"], "Fixed commit": "b00f79ef2e37fc1d2bea8d05f0f1d9b8b0e88813", "Url": "https://api.github.com/repos/Kruemelkatze/PixieSmack", "Date": "2016-04-16T13:06:40Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x) <= 0) { com.diamond.iain.javagame.entities.Invader.speed *= -1; x += com.diamond.iain.javagame.entities.Invader.speed; }else { x += com.diamond.iain.javagame.entities.Invader.speed; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2617/buggy-version/src.com.diamond.iain.javagame.entities.Invader.java", "BodyUseAPI": [], "Fixed commit": "f0152cc3d97292086d17def6404fbbf2a43201b6", "Url": "https://api.github.com/repos/blogscot/JavaGame", "Date": "2014-11-02T21:04:52Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cmdAnimator.GameCanvasActions.GameAnimator.getInstance().getNumberOfCurrentFrame()) > 0) cmdAnimator.GameCanvasActions.GameAnimator.getInstance().getCurrentFrame().clearCanvas();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4858/buggy-version/src.cmdAnimator.GameGui.java", "BodyUseAPI": [], "Fixed commit": "e577bd10b8bfec6bfabb88df4480402eb85ff7e3", "Url": "https://api.github.com/repos/PATHnorion/CMDAnimator", "Date": "2016-10-23T13:33:36Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFlowPreference.shouldExitOnPaymentMethodChange()) { getView().finishFromReviewAndConfirm(); }else { mPaymentMethodEdited = true; mPaymentMethodEditionRequested = true; getView().startPaymentMethodEdition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2033/buggy-version/sdk.src.main.java.com.mercadopago.presenters.CheckoutPresenter.java", "BodyUseAPI": [], "Fixed commit": "380ddcbb1dac474ecdf1976208df27ab902565a1", "Url": "https://api.github.com/repos/mercadopago/px-android", "Date": "2017-11-09T19:09:55Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(super.doAction(sign, player))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2793/buggy-version/src.main.java.de.secretcraft.galibri.mechanic.Portal.java", "BodyUseAPI": [], "Fixed commit": "683404ad787c02e9b63763dd40d7d24aa5df4757", "Url": "https://api.github.com/repos/SecretCraft/GaLiBri", "Date": "2012-11-03T15:15:05Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) dumpToLog(\"commit\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2405/buggy-version/library.src.main.java.com.github.androidscreenswitcher.ScreenSwitcher.java", "BodyUseAPI": [], "Fixed commit": "a91c684d6d25edfc6d47574c3453c8c03260590b", "Url": "https://api.github.com/repos/faifai21/AndroidScreenSwitcher", "Date": "2015-02-02T23:42:09Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) dumpToLog((\"popToTag: \" + tag));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2405/buggy-version/library.src.main.java.com.github.androidscreenswitcher.ScreenSwitcher.java", "BodyUseAPI": [], "Fixed commit": "a91c684d6d25edfc6d47574c3453c8c03260590b", "Url": "https://api.github.com/repos/faifai21/AndroidScreenSwitcher", "Date": "2015-02-02T23:42:09Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentManager.getFragments()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (frags == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2405/buggy-version/library.src.main.java.com.github.androidscreenswitcher.ScreenSwitcher.java", "BodyUseAPI": [], "Fixed commit": "a91c684d6d25edfc6d47574c3453c8c03260590b", "Url": "https://api.github.com/repos/faifai21/AndroidScreenSwitcher", "Date": "2015-02-02T23:42:09Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) android.util.Log.e(\"ScreenSwitcher#commit\", (((((((\"clear: \" + (mClearStack)) + \", add to stack: \") + (mAddToStack)) + \", checkpoint: \") + (mIsCheckPoint)) + \", tag: \") + (mTag)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2405/buggy-version/library.src.main.java.com.github.androidscreenswitcher.ScreenSwitcher.java", "BodyUseAPI": [], "Fixed commit": "a91c684d6d25edfc6d47574c3453c8c03260590b", "Url": "https://api.github.com/repos/faifai21/AndroidScreenSwitcher", "Date": "2015-02-02T23:42:09Z"},
{"Line": "=>1418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isComponentTypeList && (listItem.getClass().isArray())) { listItem = arrayToList(listItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1311/buggy-version/src.main.java.freemarker.ext.beans.BeansWrapper.java", "BodyUseAPI": ["freemarker.ext.beans.BeansWrapper.arrayToList(java.lang.Object)"], "Fixed commit": "b9b19d93dbdb8f0cf68270a2fb4a3d72052ffb60", "Url": "https://api.github.com/repos/freemarker/freemarker", "Date": "2014-05-29T16:14:42Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shine.tran.tubeview.gui.fragments.PreferencesFragment.mLocation.isChecked()) shine.tran.tubeview.gui.activities.MainActivity.TEST = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2171/buggy-version/app.src.main.java.shine.tran.tubeview.gui.fragments.PreferencesFragment.java", "BodyUseAPI": [], "Fixed commit": "9f3cbb11f3635520af07e272d211bdd7fd91ab24", "Url": "https://api.github.com/repos/honghai78/Tube-View", "Date": "2016-04-15T06:15:14Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list) != null) { this.list.addClass(newClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4201/buggy-version/bennu-renderers.src.main.java.pt.ist.fenixWebFramework.renderers.components.HtmlCheckBoxList.java", "BodyUseAPI": [], "Fixed commit": "daf936973f38eae1b157cbca2efe8bc77935c7eb", "Url": "https://api.github.com/repos/FenixEdu/bennu-renderers", "Date": "2014-04-29T14:17:02Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ang > ((java.lang.Math.PI) * 2)) { ang = ang % ((java.lang.Math.PI) * 2); }else if (ang < ((-(java.lang.Math.PI)) * 2)) { ang = -((java.lang.Math.abs(ang)) % ((java.lang.Math.PI) * 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2503/buggy-version/src.mase.mason.EmboddiedAgent.java", "BodyUseAPI": ["java.lang.Math.abs(double)"], "Fixed commit": "dfccf11e6c51f5eebc2de2e87d45f78f25552b76", "Url": "https://api.github.com/repos/jorgemcgomes/mase", "Date": "2013-12-11T19:49:20Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((accountCreateModel.getGender()) == (GenderOptions.PreferNotToDisclose)) { theGender = \"null\"; }else { theGender = accountCreateModel.getGender().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6424/buggy-version/FW_Trails_App.app.src.main.java.seniordesign.ipfw.fw_trails_app.AccountCreateFragment.java", "BodyUseAPI": ["seniordesign.ipfw.fw_trails_app.AccountCreateModel.getGender()", "accountCreateModel.getGender().toString()"], "Fixed commit": "3e77d6131ca5ea0f279be3b89600e80c1dde212d", "Url": "https://api.github.com/repos/fwtrailsapp/Android", "Date": "2016-04-22T01:27:48Z"},
{"Line": "=>856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(javax.swing.SwingUtilities.isEventDispatchThread())) { javax.swing.SwingUtilities.invokeLater(new java.lang.Runnable() { @java.lang.Override public void run() { update(recursively); } }); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/9068/buggy-version/gina-core.src.main.java.org.openflexo.gina.view.widget.browser.impl.FIBBrowserModel.java", "BodyUseAPI": [], "Fixed commit": "46f3fe21948868646cf0ecb22ea2b1e9331acef4", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2017-04-03T13:16:17Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xenoage.zong.musicxml.types.MxlWords.getFormattedText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mxlFormattedText.getValue().length()) == 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6762/buggy-version/musicxml-in.src.com.xenoage.zong.io.musicxml.in.readers.MusicReader.java", "BodyUseAPI": [], "Fixed commit": "079692f7349711cac13fb297c15bb8ec5ecf0a09", "Url": "https://api.github.com/repos/Xenoage/Zong", "Date": "2014-11-21T11:18:49Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (items == null) return new com.helpme.app.world.item.IItem[]{ };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3159/buggy-version/Project.src.main.java.com.helpme.app.saveload.InventoryWrapper.java", "BodyUseAPI": [], "Fixed commit": "a5474a4d898e4bbfffca487cdbc57174beaf5008", "Url": "https://api.github.com/repos/ElloP/HELP-ME-THIS-IS-NOT-A-JOKE-THEY-HAVE-KIDNAPPED-ME", "Date": "2017-05-15T18:17:14Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.client.HttpClient.execute(org.apache.http.client.methods.HttpUriRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((apacheHCResponse.getStatusLine().getStatusCode()) >= 400) { com.github.seratch.signedrequest4j.HttpResponse httpResponse = com.github.seratch.signedrequest4j.SignedRequestApacheHCImpl.toReturnValue(apacheHCResponse, charset); throw new com.github.seratch.signedrequest4j.HttpException(apacheHCResponse.getStatusLine().getReasonPhrase(), httpResponse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7815/buggy-version/src.main.java.com.github.seratch.signedrequest4j.SignedRequestApacheHCImpl.java", "BodyUseAPI": ["com.github.seratch.signedrequest4j.SignedRequestApacheHCImpl.toReturnValue(org.apache.http.HttpResponse,java.lang.String)", "apacheHCResponse.getStatusLine().getReasonPhrase()", "org.apache.http.HttpResponse.getStatusLine()"], "Fixed commit": "9b4aaea4558783f349d7042f840a7bf169692ccb", "Url": "https://api.github.com/repos/seratch/signedrequest4j", "Date": "2011-10-17T09:57:14Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((name == null) || (name.isEmpty())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3881/buggy-version/src.main.java.net.but2002.minecraft.BukkitSpeak.TeamspeakCommands.PermissionsHelper.java", "BodyUseAPI": [], "Fixed commit": "c49b6ece4d9d645e6333e43fc882f44c9c8d76a1", "Url": "https://api.github.com/repos/Firedroide/BukkitSpeak", "Date": "2014-07-05T09:43:44Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (formData.has(\"jobicon\")) { java.lang.String name = formData.getJSONObject(\"jobicon\").getString(\"name\"); if (new java.io.File(name).isAbsolute()) { throw new jenkins.plugins.jobicon.FormException(jenkins.plugins.jobicon.Messages.Config_absolute(), \"name\"); } return req.bindJSON(jenkins.plugins.jobicon.CustomIconProperty.class, formData.getJSONObject(\"jobicon\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5210/buggy-version/src.main.java.jenkins.plugins.jobicon.CustomIconProperty.java", "BodyUseAPI": ["org.kohsuke.stapler.StaplerRequest.bindJSON(java.lang.Class,formData.getJSONObject(\"jobicon\"))", "formData.getJSONObject(\"jobicon\").getString(java.lang.String)", "net.sf.json.JSONObject.getJSONObject(java.lang.String)", "net.sf.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "449d4b6d6e82d97cd03e9c71445ed9b994644daf", "Url": "https://api.github.com/repos/jcsirot/custom-job-icon-plugin", "Date": "2011-09-06T08:05:37Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((encryptedChannel) == null) { throw new saltchannel.BadPeer(\"got Packet.TYPE_ENCRYPTED_MESSAGE but not resumed channel exists\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2133/buggy-version/src.saltchannel.v2.SaltClientSession.java", "BodyUseAPI": [], "Fixed commit": "e24ac1ea071f4c4a392ed9151dbfe18d23f340a4", "Url": "https://api.github.com/repos/assaabloy-ppi/salt-channel", "Date": "2017-05-16T10:45:04Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.hibernate.sql.Template.isBoolean(token)) { token = dialect.toBooleanValueString(java.lang.Boolean.parseBoolean(token)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5333/buggy-version/hibernate-core.src.main.java.org.hibernate.sql.Template.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)", "org.hibernate.dialect.Dialect.toBooleanValueString(boolean)"], "Fixed commit": "6bd97e93e25105b6733a3eaf3bede7f684367b50", "Url": "https://api.github.com/repos/dreab8/hibernate-orm", "Date": "2015-09-22T15:16:23Z"},
{"Line": "=>750", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.hibernate.sql.Template.isBoolean(token)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5333/buggy-version/hibernate-core.src.main.java.org.hibernate.sql.Template.java", "BodyUseAPI": [], "Fixed commit": "6bd97e93e25105b6733a3eaf3bede7f684367b50", "Url": "https://api.github.com/repos/dreab8/hibernate-orm", "Date": "2015-09-22T15:16:23Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from.canRead()) orig = new java.io.FileInputStream(from); else orig = new org.badiff.io.EmptyInputStream();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5409/buggy-version/badiff-patcher.src.main.java.org.badiff.patcher.client.PathAction.java", "BodyUseAPI": [], "Fixed commit": "55045b6461d02effd1996cb377011ef6d064f7a3", "Url": "https://api.github.com/repos/org-badiff/badiff", "Date": "2014-10-31T08:01:46Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.findInLine(java.util.regex.Pattern)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((nextMention.charAt(1)) == '@') mentionedUsers.add(nextMention.substring(2).toLowerCase()); else mentionedUsers.add(nextMention.substring(1).toLowerCase());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6280/buggy-version/ps2.src.twitter.Extract.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)", "java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "java.lang.String.substring(int)", "java.util.Set<java.lang.String>.add(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "17c0bd0ae0ad2cd101b1f86675a3d42208edfa8a", "Url": "https://api.github.com/repos/zgaleday/6_005", "Date": "2016-10-25T02:44:57Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.shiro.realm.Realm.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.equals(\"activeDirectoryRealm\")) { usersList.addAll(getUserListObj.getUserList(((org.apache.zeppelin.server.ActiveDirectoryGroupRealm) (realm)), \"\")); }else if (name.equals(\"jdbcRealm\")) { usersList.addAll(getUserListObj.getUserList(((org.apache.shiro.realm.jdbc.JdbcRealm) (realm)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3251/buggy-version/zeppelin-server.src.main.java.org.apache.zeppelin.rest.NotebookRestApi.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "cecdf6c235dcd9fabb33fc2a071ce5cb82b13192", "Url": "https://api.github.com/repos/zhangmq/zeppelin", "Date": "2016-08-03T11:39:05Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fs.getLocation()) != null) && (fs.getLocation().getWorld().equals(loc.getWorld()))) { if ((java.lang.Math.abs(fs.getLocation().distance(loc))) <= radius) { fs.remove(); removed = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3283/buggy-version/src.com.projectkorra.ProjectKorra.firebending.FireCombo.java", "BodyUseAPI": ["com.projectkorra.ProjectKorra.firebending.FireCombo.FireComboStream.remove()", "com.projectkorra.ProjectKorra.firebending.FireCombo.FireComboStream.getLocation()", "org.bukkit.Location.distance(org.bukkit.Location)", "java.lang.Math.abs(fs.getLocation().distance(loc))"], "Fixed commit": "8790e66df68c0c4898b7f5d2ca7dc7179d3c52df", "Url": "https://api.github.com/repos/jacklin213/ProjectKorra", "Date": "2015-06-21T06:24:38Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recentFileList.size()) > (com.horstmann.violet.framework.userpreferences.UserPreferencesService.DEFAULT_MAX_RECENT_FILES)) { iter.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8467/buggy-version/violet-framework.src.main.java.com.horstmann.violet.framework.userpreferences.UserPreferencesService.java", "BodyUseAPI": [], "Fixed commit": "0b7739c75812fccaa537c108625bd2ed14fdf50d", "Url": "https://api.github.com/repos/violetumleditor/code", "Date": "2013-06-11T08:07:58Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((localModel) != null) { java.util.List<com.example.albertomariopirovano.safecar.firebase_model.Trip> trips = localModel.getTrips(); java.util.Collections.sort(trips, new com.example.albertomariopirovano.safecar.data_comparators.DateComparator()); state.putParcelableArrayList(\"markersToBePlaced\", ((java.util.ArrayList<? extends android.os.Parcelable>) (trips.get(((trips.size()) - 1)).getMarkers()))); android.util.Log.d(com.example.albertomariopirovano.safecar.inner.fragments.TabHome.TAG, java.lang.String.valueOf(state.getParcelableArrayList(\"markersToBePlaced\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3715/buggy-version/app.src.main.java.com.example.albertomariopirovano.safecar.inner.fragments.TabHome.java", "BodyUseAPI": [], "Fixed commit": "6fac9726934004b6daa9f709394bb80c249d3b7e", "Url": "https://api.github.com/repos/apiro/SafeCar", "Date": "2017-06-11T10:13:14Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yidian.push.data.XiaomiMessage.getTitle()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(showTitle)) { showTitle = PATHomiData.getAppName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1827/buggy-version/processor.src.main.java.com.yidian.push.utils.XiaomiPush.java", "BodyUseAPI": [], "Fixed commit": "6d516f23d6ef1ecc1bbb32421e65fc9a7a7bc6af", "Url": "https://api.github.com/repos/siyu618/push_notification", "Date": "2015-11-25T11:48:56Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVisible()) progress.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7976/buggy-version/src.com.marakana.android.yamba.StatusFragment.java", "BodyUseAPI": [], "Fixed commit": "a8e63b88c93800abb33a87ba1cc3abd9e798abc2", "Url": "https://api.github.com/repos/cuplv/Yamba", "Date": "2017-05-28T17:36:25Z"},
{"Line": "=>1244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getProducer().isTransactionInProgress())) { throw getProducer().getExceptionConverter().convert(new javax.persistence.TransactionRequiredException(\"Executing an update/delete query\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7266/buggy-version/hibernate-core.src.main.java.org.hibernate.query.internal.AbstractProducedQuery.java", "BodyUseAPI": [], "Fixed commit": "60de43e3e0261020f58b812ca7bcdb6551a4e42f", "Url": "https://api.github.com/repos/sebersole/hibernate-core", "Date": "2016-05-03T04:53:35Z"},
{"Line": "=>1207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lockOptions.getLockMode()) != null) && ((lockOptions.getLockMode()) != (org.hibernate.LockMode.NONE))) { if (!(getProducer().isTransactionInProgress())) { throw new javax.persistence.TransactionRequiredException(\"no transaction is in progress\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7266/buggy-version/hibernate-core.src.main.java.org.hibernate.query.internal.AbstractProducedQuery.java", "BodyUseAPI": [], "Fixed commit": "60de43e3e0261020f58b812ca7bcdb6551a4e42f", "Url": "https://api.github.com/repos/sebersole/hibernate-core", "Date": "2016-05-03T04:53:35Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intent.resolveActivity(getActivity().getPackageManager())) != null) { startActivity(intent); }else { studio.uphie.one.utils.TextToast.longShow(R.string.non_market_app); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5538/buggy-version/app.src.main.java.studio.uphie.one.ui.personal.PersonalFragment.java", "BodyUseAPI": ["studio.uphie.one.ui.personal.PersonalFragment.startActivity(android.content.Intent)"], "Fixed commit": "bb7561fe48c224c69adea457aec5aab22a65ad98", "Url": "https://api.github.com/repos/Uphie/ONE-Unofficial", "Date": "2016-02-18T09:05:28Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((device) != null) { message = \" connection=\" + (device.getConnection().getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7553/buggy-version/NFCommunicator.nfcommunicator.src.main.java.com.neofect.communicator.CommunicationController.java", "BodyUseAPI": [], "Fixed commit": "6f00ef9ffb3395fbe7e3cacd8fc78e0eb2cf43b7", "Url": "https://api.github.com/repos/Neofect/Communicator", "Date": "2017-10-20T13:18:40Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((defaultCrs.getCoordinateSystem().getDimension()) == (filter.getBounds().getDimension())) { return getFactory(extraData).bbox(filter.getExpression1(), org.geotools.geometry.jts.ReferencedEnvelope.create(filter.getBounds(), defaultCrs)); }else { try { org.opengis.referencing.crs.SingleCRS horizontalCRS = org.geotools.referencing.CRS.getHorizontalCRS(defaultCrs); org.geotools.geometry.jts.ReferencedEnvelope bounds = org.geotools.geometry.jts.ReferencedEnvelope.create(filter.getBounds(), horizontalCRS); return getFactory(extraData).bbox(filter.getExpression1(), bounds); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(((\"Could not decode srs '\" + srs) + \"'\"), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2824/buggy-version/modules.library.main.src.main.java.org.geotools.filter.spatial.DefaultCRSFilterVisitor.java", "BodyUseAPI": ["getFactory(extraData).bbox(filter.getExpression1(),org.geotools.geometry.jts.ReferencedEnvelope.create(filter.getBounds(), defaultCrs))", "org.opengis.filter.spatial.BBOX.getBounds()", "org.opengis.filter.spatial.BBOX.getBounds()", "org.opengis.filter.spatial.BBOX.getExpression1()", "org.geotools.geometry.jts.ReferencedEnvelope.create(filter.getBounds(),org.opengis.referencing.crs.CoordinateReferenceSystem)", "getFactory(extraData).bbox(filter.getExpression1(),org.geotools.geometry.jts.ReferencedEnvelope)", "org.geotools.referencing.CRS.getHorizontalCRS(org.opengis.referencing.crs.CoordinateReferenceSystem)", "org.geotools.geometry.jts.ReferencedEnvelope.create(filter.getBounds(),org.opengis.referencing.crs.SingleCRS)", "org.opengis.filter.spatial.BBOX.getExpression1()"], "Fixed commit": "32ca414e1f7b314715d15413a83ffb6a79346b61", "Url": "https://api.github.com/repos/mcrmcr/geotools", "Date": "2014-07-10T18:33:22Z"},
{"Line": "=>1077", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((virtualTopologies.get(userId)) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3289/buggy-version/modules.cloudsim.src.main.java.org.cloudbus.cloudsim.sdn.NetworkOperatingSystem.java", "BodyUseAPI": [], "Fixed commit": "38e6fa1604753baae5027d141587639d0c499d08", "Url": "https://api.github.com/repos/niteshdudhey/cloudsim", "Date": "2017-04-21T18:15:42Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 1) { return new java.awt.Color[]{ new java.awt.Color(redStart, greenStart, 0) }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8156/buggy-version/src.util.GeneralUtil.java", "BodyUseAPI": [], "Fixed commit": "c24de9855e121d31b5a5b7cbf71869317f2b694a", "Url": "https://api.github.com/repos/tOgg1/PotentialNinja", "Date": "2013-11-07T09:39:36Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node instanceof org.apache.tajo.master.querymaster.ScanNode) { scan.add(((org.apache.tajo.master.querymaster.ScanNode) (node))); }else if (node instanceof org.apache.tajo.master.querymaster.TableSubQueryNode) { s.add(((org.apache.tajo.master.querymaster.TableSubQueryNode) (node)).getSubQuery()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8099/buggy-version/tajo-core.tajo-core-backend.src.main.java.org.apache.tajo.master.querymaster.QueryUnit.java", "BodyUseAPI": [], "Fixed commit": "e3c0f5ae2eea09b72660927c931bedba406f187a", "Url": "https://api.github.com/repos/hyunsik/incubator-tajo", "Date": "2013-12-12T00:23:43Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPaintSelected) == null) { mPaintSelected = new android.graphics.Paint(android.graphics.Paint.ANTI_ALIAS_FLAG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7633/buggy-version/library.src.main.java.org.nghiatrx.libs.letterview.BaseLetterVIew.java", "BodyUseAPI": [], "Fixed commit": "3c5238226ca7773039feff8fc5ca11f9cf4b59de", "Url": "https://api.github.com/repos/nghiatrx/android-letter-view", "Date": "2017-03-06T15:15:34Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPaint) == null) { mPaint = new android.graphics.Paint(android.graphics.Paint.ANTI_ALIAS_FLAG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7633/buggy-version/library.src.main.java.org.nghiatrx.libs.letterview.BaseLetterVIew.java", "BodyUseAPI": [], "Fixed commit": "3c5238226ca7773039feff8fc5ca11f9cf4b59de", "Url": "https://api.github.com/repos/nghiatrx/android-letter-view", "Date": "2017-03-06T15:15:34Z"},
{"Line": "=>1500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teavm.classlib.java.io.TEmscriptenFileSystem.FS_stat(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stat == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3186/buggy-version/teavm-classlib.src.main.java.org.teavm.classlib.java.io.TFile.java", "BodyUseAPI": [], "Fixed commit": "5ece74b07a8194caeec964548cbbf1c34742038d", "Url": "https://api.github.com/repos/kaffamobile/teavm", "Date": "2015-09-08T21:43:54Z"},
{"Line": "=>1415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teavm.classlib.java.io.TEmscriptenFileSystem.FS_stat(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stat == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3186/buggy-version/teavm-classlib.src.main.java.org.teavm.classlib.java.io.TFile.java", "BodyUseAPI": [], "Fixed commit": "5ece74b07a8194caeec964548cbbf1c34742038d", "Url": "https://api.github.com/repos/kaffamobile/teavm", "Date": "2015-09-08T21:43:54Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getStackInSlot(5)) == null) { setMilk(((byte) ((getMilk()) + 1))); if ((getStackInSlot(4).stackSize) > 1) (getStackInSlot(4).stackSize)--; else setInventorySlotContents(4, null); setInventorySlotContents(5, new net.minecraft.item.ItemStack(net.minecraft.init.Items.BUCKET)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6765/buggy-version/src.main.java.the_fireplace.overlord.tileentity.TileEntitySkeletonMaker.java", "BodyUseAPI": [], "Fixed commit": "295b15f6ce896df4acdf1c3ae4aba094748e8ff5", "Url": "https://api.github.com/repos/The-Fireplace-Minecraft-Mods/Overlord", "Date": "2016-10-09T22:14:09Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getStackInSlot(4).stackSize) > 1) (getStackInSlot(4).stackSize)--; else setInventorySlotContents(4, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6765/buggy-version/src.main.java.the_fireplace.overlord.tileentity.TileEntitySkeletonMaker.java", "BodyUseAPI": [], "Fixed commit": "295b15f6ce896df4acdf1c3ae4aba094748e8ff5", "Url": "https://api.github.com/repos/The-Fireplace-Minecraft-Mods/Overlord", "Date": "2016-10-09T22:14:09Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == (strs.length)) { sb.append(c); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7234/buggy-version/14-Longest-Common-Prefix.solution.java", "BodyUseAPI": [], "Fixed commit": "48b342f26101431a3fccc1aedad76594114e8573", "Url": "https://api.github.com/repos/syjohnson/Leetcode", "Date": "2016-09-29T13:47:07Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jterm.JTerm.isHeadless()) JTerm.out.print(jterm.io.InputHandler.getCommand());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/768/buggy-version/src.main.java.jterm.io.InputHandler.java", "BodyUseAPI": [], "Fixed commit": "cc3d09217ad16023aca9023d26dc38b66ab4f4e0", "Url": "https://api.github.com/repos/lbenedetto/JTerm", "Date": "2017-11-20T20:08:35Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wheatgenetics.onekk.MainActivity.getPackageManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pm.hasSystemFeature(PackageManager.FEATURE_CAMERA_AUTOFOCUS)) { android.hardware.Camera.Parameters params = mCamera.getParameters(); params.setFocusMode(Camera.Parameters.FOCUS_MODE_CONTINUOUS_PICTURE); mCamera.setParameters(params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/940/buggy-version/onekk.src.main.java.org.wheatgenetics.onekk.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ef486a6ea74296f8433d260481495c740a0a8260", "Url": "https://api.github.com/repos/PhenoApps/OneKK", "Date": "2015-12-21T20:34:25Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["habit.getDaysOfWeek().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((daysOfWeekString.length()) > 0) daysToBeCompleted.setText((\"To be completed on \" + (habit.getDaysOfWeek().toString()))); else daysToBeCompleted.setText(\"No days set to be completed on\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5132/buggy-version/app.src.main.java.ca.ualberta.cs.achristi.achristi_habittracker.HabitDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "d6ff905d9e7b4649df8888a6dc587a5c472fbda1", "Url": "https://api.github.com/repos/achristi-ua/as1", "Date": "2016-10-02T19:17:09Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ch[i]) != ' ') { tmp += ch[(i++)]; while ((ch.length) > i) { if (((((ch[i]) != ' ') && (!(isDigit(ch[i])))) && (!(isLetterAZ(ch[i])))) && ((ch[i]) != '\\\"')) { tmp += ch[(i++)]; }else { break; } } boolean found = false; for (no.uio.ifi.asp.scanner.TokenKind.TokenKind k : java.util.EnumSet.range(ampToken, slashEqualToken)) { if (k.toString().equals(tmp)) { found = true; curLineTokens.add(new no.uio.ifi.asp.scanner.Token(k, curLineNum())); } } java.lang.String eMessage = (\"\\\"\" + tmp) + \"\\\"\"; while (found == false) { try { tmp = tmp.substring(0, ((tmp.length()) - 1)); i--; } catch (java.lang.Exception e) { found = true; scannerError((\"Not a delimters or operator \\t\\t\" + eMessage)); } for (no.uio.ifi.asp.scanner.TokenKind.TokenKind k : java.util.EnumSet.range(ampToken, slashEqualToken)) { if (k.toString().equals(tmp)) { found = true; curLineTokens.add(new no.uio.ifi.asp.scanner.Token(k, curLineNum())); } } } }else { i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1359/buggy-version/inf2100-oblig-2017.no.uio.ifi.asp.scanner.Scanner.java", "BodyUseAPI": ["no.uio.ifi.asp.scanner.Scanner.isLetterAZ(char)", "no.uio.ifi.asp.scanner.Scanner.isDigit(char)"], "Fixed commit": "15d56416cb8e611fc820b16398b4b0db0b8f07bd", "Url": "https://api.github.com/repos/kennetng/Prosjektoppgave-i-Java", "Date": "2017-09-14T14:29:57Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.bukkit.entity.Player, org.bukkit.Location>.get(event.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (last == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7676/buggy-version/src.edgruberman.bukkit.messagemanager.PlayerMonitor.java", "BodyUseAPI": [], "Fixed commit": "cd74004b2ffe519f949f3497a55bd306b23cfea3", "Url": "https://api.github.com/repos/EdGruberman/MessageManager", "Date": "2011-10-08T15:17:31Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.identity.application.mgt.ApplicationManagementService.getApplicationExcludingFileBasedSPs(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((serviceProvider.getClaimConfig().getClaimMappings()) != null) { for (org.wso2.carbon.identity.application.common.model.ClaimMapping claimMapping : serviceProvider.getClaimConfig().getClaimMappings()) { if (claimMapping.getRemoteClaim().getClaimUri().equals(subjectClaimURI)) { subjectClaimURI = claimMapping.getLocalClaim().getClaimUri(); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2445/buggy-version/components.org.wso2.carbon.identity.oauth.endpoint.src.main.java.org.wso2.carbon.identity.oauth.endpoint.util.ClaimUtil.java", "BodyUseAPI": ["serviceProvider.getClaimConfig().getClaimMappings()", "org.wso2.carbon.identity.application.common.model.ServiceProvider.getClaimConfig()"], "Fixed commit": "2fdf9aadf675ec2c545c805b0ea4dbb0804b3244", "Url": "https://api.github.com/repos/wso2-extensions/identity-inbound-auth-oauth", "Date": "2016-08-29T13:27:07Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (claimMapping.isRequested()) { claimURIList.add(claimMapping.getLocalClaim().getClaimUri()); if (claimMapping.getLocalClaim().getClaimUri().equals(subjectClaimURI)) { isSubjectClaimInRequested = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2445/buggy-version/components.org.wso2.carbon.identity.oauth.endpoint.src.main.java.org.wso2.carbon.identity.oauth.endpoint.util.ClaimUtil.java", "BodyUseAPI": ["claimMapping.getLocalClaim().getClaimUri()", "org.wso2.carbon.identity.application.common.model.ClaimMapping.getLocalClaim()", "claimMapping.getLocalClaim().getClaimUri().equals(java.lang.String)", "org.wso2.carbon.identity.application.common.model.ClaimMapping.getLocalClaim()", "java.util.List<java.lang.String>.add(claimMapping.getLocalClaim().getClaimUri())", "claimMapping.getLocalClaim().getClaimUri()"], "Fixed commit": "2fdf9aadf675ec2c545c805b0ea4dbb0804b3244", "Url": "https://api.github.com/repos/wso2-extensions/identity-inbound-auth-oauth", "Date": "2016-08-29T13:27:07Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.mobile.otrcapital.BuildConfig.DEBUG)) { mButton.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1754/buggy-version/app.src.main.java.com.mobile.otrcapital.Activities.LoginScreen.java", "BodyUseAPI": [], "Fixed commit": "501bfe832ebcf322676ec21c02dcd42d7fe197a4", "Url": "https://api.github.com/repos/otrcapital/otrandroid", "Date": "2016-03-01T08:05:42Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileDefaultWeight.exists()) { java.io.FileReader fr = new java.io.FileReader(fileDefaultWeight); char[] arrayOfNumWeight = new char[50]; fr.read(arrayOfNumWeight); fr.close(); str_weight = java.lang.String.valueOf(arrayOfNumWeight); }else { str_weight = \"300\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2074/buggy-version/src.action.talkative_scale.java", "BodyUseAPI": [], "Fixed commit": "c3ee8aea376ecaddd372ce6d2d48d49f98291e03", "Url": "https://api.github.com/repos/HoangTuanNhan/TalkativeScale", "Date": "2016-10-07T04:38:47Z"},
{"Line": "=>708", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.readUntilNonEmptyLine(java.io.BufferedReader)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (garbage.contains(\"/\")) { java.lang.String title = edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.readUntilNonEmptyLine(r); if (title == null) return false; metaData.add(new edu.cmu.ml.rtw.generic.util.Pair<edu.cmu.ml.rtw.generic.data.annotation.nlp.AnnotationTypeNLP<java.lang.String>, java.lang.String>(edu.psu.ist.acs.micro.mid.data.annotation.nlp.AnnotationTypeNLPMID.ARTICLE_TITLE, title)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4103/buggy-version/src.main.java.edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.java", "BodyUseAPI": [], "Fixed commit": "5618cbcec4122bc4320a804c3c426242febb65d3", "Url": "https://api.github.com/repos/forkunited/micro-mid", "Date": "2016-02-09T19:51:21Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.readUntilNonEmptyLine(java.io.BufferedReader)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (garbage.contains(\"/\")) { documentText = textBuilder.toString(); }else { documentText = (garbage + \"\\n\\n\") + (textBuilder.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4103/buggy-version/src.main.java.edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.java", "BodyUseAPI": [], "Fixed commit": "5618cbcec4122bc4320a804c3c426242febb65d3", "Url": "https://api.github.com/repos/forkunited/micro-mid", "Date": "2016-02-09T19:51:21Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["backtype.storm.tuple.Tuple.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (msg == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4238/buggy-version/storm.src.main.java.nl.us2.cloudpelican.stormprocessor.MatchBolt.java", "BodyUseAPI": [], "Fixed commit": "cb2d8d54aa52ca5378e51f7cda50ee522fdf0bb2", "Url": "https://api.github.com/repos/RobinUS2/cloudpelican-lsd", "Date": "2015-07-10T07:47:00Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Id().length()) != 36) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4238/buggy-version/storm.src.main.java.nl.us2.cloudpelican.stormprocessor.Filter.java", "BodyUseAPI": [], "Fixed commit": "cb2d8d54aa52ca5378e51f7cda50ee522fdf0bb2", "Url": "https://api.github.com/repos/RobinUS2/cloudpelican-lsd", "Date": "2015-07-10T07:47:00Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getDestination(javax.imageio.ImageReadParam,java.util.Iterator<javax.imageio.ImageTypeSpecifier>,int,int)", "com.twelvemonkeys.imageio.color.ColorSpaces.getColorSpace(ColorSpaces.CS_GENERIC_CMYK)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cmykCS != (image.getColorModel().getColorSpace())) { convert = new java.awt.image.ColorConvertOp(cmykCS, image.getColorModel().getColorSpace(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/144/buggy-version/imageio.imageio-jpeg.src.main.java.com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.java", "BodyUseAPI": ["java.awt.image.ColorModel.getColorSpace()", "java.awt.image.BufferedImage.getColorModel()"], "Fixed commit": "b0eb668ed4ec37d64363276b3924b6f53de7b66d", "Url": "https://api.github.com/repos/haraldk/TwelveMonkeys", "Date": "2016-06-28T16:18:15Z"},
{"Line": "=>855", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((invoiceDetail.getBillableDesc()) != null) { refNo = invoiceDetail.getBillableDesc().getBillable().getMaster().getReferenceNo(); }else { refNo = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7570/buggy-version/src.java.com.smi.travel.datalayer.bean.master.AJAXBean.java", "BodyUseAPI": ["invoiceDetail.getBillableDesc().getBillable().getMaster().getReferenceNo()", "invoiceDetail.getBillableDesc().getBillable()", "com.smi.travel.datalayer.entity.InvoiceDetail.getBillableDesc()", "invoiceDetail.getBillableDesc().getBillable().getMaster()"], "Fixed commit": "575f2dc7e0ba39fded6223a17bc33bc27f12dd12", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-08-31T14:10:38Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.dob) != null) { data.put(\"dob\", models.Application.yymmddDate(this.dob)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/170/buggy-version/app.models.Person.java", "BodyUseAPI": [], "Fixed commit": "1ccaa58c95feb2ada5d03e0e87cf0d17312cf20d", "Url": "https://api.github.com/repos/schmave/demschooltools", "Date": "2017-03-02T14:28:40Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((drawingView) == null) { drawingView = adapter.onCreateHeaderViewHolder(parent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5804/buggy-version/dj-decor.src.main.java.com.darkjaguar.dj_decor.header.DJHeaderCache.java", "BodyUseAPI": [], "Fixed commit": "140286da3263404a496478ab1493b43fdca93095", "Url": "https://api.github.com/repos/DarkJaguar91/DJDecor", "Date": "2015-07-30T09:46:56Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (name.equals(\"\")) { this.name = \"Anonymous\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3766/buggy-version/src.main.java.Review.java", "BodyUseAPI": [], "Fixed commit": "6915795c5a7572db15b2d3c2dcbaf770e0aa28f2", "Url": "https://api.github.com/repos/GDBMedia/restaurants", "Date": "2016-05-04T22:51:18Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRetainedFragment) == null) { fragmentManager.beginTransaction().replace(R.id.list_activity_list_container, com.morosphere.android.watchlist.ui.MovieListFragment.newInstance(dualView), RETAINED_FRAGMENT).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1083/buggy-version/app.src.main.java.com.morosphere.android.watchlist.ui.MovieListActivity.java", "BodyUseAPI": [], "Fixed commit": "a6c5c7f28413856cae421a467f4cfa924301fc26", "Url": "https://api.github.com/repos/clonancodes/Android-Watchlist", "Date": "2017-07-19T13:17:45Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adobe.epubcheck.ctc.PackageManifest.getItem(si.getIdref())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (mi != null) { java.lang.String path = mi.getHref(); path = com.adobe.epubcheck.util.PathUtil.resolveRelativeReference(navDocEntry, path, null); if ((((path != null) && (!(path.equals(tocFileName)))) && (!(path.equals(navDocEntry)))) && (!(tocLinkSet.contains(path)))) { report.message(MessageId.OPF_059, new com.adobe.epubcheck.messages.MessageLocation(navDocEntry, (-1), (-1), path)); } }else { report.message(MessageId.OPF_049, new com.adobe.epubcheck.messages.MessageLocation(navDocEntry, (-1), (-1), epack.getPackageMainPath()), si.getIdref()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5672/buggy-version/src.main.java.com.adobe.epubcheck.ctc.EpubNCXCheck.java", "BodyUseAPI": ["com.adobe.epubcheck.ctc.ManifestItem.getHref()"], "Fixed commit": "c3175cb4199e3fc297f5bac6196206bc20fb4224", "Url": "https://api.github.com/repos/IDPF/epubcheck", "Date": "2013-12-10T19:55:40Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((received.type) == (MPacket.HELLO)) { eventQueue.put(received); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1155/buggy-version/mazewar.ServerListenerThread.java", "BodyUseAPI": ["java.util.concurrent.BlockingQueue.put(MPacket)"], "Fixed commit": "e483337ee8702ca4887beb407bed9e45e0ba0d64", "Url": "https://api.github.com/repos/volnxebec/ECE419_Lab2", "Date": "2016-01-23T22:03:43Z"},
{"Line": "=>1052", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mcjty.rftools.items.dimlets.DimletMapping.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (mapping != null) { itemStack.setItemDamage(mapping.getId(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/9038/buggy-version/src.main.java.com.mcjty.rftools.items.dimlets.KnownDimletConfiguration.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.setItemDamage(mapping.getId(key))", "com.mcjty.rftools.items.dimlets.DimletMapping.getId(com.mcjty.rftools.items.dimlets.DimletKey)"], "Fixed commit": "7cd13dccd46eeb5c832d2b91b4535edc8dcb5018", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-03-23T19:31:18Z"},
{"Line": "=>1586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mShutterSpeedTextViewProgressMemory) == 0) { mShutterSpeedTextView.setText((\"Shutter Speed: \" + (mShutterSpeedTextViewProgressMemory))); }else if ((1000000000 / (mShutterSpeedTextViewProgressMemory)) <= 1) { mShutterSpeedTextView.setText((\"Shutter Speed: \" + ((mShutterSpeedTextViewProgressMemory) / 1000000000))); }else { mShutterSpeedTextView.setText((\"Shutter Speed: 1/\" + (1000000000 / (mShutterSpeedTextViewProgressMemory)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3177/buggy-version/app.src.main.java.com.example.mjk.camera2videoimage.Camera2VideoImageActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "1dee3e45c8e45398aed6e8a53dac577bcfaf60dd", "Url": "https://api.github.com/repos/minjaekim96/camera2_learn", "Date": "2017-05-25T16:02:23Z"},
{"Line": "=>1052", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSceneMode) != (CONTROL_SCENE_MODE_DISABLED)) { mCaptureRequestBuilder.set(CaptureRequest.CONTROL_MODE, CaptureRequest.CONTROL_MODE_USE_SCENE_MODE); mCaptureRequestBuilder.set(CaptureRequest.CONTROL_SCENE_MODE, mSceneMode); }else { mCaptureRequestBuilder.set(CaptureRequest.CONTROL_MODE, CaptureRequest.CONTROL_MODE_AUTO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3177/buggy-version/app.src.main.java.com.example.mjk.camera2videoimage.Camera2VideoImageActivity.java", "BodyUseAPI": [], "Fixed commit": "1dee3e45c8e45398aed6e8a53dac577bcfaf60dd", "Url": "https://api.github.com/repos/minjaekim96/camera2_learn", "Date": "2017-05-25T16:02:23Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (configuration != null) { java.util.Map<java.lang.String, java.lang.String> configs = com.photon.phresco.plugins.util.MojoUtil.getAllValues(configuration); java.lang.String environmentName = configs.get(com.photon.phresco.plugins.ENVIRONMENT_NAME); com.photon.phresco.plugin.commons.PluginUtils pluginUtils = new com.photon.phresco.plugin.commons.PluginUtils(); java.lang.String configXmlFile = project.getProperties().getProperty(Constants.POM_PROP_KEY_COMPONENTTEST_ADAPT_CONFIG); java.io.File configXMLFile = new java.io.File(((baseDir.getPath()) + configXmlFile)); pluginUtils.executeUtil(environmentName, baseDir.getPath(), configXMLFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3069/buggy-version/plugin-commons.src.main.java.com.photon.phresco.plugins.PhrescoBasePlugin.java", "BodyUseAPI": ["com.photon.phresco.plugins.util.MojoUtil.getAllValues(com.photon.phresco.plugins.model.Mojos.Mojo.Configuration)"], "Fixed commit": "56fe161d51f17bdc398dd6ab64f5633c9690874b", "Url": "https://api.github.com/repos/photon-infotech/plugins", "Date": "2013-06-27T11:51:41Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((draw.getItem()) instanceof no.asgari.civilization.server.model.Tech) { privateLog = ((((username) + \" has revealed \") + (no.asgari.civilization.server.model.GameLog.DELIM)) + (draw.getItem().revealAll())) + UNIQUE_ITEM_NUMBER; publicLog = ((((username) + \" has revealed \") + (no.asgari.civilization.server.model.GameLog.DELIM)) + (draw.getItem().revealAll())) + UNIQUE_ITEM_NUMBER; }else { privateLog = ((((username) + \" has revealed \") + (no.asgari.civilization.server.model.GameLog.DELIM)) + (draw.getItem().revealAll())) + ITEM_NUMBER; publicLog = ((((username) + \" has revealed \") + (no.asgari.civilization.server.model.GameLog.DELIM)) + (draw.getItem().revealAll())) + ITEM_NUMBER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8359/buggy-version/src.main.java.no.asgari.civilization.server.model.GameLog.java", "BodyUseAPI": ["no.asgari.civilization.server.model.Draw.getItem()", "no.asgari.civilization.server.model.Draw.getItem()", "draw.getItem().revealAll()", "no.asgari.civilization.server.model.Draw.getItem()", "draw.getItem().revealAll()", "no.asgari.civilization.server.model.Draw.getItem()", "draw.getItem().revealAll()", "draw.getItem().revealAll()"], "Fixed commit": "44e8aaf545ca44dc19bc421117b68de8def55d73", "Url": "https://api.github.com/repos/cash1981/civilization-boardgame-rest", "Date": "2015-12-13T21:22:39Z"},
{"Line": "=>3412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jacop.core.SmallDenseDomain.intersect(org.jacop.core.IntervalDomain,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (eq(result)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2009/buggy-version/src.main.java.org.jacop.core.IntervalDomain.java", "BodyUseAPI": [], "Fixed commit": "7e7b1d54bdfd475bbbd3327150bbc926997f617d", "Url": "https://api.github.com/repos/radsz/jacop", "Date": "2013-10-28T10:24:11Z"},
{"Line": "=>3475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eq(result)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2009/buggy-version/src.main.java.org.jacop.core.IntervalDomain.java", "BodyUseAPI": [], "Fixed commit": "7e7b1d54bdfd475bbbd3327150bbc926997f617d", "Url": "https://api.github.com/repos/radsz/jacop", "Date": "2013-10-28T10:24:11Z"},
{"Line": "=>807", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bitsResult == (bits)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2009/buggy-version/src.main.java.org.jacop.core.SmallDenseDomain.java", "BodyUseAPI": [], "Fixed commit": "7e7b1d54bdfd475bbbd3327150bbc926997f617d", "Url": "https://api.github.com/repos/radsz/jacop", "Date": "2013-10-28T10:24:11Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exp == (-1)) number = -number;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/31/buggy-version/h2o-core.src.main.java.water.parser.CsvParser.java", "BodyUseAPI": [], "Fixed commit": "2c8e32264e75cd2849fdd29e4c96e966fcf38d29", "Url": "https://api.github.com/repos/0xdata/h2o-dev", "Date": "2014-08-12T19:25:18Z"},
{"Line": "=>985", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNewtCanvasAWT) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8054/buggy-version/src.java.clearvolume.renderer.cleargl.ClearGLVolumeRenderer.java", "BodyUseAPI": [], "Fixed commit": "88d5e6117e962f5784e185adf3b720748e42b185", "Url": "https://api.github.com/repos/ClearVolume/clearvolume", "Date": "2015-05-13T08:41:43Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temporalSummaryCompositionStrategyClassName == null) { temporalSummaryCompositionStrategyClassName = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7338/buggy-version/src.version2.prototype.util.Schemas.java", "BodyUseAPI": [], "Fixed commit": "05dd7e21e04ffb6b25473b667d129bf81827c807", "Url": "https://api.github.com/repos/eastweb/EastWeb.V2", "Date": "2015-09-08T06:38:50Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.dobbby.closer.GameControl.alreadySet) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7942/buggy-version/app.src.main.java.com.dobbby.closer.GameControl.java", "BodyUseAPI": [], "Fixed commit": "393a88c8e60d95ded63fe013367ee85c0edff3ac", "Url": "https://api.github.com/repos/Dobbbby/Closer", "Date": "2016-06-13T11:23:39Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files == null) { opendap.coreServlet.PersistentContentHandler.log.error(\"Unable to locate directory {}. Not content will be copied. THIS IS BAD.\", fromDirName); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2521/buggy-version/src.opendap.coreServlet.PersistentContentHandler.java", "BodyUseAPI": [], "Fixed commit": "7ba9e82c47cef60ccbf08dfb23e26dc4888dcefd", "Url": "https://api.github.com/repos/OPENDAP/olfs", "Date": "2015-09-11T21:46:09Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.containsOnlyDigits()) == false) { return (((((((tableAlias) + \".\") + (columnName)) + \" \") + (operator)) + \" '\") + (value)) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6338/buggy-version/CloudAdapter.src.com.foundationdb.sql.query.Filter.java", "BodyUseAPI": [], "Fixed commit": "84f4f48680d241b320deeb8abc010a1229094e8b", "Url": "https://api.github.com/repos/PanosSakkos/Interactive-Query-Processing-on-Big-Data", "Date": "2014-03-07T23:39:28Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length < 270) { quantity += 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6444/buggy-version/src.main.java.FunctionLayer.CalculatorImpl.java", "BodyUseAPI": [], "Fixed commit": "1b04744fb655f51bcd61b59b1a270bc53644cfd4", "Url": "https://api.github.com/repos/JohannesFog/Carport", "Date": "2017-12-06T12:41:22Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDisposed) { java.lang.System.err.println(\"\\tError. Cannot connect. This Twirk instance has been disposed.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1139/buggy-version/twirc.src.main.java.com.gikk.twirk.Twirk.java", "BodyUseAPI": [], "Fixed commit": "d89d5034a4c9dbe56b40c6df2ca449019176f5ce", "Url": "https://api.github.com/repos/Gikkman/Java-Twirk", "Date": "2016-05-17T13:55:27Z"},
{"Line": "=>1075", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.voltdb.RealVoltDB.getSES(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (es != null) { es.submit(new java.lang.Runnable() { @java.lang.Override public void run() { for (int hostId : failedHosts) { org.voltdb.VoltZK.removeRejoinNodeIndicatorForHost(m_messenger.getZK(), hostId); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1037/buggy-version/src.frontend.org.voltdb.RealVoltDB.java", "BodyUseAPI": ["java.util.concurrent.ScheduledExecutorService.submit(java.lang.Runnable)"], "Fixed commit": "ca2b031720dcc418c61aad061ef2a6ac953ac784", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2016-06-13T20:14:39Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quesmark) == null) quesmark = new org.nutz.mvc.impl.MappingNode<T>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/634/buggy-version/src.org.nutz.mvc.impl.MappingNode.java", "BodyUseAPI": [], "Fixed commit": "6f2c1a146698405d6cccef83c1d47e628cf70948", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2011-08-17T08:54:27Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gc.debug) { camera.drawDebug(g); drawSystemData(gc, g); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8426/buggy-version/src.main.java.com.snapgames.demos.core.states.AbstractGameState.java", "BodyUseAPI": ["com.snapgames.demos.core.states.AbstractGameState.drawSystemData(com.snapgames.demos.Game,java.awt.Graphics2D)"], "Fixed commit": "a7f63933865cccb71775e954feb3beb430c64150", "Url": "https://api.github.com/repos/mcgivrer/simple-java2d-engine", "Date": "2016-10-11T23:46:30Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((((null != searchResponse) && (null != (searchResponse.getIssues()))) && (!(searchResponse.getIssues().isEmpty()))) && (!linkJira)) { response = createResponseFromSearchResults(request.getApiName(), searchResponse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5290/buggy-version/src.main.java.org.ht.iconnect.rest.service.JiraService.java", "BodyUseAPI": ["org.ht.iconnect.rest.service.JiraService.createResponseFromSearchResults(request.getApiName(),org.ht.iconnect.response.jira.JiraSearchResponse)"], "Fixed commit": "8796e22ad2af97e1b02579f33c30a871488c5e2a", "Url": "https://api.github.com/repos/htomar/iConnect", "Date": "2016-06-01T08:48:49Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.guestful.jaxrs.security.cookie.auth.CookieAuthFeature.StoredPrincipal.decrypt(config.getEncryptionKey(),cookie.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (storedPrincipal.expired(config.getCookieMaxAge())) { if (!(cookieAuth.optional())) { throw new javax.ws.rs.NotAuthorizedException(\"Expired authentication token\", ((\"GBASICAUTH realm=\\\"\" + (requestContext.getUriInfo().getBaseUri())) + \"\\\"\")); }else { } }else { if (!(cookieAuthorizer.isAuthorized(storedPrincipal.principal, cookieAuth))) { if (!(cookieAuth.optional())) { throw new javax.ws.rs.NotAuthorizedException(\"Not authorized\", ((\"GBASICAUTH realm=\\\"\" + (requestContext.getUriInfo().getBaseUri())) + \"\\\"\")); }else { } }else { principal = storedPrincipal.principal; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/9188/buggy-version/src.main.java.com.guestful.jaxrs.security.cookie.auth.CookieAuthFeature.java", "BodyUseAPI": ["com.guestful.jaxrs.security.cookie.auth.CookieAuthorizer.isAuthorized(java.security.Principal,com.guestful.jaxrs.security.cookie.auth.CookieAuth)"], "Fixed commit": "702d3c47412d2f1f6807acabf6ffb41928afd41a", "Url": "https://api.github.com/repos/guestful/module.jaxrs-filter-cookie-auth", "Date": "2014-12-12T18:22:24Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cookieAuth.optional())) { throw new javax.ws.rs.NotAuthorizedException(\"Not authorized\", ((\"GBASICAUTH realm=\\\"\" + (requestContext.getUriInfo().getBaseUri())) + \"\\\"\")); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/9188/buggy-version/src.main.java.com.guestful.jaxrs.security.cookie.auth.CookieAuthFeature.java", "BodyUseAPI": [], "Fixed commit": "702d3c47412d2f1f6807acabf6ffb41928afd41a", "Url": "https://api.github.com/repos/guestful/module.jaxrs-filter-cookie-auth", "Date": "2014-12-12T18:22:24Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((searchResult.getId().getVideoId()) != null) { videoIds.add(searchResult.getId().getVideoId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5484/buggy-version/src.me.oskarmendel.player.search.YouTubeSearch.java", "BodyUseAPI": ["searchResult.getId().getVideoId()", "com.google.api.services.youtube.model.SearchResult.getId()", "java.util.List<java.lang.String>.add(searchResult.getId().getVideoId())"], "Fixed commit": "60dfcd1b35ce27c9e86964e1eddfefece8c187de", "Url": "https://api.github.com/repos/brokenprogrammer/RapidTunes", "Date": "2017-09-19T07:47:45Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapPanel) != null) { remove(mapPanel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7194/buggy-version/src.iteration1.MapAndListGUI.java", "BodyUseAPI": [], "Fixed commit": "9f42a59430dd21b1ba2d6cce82ce0526e21acce2", "Url": "https://api.github.com/repos/Olovan/TournamentMeetingGenerator", "Date": "2017-09-04T18:03:12Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.prefix) == null) && ((this.colour) == null)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1953/buggy-version/src.uk.co.quartzcraft.kingdoms.systems.perms.Group.java", "BodyUseAPI": [], "Fixed commit": "e1c4e0c1a95b057f148374007bfba94334890b15", "Url": "https://api.github.com/repos/Quartzcraft/QuartzKingdoms", "Date": "2014-10-12T04:41:57Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.get(0)) instanceof com.hippo.nimingban.client.data.Post) { java.util.Iterator iterator = data.iterator(); while (iterator.hasNext()) { com.hippo.nimingban.client.data.Post post = ((com.hippo.nimingban.client.data.Post) (iterator.next())); if (mData.contains(post)) { dataSize--; }else { mData.add(((E) (post))); } } }else { mData.addAll(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3953/buggy-version/app.src.main.java.com.hippo.nimingban.widget.ContentLayout.java", "BodyUseAPI": ["java.util.List<E>.addAll(java.util.List<E>)", "java.util.List<E>.iterator()"], "Fixed commit": "db8040aca43197333730f28ad2e25b6a86765449", "Url": "https://api.github.com/repos/ju5t4fun/Nimingban", "Date": "2017-02-22T07:58:57Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((settingsManager.getReceivedFiles()) != null) && ((settingsManager.getReceivedFiles().size()) > 0)) { for (com.degla.restful.models.RestfulFile current : settingsManager.getReceivedFiles()) { current.setSelected(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3567/buggy-version/alfahresApp.app.src.main.java.com.wadidejla.newscreens.NewArchiveFilesFragment.java", "BodyUseAPI": ["com.wadidejla.settings.SystemSettingsManager.getReceivedFiles()"], "Fixed commit": "94397ce02e3410f2f2390fa0d192c0bb9ed45b2a", "Url": "https://api.github.com/repos/cliniome/ScannerApp", "Date": "2015-08-06T01:38:42Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((startOfContract != null) && (org.apache.commons.lang3.StringUtils.contains(startOfContract, \"-\"))) && ((startOfContract.length()) == 11)) { dtf = java.time.format.DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"); }else if (((startOfContract != null) && (org.apache.commons.lang3.StringUtils.contains(startOfContract, \"-\"))) && ((startOfContract.length()) == 9)) { dtf = java.time.format.DateTimeFormatter.ofPattern(\"dd-MMM-yy\"); }else { dtf = java.time.format.DateTimeFormatter.ofPattern(\"dd MMM yyyy\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/297/buggy-version/src.main.java.com.groupware.gringotts.web.rest.BulkResource.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.contains(java.lang.String,java.lang.String)", "java.lang.String.length()"], "Fixed commit": "15c221941f08788592af8b83d91e2be3d4d623df", "Url": "https://api.github.com/repos/chmutgi/Gringotts", "Date": "2017-05-09T16:37:56Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (art == null) { art = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5421/buggy-version/src.de.maxgb.vertretungsplan.manager.VertretungsplanManager.java", "BodyUseAPI": [], "Fixed commit": "de0ddd3a0a83984101277ab1eedda83a3ff8d1fc", "Url": "https://api.github.com/repos/maxanier/Vertretungsplan", "Date": "2014-10-01T16:28:25Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getDataFolder().exists())) getDataFolder().mkdir();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6615/buggy-version/src.main.java.com.alta189.chavaadmin.ChavaAdmin.java", "BodyUseAPI": [], "Fixed commit": "01e706672a0e3d353c3aafbb5500ea06a906f19f", "Url": "https://api.github.com/repos/ChavaBot/ChavaAdmin", "Date": "2011-11-15T03:31:31Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((status == (BackupRestoreStatus.Status.RESTORE_FAILED)) || (status == (BackupRestoreStatus.Status.RESTORING))) || (status == (BackupRestoreStatus.Status.RESTORE_SUCCESS))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7280/buggy-version/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.BackupOps.java", "BodyUseAPI": [], "Fixed commit": "cf690c6c3a1a535f60a5a8c9cf28904bf8af279d", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-03-16T07:44:41Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((viewer) != null) && (!(viewer.isDisposed()))) viewer.setText(ex.getMessage());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/452/buggy-version/plugin.src.winterwell.markdown.views.MarkdownPreview.java", "BodyUseAPI": ["org.eclipse.swt.browser.Browser.setText(java.lang.String)"], "Fixed commit": "204d2fb14ca808a0b5beb9c568c47064dac35751", "Url": "https://api.github.com/repos/kgilmer/Eclipse-Markdown-Editor-Plugin", "Date": "2012-11-26T17:13:50Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.coursescheduler.Schedule.findClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4230/buggy-version/src.com.android.coursescheduler.Schedule.java", "BodyUseAPI": [], "Fixed commit": "1f0f688bb4d5f749c17a44d469154d116c1c5514", "Url": "https://api.github.com/repos/wazzur/courseScheduler", "Date": "2015-04-21T15:49:46Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((findClass(c.getCoreqs(i))) != null) { if ((!(findClass(c.getCoreqs(i)).isScheduled())) && (!(com.android.coursescheduler.Schedule.contains(semester, c)))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4230/buggy-version/src.com.android.coursescheduler.Schedule.java", "BodyUseAPI": ["com.android.coursescheduler.Schedule.findClass(c.getCoreqs(i))", "com.android.coursescheduler.Schedule.contains(java.lang.Class[],java.lang.Class)", "java.lang.Class.isScheduled()", "java.lang.Class.getCoreqs(int)"], "Fixed commit": "1f0f688bb4d5f749c17a44d469154d116c1c5514", "Url": "https://api.github.com/repos/wazzur/courseScheduler", "Date": "2015-04-21T15:49:46Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((angle) >= 180) && ((angle) < 270)) { while (((thymX) > 0) && ((thymY) > 0)) { (thymX)--; d += m; if (d < (-0.5)) { (thymY)--; d++; } if (!(map.hitByLaserbeam(thymX, thymY))) { break; } } }else { while (((thymX) < ((map.getSizeX()) - 1)) && ((thymY) > 0)) { (thymX)++; d += m; if (d < (-0.5)) { (thymY)--; d++; } if (!(map.hitByLaserbeam(thymX, thymY))) { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1006/buggy-version/src.math.BresenhamAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "f8759acde33ee11f7abe60a710b1438e54b5191a", "Url": "https://api.github.com/repos/loizuf/InfSys2014", "Date": "2014-07-09T09:56:08Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(key.equals(keyString))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8780/buggy-version/interfaces.src.main.java.org.dllearner.confparser3.PostProcessor.java", "BodyUseAPI": [], "Fixed commit": "b1435dbe32bb5f5d418aef5a9ed8a503055a83b9", "Url": "https://api.github.com/repos/SmartDataAnalytics/DL-Learner", "Date": "2015-06-19T09:09:19Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(oldValue.equals(valueObject))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8780/buggy-version/interfaces.src.main.java.org.dllearner.confparser3.PostProcessor.java", "BodyUseAPI": [], "Fixed commit": "b1435dbe32bb5f5d418aef5a9ed8a503055a83b9", "Url": "https://api.github.com/repos/SmartDataAnalytics/DL-Learner", "Date": "2015-06-19T09:09:19Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(value.equals(valueString))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8780/buggy-version/interfaces.src.main.java.org.dllearner.confparser3.PostProcessor.java", "BodyUseAPI": [], "Fixed commit": "b1435dbe32bb5f5d418aef5a9ed8a503055a83b9", "Url": "https://api.github.com/repos/SmartDataAnalytics/DL-Learner", "Date": "2015-06-19T09:09:19Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(others.containsKey(s.substring(((s.indexOf(\"if I say\")) + 10), ((s.indexOf(\"then say\")) - 1))))) { others.put(s.substring(((s.indexOf(\"if I say\")) + 10), ((s.indexOf(\"then say\")) - 1)), s.substring(((s.indexOf(\"then say\")) + 9))); return \"Okay, keywords learned\"; }else return \"Keyword already exists\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4487/buggy-version/src.Magpie.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "a852b654a161873caf78e50bbd8ab61ae26a29eb", "Url": "https://api.github.com/repos/bencarlisle15/GabGuy", "Date": "2017-05-19T13:57:23Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<is.idega.idegaweb.msi.data.Participant>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (participant.isRentsTimeTransmitter()) { timeTransmitterPrice = participant.getRaceEvent().getTimeTransmitterPrice(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8637/buggy-version/src.java.is.idega.idegaweb.msi.service.impl.PaymentsServiceImpl.java", "BodyUseAPI": ["is.idega.idegaweb.msi.data.Participant.getRaceEvent()", "participant.getRaceEvent().getTimeTransmitterPrice()"], "Fixed commit": "51934e3132a6d18bc1450130104fde187abaae9a", "Url": "https://api.github.com/repos/idega/is.idega.idegaweb.msi", "Date": "2017-09-07T13:49:49Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dbo.containsField(fName)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7543/buggy-version/src.de.caluga.morphium.ObjectMapperImpl.java", "BodyUseAPI": [], "Fixed commit": "d02ab9e6c92e5ff3c07291b48a2ba9b3c2b5802f", "Url": "https://api.github.com/repos/jenaiz/morphium", "Date": "2014-05-13T06:36:42Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connectStatus) != (sviolet.turquoise.util.bluetooth.ble.BLECharacteristicConnector.Status.DESTROYED)) { connectStatus = sviolet.turquoise.util.bluetooth.ble.BLECharacteristicConnector.Status.READY; callback.onReady(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4174/buggy-version/turquoise.src.main.java.sviolet.turquoise.util.bluetooth.ble.BLECharacteristicConnector.java", "BodyUseAPI": [], "Fixed commit": "d4d09696b0b151d4ea6abb6de246a58a5cac4d18", "Url": "https://api.github.com/repos/shepherdviolet/turquoise", "Date": "2017-08-18T16:58:16Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6238/buggy-version/algs.src.structures.KdTree.java", "BodyUseAPI": [], "Fixed commit": "362a6a7492ebf6220fcd4a7e3ca52490a0761a87", "Url": "https://api.github.com/repos/nightelf/algs1", "Date": "2014-03-16T15:18:31Z"},
{"Line": "=>891", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(result.getColumnIndex(DiaryContract.DiaryEntry.COLUMN_COMMENT))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (comment != null) { mInitialFieldValues.comment = comment; mCurrentFieldValues.comment = comment; }else { mInitialFieldValues.comment = \"\"; mCurrentFieldValues.comment = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2736/buggy-version/app.src.main.java.com.smithkeegan.mydailyskincare.diaryEntry.DiaryEntryFragmentMain.java", "BodyUseAPI": [], "Fixed commit": "a03437f3e51173c1c6a45178231b3dbf98549de8", "Url": "https://api.github.com/repos/smithks/MyDailySkincare", "Date": "2016-11-15T21:32:13Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chromatogram.getScans().iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (iterator.hasNext()) { currentScan = iterator.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8455/buggy-version/openchrom.plugins.net.openchrom.chromatogram.xxd.process.supplier.alignment.src.net.openchrom.chromatogram.xxd.process.supplier.alignment.core.AlignmentProcessor.java", "BodyUseAPI": ["java.util.Iterator<org.eclipse.chemclipse.model.core.IScan>.next()"], "Fixed commit": "7bcf80eb88890ed6c5f5cc70b254082c3286c54b", "Url": "https://api.github.com/repos/OpenChrom/processalignment", "Date": "2016-08-21T10:17:26Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ctrip.framework.apollo.biz.utils.ConfigChangeContentBuilder.build()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.ctrip.framework.apollo.core.utils.StringUtils.isEmpty(configChangeContent))) { createCommit(appId, clusterName, namespaceName, configChangeContentBuilder.build(), changeSet.getDataChangeLastModifiedBy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1149/buggy-version/apollo-biz.src.main.java.com.ctrip.framework.apollo.biz.service.ItemSetService.java", "BodyUseAPI": [], "Fixed commit": "be0ea520198f3892672daae5253b9c1a2f514f54", "Url": "https://api.github.com/repos/lepdou/apollo", "Date": "2016-06-27T02:32:33Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((experiment) != null) permission = currentUser.getPermissionMask(experiment.getUserPermission());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7311/buggy-version/genophenbrowser-client.src.main.java.com.gmi.nordborglab.browser.client.mvp.diversity.experiment.phenotypes.PhenotypeListPresenter.java", "BodyUseAPI": [], "Fixed commit": "4e35873fdc83df7d4593048654aedf22030555c0", "Url": "https://api.github.com/repos/timeu/GWA-Portal", "Date": "2015-04-13T12:43:57Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (negate) d = d * (-1.0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8525/buggy-version/src.main.java.com.rathravane.till.data.humanReadableHelper.java", "BodyUseAPI": [], "Fixed commit": "bf7fec5d2deb4e9210c3b2f246a08aa8d6ffcd83", "Url": "https://api.github.com/repos/Rathravane/silt", "Date": "2015-08-14T19:14:05Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (len > nbytes) { java.lang.String msg = java.lang.String.format(\"Invalid string legnth[%d] in the line: '%s'\", len, line); throw new java.lang.IllegalStateException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3952/buggy-version/src.main.java.com.guokr.simbase.server.RedisDecoder.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int,java.lang.String)"], "Fixed commit": "936986235877a30d75c1ae8dc9f84333e9056e1b", "Url": "https://api.github.com/repos/guokr/simbase", "Date": "2014-01-14T06:17:23Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y + k) >= (chunk.getSize())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8492/buggy-version/haju3d-server.src.main.java.fi.haju.haju3d.server.world.utils.WorldGenerationUtils.java", "BodyUseAPI": [], "Fixed commit": "470cb9d0197a6be3dc0e52c1cdfff1c19a4bf543", "Url": "https://api.github.com/repos/jvmakine/haju3d", "Date": "2013-11-30T18:31:52Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((playMode) == 1) && (!(playing))) && byUser) { next(); }else if (((playMode) == 0) && (!(playing))) { Global.playList.setCurrent(0); }else { Global.playList.checkCurrentNegative(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4648/buggy-version/pure_mp3.pure_mp3.Player.java", "BodyUseAPI": [], "Fixed commit": "98494112951757f31656f1c1f25d8753029d1f8b", "Url": "https://api.github.com/repos/s4ke/pure_mp3", "Date": "2011-04-10T11:46:25Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((distributorAccount) == null) { setSuccess(false); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3809/buggy-version/app.src.main.java.vg.victoryglobal.victoryglobal.model.DistributorAccountRequest.java", "BodyUseAPI": [], "Fixed commit": "b0e51c88c029ff0bc8b140df77cdb98d83a0421e", "Url": "https://api.github.com/repos/mongramosjr/victoryglobal-android", "Date": "2017-11-25T02:03:43Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (aux != null) { result.addAll(aux); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3900/buggy-version/cleia.abada-jbpm.src.main.java.com.abada.jbpm.integration.console.graph.GraphViewerPluginImpl.java", "BodyUseAPI": ["java.util.List<org.jboss.bpm.console.client.model.ActiveNodeInfo>.addAll(java.util.List<org.jboss.bpm.console.client.model.ActiveNodeInfo>)"], "Fixed commit": "ade22ab5169839a5a45ce7e6697a5012e8f76bb5", "Url": "https://api.github.com/repos/abada-investigacion/cleia", "Date": "2013-09-25T15:14:09Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((children) == null) { return false; }else if (!(children.contains(child))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/646/buggy-version/Hog.src.util.ast.node.Node.java", "BodyUseAPI": [], "Fixed commit": "b1ed4fc8b58472d544aea4f07d2de659daf9e189", "Url": "https://api.github.com/repos/smessing/Hog", "Date": "2012-04-25T23:49:05Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mainActivity.chatDetailFragment) != null) { mainActivity.chatDetailFragment.loadData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4183/buggy-version/app.src.main.java.com.example.lp.binder.fragment.ChatListFragment.java", "BodyUseAPI": ["mainActivity.chatDetailFragment.loadData()"], "Fixed commit": "54b71a197ef53fb11165ba2b11ec3f011db42e7f", "Url": "https://api.github.com/repos/DomTkt/Binder", "Date": "2017-05-11T15:22:50Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mainActivity.chatDetailFragment) != null) { mainActivity.chatDetailFragment.loadData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4183/buggy-version/app.src.main.java.com.example.lp.binder.fragment.ChatListFragment.java", "BodyUseAPI": ["mainActivity.chatDetailFragment.loadData()"], "Fixed commit": "54b71a197ef53fb11165ba2b11ec3f011db42e7f", "Url": "https://api.github.com/repos/DomTkt/Binder", "Date": "2017-05-11T15:22:50Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mainActivity.chatDetailFragment) != null) { mainActivity.chatDetailFragment.loadData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4183/buggy-version/app.src.main.java.com.example.lp.binder.fragment.ChatListFragment.java", "BodyUseAPI": ["mainActivity.chatDetailFragment.loadData()"], "Fixed commit": "54b71a197ef53fb11165ba2b11ec3f011db42e7f", "Url": "https://api.github.com/repos/DomTkt/Binder", "Date": "2017-05-11T15:22:50Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousAssignments) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/834/buggy-version/FinalProject.GiftExchanger.app.src.main.java.com.example.giftexchanger.Exchanger.GiftExchanger.java", "BodyUseAPI": [], "Fixed commit": "6b9079b9f5aa30888ad4edfaacee473ba39c5eb8", "Url": "https://api.github.com/repos/bowles123/CS-3200-Projects", "Date": "2016-12-07T07:04:59Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage()) != null) { return component.getString(e.getMessage(), null, e.getMessage()); }else { return \"General Error: \" + (e.getClass().getSimpleName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/262/buggy-version/web.src.main.java.org.devocative.demeter.web.DemeterExceptionToMessageHandler.java", "BodyUseAPI": ["java.lang.Exception.getClass()", "java.lang.Class<? extends java.lang.Exception>.getSimpleName()", "java.lang.Exception.getMessage()", "java.lang.Exception.getMessage()", "org.apache.wicket.Component.getString(java.lang.String,<nulltype>,java.lang.String)"], "Fixed commit": "b8b61c4e13672319c2383aa3f07c43b8ff6fe4e2", "Url": "https://api.github.com/repos/mbizhani/Demeter", "Date": "2016-06-23T13:18:56Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(columnNames.isEmpty())) { plainSelect.setSelectItems(columnNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3643/buggy-version/obdalib-core.src.main.java.it.unibz.krdb.obda.parser.PreprocessProjection.java", "BodyUseAPI": ["it.unibz.krdb.obda.parser.PlainSelect.setSelectItems(java.util.List<it.unibz.krdb.obda.parser.SelectItem>)"], "Fixed commit": "64bddcee718f2c543d91539525355d3721ca6e94", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2015-05-26T16:44:48Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sub.getDepositId()) != null) depositID = sub.getDepositId();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3619/buggy-version/app.org.tdl.vireo.services.StringVariableReplacement.java", "BodyUseAPI": ["org.tdl.vireo.model.Submission.getDepositId()"], "Fixed commit": "98a3965a554d6c238e048157b787c3c1efc144f8", "Url": "https://api.github.com/repos/TAMULib/Vireo", "Date": "2014-10-27T19:05:42Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.github.onsdigital.zebedee.configuration.Configuration.isInfluxReportingEnabled()) { java.lang.System.out.println(\"creating influxdb instance\"); com.github.onsdigital.zebedee.util.InfluxDB.influxDB = org.influxdb.InfluxDBFactory.connect(com.github.onsdigital.zebedee.configuration.Configuration.getInfluxDBHost(), \"root\", \"root\"); com.github.onsdigital.zebedee.util.InfluxDB.influxDB.createDatabase(com.github.onsdigital.zebedee.util.InfluxDB.pingDBName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3070/buggy-version/zebedee-cms.src.main.java.com.github.onsdigital.zebedee.util.InfluxDB.java", "BodyUseAPI": [], "Fixed commit": "b9f9703712fec435ed40b9e83eaeb50c85bb4a50", "Url": "https://api.github.com/repos/ONSdigital/zebedee", "Date": "2016-04-11T11:23:52Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xebia.hr.service.AttemptService.findByCourseAndEmployee(long,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((attempts != null) && ((attempts.size()) > 0)) { java.util.Collections.sort(attempts); com.xebia.hr.entity.Attempt latestAttempt = attempts.get(((attempts.size()) - 1)); if (AppConstants.PASSED.equals(latestAttempt.getResult())) { return org.springframework.http.ResponseEntity.badRequest().body(\"Employee already cleared the test. Can not take test again.\"); } if ((attempts.size()) >= 3) { return org.springframework.http.ResponseEntity.badRequest().body(\"Number of course attempt limit is exceeded.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3615/buggy-version/src.main.java.com.xebia.hr.controller.CourseController.java", "BodyUseAPI": ["java.util.List<com.xebia.hr.entity.Attempt>.size()", "java.util.List<com.xebia.hr.entity.Attempt>.size()", "java.util.List<com.xebia.hr.entity.Attempt>.get(((attempts.size()) - 1))", "java.util.Collections.sort(java.util.List<com.xebia.hr.entity.Attempt>)"], "Fixed commit": "292ace5979e38faf64202d953151392390b1da27", "Url": "https://api.github.com/repos/RajeshJangra/posh", "Date": "2016-08-01T06:22:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (valueDesc != null) { if ((valueDesc.length()) > (MAX_DESC_LENGTH)) { log.warn(\"Detected oversized value description for tag {} - is being truncated (max size is set at {})\", tag.getId(), cern.c2mon.server.cache.tag.MAX_DESC_LENGTH); abstractTag.setValueDescription(valueDesc.substring(0, cern.c2mon.server.cache.tag.MAX_DESC_LENGTH)); }else { abstractTag.setValueDescription(valueDesc); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8842/buggy-version/c2mon-server.c2mon-server-cache.src.main.java.cern.c2mon.server.cache.tag.AbstractTagObjectFacade.java", "BodyUseAPI": ["cern.c2mon.server.common.tag.AbstractTagCacheObject.setValueDescription(java.lang.String)", "java.lang.String.substring(int,cern.c2mon.server.cache.tag.MAX_DESC_LENGTH)", "java.lang.String.length()", "cern.c2mon.server.common.tag.AbstractTagCacheObject.setValueDescription(java.lang.String)"], "Fixed commit": "8830f52ffb41a8441b9b08ca6af36f264047402e", "Url": "https://api.github.com/repos/c2mon/c2mon", "Date": "2016-11-29T16:27:46Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.resolve(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.nio.file.Files.exists(expandedPath)) { try { alien4cloud.utils.FileUtil.zip(expandedPath, zippedPath); return zippedPath; } catch (java.io.IOException e) { log.error((\"Failed to zip directory \" + expandedPath), e); throw new alien4cloud.component.repository.exception.CSARVersionNotFoundException(((((\"CSAR: \" + name) + \", Version: \") + version) + \" not found in the repository.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4974/buggy-version/alien4cloud-core.src.main.java.alien4cloud.component.repository.CsarFileRepository.java", "BodyUseAPI": ["alien4cloud.utils.FileUtil.zip(java.nio.file.Path,java.nio.file.Path)", "alien4cloud.component.repository.CsarFileRepository.error(java.lang.String,java.io.IOException)"], "Fixed commit": "c656b15ed3cc11afbf24839548a863706995149d", "Url": "https://api.github.com/repos/OresteVisari/alien4cloud", "Date": "2015-11-27T12:56:47Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sa.getAggregationMethod().equals(\"none\")) { newData[k] = peatland.simData.newDung(false, sp); }else { newData[k] = peatland.simData.newDung(false, sp, sa); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4268/buggy-version/simData.java", "BodyUseAPI": ["peatland.simData.newDung(boolean,peatland.simParams,peatland.spatialAggregator)"], "Fixed commit": "5b87dfbf64212badeac8b7f39d53beaee67da7a2", "Url": "https://api.github.com/repos/cfhammill/splachnaceae-peatland-simulation", "Date": "2014-07-24T15:59:34Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((status) == (cz.cvut.felk.ida.executioner.Future.Status.DONE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1980/buggy-version/src.main.java.cz.cvut.felk.ida.executioner.Future.java", "BodyUseAPI": [], "Fixed commit": "d9004681cbc018eec947b750be3bf3d60ed6ef59", "Url": "https://api.github.com/repos/cernoch/executioner", "Date": "2016-05-02T15:12:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.thepinguin.jp.json.ParseJP.parseFromFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (root == null) throw new java.lang.Exception(\"JPacker file not found\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8978/buggy-version/src.main.java.net.thepinguin.jp.cmd.Collect.java", "BodyUseAPI": [], "Fixed commit": "6eb9090af2aeb9a8f3e6cdba74a94d85acc53305", "Url": "https://api.github.com/repos/java-packer/jp", "Date": "2015-03-26T15:10:55Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.mskcc.cbio.oncokb.util.CacheUtils.VUS.containsKey(entrezGeneId)) { return org.mskcc.cbio.oncokb.util.CacheUtils.VUS.get(entrezGeneId); }else { org.mskcc.cbio.oncokb.model.Gene gene = org.mskcc.cbio.oncokb.util.GeneUtils.getGeneByEntrezId(entrezGeneId); if (gene != null) { org.mskcc.cbio.oncokb.util.CacheUtils.synEvidences(); } return org.mskcc.cbio.oncokb.util.CacheUtils.VUS.get(entrezGeneId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1501/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.CacheUtils.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.util.Set<org.mskcc.cbio.oncokb.model.Alteration>>.get(java.lang.Integer)", "org.mskcc.cbio.oncokb.util.GeneUtils.getGeneByEntrezId(java.lang.Integer)", "java.util.Map<java.lang.Integer, java.util.Set<org.mskcc.cbio.oncokb.model.Alteration>>.get(java.lang.Integer)"], "Fixed commit": "2859f39c1ad3d5062d859c1d2a321f1c9835ae07", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-03-13T19:21:04Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.viewers.StructuredSelection.getFirstElement()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (viewerItem != null) { ch.elexis.data.Prescription pr = viewerItem.getPrescription(); if (pr != null) { ch.elexis.core.ui.dialogs.ArticleDefaultSignatureTitleAreaDialog adtad = new ch.elexis.core.ui.dialogs.ArticleDefaultSignatureTitleAreaDialog(ch.elexis.core.ui.UiDesk.getTopShell(), pr); adtad.open(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5217/buggy-version/ch.elexis.core.ui.medication.src.ch.elexis.core.ui.medication.views.MedicationView.java", "BodyUseAPI": ["ch.elexis.core.ui.medication.views.MedicationTableViewerItem.getPrescription()"], "Fixed commit": "943f9ed03b4541998f6cdb56cf1ca98a22f269ad", "Url": "https://api.github.com/repos/rgwch/elexis-3-core", "Date": "2016-02-29T08:59:23Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pl.grudowska.pjwstk.homesecureagent.ConfigurationStateStoreManager.isStored(mContext, \"objects_sensor\")) { selectedSensors = pl.grudowska.pjwstk.homesecureagent.ConfigurationStateStoreManager.loadSensorObjects(mContext); }else { selectedSensors = pl.grudowska.pjwstk.homesecureagent.Sensor.initializeSensorDataCreator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3483/buggy-version/app.src.main.java.pl.grudowska.pjwstk.homesecureagent.JSONParser.java", "BodyUseAPI": ["pl.grudowska.pjwstk.homesecureagent.ConfigurationStateStoreManager.loadSensorObjects(android.content.Context)"], "Fixed commit": "60030bf255225e6ce9d381e753fa4f13fe4c28e6", "Url": "https://api.github.com/repos/ForestNymph/Android_HomeSecureAgent", "Date": "2015-07-26T18:53:11Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (highwayType > currentJunctionType) { junctionType.put(osmNodeId, highwayType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4643/buggy-version/core.src.main.java.com.graphhopper.reader.ImportDataLayer.java", "BodyUseAPI": ["gnu.trove.map.hash.TLongByteHashMap.put(long,byte)"], "Fixed commit": "05c0bd43e850200500509e3aaefcc0bb82befe66", "Url": "https://api.github.com/repos/jansoe/graphhopper", "Date": "2015-04-14T17:04:08Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currentAnimation) != null) && ((this.currentAnimation.getKeyFrame(this.stateTime)) != null)) this.setDrawable(new com.badlogic.gdx.scenes.scene2d.ui.Image(this.currentAnimation.getKeyFrame(this.stateTime)).getDrawable());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4571/buggy-version/Unsealed.src.net.k3rnel.unsealed.battle.enemies.Dummy.java", "BodyUseAPI": ["com.badlogic.gdx.scenes.scene2d.ui.Image.getDrawable()", "net.k3rnel.unsealed.battle.enemies.Dummy.setDrawable(new com.badlogic.gdx.scenes.scene2d.ui.Image(this.currentAnimation.getKeyFrame(this.stateTime)).getDrawable())", "this.currentAnimation.getKeyFrame(this.stateTime)"], "Fixed commit": "66e580679030a9e6e800464e197c0b501893e7f9", "Url": "https://api.github.com/repos/Nushio/Unsealed", "Date": "2012-08-04T19:27:06Z"},
{"Line": "=>1385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (unchangedNodes != null) { java.lang.System.err.println(((unchangedNodes.size()) + \" unchanged node(s)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5272/buggy-version/projects.OG-Engine.src.main.java.com.opengamma.engine.view.worker.SingleThreadViewProcessWorker.java", "BodyUseAPI": ["java.io.PrintStream.println(((unchangedNodes.size()) + \" unchanged node(s)\"))", "java.util.Set<com.opengamma.id.UniqueId>.size()"], "Fixed commit": "e08cc49de3628f2a24e83f31b7c8c800feab12ac", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2013-10-29T16:27:14Z"},
{"Line": "=>1215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.controller.getStaticConf().isBFT()) { bftsmart.tom.util.Logger.println(\"(TOMLayer.finalise) sending WRITE message\"); communication.send(this.controller.getCurrentViewOtherAcceptors(), acceptor.getFactory().createWrite(currentEid, r.getNumber(), r.propValueHash)); }else { bftsmart.tom.util.Logger.println(\"(TOMLayer.finalise) sending ACCEPT message\"); communication.send(this.controller.getCurrentViewOtherAcceptors(), acceptor.getFactory().createAccept(currentEid, r.getNumber(), r.propValueHash)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/9013/buggy-version/src.bftsmart.tom.core.TOMLayer.java", "BodyUseAPI": ["bftsmart.communication.ServerCommunicationSystem.send(this.controller.getCurrentViewOtherAcceptors(),acceptor.getFactory().createWrite(currentEid, r.getNumber(), r.propValueHash))", "bftsmart.communication.ServerCommunicationSystem.send(this.controller.getCurrentViewOtherAcceptors(),acceptor.getFactory().createAccept(currentEid, r.getNumber(), r.propValueHash))", "bftsmart.reconfiguration.ServerViewController.getCurrentViewOtherAcceptors()", "bftsmart.reconfiguration.ServerViewController.getCurrentViewOtherAcceptors()"], "Fixed commit": "537d14199b4965eaabcdc21052db0a2766f3ef21", "Url": "https://api.github.com/repos/bft-smart/library", "Date": "2015-10-16T16:52:20Z"},
{"Line": "=>1202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.controller.getStaticConf().isBFT()) r.setWrite(me, hash); else r.setAccept(me, hash);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/9013/buggy-version/src.bftsmart.tom.core.TOMLayer.java", "BodyUseAPI": [], "Fixed commit": "537d14199b4965eaabcdc21052db0a2766f3ef21", "Url": "https://api.github.com/repos/bft-smart/library", "Date": "2015-10-16T16:52:20Z"},
{"Line": "=>961", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.kotlin.resolve.calls.model.ResolvedCall<?>.getResultingDescriptor()", "org.jetbrains.kotlin.resolve.calls.callUtil.CallUtilKt.getResolvedCall(callInstruction.getElement(),trace.getBindingContext())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((resolvedCall.getCall().getValueArguments().size()) != (functionDescriptor.getValueParameters().size())) && (!(functionDescriptor.getOverriddenDescriptors().isEmpty()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1010/buggy-version/compiler.frontend.src.org.jetbrains.kotlin.cfg.ControlFlowInformationProvider.java", "BodyUseAPI": [], "Fixed commit": "a4ad995f31f9e6a9bdda19c1e87443ee8a51cbb4", "Url": "https://api.github.com/repos/06needhamt/kotlin", "Date": "2016-05-16T15:51:16Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fieldDesc.byteLength) < 0) || ((fieldDesc.byteLength) > (aggregatedField.byteLength))) fieldDesc.byteLength = aggregatedField.byteLength;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1144/buggy-version/libraries.BridJ.src.main.java.org.bridj.StructUtils.java", "BodyUseAPI": [], "Fixed commit": "2f64f94a712587096f8b05ac1ca4b45e80abccb2", "Url": "https://api.github.com/repos/ochafik/nativelibs4java", "Date": "2013-09-22T22:24:43Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bahmni.module.pacsintegration.services.OpenMRSService.getEncounter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (encounter.hasOrders()) { pacsIntegrationService.processEncounter(encounter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2201/buggy-version/pacs-integration-webapp.src.main.java.org.bahmni.module.pacsintegration.atomfeed.worker.EncounterFeedWorker.java", "BodyUseAPI": ["org.bahmni.module.pacsintegration.services.PacsIntegrationService.processEncounter(org.bahmni.module.pacsintegration.atomfeed.contract.encounter.OpenMRSEncounter)"], "Fixed commit": "936ee9c59e4e34cccff26e561e9093340f864d37", "Url": "https://api.github.com/repos/Bahmni/pacs-integration", "Date": "2016-08-04T05:56:56Z"},
{"Line": "=>944", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gl.isGLES2()) { switch (shaderType) { case javax.media.opengl.GL2ES2.GL_VERTEX_SHADER : defaultPrecision = com.jogamp.opengl.util.glsl.ShaderCode.es2_default_precision_vp; break; case javax.media.opengl.GL2ES2.GL_FRAGMENT_SHADER : defaultPrecision = com.jogamp.opengl.util.glsl.ShaderCode.es2_default_precision_fp; break; default : defaultPrecision = null; break; } }else if (com.jogamp.opengl.util.glsl.ShaderCode.requiresGL3DefaultPrecision(gl)) { switch (shaderType) { case javax.media.opengl.GL2ES2.GL_VERTEX_SHADER : case javax.media.opengl.GL3.GL_GEOMETRY_SHADER : defaultPrecision = com.jogamp.opengl.util.glsl.ShaderCode.gl3_default_precision_vp_gp; break; case javax.media.opengl.GL2ES2.GL_FRAGMENT_SHADER : defaultPrecision = com.jogamp.opengl.util.glsl.ShaderCode.gl3_default_precision_fp; break; default : defaultPrecision = null; break; } }else { defaultPrecision = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8808/buggy-version/src.jogl.classes.com.jogamp.opengl.util.glsl.ShaderCode.java", "BodyUseAPI": ["com.jogamp.opengl.util.glsl.ShaderCode.requiresGL3DefaultPrecision(javax.media.opengl.GL2ES2)"], "Fixed commit": "ff4e2b1996d2cfab1eb154020106004fb71471fd", "Url": "https://api.github.com/repos/JogAmp/jogl", "Date": "2014-04-09T06:38:09Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.molgenis.search.Hit.getColumnValueMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((columnValueMap.containsKey(key)) && (!(org.apache.commons.lang3.StringUtils.isEmpty(columnValueMap.get(key).toString())))) { for (java.lang.Object databaseId : ((java.util.List<?>) (columnValueMap.get(key)))) { java.math.BigDecimal ngramScore = new java.math.BigDecimal(org.molgenis.omx.biobankconnect.utils.NGramMatchingModel.stringMatching(entity.getString(attributeName), databaseId.toString())); if ((maxNgramScore.doubleValue()) < (ngramScore.doubleValue())) { maxNgramScore = ngramScore; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6791/buggy-version/molgenis-omx-biobankconnect.src.main.java.org.molgenis.omx.biobankconnect.ontologyservice.OntologyService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "91dfe1a4b4bac45b4e33b14b1bdd234939d854df", "Url": "https://api.github.com/repos/ChaoPang/molgenis", "Date": "2014-09-19T13:13:14Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (card.isTwoFacedCard()) { return ((((\"https://img.scryfall.com/cards/large/en/\" + (formatSetName(card.getSet()))) + \"/\") + (card.getCollectorId())) + (card.isSecondSide() ? \"b\" : \"a\")) + \".jpg\"; }else { return (((\"https://api.scryfall.com/cards/\" + (formatSetName(card.getSet()))) + \"/\") + (card.getCollectorId())) + \"?format=image\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3375/buggy-version/Mage.Client.src.main.java.org.mage.plugins.card.dl.sources.ScryfallImageSource.java", "BodyUseAPI": ["org.mage.plugins.card.images.CardDownloadData.getSet()", "org.mage.plugins.card.images.CardDownloadData.getCollectorId()", "org.mage.plugins.card.images.CardDownloadData.getCollectorId()", "org.mage.plugins.card.images.CardDownloadData.isSecondSide()", "org.mage.plugins.card.dl.sources.ScryfallImageSource.formatSetName(card.getSet())", "org.mage.plugins.card.images.CardDownloadData.getSet()", "org.mage.plugins.card.dl.sources.ScryfallImageSource.formatSetName(card.getSet())"], "Fixed commit": "badaed63cb2846a9dec7cbdfba041f961288c34d", "Url": "https://api.github.com/repos/Zzooouhh/mage", "Date": "2017-11-11T22:06:24Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getProfileImage()) != null) { requestCreator = com.squareup.picasso.Picasso.with(this).load(user.getProfileImage().getUrl()); }else { requestCreator = com.squareup.picasso.Picasso.with(this).load(R.mipmap.ic_profile_image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2690/buggy-version/app.src.main.java.com.walmartlabs.classwork.rideone.activities.RideDetailActivity.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(this).load(user.getProfileImage().getUrl())", "user.getProfileImage().getUrl()", "com.walmartlabs.classwork.rideone.models.User.getProfileImage()"], "Fixed commit": "225c02f61b97d1ef3c93dd38e2388f74c33b24dc", "Url": "https://api.github.com/repos/arvindh5686/rideone", "Date": "2015-12-03T00:24:15Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bu.getId().compareTo(idFeld.getText())) != 0) { if (((tempStartLDT.compareTo(bu.getEnde())) <= 0) && ((tempEndLDT.compareTo(bu.getBeginn())) >= 0)) { errorMessage += (((\"Das ausgew\ufffdhlte Fahrzeug ist bereits von \" + (bu.getBeginn().format(formatter))) + \" bis \") + (bu.getEnde().format(formatter))) + \" verbucht!\\n\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/200/buggy-version/src.view.BuchungDialogController.java", "BodyUseAPI": ["model.Buchung.getBeginn()", "model.Buchung.getEnde()", "model.Buchung.getBeginn()", "model.Buchung.getEnde()", "bu.getBeginn().format(java.time.format.DateTimeFormatter)", "bu.getEnde().format(java.time.format.DateTimeFormatter)", "java.time.LocalDateTime.compareTo(bu.getEnde())", "java.time.LocalDateTime.compareTo(bu.getBeginn())"], "Fixed commit": "79ce0c40c0b7dbcf2e14769f39ad84593e0776fa", "Url": "https://api.github.com/repos/Donaconda/pt-fuhrpark", "Date": "2017-04-10T13:09:38Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.microg.networklocation.backends.apple.LocationRetriever.retrieveLocations(java.util.Collection<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((response == null) || ((response.wifis) == null)) || (response.wifis.isEmpty())) { android.util.Log.d(org.microg.networklocation.backends.apple.AppleWifiLocationSource.TAG, \"Got nothing usable from Apple's servers!\"); return locationSpecs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3045/buggy-version/NetworkLocation.src.org.microg.networklocation.backends.apple.AppleWifiLocationSource.java", "BodyUseAPI": [], "Fixed commit": "7152774b2879a726316ba123b3e265cfe756e7e0", "Url": "https://api.github.com/repos/microg/NetworkLocation", "Date": "2013-12-02T01:59:46Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cellStack.isEmpty()) && (wifiStack.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3045/buggy-version/NetworkLocation.src.org.microg.networklocation.data.LocationRetriever.java", "BodyUseAPI": [], "Fixed commit": "7152774b2879a726316ba123b3e265cfe756e7e0", "Url": "https://api.github.com/repos/microg/NetworkLocation", "Date": "2013-12-02T01:59:46Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild<?, ?>.getAction(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (parameters != null) { for (hudson.model.ParameterValue val : parameters.getParameters()) { if (val instanceof hudson.plugins.jira.listissuesparameter.JiraIssueParameterValue) { ids.add(((hudson.plugins.jira.listissuesparameter.JiraIssueParameterValue) (val)).getIssue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6792/buggy-version/src.main.java.hudson.plugins.jira.Updater.java", "BodyUseAPI": ["hudson.model.ParametersAction.getParameters()"], "Fixed commit": "3e96e83a377c59f0f7d16e1fcb1e582ec628660c", "Url": "https://api.github.com/repos/jhansche/jira-plugin", "Date": "2012-01-05T17:55:20Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != jsonArticles) { for (int i = 0; i < (jsonArticles.length()); i++) { board.articles.add(com.dss886.nForumSDK.model.Article.parse(jsonArticles.optJSONObject(i))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4446/buggy-version/src.com.dss886.nForumSDK.model.Board.java", "BodyUseAPI": ["java.util.List<com.dss886.nForumSDK.model.Article>.add(com.dss886.nForumSDK.model.Article.parse(jsonArticles.optJSONObject(i)))", "org.json.JSONArray.optJSONObject(int)", "com.dss886.nForumSDK.model.Article.parse(jsonArticles.optJSONObject(i))", "org.json.JSONArray.length()"], "Fixed commit": "c3e89dbaa0813c545bdcbf9b6d44736ecef7219e", "Url": "https://api.github.com/repos/dss886/nForumSDK", "Date": "2014-09-15T11:56:18Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != jsonSections) { for (int i = 0; i < (jsonSections.length()); i++) { section.sections.add(com.dss886.nForumSDK.model.Section.parse(jsonSections.optJSONObject(i))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4446/buggy-version/src.com.dss886.nForumSDK.model.Section.java", "BodyUseAPI": ["com.dss886.nForumSDK.model.Section.parse(jsonSections.optJSONObject(i))", "org.json.JSONArray.length()", "org.json.JSONArray.optJSONObject(int)", "java.util.ArrayList<com.dss886.nForumSDK.model.Section>.add(com.dss886.nForumSDK.model.Section)"], "Fixed commit": "c3e89dbaa0813c545bdcbf9b6d44736ecef7219e", "Url": "https://api.github.com/repos/dss886/nForumSDK", "Date": "2014-09-15T11:56:18Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != jsonSubSections) { section.sub_section = new java.lang.String[jsonSubSections.length()]; for (int i = 0; i < (jsonSubSections.length()); i++) { section.sub_section[i] = jsonSubSections.optString(i); } }else { section.sub_section = new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4446/buggy-version/src.com.dss886.nForumSDK.model.Section.java", "BodyUseAPI": ["org.json.JSONArray.length()", "org.json.JSONArray.optString(int)", "org.json.JSONArray.length()"], "Fixed commit": "c3e89dbaa0813c545bdcbf9b6d44736ecef7219e", "Url": "https://api.github.com/repos/dss886/nForumSDK", "Date": "2014-09-15T11:56:18Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != jsonBoards) { for (int i = 0; i < (jsonBoards.length()); i++) { section.boards.add(com.dss886.nForumSDK.model.Board.parse(jsonBoards.optJSONObject(i))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4446/buggy-version/src.com.dss886.nForumSDK.model.Section.java", "BodyUseAPI": ["org.json.JSONArray.length()", "java.util.ArrayList<com.dss886.nForumSDK.model.Board>.add(com.dss886.nForumSDK.model.Board.parse(jsonBoards.optJSONObject(i)))", "com.dss886.nForumSDK.model.Board.parse(jsonBoards.optJSONObject(i))", "org.json.JSONArray.optJSONObject(int)"], "Fixed commit": "c3e89dbaa0813c545bdcbf9b6d44736ecef7219e", "Url": "https://api.github.com/repos/dss886/nForumSDK", "Date": "2014-09-15T11:56:18Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stage) >= 90) { this.isActive = false; for (com.turkey.ld32.entity.Entity entity : super.holder.getRoom().getEntites()) { float xDist = (entity.getX()) - (super.holder.getX()); float xDist2 = ((entity.getX()) + (entity.getWidth())) - (super.holder.getX()); if ((java.lang.Math.abs(xDist)) > (java.lang.Math.abs(xDist2))) xDist = xDist2; float yDist = (entity.getY()) - (super.holder.getY()); float yDist2 = ((entity.getY()) - (entity.getHeight())) - (super.holder.getY()); if ((java.lang.Math.abs(yDist)) > (java.lang.Math.abs(yDist2))) yDist = yDist2; double angle2 = java.lang.Math.toDegrees(java.lang.Math.atan2(yDist, xDist)); double dist = java.lang.Math.sqrt(((java.lang.Math.pow(yDist, 2)) + (java.lang.Math.pow(xDist, 2)))); if (((java.lang.Math.abs((angle2 - (this.angle)))) < 25) && (dist < 65)) { entity.damage(this.damage); break; } } stage = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6959/buggy-version/core.src.com.turkey.ld32.weapon.WeaponBodypart.java", "BodyUseAPI": [], "Fixed commit": "8945bc7e7dceec962bb83dbacc445f490cf97d88", "Url": "https://api.github.com/repos/Turkey2349/LudumDare32", "Date": "2015-09-11T13:09:18Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.stratelia.silverpeas.silvertrace.SilverTraceLayout.LAYOUT_SPY.getPattern().equals(pattern)) { return com.stratelia.silverpeas.silvertrace.SilverTraceLayout.LAYOUT_SPY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6052/buggy-version/lib-core.src.main.java.com.stratelia.silverpeas.silvertrace.SilverTraceLayout.java", "BodyUseAPI": [], "Fixed commit": "266bcef0a6c26131bd0c83711352597ed79fd75f", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2011-08-16T16:06:58Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(diseaseMain.exists())) { mc.Mitchellbrine.diseaseCraft.DiseaseCraft.shouldUpdate = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5207/buggy-version/src.main.java.mc.Mitchellbrine.diseaseCraft.coremod.DCDummyMod.java", "BodyUseAPI": [], "Fixed commit": "949df5ff5a47f81b682a476facc6070ca240a2d9", "Url": "https://api.github.com/repos/Mitchellbrine/DiseaseCraft-2.0", "Date": "2015-04-01T02:37:44Z"},
{"Line": "=>1320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["orgomg.cwm.objectmodel.core.ModelElement.eResource()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (modEResource != null) { java.util.Iterator<org.eclipse.emf.ecore.EObject> iterator = modEResource.getContents().iterator(); while (iterator.hasNext()) { org.eclipse.emf.ecore.EObject eObject = iterator.next(); if ((eObject instanceof orgomg.cwm.objectmodel.core.Dependency) && (!(supplierDependencys.contains(eObject)))) { iterator.remove(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7241/buggy-version/main.plugins.org.talend.dataprofiler.core.src.org.talend.dataprofiler.core.ui.imex.model.FileSystemImportWriter.java", "BodyUseAPI": ["modEResource.getContents().iterator()", "org.eclipse.emf.ecore.resource.Resource.getContents()"], "Fixed commit": "0bb40a5b0b3aa6c4d527c8d790e769597d9d381d", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2017-09-21T10:10:55Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.children()) != null) result.addAll(node.children());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8013/buggy-version/src.internal.tree.WorldTree.java", "BodyUseAPI": ["internal.tree.IWorldTree.children()", "java.util.List<internal.tree.IWorldTree>.addAll(node.children())"], "Fixed commit": "9f17ee99ca1fdea9cf0a517ac06d45bc1822208a", "Url": "https://api.github.com/repos/okennedy/worldtree", "Date": "2013-09-03T11:20:24Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.grid.isActive(i)) { gaussViolation[i] = gridCopy.getGaussConstraint(i); }else { gaussViolation[i] = factory.algebraZero(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4916/buggy-version/pixi.src.main.java.org.openpixi.pixi.physics.fields.NewLCPoissonSolver.java", "BodyUseAPI": ["org.openpixi.pixi.physics.grid.Grid.getGaussConstraint(int)"], "Fixed commit": "a44b2b72f3b8cdbafd8ced51a2c48859a2b3e62e", "Url": "https://api.github.com/repos/aipp/openpixi", "Date": "2015-11-16T10:45:15Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x <= lambda) { invLaplace = 1.0 / psqr; }else { invLaplace = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4916/buggy-version/pixi.src.main.java.org.openpixi.pixi.physics.fields.NewLCPoissonSolver.java", "BodyUseAPI": [], "Fixed commit": "a44b2b72f3b8cdbafd8ced51a2c48859a2b3e62e", "Url": "https://api.github.com/repos/aipp/openpixi", "Date": "2015-11-16T10:45:15Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((owner.getId()) == null) { this.em.persist(owner); }else { this.em.merge(owner); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2909/buggy-version/src.main.java.org.springframework.samples.petclinic.repository.jpa.JpaOwnerRepositoryImpl.java", "BodyUseAPI": ["javax.persistence.EntityManager.merge(org.springframework.samples.petclinic.model.Owner)", "javax.persistence.EntityManager.persist(org.springframework.samples.petclinic.model.Owner)"], "Fixed commit": "5bf31dbe5a8858430b3b0a3ef9c640e236950c49", "Url": "https://api.github.com/repos/SpringSource/spring-petclinic", "Date": "2013-05-08T17:09:21Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pet.getId()) == null) { this.em.persist(pet); }else { this.em.merge(pet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2909/buggy-version/src.main.java.org.springframework.samples.petclinic.repository.jpa.JpaPetRepositoryImpl.java", "BodyUseAPI": ["javax.persistence.EntityManager.merge(org.springframework.samples.petclinic.model.Pet)", "javax.persistence.EntityManager.persist(org.springframework.samples.petclinic.model.Pet)"], "Fixed commit": "5bf31dbe5a8858430b3b0a3ef9c640e236950c49", "Url": "https://api.github.com/repos/SpringSource/spring-petclinic", "Date": "2013-05-08T17:09:21Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((visit.getId()) == null) { this.em.persist(visit); }else { this.em.merge(visit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2909/buggy-version/src.main.java.org.springframework.samples.petclinic.repository.jpa.JpaVisitRepositoryImpl.java", "BodyUseAPI": ["javax.persistence.EntityManager.persist(org.springframework.samples.petclinic.model.Visit)", "javax.persistence.EntityManager.merge(org.springframework.samples.petclinic.model.Visit)"], "Fixed commit": "5bf31dbe5a8858430b3b0a3ef9c640e236950c49", "Url": "https://api.github.com/repos/SpringSource/spring-petclinic", "Date": "2013-05-08T17:09:21Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SV.instance.snitchList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((n.getRawCullTime()) != null) n.setRawCullTime(com.github.scuwr.snitchvisualizer.classobjects.Snitch.changeToDate(672.0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5384/buggy-version/src.main.java.com.github.scuwr.snitchvisualizer.handlers.SVPlayerHandler.java", "BodyUseAPI": ["com.github.scuwr.snitchvisualizer.classobjects.Snitch.setRawCullTime(com.github.scuwr.snitchvisualizer.classobjects.Snitch.changeToDate(672.0))"], "Fixed commit": "cbd38e82bfaba7ce63d6e0df6edd188bc7ea7bdf", "Url": "https://api.github.com/repos/MrLittleKitty/Snitch-Visualizer", "Date": "2016-03-06T22:43:09Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sentence.length()) > 1) { org.bukkit.Bukkit.dispatchCommand(org.bukkit.Bukkit.getConsoleSender(), sentence); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8186/buggy-version/src.me.kolya5544.ecp.ecp.java", "BodyUseAPI": ["org.bukkit.Bukkit.dispatchCommand(org.bukkit.Bukkit.getConsoleSender(),java.lang.String)"], "Fixed commit": "b9d58076016a870991854303dc31634865d92355", "Url": "https://api.github.com/repos/kolya5544/EConPlugin", "Date": "2017-05-30T16:28:15Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCount) { select.columns(\"COUNT(DISTINCT id)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3381/buggy-version/jscraper.scraper.src.main.java.com.ubikz.scraper.core.app.dal.AbstractDal.java", "BodyUseAPI": [], "Fixed commit": "0ea88c5b23bd2d8d121d4f2fbe9589d770ed4b60", "Url": "https://api.github.com/repos/UbikZ/jscraper", "Date": "2017-06-26T11:40:55Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.mainInputNodes.contains(inputInstance))) instanceMap.put(inputInstance, rdfbones.lib.JSON.string(obj, inputInstance));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1263/buggy-version/src.rdfbones.rdfdataset.Graph.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,rdfbones.lib.JSON.string(obj, inputInstance))", "rdfbones.lib.JSON.string(org.json.JSONObject,java.lang.String)"], "Fixed commit": "4719963ee456afb790391f87978b41ec5d9f4214", "Url": "https://api.github.com/repos/RDFBones/RDFBones", "Date": "2016-12-05T11:37:13Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (user == null) { org.apache.commons.io.FileUtils.copyURLToFile(new java.net.URL(getDownloadURL()), output); }else { org.jsoup.Connection.Response resultImageResponse = org.jsoup.Jsoup.connect(getDownloadURL()).cookies((user != null ? ((be.maximvdw.spigotsite.user.SpigotUser) (user)).getCookies() : new java.util.HashMap<java.lang.String, java.lang.String>())).ignoreContentType(true).userAgent(\"Mozilla\").execute(); java.io.FileOutputStream out = new java.io.FileOutputStream(output); out.write(resultImageResponse.bodyAsBytes()); out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/998/buggy-version/src.main.java.be.maximvdw.spigotsite.resource.SpigotResource.java", "BodyUseAPI": ["org.jsoup.Jsoup.connect(getDownloadURL()).cookies((user != null ? ((be.maximvdw.spigotsite.user.SpigotUser) (user)).getCookies() : new java.util.HashMap<java.lang.String, java.lang.String>())).ignoreContentType(true).userAgent(\"Mozilla\").execute()", "org.jsoup.Jsoup.connect(getDownloadURL()).cookies((user != null ? ((be.maximvdw.spigotsite.user.SpigotUser) (user)).getCookies() : new java.util.HashMap<java.lang.String, java.lang.String>()))", "org.jsoup.Jsoup.connect(getDownloadURL()).cookies((user != null ? ((be.maximvdw.spigotsite.user.SpigotUser) (user)).getCookies() : new java.util.HashMap<java.lang.String, java.lang.String>())).ignoreContentType(boolean)", "org.jsoup.Jsoup.connect(getDownloadURL()).cookies((user != null ? ((be.maximvdw.spigotsite.user.SpigotUser) (user)).getCookies() : new java.util.HashMap<java.lang.String, java.lang.String>())).ignoreContentType(true).userAgent(java.lang.String)"], "Fixed commit": "248e9d281d588f273b3ecbac68b2eed855e76421", "Url": "https://api.github.com/repos/Maximvdw/SpigotSite", "Date": "2015-06-07T01:08:50Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((users) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/560/buggy-version/src.japura.Tribes.Tribe.java", "BodyUseAPI": [], "Fixed commit": "3ed6f0c4270c7d43cad03faa9a67afa4e25b8e28", "Url": "https://api.github.com/repos/monofuel/MonoMods", "Date": "2015-01-20T02:01:22Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lineReadListener) != null) { lineReadListener.lineRead(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2076/buggy-version/src.main.java.org.keedio.flume.source.watchdir.listener.simpletxtsource.FileEventHelper.java", "BodyUseAPI": [], "Fixed commit": "59abe494b654b9a9a238b9a0439f2e075f574972", "Url": "https://api.github.com/repos/keedio/taildir-v2", "Date": "2016-08-11T06:41:47Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((adMobAdView.getParent()) == null) bannerAdView.addView(adMobAdView, params);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7162/buggy-version/src.com.ads.AdFragmentActivity.java", "BodyUseAPI": ["android.widget.RelativeLayout.addView(com.google.android.gms.ads.AdView,RelativeLayout.LayoutParams)"], "Fixed commit": "513d90361ed8f0efbcc07250f97924464dd1b53c", "Url": "https://api.github.com/repos/StevenKo/novel_reader", "Date": "2014-06-25T05:37:39Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((adMobAdView.getParent()) == null) adBannerLayout.addView(adMobAdView, params);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7162/buggy-version/src.com.ads.AdFragmentListActivity.java", "BodyUseAPI": ["android.widget.RelativeLayout.addView(com.google.android.gms.ads.AdView,RelativeLayout.LayoutParams)"], "Fixed commit": "513d90361ed8f0efbcc07250f97924464dd1b53c", "Url": "https://api.github.com/repos/StevenKo/novel_reader", "Date": "2014-06-25T05:37:39Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.jsp.HttpSession.getAttribute(java.lang.String)", "org.apache.jsp.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((strUserID != null) && (Type != null)) { response.sendRedirect(\"/BMPDev/index.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/9009/buggy-version/BMPDev.build.generated.src.org.apache.jsp.login_jsp.java", "BodyUseAPI": [], "Fixed commit": "b97a876861ab9772975a33f8866a0430f0c58594", "Url": "https://api.github.com/repos/Max2535/cos4101", "Date": "2017-08-14T03:37:26Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rec.getString(\"Type\").equals(\"admin\")) { response.sendRedirect(\"/BMPDev/admin/index.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/9009/buggy-version/BMPDev.build.generated.src.org.apache.jsp.login_jsp.java", "BodyUseAPI": [], "Fixed commit": "b97a876861ab9772975a33f8866a0430f0c58594", "Url": "https://api.github.com/repos/Max2535/cos4101", "Date": "2017-08-14T03:37:26Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getResponse()) != null) { org.eurekastreams.server.domain.EntityType actorType = event.getResponse().getDestinationStream().getEntityType(); java.lang.String actorName = event.getResponse().getDestinationStream().getUniqueId(); if (actorType.equals(EntityType.GROUP)) { org.eurekastreams.web.client.model.GroupModel.getInstance().fetch(actorName, false); }else if (actorType.equals(EntityType.PERSON)) { org.eurekastreams.web.client.model.PersonalInformationModel.getInstance().fetch(actorName, false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5681/buggy-version/web.src.main.java.org.eurekastreams.web.client.ui.pages.activity.ActivityContent.java", "BodyUseAPI": ["org.eurekastreams.web.client.events.data.GotActivityResponseEvent.getResponse()", "event.getResponse().getDestinationStream().getUniqueId()", "event.getResponse().getDestinationStream()", "event.getResponse().getDestinationStream().getEntityType()", "org.eurekastreams.web.client.events.data.GotActivityResponseEvent.getResponse()", "event.getResponse().getDestinationStream()"], "Fixed commit": "aa5dabb0be89faf421e55fca747c7477a3525a56", "Url": "https://api.github.com/repos/lmco/eurekastreams", "Date": "2011-08-02T19:33:46Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedServicio) != null) { servicioService.deleteServicioTipoDia(selectedServicio); addMessage(FacesMessage.SEVERITY_INFO, \"Servicio Eliminado\", \"\"); serviciosRecords = servicioService.getServiciosByTipoDia(tipoDia); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/150/buggy-version/src.main.java.com.tmModulos.vista.ServiciosTipoDiaParametrizacion.java", "BodyUseAPI": [], "Fixed commit": "7df433f1d558f1f78371f7b41e6d86b812365248", "Url": "https://api.github.com/repos/angynk/tmProject", "Date": "2017-03-31T00:17:56Z"},
{"Line": "=>1263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contextArrayIndex) <= 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2050/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "b70c9bff36ec3837302214556d57fb5008610a95", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-02-21T03:20:52Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((queue.isEmpty()) && (getAllEnd(consumers))) { hackerwin7.beijing.java.kafka.consumer.verify.consume.TypeConsume.logger.info(\"reached end offset, exit the consume queue process ...... \"); running = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1131/buggy-version/src.main.java.hackerwin7.beijing.java.kafka.consumer.verify.consume.TypeConsume.java", "BodyUseAPI": [], "Fixed commit": "a0bb80a924969e72a5b39a2a32b7a125c1f8c056", "Url": "https://api.github.com/repos/hackerwin7/kafka-consumer-verify", "Date": "2015-10-13T06:54:17Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((distribution) == null) { return EnumBudgetDistribution.UNDEFINED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3122/buggy-version/src.main.java.eu.daiad.web.model.query.savings.BudgetParameters.java", "BodyUseAPI": [], "Fixed commit": "9b8a4ab9b7358b566b5c0f462bf5c37b1350e65c", "Url": "https://api.github.com/repos/smanousopoulos/daiad-web", "Date": "2017-05-08T13:56:49Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((cursor != null) && (cursor.moveToLast())) { double amount = cursor.getDouble(1); double balance = cursor.getDouble(2); budget.setBudget(amount); budget.setBalance(balance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/616/buggy-version/app.src.main.java.com.papramaki.papramaki.database.DatabaseHelper.java", "BodyUseAPI": ["android.database.Cursor.getDouble(int)", "android.database.Cursor.getDouble(int)"], "Fixed commit": "3d96560e2baaf7a3d1228a26a064e8f3becae5b7", "Url": "https://api.github.com/repos/MarcioPorto/papramaki", "Date": "2016-04-20T02:43:03Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node instanceof org.raml.yagi.framework.nodes.IntegerNode) { value = new java.math.BigDecimal(((org.raml.yagi.framework.nodes.IntegerNode) (node)).getValue()); }else if (node instanceof org.raml.yagi.framework.nodes.FloatingNode) { value = ((org.raml.yagi.framework.nodes.FloatingNode) (node)).getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8715/buggy-version/yagi.src.main.java.org.raml.yagi.framework.grammar.rule.DivisorValueRule.java", "BodyUseAPI": [], "Fixed commit": "9a4df752d6e721d7533af6afb9491a3378ffab16", "Url": "https://api.github.com/repos/raml-org/raml-java-parser", "Date": "2017-10-02T16:40:33Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<aima.core.search.csp.TreeCSPSolver.Node>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((currentNode.parent) != null) { makeArcConsistent(currentNode, currentNode.parent, csp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7143/buggy-version/aima-core.src.main.java.aima.core.search.csp.TreeCSPSolver.java", "BodyUseAPI": ["aima.core.search.csp.TreeCSPSolver.makeArcConsistent(aima.core.search.csp.TreeCSPSolver.Node,aima.core.search.csp.TreeCSPSolver.Node,aima.core.search.csp.CSP)"], "Fixed commit": "f39cc4155a732f2bbff418051e57437e4660edcd", "Url": "https://api.github.com/repos/grube300/aima-java", "Date": "2016-06-08T07:34:04Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size > 1600) size = 1600;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5597/buggy-version/src.net.nemur.phosom.model.gametypes.AutoChallengeGameServiceEndpoint.java", "BodyUseAPI": [], "Fixed commit": "b0757d681938c3fd2f313a551dcf8c5db4000e3f", "Url": "https://api.github.com/repos/bthj/Phosom-server", "Date": "2013-11-10T13:30:11Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size > 1600) size = 1600;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5597/buggy-version/src.net.nemur.phosom.model.GameServiceEndpoint.java", "BodyUseAPI": [], "Fixed commit": "b0757d681938c3fd2f313a551dcf8c5db4000e3f", "Url": "https://api.github.com/repos/bthj/Phosom-server", "Date": "2013-11-10T13:30:11Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentPropertyIndex == 1) { query.append(\" false\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1477/buggy-version/SRTool.srtool.tool.src.srt.tool.SMTLIBQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "7d859e3491bb77185eef986e4d2fa259f03cb489", "Url": "https://api.github.com/repos/marcelNgan/SRTool", "Date": "2014-11-29T15:55:57Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gui.SearchViewController.getTaskResults(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (taskResults.get(i).equals(gui.SearchViewController.MESSAGE_EMPTY)) { numOfEmptyMessages++; if (numOfEmptyMessages == 2) { javafx.scene.layout.VBox.setMargin(tempBox, new javafx.geometry.Insets(0, 0, InterfaceController.MARGIN_TEXT_ELEMENT_SEPARATOR, 0)); gui.SearchViewController.searchTaskContentBox.getChildren().add(tempBox); } }else { javafx.scene.layout.VBox.setMargin(tempBox, new javafx.geometry.Insets(0, 0, InterfaceController.MARGIN_TEXT_ELEMENT_SEPARATOR, 0)); gui.SearchViewController.searchTaskContentBox.getChildren().add(tempBox); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4223/buggy-version/src.gui.SearchViewController.java", "BodyUseAPI": [], "Fixed commit": "bc78f261fd5660bfb555e03036236901a59acf1f", "Url": "https://api.github.com/repos/cs2103aug2015-w15-2j/WhatToDo", "Date": "2015-10-29T15:59:08Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(parent.exists())) { if (!(parent.mkdirs())) throw new java.lang.RuntimeException((\"Error creating directory: \" + parent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/765/buggy-version/src.main.java.org.neo4j.starter.ManageNeo4j.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "36d91352e152a0298b2e1c40d54182edd20e4ba7", "Url": "https://api.github.com/repos/jexp/neo4j-starter", "Date": "2015-12-09T13:10:48Z"},
{"Line": "=>2781", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((generate && ((holder.data) != null)) && ((holder.data) instanceof bento.runtime.BentoObjectWrapper)) { bento.runtime.BentoObjectWrapper obj = ((bento.runtime.BentoObjectWrapper) (holder.data)); if (numNameParts == 1) { return obj.getChildData(childName); }else { bento.runtime.Definition objDef = obj.getDefinition(); bento.runtime.Context resolutionContext = obj.getResolutionContext(); return resolutionContext.getDescendant(objDef, childArgs, name, generate, obj); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5821/buggy-version/src.bento.runtime.Context.java", "BodyUseAPI": ["bento.runtime.Context.getDescendant(bento.runtime.Definition,bento.runtime.ArgumentList,bento.runtime.NameNode,boolean,bento.runtime.BentoObjectWrapper)"], "Fixed commit": "26128153515ff7a76b83d2c5fd377e9d3275dc05", "Url": "https://api.github.com/repos/bentodev/bentolang", "Date": "2016-02-18T03:50:33Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ti.getTypeName()) != null) { if ((!(ti.getTypeName().equals(\"javax.xml.ws.Holder\"))) && (!(inTypeNameToQName.get(ti.getTypeName()).equals(ti.getElName())))) { org.apache.camel.dataformat.soap.name.ServiceInterfaceStrategy.LOG.warn(((\"Ambiguous QName mapping. The type [ \" + (ti.getTypeName())) + \" ] is already mapped to a QName in this context.\")); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2765/buggy-version/components.camel-soap.src.main.java.org.apache.camel.dataformat.soap.name.ServiceInterfaceStrategy.java", "BodyUseAPI": ["org.apache.camel.dataformat.soap.name.TypeInfo.getTypeName()", "org.apache.camel.dataformat.soap.name.TypeInfo.getElName()", "javax.xml.namespace.QName.equals(ti.getElName())", "org.apache.camel.dataformat.soap.name.TypeInfo.getTypeName()", "ti.getTypeName().equals(java.lang.String)", "org.apache.camel.dataformat.soap.name.TypeInfo.getTypeName()", "java.util.Map<java.lang.String, javax.xml.namespace.QName>.get(ti.getTypeName())", "org.slf4j.Logger.warn(((\"Ambiguous QName mapping. The type [ \" + (ti.getTypeName())) + \" ] is already mapped to a QName in this context.\"))"], "Fixed commit": "3165cae60e90f2e9c3a69ad1a31d58d651b112df", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-05-13T07:06:36Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i >= 1) && (i <= 8)) { audioPaths[i] = (\"Sound/\" + i) + \".mp3\"; java.lang.System.out.println(((\"Sound/\" + i) + \".mp3\")); }else { audioPaths[i] = (\"Sound/\" + i) + \".wav\"; java.lang.System.out.println(((\"Sound/\" + i) + \".wav\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1523/buggy-version/TheGameFiles.core.src.com.svarttand.ludumdare39.states.LoadingState.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "929fc91c5d7d7adbb108f92365046ac9e711d1ce", "Url": "https://api.github.com/repos/SvartTand/LudumDare-39", "Date": "2017-07-30T23:00:53Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (i == 0) { musicList.add(gsm.assetManager.get(((\"Sound/\" + i) + \".wav\"), com.badlogic.gdx.audio.Music.class)); }else { musicList.add(gsm.assetManager.get(((\"Sound/\" + i) + \".mp3\"), com.badlogic.gdx.audio.Music.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1523/buggy-version/TheGameFiles.core.src.com.svarttand.ludumdare39.states.PlayState.java", "BodyUseAPI": [], "Fixed commit": "929fc91c5d7d7adbb108f92365046ac9e711d1ce", "Url": "https://api.github.com/repos/SvartTand/LudumDare-39", "Date": "2017-07-30T23:00:53Z"},
{"Line": "=>902", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((FastQParseMain.inputFile2) != null) undeterminedWriter1 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(new java.util.zip.GZIPOutputStream(new java.io.FileOutputStream(((FastQParseMain.outputDir) + \"sample_undetermined_R2.fastq.gz\")), FastQParseMain.BUFFER_SIZE_GZIP)), FastQParseMain.BUFFER_SIZE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6139/buggy-version/src.FastQParseMain.java", "BodyUseAPI": [], "Fixed commit": "620007e10176c0cc2828afd2fc03ec6292a5994a", "Url": "https://api.github.com/repos/Daniel-Liu-c0deb0t/FastQParse", "Date": "2017-09-10T03:25:25Z"},
{"Line": "=>911", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((FastQParseMain.inputFile2) != null) undeterminedWriter1 = new java.io.BufferedWriter(new java.io.FileWriter(((FastQParseMain.outputDir) + \"sample_undetermined_R2.fastq\")), FastQParseMain.BUFFER_SIZE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6139/buggy-version/src.FastQParseMain.java", "BodyUseAPI": [], "Fixed commit": "620007e10176c0cc2828afd2fc03ec6292a5994a", "Url": "https://api.github.com/repos/Daniel-Liu-c0deb0t/FastQParse", "Date": "2017-09-10T03:25:25Z"},
{"Line": "=>906", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((FastQParseMain.inputFile2) != null) undeterminedWriter2 = new java.io.BufferedWriter(new java.io.OutputStreamWriter(new java.util.zip.GZIPOutputStream(new java.io.FileOutputStream(((FastQParseMain.outputDir) + \"index_undetermined_R2.fastq.gz\")), FastQParseMain.BUFFER_SIZE_GZIP)), FastQParseMain.BUFFER_SIZE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6139/buggy-version/src.FastQParseMain.java", "BodyUseAPI": [], "Fixed commit": "620007e10176c0cc2828afd2fc03ec6292a5994a", "Url": "https://api.github.com/repos/Daniel-Liu-c0deb0t/FastQParse", "Date": "2017-09-10T03:25:25Z"},
{"Line": "=>915", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((FastQParseMain.inputFile2) != null) undeterminedWriter2 = new java.io.BufferedWriter(new java.io.FileWriter(((FastQParseMain.outputDir) + \"index_undetermined_R2.fastq\")), FastQParseMain.BUFFER_SIZE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6139/buggy-version/src.FastQParseMain.java", "BodyUseAPI": [], "Fixed commit": "620007e10176c0cc2828afd2fc03ec6292a5994a", "Url": "https://api.github.com/repos/Daniel-Liu-c0deb0t/FastQParse", "Date": "2017-09-10T03:25:25Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index > 0) { language = value.substring(0, index); locale = value.substring((index + 1)); }else { language = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/306/buggy-version/rt.frontend.jaxrs.src.main.java.org.apache.cxf.jaxrs.utils.HttpUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "a1d59ed7af2a7db38d885f52034d2c79b4da332a", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2015-10-15T16:36:17Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.webobjects.appserver.WOContext.userInfoForKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((lesson == null) || (!(EduLesson.entityName.equals(lesson.entityName())))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1825/buggy-version/RujelCurriculum.Sources.net.rujel.curriculum.CurriculumModule.java", "BodyUseAPI": [], "Fixed commit": "06b00ab136d984acaf48854cf1e547a442a0106f", "Url": "https://api.github.com/repos/baywind/rujel", "Date": "2013-05-16T07:37:20Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.common.DimensionManager.getWorld(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (w != null) { for (int i = 0; i < (5 + (rnd.nextInt(5))); i++) { net.minecraft.client.Minecraft.getMinecraft().effectRenderer.addEffect(new founderio.chaoscrystal.entities.DegradationParticles(w, (posX + (rnd.nextDouble())), (posY + (rnd.nextDouble())), (posZ + (rnd.nextDouble())), (offX + (rnd.nextDouble())), (offY + (rnd.nextDouble())), (offZ + (rnd.nextDouble())), type)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2523/buggy-version/common.founderio.chaoscrystal.ChaosCrystalNetworkHandler.java", "BodyUseAPI": ["net.minecraft.client.Minecraft.getMinecraft().effectRenderer.addEffect(founderio.chaoscrystal.entities.DegradationParticles)"], "Fixed commit": "e01c92540b9fe00f682079f4cdadc466779c2d9f", "Url": "https://api.github.com/repos/founderio/chaoscrystal", "Date": "2013-12-14T18:23:57Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5878/buggy-version/modules.activiti-engine.src.main.java.org.activiti.engine.impl.variable.JsonType.java", "BodyUseAPI": [], "Fixed commit": "5827a2abc457920f02325375492316b292bc7d86", "Url": "https://api.github.com/repos/tstephen/Activiti", "Date": "2015-05-30T12:26:39Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4463/buggy-version/src.main.java.com.mridang.warning.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "fa49a328d01b41e7c6f60d6b0c57c392c8a977c3", "Url": "https://api.github.com/repos/mridang/dashclock-warning", "Date": "2015-03-29T09:12:40Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.linuxtools.internal.valgrind.core.ValgrindCoreParser.getMessages()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((results.length) == 0) { results = new org.eclipse.linuxtools.valgrind.core.IValgrindMessage[1]; results[0] = new org.eclipse.linuxtools.internal.valgrind.core.ValgrindInfo(null, org.eclipse.linuxtools.internal.valgrind.launch.Messages.getString(\"ValgrindOutputView.No_output\"), launch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5226/buggy-version/valgrind.org.eclipse.linuxtools.valgrind.launch.src.org.eclipse.linuxtools.internal.valgrind.launch.ValgrindLaunchConfigurationDelegate.java", "BodyUseAPI": [], "Fixed commit": "2b95573dcc7ed638e2515cbabf3fd1972ca34b6a", "Url": "https://api.github.com/repos/rafaelmt/linuxtools", "Date": "2011-08-08T16:59:53Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (callback != null) { callback.onCompleted(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6815/buggy-version/scribejava-core.src.main.java.com.github.scribejava.core.httpclient.jdk.JDKHttpClient.java", "BodyUseAPI": ["com.github.scribejava.core.model.OAuthAsyncRequestCallback<T>.onCompleted(com.github.scribejava.core.httpclient.jdk.T)"], "Fixed commit": "a34c0f84449acbe05ceb71679cb215c17c920d1d", "Url": "https://api.github.com/repos/sschwieb/scribejava", "Date": "2017-10-01T07:06:18Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toReturn.length()) == 0) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5929/buggy-version/clustering.src.main.java.com.rhc.jdg.util.MapUtil.java", "BodyUseAPI": [], "Fixed commit": "e371423bf9ae17ed71caf61e243ab6ce21c5bd12", "Url": "https://api.github.com/repos/tkterris/infinispan-lab", "Date": "2015-05-12T20:22:22Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (attachmentMetadata == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4344/buggy-version/src.main.java.com.couchbase.lite.Revision.java", "BodyUseAPI": [], "Fixed commit": "83ca43c20fe6bb758e7507538f82316e6f567862", "Url": "https://api.github.com/repos/SciAps/couchbase-lite-java-core", "Date": "2014-07-10T10:51:46Z"},
{"Line": "=>722", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.codename1.ui.Toolbar.permanentSideMenu) { com.codename1.ui.Button b = findCommandComponent(c, permanentSideMenuContainer); return b; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/67/buggy-version/CodenameOne.src.com.codename1.ui.Toolbar.java", "BodyUseAPI": [], "Fixed commit": "179f2cc157032443af82e3e9f585cbbf5cbbfea6", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-06-28T19:04:23Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edges.get(0).getEndNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (destination == (getCurrentArea())) destination = edges.get(0).getStartNode();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7029/buggy-version/src.exodus_world.AreaGraph.java", "BodyUseAPI": [], "Fixed commit": "78c0c0ffcf70e1986e4f7459a28d311597a84b36", "Url": "https://api.github.com/repos/Mikkomario/UtopiaExodus", "Date": "2014-12-06T19:11:37Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newNode == (getCurrentArea())) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7029/buggy-version/src.exodus_world.AreaGraph.java", "BodyUseAPI": [], "Fixed commit": "78c0c0ffcf70e1986e4f7459a28d311597a84b36", "Url": "https://api.github.com/repos/Mikkomario/UtopiaExodus", "Date": "2014-12-06T19:11:37Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.concurrent.ConcurrentHashMap<com.weibo.api.motan.rpc.URL, com.weibo.api.motan.registry.support.command.ServiceListener>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (listeners != null) { synchronized(listeners) { for (java.util.Map.Entry<com.weibo.api.motan.rpc.URL, com.weibo.api.motan.registry.support.command.ServiceListener> entry : listeners.entrySet()) { com.weibo.api.motan.registry.support.command.ServiceListener serviceListener = entry.getValue(); serviceListener.notifyService(entry.getKey(), getUrl(), urls); } } }else { com.weibo.api.motan.util.LoggerUtil.debug((\"need not notify service:\" + (service))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6607/buggy-version/motan-registry-consul.src.main.java.com.weibo.api.motan.registry.consul.ConsulRegistry.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<com.weibo.api.motan.rpc.URL, com.weibo.api.motan.registry.support.command.ServiceListener>.entrySet()"], "Fixed commit": "fcc4983333c337549a0cc0e68c8c0b87fc126184", "Url": "https://api.github.com/repos/weibocom/motan", "Date": "2016-11-25T06:29:34Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path == null) || (path.isEmpty())) { throw new java.io.IOException(((\"Path is (\" + path) + \") is invalid.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8386/buggy-version/src.main.java.tachyon.CommonUtils.java", "BodyUseAPI": [], "Fixed commit": "8ce7e71a223cbbd48d7547d69daebb96c8102b87", "Url": "https://api.github.com/repos/markhamstra/tachyon", "Date": "2013-07-30T21:14:00Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Conditional.features.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (feature == null) { feature = cmu.conditional.Conditional.createFeature(string.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5025/buggy-version/varviz.core.src.cmu.varviz.utils.ContextParser.java", "BodyUseAPI": [], "Fixed commit": "9843bb82d88d750426a992c4e9930008db4fb247", "Url": "https://api.github.com/repos/meinicke/varviz", "Date": "2016-12-13T22:43:57Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (((parameters != null) && ((parameters.length) == 1)) && ((parameters[0]) instanceof com.paypal.core.rest.QueryParameters)) { parameters = com.paypal.core.rest.RESTUtil.splitParameters(pattern, ((com.paypal.core.rest.QueryParameters) (parameters[0])).getContainerMap()); }else if (((parameters != null) && ((parameters.length) == 1)) && ((parameters[0]) instanceof java.util.Map<?, ?>)) { parameters = com.paypal.core.rest.RESTUtil.splitParameters(pattern, ((java.util.Map<?, ?>) (parameters[0]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/589/buggy-version/src.main.java.com.paypal.core.rest.RESTUtil.java", "BodyUseAPI": [], "Fixed commit": "1919888f93a1bee40e1a8f3a0b76c153c0dd0fc7", "Url": "https://api.github.com/repos/paypal/sdk-core-java", "Date": "2013-04-25T06:05:31Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (summonerResponse.has(summonerName)) { if ((summonerId.length()) == 0) { summonerId = summonerResponse.get(summonerName).getAsJsonObject().get(\"id\").getAsString(); } summonerLevel = summonerResponse.get(summonerName).getAsJsonObject().get(\"summonerLevel\").getAsInt(); summonerIcon = summonerResponse.get(summonerName).getAsJsonObject().get(\"profileIconId\").getAsString(); summonerName = summonerResponse.get(summonerName).getAsJsonObject().get(\"name\").getAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6398/buggy-version/src.main.java.com.badger.lolbyte.RequestData.java", "BodyUseAPI": [], "Fixed commit": "cc1d1f8e4411147ef947ded82947071ad817d1d8", "Url": "https://api.github.com/repos/ACSchott526/lolbyteapi", "Date": "2016-08-22T05:18:51Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (missing.isEmpty()) { try { callback.start(); } catch (java.lang.Exception e) { ActiveMQOsgiLogger.LOGGER.errorStartingBroker(e, name); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6479/buggy-version/artemis-server-osgi.src.main.java.org.apache.activemq.artemis.osgi.ProtocolTracker.java", "BodyUseAPI": [], "Fixed commit": "b23dcde38564a4bbcfce929f3894796f9262e19f", "Url": "https://api.github.com/repos/ryeats/activemq-artemis", "Date": "2017-09-29T23:43:25Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error == null) textInputLayout.setErrorEnabled(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1046/buggy-version/validator.src.main.java.com.fedorov.andrii.validator.SimpleValidator.java", "BodyUseAPI": [], "Fixed commit": "b8f02c4ce3df14200c675992ca64c629b600bd7f", "Url": "https://api.github.com/repos/fedorov-andrii/homelibrary", "Date": "2016-11-03T21:42:49Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root) == node) { root = rotatedNode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/984/buggy-version/WAVLTree.src.WAVLTree.java", "BodyUseAPI": [], "Fixed commit": "270fdf9ab676ff682e1df72a5334e3c711f29815", "Url": "https://api.github.com/repos/rotemtzaban/WAVLTreeIntelliJ", "Date": "2016-12-26T13:28:32Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root) == node) { root = rotatedNode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/984/buggy-version/WAVLTree.src.WAVLTree.java", "BodyUseAPI": [], "Fixed commit": "270fdf9ab676ff682e1df72a5334e3c711f29815", "Url": "https://api.github.com/repos/rotemtzaban/WAVLTreeIntelliJ", "Date": "2016-12-26T13:28:32Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bookmark != null) { response.setBookmark(bookmark.getBookmark()); response.setScoresByChapter(bookmark.getScoresByChapter()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/205/buggy-version/api.src.main.java.org.motechproject.nms.api.web.converter.MobileAcademyConverter.java", "BodyUseAPI": ["org.motechproject.nms.mobileacademy.dto.MaBookmark.getBookmark()", "org.motechproject.nms.mobileacademy.dto.MaBookmark.getScoresByChapter()", "org.motechproject.nms.api.web.contract.mobileAcademy.GetBookmarkResponse.setScoresByChapter(bookmark.getScoresByChapter())", "org.motechproject.nms.api.web.contract.mobileAcademy.GetBookmarkResponse.setBookmark(bookmark.getBookmark())"], "Fixed commit": "f9420feba3d7a2ec405742f3b4091c8e85f78f71", "Url": "https://api.github.com/repos/motech-implementations/nms", "Date": "2015-07-15T22:26:17Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.websiteapps.filter.Filter.isNameBiggerThanSearchName(product.getName(), searchProduct, 15))) { bestMatch.add(product); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4254/buggy-version/src.main.java.com.websiteapps.filter.Filter.java", "BodyUseAPI": ["java.util.List<com.websiteapps.domain.Product>.add(com.websiteapps.domain.Product)"], "Fixed commit": "9bb7c257d152bc920ed3b1da488be8fc5af1fc3e", "Url": "https://api.github.com/repos/digvijaymohite/PriceScrapper", "Date": "2014-07-07T04:16:06Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["element.getElementsByAttributeValueContaining(\"class\", \"pu-image\").first().child(0).attr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((img.equals(\"\")) || (img == null)) { img = element.getElementsByAttributeValueContaining(\"class\", \"pu-image\").first().child(0).attr(\"src\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4254/buggy-version/src.main.java.com.websiteapps.scrapper.Flipkart.java", "BodyUseAPI": [], "Fixed commit": "9bb7c257d152bc920ed3b1da488be8fc5af1fc3e", "Url": "https://api.github.com/repos/digvijaymohite/PriceScrapper", "Date": "2014-07-07T04:16:06Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["responseJson.getAsJsonObject().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (shareJson == null) return 0L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3079/buggy-version/src.com.claymus.commons.server.FacebookApi.java", "BodyUseAPI": [], "Fixed commit": "8a4ec2189a0a7600183691bd825200ee6708688b", "Url": "https://api.github.com/repos/Claymus/claymus", "Date": "2015-03-21T09:51:37Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getDataFolder().exists())) { getDataFolder().mkdir(); java.lang.System.out.println(\"Created Flow folder in plugins.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6397/buggy-version/src.main.java.com.github.jamesnorris.flow.Flow.java", "BodyUseAPI": [], "Fixed commit": "92fb67e7d06c2f7d58992861a02dce9f4be1fc02", "Url": "https://api.github.com/repos/ImranDoet/Flow", "Date": "2017-08-24T00:30:34Z"},
{"Line": "=>1026", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((extras.getInt(fr.gouv.etalab.mastodon.activities.INTENT_ACTION)) == (ADD_USER_INTENT)) { this.recreate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/668/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.activities.BaseMainActivity.java", "BodyUseAPI": [], "Fixed commit": "8ef4b7bd0597811a5e4f092764fee4f9f10ec915", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-12-08T06:23:15Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathname == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5854/buggy-version/src.main.java.org.maxur.ldoc.GlossaryWriter.java", "BodyUseAPI": [], "Fixed commit": "fbb2c60129c6ceb464677dcba03d4ace2e3fe33d", "Url": "https://api.github.com/repos/myunusov/maxur-ldoc", "Date": "2016-08-31T16:19:05Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((reader.read()) == '.') { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3338/buggy-version/src.shape.Eraser.java", "BodyUseAPI": [], "Fixed commit": "1d0273c2e5a7b407a6d0c1da6904c92a42bfe9a2", "Url": "https://api.github.com/repos/hhhphp123/DraftBoard", "Date": "2017-10-05T05:28:51Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getChildren().length) > 0) && ((getChildren()[0]) instanceof org.mule.tooling.lang.dw.parser.psi.WeaveDocument)) document = ((org.mule.tooling.lang.dw.parser.psi.WeaveDocument) (getChildren()[0]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7640/buggy-version/data-weave-plugin.src.main.java.org.mule.tooling.lang.dw.WeaveFile.java", "BodyUseAPI": [], "Fixed commit": "f8524bd5d73fc6da0b6acf639ec9ab5d8c0a8950", "Url": "https://api.github.com/repos/machaval/mule-intellij-plugins", "Date": "2016-11-10T19:40:10Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.impetus.kundera.persistence.jta.KunderaJTAUserTransaction) (utx)).isTransactionInProgress()) { entityTransaction.begin(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8993/buggy-version/kundera-core.src.main.java.com.impetus.kundera.persistence.EntityManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "07c8570e1a8b06c4ffd415fe39802c4a924ffba0", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-01-10T06:20:23Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3683/buggy-version/src.org.netbeans.gradle.project.properties.GlobalGradleSettings.java", "BodyUseAPI": [], "Fixed commit": "98d399f5aee553474e6a8a23c19409ee4be59017", "Url": "https://api.github.com/repos/kelemen/netbeans-gradle-project", "Date": "2013-01-09T18:50:20Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.getStartPosition()) == (-1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1551/buggy-version/src.edu.cs.ucdavis.decal.LabelAstVisitor.java", "BodyUseAPI": [], "Fixed commit": "95f0d5d366d428d043f52b740645330109b940ef", "Url": "https://api.github.com/repos/rayjcwu/jdt.annotator", "Date": "2013-10-24T05:51:37Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type != (Type.LIST)) { type = Type.STRUCT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2341/buggy-version/src.com.stellaris.ScriptFile.java", "BodyUseAPI": [], "Fixed commit": "edc55853728a8bb5420ce71b3a129c1fad11c9c6", "Url": "https://api.github.com/repos/WayOfModding/StellarisIDE", "Date": "2016-06-16T16:32:07Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.surefire.getConfiguration()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (configElement != null) { configElement.getChild(\"test\").setValue(this.configuration.testName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2221/buggy-version/nondex-maven-plugin.src.main.java.edu.illinois.nondex.plugin.NonDexSurefireExecution.java", "BodyUseAPI": ["org.codehaus.plexus.util.xml.Xpp3Dom.getChild(java.lang.String)", "configElement.getChild(\"test\").setValue(this.configuration.testName)"], "Fixed commit": "22e144c6230460881f444a62de069714d9030268", "Url": "https://api.github.com/repos/TestingResearchIllinois/NonDex", "Date": "2016-06-15T07:11:29Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (foundServices.containsKey(key)) foundServices.remove(key);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2083/buggy-version/src.com.connectsdk.discovery.provider.SSDPDiscoveryProvider.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, com.connectsdk.service.config.ServiceDescription>.remove(java.lang.String)"], "Fixed commit": "9b606f73c73206cb59ec7395e35c5b74f45a858f", "Url": "https://api.github.com/repos/OnAirPlayer/Connect-SDK-Android", "Date": "2014-06-20T23:17:26Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, com.connectsdk.service.config.ServiceDescription>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (service != null) { com.connectsdk.core.Util.runOnUI(new java.lang.Runnable() { @java.lang.Override public void run() { for (com.connectsdk.discovery.DiscoveryProviderListener listener : serviceListeners) { listener.onServiceRemoved(com.connectsdk.discovery.provider.SSDPDiscoveryProvider.this, service); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2083/buggy-version/src.com.connectsdk.discovery.provider.SSDPDiscoveryProvider.java", "BodyUseAPI": ["com.connectsdk.discovery.DiscoveryProviderListener.onServiceRemoved(com.connectsdk.discovery.provider.SSDPDiscoveryProvider,com.connectsdk.service.config.ServiceDescription)", "com.connectsdk.core.Util.runOnUI(java.lang.Runnable)"], "Fixed commit": "9b606f73c73206cb59ec7395e35c5b74f45a858f", "Url": "https://api.github.com/repos/OnAirPlayer/Connect-SDK-Android", "Date": "2014-06-20T23:17:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.util.Objects.equals(vars[0], \"\")) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1650/buggy-version/src.dijkstras.FileReader.java", "BodyUseAPI": [], "Fixed commit": "964dbe6851c4c38bf2b0ee3a7adcea780e46bf7e", "Url": "https://api.github.com/repos/andrew1421lee/JavaDijkstras", "Date": "2017-11-28T04:07:22Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(res.toString().equals(value))) { throw new org.jsonbuddy.parse.JsonParseException(java.lang.String.format(\"Unexpected value %s\", res.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7518/buggy-version/src.main.java.org.jsonbuddy.parse.JsonParser.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "a5bdee16914130e49769048082e170cc12b5a8b6", "Url": "https://api.github.com/repos/anders88/jsonbuddy", "Date": "2015-10-27T21:19:12Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.stocktracker.BuildConfig.DEBUG) android.util.Log.d(com.stocktracker.db.StockContentProviderFacade.TAG, \"insert\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/318/buggy-version/app.src.main.java.com.stocktracker.db.StockContentProviderFacade.java", "BodyUseAPI": [], "Fixed commit": "813c28c71e520d57994ba28b10076018a0fc8675", "Url": "https://api.github.com/repos/dlarson4/StockTracker", "Date": "2015-11-02T06:02:05Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location == null) { throw new nl.esciencecenter.octopus.exceptions.InvalidLocationException(LocalAdaptor.ADAPTOR_NAME, \"Cannot create local scheduler without a location!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4965/buggy-version/src.nl.esciencecenter.octopus.adaptors.local.LocalJobs.java", "BodyUseAPI": [], "Fixed commit": "962e5acfb455820bcf9ce26c3eae80cfc04f4ef9", "Url": "https://api.github.com/repos/NLeSC/octopus", "Date": "2013-08-29T18:40:34Z"},
{"Line": "=>7878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabled && ((_rects.length) > 0)) { if (((((_rects[0].x) + (_rects[0].width)) + (_additionalWidth)) - (_rects[((_rects.length) - 1)].x)) < (viewRect.width)) { enabled = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2057/buggy-version/src.com.jidesoft.plaf.basic.BasicJideTabbedPaneUI.java", "BodyUseAPI": [], "Fixed commit": "f5a2cd9bc630942e211a2c4dec00f2e928b12ff2", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2012-07-06T19:57:40Z"},
{"Line": "=>7896", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabled && ((_rects.length) > 0)) { if (((((_rects[0].x) + (_rects[0].width)) + (_additionalWidth)) - (_rects[((_rects.length) - 1)].x)) < (viewRect.width)) { enabled = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2057/buggy-version/src.com.jidesoft.plaf.basic.BasicJideTabbedPaneUI.java", "BodyUseAPI": [], "Fixed commit": "f5a2cd9bc630942e211a2c4dec00f2e928b12ff2", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2012-07-06T19:57:40Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((songs) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3189/buggy-version/app.src.main.java.kr.baggum.awesomemusic.Service.AwesomePlayer.java", "BodyUseAPI": [], "Fixed commit": "fb3122bde257e85fbae7fcdc602b6cb32e12d0d9", "Url": "https://api.github.com/repos/baDream/AwesomeMusic2", "Date": "2015-08-31T04:57:30Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ip) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1704/buggy-version/ngrinder-core.src.main.java.net.grinder.util.NetworkUtils.java", "BodyUseAPI": [], "Fixed commit": "6328dbeffbde1028864a31a9eabc69db8226fe76", "Url": "https://api.github.com/repos/nhnopensource/ngrinder", "Date": "2013-12-31T07:51:14Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (oldPath.equals(processedPath)) { com.microsoft.gittf.core.tasks.pendDiff.RenameChange processedRename = processedRenames.get(processedPath); if (newPath.equals(processedRename.getNewPath())) { return processedRename.getNewPath(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/770/buggy-version/com.microsoft.gittf.core.src.main.java.com.microsoft.gittf.core.tasks.pendDiff.TfsFolderRenameDetector.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.microsoft.gittf.core.tasks.pendDiff.RenameChange>.get(java.lang.String)"], "Fixed commit": "2f2c5c358bf2bf6e973ecccba440c6e3724cdd41", "Url": "https://api.github.com/repos/PKRoma/gittf", "Date": "2012-10-01T18:13:36Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.inventory.InventoryCloseEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((p != null) && (p.isOnline())) { if ((this.guiManager.isGUIEnabled()) && (this.guiManager.containsPlayer(uuid))) { if (!(this.guiManager.isAllowedToClose())) { new org.bukkit.scheduler.BukkitRunnable() { @java.lang.Override public void run() { org.bukkit.inventory.Inventory inv = guiManager.refreshPersonalGUI(uuid); if (inv != null) { p.openInventory(inv); } } }.runTaskLater(this.plugin, 0L); }else { this.guiManager.removePlayer(uuid); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5792/buggy-version/src.org.plugins.simplefreeze.listeners.InventoryCloseListener.java", "BodyUseAPI": ["org.bukkit.scheduler.BukkitRunnable.runTaskLater(org.plugins.simplefreeze.SimpleFreezeMain,long)", "org.bukkit.entity.Player.openInventory(org.bukkit.inventory.Inventory)"], "Fixed commit": "927ff7f67da6f26c1f5ac6a9d41266cb2730045f", "Url": "https://api.github.com/repos/7rory768/SimpleFreeze", "Date": "2017-08-24T03:09:54Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.fml.common.FMLCommonHandler.instance().getSide()) == (net.minecraftforge.fml.relauncher.Side.CLIENT)) LMMNX_OldZipTexturesLoader.keysf.put(cname, nfile);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2038/buggy-version/src.main.java.mmmlibx.lib.MMM_TextureManager.java", "BodyUseAPI": [], "Fixed commit": "51330e894764ccd34b1d99feaecd0221c35c3edd", "Url": "https://api.github.com/repos/Verclene/LittleMaidMobNX", "Date": "2015-08-25T15:01:00Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Short, de.domisum.exziff.map.FloatMap>.get(short)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((influenceMap.get(x, y)) < influence) influenceMap.set(x, y, influence);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4611/buggy-version/src.main.java.de.domisum.exziff.generator.bedrockpartition.BedrockRegionInfluenceMapGenerator.java", "BodyUseAPI": ["de.domisum.exziff.map.FloatMap.set(int,int,float)"], "Fixed commit": "a255afb29778d969df9b79eeaf5dd04a64e57c8f", "Url": "https://api.github.com/repos/domisum/ExZiff", "Date": "2017-11-30T11:26:56Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (page == null) { java.lang.String result = new com.google.gson.Gson().toJson(eventList); response.getWriter().append(result); }else if (page != null) { getServletContext().getRequestDispatcher(\"/GameList.html\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3392/buggy-version/Servlet.java", "BodyUseAPI": [], "Fixed commit": "cb86b33fac89603d62a06df9c621cc8343562a87", "Url": "https://api.github.com/repos/stoppable408/GameKnight", "Date": "2016-05-13T14:28:14Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mStartDate) == null) || ((mEndDate) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3650/buggy-version/Ranger.src.main.java.com.andressantibanez.ranger.Ranger.java", "BodyUseAPI": [], "Fixed commit": "b7c692a6016b8401d86405bc6bf1a56724532881", "Url": "https://api.github.com/repos/claudioredi/Ranger", "Date": "2016-03-11T14:49:37Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) { stack.setDurability(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8232/buggy-version/src.main.java.com.elmakers.mine.bukkit.block.MaterialAndData.java", "BodyUseAPI": [], "Fixed commit": "7ed3f521714b8c47c63e8a1b2d089790e2349679", "Url": "https://api.github.com/repos/elBukkit/MagicLib", "Date": "2016-02-05T23:34:57Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.jerkar.tool.JkOptions.containsKey(\"jkPublisherUrl\")) { return org.jerkar.api.depmanagement.JkPublishRepos.maven(org.jerkar.tool.JkOptions.get(\"jkPublisherUrl\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8876/buggy-version/org.jerkar.core.build.def.org.jerkar.AbstractBuild.java", "BodyUseAPI": [], "Fixed commit": "5b12c7c72cacfde1486a63cc933440d804e07a87", "Url": "https://api.github.com/repos/jerkar/jerkar", "Date": "2015-11-25T14:59:02Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((client) != null) && ((ss) != null)) { this.client.close(); this.ss.close(); java.lang.System.out.println(\"Server shutdown successful!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2287/buggy-version/server.src.main.java.org.wso2.tcp.server.Server.java", "BodyUseAPI": [], "Fixed commit": "12cb323f83efa6169817dcb61d654c1152db97b3", "Url": "https://api.github.com/repos/nipunthathsara/javaSocketCommSample", "Date": "2017-08-05T20:30:50Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GetAllImages.bitmaps[i].getWidth()", "GetAllImages.bitmaps[i].getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((width > 4000) || (height > 4000)) { imageView.setImageBitmap(android.graphics.Bitmap.createScaledBitmap(GetAllImages.bitmaps[i], 1200, 1200, false)); }else imageView.setImageBitmap(GetAllImages.bitmaps[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6547/buggy-version/app.src.main.java.com.example.aa.electronicpatientscard.ViewFullImage.java", "BodyUseAPI": [], "Fixed commit": "d0e6c447793de483db5f295118973e13664948ed", "Url": "https://api.github.com/repos/MiroslawCzechorowski/Electronic-patient-s-card", "Date": "2015-11-07T19:23:21Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y > 256) y = 256;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/551/buggy-version/src.main.java.com.fireball1725.graves.helpers.SafeBlockReplacer.java", "BodyUseAPI": [], "Fixed commit": "fcbbcd6a75c2c0bd4e3e5dbb553715c4ea3ff915", "Url": "https://api.github.com/repos/FireBall1725/Graves", "Date": "2016-01-22T03:39:34Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.util.BlockPos.getY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (y <= 0) y = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/551/buggy-version/src.main.java.com.fireball1725.graves.helpers.SafeBlockReplacer.java", "BodyUseAPI": [], "Fixed commit": "fcbbcd6a75c2c0bd4e3e5dbb553715c4ea3ff915", "Url": "https://api.github.com/repos/FireBall1725/Graves", "Date": "2016-01-22T03:39:34Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mac1 == mac2) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7694/buggy-version/src.freenet.crypt.MessageAuthCode.java", "BodyUseAPI": [], "Fixed commit": "0af787d56b57dd656616188a38b942b48db12130", "Url": "https://api.github.com/repos/xor-freenet/fred", "Date": "2015-08-08T03:45:45Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mac1 == null) || (mac2 == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7694/buggy-version/src.freenet.crypt.MessageAuthCode.java", "BodyUseAPI": [], "Fixed commit": "0af787d56b57dd656616188a38b942b48db12130", "Url": "https://api.github.com/repos/xor-freenet/fred", "Date": "2015-08-08T03:45:45Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["simpleJdbcCall.execute(in).get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (udpateCount == 0) { return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5459/buggy-version/erpsuite.src.main.java.com.jvc.erpsuite.dao.UserDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "32dda68dbe17f47ed65c118df2f7e0012f1d197f", "Url": "https://api.github.com/repos/jvmcruz/erpsuite", "Date": "2016-07-26T04:03:33Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((scheme.equals(uk.ac.ox.zoo.seeg.abraid.mp.publicsite.web.user.account.AccountController.HTTP_PROTO)) && (port == (uk.ac.ox.zoo.seeg.abraid.mp.publicsite.web.user.account.AccountController.HTTP_PORT))) || ((scheme.equals(uk.ac.ox.zoo.seeg.abraid.mp.publicsite.web.user.account.AccountController.HTTPS_PROTO)) && (port == (uk.ac.ox.zoo.seeg.abraid.mp.publicsite.web.user.account.AccountController.HTTPS_PORT))))) { builder.port(port); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5468/buggy-version/src.PublicSite.src.uk.ac.ox.zoo.seeg.abraid.mp.publicsite.web.user.account.AccountController.java", "BodyUseAPI": ["org.springframework.web.util.UriComponentsBuilder.port(int)"], "Fixed commit": "c9ba3cced7fff78454b67bf247eaaadee87c57f4", "Url": "https://api.github.com/repos/SEEG-Oxford/ABRAID-MP", "Date": "2014-12-10T17:31:38Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (forwardedScheme != null) { scheme = forwardedScheme; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5468/buggy-version/src.PublicSite.src.uk.ac.ox.zoo.seeg.abraid.mp.publicsite.web.user.account.AccountController.java", "BodyUseAPI": [], "Fixed commit": "c9ba3cced7fff78454b67bf247eaaadee87c57f4", "Url": "https://api.github.com/repos/SEEG-Oxford/ABRAID-MP", "Date": "2014-12-10T17:31:38Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.springframework.util.StringUtils.hasText(header)) { java.lang.String[] hosts = org.springframework.util.StringUtils.commaDelimitedListToStringArray(header); java.lang.String hostToUse = hosts[0]; if (hostToUse.contains(\":\")) { java.lang.String[] hostAndPort = org.springframework.util.StringUtils.split(hostToUse, \":\"); host = hostAndPort[0]; port = java.lang.Integer.parseInt(hostAndPort[1]); }else { host = hostToUse; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5468/buggy-version/src.PublicSite.src.uk.ac.ox.zoo.seeg.abraid.mp.publicsite.web.user.account.AccountController.java", "BodyUseAPI": ["org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)"], "Fixed commit": "c9ba3cced7fff78454b67bf247eaaadee87c57f4", "Url": "https://api.github.com/repos/SEEG-Oxford/ABRAID-MP", "Date": "2014-12-10T17:31:38Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (title != null) metaData.add(new edu.cmu.ml.rtw.generic.util.Pair<edu.cmu.ml.rtw.generic.data.annotation.nlp.AnnotationTypeNLP<java.lang.String>, java.lang.String>(edu.psu.ist.acs.micro.mid.data.annotation.nlp.AnnotationTypeNLPMID.ARTICLE_TITLE, title));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2880/buggy-version/src.main.java.edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.java", "BodyUseAPI": ["java.util.List<edu.cmu.ml.rtw.generic.util.Pair<edu.cmu.ml.rtw.generic.data.annotation.nlp.AnnotationTypeNLP<java.lang.String>, java.lang.String>>.add(edu.cmu.ml.rtw.generic.util.Pair<edu.cmu.ml.rtw.generic.data.annotation.nlp.AnnotationTypeNLP<java.lang.String>, java.lang.String>)"], "Fixed commit": "fd5ccf131c9afad5bc71fe90028f1c3bb1f76e25", "Url": "https://api.github.com/repos/forkunited/micro-mid", "Date": "2016-02-10T21:06:28Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (success == 0) { java.lang.System.err.printf(\"Error generating mip-map with dimensions %d, %d.\\n\", w, h); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/336/buggy-version/src.main.java.swen.adventure.rendering.Texture.java", "BodyUseAPI": [], "Fixed commit": "70657e6009f755243626dbfb12665567b8957cb1", "Url": "https://api.github.com/repos/FrostAndWinter/OriginalAdventure", "Date": "2015-10-01T02:00:46Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leftOver < 0) { leftOver = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3367/buggy-version/src.main.java.net.torocraft.dailies.BaileyInventory.java", "BodyUseAPI": [], "Fixed commit": "0585c0af28927e6ca85633f04dc5ad2df10d1d96", "Url": "https://api.github.com/repos/ToroCraft/Dailies", "Date": "2016-08-20T15:16:08Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x < 0) || (x >= (width))) || (y < 0)) || (y >= (height))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2178/buggy-version/PixelEngine.src.com.pixelengine.Bitmap.java", "BodyUseAPI": [], "Fixed commit": "e66ee5575bb7c292470ffa633b06b8415e935bea", "Url": "https://api.github.com/repos/chogan314/PixelEngine", "Date": "2016-06-25T22:52:14Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.curator.framework.CuratorFrameworkFactory.newClient(oldKafkaSpoutOffsetQuery.getZkServers(),int,int,org.apache.curator.retry.RetryOneTime)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((curatorFramework.checkExists().forPath(zkPath)) == null) { java.lang.System.out.printf(\"--zk-node '%s' is not exists.%n\", zkPath); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7846/buggy-version/external.storm-kafka-monitor.src.main.java.org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,java.lang.String)"], "Fixed commit": "bced6f0d107e9c4b106a11c9922d375053bfefaa", "Url": "https://api.github.com/repos/apache/storm", "Date": "2016-08-31T15:11:28Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((zkNode == null) || ((zkNode.length()) <= 1)) { org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.printUsageAndExit(options, ((((org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.OPTION_ZK_COMMITTED_NODE_LONG) + \" '\") + zkNode) + \"' is invalid.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7846/buggy-version/external.storm-kafka-monitor.src.main.java.org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.java", "BodyUseAPI": ["org.apache.storm.kafka.monitor.KafkaOffsetLagUtil.printUsageAndExit(org.apache.commons.cli.Options,java.lang.String)"], "Fixed commit": "bced6f0d107e9c4b106a11c9922d375053bfefaa", "Url": "https://api.github.com/repos/apache/storm", "Date": "2016-08-31T15:11:28Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (keyPress != null) { kpList.add(keyPress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5967/buggy-version/app.src.main.java.ct.pinlogin.activity.LoginActivity.java", "BodyUseAPI": ["java.util.List<ct.pinlogin.model.KeyPress>.add(ct.pinlogin.model.KeyPress)"], "Fixed commit": "13e8c41b39ddf2dd595e403ec48c277a5e2160f9", "Url": "https://api.github.com/repos/sasinda/SecFinal-PinLogin", "Date": "2015-11-21T22:32:20Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result != null) && ((result.size()) > 0)) this.taskCompleteListener.OnTaskComplete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1409/buggy-version/app.src.main.java.com.example.lucas.openweathermap.Tasks.FetchCityWeeklyForecastTask.java", "BodyUseAPI": [], "Fixed commit": "6c18d5d46355b12db16e3801ae393cc10b107473", "Url": "https://api.github.com/repos/lfn2/OpenWeatherMap", "Date": "2016-11-26T13:20:14Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["appLauncher.conf.ConfigurationManager.getInstance().getPc().getDownloadedApplications()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (userAppNames == null) { userAppNames = new java.util.ArrayList<java.lang.String>(); appLauncher.conf.ConfigurationManager.getInstance().getPc().setDownloadedApplications(userAppNames); }else { userAppNames.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5730/buggy-version/appLauncher.src.main.java.appLauncher.view.LoginFrame.java", "BodyUseAPI": ["java.util.List<java.lang.String>.clear()"], "Fixed commit": "ee9f250d5e0c2d8354001fd13fb237131e6e8dfd", "Url": "https://api.github.com/repos/Mephala/appLoader", "Date": "2015-09-23T08:54:53Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(net.larry1123.fly.permissions.PermissionsMan.allowFlyOtherOverRide(caller))) { if (caller instanceof net.canarymod.api.entity.living.humanoid.Player) { speed = playerMaxSpeed; if (caller != player) { caller.message((((player.getName()) + \" can not fly that fast. Setting Speed to \") + speed)); }else { caller.message((\"You can not fly that fast. Setting Speed to \" + speed)); } } if (speed > (net.larry1123.fly.permissions.PermissionsMan.getMaxSpeedByCaller(caller))) { speed = net.larry1123.fly.permissions.PermissionsMan.getMaxSpeedByCaller(caller); if (caller != player) { caller.message((\"You can not let others fly that fast. Setting Speed to \" + speed)); } } }else { if (caller != player) { caller.message(((((\"Please know that \" + speed) + \" is faster then what this player is allowed, \") + playerMaxSpeed) + \" is this player's max\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6075/buggy-version/src.main.java.net.larry1123.fly.commands.CFly.java", "BodyUseAPI": ["net.canarymod.chat.MessageReceiver.message((((player.getName()) + \" can not fly that fast. Setting Speed to \") + speed))", "net.canarymod.chat.MessageReceiver.message(java.lang.String)", "net.canarymod.chat.MessageReceiver.message(java.lang.String)", "net.larry1123.fly.permissions.PermissionsMan.getMaxSpeedByCaller(net.canarymod.chat.MessageReceiver)", "net.larry1123.fly.permissions.PermissionsMan.getMaxSpeedByCaller(net.canarymod.chat.MessageReceiver)", "net.canarymod.chat.MessageReceiver.message(java.lang.String)"], "Fixed commit": "ad762cf3c2a6c2bc14e61c39adeb86cd94d93f02", "Url": "https://api.github.com/repos/Larry1123/Fly", "Date": "2013-11-11T14:33:20Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(helperInfo.getOkHttpUtil().isNetworkAvailable())) { return retInfo(info, HttpInfo.CheckNet, ((\"[\" + (e.getMessage())) + \"]\")); }else { return retInfo(info, HttpInfo.CheckURL, ((\"[\" + (e.getMessage())) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/292/buggy-version/okhttp3.src.main.java.com.okhttplib.helper.HttpHelper.java", "BodyUseAPI": [], "Fixed commit": "77efdbac18912756e8dcbf81a2011cf4fbe34937", "Url": "https://api.github.com/repos/MrZhousf/OkHttp3", "Date": "2017-05-31T05:57:16Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(helperInfo.getOkHttpUtil().isNetworkAvailable())) { code = com.okhttplib.HttpInfo.CheckNet; }else { code = com.okhttplib.HttpInfo.CheckURL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/292/buggy-version/okhttp3.src.main.java.com.okhttplib.helper.HttpHelper.java", "BodyUseAPI": [], "Fixed commit": "77efdbac18912756e8dcbf81a2011cf4fbe34937", "Url": "https://api.github.com/repos/MrZhousf/OkHttp3", "Date": "2017-05-31T05:57:16Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((base.hasTagCompound()) && (!(base.stackTagCompound.hasNoTags()))) { if (!(net.minecraft.item.ItemStack.areItemStacksEqual(base, comparison))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6583/buggy-version/src.main.java.forestry.core.utils.StackUtils.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.areItemStacksEqual(net.minecraft.item.ItemStack,net.minecraft.item.ItemStack)"], "Fixed commit": "a3ccb226e514b546a3b2dfb97f5b5ef76e0c436e", "Url": "https://api.github.com/repos/Nirek-K/ForestryMC", "Date": "2015-05-22T05:19:35Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (callHack instanceof edu.tum.lua.ast.FuncCallSelf) { throw new java.lang.RuntimeException(\"Not yet implemented\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5391/buggy-version/Interpreter.src.edu.tum.lua.ExpVisitor.java", "BodyUseAPI": [], "Fixed commit": "18819a4883f42087556b9e5a84d991ebe4896c98", "Url": "https://api.github.com/repos/kobreu/compiler", "Date": "2013-07-26T08:25:18Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.client.gin.AppClientFactory.getPlaceManager().getRequestParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mycollection.equals(\"true\")) { if (!(org.ednovo.gooru.client.gin.AppClientFactory.getCurrentPlaceToken().equals(PlaceTokens.SHELF))) { org.ednovo.gooru.client.gin.AppClientFactory.getPlaceManager().revealPlace(PlaceTokens.SHELF); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5559/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.collection.CollectionFormPresenter.java", "BodyUseAPI": [], "Fixed commit": "01407e213ae82bb3d8204038a32ad6e949de6a0d", "Url": "https://api.github.com/repos/ssushma/Gooru-Web", "Date": "2014-06-17T04:54:21Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response.getStatus().equals(\"TIME_OUT\")) { boolean success = connectToAnyServer(); if (!success) { return null; } return sendRequest(request); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4950/buggy-version/StorageServer.src.client.KVStore.java", "BodyUseAPI": [], "Fixed commit": "6b9d670b31efdde025996b395ae8f97c79f7b019", "Url": "https://api.github.com/repos/NeilVeira/ECE419", "Date": "2017-03-06T04:03:18Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["OWLEntity.getAnnotations(org.semanticweb.owlapi.model.OWLOntology,OWLAnnotationProperty)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (annots.isEmpty()) { for (org.semanticweb.owlapi.model.OWLOntology imp : owlkb.imp_closure) { annots = e.getAnnotations(imp, rdfslab); if (!(annots.isEmpty())) break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7247/buggy-version/Owlkb.java", "BodyUseAPI": [], "Fixed commit": "97a821366cdab055ad14a321723b6b406e976881", "Url": "https://api.github.com/repos/semitrivial/owlkb", "Date": "2014-11-17T17:06:56Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.jdt.groovy.model.GroovyCompilationUnit.getSource()", "org.codehaus.groovy.eclipse.codebrowsing.requestor.CodeSelectRequestor.endOffset(org.codehaus.groovy.ast.ClassNode)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (typeEnd == ((gunitSource.length()) + 1)) typeEnd = gunitSource.length(); else if (typeEnd > (gunitSource.length())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4520/buggy-version/ide.org.codehaus.groovy.eclipse.codebrowsing.src.org.codehaus.groovy.eclipse.codebrowsing.requestor.CodeSelectRequestor.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "f16535863094d25f1d12d5e5da2a5e136d62345a", "Url": "https://api.github.com/repos/groovy/groovy-eclipse", "Date": "2017-05-08T01:13:57Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hyphenate.chat.EMClient.getInstance().chatManager().getConversation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (conversation != null) conversation.markAllMessagesAsRead();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5576/buggy-version/app.src.main.java.activity.conversation.java", "BodyUseAPI": ["com.hyphenate.chat.EMConversation.markAllMessagesAsRead()"], "Fixed commit": "0a492f9ffddb17a04fd244b157fc813a0c04551b", "Url": "https://api.github.com/repos/hanyaonian/myChatApp", "Date": "2017-08-11T07:36:03Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 0) { return i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3538/buggy-version/src.main.java.com.almondtools.comtemplate.parser.MultiChannelTokenStream.java", "BodyUseAPI": [], "Fixed commit": "e3f97ded91e9a3369115d6f766dafd4a61443e8e", "Url": "https://api.github.com/repos/almondtools/comtemplate", "Date": "2015-12-14T09:00:01Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(canMoveDown())) { pause(Playgame.DELAY); if (!(canMoveDown())) break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3611/buggy-version/Playgame.java", "BodyUseAPI": [], "Fixed commit": "28ca2a3fa6b50ed5a541349b9b8258eee19cce91", "Url": "https://api.github.com/repos/Hrish2006/Tetris-or-QuadraPassal", "Date": "2013-03-25T19:42:25Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Current) != null) return noElementInFront(); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3611/buggy-version/Playgame.java", "BodyUseAPI": [], "Fixed commit": "28ca2a3fa6b50ed5a541349b9b8258eee19cce91", "Url": "https://api.github.com/repos/Hrish2006/Tetris-or-QuadraPassal", "Date": "2013-03-25T19:42:25Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(int,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allocationSize <= (position * (pageSize))) { overflowBufferCount.incrementAndGet(); allocatedMemory.getAndAdd(pageSize); return trackBuffer(java.nio.ByteBuffer.allocateDirect(pageSize).order(java.nio.ByteOrder.nativeOrder())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7416/buggy-version/core.src.main.java.com.orientechnologies.common.directmemory.OByteBufferPool.java", "BodyUseAPI": [], "Fixed commit": "fed5276ae99462665abe7b2ffed00cedd904a58b", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-08-08T07:43:21Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((screen) != null) { screen.setParentPanel(panel); panel.swapScreen(screen); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5083/buggy-version/src.com.valkryst.VTerminal.builder.PanelBuilder.java", "BodyUseAPI": [], "Fixed commit": "435e91accfaaaf10ced6edee77a1dbe5345dbdcf", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2017-09-27T12:17:00Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null == jvs) { nvs.width = new us.dot.its.jpo.ode.j2735.dsrc.VehicleWidth(0); nvs.length = new us.dot.its.jpo.ode.j2735.dsrc.VehicleLength(0); }else { if (null == (jvs.getWidth())) { nvs.width = new us.dot.its.jpo.ode.j2735.dsrc.VehicleWidth(0); }else { nvs.width = new us.dot.its.jpo.ode.j2735.dsrc.VehicleWidth(jvs.getWidth()); } if (null == (jvs.getLength())) { nvs.length = new us.dot.its.jpo.ode.j2735.dsrc.VehicleLength(0); }else { nvs.length = new us.dot.its.jpo.ode.j2735.dsrc.VehicleLength(jvs.getLength()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7245/buggy-version/jpo-ode-plugins.src.main.java.us.dot.its.jpo.ode.plugin.j2735.oss.OssVehicleSituationRecord.java", "BodyUseAPI": ["us.dot.its.jpo.ode.plugin.j2735.J2735VehicleSize.getLength()", "us.dot.its.jpo.ode.plugin.j2735.J2735VehicleSize.getWidth()", "us.dot.its.jpo.ode.plugin.j2735.J2735VehicleSize.getWidth()", "us.dot.its.jpo.ode.plugin.j2735.J2735VehicleSize.getLength()"], "Fixed commit": "caea2cba0b22e619148fd5610cdb7dddc4c9f72b", "Url": "https://api.github.com/repos/usdot-jpo-ode/jpo-ode", "Date": "2017-07-11T16:58:01Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from.equals(sender)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8039/buggy-version/src.main.java.org.bitbucket.ucchy.undine.MailData.java", "BodyUseAPI": [], "Fixed commit": "df126ad60a1dfacac49eeec8eb63803eed37e9a7", "Url": "https://api.github.com/repos/ucchyocean/UndineMailer", "Date": "2015-01-28T18:28:50Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endIndex < 0) endIndex = aux.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5269/buggy-version/storage.inchi.src.main.java.org.openscience.cdk.graph.invariant.InChINumbersTools.java", "BodyUseAPI": [], "Fixed commit": "4eb0299dd58d855041469eb4eae774d2a0124312", "Url": "https://api.github.com/repos/egonw/cdk", "Date": "2015-09-03T11:36:09Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (getSorting())) { strBuilder.append(getSorting().getField()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1919/buggy-version/utilities-pagination.src.main.java.org.gogoup.utilities.pagination.PaginatedResult.java", "BodyUseAPI": [], "Fixed commit": "309573bc41e215c4b25042de216f2d419c20d2d2", "Url": "https://api.github.com/repos/stevesun21/utilities", "Date": "2015-10-25T23:25:49Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.matches(java.lang.String)", "java.lang.String.matches(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!a2zOnlyElementName) || (!a2zOnlySymbolName)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1412/buggy-version/Splurth.src.main.java.org.deb.App.java", "BodyUseAPI": [], "Fixed commit": "9b048db4c68b8ef94c1b3e75466c50500c345a20", "Url": "https://api.github.com/repos/debmalya/SplurthPeriodicTable", "Date": "2016-08-08T16:14:51Z"},
{"Line": "=>1243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aData.isClosed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7699/buggy-version/application.src.com.ferg.awfulapp.ThreadDisplayFragment.java", "BodyUseAPI": [], "Fixed commit": "45732f3b6e6f954f599d014389411367010af629", "Url": "https://api.github.com/repos/scottferg/Something-Awful-Android", "Date": "2012-08-19T21:15:01Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start < 0) { start = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4071/buggy-version/src.tmall.servlet.BaseBackServlet.java", "BodyUseAPI": [], "Fixed commit": "a26e9df0a351662e0347775ca6aa659847a79b6a", "Url": "https://api.github.com/repos/water160/tmall", "Date": "2017-11-09T10:55:49Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kumbaya.www.proxy.Proxy.MyProxyServlet.assemble(request.getRequestURL().toString())", "java.net.InetAddress.getByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.util.Arrays.equals(address.getAddress(), new java.net.InetSocketAddress(host, port).getAddress().getAddress())) && ((new java.net.URL(url).getPort()) == (port))) { response.sendError(400); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2342/buggy-version/java.com.kumbaya.www.proxy.Proxy.java", "BodyUseAPI": [], "Fixed commit": "ea3f305ebd99d97fc77fcf0affa4c4d33be7330e", "Url": "https://api.github.com/repos/samuelgoto/dhtp", "Date": "2017-01-18T01:43:15Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((com.cpsc434.stroboscopik.StrobeActivity.state) == (com.cpsc434.stroboscopik.StrobeActivity.State.IN_TRANSITION)) && (((com.cpsc434.stroboscopik.StrobeActivity.trans) == (com.cpsc434.stroboscopik.StrobeActivity.Transition.SEARCHING_FOR_SUPERNODE)) || ((com.cpsc434.stroboscopik.StrobeActivity.trans) == (com.cpsc434.stroboscopik.StrobeActivity.Transition.SUBNODE_PENDING_GCM))))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6843/buggy-version/src.com.cpsc434.stroboscopik.StrobeActivity.java", "BodyUseAPI": [], "Fixed commit": "a4ce60ec386e422193772a3e9bc9fdfb651a0b6a", "Url": "https://api.github.com/repos/nvedire/Stroboscopik", "Date": "2012-12-13T04:37:52Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (addRecipients != (Insert.SUCCESS)) { log.Log((\"couldn't add msg recipients \" + (addRecipients.toString()))); return addRecipients; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6041/buggy-version/src.BuzMo.Database.MessageHandler.java", "BodyUseAPI": ["BuzMo.Database.Insert.toString()", "BuzMo.Database.MessageHandler.Log((\"couldn't add msg recipients \" + (addRecipients.toString())))"], "Fixed commit": "cfbeebf426383c9007b3ca8372d90fa5d0b684a0", "Url": "https://api.github.com/repos/B-Lei/BuzMoLite", "Date": "2016-12-02T05:26:12Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (msg.contains(\"error\")) { throw new org.indigo.cdmi.BackEndException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/272/buggy-version/src.main.java.edu.kit.scc.backend.HpssBackend.java", "BodyUseAPI": [], "Fixed commit": "7112ccb8711ea8493eac0c223a6635a28cbc7c3e", "Url": "https://api.github.com/repos/indigo-dc/cdmi-hpss", "Date": "2016-10-18T16:25:35Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((others[i]) != null) others[i].setFill(Color.ALICEBLUE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4131/buggy-version/src.Cell.java", "BodyUseAPI": ["Cell.setFill(Color.ALICEBLUE)"], "Fixed commit": "e635e6713913073b2d2b40a313f19eddec5dad12", "Url": "https://api.github.com/repos/Aeiline/abalone_lwnlg", "Date": "2016-12-05T17:17:41Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outcome == 0) { return -5; }else { return -6; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6761/buggy-version/trailOfSpace.src.byui.cit260.trailOfSpace.control.BattleControl.java", "BodyUseAPI": [], "Fixed commit": "4ea72caf81a68e2ecdcab9eb7b742f821aa1303e", "Url": "https://api.github.com/repos/brinkerboss/Wright-Brinkerhoff-Trail-of-Space", "Date": "2015-10-23T15:21:31Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 21) { mWebView.getSettings().setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4088/buggy-version/app.src.main.java.com.develop.searchmycarandroid.CarPage.java", "BodyUseAPI": [], "Fixed commit": "365c380bf2dad764e1b337b8ba4059f2d6d48adf", "Url": "https://api.github.com/repos/NIKsun/AutoMsk", "Date": "2015-10-10T18:29:29Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sum.size()) == 0) { list.add(org.eclipse.january.dataset.DatasetFactory.zeros(0)); list.add(org.eclipse.january.dataset.DatasetFactory.zeros(0, rank)); }else { list.add(org.eclipse.january.dataset.DatasetFactory.createFromList(sum)); list.add(org.eclipse.january.dataset.DatasetFactory.createFromList(centroid).reshape(sum.size(), rank)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6186/buggy-version/uk.ac.diamond.scisoft.analysis.src.uk.ac.diamond.scisoft.analysis.image.ImageUtils.java", "BodyUseAPI": ["org.eclipse.january.dataset.DatasetFactory.createFromList(java.util.List<java.lang.Double>)", "java.util.List<java.lang.Double>.size()", "java.util.List<org.eclipse.january.dataset.Dataset>.add(org.eclipse.january.dataset.DatasetFactory.createFromList(sum))", "java.util.List<org.eclipse.january.dataset.Dataset>.add(org.eclipse.january.dataset.DatasetFactory.createFromList(centroid).reshape(sum.size(), rank))", "org.eclipse.january.dataset.DatasetFactory.createFromList(centroid).reshape(int,int)"], "Fixed commit": "2a126d7b29e8dff5245a07ad83e4f237be607911", "Url": "https://api.github.com/repos/DawnScience/scisoft-core", "Date": "2017-03-21T15:49:17Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.Character.isLetterOrDigit(nameOfAcceptStates.charAt(0)))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3504/buggy-version/src.Parse.java", "BodyUseAPI": [], "Fixed commit": "7d50df8cf3f970b8be67f3426b047d3e7f5fed96", "Url": "https://api.github.com/repos/DSLewis22/DFA_Builder", "Date": "2015-12-01T01:30:47Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(doesMarkerExist(destination))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2408/buggy-version/app.src.main.java.dat255.refugeemap.app.gui.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "79280c14b4a89a7582926c422a213dd75294d8d9", "Url": "https://api.github.com/repos/drualsk/RefugeeMap", "Date": "2016-10-23T18:45:30Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o.has(\"note\")) messageToMediationService.setNote(o.getString(\"note\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5048/buggy-version/src.main.java.eu.trentorise.smartcampus.mediation.model.MessageToMediationService.java", "BodyUseAPI": ["eu.trentorise.smartcampus.mediation.model.MessageToMediationService.setNote(o.getString(\"note\"))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "dd5a25c0ae8d392421cd5ee04998b5c58b2b5c9e", "Url": "https://api.github.com/repos/smartcampuslab/mediation.api", "Date": "2013-10-15T15:09:48Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.caleydo.core.view.opengl.layout2.GLElementContainer.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((body.get(1)) instanceof org.caleydo.core.view.opengl.layout2.GLElementContainer)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2704/buggy-version/org.caleydo.view.tourguide.entourage.src.main.java.org.caleydo.view.tourguide.entourage.EntourageAdapter.java", "BodyUseAPI": [], "Fixed commit": "8bad848de65125f4984d6147c47df88a6491c853", "Url": "https://api.github.com/repos/Caleydo/caleydo", "Date": "2013-10-08T17:18:11Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user != null) && ((user.getEmail()) != null)) { aq.id(R.id.user_name).text(MainApplication.user.getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9182/buggy-version/App.src.main.java.cc.softwarefactory.lokki.android.fragments.NavigationDrawerFragment.java", "BodyUseAPI": [], "Fixed commit": "15a719834473f2a2a1e7df2ef5f8dc19666a9dfc", "Url": "https://api.github.com/repos/olzraiti/lokki-android", "Date": "2015-12-07T13:01:12Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onClickCallback) != null) { onClickCallback.OnClick(currentImageUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5983/buggy-version/imagegallery.src.main.java.app.ltaps.imagegallery.Utils.PlacesGalleryAdapter.java", "BodyUseAPI": [], "Fixed commit": "7c12cf9f1388a154dc090c32970bb8fc65d5c945", "Url": "https://api.github.com/repos/ChristianLJ/ImageGallery", "Date": "2017-01-04T07:03:55Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.dawnsci.plotting.api.IPlottingSystem<?>.getRegion(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (region == null) { createRegion(roi, guiBean); }else { region.setROI(roi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6814/buggy-version/uk.ac.diamond.scisoft.analysis.plotclient.src.uk.ac.diamond.scisoft.analysis.plotclient.connection.PlottingGUIUpdate.java", "BodyUseAPI": ["org.eclipse.dawnsci.plotting.api.region.IRegion.setROI(org.eclipse.dawnsci.analysis.api.roi.IROI)"], "Fixed commit": "61f98d229fc625fb3da128343bb150b6a4c8d9ec", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2017-04-06T14:10:27Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((n != null) && (!(names.remove(n)))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6814/buggy-version/uk.ac.diamond.scisoft.analysis.plotclient.src.uk.ac.diamond.scisoft.analysis.plotclient.connection.PlottingGUIUpdate.java", "BodyUseAPI": [], "Fixed commit": "61f98d229fc625fb3da128343bb150b6a4c8d9ec", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2017-04-06T14:10:27Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.dawnsci.analysis.api.roi.IROI.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (n != null) { n = n.trim(); if ((n.length()) == 0) { n = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6814/buggy-version/uk.ac.diamond.scisoft.analysis.plotclient.src.uk.ac.diamond.scisoft.analysis.plotclient.connection.PlottingGUIUpdate.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "61f98d229fc625fb3da128343bb150b6a4c8d9ec", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2017-04-06T14:10:27Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.sql.OCommandExecutorSQLUpdate.parserGetLastWord()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((additionalStatement != null) && (!(additionalStatement.isEmpty()))) throwSyntaxErrorException((\"Invalid keyword \" + additionalStatement)); else query = new com.orientechnologies.orient.core.sql.query.OSQLAsynchQuery<com.orientechnologies.orient.core.record.impl.ODocument>((\"select from \" + (subjectName)), this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4346/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLUpdate.java", "BodyUseAPI": ["com.orientechnologies.orient.core.sql.OCommandExecutorSQLUpdate.throwSyntaxErrorException(java.lang.String)"], "Fixed commit": "f16d0aaefe5475995ecf930011d69c380b3551f6", "Url": "https://api.github.com/repos/Eclesia/orientdb", "Date": "2013-01-22T04:28:32Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.util.Algorithms.extractIntegerPrefix(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ot2.length()) == 0) { ot2 = s2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2025/buggy-version/OsmAnd.src.net.osmand.plus.FavouritesDbHelper.java", "BodyUseAPI": [], "Fixed commit": "fd9ad702f39adbd1aca9893586cd6fb389f55748", "Url": "https://api.github.com/repos/Zahnstocher/Osmand", "Date": "2016-02-27T18:43:39Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.util.Algorithms.extractIntegerPrefix(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ot1.length()) == 0) { ot1 = s1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2025/buggy-version/OsmAnd.src.net.osmand.plus.FavouritesDbHelper.java", "BodyUseAPI": [], "Fixed commit": "fd9ad702f39adbd1aca9893586cd6fb389f55748", "Url": "https://api.github.com/repos/Zahnstocher/Osmand", "Date": "2016-02-27T18:43:39Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (engine == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3000/buggy-version/imagepicker.src.main.java.com.akshaykale.imagepicker.ImagePickerFragment.java", "BodyUseAPI": [], "Fixed commit": "21251c354c8aa3b9aae041f21c93648303019864", "Url": "https://api.github.com/repos/akshaykale/ImagePicker", "Date": "2017-09-10T06:09:08Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { imagePickerListener.onCameraClicked(null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3000/buggy-version/imagepicker.src.main.java.com.akshaykale.imagepicker.ImagePickerFragment.java", "BodyUseAPI": [], "Fixed commit": "21251c354c8aa3b9aae041f21c93648303019864", "Url": "https://api.github.com/repos/akshaykale/ImagePicker", "Date": "2017-09-10T06:09:08Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (extras == null) { imagePickerListener.onCameraClicked(null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3000/buggy-version/imagepicker.src.main.java.com.akshaykale.imagepicker.ImagePickerFragment.java", "BodyUseAPI": [], "Fixed commit": "21251c354c8aa3b9aae041f21c93648303019864", "Url": "https://api.github.com/repos/akshaykale/ImagePicker", "Date": "2017-09-10T06:09:08Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (image == null) { imagePickerListener.onCameraClicked(null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3000/buggy-version/imagepicker.src.main.java.com.akshaykale.imagepicker.ImagePickerFragment.java", "BodyUseAPI": [], "Fixed commit": "21251c354c8aa3b9aae041f21c93648303019864", "Url": "https://api.github.com/repos/akshaykale/ImagePicker", "Date": "2017-09-10T06:09:08Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (root == null) { return java.lang.Integer.MIN_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7097/buggy-version/src.BinaryTreeMaximumPathSum.java", "BodyUseAPI": [], "Fixed commit": "648477e4b34be1e9e491d528168222f422efd688", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-06-18T22:27:33Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ei.drishti.repository.AllBeneficiaries.findMotherWithOpenStatus(submission.entityId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mother == null) { logWarn((\"Failed to handle delivery outcome for mother. Entity ID: \" + (submission.entityId()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5299/buggy-version/dristhi-app.src.main.java.org.ei.drishti.service.MotherService.java", "BodyUseAPI": [], "Fixed commit": "f1be2c4d8476da93f6659d93734e3969765e373a", "Url": "https://api.github.com/repos/sidthrive/opensrp-client", "Date": "2014-02-14T11:41:27Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (profile != null) { if ((profile._volumeSpeakerPhone) != 0) { if ((sk.henrichg.phoneprofilesplus.PhoneCallBroadcastReceiver.audioManager) == null) sk.henrichg.phoneprofilesplus.PhoneCallBroadcastReceiver.audioManager = ((android.media.AudioManager) (savedContext.getSystemService(Context.AUDIO_SERVICE))); try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e) { } sk.henrichg.phoneprofilesplus.PhoneCallBroadcastReceiver.audioManager.setMode(AudioManager.MODE_IN_CALL); sk.henrichg.phoneprofilesplus.PhoneCallBroadcastReceiver.savedSpeakerphone = sk.henrichg.phoneprofilesplus.PhoneCallBroadcastReceiver.audioManager.isSpeakerphoneOn(); sk.henrichg.phoneprofilesplus.PhoneCallBroadcastReceiver.audioManager.setSpeakerphoneOn(((profile._volumeSpeakerPhone) == 1)); sk.henrichg.phoneprofilesplus.PhoneCallBroadcastReceiver.speakerphoneSelected = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8811/buggy-version/phoneProfilesPlus.src.main.java.sk.henrichg.phoneprofilesplus.PhoneCallBroadcastReceiver.java", "BodyUseAPI": ["android.media.AudioManager.setSpeakerphoneOn(((profile._volumeSpeakerPhone) == 1))"], "Fixed commit": "837737060d9f58cac2ba16823ac14318d63a644d", "Url": "https://api.github.com/repos/henrichg/PhoneProfilesPlus", "Date": "2015-04-05T21:58:56Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.emf.ecoretools.ale.ALEInterpreter.eval(java.lang.String,java.util.ArrayList,org.eclipse.emf.ecoretools.ale.ide.WorkbenchDsl)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((result.getDiagnostic().getMessage()) != null) { java.lang.System.out.println(result.getDiagnostic().getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1226/buggy-version/plugins.org.eclipse.emf.ecoretools.ale.ide.src.org.eclipse.emf.ecoretools.ale.ide.launchconfig.RunModelAction.java", "BodyUseAPI": ["result.getDiagnostic().getMessage()", "org.eclipse.sirius.common.tools.api.interpreter.IInterpreterWithDiagnostic.IEvaluationResult.getDiagnostic()", "java.io.PrintStream.println(result.getDiagnostic().getMessage())"], "Fixed commit": "084b1fde611a4f994cbba195ad4bc388a0d9a680", "Url": "https://api.github.com/repos/gemoc/ale-lang", "Date": "2017-06-12T14:05:00Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nbrTD == null) || ((nbrTD.length()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2886/buggy-version/src.main.java.com.github.Raouf16.model.utils.preference.Preference.java", "BodyUseAPI": [], "Fixed commit": "cde4cd4862a25264ed03d4266077d746d2e51393", "Url": "https://api.github.com/repos/Raouf16/teach_spreadsheets", "Date": "2017-05-21T12:25:06Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nbrYear == null) || ((nbrYear.length()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2886/buggy-version/src.main.java.com.github.Raouf16.model.utils.preference.Preference.java", "BodyUseAPI": [], "Fixed commit": "cde4cd4862a25264ed03d4266077d746d2e51393", "Url": "https://api.github.com/repos/Raouf16/teach_spreadsheets", "Date": "2017-05-21T12:25:06Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((temp) < 32) { java.lang.System.out.println((((\"X:\" + ((col) * (tileSizeW))) + \" Y:\") + ((row) * (tileSizeH)))); (temp)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6542/buggy-version/HGDArcadia.MyGame.src.Tile.java", "BodyUseAPI": [], "Fixed commit": "b0ff4362f78a6f933751a439f2c97bc99cb8a8b6", "Url": "https://api.github.com/repos/ejmoore/Arcadia3", "Date": "2016-01-24T20:07:46Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.buildServer.clouds.vmware.connector.VirtualMachine.getMOR()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (mor != null) { jetbrains.buildServer.clouds.vmware.connector.VMWareApiConnectorImpl.LOG.debug((((\"Unable to process \" + (mor.getType())) + \" \") + (mor.getVal()))); }else { jetbrains.buildServer.clouds.vmware.connector.VMWareApiConnectorImpl.LOG.debug(\"Null MOR passed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5707/buggy-version/cloud-vmware-server.src.main.java.jetbrains.buildServer.clouds.vmware.connector.VMWareApiConnectorImpl.java", "BodyUseAPI": ["jetbrains.buildServer.clouds.vmware.connector.ManagedObjectReference.getVal()", "jetbrains.buildServer.clouds.vmware.connector.ManagedObjectReference.getType()", "com.intellij.openapi.diagnostic.Logger.debug((((\"Unable to process \" + (mor.getType())) + \" \") + (mor.getVal())))"], "Fixed commit": "ba13f543ec51d07835db591a1eb017e92a62f37b", "Url": "https://api.github.com/repos/JetBrains/teamcity-vmware-plugin", "Date": "2016-04-29T14:47:33Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (processImageCheckbox.getState()) { isProcessing = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7124/buggy-version/Commander.src.group2.sdp.pc.controlstation.CommanderControlStation.java", "BodyUseAPI": [], "Fixed commit": "da1593149466d1424cd294fdb57fb83fa2e8802f", "Url": "https://api.github.com/repos/andalucia/PDS2", "Date": "2012-03-19T15:42:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zhan_dui.dictionary.datacenter.DictionaryDataCenter.getDictionaryViewByPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((view.getParent()) != null) { android.view.ViewGroup parent = ((android.view.ViewGroup) (view.getParent())); parent.removeView(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7398/buggy-version/src.com.zhan_dui.dictionary.pageradapter.QueryManageFragmentPager.java", "BodyUseAPI": ["android.view.ViewGroup.removeView(android.view.View)", "android.view.View.getParent()"], "Fixed commit": "d79634341ce62381cc802521c10d699b8ca70a7c", "Url": "https://api.github.com/repos/xuanqinanhai/little-bear-dictionary", "Date": "2013-06-10T09:07:58Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((internalDate) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3940/buggy-version/src.main.java.de.jformchecker.elements.DateInputSelectCompound.java", "BodyUseAPI": [], "Fixed commit": "33efc673ed5f9787a31af5f02c0dda1870e4fd7a", "Url": "https://api.github.com/repos/jochen777/jFormchecker", "Date": "2017-02-15T17:50:44Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.box.isInitialized())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8275/buggy-version/src.org.yogpstop.qp.TileQuarry.java", "BodyUseAPI": [], "Fixed commit": "f68a17c6642652bd38cf4d6757209f00d4a465cb", "Url": "https://api.github.com/repos/yogpstop/QuarryPlus", "Date": "2013-08-06T17:07:49Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(((LevelSelector.selected) + 1),LevelSelector.nbLevels)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newl < (LevelSelector.nbLevels)) { LevelSelector.selected = newl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5302/buggy-version/src.view.Level.java", "BodyUseAPI": [], "Fixed commit": "61ff2f975d780acd0be8f704cd8e0165054108d6", "Url": "https://api.github.com/repos/Alexis-D/Block-Dutz", "Date": "2011-05-20T07:21:41Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (note.isPersonalizedMode()) { broadcastParagraphs(p.getUserParagraphMap(), p); }else { broadcast(note.getId(), new org.apache.zeppelin.notebook.socket.Message(org.apache.zeppelin.notebook.socket.Message.OP.PARAGRAPH).put(\"paragraph\", p)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9223/buggy-version/zeppelin-server.src.main.java.org.apache.zeppelin.socket.NotebookServer.java", "BodyUseAPI": ["org.apache.zeppelin.socket.NotebookServer.broadcast(note.getId(),new org.apache.zeppelin.notebook.socket.Message(org.apache.zeppelin.notebook.socket.Message.OP.PARAGRAPH).put(\"paragraph\", p))", "org.apache.zeppelin.notebook.Note.getId()"], "Fixed commit": "a7c91f1ba037a1642eab2cf1f5719d0cb56f58a0", "Url": "https://api.github.com/repos/jongyoul/zeppelin", "Date": "2016-12-13T16:12:50Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sourceType.isArray())) { input = new java.lang.Object[]{ input }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6252/buggy-version/src.main.java.org.mvel2.conversion.ArrayHandler.java", "BodyUseAPI": [], "Fixed commit": "c9355aa52092e1bb933e54cb918af6ab3e99aac9", "Url": "https://api.github.com/repos/mvel/mvel", "Date": "2011-09-08T21:55:54Z"},
{"Line": "=>832", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_protocolFile.getChildElement(\"speciesDefaults\")) != null) { speciesDefaults = new utils.XMLParser(_protocolFile.getChildElement(\"speciesDefaults\")); }else { speciesDefaults = new utils.XMLParser(new org.jdom.Element(\"speciesDefaults\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1879/buggy-version/src.simulator.Simulator.java", "BodyUseAPI": ["utils.XMLParser.getChildElement(java.lang.String)"], "Fixed commit": "ed4355dea2428b691db5d7d6622841d5fc5d8986", "Url": "https://api.github.com/repos/kreft/iDynoMiCS", "Date": "2013-10-08T20:26:23Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null == propsInput) { propsInput = java.lang.ClassLoader.getSystemResourceAsStream(gobblin.runtime.util.ClustersNames.URL_TO_NAME_MAP_RESOURCE_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3773/buggy-version/gobblin-runtime.src.main.java.gobblin.runtime.util.ClustersNames.java", "BodyUseAPI": [], "Fixed commit": "a05959db177318e1376ea8de1f5e72af4e80fb51", "Url": "https://api.github.com/repos/chavdar/gobblin-1", "Date": "2015-07-29T22:22:13Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a.isDoubleTargeter()) && (owner.is(shared.roles.Witch.class))) { shared.logic.support.action.DoubleAction da = ((shared.logic.support.action.DoubleAction) (a)); if (((da.ability2) == ability) && ((da.target2) != null)) list.add(da.target2); else if (((da.ability) == ability) && ((da.target) != null)) list.add(da.target); }else if (a.isSameAbility(ability)) { list.add(a.getTargets()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6807/buggy-version/logic.support.action.ActionList.java", "BodyUseAPI": ["shared.logic.support.action.Action.isSameAbility(int)", "shared.logic.PlayerList.add(a.getTargets())", "shared.logic.support.action.Action.getTargets()"], "Fixed commit": "6fef3e9297deb24c2e5e9a100c18102b5bbbbf54", "Url": "https://api.github.com/repos/vossnarrator/TheNarrator", "Date": "2016-07-09T07:41:24Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (totalWordCountsPerClass.get(classDirectory).containsKey(word)) { totalWordCountsPerClass.get(classDirectory).replace(word, ((totalWordCountsPerClass.get(classDirectory).get(word)) + 1)); }else { totalWordCountsPerClass.get(classDirectory).put(word, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8588/buggy-version/src.classifier.controller.VocabularyBuilder.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Integer>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Integer>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.replace(java.lang.String,int)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Integer>>.get(java.lang.String)"], "Fixed commit": "e16c7de1737247ff849165c9fe648373beb6cf34", "Url": "https://api.github.com/repos/wijtserekker/AIInteractiveLearner", "Date": "2017-01-21T14:02:31Z"},
{"Line": "=>2791", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blockObject instanceof com.emc.storageos.model.block.BlockSnapshotSessionRestRep) { com.emc.storageos.model.block.BlockSnapshotSessionRestRep snapshotSession = ((com.emc.storageos.model.block.BlockSnapshotSessionRestRep) (blockObject)); return getMessage(\"block.snapshotsession.label\", snapshotSession.getName(), com.emc.sa.asset.providers.BlockProvider.getBlockSnapshotSessionParentVolumeName(volumeNames, snapshotSession)); }else if (blockObject instanceof com.emc.storageos.model.block.BlockMirrorRestRep) { com.emc.storageos.model.block.BlockMirrorRestRep mirror = ((com.emc.storageos.model.block.BlockMirrorRestRep) (blockObject)); return getMessage(\"block.volume\", mirror.getName(), mirror.getProvisionedCapacity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1345/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.asset.providers.BlockProvider.java", "BodyUseAPI": [], "Fixed commit": "456cdff28ee21f3f30701bdefd632b61955a0a72", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-05-26T13:07:41Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.eclipse.tcf.te.tcf.locator.interfaces.nodes.IPeerModel>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (node != null) { org.eclipse.tcf.te.tcf.locator.interfaces.nodes.ILocatorModel model = node.getModel(); org.eclipse.tcf.te.tcf.locator.interfaces.services.ILocatorModelPeerNodeQueryService queryService = model.getService(org.eclipse.tcf.te.tcf.locator.interfaces.services.ILocatorModelPeerNodeQueryService.class); queryService.queryRemoteServices(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1776/buggy-version/target_explorer.plugins.org.eclipse.tcf.te.tcf.ui.src.org.eclipse.tcf.te.tcf.ui.internal.adapters.PeerModelFactory.java", "BodyUseAPI": ["org.eclipse.tcf.te.tcf.locator.interfaces.services.ILocatorModelPeerNodeQueryService.queryRemoteServices(org.eclipse.tcf.te.tcf.locator.interfaces.nodes.IPeerModel)", "org.eclipse.tcf.te.tcf.locator.interfaces.nodes.IPeerModel.getModel()"], "Fixed commit": "22e0d5a3cf1db36f97926012dca85204b18a59f9", "Url": "https://api.github.com/repos/wind-river-cdt/tcf", "Date": "2012-05-08T14:49:43Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lightsperfections.slackrelay.dao.HistoryEntryDao.findHistoryEntriesByUserName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((historyEntries.size()) < 1) { return \"Not enough history to report on.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8239/buggy-version/src.main.java.com.lightsperfections.slackrelay.services.logos.Stats.java", "BodyUseAPI": [], "Fixed commit": "890be05e82179b918def16ad62d212f6ff5bd827", "Url": "https://api.github.com/repos/jonhewz/slackrelay", "Date": "2016-02-13T05:51:48Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trip.getPhoto()) != null) { newTrip.setPhoto(trip.getPhoto().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/349/buggy-version/src.main.java.ru.kpfu.itis.dmitryivanov.response.TripResponse.java", "BodyUseAPI": ["ru.kpfu.itis.dmitryivanov.model.Trip.getPhoto()", "ru.kpfu.itis.dmitryivanov.response.TripResponse.setPhoto(trip.getPhoto().getId())", "trip.getPhoto().getId()"], "Fixed commit": "ea7599988432a595923f49d53c7d40178cdbd012", "Url": "https://api.github.com/repos/Flexuss/TeamTravel", "Date": "2017-12-16T20:59:22Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.starsautohost.starsapi.tools.HFileMerger.PlanetInfo.merge()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pblock.hasStarbase) && ((starbaseDesigns[pblock.owner][pblock.starbaseDesign]) == null)) { java.lang.System.out.println((((\"Warning, starbase omitted from planet \" + (pblock.planetNumber)) + \" due to missing starbase design for player \") + (pblock.owner))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7434/buggy-version/src.main.java.org.starsautohost.starsapi.tools.HFileMerger.java", "BodyUseAPI": ["java.io.PrintStream.println((((\"Warning, starbase omitted from planet \" + (pblock.planetNumber)) + \" due to missing starbase design for player \") + (pblock.owner)))"], "Fixed commit": "e1be0f2b220ccb858c4216b9e3d9b464c85fb3fb", "Url": "https://api.github.com/repos/stars-4x/starsapi", "Date": "2017-02-20T05:32:53Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currency.getCurrencyCode().equals(\"VND\")) { return new java.lang.String(((\"\" + amount) + \"VND\")); }else { return currencyInstance.format(amount.doubleValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1383/buggy-version/shopizer.sm-core.src.main.java.com.salesmanager.core.utils.ProductPriceUtils.java", "BodyUseAPI": [], "Fixed commit": "9033a4f4b9f674169fe221c9a8c29b41f467a05b", "Url": "https://api.github.com/repos/phicuong08/shopizer", "Date": "2015-10-19T08:09:39Z"},
{"Line": "=>957", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cell.isSelected()) selectedCells.add(cell.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5491/buggy-version/src.main.java.Epigraph.GraphletImage.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(cell.getId())", "epigraph.EpiCell.getId()"], "Fixed commit": "e1e983d1e8697d3727e5f2eb7afc6fbb61dd774f", "Url": "https://api.github.com/repos/ComplexOrganizationOfLivingMatter/Epigraph", "Date": "2017-02-22T15:38:03Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (postFix.equals(\"\")) { return new seedu.address.logic.commands.IncorrectCommand(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8670/buggy-version/src.main.java.seedu.address.logic.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "d89356425bed47e90e4150a003baa7a7c4843f5d", "Url": "https://api.github.com/repos/CS2103AUG2016-F11-C3/main", "Date": "2016-10-19T18:15:45Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (replacementIndex >= (elements.length())) { replacementIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8550/buggy-version/core.src.main.java.org.renjin.primitives.subset.SubscriptOperation.java", "BodyUseAPI": [], "Fixed commit": "a17114d89afe82489896154ea958e476de0f235e", "Url": "https://api.github.com/repos/bedatadriven/renjin", "Date": "2013-11-07T21:57:01Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type == ')') && ((currentParen) == (storedParen))) { currentState = com.denimgroup.threadfix.framework.impl.dotNet.DotNetControllerParser.State.IN_ACTION_BODY; methodBraceLevel = currentCurlyBrace; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/448/buggy-version/threadfix-ham.src.main.java.com.denimgroup.threadfix.framework.impl.dotNet.DotNetControllerParser.java", "BodyUseAPI": [], "Fixed commit": "0e4a7c3aa0e54ddfe47b61de239acc7b9ce4d318", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2014-08-28T16:01:17Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stone.vega.library.VegaLayoutManager.getItemCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (itemCount == 0) { maxScroll = 0; }else { computeMaxScroll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/112/buggy-version/VegaLayoutManager.library.src.main.java.com.stone.vega.library.VegaLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "073162c2f8075553b989e292719124898ead088a", "Url": "https://api.github.com/repos/xmuSistone/VegaLayoutManager", "Date": "2017-11-30T03:50:48Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.UNAUTHORIZED)) { dismissLoadingDialog(); android.widget.Toast t = android.widget.Toast.makeText(this, com.owncloud.android.utils.ErrorMessageAdapter.getErrorCauseMessage(result, operation, getResources()), Toast.LENGTH_LONG); t.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6643/buggy-version/src.com.owncloud.android.ui.activity.FileActivity.java", "BodyUseAPI": ["com.owncloud.android.utils.ErrorMessageAdapter.getErrorCauseMessage(com.owncloud.android.lib.common.operations.RemoteOperationResult,com.owncloud.android.lib.common.operations.RemoteOperation,getResources())", "android.widget.Toast.makeText(com.owncloud.android.ui.activity.FileActivity,com.owncloud.android.utils.ErrorMessageAdapter.getErrorCauseMessage(result, operation, getResources()),Toast.LENGTH_LONG)"], "Fixed commit": "bdc4de75bc7f3b5d744b7b913f23c537fa802722", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2014-05-28T15:14:21Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flightgear.clgen.listener.ItemListener.lookup(((org.antlr.v4.runtime.Token) (ctx.getChild(0).getPayload())))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (symbol != null) symbol.setType(Type.STRING);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1692/buggy-version/src.main.java.org.flightgear.clgen.listener.ItemListener.java", "BodyUseAPI": ["org.flightgear.clgen.symbol.Symbol.setType(Type.STRING)"], "Fixed commit": "d31eac52291ca1172f83378490d1268f7deb8e19", "Url": "https://api.github.com/repos/sanhozay/CLGen", "Date": "2017-05-20T11:36:58Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flightgear.clgen.listener.ItemListener.lookup(((org.antlr.v4.runtime.Token) (ctx.getChild(0).getPayload())))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (symbol != null) symbol.setType(Type.INT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1692/buggy-version/src.main.java.org.flightgear.clgen.listener.ItemListener.java", "BodyUseAPI": ["org.flightgear.clgen.symbol.Symbol.setType(Type.INT)"], "Fixed commit": "d31eac52291ca1172f83378490d1268f7deb8e19", "Url": "https://api.github.com/repos/sanhozay/CLGen", "Date": "2017-05-20T11:36:58Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flightgear.clgen.listener.ItemListener.lookup(((org.antlr.v4.runtime.Token) (ctx.getChild(2).getPayload())))", "org.flightgear.clgen.listener.ItemListener.lookup(((org.antlr.v4.runtime.Token) (ctx.getChild(0).getPayload())))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((lval != null) && (rval != null)) lval.setType(rval.getType());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1692/buggy-version/src.main.java.org.flightgear.clgen.listener.ItemListener.java", "BodyUseAPI": ["org.flightgear.clgen.symbol.Symbol.getType()", "org.flightgear.clgen.symbol.Symbol.setType(rval.getType())"], "Fixed commit": "d31eac52291ca1172f83378490d1268f7deb8e19", "Url": "https://api.github.com/repos/sanhozay/CLGen", "Date": "2017-05-20T11:36:58Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flightgear.clgen.listener.ItemListener.lookup(((org.antlr.v4.runtime.Token) (ctx.getChild(0).getPayload())))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (symbol != null) symbol.setType(Type.DOUBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1692/buggy-version/src.main.java.org.flightgear.clgen.listener.ItemListener.java", "BodyUseAPI": ["org.flightgear.clgen.symbol.Symbol.setType(Type.DOUBLE)"], "Fixed commit": "d31eac52291ca1172f83378490d1268f7deb8e19", "Url": "https://api.github.com/repos/sanhozay/CLGen", "Date": "2017-05-20T11:36:58Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flightgear.clgen.listener.ItemListener.lookup(((org.antlr.v4.runtime.Token) (ctx.getChild(0).getPayload())))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (symbol != null) symbol.setType(Type.BOOL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1692/buggy-version/src.main.java.org.flightgear.clgen.listener.ItemListener.java", "BodyUseAPI": ["org.flightgear.clgen.symbol.Symbol.setType(Type.BOOL)"], "Fixed commit": "d31eac52291ca1172f83378490d1268f7deb8e19", "Url": "https://api.github.com/repos/sanhozay/CLGen", "Date": "2017-05-20T11:36:58Z"},
{"Line": "=>966", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hu.rgai.android.messageproviders.SimpleEmailMessageProvider.getFolder(java.util.HashMap<hu.rgai.android.messageproviders.SimpleEmailMessageProvider.AccountFolder, com.sun.mail.imap.IMAPFolder>,hu.rgai.android.beens.EmailAccount,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (folder == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/836/buggy-version/src.hu.rgai.android.messageproviders.SimpleEmailMessageProvider.java", "BodyUseAPI": [], "Fixed commit": "563a7d604a4a217befd2a9f1cdb379389aa03a3f", "Url": "https://api.github.com/repos/k-kojak/yako", "Date": "2014-05-20T14:25:02Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getContextClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (tccl == null) { clazz = ((java.lang.Class<org.pac4j.core.config.ConfigFactory>) (java.lang.Class.forName(factoryName))); }else { clazz = ((java.lang.Class<org.pac4j.core.config.ConfigFactory>) (java.lang.Class.forName(factoryName, true, tccl))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8600/buggy-version/pac4j-core.src.main.java.org.pac4j.core.config.ConfigBuilder.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String,boolean,java.lang.ClassLoader)"], "Fixed commit": "94747130d399783aaf3ca9cc75d21b4f6806117b", "Url": "https://api.github.com/repos/pac4j/pac4j", "Date": "2016-05-13T22:42:19Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getContextClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (tccl == null) { constructor = ((java.lang.reflect.Constructor<? extends org.pac4j.core.profile.UserProfile>) (java.lang.Class.forName(completeName).getDeclaredConstructor())); }else { constructor = ((java.lang.reflect.Constructor<? extends org.pac4j.core.profile.UserProfile>) (java.lang.Class.forName(completeName, true, tccl).getDeclaredConstructor())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8600/buggy-version/pac4j-core.src.main.java.org.pac4j.core.profile.ProfileHelper.java", "BodyUseAPI": ["java.lang.Class<?>.getDeclaredConstructor()", "java.lang.Class.forName(java.lang.String,boolean,java.lang.ClassLoader)"], "Fixed commit": "94747130d399783aaf3ca9cc75d21b4f6806117b", "Url": "https://api.github.com/repos/pac4j/pac4j", "Date": "2016-05-13T22:42:19Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getActivity().findViewById(R.id.questionListView)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (qList != null) { qList.invalidate(); qList.setAdapter(new com.ualberta.team17.view.ListFragment.QuestionListAdapter(this.getActivity(), R.id.questionListView, mIR.getCurrentResults())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3228/buggy-version/moqa.src.com.ualberta.team17.view.ListFragment.java", "BodyUseAPI": ["android.widget.ListView.invalidate()", "android.widget.ListView.setAdapter(com.ualberta.team17.view.ListFragment.QuestionListAdapter)"], "Fixed commit": "1d956547f8e2fb440f551102d061241ef6d0a7d8", "Url": "https://api.github.com/repos/j-rewerts/Team17Project", "Date": "2014-11-19T23:41:22Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.invoke(T)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sMap == null) { sMap = new com.emc.storageos.dbcli.StringMap(); pd.getWriteMethod().invoke(object, sMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6944/buggy-version/tools.dbcli.src.main.java.com.emc.storageos.dbcli.DbCli.java", "BodyUseAPI": [], "Fixed commit": "16d86d4fc6f1a91d55cd0a0b47ea787806e18659", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-10-06T15:50:41Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((topic.getPostedBy()) != null) && ((topic.getPostedBy()) > 0)) { com.registryKit.user.User userDetails = userDAO.getUserById(topic.getPostedBy()); topic.setPostedByName((((userDetails.getFirstName()) + \" \") + (userDetails.getLastName()))); if ((topic.getLastPostBy()) != null) { com.registryKit.user.User lastPostUserDetails = userDAO.getUserById(topic.getLastPostBy()); topic.setLastPostByName((((lastPostUserDetails.getFirstName()) + \" \") + (lastPostUserDetails.getLastName()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4620/buggy-version/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.forum.forumManager.java", "BodyUseAPI": ["com.registryKit.forum.forumTopics.setPostedByName((((userDetails.getFirstName()) + \" \") + (userDetails.getLastName())))", "com.registryKit.user.userDAO.getUserById(topic.getPostedBy())", "com.registryKit.forum.forumTopics.getLastPostBy()", "com.registryKit.user.userDAO.getUserById(topic.getLastPostBy())", "com.registryKit.forum.forumTopics.getPostedBy()", "com.registryKit.forum.forumTopics.getLastPostBy()", "com.registryKit.forum.forumTopics.setLastPostByName((((lastPostUserDetails.getFirstName()) + \" \") + (lastPostUserDetails.getLastName())))"], "Fixed commit": "e18f34d86909256f29a3a3d416151f4f1c8c3162", "Url": "https://api.github.com/repos/bowlinktech/rr-mvn-repo", "Date": "2015-11-09T17:20:23Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) != null) { try { socket.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/364/buggy-version/app.src.main.java.androidcompanion.netcode.TCPClient.java", "BodyUseAPI": [], "Fixed commit": "f48d91fd86ccbbe847b5bdc4683e874c95ca3cc5", "Url": "https://api.github.com/repos/Altraya/AndroidCompanion", "Date": "2017-06-07T10:49:59Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dbf.isExist(p.hostUuid, org.zstack.header.host.HostVO.class))) { dbf.removeByPrimaryKey(vo.getId(), org.zstack.header.storage.primary.ImageCacheShadowVO.class); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2515/buggy-version/plugin.localstorage.src.main.java.org.zstack.storage.primary.local.LocalStorageImageCleaner.java", "BodyUseAPI": ["org.zstack.storage.primary.local.LocalStorageImageCleaner.removeByPrimaryKey(vo.getId(),java.lang.Class)"], "Fixed commit": "298d84fafb4ae34bfd9937643f169b8469ea5bf2", "Url": "https://api.github.com/repos/HeathHose/zstack", "Date": "2017-04-06T02:38:47Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parent == null) insertLayerGroup(layerGroup, parent, antecessor, first); else insertLayerGroup(layerGroup, parent, antecessor, layerGroups, first);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/738/buggy-version/src.org.deegree.portal.context.MapModel.java", "BodyUseAPI": ["org.deegree.portal.context.MapModel.insertLayerGroup(org.deegree.portal.context.LayerGroup,org.deegree.portal.context.LayerGroup,org.deegree.portal.context.MapModelEntry,java.util.List<org.deegree.portal.context.LayerGroup>,boolean)", "org.deegree.portal.context.MapModel.insertLayerGroup(org.deegree.portal.context.LayerGroup,org.deegree.portal.context.LayerGroup,org.deegree.portal.context.MapModelEntry,boolean)"], "Fixed commit": "a3dcae9aa964c7bc637b6ba3d6d583d101487ff4", "Url": "https://api.github.com/repos/lat-lon/deegree2-rev30957", "Date": "2014-02-14T14:50:51Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (res == null) return null; else if (res.terminatingStr.equals(\"return\")) return res;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5511/buggy-version/src.havaBol.Parser.java", "BodyUseAPI": ["res.terminatingStr.equals(java.lang.String)"], "Fixed commit": "eecd07e9f42ae526a72df5f106bfdeb0f0c240f8", "Url": "https://api.github.com/repos/CodeMonkeyReport/S2017_HavaBol_Compiler", "Date": "2017-04-21T15:50:34Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tdd.tracker.hobby.hobbytrackerincremental.database.DBHelper.db) == null) tdd.tracker.hobby.hobbytrackerincremental.database.DBHelper.db = tdd.tracker.hobby.hobbytrackerincremental.database.DBHelper.mInstance.getWritableDatabase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5430/buggy-version/app.src.main.java.tdd.tracker.hobby.hobbytrackerincremental.database.DBHelper.java", "BodyUseAPI": [], "Fixed commit": "6e0dd2ee841200ba1a0d93cf37e337e6f1324330", "Url": "https://api.github.com/repos/jpalvarezl/HobbyTracker", "Date": "2016-09-29T05:44:55Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (java.util.Objects.equals(value, io.github.xinyangpan.cucumber.element.BaseElement.NULL)) { this.keyValueMap.put(e.getKey(), null); }else { this.keyValueMap.put(e.getKey(), e.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3668/buggy-version/src.main.java.io.github.xinyangpan.cucumber.element.BaseElement.java", "BodyUseAPI": [], "Fixed commit": "4d3e618437a498e0fceed11de8f44552da32d87e", "Url": "https://api.github.com/repos/XinYang-Pan/cucumber-ext", "Date": "2017-05-15T03:15:49Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((players[id]) == null) { players[id] = new mwong.myprojects.rackocomputerplayers.Player1(rackoSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3613/buggy-version/src.mwong.myprojects.rackocomputerplayers.GatewayServerRackoComputerPlayers.java", "BodyUseAPI": [], "Fixed commit": "b0794d3062239d909a4a4d881a60148c5afdb8e1", "Url": "https://api.github.com/repos/mwong510ca/Racko_ComputerStrategy", "Date": "2017-05-06T23:49:48Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity instanceof org.bukkit.entity.Vehicle) mainOnly = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2791/buggy-version/src.main.java.ch.njol.skript.events.EvtClick.java", "BodyUseAPI": [], "Fixed commit": "ecd7930c00aa332986b706cecfa5fd73e656e529", "Url": "https://api.github.com/repos/SkriptLang/Skript", "Date": "2016-06-02T11:31:35Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.isEmpty())) { for (int i = 0; i < (s.length()); i++) { key = \"\" + (s.charAt(i)); word += key; if (currentNode.children.containsKey(key)) { currentNode = currentNode.children.get(key); }else { return null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6355/buggy-version/ghost_starter.app.src.main.java.com.google.engedu.ghost.TrieNode.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.charAt(int)"], "Fixed commit": "d4a6c742f9b8fe470aa37660fb62996f7c615109", "Url": "https://api.github.com/repos/GauthamMaraswami/google-applied-cs-with-android", "Date": "2017-06-19T17:41:34Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentNode.isWord) { isFound = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6355/buggy-version/ghost_starter.app.src.main.java.com.google.engedu.ghost.TrieNode.java", "BodyUseAPI": [], "Fixed commit": "d4a6c742f9b8fe470aa37660fb62996f7c615109", "Url": "https://api.github.com/repos/GauthamMaraswami/google-applied-cs-with-android", "Date": "2017-06-19T17:41:34Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((width) == 0) || ((height) == 0)) { g.drawLine(coordSys.mapX(virtualPoint[0].x, virtualPoint[0].y), coordSys.mapY(virtualPoint[0].x, virtualPoint[0].y), coordSys.mapX(virtualPoint[3].x, virtualPoint[3].y), coordSys.mapY(virtualPoint[3].x, virtualPoint[3].y)); }else { g.draw(shape1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3678/buggy-version/src.net.sourceforge.fidocadj.primitives.PrimitiveBezier.java", "BodyUseAPI": [], "Fixed commit": "152c69059d7e789d7cfb16008451d6bf50d03b81", "Url": "https://api.github.com/repos/DarwinNE/FidoCadJ", "Date": "2016-02-02T22:09:36Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(failedSteps.contains(currentStoryDescription))) { notifier.fireTestFinished(currentStoryDescription); if (currentStoryDescription.isTest()) (testCounter)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5945/buggy-version/src.main.java.de.codecentric.jbehave.junit.monitoring.JUnitScenarioReporter.java", "BodyUseAPI": ["org.junit.runner.Description.isTest()", "org.junit.runner.notification.RunNotifier.fireTestFinished(org.junit.runner.Description)"], "Fixed commit": "dacf259e9a5b1102e7884f225ef6fc682dbab94d", "Url": "https://api.github.com/repos/codecentric/jbehave-junit-runner", "Date": "2012-05-29T19:23:54Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.device) instanceof it.polito.elite.dog.core.library.model.devicecategory.Lamp) { ((it.polito.elite.dog.core.library.model.devicecategory.Lamp) (this.device)).notifyOn(); }else if ((this.device) instanceof it.polito.elite.dog.core.library.model.devicecategory.Buzzer) { ((it.polito.elite.dog.core.library.model.devicecategory.Buzzer) (this.device)).notifyOn(); }else ((it.polito.elite.dog.core.library.model.devicecategory.OnOffOutput) (this.device)).notifyOn();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9046/buggy-version/it.polito.elite.dog.drivers.modbus.onoffdevice.src.it.polito.elite.dog.drivers.modbus.onoffdevice.ModbusOnOffDeviceDriverInstance.java", "BodyUseAPI": [], "Fixed commit": "9dcda01967c6d1247de1391688bde03b1ec5290f", "Url": "https://api.github.com/repos/dog-gateway/modbus-drivers", "Date": "2014-05-19T11:38:30Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.device) instanceof it.polito.elite.dog.core.library.model.devicecategory.Lamp) { ((it.polito.elite.dog.core.library.model.devicecategory.Lamp) (this.device)).notifyOff(); }else if ((this.device) instanceof it.polito.elite.dog.core.library.model.devicecategory.Buzzer) { ((it.polito.elite.dog.core.library.model.devicecategory.Buzzer) (this.device)).notifyOff(); }else ((it.polito.elite.dog.core.library.model.devicecategory.OnOffOutput) (this.device)).notifyOff();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9046/buggy-version/it.polito.elite.dog.drivers.modbus.onoffdevice.src.it.polito.elite.dog.drivers.modbus.onoffdevice.ModbusOnOffDeviceDriverInstance.java", "BodyUseAPI": [], "Fixed commit": "9dcda01967c6d1247de1391688bde03b1ec5290f", "Url": "https://api.github.com/repos/dog-gateway/modbus-drivers", "Date": "2014-05-19T11:38:30Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (redeemPoint.isSelected()) { actorAssetRedeemPoints.add(redeemPoint.getActorAssetRedeemPoint()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4864/buggy-version/DAP.android.reference_wallet.fermat-dap-android-reference-wallet-asset-user-bitdubai.src.main.java.com.bitdubai.fermat_dap_android_wallet_asset_user_bitdubai.models.Data.java", "BodyUseAPI": ["java.util.List<com.bitdubai.fermat_dap_api.layer.dap_actor.redeem_point.interfaces.ActorAssetRedeemPoint>.add(redeemPoint.getActorAssetRedeemPoint())", "com.bitdubai.fermat_dap_android_wallet_asset_user_bitdubai.models.RedeemPoint.getActorAssetRedeemPoint()"], "Fixed commit": "d918173f342cd9c55ae411f4a287df1df9f8635b", "Url": "https://api.github.com/repos/acostarodrigo/fermat", "Date": "2016-02-17T01:00:02Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) != null) { parameters.add(new org.apache.http.message.BasicNameValuePair(\"id\", id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4452/buggy-version/src.main.java.com.hackerearth.heapi.sdk.options.BaseOptions.java", "BodyUseAPI": [], "Fixed commit": "f98d24024fbd3e7eae3a7f58c4a3094d4bdd86ca", "Url": "https://api.github.com/repos/HackerEarth/he-sdk-java", "Date": "2015-03-03T07:38:19Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requiredMissions) != null) { for (com.playposse.peertopeeroxygen.backend.peerToPeerOxygenApi.model.MissionBean missionBean : requiredMissions) { if (!(missionBean.getId().equals(com.playposse.peertopeeroxygen.android.widgets.RequiredMissionListView.BLANK_MISSION_ID))) { ids.add(missionBean.getId()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8955/buggy-version/app.src.main.java.com.playposse.peertopeeroxygen.android.widgets.RequiredMissionListView.java", "BodyUseAPI": [], "Fixed commit": "e1b48ead713d153a905e17f1510063ec406f0f59", "Url": "https://api.github.com/repos/thomasfischersm/PeerToPeerOxygen", "Date": "2016-08-13T04:55:24Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.dyel_net.RoutineView.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status == \"routines\") { cli_routineView_routines(TV); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3627/buggy-version/src.com.example.dyel_net.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bd46cdd42fb705f548ce697f98302d685204d497", "Url": "https://api.github.com/repos/znicholson92/DYELNet2", "Date": "2013-11-11T03:45:40Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((present2glass.Main.glass) != null) { present2glass.Main.glass.stopPresentation(); present2glass.Main.glass.endConnection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5007/buggy-version/src.present2glass.Main.java", "BodyUseAPI": [], "Fixed commit": "45e64100e16ccb572da922006f4050bb0ed9518d", "Url": "https://api.github.com/repos/blake-newman/Present2Glass_Client", "Date": "2014-11-04T13:54:20Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((present2glass.Main.server) != null) present2glass.Main.server.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5007/buggy-version/src.present2glass.Main.java", "BodyUseAPI": [], "Fixed commit": "45e64100e16ccb572da922006f4050bb0ed9518d", "Url": "https://api.github.com/repos/blake-newman/Present2Glass_Client", "Date": "2014-11-04T13:54:20Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((WifiP2PBroadcastReceiver.startGameAsyncTask) != null) WifiP2PBroadcastReceiver.startGameAsyncTask.sendMessage(\"cancel\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8855/buggy-version/app.src.main.java.ss090310.etf.ac.bg.rs.memorija_diplomski.MultiplayerResultsActivity.java", "BodyUseAPI": [], "Fixed commit": "e7677afc9170aca71a4ea40e10c6f48da49fd68a", "Url": "https://api.github.com/repos/f4n5t3/Memorija_Diplomski", "Date": "2017-08-11T17:56:25Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lanMultiplayer) MultiPlayerLobbyActivity.mReceiver.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8855/buggy-version/app.src.main.java.ss090310.etf.ac.bg.rs.memorija_diplomski.GameGridAdapter.java", "BodyUseAPI": [], "Fixed commit": "e7677afc9170aca71a4ea40e10c6f48da49fd68a", "Url": "https://api.github.com/repos/f4n5t3/Memorija_Diplomski", "Date": "2017-08-11T17:56:25Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jubula.client.ui.widgets.DirectCombo<java.lang.String>.getSelectedObject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (selectedObject != null) { org.eclipse.core.runtime.IStatus connectionStatus = org.eclipse.jubula.client.alm.mylyn.core.utils.ALMAccess.testConnection(selectedObject); if (connectionStatus.isOK()) { m_connectionTest.setImage(IconConstants.STEP_OK_IMAGE); setErrorMessage(null); }else { m_connectionTest.setImage(IconConstants.ERROR_IMAGE); setErrorMessage(connectionStatus.getMessage()); } }else { m_connectionTest.setImage(null); setErrorMessage(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1064/buggy-version/org.eclipse.jubula.client.ui.rcp.src.org.eclipse.jubula.client.ui.rcp.properties.ProjectALMPropertyPage.java", "BodyUseAPI": ["org.eclipse.jubula.client.alm.mylyn.core.utils.ALMAccess.testConnection(java.lang.String)"], "Fixed commit": "4a1bbdd1b2ceeee7e05573b047b9cb24fd4713fb", "Url": "https://api.github.com/repos/eclipse/jubula.core", "Date": "2015-01-16T15:11:37Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (parent.equals(ch.se.inf.ethz.jcd.batman.io.VDiskFile.PATH_SEPARATOR)) { this.pathname = java.lang.String.format(\"%s%s\", ch.se.inf.ethz.jcd.batman.io.VDiskFile.PATH_SEPARATOR, child); }else { this.pathname = java.lang.String.format(\"%s%s%s\", parent, IVirtualDisk.PATH_SEPARATOR, child); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5845/buggy-version/src.ch.se.inf.ethz.jcd.batman.io.VDiskFile.java", "BodyUseAPI": [], "Fixed commit": "2dff329aa3038cd735af9445c788c011b10a45da", "Url": "https://api.github.com/repos/groggi/eth-jcd", "Date": "2013-04-05T12:59:28Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parentPath.isEmpty()) { parentPath = ch.se.inf.ethz.jcd.batman.io.VDiskFile.PATH_SEPARATOR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5845/buggy-version/src.ch.se.inf.ethz.jcd.batman.io.VDiskFile.java", "BodyUseAPI": [], "Fixed commit": "2dff329aa3038cd735af9445c788c011b10a45da", "Url": "https://api.github.com/repos/groggi/eth-jcd", "Date": "2013-04-05T12:59:28Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.endsWith(\"/\")) { urlString += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8522/buggy-version/hclient.src.main.java.hclient.RequestFactory.java", "BodyUseAPI": [], "Fixed commit": "0d69285343dc6fe8b275d3f3c1d4227df77e72c5", "Url": "https://api.github.com/repos/mozvip/hclient", "Date": "2015-09-20T09:27:49Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(val)) { val = io.vov.vitamio.utils.CPU.cpuinfo.get(\"model name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/745/buggy-version/vitamio.src.io.vov.vitamio.utils.CPU.java", "BodyUseAPI": [], "Fixed commit": "c10f0949cb0772c5ac819e491c10098a8f09730d", "Url": "https://api.github.com/repos/yiPATH/VitamioBundle", "Date": "2014-07-04T07:30:03Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mCursorRightBoundary) > 0) { if (status == (com.dolphinwang.switchbutton.SwitchButton.STATUS.ON)) { mScroller.startScroll(((int) (mCursorLocation)), 0, ((int) ((mCursorRightBoundary) - (mCursorLocation))), mCursorMoveDuration); }else { mScroller.startScroll(((int) (mCursorLocation)), 0, ((int) ((mCursorLeftBoundary) - (mCursorLocation))), mCursorMoveDuration); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2192/buggy-version/app.src.main.java.com.dolphinwang.switchbutton.SwitchButton.java", "BodyUseAPI": ["android.widget.Scroller.startScroll(float,int,float,int)"], "Fixed commit": "1c0ffda352a6a97348ff877b5f559ab8a75e7b72", "Url": "https://api.github.com/repos/dolphinwang/SwitchButton", "Date": "2014-07-15T11:36:55Z"},
{"Line": "=>1582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.endsWith(java.io.File.separator)) { return path + f; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1093/buggy-version/components.formats-gpl.src.loci.formats.in.FV1000Reader.java", "BodyUseAPI": [], "Fixed commit": "22029b5d8ccdec99d63b17d3f566054e547b5eb0", "Url": "https://api.github.com/repos/sbesson/bioformats", "Date": "2015-04-08T20:55:16Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLobby) != null) { for (edu.byu.cs.team18.tickettoride.GameInfo gi : joinedGamesList.getList()) { if (gi.getGameID().equals(currentLobby.getGameID())) { setCurrentLobby(gi); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8508/buggy-version/app.src.main.java.edu.byu.cs.team18.tickettoride.ClientModel.java", "BodyUseAPI": [], "Fixed commit": "846c6a08b9bb6b179e58b9771737513daada7acc", "Url": "https://api.github.com/repos/Team18Incorporated/Client", "Date": "2017-11-27T17:25:19Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getParent()) instanceof org.apache.flex.compiler.tree.as.IMemberAccessExpressionNode) { write(node.getName()); }else { java.lang.String name = randori.compiler.internal.utils.MetaDataUtils.getExportQualifiedName(definition); write(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4836/buggy-version/src.main.java.randori.compiler.internal.codegen.js.emitter.IdentifierEmitter.java", "BodyUseAPI": ["randori.compiler.internal.codegen.js.emitter.IdentifierEmitter.write(node.getName())", "org.apache.flex.compiler.tree.as.IIdentifierNode.getName()"], "Fixed commit": "235646f217b70e87356d88c415d30e54713e7bb6", "Url": "https://api.github.com/repos/RandoriAS/randori-compiler", "Date": "2013-08-12T11:25:01Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.readyState) != (ReadyState.OPENING)) && ((this.readyState) != (ReadyState.OPEN))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5109/buggy-version/src.main.java.io.socket.engineio.client.transports.WebSocket.java", "BodyUseAPI": [], "Fixed commit": "989c9649b2dfa176e31bc3bd474162c0960ad246", "Url": "https://api.github.com/repos/chendrak/engine.io-client-java", "Date": "2016-07-25T23:30:51Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (IndexOfFirstQuestionMark == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6878/buggy-version/src.chartparsing.lcfrs.SrcgEarleyComplete.java", "BodyUseAPI": [], "Fixed commit": "216a04ead1f5e1bd003c9e1c422406a775bbb4c2", "Url": "https://api.github.com/repos/SamyaDaleh/CL-Toolbox", "Date": "2017-08-02T19:46:05Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.getVisibility()) == (android.view.View.VISIBLE)) { list.setVisibility(View.GONE); spinnerFrame.setVisibility(RelativeLayout.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1310/buggy-version/app.src.main.java.com.grp8.weatherapp.Fragments.MainFragment.java", "BodyUseAPI": ["android.widget.ListView.setVisibility(View.GONE)"], "Fixed commit": "1593ccfde010b1b160800840e0ceff4e29f03ae8", "Url": "https://api.github.com/repos/LasseOnTheHub/WeatherApp", "Date": "2017-01-07T11:17:08Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.parent.management.ManagementApplication.specialMonitorList) != null) { ManagementApplication.specialMonitorList.clear(); com.parent.management.ManagementApplication.specialMonitorList = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3449/buggy-version/src.com.parent.management.service.MonitorService.java", "BodyUseAPI": [], "Fixed commit": "941d663603c0f9dae13f2bbdb4308d35591bcaff", "Url": "https://api.github.com/repos/GloriaGuo/Management", "Date": "2013-04-09T02:31:36Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.parent.management.ManagementApplication.commonMonitorList) != null) { ManagementApplication.commonMonitorList.clear(); com.parent.management.ManagementApplication.commonMonitorList = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3449/buggy-version/src.com.parent.management.service.MonitorService.java", "BodyUseAPI": [], "Fixed commit": "941d663603c0f9dae13f2bbdb4308d35591bcaff", "Url": "https://api.github.com/repos/GloriaGuo/Management", "Date": "2013-04-09T02:31:36Z"},
{"Line": "=>1317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmuc.openiec61850.ServerModel.getDataSet(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dataSet == null) { dataSet = nonPersistentDataSets.get(dataSetRef); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9066/buggy-version/src.main.java.org.openmuc.openiec61850.ServerAssociation.java", "BodyUseAPI": [], "Fixed commit": "6ed7849a1a5b86531ab821fea8701cdc7a6f2245", "Url": "https://api.github.com/repos/openmuc/openiec61850", "Date": "2017-09-14T08:11:11Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (userAvatar == null) { userAvatar = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6928/buggy-version/app.src.main.java.org.stepic.droid.ui.adapters.CommentsAdapter.java", "BodyUseAPI": [], "Fixed commit": "f6455592ad357f25b1e0b1f95b278a77a935f384", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2017-03-06T16:23:17Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.stepic.droid.model.User.getAvatarPath()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userAvatar == null) { userAvatar = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6928/buggy-version/app.src.main.java.org.stepic.droid.ui.adapters.InstructorAdapter.java", "BodyUseAPI": [], "Fixed commit": "f6455592ad357f25b1e0b1f95b278a77a935f384", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2017-03-06T16:23:17Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (score == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8643/buggy-version/athena.athena-server.src.main.java.org.polar.athena.discovery.DiscoveryItem.java", "BodyUseAPI": [], "Fixed commit": "d3592284d871965fc67c94b5dddb81bae4a5bbc3", "Url": "https://api.github.com/repos/Richie-Leo/polar", "Date": "2017-01-08T08:46:47Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((score > 0) && ((this.score) > 0)) && (score > (this.score))) { this.score = score; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8643/buggy-version/athena.athena-server.src.main.java.org.polar.athena.discovery.DiscoveryItem.java", "BodyUseAPI": [], "Fixed commit": "d3592284d871965fc67c94b5dddb81bae4a5bbc3", "Url": "https://api.github.com/repos/Richie-Leo/polar", "Date": "2017-01-08T08:46:47Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (score < 0) { if (((this.score) > 0) || ((this.score) > score)) { this.score = score; return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8643/buggy-version/athena.athena-server.src.main.java.org.polar.athena.discovery.DiscoveryItem.java", "BodyUseAPI": [], "Fixed commit": "d3592284d871965fc67c94b5dddb81bae4a5bbc3", "Url": "https://api.github.com/repos/Richie-Leo/polar", "Date": "2017-01-08T08:46:47Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == ((array.length) - 1)) { displayValue += array[i]; }else { displayValue += (array[i]) + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5641/buggy-version/src.imi.calculator.CalcEngine.java", "BodyUseAPI": [], "Fixed commit": "f8c74298f0222ff6ddefb4d0b22e7030e5e08584", "Url": "https://api.github.com/repos/EliGould/JavaCalculator", "Date": "2016-05-31T10:42:24Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == ((array.length) - 1)) { displayValue += array[i]; }else { displayValue += (array[i]) + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5641/buggy-version/src.imi.calculator.CalcEngine.java", "BodyUseAPI": [], "Fixed commit": "f8c74298f0222ff6ddefb4d0b22e7030e5e08584", "Url": "https://api.github.com/repos/EliGould/JavaCalculator", "Date": "2016-05-31T10:42:24Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getGuild().getPublicChannel()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (event.getGuild().getSelfMember().hasPermission(publicChannel, Permission.MESSAGE_WRITE)) { try { event.getGuild().getPublicChannel().sendMessage((\"**Sorry, this is the patreon only dabBot!**\\nTo have this \" + \"bot on your server, you must become a patreon at https://patreon.com/dabbot\")).complete(); } catch (net.dv8tion.jda.core.exceptions.PermissionException ignored) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1410/buggy-version/src.main.java.ovh.not.javamusicbot.Listener.java", "BodyUseAPI": ["event.getGuild().getPublicChannel().sendMessage(java.lang.String)", "event.getGuild().getPublicChannel().sendMessage((\"**Sorry, this is the patreon only dabBot!**\\nTo have this \" + \"bot on your server, you must become a patreon at https://patreon.com/dabbot\")).complete()", "event.getGuild().getPublicChannel()", "net.dv8tion.jda.core.events.guild.GuildJoinEvent.getGuild()"], "Fixed commit": "4c3a7747ab888d82dd5453e68388c995df79377e", "Url": "https://api.github.com/repos/dabbotorg/java-music-bot", "Date": "2017-05-29T15:28:42Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (target != null) { invocation.setTarget(target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5174/buggy-version/src.main.java.spoon.reflect.factory.CodeFactory.java", "BodyUseAPI": ["spoon.reflect.code.CtInvocation<T>.setTarget(spoon.reflect.code.CtExpression<?>)"], "Fixed commit": "b4674e039ba00f2b057831958480a397bda3af51", "Url": "https://api.github.com/repos/petitpre/spoon", "Date": "2015-06-15T13:38:44Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.reflect.Modifier.isPrivate(modifiers)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9257/buggy-version/src.ca.weblite.netbeans.mirah.cc.DefCompletionQuery.java", "BodyUseAPI": [], "Fixed commit": "ce51d5dc2a401ab6c3b7d44a63e97bd571497759", "Url": "https://api.github.com/repos/shannah/mirah-nbm", "Date": "2014-08-07T21:26:50Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((syntaxError.position) != null) { java.lang.String[] pieces = syntaxError.position.substring(0, syntaxError.position.lastIndexOf(\":\")).split(\":\"); line = java.lang.Integer.parseInt(pieces[((pieces.length) - 1)]); }else { line = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9257/buggy-version/src.ca.weblite.netbeans.mirah.lexer.SyntaxErrorsHighlightingTask.java", "BodyUseAPI": ["syntaxError.position.lastIndexOf(java.lang.String)", "syntaxError.position.substring(int,syntaxError.position.lastIndexOf(\":\"))", "syntaxError.position.substring(0, syntaxError.position.lastIndexOf(\":\")).split(java.lang.String)"], "Fixed commit": "ce51d5dc2a401ab6c3b7d44a63e97bd571497759", "Url": "https://api.github.com/repos/shannah/mirah-nbm", "Date": "2014-08-07T21:26:50Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(dotCycle)) && (drawDot(g, x, y))) dotCycle = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/550/buggy-version/src.net.net16.jeremiahlowe.scicalc.functions.LineDrawer.java", "BodyUseAPI": [], "Fixed commit": "42e68ae75a3756b164cac77ddd25c403a7acb8f6", "Url": "https://api.github.com/repos/abc123me/ScientificCalculator", "Date": "2017-04-04T16:49:25Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((buffer.length) < 8) { throw new nudat.protocol.NuDatException(ErrorCode.PACKETTOOSHORT); }else if ((buffer.length) > 8) { throw new nudat.protocol.NuDatException(ErrorCode.PACKETTOOLONG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4269/buggy-version/src.nudat.protocol.NuDatQuery.java", "BodyUseAPI": [], "Fixed commit": "6fe213bffb349be5950a80890996108fc4f24808", "Url": "https://api.github.com/repos/jonathanmcelroy/DataCommunicationsProgram456", "Date": "2014-10-16T03:41:19Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestedPosts <= 0) { throw new java.lang.IllegalArgumentException(\"You must request at least 1 post\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4269/buggy-version/src.nudat.protocol.NuDatQuery.java", "BodyUseAPI": [], "Fixed commit": "6fe213bffb349be5950a80890996108fc4f24808", "Url": "https://api.github.com/repos/jonathanmcelroy/DataCommunicationsProgram456", "Date": "2014-10-16T03:41:19Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (QR == 0) { return new nudat.protocol.NuDatQuery(buffer); }else if (QR == 1) { return new nudat.protocol.NuDatResponse(buffer); }else { throw new nudat.protocol.NuDatException(ErrorCode.UNEXPECTEDPACKETTYPE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4269/buggy-version/src.nudat.protocol.NuDatMessage.java", "BodyUseAPI": [], "Fixed commit": "6fe213bffb349be5950a80890996108fc4f24808", "Url": "https://api.github.com/repos/jonathanmcelroy/DataCommunicationsProgram456", "Date": "2014-10-16T03:41:19Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reserved != 0) { throw new nudat.protocol.NuDatException(ErrorCode.NETWORKERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4269/buggy-version/src.nudat.protocol.NuDatMessage.java", "BodyUseAPI": [], "Fixed commit": "6fe213bffb349be5950a80890996108fc4f24808", "Url": "https://api.github.com/repos/jonathanmcelroy/DataCommunicationsProgram456", "Date": "2014-10-16T03:41:19Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (version != 1) { throw new nudat.protocol.NuDatException(ErrorCode.BADVERSION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4269/buggy-version/src.nudat.protocol.NuDatMessage.java", "BodyUseAPI": [], "Fixed commit": "6fe213bffb349be5950a80890996108fc4f24808", "Url": "https://api.github.com/repos/jonathanmcelroy/DataCommunicationsProgram456", "Date": "2014-10-16T03:41:19Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3099/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "131ccabfd1883aee2baa922405761a1c2e935136", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ranges.length) > 0) { lastUploaded = (ranges[0].start) - (totalUploaded); totalUploaded = ranges[0].start; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5235/buggy-version/src.main.java.com.wouterbreukink.onedrive.client.OneDriveUploadSession.java", "BodyUseAPI": [], "Fixed commit": "6af83bca545c7a6d5e7799748b6ef85c45a866be", "Url": "https://api.github.com/repos/wooti/onedrive-java-client", "Date": "2015-07-19T02:22:23Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pennTag.equals(\"UH\"))) { word = word.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7918/buggy-version/util.src.at.illecker.storm.examples.util.unsupervised.util.SentimentWordLists.java", "BodyUseAPI": [], "Fixed commit": "38d17eb8297faf321b0135d69a51e9dfd637fa89", "Url": "https://api.github.com/repos/millecker/storm-apps", "Date": "2014-12-17T14:46:50Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.groovy.ast.stmt.ExpressionStatement.getExpression()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((expression instanceof org.codehaus.groovy.ast.expr.VariableExpression) || (expression instanceof org.codehaus.groovy.ast.expr.ConstantExpression)) || (expression instanceof org.codehaus.groovy.ast.expr.PropertyExpression)) { if (expression instanceof org.codehaus.groovy.ast.expr.PropertyExpression) { expression = org.codehaus.groovy.eclipse.codeassist.requestor.CompletionNodeFinder.getRightMost(expression); } if (expression != null) { if ((((supportingNodeEnd) > 0) && (fullCompletionExpression.endsWith(\".\"))) && (completionExpression.equals(\"\"))) { createContext(expression, blockStack.getLast(), ContentAssistLocation.EXPRESSION); }else { createContextForCallContext(expression, expression, expression.getText()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2757/buggy-version/ide.org.codehaus.groovy.eclipse.codeassist.completion.src.org.codehaus.groovy.eclipse.codeassist.requestor.CompletionNodeFinder.java", "BodyUseAPI": ["org.codehaus.groovy.eclipse.codeassist.requestor.CompletionNodeFinder.getRightMost(org.codehaus.groovy.ast.expr.Expression)"], "Fixed commit": "ced07bb19bcc13d7f12981f2ea05169150aa570b", "Url": "https://api.github.com/repos/groovy/groovy-eclipse", "Date": "2017-11-16T03:08:53Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.group5.diceroller.DiceRollerState.getState().activeSelection().remove(set)) contained = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5916/buggy-version/src.com.group5.diceroller.EditSetActivity.java", "BodyUseAPI": [], "Fixed commit": "f565c7c80b87e30fc41d806d1e3207fb0258524d", "Url": "https://api.github.com/repos/cookyt/DiceRoller", "Date": "2013-04-13T17:23:22Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contained) com.group5.diceroller.DiceRollerState.getState().activeSelection().add(set);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5916/buggy-version/src.com.group5.diceroller.EditSetActivity.java", "BodyUseAPI": [], "Fixed commit": "f565c7c80b87e30fc41d806d1e3207fb0258524d", "Url": "https://api.github.com/repos/cookyt/DiceRoller", "Date": "2013-04-13T17:23:22Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4906/buggy-version/src.main.java.com.treasure_data.bulk_import.model.TimeColumnSampling.java", "BodyUseAPI": [], "Fixed commit": "f6e668bef2ccb9075373e9f329034ae3c191fa91", "Url": "https://api.github.com/repos/treasure-data/td-bulk-import-java", "Date": "2013-09-25T09:42:00Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Common.SETTINGS_KEY_DEFAULT_NAV_BAR_IM_TINT.equals(prefKey)) || (Common.SETTINGS_KEY_DEFAULT_NAV_BAR_TINT.equals(prefKey))) { previewKey = Common.SETTINGS_KEY_NAVIGATION_BAR_TINT; }else if (Common.SETTINGS_KEY_DEFAULT_STATUS_BAR_TINT.equals(prefKey)) { previewKey = Common.SETTINGS_KEY_STATUS_BAR_TINT; }else if ((Common.SETTINGS_KEY_DEFAULT_NAV_BAR_ICON_TINT.equals(prefKey)) || (Common.SETTINGS_KEY_DEFAULT_NAV_BAR_ICON_IM_TINT.equals(prefKey))) { previewKey = Common.SETTINGS_KEY_NAVIGATION_BAR_ICON_TINT; }else if ((Common.SETTINGS_KEY_DEFAULT_STATUS_BAR_ICON_TINT.equals(prefKey)) || (Common.SETTINGS_KEY_DEFAULT_STATUS_BAR_INVERTED_ICON_TINT.equals(prefKey))) { if (Common.SETTINGS_KEY_DEFAULT_STATUS_BAR_INVERTED_ICON_TINT.equals(prefKey)) intent.putExtra(Common.SETTINGS_KEY_STATUS_BAR_TINT, Color.WHITE); previewKey = Common.SETTINGS_KEY_STATUS_BAR_ICON_TINT; }else { previewKey = prefKey; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2837/buggy-version/src.com.mohammadag.colouredstatusbar.ColorPickerActivity.java", "BodyUseAPI": ["Common.SETTINGS_KEY_DEFAULT_NAV_BAR_ICON_IM_TINT.equals(java.lang.String)", "Common.SETTINGS_KEY_DEFAULT_STATUS_BAR_TINT.equals(java.lang.String)", "Common.SETTINGS_KEY_DEFAULT_NAV_BAR_ICON_TINT.equals(java.lang.String)", "Common.SETTINGS_KEY_DEFAULT_STATUS_BAR_INVERTED_ICON_TINT.equals(java.lang.String)", "Common.SETTINGS_KEY_DEFAULT_STATUS_BAR_INVERTED_ICON_TINT.equals(java.lang.String)", "Common.SETTINGS_KEY_DEFAULT_STATUS_BAR_ICON_TINT.equals(java.lang.String)"], "Fixed commit": "29fbbc790a77f902c94da57032ff9a991964ac3f", "Url": "https://api.github.com/repos/MohammadAG/Xposed-Tinted-Status-Bar", "Date": "2014-01-05T22:48:29Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(cmd instanceof seedu.jimi.logic.commands.UndoCommand)) && (!(cmd instanceof seedu.jimi.logic.commands.RedoCommand))) { undoStack.push(new seedu.jimi.model.History.Context(cmd, result)); redoStack.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8344/buggy-version/src.main.java.seedu.jimi.model.History.java", "BodyUseAPI": ["java.util.Stack<seedu.jimi.model.History.Context>.push(seedu.jimi.model.History.Context)"], "Fixed commit": "16dd32d8289a60748f6abb3782221f8787ba5c1d", "Url": "https://api.github.com/repos/CS2103AUG2016-T09-C2/main", "Date": "2016-10-23T14:54:17Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<seedu.jimi.model.History.Context>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!((previous.cmd) instanceof seedu.jimi.logic.commands.RedoCommand)) { redoStack.push(previous.cmd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8344/buggy-version/src.main.java.seedu.jimi.model.History.java", "BodyUseAPI": ["java.util.Stack<seedu.jimi.logic.commands.Command>.push(seedu.jimi.logic.commands.Command)"], "Fixed commit": "16dd32d8289a60748f6abb3782221f8787ba5c1d", "Url": "https://api.github.com/repos/CS2103AUG2016-T09-C2/main", "Date": "2016-10-23T14:54:17Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<seedu.jimi.logic.commands.Command>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(cmd instanceof seedu.jimi.logic.commands.UndoCommand)) { undoStack.push(new seedu.jimi.model.History.Context(cmd, result)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8344/buggy-version/src.main.java.seedu.jimi.model.History.java", "BodyUseAPI": ["java.util.Stack<seedu.jimi.model.History.Context>.push(seedu.jimi.model.History.Context)"], "Fixed commit": "16dd32d8289a60748f6abb3782221f8787ba5c1d", "Url": "https://api.github.com/repos/CS2103AUG2016-T09-C2/main", "Date": "2016-10-23T14:54:17Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((names[i].length()) > 0) letters += names[i].charAt(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7513/buggy-version/app.src.main.java.com.djonique.birdays.utils.Utils.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "c58586be6647e4d70407659868e52a1e8d3cba55", "Url": "https://api.github.com/repos/Djonique/Birdays", "Date": "2017-07-29T14:31:33Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input instanceof javax.imageio.stream.ImageInputStream) { this.imageInputStream = ((javax.imageio.stream.ImageInputStream) (input)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4440/buggy-version/modules.plugin.coverage-multidim.netcdf.src.main.java.org.geotools.imageio.netcdf.NetCDFImageReader.java", "BodyUseAPI": [], "Fixed commit": "cfa0365b3513344d04da204f939fe297bdd2dcd1", "Url": "https://api.github.com/repos/JOSM/geotools", "Date": "2017-11-23T12:06:09Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageInputStream) != null) { org.apache.commons.io.IOUtils.closeQuietly(imageInputStream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4440/buggy-version/modules.plugin.coverage-multidim.netcdf.src.main.java.org.geotools.imageio.netcdf.NetCDFImageReader.java", "BodyUseAPI": [], "Fixed commit": "cfa0365b3513344d04da204f939fe297bdd2dcd1", "Url": "https://api.github.com/repos/JOSM/geotools", "Date": "2017-11-23T12:06:09Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(velocity.x)) < (MOVEMENT_INCREMENT)) { velocity.x = MOVEMENT_INCREMENT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2046/buggy-version/Platformer.src.com.gravity.player.Player.java", "BodyUseAPI": [], "Fixed commit": "826a1aefda0f0a46f13292995edf527a699384d4", "Url": "https://api.github.com/repos/dPATHo/PPBunnies", "Date": "2012-10-26T07:36:37Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(velocity.x)) < (MOVEMENT_INCREMENT)) { velocity.x = -(MOVEMENT_INCREMENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2046/buggy-version/Platformer.src.com.gravity.player.Player.java", "BodyUseAPI": [], "Fixed commit": "826a1aefda0f0a46f13292995edf527a699384d4", "Url": "https://api.github.com/repos/dPATHo/PPBunnies", "Date": "2012-10-26T07:36:37Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content) != null) { intent.putExtra(Intent.EXTRA_SUBJECT, content.getTitle()); intent.putExtra(Intent.EXTRA_TEXT, (((content.getUrl().toString()) + \" \") + (getString(R.string.shared_via)))); android.content.Intent chooser = android.content.Intent.createChooser(intent, (((getString(R.string.tell_friend)) + \" \") + (content.getTitle()))); startActivity(chooser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5754/buggy-version/src.org.cnx.android.activity.WebViewActivity.java", "BodyUseAPI": [], "Fixed commit": "5946172ead4ad01180f4faeda26c6466eb14221a", "Url": "https://api.github.com/repos/Connexions/CNXAndroid", "Date": "2012-06-04T21:19:32Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (st == (org.apache.giraph.io.formats.RexsterUtils.StreamType.VERTICES)) { type = \"/vertices/\"; }else if (st == (org.apache.giraph.io.formats.RexsterUtils.StreamType.EDGES)) { type = \"/edges/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/155/buggy-version/giraph-core.src.main.java.org.apache.giraph.io.formats.RexsterUtils.java", "BodyUseAPI": [], "Fixed commit": "a1830ba227875c9058c2b02e1185c7236ace7a91", "Url": "https://api.github.com/repos/armax00/giraph", "Date": "2013-07-14T23:51:30Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((stocktradeVO.getStatus()) == (com.ghlh.strategy.TradeConstants.STATUS_POSSIBLE_SELL)) { if ((sqb.getHighestPrice()) >= (stocktradeVO.getSellprice())) { java.lang.String message = com.ghlh.strategy.TradeUtil.getConfirmedSellMessage(stocktradeVO.getStockid(), stocktradeVO.getNumber(), stocktradeVO.getSellprice()); com.ghlh.autotrade.EventRecorder.recordEvent(com.ghlh.autotrade.StockTradeIntradyUtil.class, message); stocktradeVO.setStatus(TradeConstants.STATUS_FINISH); stocktradeVO.setSelldate(new java.util.Date()); com.ghlh.data.db.StocktradeDAO.updateStocktradeFinished(stocktradeVO.getId()); if (java.lang.Boolean.valueOf(monitor.getMonitorstockVO().getOnmonitoring())) { com.ghlh.autotrade.StockTradeIntradyUtil.reBuy(stocktradeVO, pendingBuyList); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6678/buggy-version/src.java.com.ghlh.autotrade.StockTradeIntradyUtil.java", "BodyUseAPI": ["com.ghlh.data.db.StocktradeDAO.updateStocktradeFinished(stocktradeVO.getId())", "com.ghlh.data.db.StocktradeVO.getStockid()", "com.ghlh.data.db.StocktradeVO.getNumber()", "com.ghlh.data.db.StocktradeVO.getSellprice()", "com.ghlh.strategy.TradeUtil.getConfirmedSellMessage(stocktradeVO.getStockid(),stocktradeVO.getNumber(),stocktradeVO.getSellprice())", "com.ghlh.data.db.StocktradeVO.getSellprice()", "com.ghlh.data.db.StocktradeVO.getId()", "com.ghlh.autotrade.StockTradeIntradyUtil.reBuy(com.ghlh.data.db.StocktradeVO,java.util.List)", "com.ghlh.data.db.StocktradeVO.setStatus(TradeConstants.STATUS_FINISH)", "com.ghlh.data.db.StocktradeVO.setSelldate(java.util.Date)"], "Fixed commit": "865f024511bae15f03dd6879e917c3e388c0315e", "Url": "https://api.github.com/repos/lqjliu/ghlh", "Date": "2013-12-17T10:48:07Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((representation.getRange().getSize()) != (org.restlet.data.Range.SIZE_MAX)) { if (representation.hasKnownSize()) { return (java.lang.Math.min(((representation.getRange().getIndex()) + (representation.getRange().getSize())), representation.getSize())) - (representation.getRange().getIndex()); }else { return org.restlet.representation.Representation.UNKNOWN_SIZE; } }else if (representation.hasKnownSize()) { if ((representation.getRange().getIndex()) != (org.restlet.data.Range.INDEX_LAST)) { return (representation.getSize()) - (representation.getRange().getIndex()); } return representation.getSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6357/buggy-version/modules.org.restlet.src.org.restlet.engine.io.BioUtils.java", "BodyUseAPI": ["org.restlet.representation.Representation.getSize()", "representation.getRange().getIndex()", "org.restlet.representation.Representation.hasKnownSize()", "org.restlet.representation.Representation.getSize()", "org.restlet.representation.Representation.hasKnownSize()", "representation.getRange().getIndex()", "representation.getRange().getSize()", "org.restlet.representation.Representation.getSize()", "java.lang.Math.min(((representation.getRange().getIndex()) + (representation.getRange().getSize())),representation.getSize())", "representation.getRange().getIndex()", "representation.getRange().getIndex()", "org.restlet.representation.Representation.getRange()", "org.restlet.representation.Representation.getRange()", "org.restlet.representation.Representation.getRange()", "org.restlet.representation.Representation.getRange()", "org.restlet.representation.Representation.getRange()"], "Fixed commit": "a11beb801a1f1df73b874ef8a43a31c581259c20", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-07-19T13:02:55Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cell != null) game.acceptInput((((((name) + \":\") + (cell.cellI)) + \" \") + (cell.cellJ)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/352/buggy-version/src.main.java.com.company.Bot.java", "BodyUseAPI": ["com.company.Bot.acceptInput((((((name) + \":\") + (cell.cellI)) + \" \") + (cell.cellJ)))"], "Fixed commit": "9193ec1210d2a552160d9b193a225218f430f790", "Url": "https://api.github.com/repos/21las21/TrollInvasion", "Date": "2017-12-24T12:22:34Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (bpmString != null) { bpm = java.lang.Double.parseDouble(bpmString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2547/buggy-version/app.src.main.java.com.amk2.musicrunner.music.MusicRankDetailActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "af85ba6e77765103293ef6f455a1ca3effee45fb", "Url": "https://api.github.com/repos/threefure/MusicRunner", "Date": "2014-11-05T04:24:10Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quantity != 0) { int costPerGood = (this.costOfGoods.get(tradeGood)) / quantity; int newCost = (this.costOfGoods.get(tradeGood)) - (quantity * costPerGood); this.costOfGoods.put(tradeGood, newCost); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7339/buggy-version/src.spacetrader.commerce.Cargo.java", "BodyUseAPI": [], "Fixed commit": "aad09c55125798921ae47f8a26478d80669237d1", "Url": "https://api.github.com/repos/nkarusala/CS-2340-Fall-2014", "Date": "2014-10-28T08:06:34Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mWidgetWebView)) { ((android.view.ViewGroup) (mWidgetWebView.getParent())).removeView(mWidgetWebView); mWidgetWebView.removeAllViews(); mWidgetWebView.destroy(); mWidgetWebView = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/343/buggy-version/vector.src.main.java.im.vector.activity.WidgetActivity.java", "BodyUseAPI": [], "Fixed commit": "0d6f1a22f5a48848878b6124438a92f3487cd3d0", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-09-26T08:56:48Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fr.apiscol.metadata.scolomfr3utils.log.LoggerProvider.log4JisConfigured())) { org.apache.log4j.BasicConfigurator.configure(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5196/buggy-version/src.main.java.fr.apiscol.metadata.scolomfr3utils.log.LoggerProvider.java", "BodyUseAPI": [], "Fixed commit": "660d737e27e4d9bb208179a499264796c7258379", "Url": "https://api.github.com/repos/jdpro/scolomfr3utils", "Date": "2016-08-13T06:03:25Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((keywords.length) > 0) { return currentState.updateMatchedLabels(repoLabels, keywords[((keywords.length) - 1)]); }else { return currentState.updateMatchedLabels(repoLabels, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4285/buggy-version/src.main.java.ui.components.pickers.LabelPickerUILogic.java", "BodyUseAPI": ["ui.components.pickers.LabelPickerState.updateMatchedLabels(java.util.Set<java.lang.String>,java.lang.String)"], "Fixed commit": "0b865187e263d6f6cfaf49f3f59f103d113252c3", "Url": "https://api.github.com/repos/HubTurbo/HubTurbo", "Date": "2016-01-31T07:02:22Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSignalHeatMap.getRowCount()) == 0) { mSignalHeatMap = mMapGenerator.getHeatMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7204/buggy-version/ProjectSolution.WifiHeatMapper.app.src.main.java.edu.msu.cse.fall2017.group1.wifiheatmapper.components.MapperService.java", "BodyUseAPI": [], "Fixed commit": "e7c9d9295c99c1964cd0b4a974450839566410bf", "Url": "https://api.github.com/repos/andrewjo93/MSU_CSE824_FinalProject", "Date": "2017-12-04T00:17:09Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sceneRow.length()) < col) { java.lang.String addedWhitespace = \"\"; for (int i = sceneRow.length(); i < col; i++) { addedWhitespace += \" \"; } return sceneRow + addedWhitespace; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5481/buggy-version/src.game.GameRender.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "687b6cc9bd42026da7e774955d2508d2550f8072", "Url": "https://api.github.com/repos/aadriance/crazyEight", "Date": "2014-10-24T23:32:07Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mServiceRequest) != null) { mManager.removeServiceRequest(mChannel, mServiceRequest, new android.net.wifi.p2p.WifiP2pManager.ActionListener() { @java.lang.Override public void onSuccess() { writeLog(\"Removed [last session] service discovery request\"); } @java.lang.Override public void onFailure(int reason) { writeLog(\"Failed removing [last session] service discovery request\"); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3859/buggy-version/svcmid.src.main.java.com.usu.svcmid.wfd.WiFiDiscoveryManager.java", "BodyUseAPI": [], "Fixed commit": "8a8541eac3ca4971ac7a91d3ab94fc15eca356e1", "Url": "https://api.github.com/repos/minhld/MobileServiceMiddleware", "Date": "2017-09-17T23:53:56Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.planning.InterfacePlanning.isNodeEntrepot(view_noeud.getNoeud().getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isEntrepot) { interfaceView.displayAlert(\"Supprimer une livraison\", \"Vous ne pouvez pas supprimer l'entrepot\", \"warning\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2088/buggy-version/titan-shippment.src.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "2d75ea8899a7f88e139da45e29c8558cf0bbcb07", "Url": "https://api.github.com/repos/LeonardA-L/hm-devOO", "Date": "2014-11-11T15:58:28Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.ActionBar.getSelectedNavigationIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == 1) { if ((songsFragment) != null) { if (searchView.getQuery().equals(\"\")) { songsFragment.refreshSongList(); }else { songsFragment.searchSongList(searchView.getQuery().toString()); } } }else if (index == 2) { if ((jamFragment) != null) jamFragment.refreshJamList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5720/buggy-version/src.com.stanford.tutti.BrowseMusicActivity.java", "BodyUseAPI": [], "Fixed commit": "3c439e81ef7b0bb90d896cfdb406ddb852d5fcff", "Url": "https://api.github.com/repos/JayThomason/Tutti", "Date": "2014-05-14T09:02:26Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spongepowered.api.command.args.CommandContext.getOne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((value.get().contains(\",\")) && (ctx.hasAny(\"r\"))) { java.util.ArrayList<java.lang.String> input = com.google.common.collect.Lists.newArrayList(); input.addAll(java.util.Arrays.asList(value.get().split(\"\\\\s*,\\\\s*\"))); me.ryanhamshire.GriefPrevention.command.CommandClaimFlag.removeFromFlagValue(src, claim, flag.get(), input); }else if (ctx.hasAny(\"r\")) { java.util.ArrayList<java.lang.String> input = com.google.common.collect.Lists.newArrayList(); input.add(value.get()); me.ryanhamshire.GriefPrevention.command.CommandClaimFlag.removeFromFlagValue(src, claim, flag.get(), input); }else { me.ryanhamshire.GriefPrevention.command.CommandClaimFlag.setFlagValue(src, claim, flag.get(), value.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2188/buggy-version/src.me.ryanhamshire.GriefPrevention.command.CommandClaimFlag.java", "BodyUseAPI": ["me.ryanhamshire.GriefPrevention.command.CommandClaimFlag.setFlagValue(org.spongepowered.api.command.CommandSource,me.ryanhamshire.GriefPrevention.Claim,java.lang.String,java.lang.String)", "java.util.Arrays.asList(java.lang.String[])", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.util.Optional<java.lang.String>.get()", "java.util.Optional<java.lang.String>.get()", "java.lang.String.split(java.lang.String)", "java.util.ArrayList<java.lang.String>.addAll(java.util.List<java.lang.String>)", "java.util.Optional<java.lang.String>.get()", "org.spongepowered.api.command.args.CommandContext.hasAny(java.lang.String)"], "Fixed commit": "6eaef4955dd052a9d36f4cae5acd11912dc85234", "Url": "https://api.github.com/repos/hsyyid/GriefPrevention", "Date": "2016-01-26T04:15:09Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nodedata1.replFiles.contains(file1)) { nodedata1.sendQueue.add(file1); try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } nodedata1.removeQueue.add(file1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2434/buggy-version/SystemY.src.fileManagers.FileOwnershipT.java", "BodyUseAPI": ["nodedata1.sendQueue.add(fileManagers.FileData)", "nodedata1.removeQueue.add(fileManagers.FileData)"], "Fixed commit": "2af36c692078daf8caa42689924f4de5f318e353", "Url": "https://api.github.com/repos/Fiifth/Distributed", "Date": "2015-11-10T10:27:16Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(thresholds.containsKey(pattern))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4034/buggy-version/src.GUI.Configurations.java", "BodyUseAPI": [], "Fixed commit": "d560e8bd2e4f805e0e0dcf1bf5e50cd305f69477", "Url": "https://api.github.com/repos/siscodr/CSSE374Misfits", "Date": "2016-02-19T06:46:52Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contactsArrayList.size()) == 0) { this.finish(); android.widget.Toast.makeText(this, \"\u8acb\u65b0\u589e\u806f\u7d61\u4eba\", 0).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/193/buggy-version/src.edu.stu.ihelp.client.PersonalData.java", "BodyUseAPI": [], "Fixed commit": "1ed63c478431f975673f54b13536eed9cd6924b1", "Url": "https://api.github.com/repos/cy-project/iHelp-android", "Date": "2013-08-27T03:13:59Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(bit.trim().isEmpty())) variables.add(bit.trim());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1174/buggy-version/src.main.java.com.sk89q.craftbook.util.ParsingUtil.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "01afdfad83f816e1dd4c4d54f3ac6ea98fca7668", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-06-24T07:28:52Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (signatureLength > (securityKey.length)) { throw new java.security.GeneralSecurityException(((\"Size indicator in ASN.1 DSA signature to large [\" + signatureLength) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6241/buggy-version/oslp.src.main.java.com.alliander.osgp.oslp.OslpUtils.java", "BodyUseAPI": [], "Fixed commit": "809fd47bb9743f6aa0bae878f7458e5f9b445df0", "Url": "https://api.github.com/repos/OSGP/Protocol-Adapter-OSLP", "Date": "2017-01-29T21:33:00Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.ibuildthecloud.gdapi.context.ApiContext.getContext().getPolicy()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (policy == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8444/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.dao.impl.AuthDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "d41de9de2e74832e74ea15f4fd0a4ca9367cf5a6", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-04-07T01:32:49Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((high - low) < 1) { a = a; }else { int pivot = partition(a, low, high); quickSort(a, low, pivot); quickSort(a, (pivot + 1), high); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5838/buggy-version/sorting.day00.src.QuickSort.java", "BodyUseAPI": ["QuickSort.quickSort(int[],int,int)", "QuickSort.partition(int[],int,int)", "QuickSort.quickSort(int[],int,int)"], "Fixed commit": "5bafd7db178008053a78319c9331b429a6d81cb1", "Url": "https://api.github.com/repos/mary-keenan/DSA-17", "Date": "2017-02-23T21:46:26Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((array.length) > 1) { java.util.Collections.shuffle(java.util.Arrays.asList(array)); quickSort(array, 0, ((array.length) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5838/buggy-version/sorting.day00.src.QuickSort.java", "BodyUseAPI": ["java.util.Arrays.asList(int[])", "QuickSort.quickSort(int[],int,int)", "java.util.Collections.shuffle(java.util.List<int[]>)"], "Fixed commit": "5bafd7db178008053a78319c9331b429a6d81cb1", "Url": "https://api.github.com/repos/mary-keenan/DSA-17", "Date": "2017-02-23T21:46:26Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((array.length) % 2) != 0) { secondHalf = new int[((array.length) / 2) + 1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5838/buggy-version/sorting.day00.src.MergeSort.java", "BodyUseAPI": [], "Fixed commit": "5bafd7db178008053a78319c9331b429a6d81cb1", "Url": "https://api.github.com/repos/mary-keenan/DSA-17", "Date": "2017-02-23T21:46:26Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array.length) <= 1) { return array; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5838/buggy-version/sorting.day00.src.MergeSort.java", "BodyUseAPI": [], "Fixed commit": "5bafd7db178008053a78319c9331b429a6d81cb1", "Url": "https://api.github.com/repos/mary-keenan/DSA-17", "Date": "2017-02-23T21:46:26Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((a.length) + (b.length)) <= (MergeSort.INSERTION_THRESHOLD)) { for (int i = 0; i < (fullArray.length); i++) { if (i < (a.length)) { fullArray[i] = a[i]; }else { fullArray[i] = b[(i - (a.length))]; } } for (int i = 1; i < (fullArray.length); i++) { int iVal = fullArray[i]; int lastIndex = i; for (int j = i - 1; j >= 0; j--) { if (iVal < (fullArray[j])) { fullArray[lastIndex] = fullArray[j]; fullArray[j] = iVal; lastIndex = j; } } } return fullArray; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5838/buggy-version/sorting.day00.src.MergeSort.java", "BodyUseAPI": [], "Fixed commit": "5bafd7db178008053a78319c9331b429a6d81cb1", "Url": "https://api.github.com/repos/mary-keenan/DSA-17", "Date": "2017-02-23T21:46:26Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.thechiselgroup.biomixer.client.visualization_component.graph.layout.implementation.tree.DirectedAcyclicGraph.getNodesAtDistanceFromRoot(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null == nodesAtDepth) || ((nodesAtDepth.size()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3359/buggy-version/biomixer.src.org.thechiselgroup.biomixer.client.visualization_component.graph.layout.implementation.tree.AbstractTreeLayoutComputation.java", "BodyUseAPI": [], "Fixed commit": "7d936083b5df166352b2436c360c8c3ff87e6e85", "Url": "https://api.github.com/repos/thechiselgroup/biomixer", "Date": "2013-06-07T22:26:29Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.thechiselgroup.biomixer.client.visualization_component.graph.layout.implementation.tree.DirectedAcyclicGraph.getNodesAtDistanceFromRoot(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null == nodesAtDepth) || ((nodesAtDepth.size()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3359/buggy-version/biomixer.src.org.thechiselgroup.biomixer.client.visualization_component.graph.layout.implementation.tree.AbstractTreeLayoutComputation.java", "BodyUseAPI": [], "Fixed commit": "7d936083b5df166352b2436c360c8c3ff87e6e85", "Url": "https://api.github.com/repos/thechiselgroup/biomixer", "Date": "2013-06-07T22:26:29Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((labelCountArray.size()) == 0) { labelCountArray.add(new labelCount(randomForest.getData(testData, 0, j), 1)); }else if (!counted) { labelCountArray.get(randomForest.trimLabelCountArray(labelCountArray).size()).label = randomForest.getData(testData, 0, j); }else { labelCountArray.get(i).count += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/815/buggy-version/charlieRandomForest.java", "BodyUseAPI": ["java.util.ArrayList<labelCount>.get(int)", "java.util.ArrayList<labelCount>.size()", "java.util.ArrayList<labelCount>.add(labelCount)", "forest.trimLabelCountArray(java.util.ArrayList<labelCount>)", "java.util.ArrayList<labelCount>.get(int)"], "Fixed commit": "7acfa1ffec06ae1a5ac4df56e9dcddc49342889f", "Url": "https://api.github.com/repos/ChazLeng/JavaLabs", "Date": "2017-10-31T20:42:42Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (args != null) { java.lang.Class<?>[] args2 = method.getParameterTypes(); if ((args2.length) != (args.length)) { continue; } for (int count = 0; count < (args.length); count++) { if (!(args[count].equals(args2[count].getName()))) { continue MainLoop; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7376/buggy-version/src.main.java.ohi.andre.reflectionutils.ReflectionUtils.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "188a516a574a0d9f0efccc3ad6cc85d327052306", "Url": "https://api.github.com/repos/fAndreuzzi/ReflectionUtils", "Date": "2016-06-03T16:02:22Z"},
{"Line": "=>1394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useTextAreaMode) dx -= getResources().getDimensionPixelSize(R.dimen.text_area_left_and_right_padding);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2333/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialEditText.java", "BodyUseAPI": [], "Fixed commit": "a4c1c94dc78636b9d0cb4de816b7c6050becec6c", "Url": "https://api.github.com/repos/BrigadeTom/MaterialEditText", "Date": "2017-08-24T23:28:29Z"},
{"Line": "=>1390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useTextAreaMode) dx -= getResources().getDimensionPixelSize(R.dimen.text_area_left_and_right_padding);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2333/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialEditText.java", "BodyUseAPI": [], "Fixed commit": "a4c1c94dc78636b9d0cb4de816b7c6050becec6c", "Url": "https://api.github.com/repos/BrigadeTom/MaterialEditText", "Date": "2017-08-24T23:28:29Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"sport\".equals(s)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1342/buggy-version/src.main.java.model.loader.XmlCourseLoader.java", "BodyUseAPI": [], "Fixed commit": "02578795e03edf68c5ef88322d7efa9765e22d31", "Url": "https://api.github.com/repos/TechnionYP5777/UpAndGo", "Date": "2017-01-12T10:22:21Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conv) != null) { question.setText(conv.getConv()); image.setImageResource(conv.getImg()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5685/buggy-version/app.src.main.java.howto.sound.shakemeeter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d1b37f02d16da741c4687c10467324337b3d08b8", "Url": "https://api.github.com/repos/soundlicious/ShakeMeeter", "Date": "2015-08-21T11:28:27Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.JELLY_BEAN)) { flyScheduleButton.getViewTreeObserver().removeGlobalOnLayoutListener(this); }else { flyScheduleButton.getViewTreeObserver().removeOnGlobalLayoutListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6269/buggy-version/android.flywithme.src.main.java.net.exent.flywithme.layout.TakeoffDetails.java", "BodyUseAPI": [], "Fixed commit": "8f6e25f319cf9cf7880afcd794413e671452ba0d", "Url": "https://api.github.com/repos/canidae/FlyWithMe", "Date": "2014-04-24T17:06:48Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(GameState.Move(getPlayerID(), start, end))) java.lang.System.out.println(\"Invalid move.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5373/buggy-version/src.chess.controllers.ChessPlayerController.java", "BodyUseAPI": [], "Fixed commit": "ccd965e1b18b63168cbe7d2c60c686d33bb1bd13", "Url": "https://api.github.com/repos/justingruber/CIS4150", "Date": "2014-10-19T17:38:54Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["codegenerator.CodeGen.getGenusWithName(block.getGenusName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((blockGenus.isCommandBlock()) && (block.getGenusName().equals(\"run\"))) { expression.add(getExpressionData(0, \"run(\")); if ((block.getSockets()) != null) { int count = 0; for (codegenerator.xmlbind.BlockConnector blockConnector : block.getSockets().getBlockConnectors()) { codegenerator.xmlbind.Block paramBlock = blocksMap.get(blockConnector.getConnectBlockId()); if (count > 0) { expression.add(getExpressionData(0, \",\")); } if (paramBlock != null) { java.lang.Number paramBlockId = paramBlock.getId(); if (count == 3) { expression.add(getExpressionData(paramBlock.getId(), (\"2*\" + (paramBlock.getLabel())))); }else if ((blockConnector.getType().equals(\"string\")) && (!(codeblocks.Block.getBlock(paramBlockId.longValue()).getLabelPrefix().equals(\"get \")))) expression.add(getExpressionData(paramBlock.getId(), ((\"\\\"\" + (paramBlock.getLabel())) + \"\\\"\"))); else expression.add(getExpressionData(paramBlock.getId(), paramBlock.getLabel())); } count++; } } expression.add(getExpressionData(0, \")\")); return expression; }else if ((blockGenus.isCommandBlock()) && (block.getGenusName().equals(\"play\"))) { expression.add(getExpressionData(0, \"play(100)\")); return expression; }else if ((blockGenus.isCommandBlock()) && (codeblocks.Block.getBlock(number.longValue()).getLabelPrefix().equals(\"set \"))) { expression.add(getExpressionData(0, block.getLabel())); expression.add(getExpressionData(0, \"=\")); if ((block.getSockets()) != null) { codegenerator.xmlbind.BlockConnector blockConnector = block.getSockets().getBlockConnectors().get(0); if ((blockConnector != null) && ((blocksMap.get(blockConnector.getConnectBlockId())) != null)) { codegenerator.xmlbind.Block paramBlock = blocksMap.get(blockConnector.getConnectBlockId()); if ((blockConnector.getType().equals(\"string\")) && (!(codeblocks.Block.getBlock(number.longValue()).getLabelPrefix().equals(\"get \")))) expression.add(getExpressionData(paramBlock.getId(), ((\"\\\"\" + (paramBlock.getLabel())) + \"\\\"\"))); else expression.add(getExpressionData(paramBlock.getId(), paramBlock.getLabel())); } } return expression; }else if ((blockGenus.isCommandBlock()) && (codeblocks.Block.getBlock(number.longValue()).getLabelPrefix().equals(\"reset \"))) { expression.add(getExpressionData(0, block.getLabel())); expression.add(getExpressionData(0, \"=\")); for (codegenerator.Variable variable : variableDecl) { if (variable.getName().equals(block.getLabel())) { expression.add(getExpressionData(0, getBlock(variable.getValue().get(0).getId()).getLabel())); break; } } return expression; }else if ((blockGenus.isCommandBlock()) && (codeblocks.Block.getBlock(number.longValue()).getLabelSuffix().equals(\"++\"))) { expression.add(getExpressionData(0, block.getLabel())); expression.add(getExpressionData(0, ((\"=\" + (block.getLabel())) + \"+1\"))); return expression; }else if ((blockGenus.isCommandBlock()) && (codeblocks.Block.getBlock(number.longValue()).getLabelSuffix().equals(\"--\"))) { expression.add(getExpressionData(0, block.getLabel())); expression.add(getExpressionData(0, ((\"=\" + (block.getLabel())) + \"-1\"))); return expression; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7808/buggy-version/src.codegenerator.CodeGen.java", "BodyUseAPI": ["codegenerator.xmlbind.Block.getLabel()", "codegenerator.xmlbind.Block.getLabel()", "codegenerator.CodeGen.getExpressionData(int,((\"=\" + (block.getLabel())) + \"+1\"))", "block.getSockets().getBlockConnectors()", "codegenerator.xmlbind.Block.getLabel()", "codegenerator.CodeGen.getExpressionData(int,block.getLabel())", "java.util.List<codegenerator.ExpressionData>.add(codegenerator.ExpressionData)", "block.getSockets().getBlockConnectors()", "codeblocks.BlockGenus.isCommandBlock()", "codegenerator.xmlbind.Block.getLabel()", "block.getSockets().getBlockConnectors().get(int)", "codeblocks.BlockGenus.isCommandBlock()", "java.util.List<codegenerator.ExpressionData>.add(codegenerator.ExpressionData)", "block.getGenusName().equals(java.lang.String)", "codeblocks.BlockGenus.isCommandBlock()", "java.util.List<codegenerator.ExpressionData>.add(codegenerator.ExpressionData)", "codegenerator.xmlbind.Block.getLabel()", "java.util.List<codegenerator.ExpressionData>.add(codegenerator.ExpressionData)", "codeblocks.BlockGenus.isCommandBlock()", "codeblocks.BlockGenus.isCommandBlock()", "codegenerator.CodeGen.getExpressionData(int,block.getLabel())", "codegenerator.xmlbind.Block.getLabel()", "codegenerator.xmlbind.Block.getSockets()", "codegenerator.xmlbind.Block.getSockets()", "codegenerator.xmlbind.Block.getSockets()", "codegenerator.CodeGen.getExpressionData(int,block.getLabel())", "java.util.List<codegenerator.ExpressionData>.add(codegenerator.ExpressionData)", "codegenerator.CodeGen.getExpressionData(int,((\"=\" + (block.getLabel())) + \"-1\"))", "codegenerator.xmlbind.Block.getGenusName()", "codegenerator.CodeGen.getExpressionData(int,block.getLabel())", "variable.getName().equals(block.getLabel())", "java.util.List<codegenerator.ExpressionData>.add(codegenerator.ExpressionData)", "codegenerator.xmlbind.Block.getSockets()", "codegenerator.xmlbind.Block.getLabel()"], "Fixed commit": "9f622bdd32c492f7001aa8d6d919fb68d0f714a2", "Url": "https://api.github.com/repos/bdlions/OpenBlocks", "Date": "2012-10-24T14:20:56Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.element.TypeElement.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (annotation.genDbFunc()) { if (primaryKeyCount == 0) { processingEnv.getMessager().printMessage(javax.tools.Diagnostic.Kind.ERROR, \"At least one primary key is required. put @Attribute(primaryKey=true) to field of key\", element); }else if (primaryKeyCount > 1) { processingEnv.getMessager().printMessage(javax.tools.Diagnostic.Kind.ERROR, \"Only single primary key is supported.\", element); }else { if ((annotation.autoincrement()) && (!(primaryKey.isNumber))) { processingEnv.getMessager().printMessage(javax.tools.Diagnostic.Kind.ERROR, \"use autoincrement=false, or use number type.\", element); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/719/buggy-version/cathandsgendroid-apt.src.main.java.net.cattaka.util.cathandsgendroid.apt.DataModelProcessor.java", "BodyUseAPI": ["net.cattaka.util.cathandsgendroid.annotation.DataModel.autoincrement()"], "Fixed commit": "8d55d7cb90f06b8a2265dd48eba34398dd4b53b4", "Url": "https://api.github.com/repos/cattaka/CatHandsGendroid", "Date": "2014-09-03T21:21:37Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEffect) == (com.jfeinstein.jazzyviewpager.JazzyViewPager.TransitionEffect.Stack)) { if ((mLeft) != null) { mLeft.setVisibility(com.jfeinstein.jazzyviewpager.VISIBLE); } if ((mRight) != null) { mRight.setVisibility(com.jfeinstein.jazzyviewpager.VISIBLE); } if ((oldPage) > position) { android.view.View v = findViewFromObject(((oldPage) + 1)); if (v != null) { v.setVisibility(com.jfeinstein.jazzyviewpager.INVISIBLE); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5596/buggy-version/lib.src.com.jfeinstein.jazzyviewpager.JazzyViewPager.java", "BodyUseAPI": [], "Fixed commit": "bab4597673a1d3d586db1216c66d3b4c54f590b1", "Url": "https://api.github.com/repos/bwzz/JazzyViewPager", "Date": "2014-09-02T08:06:15Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mat == (org.bukkit.Material.COCOA)) { is = new org.bukkit.inventory.ItemStack(org.bukkit.Material.INK_SACK, 1, ((short) (3))); }else { is = new org.bukkit.inventory.ItemStack(mat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1466/buggy-version/src.main.java.com.gmail.nossr50.skills.gathering.Herbalism.java", "BodyUseAPI": [], "Fixed commit": "31513d52d7a15a3f9018706a903c54662dd633f1", "Url": "https://api.github.com/repos/mcMMO-Dev/mcMMO", "Date": "2012-10-18T04:26:16Z"},
{"Line": "=>5054", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Tree.IndexExpression.getPrimary()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((primary == null) || (!(hasError(primary)))) { that.addError(\"could not determine type of receiver\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4121/buggy-version/typechecker.src.com.redhat.ceylon.compiler.typechecker.analyzer.ExpressionVisitor.java", "BodyUseAPI": [], "Fixed commit": "182956a261d1302be78c7ab33fa3908b5b0fee25", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-10-12T09:32:42Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDeconstructionRecipe()) == true) { for (net.minecraft.item.ItemStack stack : deconstructionRecipe) { transferOrEjectItem(stack); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1690/buggy-version/src.main.java.am2.blocks.tileentities.TileEntityArcaneDeconstructor.java", "BodyUseAPI": [], "Fixed commit": "4e4e93afe24a91aa50d98e2cbba3bc059587d684", "Url": "https://api.github.com/repos/DoomFruit/ArsMagica2", "Date": "2015-09-12T12:10:31Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weekDay.equals(\"S\")) { submitButton.setText(\"NO LIST FOUND\"); }else if ((((db.getAssignedAttendance(temp).size()) > 0) && (!(com.example.avggo.attendancechecker.MainActivity.submitted))) || ((!(com.example.avggo.attendancechecker.MainActivity.submitted)) && (timerCanceled))) { android.util.Log.i(\"WEEENT IIN\", size2.toString()); android.util.Log.i(\"WEEENT IIN\", timerCanceled.toString()); android.util.Log.i(\"WEEENT IIN\", com.example.avggo.attendancechecker.MainActivity.submitted.toString()); submitButton.setEnabled(true); submitButton.setText(\"SUBMIT\"); }else if (com.example.avggo.attendancechecker.MainActivity.submitted) { submitButton.setEnabled(false); submitButton.setText(\"ALREADY SUBMITTED\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6169/buggy-version/AttendanceChecker.app.src.main.java.com.example.avggo.attendancechecker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "347cb3ea723436a9687cb4fb871837a70ae17433", "Url": "https://api.github.com/repos/SOFENGG-T1AY1617/S18B-Team-Kyle", "Date": "2016-12-12T11:26:49Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flowStep.getFlow().getRunID()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3846/buggy-version/cascading-core.src.main.java.cascading.flow.planner.FlowStepJob.java", "BodyUseAPI": [], "Fixed commit": "c195833b51a104622ede560dce4459b99fa1d348", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2013-01-24T04:12:19Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.Surfer.find().where().eq(\"country\", country).findList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((surfers.size()) == 0) { models.CountryDB.deleteCountry(country); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9209/buggy-version/app.models.SurferDB.java", "BodyUseAPI": [], "Fixed commit": "331a28f4e8a9e5bb52fd6cf64941de771a9ecb27", "Url": "https://api.github.com/repos/RobNamahoe/surferpedia", "Date": "2013-12-18T10:26:38Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (item == null) { item = \"himself\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5035/buggy-version/Skypebot.src.main.java.skypebot.variables.PopItemVariable.java", "BodyUseAPI": [], "Fixed commit": "4729a5a42116ba8ca6f5946ca69ef6588a86bcbc", "Url": "https://api.github.com/repos/bglasber/Skypebot", "Date": "2013-10-19T05:14:25Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tab != null) { android.widget.TextView title = ((android.widget.TextView) (tab.findViewById(R.id.tab_title))); if (title != null) { title.setTypeface(tabTypeface, tabTypefaceStyle); android.support.v4.view.ViewCompat.setAlpha(title, tabTextAlpha); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/679/buggy-version/library.src.com.astuetz.PagerSlidingTabStrip.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.tab_title)"], "Fixed commit": "eb09e191e8f810fcc44c5602088336aad8684712", "Url": "https://api.github.com/repos/jpardogo/PagerSlidingTabStrip", "Date": "2015-01-14T10:57:10Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tab != null) { android.widget.TextView title = ((android.widget.TextView) (tab.findViewById(R.id.tab_title))); if (title != null) { title.setTypeface(tabTypeface, tabTypefaceSelectedStyle); android.support.v4.view.ViewCompat.setAlpha(title, tabTextSelectedAlpha); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/679/buggy-version/library.src.com.astuetz.PagerSlidingTabStrip.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.tab_title)"], "Fixed commit": "eb09e191e8f810fcc44c5602088336aad8684712", "Url": "https://api.github.com/repos/jpardogo/PagerSlidingTabStrip", "Date": "2015-01-14T10:57:10Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (s.contains(\"Whole\")) { imageView.setImageResource(R.drawable.backgroundbody); }else if (s.contains(\"Under\")) { imageView.setImageResource(R.drawable.underarm); }else if (s.contains(\"Lower\")) { imageView.setImageResource(R.drawable.lowerleg); }else if (s.contains(\"Upper\")) { imageView.setImageResource(R.drawable.upperleg); }else if (s.contains(\"Bikini\")) { imageView.setImageResource(R.drawable.bikiniarea); }else { imageView.setImageResource(R.drawable.backgroundbody); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/571/buggy-version/src.com.Venus.NakedSkin.EventArrayAdapter.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "2bc59bf413cbfca05d6f9a77eec12cb4ae659976", "Url": "https://api.github.com/repos/Jberlinsky/P-G-Venus", "Date": "2012-03-20T08:22:03Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subString.substring(0, 2).equalsIgnoreCase(\"Up\")) { return \"Upper Leg\"; }else if (subString.substring(0, 2).equalsIgnoreCase(\"Lo\")) { return \"Lower Leg\"; }else if (subString.substring(0, 2).equalsIgnoreCase(\"Wh\")) { return \"Whole Body\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/571/buggy-version/src.com.Venus.NakedSkin.StartActivity.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "2bc59bf413cbfca05d6f9a77eec12cb4ae659976", "Url": "https://api.github.com/repos/Jberlinsky/P-G-Venus", "Date": "2012-03-20T08:22:03Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (path.endsWith(\".ttf\")) contentType = \"application/x-font-ttf\"; else if (path.endsWith(\".woff\")) contentType = \"application/font-woff\"; else if (path.endsWith(\".eot\")) contentType = \"application/vnd.ms-fontobject\"; else if (path.endsWith(\".svg\")) contentType = \"image/svg+xml\"; else contentType = \"application/octet-stream\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7737/buggy-version/hub.src.main.java.com.kaliPATH.ha.hub.HttpStaticFileServerHandler.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "7b5fac34dc338d77afca8fe0ab90c903c1ac5445", "Url": "https://api.github.com/repos/kaliPATH/kha", "Date": "2014-05-29T11:49:36Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gestureLib.load())) { android.util.Log.i(\"debug\", \"GestureLib not loaded\"); }else android.util.Log.i(\"debug\", \"GestureLib loaded\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3792/buggy-version/FamtreeApp.src.com.example.famtreeapp.GestureActivity.java", "BodyUseAPI": [], "Fixed commit": "5a1f2ee3e3b2b2209bb3bf8c03a69c7a46b42f43", "Url": "https://api.github.com/repos/naveentammineni/FamtreeApp", "Date": "2013-09-08T13:07:56Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVisible()) redraw();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4846/buggy-version/src.gwt.src.org.rstudio.core.client.widget.ProgressSpinner.java", "BodyUseAPI": [], "Fixed commit": "b1473adf56874f540971312541fc55811e6e90f8", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-07-24T23:34:39Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tmpDbConn) == null) { java.lang.System.out.println(\"jafiuhiebn\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2747/buggy-version/src.main.java.de.tu_bs.cs.ifis.sqlgame.sandbox.Task.java", "BodyUseAPI": [], "Fixed commit": "50fc9463d5db630713cfa056e9ce0b7ef344a747", "Url": "https://api.github.com/repos/ifis-tu-bs/SQL-Alchemist-Teamprojekt", "Date": "2015-07-04T05:30:12Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (folderName == null) { android.widget.Toast.makeText(this.getActivity(), this.getResources().getString(R.string.sync_tab_sync_no_select_any_folder), Toast.LENGTH_SHORT).show(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/250/buggy-version/src.com.example.retailsale.fragment.SynchronizationFragment.java", "BodyUseAPI": [], "Fixed commit": "df6edbca74d35572095b2ae1638520708465e5ac", "Url": "https://api.github.com/repos/shin0202/RetailSale", "Date": "2014-10-28T18:46:41Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((screenshots) == null) || ((screenshots.size()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6752/buggy-version/adcleaner.src.main.java.cz.cuni.adcleaner.images.ScreenShotsManager.java", "BodyUseAPI": [], "Fixed commit": "d7b2b371c490047a54361202ba65799e6261a1be", "Url": "https://api.github.com/repos/AdCleaner/AdCleaner", "Date": "2013-02-21T14:23:40Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.ryanhamshire.GriefPrevention.DatabaseDataStore.getClaimAt(childClaim.getLesserBoundaryCorner(),boolean,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (topLevelClaim == null) { claimsToRemove.add(childClaim); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6916/buggy-version/src.me.ryanhamshire.GriefPrevention.DatabaseDataStore.java", "BodyUseAPI": [], "Fixed commit": "51810a905a3fc3c2e4c8774ae437d1e513c603cb", "Url": "https://api.github.com/repos/ryanhamshire/GriefPrevention", "Date": "2014-10-29T02:28:29Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4085/buggy-version/araqne-storage.src.main.java.org.araqne.storage.localfile.LocalFilePath.java", "BodyUseAPI": [], "Fixed commit": "68f4f6807a3ed4525678e5e633b1b72f72d0b6dd", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2013-12-27T04:47:03Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.jamoo.appgetter.RequestActivity.DEBUG) android.util.Log.i(de.jamoo.appgetter.RequestActivity.TAG, (\"iconName: \" + iconName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5513/buggy-version/src.de.jamoo.appgetter.RequestActivity.java", "BodyUseAPI": [], "Fixed commit": "c97941dc7ea8d8768111fe0e29823e53cfd808c0", "Url": "https://api.github.com/repos/Alex-R3CONN3R/AppGetter", "Date": "2014-03-27T10:25:25Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pauseflg)) { timerText = ((android.widget.TextView) (findViewById(R.id.timer))); timerText.setText(\"00:00.0\"); count = 0; lifeText = ((android.widget.TextView) (findViewById(R.id.life))); lifeText.setText(java.lang.String.format(java.util.Locale.US, \"LIFE : %d\", life)); startTimer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4535/buggy-version/app.src.main.java.jp.ac.soka.tkl.sss2017.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "88858a35b3122b1c3187fb7c675933a3b2fcfdfc", "Url": "https://api.github.com/repos/TKL-SSS/SSS2017", "Date": "2017-08-10T07:35:21Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) tool.addEnchantment(net.minecraft.enchantment.Enchantment.enchantmentsList[enchant], level);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/71/buggy-version/MODSRC.vazkii.tinkerer.common.block.tile.TileEnchanter.java", "BodyUseAPI": [], "Fixed commit": "55498358f2fab67f81c2bbca2793cca78ba890ee", "Url": "https://api.github.com/repos/Thaumic-Tinkerer/ThaumicTinkerer", "Date": "2013-10-24T17:38:29Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wolvencraft.prison.mines.mine.Mine.get(sign.getParent())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (curMine == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5312/buggy-version/src.com.wolvencraft.prison.mines.events.ButtonPressListener.java", "BodyUseAPI": [], "Fixed commit": "b12dcd1f4ff66b98a4dc126a91570c0af20a1d6e", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2013-01-15T19:58:41Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.object.ObjectManager.findAny(java.lang.Class,HOST.AGENT_ID,agent.getId(),HOST.REMOVED,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (host == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4465/buggy-version/code.iaas.service-discovery.server.src.main.java.io.cattle.platform.servicediscovery.service.impl.SkipServiceLookup.java", "BodyUseAPI": [], "Fixed commit": "8c6b08475400a7ec655549ea9ebd7d4466cf6a80", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2017-01-12T05:06:31Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.tuple.Pair<mil.nga.giat.geowave.core.store.adapter.DataAdapter<?>, mil.nga.giat.geowave.core.store.query.aggregate.Aggregation<?, ?, ?>>.getRight()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((aggr.getParameters()) != null) { iteratorSettings.addOption(AggregationIterator.CONSTRAINTS_OPTION_NAME, mil.nga.giat.geowave.core.index.ByteArrayUtils.byteArrayToString(mil.nga.giat.geowave.core.index.PersistenceUtils.toBinary(aggr.getParameters()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4639/buggy-version/extensions.datastores.accumulo.src.main.java.mil.nga.giat.geowave.datastore.accumulo.query.AccumuloConstraintsQuery.java", "BodyUseAPI": ["mil.nga.giat.geowave.core.index.ByteArrayUtils.byteArrayToString(mil.nga.giat.geowave.core.index.PersistenceUtils.toBinary(aggr.getParameters()))", "org.apache.accumulo.core.client.IteratorSetting.addOption(AggregationIterator.CONSTRAINTS_OPTION_NAME,mil.nga.giat.geowave.core.index.ByteArrayUtils.byteArrayToString(mil.nga.giat.geowave.core.index.PersistenceUtils.toBinary(aggr.getParameters())))", "mil.nga.giat.geowave.core.store.query.aggregate.Aggregation.getParameters()", "mil.nga.giat.geowave.core.index.PersistenceUtils.toBinary(aggr.getParameters())"], "Fixed commit": "3f55c2312db08fb6270797fb3a2bf8de495a5c46", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-06-28T16:36:02Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (qualifierName != null) colName = (qualifierName + \".\") + colName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5000/buggy-version/splice_machine.src.main.java.com.splicemachine.derby.impl.load.HdfsImport.java", "BodyUseAPI": [], "Fixed commit": "912ee0b904815a095b0c531444e6288ff200d766", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2017-07-21T22:30:52Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((times++) > (ids.length)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1414/buggy-version/resources.custom.application.search.java", "BodyUseAPI": [], "Fixed commit": "9fb8f3b2e8938c9a1ef293ac3841b6e46693c0cd", "Url": "https://api.github.com/repos/m0ver/mobile1.0", "Date": "2013-07-14T08:59:04Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(newUser)) { android.widget.Toast.makeText(this, \"Phone Number Already Registered!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5992/buggy-version/app.src.main.java.com.flyingburritoco.mobilemenu.SignUp.java", "BodyUseAPI": [], "Fixed commit": "34cf6f5057469d5584e1f756be83928a14490fd6", "Url": "https://api.github.com/repos/SparksCode/Flying-Burrito-Mobile", "Date": "2017-12-03T06:50:47Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(settings.rubbish.isEmpty())) { java.lang.System.err.println((\"Unrecognized option: \" + (settings.rubbish.get(0)))); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3762/buggy-version/src.ru.fizteh.fivt.students.harius.calendar.ZCalendar.java", "BodyUseAPI": ["settings.rubbish.get(int)", "java.io.PrintStream.println((\"Unrecognized option: \" + (settings.rubbish.get(0))))"], "Fixed commit": "2e4a06620e063dad611166e14567edbc5a3f3096", "Url": "https://api.github.com/repos/tolyapro/fizteh-java-task", "Date": "2012-12-01T09:39:16Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(updatingFromEditor)) { editor.setElementSelection(structureElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7683/buggy-version/plugin_ide.ui.src-lang.melnorme.lang.ide.ui.editor.structure.LangOutlinePage.java", "BodyUseAPI": [], "Fixed commit": "782926347dfb30fdb4ed4d735464c6a8f309777d", "Url": "https://api.github.com/repos/DDT-IDE/DDT", "Date": "2015-05-28T12:10:35Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (compression) { decompressor.onProducerEndOfStream(); }else { deserializer.onProducerEndOfStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7361/buggy-version/rpc.src.main.java.io.datakernel.rpc.protocol.stream.RpcStreamProtocol.java", "BodyUseAPI": [], "Fixed commit": "4b2a00daf38513ef3941da3c47dfe09e1711206e", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2015-10-19T09:11:40Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((set.getMaven()) != null) { values.add(set.getMaven().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3151/buggy-version/src.main.java.hudson.views.MavenProjectValuesHelper.java", "BodyUseAPI": ["hudson.maven.MavenModuleSet.getMaven()", "set.getMaven().getName()", "java.util.List<java.lang.String>.add(set.getMaven().getName())"], "Fixed commit": "f1dbc5276794684b72a078e1e2a2c5949e06ca5b", "Url": "https://api.github.com/repos/jenkinsci/view-job-filters-plugin", "Date": "2011-03-10T21:14:13Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bopeep.bots.MapLocation.directionTo(bopeep.bots.MapLocation)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((dirToOrigin != null) && ((bopeep.bots.Gardener.moveDistLeft) > 0)) { RobotPlayer.rc.move(dirToOrigin, bopeep.bots.Gardener.moveDistLeft); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8632/buggy-version/src.bopeep.bots.Gardener.java", "BodyUseAPI": ["RobotPlayer.rc.move(bopeep.bots.Direction,float)"], "Fixed commit": "e0f05c2f374fd015bf59b3274da3e01f86aa216e", "Url": "https://api.github.com/repos/Mshnik/battlecode-p", "Date": "2017-01-14T20:37:36Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.spDjikstra.isInitialised()) && (!(parent.spDjikstra.hasFinished()))) { if (true) { parent.spDjikstra.stepAll(); parent.clearSelectedObjects(); btnDjikstra.click(); pnlToolsAlgsRun.setVisible(false); } }else { parent.dialogHelp.show(\"To run Djikstra's algorithm, you must have a start and end node selected.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5831/buggy-version/src.uk.me.graphe.client.Toolbox.java", "BodyUseAPI": ["parent.spDjikstra.stepAll()", "uk.me.graphe.client.Graphemeui.clearSelectedObjects()", "parent.dialogHelp.show(java.lang.String)"], "Fixed commit": "da19405a54ae9e8cfbd827d3b142fae6a26dfe5b", "Url": "https://api.github.com/repos/mickyjones/spe", "Date": "2011-05-08T17:04:38Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((namespace == null) || (namespace.isEmpty())) { namespace = Namespace.PS2PC.name(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1061/buggy-version/src.com.cesarandres.ps2link.module.ObjectDataSource.java", "BodyUseAPI": [], "Fixed commit": "9bb3af4cbab5df45a81e88c1ff374620d3bdeee7", "Url": "https://api.github.com/repos/CRamsan/auraxiscontrolcenter", "Date": "2015-05-19T05:31:00Z"},
{"Line": "=>889", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((namespace == null) || (namespace.isEmpty())) { namespace = Namespace.PS2PC.name(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1061/buggy-version/src.com.cesarandres.ps2link.module.ObjectDataSource.java", "BodyUseAPI": [], "Fixed commit": "9bb3af4cbab5df45a81e88c1ff374620d3bdeee7", "Url": "https://api.github.com/repos/CRamsan/auraxiscontrolcenter", "Date": "2015-05-19T05:31:00Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isComplete())) { observable.on(reactor.Fn.T(exceptionType), new reactor.core.Consumer<reactor.core.Event<E>>() { @java.lang.Override public void accept(reactor.core.Event<E> ev) { onError.accept(ev.getData()); } }); }else { reactor.Fn.schedule(onError, ((E) (error)), observable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8773/buggy-version/reactor-core.src.main.java.reactor.core.Composable.java", "BodyUseAPI": [], "Fixed commit": "b73dd6bdfc4524e0983de123eae9d08de50aff03", "Url": "https://api.github.com/repos/reactor/reactor", "Date": "2013-05-24T14:27:02Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["za.org.grassroot.core.domain.account.AccountBillingRecord.getAccount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.springframework.util.StringUtils.isEmpty(account.getPaymentRef())) { billingRecord.setNextPaymentDate(null); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1566/buggy-version/grassroot-integration.src.main.java.za.org.grassroot.integration.payments.PaymentBrokerImpl.java", "BodyUseAPI": [], "Fixed commit": "dffb6692ef1770cc13c6ab368329e4686ddb5a5d", "Url": "https://api.github.com/repos/grassrootza/grassroot-platform", "Date": "2017-12-08T10:38:02Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errorDescription.contains(\"100.150.101\")) { za.org.grassroot.core.domain.account.Account account = record.getAccount(); account.setPaymentRef(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1566/buggy-version/grassroot-integration.src.main.java.za.org.grassroot.integration.payments.PaymentBrokerImpl.java", "BodyUseAPI": [], "Fixed commit": "dffb6692ef1770cc13c6ab368329e4686ddb5a5d", "Url": "https://api.github.com/repos/grassrootza/grassroot-platform", "Date": "2017-12-08T10:38:02Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.getId()) == (R.id.cancelButton)) { if ((popupMessage) != null) { if (scanIntent != null) { startActivity(scanIntent); android.os.Process.killProcess(android.os.Process.myPid()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3712/buggy-version/app.src.main.java.com.example.totes_rewards.totesrewards.PopupActivity.java", "BodyUseAPI": [], "Fixed commit": "52af5d0d5b66b2f95311a5cb07f08894407e515a", "Url": "https://api.github.com/repos/thangsea/Totes_Rewards", "Date": "2016-05-17T15:50:15Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (respondToDmsString != null) { respondToDms = java.lang.Boolean.valueOf(respondToDmsString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5703/buggy-version/src.main.java.net.dirtydeeds.discordsoundboard.service.SoundPlayerImpl.java", "BodyUseAPI": ["java.lang.Boolean.valueOf(java.lang.String)"], "Fixed commit": "b8ebbaabd4a1a9acfa8a290d2a3c4b9fdf35758a", "Url": "https://api.github.com/repos/Darkside138/DiscordSoundboard", "Date": "2016-11-12T01:37:56Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.corechaos.handlers.Tasks.isDisconnected(uuid))) { org.bukkit.entity.Player c = org.bukkit.Bukkit.getPlayer(uuid); if (uuid == (PlayerHandler.spec.get(((PlayerHandler.spec.size()) - 1)))) { specs = specs + (c.getName()); }else { specs = (specs + (c.getName())) + \", \"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4669/buggy-version/src.com.corechaos.utils.ChatUtilities.java", "BodyUseAPI": ["org.bukkit.Bukkit.getPlayer(java.util.UUID)"], "Fixed commit": "67dd8620281d17027d053e723cf81c5cc1f392b9", "Url": "https://api.github.com/repos/MattyBainy97/CoreChaos", "Date": "2016-01-24T00:13:52Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.firebase.client.DataSnapshot.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((messageMap.containsKey(\"id\")) && ((messageMap.get(\"id\")) != null)) { chatId = messageMap.get(\"id\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2473/buggy-version/app.src.main.java.com.citrix.wrekt.activity.FriendChatActivity.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "c9e11839388e51d388e5264ea6639efa0872c728", "Url": "https://api.github.com/repos/lcgforever/Wrekt", "Date": "2016-04-22T18:23:20Z"},
{"Line": "=>689", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.firebase.client.DataSnapshot.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((messageMap.containsKey(\"id\")) && ((messageMap.get(\"id\")) != null)) { chatId = messageMap.get(\"id\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2473/buggy-version/app.src.main.java.com.citrix.wrekt.activity.ChannelChatActivity.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "c9e11839388e51d388e5264ea6639efa0872c728", "Url": "https://api.github.com/repos/lcgforever/Wrekt", "Date": "2016-04-22T18:23:20Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bytesRead = in.read(data)) != (-1)) { com.remote.controller.utils.L.d(((\"recieve \" + bytesRead) + \"bytes data\")); java.lang.String text = new java.lang.String(data).trim(); dispatchMessage(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/642/buggy-version/app.src.main.java.com.remote.controller.network.ClientThread.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "65361e8e67e2b48dba3f66243a1d32826e295413", "Url": "https://api.github.com/repos/soaringEveryday/deviceRemoteController", "Date": "2015-11-27T05:52:40Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (method.getDeclaringClass().equals(java.lang.Object.class)) { return method.invoke(dummyObject, args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5315/buggy-version/platform.dolphin-platform-server-spring.src.main.java.com.canoo.dp.impl.server.spring.SpringBeanFactory.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.lang.String,java.lang.Object[])"], "Fixed commit": "a7a487a4d607cf1a2070c76a8fea50cc9f1577fb", "Url": "https://api.github.com/repos/canoo/dolphin-platform", "Date": "2017-07-07T08:12:08Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shell.isDisposed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2367/buggy-version/src.main.java.client.SWTGUI.java", "BodyUseAPI": [], "Fixed commit": "1726b66f52efcc010415fa411d048377d01e149e", "Url": "https://api.github.com/repos/AntonMilenin/DataProcessingService", "Date": "2015-08-18T22:41:10Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == 0) { this.setChanged(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/931/buggy-version/src.main.java.com.yotouch.core.entity.fv.IntFieldValueImpl.java", "BodyUseAPI": [], "Fixed commit": "226b08f6d1d4d892578056c628deda4822c8822a", "Url": "https://api.github.com/repos/yotouch/pylon", "Date": "2016-08-10T18:14:55Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsPortrait) { if (mIsPortrait) { float end = (mDisplayRect.left) - ((mDisplayRect.right) - (getImageViewWidth())); if ((mPanningDirection) == (com.maelstrom.panning.PanningImageViewAttacher.panningDirection.R2L)) animateImage(0, end, remainingDuration); else animateImage(end, 0, remainingDuration); }else { if ((mPanningDirection) == (com.maelstrom.panning.PanningImageViewAttacher.panningDirection.B2T)) animateImage(mDisplayRect.top, ((mDisplayRect.top) - ((mDisplayRect.bottom) - (getImageViewHeight()))), remainingDuration); else animateImage(mDisplayRect.top, 0.0F, remainingDuration); } }else { if ((mPanningDirection) == (com.maelstrom.panning.PanningImageViewAttacher.panningDirection.B2T)) animateImage(mDisplayRect.top, ((mDisplayRect.top) - ((mDisplayRect.bottom) - (getImageViewHeight()))), remainingDuration); else animateImage(mDisplayRect.top, 0.0F, remainingDuration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/495/buggy-version/panning-view.src.main.java.com.maelstrom.panning.PanningImageViewAttacher.java", "BodyUseAPI": [], "Fixed commit": "fbdcab3d7b8e08a9386d27c0de70851e55a49d82", "Url": "https://api.github.com/repos/jpage4500/PanningView", "Date": "2017-01-23T21:10:43Z"},
{"Line": "=>747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dragOperation) != null) { dragOperation.canceled(); dragOperation = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9254/buggy-version/docking-frames-core.src.bibliothek.gui.dock.control.relocator.DefaultDockRelocator.java", "BodyUseAPI": [], "Fixed commit": "4cecec1e29a09842649f9dbdd7858746f99a0df1", "Url": "https://api.github.com/repos/Benoker/DockingFrames", "Date": "2012-03-21T10:40:28Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reader == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7834/buggy-version/src.org.nutz.json.JsonCompile.java", "BodyUseAPI": [], "Fixed commit": "9777b77f461290c4c193f95ba939f75ae4628a0e", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2011-08-29T07:51:23Z"},
{"Line": "=>1636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1))) == null) { ((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().set(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1), nodeCheck(finalIfsVar)); }else if ((((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1))) instanceof com.ge.research.sadl.model.gp.ProxyNode) && ((((com.ge.research.sadl.model.gp.ProxyNode) (((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1)))).getProxyFor()) instanceof com.ge.research.sadl.model.gp.TripleElement)) && ((((com.ge.research.sadl.model.gp.TripleElement) (((com.ge.research.sadl.model.gp.ProxyNode) (((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1)))).getProxyFor())).getObject()) == null)) { ((com.ge.research.sadl.model.gp.TripleElement) (((com.ge.research.sadl.model.gp.ProxyNode) (((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1)))).getProxyFor())).setObject(nodeCheck(finalIfsVar)); }else { throw new com.ge.research.sadl.reasoner.TranslationException((\"Unhandled condition, LHS of Equal in Then isn't a BuiltinElement that needs an argument: \" + (realArgForThen.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2944/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.IntermediateFormTranslator.java", "BodyUseAPI": ["((com.ge.research.sadl.model.gp.ProxyNode) (((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1)))).getProxyFor()", "((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()", "((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()", "((com.ge.research.sadl.model.gp.TripleElement) (((com.ge.research.sadl.model.gp.ProxyNode) (((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1)))).getProxyFor())).setObject(com.ge.research.sadl.model.gp.Node)", "java.lang.Object.getArguments()", "((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().set(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1),com.ge.research.sadl.model.gp.Node)", "((com.ge.research.sadl.model.gp.ProxyNode) (((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1)))).getProxyFor()", "((com.ge.research.sadl.model.gp.ProxyNode) (((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1)))).getProxyFor()", "((com.ge.research.sadl.model.gp.TripleElement) (((com.ge.research.sadl.model.gp.ProxyNode) (((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1)))).getProxyFor())).getObject()", "((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1))", "java.lang.Object.getArguments()", "java.lang.Object.getArguments()", "((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1))", "java.lang.Object.getArguments()", "((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1))", "((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1))", "((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()", "java.lang.Object.getArguments()", "java.lang.Object.getArguments()", "java.lang.Object.getArguments()", "java.lang.Object.getArguments()", "java.lang.Object.getArguments()", "((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()", "java.lang.Object.getArguments()", "((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()"], "Fixed commit": "1711bf0c0c88560aaec36152c2891c3b53d1c8c4", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-11-07T21:01:09Z"},
{"Line": "=>1631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ge.research.sadl.model.gp.ProxyNode.getProxyFor()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((realArgForThen instanceof com.ge.research.sadl.model.gp.TripleElement) && ((((com.ge.research.sadl.model.gp.TripleElement) (realArgForThen)).getObject()) == null)) { ((com.ge.research.sadl.model.gp.TripleElement) (realArgForThen)).setObject(nodeCheck(finalIfsVar)); patterns.add(((com.ge.research.sadl.model.gp.TripleElement) (realArgForThen))); }else if ((realArgForThen instanceof com.ge.research.sadl.model.gp.BuiltinElement) && ((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments()) != null)) { if ((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1))) == null) { ((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().set(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1), nodeCheck(finalIfsVar)); }else if ((((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1))) instanceof com.ge.research.sadl.model.gp.ProxyNode) && ((((com.ge.research.sadl.model.gp.ProxyNode) (((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1)))).getProxyFor()) instanceof com.ge.research.sadl.model.gp.TripleElement)) && ((((com.ge.research.sadl.model.gp.TripleElement) (((com.ge.research.sadl.model.gp.ProxyNode) (((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1)))).getProxyFor())).getObject()) == null)) { ((com.ge.research.sadl.model.gp.TripleElement) (((com.ge.research.sadl.model.gp.ProxyNode) (((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().get(((((com.ge.research.sadl.model.gp.BuiltinElement) (realArgForThen)).getArguments().size()) - 1)))).getProxyFor())).setObject(nodeCheck(finalIfsVar)); }else { throw new com.ge.research.sadl.reasoner.TranslationException((\"Unhandled condition, LHS of Equal in Then isn't a BuiltinElement that needs an argument: \" + (realArgForThen.toString()))); } }else { throw new com.ge.research.sadl.reasoner.TranslationException((\"Unhandled condition, LHS of Equal in Then isn't a TripleElement or BuiltinElement that needs an argument: \" + (realArgForThen.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2944/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.IntermediateFormTranslator.java", "BodyUseAPI": ["java.util.List<com.ge.research.sadl.model.gp.GraphPatternElement>.add(java.lang.Object)", "java.lang.Object.toString()", "java.lang.Object.setObject(com.ge.research.sadl.model.gp.Node)", "java.lang.Object.toString()"], "Fixed commit": "1711bf0c0c88560aaec36152c2891c3b53d1c8c4", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-11-07T21:01:09Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (downloadFileInfo.isResumeSupported()) return new com.github.dhavalmehta1997.savetogoogledrive.uploader.drive.ResumableDriveUploader(downloadFileInfo, user); else return new com.github.dhavalmehta1997.savetogoogledrive.uploader.drive.NonResumableDriveUploader(downloadFileInfo, user);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4978/buggy-version/src.main.java.com.github.dhavalmehta1997.savetogoogledrive.uploader.drive.DriveUploaderBuilder.java", "BodyUseAPI": [], "Fixed commit": "2f0c398cc08f03fd4acf7e778896271259bb1ba4", "Url": "https://api.github.com/repos/dhaval-mehta/url-to-google-drive", "Date": "2017-10-02T07:15:56Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numOpenFiles) >= (nachos.userprog.UserProcess.MAX_SIZE)) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9212/buggy-version/userprog.UserProcess.java", "BodyUseAPI": [], "Fixed commit": "8774aa253a4b60f1c06fc86737561bc072fffe43", "Url": "https://api.github.com/repos/whymenot/cs162_proj1", "Date": "2013-03-21T02:17:00Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (password) setEchoChar(noBullet);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/62/buggy-version/src.javax.swing.MTextField.java", "BodyUseAPI": [], "Fixed commit": "cfede897c2190102dd72106d783a7065700c5b7e", "Url": "https://api.github.com/repos/micmarsh/MTextField", "Date": "2012-05-20T15:32:16Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Parser.Parser.getStartingIndex(java.lang.String[])", "Parser.Parser.getIndexOfKey(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (end < start) { end = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4659/buggy-version/main.Parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "1655f1aa5698b89161322dc77d2a6c85e97dd26e", "Url": "https://api.github.com/repos/cs2103jan2016-f13-3j/main", "Date": "2016-03-31T21:48:13Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (section.equals(\"REP\")) { userList = parker.serb.sql.User.loadSectionDropDownsPlusALJ(section); }else { userList = parker.serb.sql.User.loadSectionDropDowns(section); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5573/buggy-version/src.main.java.parker.serb.docket.scanFileDialog.java", "BodyUseAPI": ["parker.serb.sql.User.loadSectionDropDownsPlusALJ(java.lang.String)", "parker.serb.sql.User.loadSectionDropDowns(java.lang.String)"], "Fixed commit": "b0823e27b4ed6c56807eb15ec2ba879cd50880db", "Url": "https://api.github.com/repos/CurrentlyNotSet/SERB", "Date": "2017-03-15T20:55:31Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (section.equals(\"REP\")) { userList = parker.serb.sql.User.loadSectionDropDownsPlusALJ(section); }else { userList = parker.serb.sql.User.loadSectionDropDowns(section); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5573/buggy-version/src.main.java.parker.serb.docket.mediaFileDialog.java", "BodyUseAPI": ["parker.serb.sql.User.loadSectionDropDownsPlusALJ(java.lang.String)", "parker.serb.sql.User.loadSectionDropDowns(java.lang.String)"], "Fixed commit": "b0823e27b4ed6c56807eb15ec2ba879cd50880db", "Url": "https://api.github.com/repos/CurrentlyNotSet/SERB", "Date": "2017-03-15T20:55:31Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.roo.file.monitor.event.FileDetails.getCanonicalPath()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(possibleParent.endsWith(java.io.File.separator))) { possibleParent = possibleParent.concat(java.io.File.separator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3739/buggy-version/runtime.project.src.main.java.org.springframework.roo.project.MavenPathResolvingStrategy.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "0485ebc564b5bb483b56312a10a29431aa6ba361", "Url": "https://api.github.com/repos/spring-projects/spring-roo", "Date": "2016-10-14T11:01:21Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { this.setLayerType(View.LAYER_TYPE_SOFTWARE, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4868/buggy-version/app.src.main.java.com.kiminonawa.mydiary.entries.calendar.PageEffectView.java", "BodyUseAPI": [], "Fixed commit": "8bdae7d2114eb514cee6caed1594a6bdb4544d07", "Url": "https://api.github.com/repos/DaPATHK/MyDiary", "Date": "2017-02-15T08:18:14Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(SliceOrderProperties.SLICE_SIZE.key)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (sliceSize != null) _sliceSize = java.lang.Long.parseLong(sliceSize);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8659/buggy-version/common.src.de.zib.gndms.common.model.gorfx.types.io.SliceOrderPropertyReader.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "58a100f59166af387f7da2727ebf38586d4430e3", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2012-09-12T13:17:33Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(SliceOrderProperties.SLICE_TERMINATION_TIME.key)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (sliceTermTime != null) _sliceTermTime = org.joda.time.format.ISODateTimeFormat.dateTimeParser().parseDateTime(sliceTermTime);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8659/buggy-version/common.src.de.zib.gndms.common.model.gorfx.types.io.SliceOrderPropertyReader.java", "BodyUseAPI": ["org.joda.time.format.ISODateTimeFormat.dateTimeParser().parseDateTime(java.lang.String)"], "Fixed commit": "58a100f59166af387f7da2727ebf38586d4430e3", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2012-09-12T13:17:33Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (model.getFilteredPersonList().get(targetIndex.getZeroBased()).getAddress().isPrivate()) { throw new seedu.address.logic.commands.exceptions.CommandException(java.lang.String.format(seedu.address.logic.commands.LocateCommand.MESSAGE_PRIVATE_ADDRESS_FAILURE, targetIndex.getOneBased())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7592/buggy-version/src.main.java.seedu.address.logic.commands.LocateCommand.java", "BodyUseAPI": ["seedu.address.commons.core.index.Index.getOneBased()", "java.lang.String.format(java.lang.String,targetIndex.getOneBased())"], "Fixed commit": "ce298ca953bab732142a0cbd446df5da6e38e528", "Url": "https://api.github.com/repos/CS2103AUG2017-W09-B2/main", "Date": "2017-10-31T17:17:29Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.github.yannici.bedwars.Main.getInstance().getBooleanConfig(\"teamname-on-tab\", false)) { if ((team == null) || isSpectator) { player.setPlayerListName(player.getName()); }else { player.setPlayerListName(((((((team.getChatColor()) + (team.getName())) + (org.bukkit.ChatColor.WHITE)) + \" | \") + (team.getChatColor())) + (player.getName()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7487/buggy-version/src.io.github.yannici.bedwars.Listener.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "5196fff00c41b3fa82d97c516ec9502a49773522", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-07-02T16:30:10Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.company.IntWritable.get()", "com.company.IntWritable.get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (s_size < t_size) reducerManager.Partition(s_size, t_size, total_number_of_reducers, sRange, tRange, true); else { reducerManager.Partition(t_size, s_size, total_number_of_reducers, sRange, tRange, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7037/buggy-version/RJProject.src.com.company.PartitionJoin.java", "BodyUseAPI": ["com.company.ReducerManager.Partition(int,int,int,com.company.Range,com.company.Range,boolean)", "com.company.ReducerManager.Partition(int,int,int,com.company.Range,com.company.Range,boolean)"], "Fixed commit": "d17c23b60a6440e066512030f294385b7db034c7", "Url": "https://api.github.com/repos/SuperCloudComputingTeam/RJProject", "Date": "2014-12-11T08:35:59Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.isDirectory()) { throw new java.lang.IllegalArgumentException((\"File is a directory, not a baseline file: \" + file)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6020/buggy-version/spanner-library.src.main.java.dk.ilios.spanner.SpannerConfig.java", "BodyUseAPI": [], "Fixed commit": "3d5f1ba6ca97db257ecede500806d03314dd640e", "Url": "https://api.github.com/repos/cmelchior/spanner", "Date": "2015-11-07T10:35:38Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.objectsecurity.jena.Context.INSTANCE) == null) { synchronized(com.objectsecurity.jena.Context.INSTANCE_lock) { if ((com.objectsecurity.jena.Context.INSTANCE) == null) { com.objectsecurity.jena.Context.INSTANCE = new com.objectsecurity.jena.Context(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5934/buggy-version/semanticXWiki.src.main.java.com.objectsecurity.jena.Context.java", "BodyUseAPI": [], "Fixed commit": "279a030ce63573549c42efda68e850018b90a7f0", "Url": "https://api.github.com/repos/kgardas/semxwiki", "Date": "2014-06-12T14:26:50Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.durability) < 0) item.durability = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6211/buggy-version/src.ltguide.giveto.GiveTo.java", "BodyUseAPI": [], "Fixed commit": "8b682f2761596787ba9cba39d2e6c6c9e1bd91b4", "Url": "https://api.github.com/repos/ltguide/CraftBukkit-GiveTo", "Date": "2011-06-28T21:49:55Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (separator < 0) separator = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/860/buggy-version/Comics.src.main.java.ca.kklee.comics.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "bc24b4367c0fd2825a120ba5e3cf56449619a2b1", "Url": "https://api.github.com/repos/kklee305/Comics", "Date": "2015-06-22T15:17:16Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (RATE_ASTHMA_TEXT.getText().toString().equals(\"\")) { android.widget.Toast.makeText(getBaseContext(), \"Error... Enter the rate score first\", Toast.LENGTH_LONG).show(); RATE_ASTHMA_TEXT.requestFocus(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/422/buggy-version/app.src.main.java.edu.pdx.oss.asthmacontrol.ScoreActivity.java", "BodyUseAPI": ["android.widget.EditText.requestFocus()"], "Fixed commit": "9822f298f58a3ca89c239012bb214e45f9071ab9", "Url": "https://api.github.com/repos/Azzam-Enajjar/AsthmaControl", "Date": "2015-07-29T17:05:02Z"},
{"Line": "=>746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["coordinator.getCoordinatorClient().getTargetInfo(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (siteError != null) { siteError.cleanup(); coordinator.getCoordinatorClient().setTargetInfo(siteId, siteError); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8849/buggy-version/syssvc.src.main.java.com.emc.storageos.systemservices.impl.property.VdcSiteManager.java", "BodyUseAPI": ["coordinator.getCoordinatorClient().setTargetInfo(java.lang.String,com.emc.storageos.coordinator.client.model.SiteError)", "com.emc.storageos.coordinator.client.model.SiteError.cleanup()"], "Fixed commit": "2c613a5ec64c3d5f5f0e91655c5dbd2350e7446f", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-10-30T01:40:57Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(object.getKeys().containsKey(\"gid\"))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4843/buggy-version/src.main.java.com.trenurbanoapp.josm.SqlScriptReader.java", "BodyUseAPI": [], "Fixed commit": "5f3396f3d406ec583891b1aa3213eed5f0cbf477", "Url": "https://api.github.com/repos/vramirez122000/josm-tuapp-editor", "Date": "2015-11-30T14:42:16Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parentIfChain.GetFirstInParentContainer().GetAboveBlockChain()) != null) { if ((parentIfChain.GetFirstInParentContainer().GetAboveBlockChain().GetNextBlockAfterIf()) != null) { com.mygdx.game.LogicBlocks.BlockChain.SetUpperLowerRelations(underIfStatementBlock, parentIfChain.GetFirstInParentContainer().GetAboveBlockChain().GetNextBlockAfterIf()); } }else if ((parentIfChain.GetFirstInParentContainer().GetAboveBlockChain()) == null) { if (chainDirectlyAfterParent != null) { com.mygdx.game.LogicBlocks.BlockChain.SetUpperLowerRelations(underIfStatementBlock, chainDirectlyAfterParent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/607/buggy-version/core.src.com.mygdx.game.LogicBlocks.FullBlockScript.java", "BodyUseAPI": ["com.mygdx.game.LogicBlocks.BlockChain.SetUpperLowerRelations(com.mygdx.game.LogicBlocks.BlockChain,parentIfChain.GetFirstInParentContainer().GetAboveBlockChain().GetNextBlockAfterIf())", "parentIfChain.GetFirstInParentContainer().GetAboveBlockChain()", "com.mygdx.game.LogicBlocks.BlockChain.GetFirstInParentContainer()", "parentIfChain.GetFirstInParentContainer().GetAboveBlockChain()", "com.mygdx.game.LogicBlocks.BlockChain.GetFirstInParentContainer()", "com.mygdx.game.LogicBlocks.BlockChain.GetFirstInParentContainer()", "parentIfChain.GetFirstInParentContainer().GetAboveBlockChain().GetNextBlockAfterIf()", "parentIfChain.GetFirstInParentContainer().GetAboveBlockChain().GetNextBlockAfterIf()", "parentIfChain.GetFirstInParentContainer().GetAboveBlockChain()"], "Fixed commit": "496709820b90e451d4eb229549b07f55235d1e8e", "Url": "https://api.github.com/repos/Demorro/Git---Honours", "Date": "2015-02-25T11:30:22Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.lts.core.commons.utils.StringUtils.isNotEmpty(request.getTaskId())) { query.field(\"taskId\").equal(request.getTaskId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4756/buggy-version/lts-logger.lts-logger-mongo.src.main.java.com.lts.biz.logger.mongo.MongoJobLogger.java", "BodyUseAPI": ["com.lts.biz.logger.domain.JobLoggerRequest.getTaskId()", "query.field(\"taskId\").equal(request.getTaskId())"], "Fixed commit": "ba68539e73ce963b91660b1769f2fa2193a36c83", "Url": "https://api.github.com/repos/xiexingguang/light-task-scheduler", "Date": "2015-10-23T11:45:12Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((harmonicContributions.length) > 1) { template[getPitchClassForIthHarmonic(fundamentalPitchClass, 1)] += (harmonicContributions[1]) * coefficient; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6209/buggy-version/chordest.src.main.java.chordest.chord.templates.TemplateProducer.java", "BodyUseAPI": [], "Fixed commit": "9e12b11e8c54393c8f9ecd2487ebf570be32abcd", "Url": "https://api.github.com/repos/nglazyrin/chordest", "Date": "2014-01-09T04:11:06Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menuItem.getItemId()) == (R.id.navigation_button_sample)) { startActivity(new android.content.Intent(this, me.zhuao.android.sample.activity.ButtonActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8203/buggy-version/Sample.src.main.java.me.zhuao.android.sample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "87e37792ae6781214f0579e60988f7becaff9aaa", "Url": "https://api.github.com/repos/zhuao/AndroidSketch", "Date": "2015-11-12T16:51:27Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (model == null) { throw new spoon.SpoonException(\" Unable to create the model, pom not found?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2247/buggy-version/src.main.java.spoon.MavenLauncher.java", "BodyUseAPI": [], "Fixed commit": "2ac9e80c3fea4d70704891b79d3b050e0efadad2", "Url": "https://api.github.com/repos/tdurieux/spoon", "Date": "2017-09-15T10:29:46Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.kmelia.control.ejb.KmeliaBm.getPublicationDetail(com.stratelia.webactiv.util.publication.model.PublicationPK)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pub != null) { getKmeliaBm().externalElementsOfPublicationHaveChanged(pubPK, null, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3527/buggy-version/kmelia.kmelia-ejb.src.main.java.com.stratelia.webactiv.kmelia.control.AttachmentKmeliaListener.java", "BodyUseAPI": [], "Fixed commit": "8335336d4e28e4066ea42f373b9204d5998658fc", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2014-09-09T14:15:42Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cordovaplugincamerapreview.CameraActivity.4.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((isAdded()) && (activity != null)) { final android.widget.RelativeLayout frameCamContainerLayout = ((android.widget.RelativeLayout) (view.findViewById(getResources().getIdentifier(\"frame_camera_cont\", \"id\", appResourcesPackage)))); android.widget.FrameLayout.LayoutParams camViewLayout = new android.widget.FrameLayout.LayoutParams(frameContainerLayout.getWidth(), frameContainerLayout.getHeight()); camViewLayout.gravity = (android.view.Gravity.CENTER_HORIZONTAL) | (android.view.Gravity.CENTER_VERTICAL); frameCamContainerLayout.setLayoutParams(camViewLayout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8469/buggy-version/src.android.CameraActivity.java", "BodyUseAPI": [], "Fixed commit": "478c532c79a353c8b2f454318bfc724988257ec7", "Url": "https://api.github.com/repos/cordova-plugin-camera-preview/cordova-plugin-camera-preview", "Date": "2017-10-26T08:12:19Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((folderDo.getThumbnails()) != null) { if ((folderDo.getThumbnails().getUrl()) != null) { if (!(folderDo.getThumbnails().getUrl().isEmpty())) { collectionImage.setUrl(folderDo.getThumbnails().getUrl()); }else { collectionImage.setUrl(org.ednovo.gooru.client.mvp.shelf.collection.folders.item.ShelfFolderItemChildView.DEFULT_IMAGE_PREFIX); } }else { collectionImage.setUrl(org.ednovo.gooru.client.mvp.shelf.collection.folders.item.ShelfFolderItemChildView.DEFULT_IMAGE_PREFIX); } }else { collectionImage.setUrl(org.ednovo.gooru.client.mvp.shelf.collection.folders.item.ShelfFolderItemChildView.DEFULT_IMAGE_PREFIX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6125/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.collection.folders.item.ShelfFolderItemChildView.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.Image.setUrl(folderDo.getThumbnails().getUrl())", "folderDo.getThumbnails().getUrl().isEmpty()", "folderDo.getThumbnails().getUrl()", "org.ednovo.gooru.shared.model.folder.FolderDo.getThumbnails()", "org.ednovo.gooru.shared.model.folder.FolderDo.getThumbnails()", "org.ednovo.gooru.shared.model.folder.FolderDo.getThumbnails()", "folderDo.getThumbnails().getUrl()", "folderDo.getThumbnails().getUrl()"], "Fixed commit": "d945ae2c5c81c58e8e44045506b21d65666bc354", "Url": "https://api.github.com/repos/sravanthi1/Gooru-Web", "Date": "2014-05-13T20:08:06Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((reusableByteArray.length) == 0) throw new java.lang.IllegalArgumentException(\"CircularBuffer must be at least one byte\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5374/buggy-version/ByteArrayCircularBuffer.java", "BodyUseAPI": [], "Fixed commit": "40fe34be40840bb2cf98a61d5234a324d5c30e5a", "Url": "https://api.github.com/repos/ezekielnewren/Multiplexer", "Date": "2016-08-03T04:08:53Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jtrfp.trcl.core.TR.getWorld()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (world != null) { world.itemsWithinRadiusOf(tr.renderer.get().getCamera().getCameraPosition(), new org.jtrfp.trcl.Submitter<org.jtrfp.trcl.obj.PositionedRenderable>() { @java.lang.Override public void submit(org.jtrfp.trcl.obj.PositionedRenderable item) { if (item instanceof org.jtrfp.trcl.obj.WorldObject) { final org.jtrfp.trcl.obj.WorldObject wo = ((org.jtrfp.trcl.obj.WorldObject) (item)); if (wo.isCollideable()) collideable.add(wo); } } @java.lang.Override public void submit(java.util.Collection<org.jtrfp.trcl.obj.PositionedRenderable> items) { synchronized(items) { for (org.jtrfp.trcl.obj.PositionedRenderable pr : items) { submit(pr); } } } }); flip = !(flip); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1101/buggy-version/src.main.java.org.jtrfp.trcl.obj.CollisionManager.java", "BodyUseAPI": ["org.jtrfp.trcl.World.itemsWithinRadiusOf(tr.renderer.get().getCamera().getCameraPosition(),org.jtrfp.trcl.Submitter<org.jtrfp.trcl.obj.PositionedRenderable>)"], "Fixed commit": "954c8c8c661d55f08fa2323648a0247f58a399fa", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-11-04T16:44:58Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity instanceof net.minecraft.entity.player.EntityPlayer) && (de.teamdna.mf.event.EntityHandler.isAcidResistant(((net.minecraft.entity.player.EntityPlayer) (entity))))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2621/buggy-version/java.de.teamdna.mf.block.BlockFluid.java", "BodyUseAPI": [], "Fixed commit": "84b52093e632778deb67aae371d812aa6f3aaeed", "Url": "https://api.github.com/repos/websitenmaker12/MineFracturing", "Date": "2014-06-04T16:13:09Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sessionFactory.getCurrentSession().createSQLQuery(dataSQL).setParameter(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((getData.uniqueResult()) == null) { sql += null; }else { sql += (\"'\" + (getData.uniqueResult())) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/439/buggy-version/src.main.java.com.ut.dph.dao.impl.transactionOutDAOImpl.java", "BodyUseAPI": ["org.hibernate.Query.uniqueResult()"], "Fixed commit": "55d6835b4df8012cae36c6ceafb2697fecae2d24", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2014-03-03T20:55:15Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentUser.getCurrentGameID().equals(\"\"))) { dbRef.child(constants.db_Games).child(currentUser.getCurrentGameID()).child(constants.db_Games_DrawingURL).setValue(downloadUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/25/buggy-version/app.src.main.java.hu.ait.keyshawn.idoodle.View.DrawingView.java", "BodyUseAPI": ["dbRef.child(constants.db_Games).child(currentUser.getCurrentGameID()).child(constants.db_Games_DrawingURL).setValue(java.lang.String)", "dbRef.child(constants.db_Games).child(currentUser.getCurrentGameID())", "dbRef.child(constants.db_Games).child(currentUser.getCurrentGameID()).child(constants.db_Games_DrawingURL)", "hu.ait.keyshawn.idoodle.data.User.getCurrentGameID()"], "Fixed commit": "a1696f3a3b36b977a24d5892f71bfdf4d499d36a", "Url": "https://api.github.com/repos/kjbappsllc/IDoodle", "Date": "2017-05-19T19:09:06Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (session.isConnected()) { org.androidpn.server.xmpp.net.XmppIoHandler.log.debug(\"the session is still connect...do nothing.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2062/buggy-version/androidpn-server-bin-tomcat.src.org.androidpn.server.xmpp.net.XmppIoHandler.java", "BodyUseAPI": [], "Fixed commit": "fbdb1b7585a6c983106c948fe8fb9844cb79781b", "Url": "https://api.github.com/repos/msdx/androidpn", "Date": "2014-04-11T09:26:09Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.atc.service.asset.IAssetService.findAssets(com.atc.domains.asset.entity.Asset)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((list.size()) > 0) { mav.addObject(\"list\", list); mav.setViewName(\"asset/assets\"); return mav; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3518/buggy-version/src.main.java.com.atc.web.controller.asset.AssetController.java", "BodyUseAPI": ["org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,java.util.List<com.atc.domains.asset.entity.Asset>)"], "Fixed commit": "0aa00a1388ce1f42281831e7ee0edf5693109f3c", "Url": "https://api.github.com/repos/fengjunkuan2006/rtfm-poc", "Date": "2016-08-04T05:11:23Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.njit.cs631citylib.DBManager.execQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((resultl.size()) != 0) { javax.swing.JOptionPane.showMessageDialog(null, \"Reader already exists. CANNOT INSERT\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8111/buggy-version/src.edu.njit.cs631citylib.AddReader.java", "BodyUseAPI": [], "Fixed commit": "8e3c5f25256339c41512e7edf95180848dc633eb", "Url": "https://api.github.com/repos/meiyan-xie/16_fall_cs631-library", "Date": "2016-12-14T19:20:51Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.njit.cs631citylib.DBManager.execUpdate(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (afr > 0) { javax.swing.JOptionPane.showMessageDialog(null, \"1 reader inserted to database\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8111/buggy-version/src.edu.njit.cs631citylib.AddReader.java", "BodyUseAPI": [], "Fixed commit": "8e3c5f25256339c41512e7edf95180848dc633eb", "Url": "https://api.github.com/repos/meiyan-xie/16_fall_cs631-library", "Date": "2016-12-14T19:20:51Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.nickozoulis.teamproj.activities.MainActivity.getReferees().size()) <= 12) { android.content.Intent refereeProfileIntent = new android.content.Intent(mainActivity, com.example.nickozoulis.teamproj.activities.ActivityCreateReferee.class); startActivityForResult(refereeProfileIntent, com.example.nickozoulis.teamproj.activities.MainActivity.REQUEST_CODE); }else { showToast(\"Maximum Referee number is reached! [12]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5335/buggy-version/app.src.main.java.com.example.nickozoulis.teamproj.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "446bda800234fd9ec20dbad38df77cce3b882435", "Url": "https://api.github.com/repos/nickozoulis/javaball", "Date": "2015-09-24T14:16:06Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(soundStr)) { sound = com.yidian.push.weather.data.Sound.valueOf(soundStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/280/buggy-version/weather.src.main.java.com.yidian.push.weather.data.Sound.java", "BodyUseAPI": ["com.yidian.push.weather.data.Sound.valueOf(java.lang.String)"], "Fixed commit": "e3a6359e3eb08db197285fd994551a628bf00dbb", "Url": "https://api.github.com/repos/siyu618/push_notification", "Date": "2016-03-02T11:34:16Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Constants.LOCATION_MATCHTYPE_EXACT.equals(location.getMatchType())) { return com.dianping.phoenix.lb.model.nginx.NginxLocation.MatchType.EXACT; }else { return com.dianping.phoenix.lb.model.nginx.NginxLocation.MatchType.COMMON; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4047/buggy-version/phoenix-load-balancer.src.main.java.com.dianping.phoenix.lb.visitor.NginxConfigVisitor.java", "BodyUseAPI": [], "Fixed commit": "c0a8f78ef63393c55386ac20927a32ebf1e4fbd5", "Url": "https://api.github.com/repos/atellwu/phoenix", "Date": "2013-12-11T09:46:45Z"},
{"Line": "=>821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.tcf.te.ui.controls.AbstractDecoratedDialogPageControl.isValid()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!valid) return valid;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7286/buggy-version/target_explorer.plugins.org.eclipse.tcf.te.launch.ui.src.org.eclipse.tcf.te.launch.ui.tabs.launchcontext.AbstractContextSelectorControl.java", "BodyUseAPI": [], "Fixed commit": "4b2c19a4c25ca40ffee67d72263b77443686fc25", "Url": "https://api.github.com/repos/wind-river-cdt/tcf", "Date": "2012-05-31T18:13:31Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (identifierEquals(\"LONG\")) { lexer.nextToken(); acceptIdentifier(\"RAW\"); typeName = \"LONG RAW\"; }else { com.alibaba.druid.sql.ast.SQLName typeExpr = name(); typeName = typeExpr.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4672/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.oracle.parser.OracleExprParser.java", "BodyUseAPI": [], "Fixed commit": "82ef6aafd2683fe244d75bccad3d26381aa111a6", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2013-08-04T13:54:40Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkInternetConnection()) saveBitmap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8998/buggy-version/src.com.example.BestPhoto.RecentActivity.java", "BodyUseAPI": [], "Fixed commit": "2a5ba5afb6d38ade707bd9667bda325bdfa58a34", "Url": "https://api.github.com/repos/kirtov/extratask1", "Date": "2014-01-19T14:19:25Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aksw.jena_sparql_api_sparql_path2.ValueSet<org.apache.jena.graph.Node>.getValues()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(nodes.isEmpty())) { org.apache.jena.sparql.expr.Expr expr = new org.apache.jena.sparql.expr.E_NotOneOf(new org.apache.jena.sparql.expr.ExprVar(org.aksw.jena_sparql_api.utils.Vars.p), org.aksw.jena_sparql_api.utils.ExprListUtils.nodesToExprs(nodes)); rsb.nav(expr, (!reverse)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/958/buggy-version/jena-sparql-api-concepts.src.main.java.org.aksw.jena_sparql_api_sparql_path2.PathVisitorResourceShapeBuilder.java", "BodyUseAPI": ["org.aksw.jena_sparql_api.utils.ExprListUtils.nodesToExprs(java.util.Set<org.apache.jena.graph.Node>)"], "Fixed commit": "0eb02956ec46a9e8f7dc290eb2b526eee039f614", "Url": "https://api.github.com/repos/SmartDataAnalytics/jena-sparql-api", "Date": "2016-02-24T01:34:26Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["certUtil.getKeystoreHandler().getMCCertificate(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (caCert == null) { return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6935/buggy-version/src.main.java.net.maritimecloud.identityregistry.controllers.CertificateController.java", "BodyUseAPI": [], "Fixed commit": "8f594a59d6dfc727c1372548a60347c64e22de9d", "Url": "https://api.github.com/repos/MaritimeConnectivityPlatform/IdentityRegistry", "Date": "2017-04-05T08:21:51Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(requestData.getRequestSubject().getIndex().equalsIgnoreCase(requestSubjectIndex))) { requestData = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6126/buggy-version/source.public-request-form.src.main.java.ru.rpn.publicrequestform.controller.check.CheckController.java", "BodyUseAPI": [], "Fixed commit": "e5f28bee3891575cd532a25577c4f259ec4271aa", "Url": "https://api.github.com/repos/eugenscobich/RPN-Public-Request-Form", "Date": "2013-06-24T19:35:42Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ucsb.hopefully_unhackable.controllers.MainController.retrieve(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { return \"[]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/106/buggy-version/src.main.java.edu.ucsb.hopefully_unhackable.controllers.MainController.java", "BodyUseAPI": [], "Fixed commit": "c2f61cf0c9ccbba59b2c000de1ad7b5750089e3c", "Url": "https://api.github.com/repos/2yangk23/Hopefully_Unhackable", "Date": "2016-01-19T21:23:56Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((keywords.length) == 0) { return \"[]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/106/buggy-version/src.main.java.edu.ucsb.hopefully_unhackable.controllers.MainController.java", "BodyUseAPI": [], "Fixed commit": "c2f61cf0c9ccbba59b2c000de1ad7b5750089e3c", "Url": "https://api.github.com/repos/2yangk23/Hopefully_Unhackable", "Date": "2016-01-19T21:23:56Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (query.isEmpty()) { return \"[]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/106/buggy-version/src.main.java.edu.ucsb.hopefully_unhackable.controllers.MainController.java", "BodyUseAPI": [], "Fixed commit": "c2f61cf0c9ccbba59b2c000de1ad7b5750089e3c", "Url": "https://api.github.com/repos/2yangk23/Hopefully_Unhackable", "Date": "2016-01-19T21:23:56Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (withCookies) { cookies = new java.util.LinkedHashMap<>(); for (java.util.Map.Entry<java.lang.String, java.lang.Object> cookie : theCookies.theParams.entrySet()) cookies.put(cookie.getKey(), ((java.lang.String) (cookie.getValue()))); }else cookies = java.util.Collections.emptyMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6171/buggy-version/src.main.java.org.qommons.net.HttpConnector.java", "BodyUseAPI": [], "Fixed commit": "d46ff44fda59ca0cc9a4cd30999c0d02754998c8", "Url": "https://api.github.com/repos/Updownquark/Qommons", "Date": "2016-12-16T23:09:01Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validateHAInfo(clusterCreate.getNodeGroups()))) { com.vmware.bdd.cli.commands.CommandsUtils.printCmdFailure(Constants.OUTPUT_OBJECT_CLUSTER, name, Constants.OUTPUT_OP_CREATE, Constants.OUTPUT_OP_RESULT_FAIL, ((Constants.PARAM_CLUSTER_SPEC_HA_ERROR) + specFilePath)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4831/buggy-version/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java", "BodyUseAPI": [], "Fixed commit": "0cad321b66953cde19d810b246e85ebb36e81e7c", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2012-07-27T22:27:47Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8683/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "6bda1fe821f2c4ab1cb5429479a1cb289889bf0d", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-23T03:50:09Z"},
{"Line": "=>771", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(expressionsPostFix.empty())) expressionsPostFix.pop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9163/buggy-version/CalcV7.src.Model.java", "BodyUseAPI": ["java.util.Stack<java.lang.String>.pop()"], "Fixed commit": "f1361b31174cf448831ee1b598a63314ac704d8f", "Url": "https://api.github.com/repos/Bastani/PostfixCalc", "Date": "2016-03-29T20:40:16Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["overwatch.controllers.Database.query(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(ers.isEmpty())) { rankTab.number.field.setText((\"\" + (ers.getElemAs(\"rankNo\", java.lang.Integer.class)))); rankTab.name.field.setText(ers.getElemAs(\"name\", java.lang.String.class)); rankTab.securityLevel.field.setText((\"\" + (ers.getElemAs(\"privilegeLevel\", java.lang.Integer.class)))); }else { overwatch.core.Gui.showErrorDialogue(\"No longer exists\", \"The selected rank no longer exists\"); populateTabList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9047/buggy-version/overwatch.src.overwatch.controllers.RankLogic.java", "BodyUseAPI": ["rankTab.number.field.setText((\"\" + (ers.getElemAs(\"rankNo\", java.lang.Integer.class))))", "rankTab.securityLevel.field.setText((\"\" + (ers.getElemAs(\"privilegeLevel\", java.lang.Integer.class))))", "overwatch.controllers.EnhancedResultSet.getElemAs(java.lang.String,java.lang.Class)", "overwatch.controllers.EnhancedResultSet.getElemAs(java.lang.String,java.lang.Class)", "rankTab.name.field.setText(ers.getElemAs(\"name\", java.lang.String.class))", "overwatch.controllers.EnhancedResultSet.getElemAs(java.lang.String,java.lang.Class)"], "Fixed commit": "163a3ee9dee786149e9d20eecebe41a0a0cd27e6", "Url": "https://api.github.com/repos/LeeCIT/overwatch", "Date": "2013-04-11T00:44:13Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["overwatch.controllers.Database.update(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mods <= 0) { overwatch.core.Gui.showErrorDialogue(\"Rank deleted\", \"Rank deleted by someone else\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9047/buggy-version/overwatch.src.overwatch.controllers.RankLogic.java", "BodyUseAPI": [], "Fixed commit": "163a3ee9dee786149e9d20eecebe41a0a0cd27e6", "Url": "https://api.github.com/repos/LeeCIT/overwatch", "Date": "2013-04-11T00:44:13Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!butterflyPlaced) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6690/buggy-version/core.src.com.mygdx.game.util.GameStateHandler.java", "BodyUseAPI": [], "Fixed commit": "850681bd5b6f1a42e7c8b68881b2ff7e5de71d3a", "Url": "https://api.github.com/repos/piaoasd123/MAD", "Date": "2014-12-09T19:37:08Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tk.wurst_client.ai.WalkPathProcessor.get(tk.wurst_client.ai.WalkPathProcessor)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mc.player.isInWater()) && ((mc.player.posY) < (nextPos.getY()))) mc.gameSettings.keyBindJump.pressed = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3239/buggy-version/src.tk.wurst_client.ai.WalkPathProcessor.java", "BodyUseAPI": [], "Fixed commit": "bb23e963300261efdac53706d14744dfe70806d0", "Url": "https://api.github.com/repos/Wurst-Imperium/Wurst-MC-1.11", "Date": "2016-12-03T06:12:44Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((point.latitude) < (mBBoxMin.latitude)) mBBoxMin = new com.google.android.gms.maps.model.LatLng(point.latitude, mBBoxMin.longitude);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5330/buggy-version/android.app.src.main.java.at.acid.conquer.model.Area.java", "BodyUseAPI": [], "Fixed commit": "39f173d8eb53e777ea82e2c75708e635071e250d", "Url": "https://api.github.com/repos/fsteinbauer/conquer", "Date": "2016-05-04T13:01:34Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((point.longitude) < (mBBoxMin.longitude)) mBBoxMin = new com.google.android.gms.maps.model.LatLng(mBBoxMin.latitude, point.longitude);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5330/buggy-version/android.app.src.main.java.at.acid.conquer.model.Area.java", "BodyUseAPI": [], "Fixed commit": "39f173d8eb53e777ea82e2c75708e635071e250d", "Url": "https://api.github.com/repos/fsteinbauer/conquer", "Date": "2016-05-04T13:01:34Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((point.latitude) > (mBBoxMax.latitude)) mBBoxMax = new com.google.android.gms.maps.model.LatLng(point.latitude, mBBoxMax.longitude);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5330/buggy-version/android.app.src.main.java.at.acid.conquer.model.Area.java", "BodyUseAPI": [], "Fixed commit": "39f173d8eb53e777ea82e2c75708e635071e250d", "Url": "https://api.github.com/repos/fsteinbauer/conquer", "Date": "2016-05-04T13:01:34Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.kwstudios.play.ragemode.toolbox.ConfigFactory.getBoolean(\"settings.global\", \"bossbar\", fileConfiguration)) { for (java.lang.String player : players) { org.kwstudios.play.ragemode.bossbar.BossbarLib.getHandler().getBossbar(org.bukkit.Bukkit.getPlayer(java.util.UUID.fromString(player))).setMessage(initialMessage).setPercentage(1.0F); org.kwstudios.play.ragemode.bossbar.BossbarLib.getHandler().updateBossbar(org.bukkit.Bukkit.getPlayer(java.util.UUID.fromString(player))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2537/buggy-version/src.main.java.org.kwstudios.play.ragemode.gameLogic.GameLoader.java", "BodyUseAPI": [], "Fixed commit": "01e78af821b1ea75128266a44c3fbb846a73b87c", "Url": "https://api.github.com/repos/KWStudios/RageMode", "Date": "2015-09-20T11:52:45Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.kwstudios.play.ragemode.toolbox.ConfigFactory.getBoolean(\"settings.global\", \"actionbar\", fileConfiguration)) { for (java.lang.String player : players) { org.kwstudios.play.ragemode.toolbox.ActionBarAPI.sendActionBar(org.bukkit.Bukkit.getPlayer(java.util.UUID.fromString(player)), initialMessage); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2537/buggy-version/src.main.java.org.kwstudios.play.ragemode.gameLogic.GameLoader.java", "BodyUseAPI": [], "Fixed commit": "01e78af821b1ea75128266a44c3fbb846a73b87c", "Url": "https://api.github.com/repos/KWStudios/RageMode", "Date": "2015-09-20T11:52:45Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["state.getContentBuf().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(content.isEmpty())) { state.getCurrentItem().setItemIdentifier(content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1109/buggy-version/src.de.danoeh.antennapod.syndication.namespace.NSRSS20.java", "BodyUseAPI": ["state.getCurrentItem().setItemIdentifier(java.lang.String)"], "Fixed commit": "9d30e697e61c1af61cbcc2789c87dc05c1265c8b", "Url": "https://api.github.com/repos/danieloeh/AntennaPod", "Date": "2014-02-17T21:32:02Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plName.equals(sender.getName())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3263/buggy-version/src.main.java.it.masch.bukkit.awp.WarpPointManager.java", "BodyUseAPI": [], "Fixed commit": "7bc299859e7b6528feaacd1c7220c6641bdccd24", "Url": "https://api.github.com/repos/themasch/bukkit-awp", "Date": "2014-01-13T18:48:50Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["review.classdesign.jammy.model.builder.SolverBuilder.getFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(file.exists())) { final java.lang.String template = review.classdesign.jammy.model.builder.SolverBuilder.getSolverTemplate(name); final java.io.InputStream stream = new java.io.ByteArrayInputStream(template.getBytes()); file.create(stream, true, getMonitor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6430/buggy-version/review.classdesign.jammy.src.review.classdesign.jammy.model.builder.SolverBuilder.java", "BodyUseAPI": ["org.eclipse.core.resources.IFile.create(java.io.InputStream,boolean,getMonitor())"], "Fixed commit": "e3785a9de034bcb57c392be934f30ed225490903", "Url": "https://api.github.com/repos/Faylixe/jammy", "Date": "2015-10-20T12:16:57Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((citation.hasCustomUrls()) || ((citation.getCitationProperty(\"otherIds\")) instanceof java.util.Vector)) { out.println(\"\\t\\t\\t</div>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/987/buggy-version/citations.citations-impl.impl.src.java.org.sakaiproject.citation.impl.CitationListAccessServlet.java", "BodyUseAPI": [], "Fixed commit": "5515cd614e481abbf1411b00526f9347c497aa73", "Url": "https://api.github.com/repos/baholladay/sakai", "Date": "2016-03-31T13:50:10Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((citation.hasCustomUrls()) || ((citation.getCitationProperty(\"otherIds\")) instanceof java.util.Vector)) { out.println(\"\\t\\t\\t<div class=\\\"itemAction links\\\" style=\\\"width:20%\\\">\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/987/buggy-version/citations.citations-impl.impl.src.java.org.sakaiproject.citation.impl.CitationListAccessServlet.java", "BodyUseAPI": [], "Fixed commit": "5515cd614e481abbf1411b00526f9347c497aa73", "Url": "https://api.github.com/repos/baholladay/sakai", "Date": "2016-03-31T13:50:10Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hyena.coretext.layout.CYHorizontalLayout.parseLines(java.util.List<com.hyena.coretext.blocks.CYBlock>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == ((lines.size()) - 1)) { line.setPadding(0, line.getPaddingTop(), 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5348/buggy-version/library.src.main.java.com.hyena.coretext.layout.CYHorizontalLayout.java", "BodyUseAPI": [], "Fixed commit": "0b7d54cf61da72faf241fe592719a755e701f3c2", "Url": "https://api.github.com/repos/yangzc/AndroidCoreText", "Date": "2017-08-02T12:48:47Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentPosition) == (-1)) { this.mCurrentPosition = defaultPosition; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/440/buggy-version/library.src.main.java.com.aspsine.fragmentnavigator.FragmentNavigator.java", "BodyUseAPI": [], "Fixed commit": "f07594024c79b2500460315b97ccc0eb49f7b8b6", "Url": "https://api.github.com/repos/Aspsine/FragmentNavigator", "Date": "2016-04-04T14:10:53Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status != (org.apache.geode.management.cli.Result.Status.ERROR)) { throw new java.lang.UnsupportedOperationException(\"The status of an ErrorResultData result must always be ERROR\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6622/buggy-version/geode-core.src.main.java.org.apache.geode.management.internal.cli.result.ErrorResultData.java", "BodyUseAPI": [], "Fixed commit": "626bbe82c6a4399d124de4b62775109d5ba884da", "Url": "https://api.github.com/repos/jinmeiliao/geode", "Date": "2017-10-17T22:56:26Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ceckOutData.getPid()) == 0) { com.example.borodin.cecheckinout.Utilities.print(com.example.borodin.cecheckinout.OutActivity.TAG, (\"Project id is 0 - \" + (ceckOutData.getPid()))); com.example.borodin.cecheckinout.Utilities.print(com.example.borodin.cecheckinout.OutActivity.TAG, (\"Corrent Project is\" + (correntProject.getId()))); ceckOutData.setPid(correntProject.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8491/buggy-version/app.src.main.java.com.example.borodin.cecheckinout.OutActivity.java", "BodyUseAPI": ["com.example.borodin.cecheckinout.Utilities.print(java.lang.String,(\"Project id is 0 - \" + (ceckOutData.getPid())))", "com.example.borodin.cecheckinout.CeckOutData.setPid(correntProject.getId())", "com.example.borodin.cecheckinout.CeckOutData.getPid()"], "Fixed commit": "a681742f8913702d1c8cf716ff1f5fdd29f55f4d", "Url": "https://api.github.com/repos/026rus/CEapp", "Date": "2017-02-13T15:24:36Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ceckOutData.getSite()) == null) || (ceckOutData.getSite().isEmpty())) ceckOutData.setSite(correntMessege.getSiteStoreNumber());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8491/buggy-version/app.src.main.java.com.example.borodin.cecheckinout.OutActivity.java", "BodyUseAPI": ["com.example.borodin.cecheckinout.CeckOutData.setSite(correntMessege.getSiteStoreNumber())"], "Fixed commit": "a681742f8913702d1c8cf716ff1f5fdd29f55f4d", "Url": "https://api.github.com/repos/026rus/CEapp", "Date": "2017-02-13T15:24:36Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ceckOutData.getCename()) == null) || (ceckOutData.getCename().isEmpty())) ceckOutData.setCename(preferences.getString(\"thech_name\", \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8491/buggy-version/app.src.main.java.com.example.borodin.cecheckinout.OutActivity.java", "BodyUseAPI": ["com.example.borodin.cecheckinout.CeckOutData.setCename(preferences.getString(\"thech_name\", \"\"))"], "Fixed commit": "a681742f8913702d1c8cf716ff1f5fdd29f55f4d", "Url": "https://api.github.com/repos/026rus/CEapp", "Date": "2017-02-13T15:24:36Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((yatzyModel.ActivePlayer.getActivePlayer().getCategoryList().get(row).getIsTotal()) == true) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6762/buggy-version/YatzyGrupp3.src.yatzyModel.Table.java", "BodyUseAPI": [], "Fixed commit": "aa42a75ea2f348a468ea952407e1d06d41417f90", "Url": "https://api.github.com/repos/group3-yatzy/Yatzy1", "Date": "2016-12-19T10:23:15Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (installedVersion.toString().equals(\"0.0.0a\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3339/buggy-version/plugins.PluginManager.src.uecide.plugin.PluginEntry.java", "BodyUseAPI": [], "Fixed commit": "65c33278871ed82188c5238215eb78a74ad651a7", "Url": "https://api.github.com/repos/neslekkim/UECIDE", "Date": "2014-08-03T13:50:43Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (installedVersion.toString().equals(\"0.0.0a\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3339/buggy-version/plugins.PluginManager.src.uecide.plugin.PluginEntry.java", "BodyUseAPI": [], "Fixed commit": "65c33278871ed82188c5238215eb78a74ad651a7", "Url": "https://api.github.com/repos/neslekkim/UECIDE", "Date": "2014-08-03T13:50:43Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (installedVersion.toString().equals(\"0.0.0a\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3339/buggy-version/plugins.PluginManager.src.uecide.plugin.PluginEntry.java", "BodyUseAPI": [], "Fixed commit": "65c33278871ed82188c5238215eb78a74ad651a7", "Url": "https://api.github.com/repos/neslekkim/UECIDE", "Date": "2014-08-03T13:50:43Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileIds.isEmpty()) { return new java.util.TreeSet<jp.ac.osaka_u.ist.sdl.prevol.data.MethodData>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1599/buggy-version/src.jp.ac.osaka_u.ist.sdl.prevol.db.retriever.MethodDataRetriever.java", "BodyUseAPI": [], "Fixed commit": "15231cb0580d5d749bb3b4a12f27d67c90cacb7e", "Url": "https://api.github.com/repos/kusumotolab/prevol", "Date": "2013-08-04T08:45:48Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((values.length) != 1) { return (((values[0].replace(\".\", \"\\\\.\")) + \".\") + (values[1])) + \".\"; }else { return email; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8783/buggy-version/ultradns-rest.src.main.java.denominator.ultradns.service.UltraDNSRestZoneApi.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "f1cf1933f3a67e0189135dc9b1d1d4513487870e", "Url": "https://api.github.com/repos/ultradns/denominator", "Date": "2017-04-27T12:37:40Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (line.startsWith(com.github.vankain.crashcanary_library.log.Crash.KEY_VERSION_NAME)) { crash.versionName = line.split(com.github.vankain.crashcanary_library.log.Crash.KV)[1]; }else if (line.startsWith(com.github.vankain.crashcanary_library.log.Crash.KEY_VERSION_CODE)) { crash.versionCode = line.split(com.github.vankain.crashcanary_library.log.Crash.KV)[1]; }else if (line.startsWith(com.github.vankain.crashcanary_library.log.Crash.KEY_UID)) { crash.uid = line.split(com.github.vankain.crashcanary_library.log.Crash.KV)[1]; }else if (line.startsWith(com.github.vankain.crashcanary_library.log.Crash.KEY_CAUSE)) { crash.cause = line.split(com.github.vankain.crashcanary_library.log.Crash.KV)[1]; }else if (line.startsWith(com.github.vankain.crashcanary_library.log.Crash.KEY_TIME)) { crash.time = line.split(com.github.vankain.crashcanary_library.log.Crash.KV)[1]; }else if (line.startsWith(com.github.vankain.crashcanary_library.log.Crash.KEY_CRASH_MESSAGE)) { crash.crashMessage = line.split(com.github.vankain.crashcanary_library.log.Crash.KV)[1]; java.lang.String[] split = line.split(com.github.vankain.crashcanary_library.log.Crash.KV); if ((split.length) > 1) { java.lang.StringBuilder crashMessageSb = new java.lang.StringBuilder(split[1]); crashMessageSb.append(line.split(com.github.vankain.crashcanary_library.log.Crash.KV)[1]).append(com.github.vankain.crashcanary_library.log.Crash.SEPARATOR); line = reader.readLine(); while (line != null) { if (!(line.equals(\"\"))) { crashMessageSb.append(line).append(com.github.vankain.crashcanary_library.log.Crash.SEPARATOR); }else { break; } line = reader.readLine(); } crash.crashMessage = crashMessageSb.toString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5181/buggy-version/crashcanary-library.src.main.java.com.github.vankain.crashcanary_library.log.Crash.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "025016128e6dd17cd14a72bfd32352c221df1a2d", "Url": "https://api.github.com/repos/VankaIn/crashcanary", "Date": "2016-01-27T03:52:37Z"},
{"Line": "=>1101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(polygon.isEmpty())) { org.geotools.data.oracle.sdo.SDO.addCoordinates(list, org.geotools.data.oracle.sdo.SDO.counterClockWise(polygon.getFactory().getCoordinateSequenceFactory(), polygon.getExteriorRing().getCoordinateSequence())); for (int i = 0; i < holes; i++) { org.geotools.data.oracle.sdo.SDO.addCoordinates(list, org.geotools.data.oracle.sdo.SDO.clockWise(polygon.getFactory().getCoordinateSequenceFactory(), polygon.getInteriorRingN(i).getCoordinateSequence())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6160/buggy-version/modules.plugin.jdbc.jdbc-oracle.src.main.java.org.geotools.data.oracle.sdo.SDO.java", "BodyUseAPI": ["org.geotools.data.oracle.sdo.SDO.addCoordinates(java.util.List,com.vividsolutions.jts.geom.CoordinateSequence)", "com.vividsolutions.jts.geom.Polygon.getInteriorRingN(int)", "org.geotools.data.oracle.sdo.SDO.clockWise(polygon.getFactory().getCoordinateSequenceFactory(),polygon.getInteriorRingN(i).getCoordinateSequence())", "com.vividsolutions.jts.geom.Polygon.getFactory()", "com.vividsolutions.jts.geom.Polygon.getExteriorRing()", "polygon.getInteriorRingN(i).getCoordinateSequence()", "org.geotools.data.oracle.sdo.SDO.addCoordinates(java.util.List,com.vividsolutions.jts.geom.CoordinateSequence)", "polygon.getFactory().getCoordinateSequenceFactory()", "org.geotools.data.oracle.sdo.SDO.counterClockWise(polygon.getFactory().getCoordinateSequenceFactory(),polygon.getExteriorRing().getCoordinateSequence())", "polygon.getExteriorRing().getCoordinateSequence()", "com.vividsolutions.jts.geom.Polygon.getFactory()", "polygon.getFactory().getCoordinateSequenceFactory()"], "Fixed commit": "cd38846c45ab48dcf4c691e0b020932278c5b7eb", "Url": "https://api.github.com/repos/mtoonen/geotools", "Date": "2016-06-29T08:14:26Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (geom.isEmpty()) { return 2; }else { return java.lang.Double.isNaN(geom.getCoordinate().z) ? 2 : 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6160/buggy-version/modules.plugin.jdbc.jdbc-oracle.src.main.java.org.geotools.data.oracle.sdo.SDO.java", "BodyUseAPI": ["com.vividsolutions.jts.geom.Geometry.getCoordinate()", "java.lang.Double.isNaN(geom.getCoordinate().z)"], "Fixed commit": "cd38846c45ab48dcf4c691e0b020932278c5b7eb", "Url": "https://api.github.com/repos/mtoonen/geotools", "Date": "2016-06-29T08:14:26Z"},
{"Line": "=>1041", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (gzos != null) gzos.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/469/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.OBase64Utils.java", "BodyUseAPI": ["java.util.zip.GZIPOutputStream.close()"], "Fixed commit": "304ad0a28061123ae5dcdb6a67f9477b3b488780", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-10-20T17:07:40Z"},
{"Line": "=>1051", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (baos != null) baos.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/469/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.OBase64Utils.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.close()"], "Fixed commit": "304ad0a28061123ae5dcdb6a67f9477b3b488780", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-10-20T17:07:40Z"},
{"Line": "=>1046", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (b64os != null) b64os.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/469/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.OBase64Utils.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "304ad0a28061123ae5dcdb6a67f9477b3b488780", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-10-20T17:07:40Z"},
{"Line": "=>1036", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (oos != null) oos.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/469/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.OBase64Utils.java", "BodyUseAPI": ["java.io.ObjectOutputStream.close()"], "Fixed commit": "304ad0a28061123ae5dcdb6a67f9477b3b488780", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-10-20T17:07:40Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((aFirstString != null) && (aSecondString != null)) { return commonLetters(aFirstString.toLowerCase(), aSecondString.toLowerCase()); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8795/buggy-version/AndroidListenerExamples.src.main.java.com.designatednerd.androidlistenerexamples.model.CommonLetterFinder.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "com.designatednerd.androidlistenerexamples.model.CommonLetterFinder.commonLetters(java.lang.String,java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "161c101b3d7d3aecfc82dc428f28ad1541730ca2", "Url": "https://api.github.com/repos/designatednerd/AndroidListenerExamples", "Date": "2015-05-20T15:44:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (everywhere != null) { synchronized(tr.getThreadManager().gameStateLock) { for (com.ochafik.util.listenable.Pair<org.apache.commons.math3.geometry.euclidean.threed.Vector3D, java.util.Collection<org.jtrfp.trcl.obj.Positionable>> cube : pairBuffer) { processCubes(everywhere, cube.getValue()); processCubes(cube.getValue(), everywhere); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1941/buggy-version/src.main.java.org.jtrfp.trcl.obj.CollisionManager.java", "BodyUseAPI": ["org.jtrfp.trcl.obj.CollisionManager.processCubes(java.util.Collection<org.jtrfp.trcl.obj.Positionable>,cube.getValue())", "org.jtrfp.trcl.obj.CollisionManager.processCubes(cube.getValue(),java.util.Collection<org.jtrfp.trcl.obj.Positionable>)"], "Fixed commit": "1dd80663fde0fd2aac3757d3aed3c672eaee7838", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-11-02T07:13:51Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jf.dexlib2.iface.Method.getImplementation()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (methodImpl != null) { methodImpl = new org.jf.dexlib2.builder.BuilderMutableMethodImplementation(dexBuilder, methodImpl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/639/buggy-version/tinker-build.tinker-patch-lib.src.main.java.com.tencent.tinker.build.decoder.DexDiffDecoder.java", "BodyUseAPI": [], "Fixed commit": "1703941f10d6f9542edf1e2007435cc70f07d93c", "Url": "https://api.github.com/repos/onlike/tinker", "Date": "2017-05-08T09:00:24Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == ((colors.length) - 1)) c = colors[i]; else c = colors[(i + 1)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4657/buggy-version/src.lessons.welcome.loopfor.LoopCourseEntity.java", "BodyUseAPI": [], "Fixed commit": "591133a1d1a0d354cd81eb834a1a839f7dbe1837", "Url": "https://api.github.com/repos/FredMaranhao/PLM", "Date": "2014-09-08T19:55:01Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((providerParameters.getTokenRequirements().getActAs()) != null) { receivedToken = providerParameters.getTokenRequirements().getActAs(); if (receivedToken.getState().equals(STATE.VALID)) { principal = receivedToken.getPrincipal(); } }else if ((providerParameters.getTokenRequirements().getValidateTarget()) != null) { receivedToken = providerParameters.getTokenRequirements().getValidateTarget(); if (receivedToken.getState().equals(STATE.VALID)) { principal = receivedToken.getPrincipal(); } }else { principal = providerParameters.getPrincipal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9054/buggy-version/services.sts.sts-core.src.main.java.org.apache.cxf.sts.token.provider.DefaultSubjectProvider.java", "BodyUseAPI": ["org.apache.cxf.sts.token.provider.TokenProviderParameters.getTokenRequirements()", "providerParameters.getTokenRequirements().getValidateTarget()", "providerParameters.getTokenRequirements().getValidateTarget()", "org.apache.cxf.sts.token.provider.TokenProviderParameters.getTokenRequirements()", "org.apache.cxf.sts.token.provider.TokenProviderParameters.getTokenRequirements()", "providerParameters.getTokenRequirements().getActAs()", "org.apache.cxf.sts.token.provider.TokenProviderParameters.getPrincipal()"], "Fixed commit": "18eeb44cbceb376ee1dbd40d35fee13a7943e652", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2014-09-18T11:07:44Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFailureImageView) != null) { mFailureImageView.setVisibility(com.github.piasy.biv.view.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1454/buggy-version/BigImageViewer.src.main.java.com.github.piasy.biv.view.BigImageView.java", "BodyUseAPI": [], "Fixed commit": "43202fdbd6c8d14e66eaa4da854825da2ee0e7c4", "Url": "https://api.github.com/repos/Piasy/BigImageViewer", "Date": "2017-06-27T15:48:26Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (methods != null) { for (wyvern.target.oir.declarations.OIRMethodDeclaration method : methods) { methodHashSet.add(method.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8626/buggy-version/tools.src.wyvern.target.oir.declarations.OIRInterface.java", "BodyUseAPI": [], "Fixed commit": "b2cfbe8d1193d18c10052eaac6b00eff2c00abb0", "Url": "https://api.github.com/repos/wyvernlang/wyvern", "Date": "2015-07-15T15:50:41Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5651/buggy-version/financius.src.main.java.com.code44.finance.ui.transactions.TransactionEditActivity.java", "BodyUseAPI": [], "Fixed commit": "05b45fb704bbfeac270ba6c3d06da5a071474bbe", "Url": "https://api.github.com/repos/potatopeelings/financius-public", "Date": "2014-11-16T11:51:58Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listPopupWindow) != null) { listPopupWindow.dismiss(); listPopupWindow = null; model.setSymbolPosition(com.code44.finance.common.model.SymbolPosition.values()[position]); ensureModelUpdated(model); onModelLoaded(model); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5651/buggy-version/financius.src.main.java.com.code44.finance.ui.currencies.CurrencyEditActivity.java", "BodyUseAPI": [], "Fixed commit": "05b45fb704bbfeac270ba6c3d06da5a071474bbe", "Url": "https://api.github.com/repos/potatopeelings/financius-public", "Date": "2014-11-16T11:51:58Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(session.isJoinedToTransaction())) { session.beginTransaction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8788/buggy-version/unison.unison-server-core.src.main.java.com.tremolosecurity.provisioning.tasks.Approval.java", "BodyUseAPI": ["org.hibernate.Session.beginTransaction()"], "Fixed commit": "a769a1bf4d4abf39bbf954bcefaa7c30f5bb8c4f", "Url": "https://api.github.com/repos/TremoloSecurity/OpenUnison", "Date": "2016-07-19T01:47:50Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getPathInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (path == null) { path = \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1659/buggy-version/src.main.java.org.rnorth.dropwizard.markdown.internal.MarkdownAssetsServlet.java", "BodyUseAPI": [], "Fixed commit": "fd2e6acafb2e359b9bab2ba077fe9d85865107d7", "Url": "https://api.github.com/repos/rnorth/dropwizard-markdown-assets-bundle", "Date": "2016-10-01T19:37:13Z"},
{"Line": "=>1407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count < 0) && ((_model) instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (_model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6140/buggy-version/zul.src.org.zkoss.zul.Listbox.java", "BodyUseAPI": [], "Fixed commit": "c1347247ea3072a5077703682c49d56df5dbfd8e", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zul.Grid.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((count < 0) && (model instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6140/buggy-version/zul.src.org.zkoss.zul.Rows.java", "BodyUseAPI": [], "Fixed commit": "c1347247ea3072a5077703682c49d56df5dbfd8e", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((a == b) && (b == c)) && (a == c)) { java.lang.System.out.println(\"This Equilateral triangle\"); }else { if ((a == b) || (b == c)) { java.lang.System.out.println(\"This Isosceles triangle\"); }else { if ((((a + b) < c) || ((b + c) < a)) || ((c + a) < b)) { java.lang.System.out.println(\"Not a triangular\"); }else { java.lang.System.out.println(\"Simple triangular\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6181/buggy-version/Homework01.task1_5.src.by.bsu.tat.main.Triangle.java", "BodyUseAPI": [], "Fixed commit": "5d25faa755b0864337d285ee26aca91b553d84e8", "Url": "https://api.github.com/repos/Alexmak20/EPAM_TAT", "Date": "2016-10-05T12:30:05Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mia2b.beta.Camera.getVisibleTiles()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(tiles.isEmpty())) { quickSort(tiles); for (com.mia2b.tiles.ParentTile i : tiles) { while (collisionBox(i).intersects(nextXPosition(lastActionDelta, xSpeed, direction), nextYPosition(lastActionDelta, ySpeed, direction), WIDTH, HEIGHT)) { if (collisionBox(i).intersects(nextXPosition(lastActionDelta, xSpeed, direction), y, WIDTH, HEIGHT)) xSpeed--; if (collisionBox(i).intersects(x, nextYPosition(lastActionDelta, ySpeed, direction), WIDTH, HEIGHT)) ySpeed--; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7945/buggy-version/MiasGameEngine.entities.com.mia2b.characters.FirstCharacter.java", "BodyUseAPI": ["com.mia2b.characters.FirstCharacter.quickSort(java.util.ArrayList<com.mia2b.tiles.ParentTile>)"], "Fixed commit": "3975ab0432c567a160e02acd7e4c9aa6ca45b624", "Url": "https://api.github.com/repos/Mia2b/MiasGameEngine", "Date": "2016-04-14T15:00:20Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterValues(java.lang.String)", "workflowDesignerSC.getProcessModel().getPresentation().getColumnsByRole(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((columns.getColumn(astrColumnNames[i])) == null) { column = columns.createColumn(); column.setItem(workflowDesignerSC.getProcessModel().getDataFolder().getItem(astrColumnNames[i])); columns.addColumn(column); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3180/buggy-version/war-core.src.main.java.com.silverpeas.workflowdesigner.servlets.WorkflowDesignerRequestRouter.java", "BodyUseAPI": ["com.silverpeas.workflow.api.model.Column.setItem(workflowDesignerSC.getProcessModel().getDataFolder().getItem(astrColumnNames[i]))", "com.silverpeas.workflow.api.model.Columns.addColumn(com.silverpeas.workflow.api.model.Column)", "com.silverpeas.workflow.api.model.Columns.createColumn()", "workflowDesignerSC.getProcessModel().getDataFolder().getItem(java.lang.String)"], "Fixed commit": "fecc874e93282f6d9b61864ab1262eacbe68c505", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2015-06-12T16:02:56Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.silverpeas.util.StringUtil.isDefined(request.getParameter(\"role\"))) role = request.getParameter(\"role\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3180/buggy-version/war-core.src.main.java.com.silverpeas.workflowdesigner.servlets.WorkflowDesignerRequestRouter.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "fecc874e93282f6d9b61864ab1262eacbe68c505", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2015-06-12T16:02:56Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (editText == null) { editText = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2168/buggy-version/AndroidController.Controller.src.main.java.ru.spbau.mit.androidcontroller.controller.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "53ae29bee8ef8701b50fb8bbca8479853d37b1b8", "Url": "https://api.github.com/repos/XJIE6/Android_Controller", "Date": "2016-03-12T13:40:49Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.undertow.conduits.ChunkReader.anyAreSet(state, ((((io.undertow.conduits.ChunkReader.FLAG_READING_LENGTH) | (io.undertow.conduits.ChunkReader.FLAG_READING_TILL_END_OF_LINE)) | (io.undertow.conduits.ChunkReader.FLAG_READING_NEWLINE)) | (io.undertow.conduits.ChunkReader.FLAG_READING_AFTER_LAST)))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8145/buggy-version/core.src.main.java.io.undertow.conduits.ChunkReader.java", "BodyUseAPI": [], "Fixed commit": "622afc375e955c239dbe335c4d3197c5464671c0", "Url": "https://api.github.com/repos/Karm/undertow", "Date": "2014-03-10T07:22:29Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(getContent().isNull())) { try { delegations_.wireDecode(getContent()); getMetaInfo().setType(ContentType.LINK); } catch (net.named_data.jndn.encoding.EncodingException ex) { delegations_.clear(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7562/buggy-version/src.net.named_data.jndn.Link.java", "BodyUseAPI": [], "Fixed commit": "7274bdb2668e79a474e5bc3e4411450ebcf0688a", "Url": "https://api.github.com/repos/named-data/jndn", "Date": "2015-10-13T20:13:05Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list_size - 4) == 0) return ((T) (new org.openrdf.query.impl.TupleQueryResultImpl(variables, com.google.common.collect.ImmutableList.of(new org.openrdf.query.impl.ListBindingSet(variables, new org.openrdf.model.impl.LiteralImpl(\"no-ruleset\"))))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7041/buggy-version/src.main.java.eu.fbk.dkm.springles.base.SpringlesConnectionBase.java", "BodyUseAPI": [], "Fixed commit": "15826bde13d63985187843a26ffe43c67400313b", "Url": "https://api.github.com/repos/dkmfbk/springles2.0", "Date": "2016-05-12T13:35:11Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ruleset != null) return eu.fbk.dkm.springles.inferencer.Inferencers.newNaiveInferencer(ruleset, bindings, maxConcurrentRules); else return eu.fbk.dkm.springles.inferencer.Inferencers.newVoidInferencer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7041/buggy-version/src.main.java.eu.fbk.dkm.springles.inferencer.Inferencers.java", "BodyUseAPI": ["eu.fbk.dkm.springles.inferencer.Inferencers.newNaiveInferencer(eu.fbk.dkm.springles.ruleset.Ruleset,org.openrdf.query.impl.MapBindingSet,int)"], "Fixed commit": "15826bde13d63985187843a26ffe43c67400313b", "Url": "https://api.github.com/repos/dkmfbk/springles2.0", "Date": "2016-05-12T13:35:11Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (rdfpro_ruleset != null) return eu.fbk.dkm.springles.inferencer.Inferencers.newRDFProInferencer(rdfpro_ruleset, bindings, maxConcurrentRules); else return eu.fbk.dkm.springles.inferencer.Inferencers.newVoidInferencer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7041/buggy-version/src.main.java.eu.fbk.dkm.springles.inferencer.Inferencers.java", "BodyUseAPI": ["eu.fbk.dkm.springles.inferencer.Inferencers.newRDFProInferencer(eu.fbk.dkm.springles.ruleset.Ruleset,org.openrdf.query.impl.MapBindingSet,int)"], "Fixed commit": "15826bde13d63985187843a26ffe43c67400313b", "Url": "https://api.github.com/repos/dkmfbk/springles2.0", "Date": "2016-05-12T13:35:11Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.geoio.osmhunter.app.SyncAdapter.HunterActivity.getString(R.string.sentry_dsn)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dsn.length()) == 0) { dsn = \"https://xx:xx@xx.xx/xx\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2636/buggy-version/app.src.main.java.com.geoio.osmhunter.app.SyncAdapter.HunterActivity.java", "BodyUseAPI": [], "Fixed commit": "1fe6e08ade2d6aea60cd29714067fefa1da6f515", "Url": "https://api.github.com/repos/geoio/osmhunter-andorid", "Date": "2014-07-02T13:29:37Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(playlist_name.isEmpty())) { if (action.addPlaylist(request.getSession().getAttribute(\"user\").toString(), playlist_name)) { request.setAttribute(\"error\", \"Playlist created\"); }else { request.setAttribute(\"error\", \"Error: Cannot create playlist\"); } }else { request.setAttribute(\"error\", \"Error: Playlist name is empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6129/buggy-version/WebPage.src.site.CreatePlaylist.java", "BodyUseAPI": ["ejblogin.ActionsBeanRemote.addPlaylist(request.getSession().getAttribute(\"user\").toString(),java.lang.String)"], "Fixed commit": "92c7f480005a9088deba5f0f4ef6e98b8dd33fa0", "Url": "https://api.github.com/repos/TagoWill/ISProject2", "Date": "2015-11-12T01:10:27Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.strullerbaumann.visualee.examiner.Examiner.getSourceCodeScanner(javaSource.getSourceCode())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(scanner.hasNext())) { throw new java.lang.IllegalArgumentException(\"Insufficient number of tokens to set package\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2073/buggy-version/src.main.java.de.strullerbaumann.visualee.examiner.Examiner.java", "BodyUseAPI": [], "Fixed commit": "af3f826914eaa97c9a320c0fbf1944f95411a12b", "Url": "https://api.github.com/repos/emopers/visualee", "Date": "2015-11-21T14:28:18Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eyeseetea.malariacare.data.database.model.QuestionDB.getValueBySession()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((!isAllowed) && (!(hasNext(null)))) && (!(hasNext(currentValueDB.getOptionDB())))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5572/buggy-version/app.src.main.java.org.eyeseetea.malariacare.layout.adapters.survey.navigation.NavigationController.java", "BodyUseAPI": [], "Fixed commit": "fb6e745f7f97a0fa57d5a230db360f74843dfdfb", "Url": "https://api.github.com/repos/EyeSeeTea/CNMApp", "Date": "2017-10-26T10:46:45Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((worldObj) != null) oldState = worldObj.getBlockState(pos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8754/buggy-version/src.main.java.genesis.block.tileentity.TileEntityStorageBox.java", "BodyUseAPI": [], "Fixed commit": "f006b87960663517f5b3bcbb9a27c2fef0a71083", "Url": "https://api.github.com/repos/Boethie/OldGenesis", "Date": "2016-05-04T19:12:43Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { if (logged) { java.lang.System.out.println((\"GA LOGGED: \" + uri)); }else { java.lang.System.out.println((\"GA DROPPED: \" + uri)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5789/buggy-version/h2o-core.src.main.java.water.util.GAUtils.java", "BodyUseAPI": [], "Fixed commit": "338e8070fd69db0f406da8537933e07416a5bd0d", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2017-11-17T20:42:49Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.alura.escola.dao.AlunoDao.listaPorId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((aluno.getNotas()) == null) { alunoDao.criaArrayDeNotas(id, nota); }else { alunoDao.atualizaNota(id, nota); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6645/buggy-version/src.main.java.br.com.alura.escola.controller.AlunoController.java", "BodyUseAPI": [], "Fixed commit": "51e44b488562c881a4e3d96d828c3554675c1810", "Url": "https://api.github.com/repos/felipeweb/curso-mongodb", "Date": "2016-02-15T12:08:56Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type != (c.type)) { wyjc.io.JvmType.Function ftype = new wyjc.io.JvmType.Function(JAVA_LANG_OBJECT); bytecodes.add(new wyjc.io.Bytecode.Invoke(wyjc.io.ClassFileBuilder.WHILEYPROCESS, \"state\", ftype, Bytecode.VIRTUAL)); wyjc.io.Type.Process pt = ((wyjc.io.Type.Process) (c.type)); addReadConversion(pt.element(), bytecodes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4236/buggy-version/src.wyjc.io.ClassFileBuilder.java", "BodyUseAPI": [], "Fixed commit": "1677a4c156d0d5902ceb95a25ef149609a4d44d8", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-08T03:09:24Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (absolutePath.contains(\"/modules/apps/\")) { _checkExportPackage(fileName, absolutePath, content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5550/buggy-version/modules.util.source-formatter.src.main.java.com.liferay.source.formatter.checks.BNDExportsCheck.java", "BodyUseAPI": ["com.liferay.source.formatter.checks.BNDExportsCheck._checkExportPackage(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "5759fef24fd59f6d8a760867b0fb4dfbbe8980c1", "Url": "https://api.github.com/repos/csierra/liferay-portal", "Date": "2017-10-26T07:22:43Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(fileName.endsWith(\"/bnd.bnd\"))) || (absolutePath.contains(\"/third-party/\"))) { return content; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5550/buggy-version/modules.util.source-formatter.src.main.java.com.liferay.source.formatter.checks.BNDExportsCheck.java", "BodyUseAPI": [], "Fixed commit": "5759fef24fd59f6d8a760867b0fb4dfbbe8980c1", "Url": "https://api.github.com/repos/csierra/liferay-portal", "Date": "2017-10-26T07:22:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((comments) == null) { comments = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1754/buggy-version/src.com.wap.post.PostData.java", "BodyUseAPI": [], "Fixed commit": "1e6148540d2a48868679db782d41363d66448b43", "Url": "https://api.github.com/repos/wudizhuo/WAP_Project", "Date": "2017-05-23T15:39:15Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.detroitlabs.kyleofori.teachertools.fragments.SearchResultsFragment.startEntry) == 0) { btnPrevious.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5010/buggy-version/app.src.main.java.com.detroitlabs.kyleofori.teachertools.fragments.SearchResultsFragment.java", "BodyUseAPI": [], "Fixed commit": "fdbf7dafdeee4761e0c096d58fbb406937ba1506", "Url": "https://api.github.com/repos/kyleofori/TeacherTools", "Date": "2014-12-02T22:08:24Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["element.select(\".head\").text().trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((head.startsWith(\"[\")) && (head.endsWith(\"]\"))) { head = head.substring(1, ((head.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2085/buggy-version/src.main.java.pe.chalk.takoyaki.filter.ArticleFilter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "8163a422e5b9d271a6e0c6878a09dcc9481e1ca2", "Url": "https://api.github.com/repos/ChalkPE/Takoyaki", "Date": "2015-04-13T11:10:37Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { logoView.setImageDrawable(new android.graphics.drawable.BitmapDrawable(getResources(), result)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1764/buggy-version/app.src.main.java.com.abyx.loyalty.fragments.CardFragment.java", "BodyUseAPI": [], "Fixed commit": "aa7513f7dc291d560851299a47908dc8d3e1f2f0", "Url": "https://api.github.com/repos/AbyxBelgium/Loyalty", "Date": "2017-07-13T19:09:20Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enc == null) { enc = JsonEncoding.UTF8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/208/buggy-version/src.main.java.com.fasterxml.jackson.dataformat.yaml.YAMLFactory.java", "BodyUseAPI": [], "Fixed commit": "3d9f81bab32d7424caa84666d9ae952e9e95eda7", "Url": "https://api.github.com/repos/FasterXML/jackson-dataformat-yaml", "Date": "2012-04-17T02:20:38Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jsonObj.optInt(\"err_code\")) == 200021) signinResultFlag = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6315/buggy-version/src.me.shumei.open.oks.wangpan115.Signin.java", "BodyUseAPI": [], "Fixed commit": "cf2d8ecfa4d452579c31bc1427588b7a1d02b6bb", "Url": "https://api.github.com/repos/wolforce/me-shumei-open-oks-wangpan115", "Date": "2014-04-21T01:24:45Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URI.getPort()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (port < 0) { return \"http://\" + (referURI.getHost()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4494/buggy-version/src.main.java.org.thiki.kanban.foundation.filter.CORSFilter.java", "BodyUseAPI": [], "Fixed commit": "c096f0789713ab608ad8fe6260d5ea60a6b7d57a", "Url": "https://api.github.com/repos/thiki-org/thiki-kanban-backend", "Date": "2016-11-22T15:53:02Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3842/buggy-version/pracler.src.main.java.com.icaynia.pracler.Fragment.Today20Fragment.java", "BodyUseAPI": [], "Fixed commit": "f1dff7cfa8f9ae5cb61f421f32d8192c1046cbcf", "Url": "https://api.github.com/repos/sionuuu/pracler", "Date": "2017-04-03T13:12:16Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.kilo.MonitorInterceptor.set.add(method)) java.lang.System.out.println((\"Intercepting for methods: \" + method));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1155/buggy-version/src.main.java.com.kilo.MonitorInterceptor.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "2c8bced02a2c10924e9291a9ac7d59c07bbc863e", "Url": "https://api.github.com/repos/purijatin/sqlserver-staging-testers", "Date": "2016-09-02T09:24:50Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.util.ArrayList<java.lang.String>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (input.get(1).equals(\"insert\")) { if (!(input.get(2).matches(\"[0-9]*\"))) { addErrorToOutputstream((i + 1), \"Data should be numeric only\"); return false; } continue; }else if (!(input.get(2).matches(alphanumeric))) { addErrorToOutputstream((i + 1), \"Incorrectly formed data\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/279/buggy-version/src.org.raspberrypi.cecil.controller.Controller.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.matches(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.matches(java.lang.String)"], "Fixed commit": "c1c8dec252b5640285c5a667d591fe2c01fa9fb5", "Url": "https://api.github.com/repos/GDP9/CecilRPi", "Date": "2013-11-14T10:51:56Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((end) != null) dateCriteria.lte(end.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5224/buggy-version/src.main.java.com.github.mpi.time_registration.infrastructure.persistence.mongo.MongoWorkLogEntryRepository.java", "BodyUseAPI": [], "Fixed commit": "d5fc49cb3d3756b17ea7028ba03da215f597dbbd", "Url": "https://api.github.com/repos/mpi/OpenTrApp", "Date": "2014-03-19T12:21:55Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mazeTiles[i][j]) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7236/buggy-version/src.main.java.nl.tudelft.contextproject.model.level.Room.java", "BodyUseAPI": [], "Fixed commit": "41e356f47d0f4bb99f8d23c6ecf66a609bb811bd", "Url": "https://api.github.com/repos/Taeir/ContextProject-MIGI2", "Date": "2016-06-07T22:54:35Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(out.isDirectory())) { java.io.FileOutputStream os = new java.io.FileOutputStream(out); a.extractFile(fh, os); os.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3268/buggy-version/ac-core.src.main.java.es.ucm.fdi.util.archive.RarFormat.java", "BodyUseAPI": [], "Fixed commit": "381aede66927df72452741a35b00d464d8101bbf", "Url": "https://api.github.com/repos/manuel-freire/ac2", "Date": "2016-10-04T15:59:47Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeDiffInSeconds > 0) { ret = ((val.floatValue()) - (lastValue.floatValue())) / timeDiffInSeconds; if ((ret.floatValue()) < 0) { ret = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7277/buggy-version/src.com.newrelic.metrics.publish.processors.EpochCounter.java", "BodyUseAPI": [], "Fixed commit": "6e57d57459b208447550e8f133fbaab07aee0699", "Url": "https://api.github.com/repos/newrelic-platform/metrics_publish_java", "Date": "2013-07-17T23:00:30Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.tika.metadata.Metadata.get(org.apache.tika.metadata.HttpHeaders.CONTENT_TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (ct != null) { type = org.apache.tika.mime.MediaType.parse(ct); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4320/buggy-version/tika-server.src.main.java.org.apache.tika.server.resource.TikaResource.java", "BodyUseAPI": ["org.apache.tika.mime.MediaType.parse(java.lang.String)"], "Fixed commit": "1e0159b733dc7a8f48ce8943e1f15046c791349a", "Url": "https://api.github.com/repos/tikatuka/tika", "Date": "2016-02-03T16:58:53Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFailure) { com.hazelcast.simulator.agent.workerjvm.WorkerJvmFailureMonitor.LOGGER.error(java.lang.String.format(\"Detected failure on Worker %s: %s\", jvm.getId(), operation.getLogMessage((++(failureCount))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2/buggy-version/simulator.src.main.java.com.hazelcast.simulator.agent.workerjvm.WorkerJvmFailureMonitor.java", "BodyUseAPI": [], "Fixed commit": "169030a3876e82e8d9ad3a5bb94fb917f47899b7", "Url": "https://api.github.com/repos/mdogan/hazelcast-simulator", "Date": "2015-11-21T17:14:10Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.get((i + 1)).contains(\"JJ\")) { result.set(i, result.get((i + 1))); result.set((i + 1), curr_word); i += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1805/buggy-version/CS124_pa6.src.mt.FrenchTranslator.java", "BodyUseAPI": ["java.util.List<java.lang.String>.set(int,java.lang.String)", "java.util.List<java.lang.String>.set(int,java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "4d833038f0795a35de6527060e172b805de22b73", "Url": "https://api.github.com/repos/SarahAdelaide/CS124_PA6", "Date": "2014-02-28T21:11:17Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.runtime.SubMonitor.convert(org.eclipse.core.runtime.IProgressMonitor,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((monitor != null) && (!(monitor.isCanceled()))) { newMonitor = monitor.newChild(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7255/buggy-version/com.ibm.team.build.hjplugin-rtc.src.main.java.com.ibm.team.build.internal.hjplugin.rtc.RepositoryConnection.java", "BodyUseAPI": ["org.eclipse.core.runtime.SubMonitor.newChild(int)"], "Fixed commit": "c328ce24a2b18c80d8cba566981a81fb1d66907b", "Url": "https://api.github.com/repos/jenkinsci/teamconcert-plugin", "Date": "2015-12-20T14:27:15Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sentenceBegin) >= 0) && ((getBuffer().length()) > (sentenceBegin))) { new de.tudarmstadt.ukp.dkpro.core.api.segmentation.type.Sentence(getJCas(), sentenceBegin, getBuffer().length()).addToIndexes(); sentenceBegin = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2935/buggy-version/ss-io-pdfx-xml.src.main.java.eu.openminted.uc_tdm_socialsciences.io.pdfx.PdfxXmlReader.java", "BodyUseAPI": [], "Fixed commit": "89abb481c65f188168a4729a29876fa825cd238a", "Url": "https://api.github.com/repos/openminted/uc-tdm-socialsciences", "Date": "2016-10-28T16:16:44Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (all) { txtOps.setText(text.substring(0, ((text.length()) - 1))); }else { txtOps.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1137/buggy-version/app.src.main.java.com.example.brian.supercalculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4f36c979b5dd9b5eeb6697e58130acc43e91f516", "Url": "https://api.github.com/repos/JeffCourses/brianrs482-SuperCalculator", "Date": "2017-12-04T20:20:30Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((((hiragana.charAt(0)) == '\u3057') || ((hiragana.charAt(0)) == '\u3061')) || ((hiragana.charAt(0)) == '\u3058'))) { romaji.append(\"y\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2034/buggy-version/src.japanese.Hiragana.java", "BodyUseAPI": [], "Fixed commit": "d846e8f2001df64391ac4f5b59a7961aa164db94", "Url": "https://api.github.com/repos/phdang1/Japanese", "Date": "2016-01-28T06:26:21Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.lunarproject.gw2route.Navi.TheOptions.wantLastVisited) { loadUrl = org.lunarproject.gw2route.Navi.TheOptions.URL_LASTVISITED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5026/buggy-version/src.org.lunarproject.gw2route.Navi.java", "BodyUseAPI": [], "Fixed commit": "69c1dbd7126c551af719377d9022c2d86b966406", "Url": "https://api.github.com/repos/ffd114/gw2route", "Date": "2015-10-23T11:10:34Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((offset + count) > (cdata.length())) { count = (cdata.length()) - offset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6103/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": ["org.exist.util.XMLString.length()"], "Fixed commit": "f51d772c08c26535409604bb42e0d8b07de9d315", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-07T15:20:30Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (waiting) { waiting = false; notifyAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2797/buggy-version/library.src.main.java.boxresin.library.androidhttp.HttpRequest.java", "BodyUseAPI": [], "Fixed commit": "c5a4a1c09b2d26d31c8d01edc1ef440c985f6e7b", "Url": "https://api.github.com/repos/BoxResin/AndroidHTTP", "Date": "2017-02-20T09:12:49Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stringHour.equals(\"undefined\")) { stringHour = \"16\"; stringMinute = \"19\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3941/buggy-version/src.edu.umn.d.grenoble.mhcs.client.WeatherPanel.java", "BodyUseAPI": [], "Fixed commit": "aa31f31a6689e921257948da7ddd72cdf15588ae", "Url": "https://api.github.com/repos/Laremere/mhcs", "Date": "2014-12-11T01:29:25Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Node.attr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((imageUrl.indexOf(\"name=\")) == (-1)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6909/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDocUtil.java", "BodyUseAPI": [], "Fixed commit": "3a1dfbb19dbd3ea821e5ab2de2330f08ab9ca15d", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-10-14T10:33:53Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((imageName.indexOf('&')) != (-1)) imageName = imageName.substring(0, imageName.indexOf('&'));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6909/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDocUtil.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "3a1dfbb19dbd3ea821e5ab2de2330f08ab9ca15d", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-10-14T10:33:53Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (msg.containsProperty(key)) { return java.util.Optional.ofNullable(getter.apply(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/75/buggy-version/src.main.java.ome.smuggler.q.Messages.java", "BodyUseAPI": ["java.util.function.Function<java.lang.String, T>.apply(java.lang.String)", "java.util.Optional.ofNullable(T)"], "Fixed commit": "aaea7961dd658b5a23736d06896951c0bc4babc8", "Url": "https://api.github.com/repos/c0c0n3/ome-smuggler", "Date": "2015-12-09T17:33:36Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<ch.unibe.ese.team3.model.Ad>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((ad.getLatitude()) != null) && ((ad.getLongitude()) != null)) { admeta.setLat(ad.getLatitude()); admeta.setLng(ad.getLongitude()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/709/buggy-version/project.src.main.java.ch.unibe.ese.team3.controller.SearchController.java", "BodyUseAPI": ["ch.unibe.ese.team3.dto.AdMeta.setLng(ad.getLongitude())", "ch.unibe.ese.team3.model.Ad.getLongitude()", "ch.unibe.ese.team3.model.Ad.getLatitude()", "ch.unibe.ese.team3.dto.AdMeta.setLat(ad.getLatitude())"], "Fixed commit": "ba5cd26415c48de2c8be01fcbb894d4cfd520a22", "Url": "https://api.github.com/repos/scg-unibe-ch/ese2016-team3", "Date": "2016-11-30T12:17:32Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (controlDataElements != null) { for (int i = 0; i < (controlDataElements.length()); i++) { values.put(controlDataElements.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4613/buggy-version/app.src.main.java.org.eyeseetea.malariacare.network.PushClient.java", "BodyUseAPI": ["org.json.JSONArray.length()", "org.json.JSONArray.get(int)", "org.json.JSONArray.put(controlDataElements.get(i))"], "Fixed commit": "2bf88433c5e66cd14dd12df8743cbb81a9726560", "Url": "https://api.github.com/repos/EyeSeeTea/malariapp", "Date": "2015-09-20T16:06:03Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.minecraftdimensions.bungeesuitechat.managers.ChannelManager.receivedChannels)) { org.bukkit.Bukkit.getScheduler().runTaskLaterAsynchronously(BungeeSuiteChat.instance, new java.lang.Runnable() { @java.lang.Override public void run() { if (!(com.minecraftdimensions.bungeesuitechat.managers.ChannelManager.receivedChannels)) { com.minecraftdimensions.bungeesuitechat.managers.ChannelManager.requestChannels(); } } }, 10L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4451/buggy-version/src.main.java.com.minecraftdimensions.bungeesuitechat.listeners.LoginListener.java", "BodyUseAPI": ["org.bukkit.Bukkit.getScheduler().runTaskLaterAsynchronously(BungeeSuiteChat.instance,java.lang.Runnable,long)"], "Fixed commit": "6d94d768e8d4257d02780e2342fada18744df9f9", "Url": "https://api.github.com/repos/Bloodsplat/BungeeSuiteChat", "Date": "2013-12-05T22:22:43Z"},
{"Line": "=>860", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPartLength) == 0) { mRightCursorIndex = partIndex; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8856/buggy-version/src.com.dolphin.seekbar.RangeSeekbar.java", "BodyUseAPI": [], "Fixed commit": "64e5351808e5bea73654152ba1b1124ae91d189d", "Url": "https://api.github.com/repos/dolphinwang/RangeSeekbar", "Date": "2016-09-10T10:24:20Z"},
{"Line": "=>822", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPartLength) == 0) { mLeftCursorIndex = partIndex; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8856/buggy-version/src.com.dolphin.seekbar.RangeSeekbar.java", "BodyUseAPI": [], "Fixed commit": "64e5351808e5bea73654152ba1b1124ae91d189d", "Url": "https://api.github.com/repos/dolphinwang/RangeSeekbar", "Date": "2016-09-10T10:24:20Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fi.tamk.anpro.SoundManager.soundPool) == null) { fi.tamk.anpro.SoundManager.context = _context; fi.tamk.anpro.SoundManager.soundPool = new android.media.SoundPool(4, android.media.AudioManager.STREAM_MUSIC, 0); fi.tamk.anpro.SoundManager.soundPoolMap = new java.util.HashMap<java.lang.Integer, java.lang.Integer>(); fi.tamk.anpro.SoundManager.audioManager = ((android.media.AudioManager) (fi.tamk.anpro.SoundManager.context.getSystemService(Context.AUDIO_SERVICE))); fi.tamk.anpro.SoundManager.loadSounds(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1961/buggy-version/src.fi.tamk.anpro.SoundManager.java", "BodyUseAPI": [], "Fixed commit": "c229e26738efe856d055a1c4a78afedb3dc9114f", "Url": "https://api.github.com/repos/AnproTamk/Anpro", "Date": "2011-07-20T10:59:12Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Driver.executeRequestArr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (json == null) { json = new JSONArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9087/buggy-version/WebService.src.Driver.java", "BodyUseAPI": [], "Fixed commit": "9442e6237d918e33cec9166093c8811d6a3f6a22", "Url": "https://api.github.com/repos/forsman5/Challonge-Elo-Calculator", "Date": "2017-12-01T16:39:23Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Driver.executeRequestArr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (subJson == null) { subJson = new JSONArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9087/buggy-version/WebService.src.Driver.java", "BodyUseAPI": [], "Fixed commit": "9442e6237d918e33cec9166093c8811d6a3f6a22", "Url": "https://api.github.com/repos/forsman5/Challonge-Elo-Calculator", "Date": "2017-12-01T16:39:23Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inLen <= ((macKeySize) / 8)) { throw new org.bouncycastle.crypto.InvalidCipherTextException(\"Length of input must be greater than the MAC\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3953/buggy-version/core.src.main.java.org.bouncycastle.crypto.engines.IESEngine.java", "BodyUseAPI": [], "Fixed commit": "c5f193ee682048d7464347c24cd8876ffcbc62cb", "Url": "https://api.github.com/repos/gnu-user/strippedcastle", "Date": "2013-12-27T03:37:42Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messageMap.remove(player.getUniqueId())) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1418/buggy-version/src.main.java.de.tobiyas.util.vollotile.helper.PermanentActionBarMessages.java", "BodyUseAPI": [], "Fixed commit": "bc51e6dd8f4c2b3315bef57bc59ba0f5a8b41a0c", "Url": "https://api.github.com/repos/tobiyas/Utils", "Date": "2016-08-16T14:30:24Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1418/buggy-version/src.main.java.de.tobiyas.util.vollotile.helper.PermanentActionBarMessages.java", "BodyUseAPI": [], "Fixed commit": "bc51e6dd8f4c2b3315bef57bc59ba0f5a8b41a0c", "Url": "https://api.github.com/repos/tobiyas/Utils", "Date": "2016-08-16T14:30:24Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_LEFT)) { c = KeyInput.LEFT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5412/buggy-version/src.com.iconmaster.iconuscalc.gui.MainGui.java", "BodyUseAPI": [], "Fixed commit": "2978eefad5cf3f54355325eee43881828e37165e", "Url": "https://api.github.com/repos/iconmaster5326/IconusCalc", "Date": "2014-09-01T19:24:40Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_UP)) { c = KeyInput.UP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5412/buggy-version/src.com.iconmaster.iconuscalc.gui.MainGui.java", "BodyUseAPI": [], "Fixed commit": "2978eefad5cf3f54355325eee43881828e37165e", "Url": "https://api.github.com/repos/iconmaster5326/IconusCalc", "Date": "2014-09-01T19:24:40Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_DOWN)) { c = KeyInput.DOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5412/buggy-version/src.com.iconmaster.iconuscalc.gui.MainGui.java", "BodyUseAPI": [], "Fixed commit": "2978eefad5cf3f54355325eee43881828e37165e", "Url": "https://api.github.com/repos/iconmaster5326/IconusCalc", "Date": "2014-09-01T19:24:40Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_RIGHT)) { c = KeyInput.RIGHT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5412/buggy-version/src.com.iconmaster.iconuscalc.gui.MainGui.java", "BodyUseAPI": [], "Fixed commit": "2978eefad5cf3f54355325eee43881828e37165e", "Url": "https://api.github.com/repos/iconmaster5326/IconusCalc", "Date": "2014-09-01T19:24:40Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ans) != null) deliverResult(new ru.ifmo.droid2016.tmdb.loader.LoadResult(res, ans)); else forceLoad();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4790/buggy-version/app.src.main.java.ru.ifmo.droid2016.tmdb.loader.MoviesLoader.java", "BodyUseAPI": [], "Fixed commit": "9e6cc34a011768bb6f00aea5e71de4a6fb1c3e74", "Url": "https://api.github.com/repos/nikitaevg/homework2", "Date": "2016-11-19T08:19:20Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (systemVersion != null) { org.slf4j.MDC.put(\"systemVersion\", systemVersion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2813/buggy-version/commons.src.main.java.com.cisco.oss.foundation.systemversion.SystemVersionFactory.java", "BodyUseAPI": ["org.slf4j.MDC.put(java.lang.String,java.lang.String)"], "Fixed commit": "337363269c27de3827bb6d7ac83c45d714739d81", "Url": "https://api.github.com/repos/foundation-runtime/common", "Date": "2015-12-30T11:22:15Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((source == null) || ((source.getJSONObject(key)) == null)) { return defaultObject; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2890/buggy-version/src.org.wordpress.android.util.JSONUtil.java", "BodyUseAPI": [], "Fixed commit": "4f1b05e93a4d96ed6389bf00ecfe34c1d545037a", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2013-09-25T12:40:48Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((artifactInfo.getFileSize()) != 0) { java.lang.String downloadURL = createDownloadURL(artifactGroup.getGroupId(), artifactGroup.getArtifactId(), artifactGroup.getPackaging(), artifactInfo.getVersion(), customerId); artifactInfo.setDownloadURL(downloadURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1424/buggy-version/phresco-service-impl.src.main.java.com.photon.phresco.service.converters.ArtifactGroupConverter.java", "BodyUseAPI": ["com.photon.phresco.service.converters.ArtifactGroupConverter.createDownloadURL(artifactGroup.getGroupId(),artifactGroup.getArtifactId(),artifactGroup.getPackaging(),artifactInfo.getVersion(),java.lang.String)", "com.photon.phresco.commons.model.ArtifactInfo.getVersion()", "com.photon.phresco.commons.model.ArtifactInfo.setDownloadURL(java.lang.String)"], "Fixed commit": "8283d816c16de69dc3eddb10ab284b249af1040f", "Url": "https://api.github.com/repos/photon-infotech/service", "Date": "2013-09-26T11:53:05Z"},
{"Line": "=>796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((job.get(\"rect\")) != null) job.setClass(SpatialSite.FilterClass, edu.umn.cs.spatialHadoop.operations.RangeQuery.RangeFilter.class, edu.umn.cs.spatialHadoop.mapred.BlockFilter.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9266/buggy-version/src.edu.umn.cs.spatialHadoop.OperationsParams.java", "BodyUseAPI": ["org.apache.hadoop.mapred.JobConf.setClass(SpatialSite.FilterClass,java.lang.Class,java.lang.Class)"], "Fixed commit": "7d5f7206631ad5c72d9ce88b23402dfdc22587f2", "Url": "https://api.github.com/repos/aseldawy/spatialhadoop2", "Date": "2015-03-03T00:36:31Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (avatar.isEmpty()) { avatar = \"http://i.imgur.com/PtGnyUo.jpg\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/596/buggy-version/src.main.java.edu.neumont.projectFiles.controllers.AccountCreationPage.java", "BodyUseAPI": [], "Fixed commit": "4d2d68f138cae45f44c01de590f533c0f9787013", "Url": "https://api.github.com/repos/dragon1672/Java-2-Lab", "Date": "2015-05-20T17:38:40Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (brandNew) model.setSelected(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8476/buggy-version/src.main.java.org.datavyu.views.discrete.SpreadsheetCell.java", "BodyUseAPI": [], "Fixed commit": "a9c610ec533e0d5c3ad99cdf940717c479c778aa", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2014-07-17T20:20:48Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hearts) < 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3703/buggy-version/src.iryrwarosh.Creature.java", "BodyUseAPI": [], "Fixed commit": "c72349b7726a4cf7dfa649528957d1820780fcca", "Url": "https://api.github.com/repos/tormodh/iryrwarosh", "Date": "2012-03-15T00:21:42Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lightModeCycle == 6) { lightModeCycle = 3; }else { lightModeCycle %= 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/319/buggy-version/app.src.main.java.com.example.simonliu.togglebuttonedittextarrayswitch.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d9143bd4faeabf992acac316fa3e5a59910268a5", "Url": "https://api.github.com/repos/simonliu009/Android_Input_Examples", "Date": "2016-10-07T15:29:27Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == url) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3017/buggy-version/src.com.magnet.plugin.ui.tab.MethodNameSection.java", "BodyUseAPI": [], "Fixed commit": "954edc9ffb12137e81954e6d3ca8bbba407844ae", "Url": "https://api.github.com/repos/magnetsystems/r2m-plugin-android", "Date": "2015-01-30T15:32:38Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(myMap.checkWall(((x) + (GUI.MainChar.SCALE)), ((y) + ((GUI.MainChar.SCALE) / 2))))) && (!(myMap.checkWall(((x) - 1), ((y) + ((GUI.MainChar.SCALE) / 2)))))) stick = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3713/buggy-version/src.GUI.MainChar.java", "BodyUseAPI": [], "Fixed commit": "4e7ab9f2b12ff0781639af6a4a28e84657afba16", "Url": "https://api.github.com/repos/holard/platformer", "Date": "2015-03-09T22:29:21Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stick) != 0) { if ((dy) > (0.1 * (GUI.MainChar.TIMER))) dy = 0.1 * (GUI.MainChar.TIMER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3713/buggy-version/src.GUI.MainChar.java", "BodyUseAPI": [], "Fixed commit": "4e7ab9f2b12ff0781639af6a4a28e84657afba16", "Url": "https://api.github.com/repos/holard/platformer", "Date": "2015-03-09T22:29:21Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.powerbot.game.api.methods.tab.Inventory.contains(Constants.EDIBLE)) || (org.powerbot.game.api.methods.tab.Inventory.contains(Constants.SWAMP_TOAD))) && (org.tornado.scripts.tornadopickpocket.settings.Settings.drop)) { while ((org.powerbot.game.api.methods.tab.Inventory.contains(Constants.EDIBLE)) || (org.powerbot.game.api.methods.tab.Inventory.contains(Constants.SWAMP_TOAD))) { if (org.powerbot.game.api.methods.tab.Inventory.contains(Constants.SWAMP_TOAD)) { org.powerbot.game.api.methods.tab.Inventory.getItem(Constants.SWAMP_TOAD).getWidgetChild().interact(\"Remove-legs\"); sleep(350, 550); }else { org.powerbot.game.api.methods.tab.Inventory.getItem(Constants.EDIBLE).getWidgetChild().interact(\"Eat\"); sleep(750, 1250); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4593/buggy-version/src.org.tornado.scripts.tornadopickpocket.nodes.MiscStuff.java", "BodyUseAPI": [], "Fixed commit": "e1a4c4974e39e258e4b8b7e26dcdeb6af98acdca", "Url": "https://api.github.com/repos/Bvink/WildTornado", "Date": "2013-06-15T20:01:56Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.powerbot.game.api.methods.tab.Inventory.contains(Constants.DROPPABLE)) && (org.tornado.scripts.tornadopickpocket.settings.Settings.drop)) { while (org.powerbot.game.api.methods.tab.Inventory.contains(Constants.DROPPABLE)) { org.powerbot.game.api.methods.tab.Inventory.getItem(Constants.DROPPABLE).getWidgetChild().interact(\"Drop\"); sleep(750, 1250); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4593/buggy-version/src.org.tornado.scripts.tornadopickpocket.nodes.MiscStuff.java", "BodyUseAPI": [], "Fixed commit": "e1a4c4974e39e258e4b8b7e26dcdeb6af98acdca", "Url": "https://api.github.com/repos/Bvink/WildTornado", "Date": "2013-06-15T20:01:56Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPlayer()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/199/buggy-version/src.randy.epicquest.EpicPlayer.java", "BodyUseAPI": [], "Fixed commit": "07400c13991edcfae1338a9a183cd2b52adaed53", "Url": "https://api.github.com/repos/Randehh/EpicQuest", "Date": "2015-01-06T14:48:53Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSequenceLabel) != null) { getStreamDataProvider().getCurrentEventCollection().add(new info.bioinfweb.jphyloio.events.PartEndEvent(info.bioinfweb.jphyloio.events.type.EventContentType.SEQUENCE, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7311/buggy-version/main.info.bioinfweb.jphyloio.core.src.info.bioinfweb.jphyloio.formats.nexus.commandreaders.characters.MatrixReader.java", "BodyUseAPI": [], "Fixed commit": "7232ce3edc519cd90252230e216ee1b53c62ce86", "Url": "https://api.github.com/repos/bioinfweb/JPhyloIO", "Date": "2017-10-25T17:00:52Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smartgwt.client.widgets.grid.ListGridRecord.getAttributeAsInt(MetricsViewDataSource.FIELD_METRIC_DEF_ID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((null != metricsTableView) && (metricsTableView.expandedRows.contains(metricDefinitionId))) { expandRecord(listGridRecord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8860/buggy-version/modules.enterprise.gui.coregui.src.main.java.org.rhq.enterprise.gui.coregui.client.inventory.resource.detail.monitoring.table.MetricsTableView.java", "BodyUseAPI": [], "Fixed commit": "5fc0c3dcb14fa1406e24e57d213a0cbda0205255", "Url": "https://api.github.com/repos/Jiri-Kremser/RHQ", "Date": "2013-07-30T18:42:37Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(configuration.isStoreByValue())) && (configuration.isTransactionsEnabled())) { throw new java.lang.IllegalArgumentException(\"can't use store-by-reference and transactions together\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2686/buggy-version/cache-ri-impl.src.main.java.org.jsr107.ri.RICacheManager.java", "BodyUseAPI": [], "Fixed commit": "e79118f8a83509fa1d9a52575cf9a30b782a5580", "Url": "https://api.github.com/repos/jsr107/RI", "Date": "2013-05-06T19:14:14Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((game.getFinished()) != null) { userService.updateUserAsDisabled(game.getPlayerOneId()); userService.updateUserAsDisabled(game.getPlayerTwoId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/13/buggy-version/src.main.java.com.cengha.divider2.service.FlowService.java", "BodyUseAPI": ["com.cengha.divider2.model.Game.getPlayerOneId()", "com.cengha.divider2.model.Game.getPlayerTwoId()", "com.cengha.divider2.service.UserService.updateUserAsDisabled(game.getPlayerTwoId())", "com.cengha.divider2.service.UserService.updateUserAsDisabled(game.getPlayerOneId())"], "Fixed commit": "35b05e6bb320581510c9c0ccb04ac0db9c16c7a4", "Url": "https://api.github.com/repos/cengha/divider2", "Date": "2017-10-15T15:07:11Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(b instanceof org.bukkit.entity.ArmorStand)) { event.setDamage(EntityDamageEvent.DamageModifier.ARMOR, 0); event.setDamage(EntityDamageEvent.DamageModifier.RESISTANCE, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5989/buggy-version/src.main.java.info.faceland.strife.listeners.CombatListener.java", "BodyUseAPI": [], "Fixed commit": "0c900931cfcc5d80fc36fd71bea3b8f054c41e2e", "Url": "https://api.github.com/repos/TealCube/strife", "Date": "2015-09-13T22:18:59Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(b instanceof org.bukkit.entity.ArmorStand)) { event.setDamage(EntityDamageEvent.DamageModifier.ARMOR, 0); event.setDamage(EntityDamageEvent.DamageModifier.RESISTANCE, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5989/buggy-version/src.main.java.info.faceland.strife.listeners.CombatListener.java", "BodyUseAPI": [], "Fixed commit": "0c900931cfcc5d80fc36fd71bea3b8f054c41e2e", "Url": "https://api.github.com/repos/TealCube/strife", "Date": "2015-09-13T22:18:59Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newRow.length()) > 0) { newMatrix.rows.append(newRow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4648/buggy-version/pa3.Matrix.java", "BodyUseAPI": ["List.append(List)"], "Fixed commit": "4869126dbe0e74e4d49364d5f832cfd1a5bfeef1", "Url": "https://api.github.com/repos/spencer-p/cmps101", "Date": "2017-11-05T00:48:27Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newRow.length()) > 0) { C.rows.append(newRow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4648/buggy-version/pa3.Matrix.java", "BodyUseAPI": ["List.append(List)"], "Fixed commit": "4869126dbe0e74e4d49364d5f832cfd1a5bfeef1", "Url": "https://api.github.com/repos/spencer-p/cmps101", "Date": "2017-11-05T00:48:27Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (x != 0) { r.append(new Matrix.Entry(i, j, x)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4648/buggy-version/pa3.Matrix.java", "BodyUseAPI": ["List.append(Matrix.Entry)"], "Fixed commit": "4869126dbe0e74e4d49364d5f832cfd1a5bfeef1", "Url": "https://api.github.com/repos/spencer-p/cmps101", "Date": "2017-11-05T00:48:27Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (columnValue == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4701/buggy-version/src.com.gvace.sorm.utils.ReflectUtils.java", "BodyUseAPI": [], "Fixed commit": "eeea57ac6c0ad89b644022a338bc27e3e5e6c0c4", "Url": "https://api.github.com/repos/ylu999/SORM", "Date": "2016-02-10T05:13:31Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(email)) { return email; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4710/buggy-version/src.main.java.me.liuwj.site.model.User.java", "BodyUseAPI": [], "Fixed commit": "c79314e92c843af5a6bfb20ccc1baf75cbd2af41", "Url": "https://api.github.com/repos/vincentlauvlwj/vincent-site-api", "Date": "2017-10-06T13:14:12Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.Scroller.getCurrX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (left == 0) { setBackGroundVisible(false, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2119/buggy-version/sdlv.src.main.java.com.yydcdut.sdlv.ItemMainLayout.java", "BodyUseAPI": [], "Fixed commit": "35bc282a7a925ba5e5cc35517ab4207715558218", "Url": "https://api.github.com/repos/yydcdut/SlideAndDragListView", "Date": "2016-06-04T03:28:54Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.getName().endsWith(\".gz\")) { try { com.ubhave.datahandler.DataManager.getInstance(context).moveFileToUploadDir(file); } catch (java.lang.Exception e) { android.util.Log.e(com.ubhave.datahandler.store.DataStorage.TAG, android.util.Log.getStackTraceString(e)); } }else if (isFileDurationLimitReached(file.getName(), DataHandlerConfig.DEFAULT_RECENT_DURATION)) { if ((file.length()) <= 0) { file.delete(); }else { android.util.Log.d(com.ubhave.datahandler.store.DataStorage.TAG, (\"gzip file \" + file)); java.io.File gzippedFile = gzipFile(file); try { com.ubhave.datahandler.DataManager.getInstance(context).moveFileToUploadDir(gzippedFile); android.util.Log.d(com.ubhave.datahandler.store.DataStorage.TAG, ((\"moved file \" + (gzippedFile.getAbsolutePath())) + \" to server upload dir\")); android.util.Log.d(com.ubhave.datahandler.store.DataStorage.TAG, (\"deleting file: \" + (file.getAbsolutePath()))); file.delete(); } catch (java.lang.Exception te) { android.util.Log.e(com.ubhave.datahandler.store.DataStorage.TAG, android.util.Log.getStackTraceString(te)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1373/buggy-version/src.com.ubhave.datahandler.store.DataStorage.java", "BodyUseAPI": ["java.io.File.delete()", "com.ubhave.datahandler.DataManager.getInstance(context).moveFileToUploadDir(java.io.File)", "java.io.File.getAbsolutePath()", "java.io.File.delete()", "java.io.File.getName()", "com.ubhave.datahandler.store.DataStorage.isFileDurationLimitReached(java.lang.String,DataHandlerConfig.DEFAULT_RECENT_DURATION)", "com.ubhave.datahandler.store.DataStorage.gzipFile(java.io.File)", "java.io.File.length()", "android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "9b05557c61c64ac738428fa08f0c61586f4128e1", "Url": "https://api.github.com/repos/nlathia/SensorDataManager", "Date": "2013-02-14T16:38:32Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isModelContainerAdapter) { putDefaultValue = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2512/buggy-version/dbflow-processor.src.main.java.com.raizlabs.android.dbflow.processor.definition.column.ColumnDefinition.java", "BodyUseAPI": [], "Fixed commit": "18b240b63cba31b1f6ea284d252b60b890cd601c", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2015-11-01T01:45:38Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isModelContainerAdapter) { codeBuilder.addStatement(\"$L.putDefault($S)\", com.raizlabs.android.dbflow.processor.utils.ModelUtils.getVariable(true), columnName); }else { java.lang.String defaultValue = \"null\"; if (elementTypeName.isPrimitive()) { if (elementTypeName.equals(TypeName.BOOLEAN)) { defaultValue = \"false\"; }else if ((((((elementTypeName.equals(TypeName.BYTE)) || (elementTypeName.equals(TypeName.INT))) || (elementTypeName.equals(TypeName.DOUBLE))) || (elementTypeName.equals(TypeName.FLOAT))) || (elementTypeName.equals(TypeName.LONG))) || (elementTypeName.equals(TypeName.SHORT))) { defaultValue = \"0\"; }else if (elementTypeName.equals(TypeName.CHAR)) { defaultValue = \"\\'\\\\u0000\\'\"; } } com.raizlabs.android.dbflow.processor.definition.column.BaseColumnAccess baseColumnAccess = columnAccess; if (columnAccess instanceof com.raizlabs.android.dbflow.processor.definition.column.WrapperColumnAccess) { baseColumnAccess = ((com.raizlabs.android.dbflow.processor.definition.column.WrapperColumnAccess) (columnAccess)).existingColumnAccess; } codeBuilder.addStatement(baseColumnAccess.setColumnAccessString(elementTypeName, elementName, fullElementName, isModelContainerAdapter, com.raizlabs.android.dbflow.processor.utils.ModelUtils.getVariable(isModelContainerAdapter), com.squareup.javapoet.CodeBlock.builder().add(defaultValue).build())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2512/buggy-version/dbflow-processor.src.main.java.com.raizlabs.android.dbflow.processor.definition.column.DefinitionUtils.java", "BodyUseAPI": ["com.raizlabs.android.dbflow.processor.definition.column.BaseColumnAccess.setColumnAccessString(com.squareup.javapoet.TypeName,java.lang.String,java.lang.String,boolean,com.raizlabs.android.dbflow.processor.utils.ModelUtils.getVariable(isModelContainerAdapter),com.squareup.javapoet.CodeBlock.builder().add(defaultValue).build())", "com.raizlabs.android.dbflow.processor.utils.ModelUtils.getVariable(boolean)", "CodeBlock.Builder.addStatement(baseColumnAccess.setColumnAccessString(elementTypeName, elementName, fullElementName, isModelContainerAdapter, com.raizlabs.android.dbflow.processor.utils.ModelUtils.getVariable(isModelContainerAdapter), com.squareup.javapoet.CodeBlock.builder().add(defaultValue).build()))"], "Fixed commit": "18b240b63cba31b1f6ea284d252b60b890cd601c", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2015-11-01T01:45:38Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dir.isDirectory())) { throw new no.avexis.image.storer.exceptions.ImageStorerDirectoryMissingException(java.lang.String.format(\"'%1$s' is not a directory\", directory)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7425/buggy-version/src.main.java.no.avexis.image.storer.ImageStorerFactory.java", "BodyUseAPI": [], "Fixed commit": "989b219a93363736357000058aa628f4cb622477", "Url": "https://api.github.com/repos/Avexis/image-uploader", "Date": "2017-09-17T17:58:10Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (locationClient.isConnected()) { locationClient.requestLocationUpdates(gmsRequest, runningRequests.get(requestId)); }else { final java.lang.String connectRequestId = java.util.UUID.randomUUID().toString(); pendingRequests.put(connectRequestId, new java.lang.Runnable() { @java.lang.Override public void run() { locationClient.requestLocationUpdates(gmsRequest, runningRequests.get(requestId)); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2420/buggy-version/src.main.java.net.atomcode.bearing.location.provider.GMSLocationProvider.java", "BodyUseAPI": ["com.google.android.gms.location.LocationClient.requestLocationUpdates(com.google.android.gms.location.LocationRequest,runningRequests.get(requestId))", "java.util.HashMap<java.lang.String, java.lang.Runnable>.put(java.lang.String,java.lang.Runnable)", "com.google.android.gms.location.LocationClient.requestLocationUpdates(com.google.android.gms.location.LocationRequest,runningRequests.get(requestId))"], "Fixed commit": "98273ae55e772d340c0185e5a509b32d0aa1b43b", "Url": "https://api.github.com/repos/tom-bell/Bearing", "Date": "2014-05-21T13:12:44Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mImages.isEmpty()) { throw new java.lang.IllegalStateException(\"Images is empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2276/buggy-version/src.com.picdora.channelPlayer.ImageManager.java", "BodyUseAPI": [], "Fixed commit": "bc33bd372378920c6de9d8fa2ee882684acc6923", "Url": "https://api.github.com/repos/elihart/picdora-android", "Date": "2014-07-03T20:54:01Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isShowTags()) { seedu.todo.commons.events.ui.ShowTagsEvent tagsEvent = new seedu.todo.commons.events.ui.ShowTagsEvent(model.getGlobalTagsList()); seedu.todo.commons.core.EventsCenter.getInstance().post(tagsEvent); return new seedu.todo.logic.commands.CommandResult(\"Type [Enter] to dismiss.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3528/buggy-version/src.main.java.seedu.todo.logic.commands.TagCommand.java", "BodyUseAPI": [], "Fixed commit": "71ac742d031d1bf3cdf3a95d5688e4f5f486b866", "Url": "https://api.github.com/repos/CS2103AUG2016-W10-C4/main", "Date": "2016-11-01T14:11:27Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bixie.Bixie.translateAndRun(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (reportPrinter != null) { bixie.bixie.Options.v().setOutputFile(output); report2File(reportPrinter); }else { bixie.util.Log.error(\"Could not generate report.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3332/buggy-version/src.main.java.bixie.Bixie.java", "BodyUseAPI": ["bixie.Bixie.report2File(bixie.checker.reportprinter.ReportPrinter)"], "Fixed commit": "78d598342f5295ce7e961fea3ed4a14232fcfc8b", "Url": "https://api.github.com/repos/martinschaef/bixie", "Date": "2015-07-19T21:24:15Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((openmodularturrets.handler.ConfigHandler.offlineModeSupport) && (!(ownerName.isEmpty()))) { par1.setString(\"owner\", ownerName); }else if (!(openmodularturrets.handler.ConfigHandler.offlineModeSupport)) { par1.setString(\"owner\", owner); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4783/buggy-version/src.main.java.openmodularturrets.tileentity.turretbase.TurretBase.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.setString(java.lang.String,java.lang.String)"], "Fixed commit": "ce18d884355d017e707e85f9775a40dc1edc92ba", "Url": "https://api.github.com/repos/OpenModularTurretsTeam/OpenModularTurrets", "Date": "2017-02-02T21:36:11Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSameDateString(lastCreateDate, newCreateDate)) { properties.setProperty(com.pkucareer.intern.SubscribeJobs.propTitle, (newTitles + (lastTitles))); }else { properties.setProperty(com.pkucareer.intern.SubscribeJobs.propTitle, newTitles); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/202/buggy-version/src.com.pkucareer.intern.SubscribeJobs.java", "BodyUseAPI": [], "Fixed commit": "0db756ba0e07358cc8334c344482004d73b7c070", "Url": "https://api.github.com/repos/dongdongdu/webPageMonitor", "Date": "2014-05-12T13:47:38Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSameDateString(lastCreateDate, newCreateDate)) { properties.setProperty(com.pkucareer.intern.SubscribeInterns.propTitle, (newTitles + (lastTitles))); }else { properties.setProperty(com.pkucareer.intern.SubscribeInterns.propTitle, newTitles); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/202/buggy-version/src.com.pkucareer.intern.SubscribeInterns.java", "BodyUseAPI": [], "Fixed commit": "0db756ba0e07358cc8334c344482004d73b7c070", "Url": "https://api.github.com/repos/dongdongdu/webPageMonitor", "Date": "2014-05-12T13:47:38Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.servoy.j2db.server.ngclient.property.types.MediaPropertyType.getMediaUrl(java.lang.Object,com.servoy.j2db.FlattenedSolution,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"resources/fs/mnx_libraries/button/groen/100/30x30.png?imageWidth=30&imageHeight=30\".equals(url)) { int a = 1 / 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/862/buggy-version/servoy_ngclient.src.com.servoy.j2db.server.ngclient.property.types.MediaPropertyType.java", "BodyUseAPI": [], "Fixed commit": "85fbeb233cc4c8c0107502baf14dc640adaa3647", "Url": "https://api.github.com/repos/Servoy/servoy-client", "Date": "2015-05-29T09:19:06Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.CharSequence) { value = ((java.lang.CharSequence) (value)).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/862/buggy-version/servoy_ngclient.src.com.servoy.j2db.server.ngclient.property.types.MediaPropertyType.java", "BodyUseAPI": [], "Fixed commit": "85fbeb233cc4c8c0107502baf14dc640adaa3647", "Url": "https://api.github.com/repos/Servoy/servoy-client", "Date": "2015-05-29T09:19:06Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Main.theClass.config.contains(\"BookSystem.Give\"))) { Main.theClass.config.set(\"BookSystem.Give\", true); Main.theClass.config.saveConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8115/buggy-version/HubBasics.src.me.Fabricio20.methods.FixConfig.java", "BodyUseAPI": [], "Fixed commit": "86c4995694e8f6bbbc48fa2a58869f8e650c0058", "Url": "https://api.github.com/repos/Fabricio20/HubBasics", "Date": "2015-01-11T19:55:58Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (providerKey == null) { final int providerIndex = entry.getName().indexOf('/'); if (providerIndex != (-1)) { providerKey = entry.getName().substring(0, providerIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8640/buggy-version/net.solarnetwork.node.src.net.solarnetwork.node.backup.ZipEntryBackupResource.java", "BodyUseAPI": [], "Fixed commit": "ea13d5c81ccac525ca27d1a6daae765963116d4e", "Url": "https://api.github.com/repos/SolarNetwork/solarnetwork-node", "Date": "2017-12-13T04:37:33Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ziel.exists())) { ziel.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7056/buggy-version/src.de.TerraStormDE.SurvivalChallenge.Manager.TBackupManager.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "7f822f4e1c3ee2d73a10221cac6cd1263fe91e3e", "Url": "https://api.github.com/repos/MissionReplace/SurvivalChallenge", "Date": "2014-11-24T18:20:26Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (algo instanceof defaut.DiffusionAtomique) { radio1.setSelected(true); }else if (algo instanceof defaut.DiffusionSequentielle) { radio2.setSelected(true); }else if (algo instanceof defaut.DiffusionEpoque) { radio3.setSelected(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5796/buggy-version/SEP_PROJECT_CLOSAN.src.defaut.Horloge.java", "BodyUseAPI": [], "Fixed commit": "4d7c05b004e6673a25730a2ad83f40fdcc901f27", "Url": "https://api.github.com/repos/OthmanSanhaji/SEP_PROJET", "Date": "2016-12-27T20:36:41Z"},
{"Line": "=>1426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mShareActionProvider) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6791/buggy-version/src.it.feio.android.omninotes.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "9df6b41dc4840f39482cbd72cf5183d84aa13279", "Url": "https://api.github.com/repos/federicoiosue/Omni-Notes", "Date": "2014-02-04T07:17:41Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((requestId != null) && (!(requestId.isEmpty()))) responseData.setRequestId(org.extensiblecatalog.ncip.v2.koha.util.KohaUtil.createRequestId(requestId));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2131/buggy-version/connectors.koha.3.xx.trunk.jar.src.main.java.org.extensiblecatalog.ncip.v2.koha.KohaCancelRequestItemService.java", "BodyUseAPI": ["org.extensiblecatalog.ncip.v2.service.CancelRequestItemResponseData.setRequestId(org.extensiblecatalog.ncip.v2.koha.util.KohaUtil.createRequestId(requestId))", "org.extensiblecatalog.ncip.v2.koha.util.KohaUtil.createRequestId(java.lang.String)"], "Fixed commit": "da7c729dba99dcbd06b7ab3152c7f1b0a732610f", "Url": "https://api.github.com/repos/moravianlibrary/xcncip2toolkit", "Date": "2015-10-15T11:22:02Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == ((size()) - 1)) { arrayList[i] = null; }else { arrayList[i] = getElement((i + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3124/buggy-version/ListenProjekt.src.ListenModul.ArrayList.java", "BodyUseAPI": ["ListenModul.ArrayList<TYP>.getElement(int)"], "Fixed commit": "c723ce01d58e5a593db0ab21187c6392bef0fd36", "Url": "https://api.github.com/repos/cooperdebear/ListenProjekt", "Date": "2017-02-10T10:35:41Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fieldIsInArrayLength(position)) && (position < (size()))) { return arrayList[position]; }else { throw new java.lang.IllegalArgumentException(\"Der Wert ist hier nicht zul\u00e4ssig, da er au\u00dferhalb des Wertebereichsliegt!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3124/buggy-version/ListenProjekt.src.ListenModul.ArrayList.java", "BodyUseAPI": [], "Fixed commit": "c723ce01d58e5a593db0ab21187c6392bef0fd36", "Url": "https://api.github.com/repos/cooperdebear/ListenProjekt", "Date": "2017-02-10T10:35:41Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lvl) == 4) { canUseMeditate = true; this.appendMessage(\"Ich kann nun meditieren. Zur Beruhigung und St\u00e4rkung meines Glaubens. ('M')\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7823/buggy-version/src.rogue.creature.Player.java", "BodyUseAPI": [], "Fixed commit": "a2bd0a0d4ccf54fde428afe57d72ca847e045bdc", "Url": "https://api.github.com/repos/luetge/der-pazifist", "Date": "2013-03-19T13:07:46Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lvl) == 6) { canUseRoundhousePunch = true; this.appendMessage(\"AAAAAHHHHHHHH! ROUNDHOUSEPUNCH freigeschaltet (bei mind. 80% Rage: 'R')\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7823/buggy-version/src.rogue.creature.Player.java", "BodyUseAPI": [], "Fixed commit": "a2bd0a0d4ccf54fde428afe57d72ca847e045bdc", "Url": "https://api.github.com/repos/luetge/der-pazifist", "Date": "2013-03-19T13:07:46Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7823/buggy-version/src.rogue.creature.Creature.java", "BodyUseAPI": [], "Fixed commit": "a2bd0a0d4ccf54fde428afe57d72ca847e045bdc", "Url": "https://api.github.com/repos/luetge/der-pazifist", "Date": "2013-03-19T13:07:46Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reflector.getCreatedLaser(i).shouldRenderLaser(ClientProxy.mc.thePlayer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (alpha == 0.0F) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3998/buggy-version/common.lasermod.client.render.block.TileEntityReflectorRenderer.java", "BodyUseAPI": [], "Fixed commit": "b76e95e5ee05815089aab56f9028fa094a017d98", "Url": "https://api.github.com/repos/ProPercivalalb/Modjam3", "Date": "2013-12-15T16:17:27Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((_functionListener) != null) { _functionListener.addFunction(func_name, cmd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1661/buggy-version/src.main.java.com.sipstacks.script.Script.java", "BodyUseAPI": [], "Fixed commit": "30d9b63b13425563931173a43e0ede432b5abdb8", "Url": "https://api.github.com/repos/midoricorp/script", "Date": "2015-03-20T17:28:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(graveyard.playerIsInGraveyard(player))) handlePlayerDamage(player, event.getDamage());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6895/buggy-version/src.no.runsafe.mergic.KillManager.java", "BodyUseAPI": ["no.runsafe.mergic.KillManager.handlePlayerDamage(no.runsafe.framework.api.player.IPlayer,event.getDamage())"], "Fixed commit": "1f0c284da509f984b00740b6d50e698eeb97ec8e", "Url": "https://api.github.com/repos/Runsafe/Mergic", "Date": "2014-01-14T22:21:57Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sudoken.extension.ExtensionManager.hasParser(ext)) { java.util.List<java.lang.String> extConfig = sudoken.extension.ExtensionManager.getParser(ext).getConfig(extConstraints.get(ext)); if ((extConfig.size()) > 0) { for (java.lang.String line : extConfig) out.println(line); out.println(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1387/buggy-version/src.sudoken.persistence.Parser.java", "BodyUseAPI": ["sudoken.extension.ExtensionManager.getParser(ext).getConfig(extConstraints.get(ext))", "sudoken.extension.ExtensionManager.getParser(java.lang.String)", "java.util.Map<java.lang.String, java.util.Collection<sudoken.persistence.Constraint>>.get(java.lang.String)"], "Fixed commit": "92f9e055b92da1c1cb5ca61d804279340bc2ff01", "Url": "https://api.github.com/repos/pantaloons/Sudoken", "Date": "2012-04-27T03:29:21Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pModel.isState(de.engineapp.controls.SHOW_ARROWS_ALWAYS)) { attachVelocityArrow(object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8450/buggy-version/PhysicsApplication.src.de.engineapp.controls.Canvas.java", "BodyUseAPI": [], "Fixed commit": "2a80055ade15547bf3bc5e0eed06e3ccd2280497", "Url": "https://api.github.com/repos/FrecherxDachs/PhysicsEngine", "Date": "2012-11-16T15:47:36Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pModel.isState(de.engineapp.controls.DEBUG)) { de.engineapp.controls.Box aabb = new de.engineapp.controls.Box(object, \"getAABB\"); ((de.engineapp.controls.IDecorable) (object)).putDecor(\"aabb\", aabb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8450/buggy-version/PhysicsApplication.src.de.engineapp.controls.Canvas.java", "BodyUseAPI": [], "Fixed commit": "2a80055ade15547bf3bc5e0eed06e3ccd2280497", "Url": "https://api.github.com/repos/FrecherxDachs/PhysicsEngine", "Date": "2012-11-16T15:47:36Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (action.equals(\"NEWUSER\")) newUser(request, response); else if (action.equals(\"REGISTER\")) register(request, response); else if (action.equals(\"LOGOUT\")) logout(request, response); else if (action.equals(\"SELECT_QUIZ\")) selectQuiz(request, response); else if (action.equals(\"GENERATE_QUIZ\")) generateQuiz(request, response); else if (action.equals(\"GRADE_QUIZ\")) gradeQuiz(request, response);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4854/buggy-version/src.com.webquiz.servlet.WebQuizServlet.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "34036d8a0c092bf60f0ce1f71ef8e178c456d3c0", "Url": "https://api.github.com/repos/RajeshGottlieb/WebQuiz", "Date": "2013-06-26T02:51:57Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deltaOrder != 0) return deltaOrder;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4924/buggy-version/import_layer.src.main.java.org.isatools.isatab.export.isatab.pipeline.wrapper_nodes.MaterialWrapperNode.java", "BodyUseAPI": [], "Fixed commit": "1b76195009d5930072214bc55a2713cb007a1660", "Url": "https://api.github.com/repos/sneumann/ISAvalidator-ISAconverter-BIImanager", "Date": "2011-02-25T19:07:08Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fields.length) == 0) { index.remove(generatedKey); }else { recursiveRemove(data, generatedKey, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5380/buggy-version/silo-engine.src.main.java.se.l4.silo.engine.internal.index.IndexQueryEngine.java", "BodyUseAPI": [], "Fixed commit": "1368743169fcd44d9d1eb79eabd67a3537c96e9d", "Url": "https://api.github.com/repos/LevelFourAB/silo", "Date": "2016-06-23T08:28:05Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mExpenseSet.isEmpty())) { mExpenseSet.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5296/buggy-version/app.src.main.java.com.tony.odiya.mahanadi.fragment.ExpenseFragment.java", "BodyUseAPI": ["java.util.Set<com.tony.odiya.mahanadi.model.ExpenseData>.clear()"], "Fixed commit": "a4032994c7e10296b827821d8c27b1a834ce9200", "Url": "https://api.github.com/repos/tonysinghmss/Mahanadi", "Date": "2017-11-09T19:57:03Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.LOLLIPOP)) { messageBuilder.setSpan(new net.usikkert.kouchat.android.component.DefaultLineHeightSpan(), 0, message.length(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6010/buggy-version/app.src.main.java.net.usikkert.kouchat.android.chatwindow.MessageStylerWithHistory.java", "BodyUseAPI": [], "Fixed commit": "b6e38ed727ea4cd5735926386b43654ce64ea3b6", "Url": "https://api.github.com/repos/blurpy/kouchat-android", "Date": "2016-07-29T17:59:03Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOrganizer) == null) { mOrganizer = result.getParcelable(cc.rainwave.android.NowPlayingActivity.SCHEDULE); }else { cc.rainwave.android.api.types.RainwaveResponse tmp = result.getParcelable(cc.rainwave.android.NowPlayingActivity.SCHEDULE); mOrganizer.receiveUpdates(tmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6332/buggy-version/src.cc.rainwave.android.NowPlayingActivity.java", "BodyUseAPI": [], "Fixed commit": "1a8b0ccc8c53447aabf804cd9659352ae225fe5f", "Url": "https://api.github.com/repos/OEP/rainwave-android", "Date": "2011-08-17T16:49:01Z"},
{"Line": "=>1489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msg.what) == (-1)) { showToast(res.getString(R.string.err_favorite_failed)); }else { updateFavPointBox(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4200/buggy-version/main.src.cgeo.geocaching.CacheDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "be1ff37d51312725611c045e77b936c0bb4a5434", "Url": "https://api.github.com/repos/cgeo/c-geo-opensource", "Date": "2013-01-05T05:50:13Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDetached()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4467/buggy-version/src.main.java.org.quantumbadger.redreader.fragments.CommentListingFragment.java", "BodyUseAPI": [], "Fixed commit": "470345a3e20d86df8dc5e3cee491f74a45163814", "Url": "https://api.github.com/repos/QuantumBadger/RedReader", "Date": "2013-06-17T08:30:34Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dependency.getClassSource().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (clsReader == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2738/buggy-version/teavm-core.src.main.java.org.teavm.vm.TeaVM.java", "BodyUseAPI": [], "Fixed commit": "871667cacb8d2f7e11dd439ed214cc942d706b5a", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2015-01-22T17:04:17Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs((x1 - x2))) > 512) || ((java.lang.Math.abs((z1 - z2))) > 512)) { throw new net.minecraft.command.WrongUsageException(net.minecraft.util.StatCollector.translateToLocal(\"info.command.argument.outofrange.toolarge\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6255/buggy-version/src.main.java.fi.dy.masa.tellme.util.BlockStats.java", "BodyUseAPI": [], "Fixed commit": "fee8057c896cec7e4e76ed6cad460b8e6160f4eb", "Url": "https://api.github.com/repos/maruohon/tellme", "Date": "2014-12-01T21:44:28Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errors.hasErrors()) { return new org.springframework.web.servlet.ModelAndView(\"/web/jsp/add-new-book.jsp\", \"book\", book); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1116/buggy-version/src.main.java.com.akash.spring.bookstore.controller.BookController.java", "BodyUseAPI": [], "Fixed commit": "909fbb43b9da50e7f425e1376017ecd7ae4cdc51", "Url": "https://api.github.com/repos/aagarw33/BookStore", "Date": "2016-05-10T19:07:36Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.charAt(0)) == '+') { result = java.lang.Float.parseFloat(s.substring(1, ((s.length()) - 1))); }else { result = java.lang.Float.parseFloat(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7308/buggy-version/src.methods.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "dd8f2bdab251c288382afbb132f3683165d411f8", "Url": "https://api.github.com/repos/chocolatethunder/Java-Parser", "Date": "2017-03-05T01:42:30Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.charAt(0)) == '+') { result = ((int) (java.lang.Integer.parseInt(s.substring(1, ((s.length()) - 1))))); }else { result = ((int) (java.lang.Integer.parseInt(s))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7308/buggy-version/src.methods.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "dd8f2bdab251c288382afbb132f3683165d411f8", "Url": "https://api.github.com/repos/chocolatethunder/Java-Parser", "Date": "2017-03-05T01:42:30Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["blue.orchestra.blueSynthBuilder.LineBoundaryDialog.getLinePointMethod()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (retVal == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6182/buggy-version/blue-core.src.blue.orchestra.blueSynthBuilder.ClampedValue.java", "BodyUseAPI": [], "Fixed commit": "3d29b422d262d4ee61cfdd8fc88ad081e66b5e50", "Url": "https://api.github.com/repos/kunstmusik/blue", "Date": "2016-12-05T22:49:09Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["blue.orchestra.blueSynthBuilder.LineBoundaryDialog.getLinePointMethod()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (retVal == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6182/buggy-version/blue-core.src.blue.orchestra.blueSynthBuilder.ClampedValue.java", "BodyUseAPI": [], "Fixed commit": "3d29b422d262d4ee61cfdd8fc88ad081e66b5e50", "Url": "https://api.github.com/repos/kunstmusik/blue", "Date": "2016-12-05T22:49:09Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) != null) exeCmd = (((curState.toString().toLowerCase()) + \" \") + (id)) + \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/998/buggy-version/CS2103.src.gui.mainWindow.MainJFrame.java", "BodyUseAPI": [], "Fixed commit": "e16730d2a7e6ec0f33d5a45471e764c28aec91ed", "Url": "https://api.github.com/repos/jaejaejae/ramonCS2103", "Date": "2012-06-11T16:33:11Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minCost) != null) { query = query + \",\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5238/buggy-version/app.src.main.java.com.thundersquadron.thundercab.models.searchmodels.FilterSearch.java", "BodyUseAPI": [], "Fixed commit": "86c926d5090b34bdbfce80c6e5fd99b8dc2d2e7e", "Url": "https://api.github.com/repos/CMPUT301F16T13/ThunderCab", "Date": "2016-11-28T04:01:58Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Module.fromName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (null != module) { modules.add(module); }else { endpoints.LoggingEndpoint.log(request.getSession().getId(), java.util.logging.Level.WARNING, (\"No module found with name: \" + moduleName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7881/buggy-version/ymca.src.main.java.servlets.HomeServlet.java", "BodyUseAPI": ["java.util.Collection<java.lang.Module>.add(java.lang.Module)"], "Fixed commit": "89e1e5a6a8d4ee9b24b662d6861cffac17465331", "Url": "https://api.github.com/repos/logdyn/yeovil_microsoft_cognitive_ai", "Date": "2017-04-06T15:56:04Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (players[i].isFolding()) players[i].speak((\"Plays has a \" + (players[i].getScoreName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1483/buggy-version/src.poker.Poker.java", "BodyUseAPI": ["players[i].speak((\"Plays has a \" + (players[i].getScoreName())))", "players[i].getScoreName()"], "Fixed commit": "9d13157d065b89b00302504539739db86023d2c2", "Url": "https://api.github.com/repos/paulsteele/texas-hold-em", "Date": "2013-11-27T14:35:01Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.droidplanner.services.android.impl.core.gcs.follow.LocationRelay.toGcsLocation(android.location.Location)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (gcsLocation == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6587/buggy-version/ClientLib.src.main.java.org.droidplanner.services.android.impl.core.gcs.location.FusedLocation.java", "BodyUseAPI": [], "Fixed commit": "00a256528eaec84fcc0850de129e4c2040f31e3d", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2016-07-25T09:13:38Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (comment != null) { comment = (\"<pre><xmp>\" + (comment.replaceAll(\"(?i)</xmp>\", \"</ xmp>\"))) + \"</xmp></pre>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6239/buggy-version/src.ch.ethz.inf.dbproject.PersonServlet.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "7347629671accde886c2c4c0d129cbe33920a73d", "Url": "https://api.github.com/repos/rospiess/CrimeBook", "Date": "2014-05-25T07:14:51Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (comment != null) { comment = (\"<pre><xmp>\" + (comment.replaceAll(\"(?i)</xmp>\", \"</ xmp>\"))) + \"</xmp></pre>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6239/buggy-version/src.ch.ethz.inf.dbproject.CaseServlet.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "7347629671accde886c2c4c0d129cbe33920a73d", "Url": "https://api.github.com/repos/rospiess/CrimeBook", "Date": "2014-05-25T07:14:51Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.yellowpages.control.YellowpagesSessionController.setContactUserSelected()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userSelected) { request.setAttribute(\"Profile\", flag); destination = manageContact(\"ContactNewFromUser\", request, scc); }else { destination = getDestination(\"ContactNew\", scc, request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1759/buggy-version/yellowpages.yellowpages-war.src.main.java.com.stratelia.webactiv.yellowpages.servlets.YellowpagesRequestRouter.java", "BodyUseAPI": [], "Fixed commit": "2e4869362dce588720fe276211a52da83775d066", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2015-11-16T23:28:45Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"file\".equalsIgnoreCase(uri.getScheme())) { return uri.getPath(); }else if (uri != null) { return uri.getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3158/buggy-version/medialoader.src.main.java.com.jiajunhui.xapp.medialoader.utils.UriGetPath.java", "BodyUseAPI": ["android.net.Uri.getPath()", "android.net.Uri.getPath()"], "Fixed commit": "59687e413f6c814acb925e556017270ce08bce3d", "Url": "https://api.github.com/repos/jiajunhui/MediaLoader", "Date": "2016-11-30T05:44:08Z"},
{"Line": "=>1040", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Boolean) (parameters.get(org.restcomm.android.sdk.RCDevice.ParameterKeys.PUSH_NOTIFICATIONS_ENABLE_PUSH_FOR_ACCOUNT)))) { registerForPush(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7160/buggy-version/restcomm.android.sdk.src.main.java.org.restcomm.android.sdk.RCDevice.java", "BodyUseAPI": [], "Fixed commit": "3bc726a692dd7592b24b5cdcccbbdcff78606a1f", "Url": "https://api.github.com/repos/RestComm/restcomm-android-sdk", "Date": "2017-12-18T15:40:30Z"},
{"Line": "=>1093", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Boolean) (parameters.get(org.restcomm.android.sdk.RCDevice.ParameterKeys.PUSH_NOTIFICATIONS_ENABLE_PUSH_FOR_ACCOUNT)))) { registerForPush(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7160/buggy-version/restcomm.android.sdk.src.main.java.org.restcomm.android.sdk.RCDevice.java", "BodyUseAPI": [], "Fixed commit": "3bc726a692dd7592b24b5cdcccbbdcff78606a1f", "Url": "https://api.github.com/repos/RestComm/restcomm-android-sdk", "Date": "2017-12-18T15:40:30Z"},
{"Line": "=>1297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restcomm.android.sdk.RCDevice.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((deviceParameters.get(RCDevice.ParameterKeys.MEDIA_ICE_SERVERS_DISCOVERY_TYPE)) instanceof java.lang.Enum) { iceServerDiscoveryType = ((org.restcomm.android.sdk.RCDevice.MediaIceServersDiscoveryType) (deviceParameters.get(RCDevice.ParameterKeys.MEDIA_ICE_SERVERS_DISCOVERY_TYPE))); }else { iceServerDiscoveryType = RCDevice.MediaIceServersDiscoveryType.values()[((int) (deviceParameters.get(RCDevice.ParameterKeys.MEDIA_ICE_SERVERS_DISCOVERY_TYPE)))]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7160/buggy-version/restcomm.android.sdk.src.main.java.org.restcomm.android.sdk.RCConnection.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.get(RCDevice.ParameterKeys.MEDIA_ICE_SERVERS_DISCOVERY_TYPE)", "java.util.HashMap<java.lang.String, java.lang.Object>.get(RCDevice.ParameterKeys.MEDIA_ICE_SERVERS_DISCOVERY_TYPE)"], "Fixed commit": "3bc726a692dd7592b24b5cdcccbbdcff78606a1f", "Url": "https://api.github.com/repos/RestComm/restcomm-android-sdk", "Date": "2017-12-18T15:40:30Z"},
{"Line": "=>2837", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Document.getDocumentElement()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (root.hasAttribute(\"default-password\")) root.removeAttribute(\"default-password\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5504/buggy-version/railo-java.railo-core.src.railo.runtime.config.ConfigWebAdmin.java", "BodyUseAPI": ["org.w3c.dom.Element.removeAttribute(java.lang.String)"], "Fixed commit": "95c352772641502871757d0d88b068d92fb27327", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-11-01T14:36:32Z"},
{"Line": "=>2838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Document.getDocumentElement()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (root.hasAttribute(\"default-pw\")) root.removeAttribute(\"default-pw\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5504/buggy-version/railo-java.railo-core.src.railo.runtime.config.ConfigWebAdmin.java", "BodyUseAPI": ["org.w3c.dom.Element.removeAttribute(java.lang.String)"], "Fixed commit": "95c352772641502871757d0d88b068d92fb27327", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-11-01T14:36:32Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mavenp2versionmatch.main.MavenP2VersionMatch.isValidInput(map))) { java.lang.System.err.println((\"Invalid input. Must include git repo, \" + \"commit and one of maven version and p2 version.\")); java.lang.System.exit((-1)); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7650/buggy-version/src.mavenp2versionmatch.main.MavenP2VersionMatch.java", "BodyUseAPI": [], "Fixed commit": "2091eaa8f8454c01ba88eb9d2ae94ba554bac1a0", "Url": "https://api.github.com/repos/EclipseUCOSP/org.eclipse.cbi.versionchecker", "Date": "2012-09-30T14:04:30Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.simplecamera.MainActivity.cameraID) == (Camera.CameraInfo.CAMERA_FACING_FRONT)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8894/buggy-version/src.com.example.simplecamera.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "aa55a4d69fdb9412363e9ec7386d5aec89df000a", "Url": "https://api.github.com/repos/triestpa/simpleCamera", "Date": "2013-12-28T05:49:18Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mergedFieldSchema.type) == 100) { resultFieldSchema = new org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema(mergedFieldSchema.alias, new org.apache.pig.impl.logicalLayer.schema.Schema(parquet.pig.TupleReadSupport.union(mergedFieldSchema.schema.getField(0), newFieldSchema.schema.getField(0))), mergedFieldSchema.type); }else { resultFieldSchema = new org.apache.pig.impl.logicalLayer.schema.Schema.FieldSchema(mergedFieldSchema.alias, parquet.pig.TupleReadSupport.union(mergedFieldSchema.schema, newFieldSchema.schema), mergedFieldSchema.type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7431/buggy-version/parquet-pig.src.main.java.parquet.pig.TupleReadSupport.java", "BodyUseAPI": ["mergedFieldSchema.schema.getField(int)", "parquet.pig.TupleReadSupport.union(mergedFieldSchema.schema,newFieldSchema.schema)", "parquet.pig.TupleReadSupport.union(mergedFieldSchema.schema.getField(0),newFieldSchema.schema.getField(0))"], "Fixed commit": "9128009f016e5cf4525504cf0325ccd5ee5e1bee", "Url": "https://api.github.com/repos/MediaV/parquet-mr", "Date": "2015-06-17T11:31:33Z"},
{"Line": "=>3231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.Delegator.findByPrimaryKey(java.lang.String,org.ofbiz.base.util.UtilMisc.toMap(\"productId\", successProductId))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(successProduct.get(\"productType\").equals(\"FINISHED_GOOD\"))) { successProducts.remove(i); i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6811/buggy-version/hot-deploy.zuczugcommon.src.com.zuczug.product.ZuczugProductServices.java", "BodyUseAPI": [], "Fixed commit": "de3ff5326d6b1555b5bcd770aee4fa9b9bf8b29d", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-09-26T07:18:24Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (delta_t > 1000) { delta_t = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2202/buggy-version/model.MyPongModel.java", "BodyUseAPI": [], "Fixed commit": "5ca96d4849cd9a3ef06a68f78a7144a91bc3f600", "Url": "https://api.github.com/repos/Snapple49/ioopmPong", "Date": "2014-12-04T16:05:10Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((connection) == null) || (response == null)) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6475/buggy-version/src.com.aeroheart.owlery.Request.java", "BodyUseAPI": [], "Fixed commit": "d2858f89bcd356cb2aadcffed96518ebc069f1fd", "Url": "https://api.github.com/repos/aeroheart-c6/owlery-android", "Date": "2013-09-15T09:49:04Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value != null) { sb.append(httpilot.RequestBody.urlEncode(formParams.get(key).toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5214/buggy-version/src.main.java.httpilot.RequestBody.java", "BodyUseAPI": [], "Fixed commit": "d0f4174d2d546c8f99e96b6900bcda5044646d96", "Url": "https://api.github.com/repos/seratch/httpilot", "Date": "2011-10-11T01:01:07Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentAction) != (View.MainV.NO_ACTION)) { Model.Vertice v = new Model.Vertice(((float) (x)), ((float) (y))); if ((currentAction) == (View.MainV.SHEAR_ACTION)) { int selSize = selectedPolygon.getVertices().size(); boolean toAdd = false; Model.Aresta closeLine = null; for (int j = 0; j < selSize; j++) { Model.Vertice a = selectedPolygon.getVertices().get(j); Model.Vertice b; if (j == (selSize - 1)) b = selectedPolygon.getVertices().get(0); else b = selectedPolygon.getVertices().get((j + 1)); if ((utils.VMath.shortestDistance(a, b, v)) < (View.MainV.LINE_PROXIMITY_THRESHOLD)) { toAdd = true; closeLine = new Model.Aresta(a, b); break; } } if (toAdd) { boolean isVert = utils.VMath.isLineVertical(closeLine); boolean isHori = utils.VMath.isLineHorizontal(closeLine); if (isVert) { java.lang.System.out.println(\"VERT\"); paneMs.setCursor(new java.awt.Cursor(java.awt.Cursor.E_RESIZE_CURSOR)); }else if (isHori) { java.lang.System.out.println(\"HORI\"); paneMs.setCursor(new java.awt.Cursor(java.awt.Cursor.N_RESIZE_CURSOR)); }else { java.lang.System.out.println((\"NONE- \" + (utils.VMath.lineSlope(closeLine)))); paneMs.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR)); } } }else { if (utils.PMath.proximoDeQualquerVerticeDoPoligono(selectedPolygon, v)) paneMs.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR)); else paneMs.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9255/buggy-version/CG.src.View.MainV.java", "BodyUseAPI": [], "Fixed commit": "0d55107c2fc8d849ccc24f61d1ac2dd3f916e7be", "Url": "https://api.github.com/repos/JulianoFelipe/CG", "Date": "2017-08-21T19:31:35Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(goal.getComplete())) { if (((goal.getOrigin().equals(station)) || (goal.getDestination().equals(station))) || (goal.getIntermediary().equals(station))) { int radius; if (map.containsKey(station.getName())) { radius = (map.get(station.getName())) + 5; }else { radius = 15; } map.put(station.getName(), radius); list.add(new fvs.taxe.controller.StationController.StationHighlight(station, radius, fvs.taxe.controller.StationController.colours[index])); } index++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/990/buggy-version/taxe.core.src.fvs.taxe.controller.StationController.java", "BodyUseAPI": ["goal.getIntermediary().equals(gameLogic.map.Station)", "goal.getOrigin().equals(gameLogic.map.Station)", "gameLogic.goal.Goal.getDestination()", "gameLogic.goal.Goal.getOrigin()", "gameLogic.goal.Goal.getIntermediary()", "goal.getDestination().equals(gameLogic.map.Station)"], "Fixed commit": "73665c35d67e2d5f6352bce812ad4537ef6562fb", "Url": "https://api.github.com/repos/Dynamic-Underground-Strippers/Assessment3", "Date": "2015-02-12T11:55:33Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.avro.LogicalTypes.fromSchemaIgnoreInvalid(org.talend.daikon.avro.AvroUtils.unwrapIfNullable(f.schema()))) == (org.apache.avro.LogicalTypes.date())) { f.addProp(SchemaConstants.TALEND_COLUMN_PATTERN, org.talend.components.snowflake.runtime.SnowflakeSourceOrSink.TALEND_DEFAULT_DATE_PATTERN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5226/buggy-version/components.components-snowflake.src.main.java.org.talend.components.snowflake.runtime.SnowflakeSourceOrSink.java", "BodyUseAPI": ["org.apache.avro.Schema.Field.addProp(SchemaConstants.TALEND_COLUMN_PATTERN,java.lang.String)"], "Fixed commit": "4d0dd5a77a64716eda5e1d1a94ca6aebc6661162", "Url": "https://api.github.com/repos/Talend/components", "Date": "2017-03-16T08:42:03Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (app.newUser(newUser)) { android.util.Log.v(\"MyTweet\", (((\"New User: \" + firstNameStr) + \" \") + lastNameStr)); startActivity(new android.content.Intent(this, org.wit.mytweet.activity.LogIn.class)); }else { android.widget.Toast toast = android.widget.Toast.makeText(this, \"This email is already registered!\", Toast.LENGTH_SHORT); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/459/buggy-version/app.src.main.java.org.wit.mytweet.activity.SignUp.java", "BodyUseAPI": [], "Fixed commit": "a5c99a63ced2627890b548599237ef8f295ed612", "Url": "https://api.github.com/repos/michaelfoy/mytweet-android-app", "Date": "2016-10-31T15:53:35Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((projects) != null) this.projects.removeListener(this::projectListChanged);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8483/buggy-version/src.edu.asu.plp.tool.prototype.view.ProjectExplorerTree.java", "BodyUseAPI": [], "Fixed commit": "e3e29b11a2c08727157220614e21dc8e6cbdb1f3", "Url": "https://api.github.com/repos/Progressive-Learning-Platform/PLPTool6", "Date": "2015-11-13T22:39:34Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (btnAddCard.isEnabled()) { try { final int value = java.lang.Integer.parseInt(txtCardValue.getText()); addCard(value); txtCardValue.setText(\"\"); refresh(); } catch (java.lang.NumberFormatException ex) { java.lang.System.out.print(ex.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1221/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.deck.CreateDeck.java", "BodyUseAPI": [], "Fixed commit": "7b20b25f1523b50b935257d8aef85e79bd0f4be4", "Url": "https://api.github.com/repos/TheTeam8s/wpi-suite", "Date": "2014-05-04T02:14:00Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timetmp > (java.lang.System.currentTimeMillis())) { timetmp = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/58/buggy-version/photoweb.src.com.backend.scan.FileTools.java", "BodyUseAPI": [], "Fixed commit": "7878de97198ca6c5774d36a29fbce224d33d0f6d", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-02-04T16:58:03Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getLowScore(dealerHand)) > 21) { printOpenHands(dealerHand, playerHand); java.lang.System.out.println(\"Dealer went over. DEALER BUST\"); outcome = 1; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8404/buggy-version/Blackjack.java", "BodyUseAPI": ["Blackjack.printOpenHands(java.util.ArrayList<Blackjack.Card>,java.util.ArrayList<Blackjack.Card>)"], "Fixed commit": "c9e9823900229481a7eb3cc26eb432287d7b3f22", "Url": "https://api.github.com/repos/rdding/College-An-Oregon-Trail-Short", "Date": "2016-03-12T22:27:51Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((SecondsInput == null) || (SecondsInput.isEmpty())) guiBlock.GUI.errorDialog(\"Invalid Entry\"); else guiBlock.GUI.Seconds = java.lang.Double.parseDouble(SecondsInput);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7110/buggy-version/SerialInterface.src.guiBlock.GUI.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "6bd473b4aca7032b8679863b2ff2466917e1a137", "Url": "https://api.github.com/repos/frog7227/SerialInterface", "Date": "2017-01-25T05:01:53Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.Sheet.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(it.hasNext())) return java.util.Collections.<org.molgenis.util.tuple.Tuple>emptyList().iterator();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7794/buggy-version/src.org.molgenis.io.excel.ExcelSheetReader.java", "BodyUseAPI": [], "Fixed commit": "b4b58634582195a37ae2cdc1740391a6ea64d5c1", "Url": "https://api.github.com/repos/ljohansson/molgenis-legacy", "Date": "2013-02-01T12:11:42Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.imranariffin.goboard.GoBoard.place(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!ret) { java.lang.System.out.println(\"Invalid move: Cannot place on acquired position\"); }else { java.lang.System.out.print(com.imranariffin.goboard.GoBoardStringUtil.toString(board)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3954/buggy-version/src.com.imranariffin.goboard.client.GoClient.java", "BodyUseAPI": [], "Fixed commit": "e75010023bca284b195ea64eb1d37362ba254033", "Url": "https://api.github.com/repos/imranariffin/GoBoard", "Date": "2017-11-06T01:19:03Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getListAdapter()) == null) { android.util.Log.i(LOG, \"Saving instance state, but our listadapter is null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6441/buggy-version/app.src.main.java.net.kenneho.runnow.InfoActivity.java", "BodyUseAPI": [], "Fixed commit": "68c67d3a846185ae99da8b8131cbaa78ccc6c198", "Url": "https://api.github.com/repos/kenneho/run-for-the-bus", "Date": "2015-03-01T18:53:04Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((timeoutTimer)++) > 40) { entity.getNavigator().clearPathEntity(); timeoutTimer = 0; (timeoutCounter)++; if (((timeoutCounter) > 1) && (entity.hasPath())) { ((pneumaticCraft.common.ai.EntityPathNavigateDrone) (entity.getNavigator())).teleport(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1463/buggy-version/src.pneumaticCraft.common.ai.DroneMoveHelper.java", "BodyUseAPI": [], "Fixed commit": "be0445bfbc85c5da88d1965b9753b2360b293861", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-09-25T15:20:18Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count < 2) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3030/buggy-version/src.main.java.li.tengfei.apng.opt.optimizer.KMeansReducer.java", "BodyUseAPI": [], "Fixed commit": "6301758473f76920e419baeb234db506baf645a3", "Url": "https://api.github.com/repos/litengfei/apng-opt", "Date": "2016-12-30T07:22:06Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (prefix.contains(\"/\")) { prefixWithMask = prefix; }else { boolean ipv6 = prefix.contains(\":\"); prefixWithMask = prefix + (ipv6 ? \"/64\" : \"/32\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4046/buggy-version/projects.batfish.src.batfish.grammar.flatjuniper.Hierarchy.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "b10e997028ce882872326bd1ee8194764979cf22", "Url": "https://api.github.com/repos/batfish/batfish", "Date": "2015-01-31T03:39:52Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bookParameters.length) < 5) { throw new java.lang.IllegalStateException(\"Too few parameters to construct a Book object\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2709/buggy-version/BibLexRefManager.src.main.java.fi.cyborgducks.biblexrefmanager.factory.ReferenceFactory.java", "BodyUseAPI": [], "Fixed commit": "ce850173179d791655b21f4e179f467e2435ca82", "Url": "https://api.github.com/repos/Ooppa/ohtu-miniproj-cyborg-ducks-", "Date": "2015-04-22T19:10:36Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((articleParameters.length) < 6) { throw new java.lang.IllegalStateException(\"Too few parameters to construct an Article object\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2709/buggy-version/BibLexRefManager.src.main.java.fi.cyborgducks.biblexrefmanager.factory.ReferenceFactory.java", "BodyUseAPI": [], "Fixed commit": "ce850173179d791655b21f4e179f467e2435ca82", "Url": "https://api.github.com/repos/Ooppa/ohtu-miniproj-cyborg-ducks-", "Date": "2015-04-22T19:10:36Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (positionen != null) this.positionen.addAll(positionen);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9000/buggy-version/shop.src.main.java.de.shop.bestellverwaltung.domain.Bestellung.java", "BodyUseAPI": ["java.util.Set<de.shop.bestellverwaltung.domain.Position>.addAll(java.util.Set<de.shop.bestellverwaltung.domain.Position>)"], "Fixed commit": "4a725a56bdce1e51d2878cc1528f3625d75aa7f4", "Url": "https://api.github.com/repos/miherich/shop-repo", "Date": "2014-01-02T14:24:09Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.positionen) == null) { this.positionen = positionen; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/9000/buggy-version/shop.src.main.java.de.shop.bestellverwaltung.domain.Bestellung.java", "BodyUseAPI": [], "Fixed commit": "4a725a56bdce1e51d2878cc1528f3625d75aa7f4", "Url": "https://api.github.com/repos/miherich/shop-repo", "Date": "2014-01-02T14:24:09Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.getStatusLine().getStatusCode()) == (org.apache.http.HttpStatus.SC_REQUEST_TOO_LONG)) { if (message.contains(ResponseConstants.QUOTA_EXCEEDED_FOR_INSTANCES)) { throw new org.fogbowcloud.manager.occi.core.OCCIException(org.fogbowcloud.manager.occi.core.ErrorType.QUOTA_EXCEEDED, org.fogbowcloud.manager.occi.core.ResponseConstants.QUOTA_EXCEEDED_FOR_INSTANCES); } throw new org.fogbowcloud.manager.occi.core.OCCIException(org.fogbowcloud.manager.occi.core.ErrorType.BAD_REQUEST, message); }else if ((response.getStatusLine().getStatusCode()) > 204) { throw new org.fogbowcloud.manager.occi.core.OCCIException(org.fogbowcloud.manager.occi.core.ErrorType.BAD_REQUEST, response.getStatusLine().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5215/buggy-version/src.main.java.org.fogbowcloud.manager.core.plugins.openstack.OpenStackNovaV2ComputePlugin.java", "BodyUseAPI": ["response.getStatusLine().toString()", "response.getStatusLine().getStatusCode()", "org.apache.http.HttpResponse.getStatusLine()", "org.apache.http.HttpResponse.getStatusLine()"], "Fixed commit": "cb6a18535bc449724242b5923220831e075af933", "Url": "https://api.github.com/repos/fogbow/fogbow-manager", "Date": "2014-10-16T19:27:11Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((train.getPosition().getX()) == (-1)) { current = new gameLogic.map.Position(((int) (train.getActor().getBounds().getX())), ((int) (train.getActor().getBounds().getY()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2967/buggy-version/taxe.core.src.fvs.taxe.controller.TrainMoveController.java", "BodyUseAPI": ["train.getActor().getBounds()", "train.getActor().getBounds().getY()", "gameLogic.resource.Train.getActor()", "train.getActor().getBounds().getX()", "gameLogic.resource.Train.getActor()", "train.getActor().getBounds()"], "Fixed commit": "eca991f83702dfc9e8242660a6785025026845f7", "Url": "https://api.github.com/repos/Dynamic-Underground-Strippers/Assessment3", "Date": "2015-02-09T16:00:26Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (value != null) { builder.internalProtoBuilder().setField(fieldDescriptor, value); }else { builder.internalProtoBuilder().clearField(fieldDescriptor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9173/buggy-version/proto.src.main.java.org.dozer.propertydescriptor.ProtoFieldPropertyDescriptor.java", "BodyUseAPI": ["builder.internalProtoBuilder().setField(Descriptors.FieldDescriptor,java.lang.Object)"], "Fixed commit": "19cb9beead6f62f2d9a4fb44f4359ad0321ab749", "Url": "https://api.github.com/repos/Spikhalsky/dozer", "Date": "2012-12-13T18:24:44Z"},
{"Line": "=>1182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.ProxyConfiguration.open(java.net.URL)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (conn instanceof java.net.HttpURLConnection) { java.net.HttpURLConnection httpConn = ((java.net.HttpURLConnection) (conn)); if (((httpConn.getResponseCode()) == (java.net.HttpURLConnection.HTTP_MOVED_TEMP)) || ((httpConn.getResponseCode()) == (java.net.HttpURLConnection.HTTP_MOVED_PERM))) { conn = connect(job, new java.net.URL(httpConn.getHeaderField(\"location\"))); hudson.util.IOUtils.closeQuietly(httpConn.getInputStream()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2341/buggy-version/core.src.main.java.hudson.model.UpdateCenter.java", "BodyUseAPI": [], "Fixed commit": "8dbee981df1cfb062467edd844b1173fa082c66f", "Url": "https://api.github.com/repos/wikimore/jenkins", "Date": "2016-09-19T16:22:19Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (altNames == null) altNames = new java.lang.String[]{ };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8120/buggy-version/src.main.java.jetztencrypt.app.Application.java", "BodyUseAPI": [], "Fixed commit": "62c8e5106ba370381b27845358a5c6550dd928fc", "Url": "https://api.github.com/repos/pottedplant/jetztencrypt", "Date": "2015-12-16T20:18:33Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["descriptionTextView.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((descTest.equals(\"\")) || (descTest.equals(\"Enter description here...\"))) { android.support.design.widget.Snackbar.make(view, \"Please enter a description for your post\", Snackbar.LENGTH_SHORT).show(); }else { com.barterbayucsb.barterbay.Offer newOffer = new com.barterbayucsb.barterbay.Offer(); while ((android.support.v4.content.ContextCompat.checkSelfPermission(thisActivity, android.Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(thisActivity, new java.lang.String[]{ android.Manifest.permission.ACCESS_FINE_LOCATION }, com.barterbayucsb.barterbay.PostActivity.MY_PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION); } android.location.Location l; lm.requestSingleUpdate(LocationManager.GPS_PROVIDER, new android.location.LocationListener() { @java.lang.Override public void onLocationChanged(android.location.Location location) { } @java.lang.Override public void onStatusChanged(java.lang.String s, int i, android.os.Bundle bundle) { } @java.lang.Override public void onProviderEnabled(java.lang.String s) { } @java.lang.Override public void onProviderDisabled(java.lang.String s) { } }, null); l = lm.getLastKnownLocation(LocationManager.GPS_PROVIDER); newOffer.setLocation(new com.google.android.gms.maps.model.LatLng(l.getLatitude(), l.getLongitude())); newOffer.setName(titleTest); newOffer.setDescription(descriptionTextView.getText().toString()); newOffer.setValue(np.getValue()); if ((UploadPicActivity.opened) == 1) newOffer.image = UploadPicActivity.currentBitmap; else newOffer.image = android.graphics.Bitmap.createBitmap(com.barterbayucsb.barterbay.PostActivity.newArray, 2, 2, Bitmap.Config.ALPHA_8); newOffer.id = new java.text.SimpleDateFormat(\"yyyy_MM_dd_HH_mm_ss\", java.util.Locale.US).format(new java.util.Date()); com.barterbayucsb.barterbay.ServerGate gate = new com.barterbayucsb.barterbay.ServerGate(); com.barterbayucsb.barterbay.Offer offer = gate.upload_offer(newOffer); if (offer == null) { android.support.design.widget.Snackbar.make(view, \"Error uploading!\", Snackbar.LENGTH_SHORT).show(); return; } if ((android.support.v4.content.ContextCompat.checkSelfPermission(thisActivity, android.Manifest.permission.WRITE_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(thisActivity, new java.lang.String[]{ android.Manifest.permission.WRITE_EXTERNAL_STORAGE }, com.barterbayucsb.barterbay.PostActivity.MY_PERMISSIONS_REQUEST_WRITE_EXTERNAL_STORAGE); }else { try { newOffer.writeOffer(view); android.support.design.widget.Snackbar.make(view, (\"Successfully wrote to\" + (newOffer.getPath())), Snackbar.LENGTH_SHORT).show(); finish(); } catch (java.io.IOException e) { e.printStackTrace(); android.support.design.widget.Snackbar.make(view, (\"Error writing to \" + (newOffer.getPath())), Snackbar.LENGTH_SHORT).show(); } return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6383/buggy-version/app.src.main.java.com.barterbayucsb.barterbay.PostActivity.java", "BodyUseAPI": [], "Fixed commit": "02cdf64b60b26b87cbb511de2cdafea4f9e804cb", "Url": "https://api.github.com/repos/davidtsu/BarterBayUCSB", "Date": "2017-03-16T21:41:26Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((offset + count) > (cdata.length())) { count = (cdata.length()) - offset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1571/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": ["org.exist.util.XMLString.length()"], "Fixed commit": "49ec3d1387aeadfd4f651a6649c621d6eb0d647c", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-07T15:20:30Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (answered) { questionRepository.updateAnswered(lQuestionId, answered); }else { boolean stayAnswered = false; int count = 0; qasystem.persistence.entities.Question q = questionRepository.getOne(lQuestionId); for (qasystem.persistence.entities.Answer a : q.getAnswers()) { if (a.isAccepted()) { count++; } if (count == 2) { stayAnswered = true; break; } } questionRepository.updateAnswered(lQuestionId, stayAnswered); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2057/buggy-version/QAProject.Server.src.main.java.qasystem.application.service.QuestionService.java", "BodyUseAPI": ["qasystem.persistence.repositories.QuestionRepository.updateAnswered(java.lang.Long,boolean)"], "Fixed commit": "27706a888128cc6e6187ee86eb0f649da8a50664", "Url": "https://api.github.com/repos/KarlSeb/WebEng", "Date": "2017-07-15T12:17:29Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getItem().getType()) == (org.bukkit.Material.MUSHROOM_SOUP)) { if ((ml.ZeroDown.ZeroKits.Events.ConfigManager.getMainConfig().getBoolean(\"Enable Soup Signs\")) == true) { e.getPlayer().setHealth(((e.getPlayer().getHealth()) + 6.0)); e.getItem().setType(Material.BOWL); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4693/buggy-version/src.main.java.ml.ZeroDown.ZeroKits.Events.PlayerInteract.java", "BodyUseAPI": ["e.getPlayer().getHealth()", "e.getPlayer().setHealth(((e.getPlayer().getHealth()) + 6.0))", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.getItem()", "e.getItem().setType(Material.BOWL)"], "Fixed commit": "e8353079a9c11c20186d271051109f5b340ad8f9", "Url": "https://api.github.com/repos/justincenteno99/ZeroKits", "Date": "2016-06-16T01:15:01Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.mabako.steamgifts.fragments.GiveawayDetailFragment.parent) instanceof net.mabako.steamgifts.activities.MainActivity) { ((net.mabako.steamgifts.activities.MainActivity) (net.mabako.steamgifts.fragments.GiveawayDetailFragment.parent)).onUpdateGiveawayStatus(giveaway.getGiveawayId(), extras.isEntered()); }else { android.util.Log.d(net.mabako.steamgifts.fragments.GiveawayDetailFragment.TAG, \"No parent giveaway to update status\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5439/buggy-version/app.src.main.java.net.mabako.steamgifts.fragments.GiveawayDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "dfd0e264d5807611fdcf316b96804a54c9ad6a6f", "Url": "https://api.github.com/repos/SteamGifts/SteamGifts", "Date": "2016-01-02T14:29:23Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_bleDeviceList.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7312/buggy-version/app.src.main.java.nl.dobots.bluenetexample.MainActivityService.java", "BodyUseAPI": [], "Fixed commit": "a39061fbaad70729f0066027473144c09ba2f2cb", "Url": "https://api.github.com/repos/crownstone/bluenet-example-android", "Date": "2016-10-06T16:09:01Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JColorChooser.showDialog(ShapeDriver,java.lang.String,java.awt.Color)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(color.equals(getBackground()))) { setBackground(color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/933/buggy-version/ShapeDriver.java", "BodyUseAPI": ["ShapeDriver.setBackground(java.awt.Color)"], "Fixed commit": "0aa1ea56c94ad490bd9b1ea03578ae10fe46898f", "Url": "https://api.github.com/repos/aykim17/Moving-Shapes", "Date": "2017-04-03T01:26:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (content.contains(\"class=\\\"ob-post-tag\\\"\")) { content = content.replaceAll(\"\\\\<(\\\\w+)[^\\\\>]*?\\\\>\\\\<(\\\\w+).*?class=\\\"ob-post-tag[^\\\\>]*?\\\\>(.*?)\\\\<\\\\/\\\\2\\\\>\\\\<\\\\/\\\\1\\\\>\", \"[tag:$3]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3600/buggy-version/src.chat.events.ChatEvent.java", "BodyUseAPI": [], "Fixed commit": "55c748e83279c72409c0c3b94e1bfe4997ef3a82", "Url": "https://api.github.com/repos/Jenna3715/ChatBot", "Date": "2017-08-10T22:16:17Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((declaringType instanceof org.codehaus.groovy.ast.InnerClassNode) && (((declaringType.getModifiers()) & (org.codehaus.groovy.ast.ClassNode.ACC_STATIC)) == 0)) { org.codehaus.groovy.ast.ASTNode declaration = findDeclaration(name, ((org.codehaus.groovy.ast.InnerClassNode) (declaringType)).getOuterClass(), isLhsExpression, isStaticExpression, directFieldAccess, methodCallArgumentTypes); if (declaration != null) { return declaration; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8117/buggy-version/base.org.eclipse.jdt.groovy.core.src.org.eclipse.jdt.groovy.search.SimpleTypeLookup.java", "BodyUseAPI": [], "Fixed commit": "70aee2b0229bc58e4b8a7a38098baa99fd173410", "Url": "https://api.github.com/repos/groovy/groovy-eclipse", "Date": "2017-11-10T05:02:08Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(songsMap.isEmpty())) util.FileManager.saveSongMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4359/buggy-version/src.util.window.MusicDialog.java", "BodyUseAPI": [], "Fixed commit": "9c94954f50c89fe7f7ae0e0ab1c0b7ce476b9192", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-12-09T16:18:13Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeDecimals < 0.75) { if (attack) { com.base.engine.Vector2f lineStart = new com.base.engine.Vector2f(transform.getTranslation().getX(), transform.getTranslation().getZ()); com.base.engine.Vector2f castDirection = new com.base.engine.Vector2f(orientation.getX(), orientation.getZ()).rotate((((random.nextFloat()) - 0.5F) * 10.0F)); com.base.engine.Vector2f lineEnd = lineStart.add(castDirection.multiply(com.base.engine.Enemy.SHOOT_DISTANCE)); com.base.engine.Vector2f collision = com.base.engine.Game.getLevel().checkCollisionOfBullet(lineStart, lineEnd); com.base.engine.Vector2f playerIntersectVector = com.base.engine.Game.getLevel().lineIntersectRect(lineStart, lineEnd, new com.base.engine.Vector2f(com.base.engine.Transform.getCamera().getPos().getX(), com.base.engine.Transform.getCamera().getPos().getZ()), new com.base.engine.Vector2f(0.2F, 0.2F)); if ((playerIntersectVector != null) && ((collision == null) || ((playerIntersectVector.subtract(lineStart).length()) < (collision.subtract(lineStart).length())))) { java.lang.System.out.println(\"Hit player\"); } attack = false; } }else { state = com.base.engine.Enemy.STATE_CHASE; attack = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1038/buggy-version/src.com.base.engine.Enemy.java", "BodyUseAPI": [], "Fixed commit": "052b0dfdd7d4d8db35259d23cd230ba09304bc48", "Url": "https://api.github.com/repos/MilindNilekani/LWJGLMilind", "Date": "2016-11-07T18:07:14Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checker)) { android.widget.Toast.makeText(getApplicationContext(), getErrorMessage(ID_ALREADY_EXIST), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/378/buggy-version/app.src.main.java.com.jerry.notes.Activities.Signup.java", "BodyUseAPI": [], "Fixed commit": "44b22a67e39a208f41f8084c5ddee3969f8f30c5", "Url": "https://api.github.com/repos/JerryJin93/Notes", "Date": "2017-10-02T10:07:59Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isNew) { newEntitiesPersistant = org.rapla.gui.internal.edit.SaveUndo.getClientFacade().getPersistant(newEntities); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4521/buggy-version/src.org.rapla.gui.internal.edit.SaveUndo.java", "BodyUseAPI": [], "Fixed commit": "63b9c0452bbec9ad7c8f9460ee8fbda18e4782d9", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2016-02-29T08:42:57Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.isMemberClass()) && (!(java.lang.reflect.Modifier.isStatic(c.getModifiers())))) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"%s must be static if it's a member class.\", c.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3400/buggy-version/src.com.microsoft.azure.documentdb.JsonSerializable.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "java.lang.Class<T>.getName()"], "Fixed commit": "b3b860e9ff5a0fd1b454187542afa5de761646ec", "Url": "https://api.github.com/repos/shipunyc/azure-documentdb-java", "Date": "2015-05-07T23:32:59Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(order.equals(\"employeeName.lastName\"))) { projectionList.add(org.hibernate.criterion.Projections.property(order)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2234/buggy-version/Core.dao.src.main.java.com.exist.employee.Dao.java", "BodyUseAPI": ["org.hibernate.criterion.Projections.property(java.lang.String)", "org.hibernate.criterion.ProjectionList.add(org.hibernate.criterion.Projections.property(order))"], "Fixed commit": "851a14ddeb23acfcc3861f6aa7e84e285288c1be", "Url": "https://api.github.com/repos/silentdevil/Employee_Servlet", "Date": "2017-05-11T00:41:24Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj.length) > 2) table.addColumn(((obj[2]) + \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2234/buggy-version/App.src.main.java.com.exist.employee.IndexScreenImpl.java", "BodyUseAPI": ["com.exist.employee.Table.addColumn(java.lang.String)"], "Fixed commit": "851a14ddeb23acfcc3861f6aa7e84e285288c1be", "Url": "https://api.github.com/repos/silentdevil/Employee_Servlet", "Date": "2017-05-11T00:41:24Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (metadataId > 0) throw new java.lang.IllegalStateException((\"Invalid metadata entry id \" + metadataId));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3482/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.wal.OAtomicUnitEndRecord.java", "BodyUseAPI": [], "Fixed commit": "4e9b94a979c63bb7969abcd2c1cc619189a36eda", "Url": "https://api.github.com/repos/matanshukry/orientdb", "Date": "2016-01-28T10:56:17Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activity.isFinishing()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1984/buggy-version/app.src.main.java.com.erakk.lnreader.UIHelper.java", "BodyUseAPI": [], "Fixed commit": "cce5cd1359fc62f365d88cc4ec85d24de0bea047", "Url": "https://api.github.com/repos/freedomofkeima/LNReader-Android", "Date": "2015-03-24T11:28:32Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((MainActivity.nextEventindex) + 1) < (MainActivity.TimelineList.size())) { if ((MainActivity.TimelineList.get(((MainActivity.nextEventindex) + 1)).getName()) != \"\") { txtuntilnext.setText(((MainActivity.TimelineList.get(((MainActivity.nextEventindex) + 1)).getName()) + \" starts in\")); }else { txtuntilnext.setText(\"Next event starts in\"); } }else { txtuntilnext.setText(\"Next event starts in\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8693/buggy-version/mobile.src.main.java.com.jalee.bbqbuddy.SmartTimer.java", "BodyUseAPI": ["android.widget.TextView.setText(((MainActivity.TimelineList.get(((MainActivity.nextEventindex) + 1)).getName()) + \" starts in\"))", "MainActivity.TimelineList.get(((MainActivity.nextEventindex) + 1)).getName()", "MainActivity.TimelineList.get(((MainActivity.nextEventindex) + 1))", "MainActivity.TimelineList.get(((MainActivity.nextEventindex) + 1)).getName()", "MainActivity.TimelineList.get(((MainActivity.nextEventindex) + 1))"], "Fixed commit": "f0cf7747d3f97d85de0d1413d32e13e70b23c04d", "Url": "https://api.github.com/repos/soulroyale/Bbq2016Ap", "Date": "2016-02-19T06:22:04Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!started) { token = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8201/buggy-version/src.main.java.com.inspur.da.dsw.controller.UserInfoController.java", "BodyUseAPI": [], "Fixed commit": "be58ebceff84f3196ef16ecddd2bafccb375dbd0", "Url": "https://api.github.com/repos/xuande/idsw", "Date": "2017-12-19T08:13:02Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filter) != null) { scan.setFilter(filter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2392/buggy-version/sandbox.prototype.hbase-scanner.src.main.java.org.apache.hadoop.hbase.regionserver.HBaseClientScanner.java", "BodyUseAPI": [], "Fixed commit": "33703b85312608fc0a6b515745ac4f30e47a3aec", "Url": "https://api.github.com/repos/XingCloud/incubator-drill", "Date": "2013-09-09T06:06:43Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x_pos < 0) || (y_pos < 0)) || (x_pos >= (map_grid_[0].length))) || (y_pos >= (map_grid_.length))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7837/buggy-version/src.src.model.Map.java", "BodyUseAPI": [], "Fixed commit": "4e8a7186df1e6458845dc66f2c50137a76c02173", "Url": "https://api.github.com/repos/JohnReedLOL/Nineteen_Characters", "Date": "2015-02-12T23:30:17Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCellTextureM) == null) mCellTextureM = new java.util.TreeMap[com.luzi82.chitanda.game.ui.GameScreen.LAYER_COUNT];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4065/buggy-version/Chitanda.src.com.luzi82.chitanda.game.ui.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "e1ea92b5504cb48bbf5ca88d06a503402ce471eb", "Url": "https://api.github.com/repos/luzi82/Chitanda", "Date": "2012-12-01T03:09:57Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCellTextureV) == null) mCellTextureV = new com.luzi82.chitanda.game.ui.GameScreen.CellTexture[com.luzi82.chitanda.game.ui.GameScreen.LAYER_COUNT][];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4065/buggy-version/Chitanda.src.com.luzi82.chitanda.game.ui.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "e1ea92b5504cb48bbf5ca88d06a503402ce471eb", "Url": "https://api.github.com/repos/luzi82/Chitanda", "Date": "2012-12-01T03:09:57Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transformedColors == null) return new transforms.LEGOColor.CountingLEGOColor[]{ };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4600/buggy-version/src.transforms.BufferedLEGOColorTransform.java", "BodyUseAPI": [], "Fixed commit": "33b3bea7bdd151d850c23369706a1f79dec9af39", "Url": "https://api.github.com/repos/LasseD/brickgraphics", "Date": "2015-01-04T18:58:35Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((code.length()) > 0) { char c = code.charAt(0); return (c >= '0') && (c <= '9'); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8826/buggy-version/StashCache.app.src.main.java.com.geekeclectic.android.stashcache.StashStringCodeConvert.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "7dacd848b0dd28047c1cffe7bcd998b61680356b", "Url": "https://api.github.com/repos/sylkai/stash_cache", "Date": "2015-07-22T21:14:18Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myGrid) drawGrid(pen);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3932/buggy-version/src.frontEnd.TurtleView.java", "BodyUseAPI": [], "Fixed commit": "bced1e0d3b72fcf4cd9798bb18797964402e7863", "Url": "https://api.github.com/repos/dannygoodman210/SLogoTeam1", "Date": "2013-03-25T20:54:59Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (r0.getRole().equals(r1.getRole())) { return r0.getName().compareTo(r1.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4933/buggy-version/src.main.java.org.apache.aurora.scheduler.configuration.Resources.java", "BodyUseAPI": ["org.apache.aurora.scheduler.mesos.ResourceWrapper.getName()", "org.apache.aurora.scheduler.mesos.ResourceWrapper.getName()", "r0.getName().compareTo(r1.getName())"], "Fixed commit": "a84c9d7d5149f800aab0327bf37405f93054bc83", "Url": "https://api.github.com/repos/zhanglong2015/incubator-aurora", "Date": "2015-02-12T05:47:53Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (model != null) setCategoryColorBox(); else colorBox.setSelectedIndex(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2208/buggy-version/TaskManager.src.main.java.edu.wpi.cs.wpisuitetng.modules.taskmanager.view.tab.NewTaskTab.java", "BodyUseAPI": [], "Fixed commit": "25a1b59a3b79042e9ba9713871a284516efaa785", "Url": "https://api.github.com/repos/dcpounds/wpi-suite", "Date": "2014-12-12T03:30:18Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.matshofman.saxrssreader.RssFeed.getRssItems()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((articlePos) >= (items.size())) { articlePos = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2971/buggy-version/src.com.rollonapp.rollon.activities.RssFeedReaderActivity.java", "BodyUseAPI": [], "Fixed commit": "f75a2497c08718e307fb0bc71490bf34a3965226", "Url": "https://api.github.com/repos/Rollon/Rollon", "Date": "2013-03-15T22:49:13Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((installmentsFrequency.getValue()) == null) { installmentsFrequency.setRawValue(InstallmentsFrequency.periodical); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2072/buggy-version/src.main.java.org.iabako.client.ui.layout.widget.installment.InstallmentsDefinitionForm.java", "BodyUseAPI": ["org.iabako.client.ui.layout.widget.installment.RadioButtonList.setRawValue(InstallmentsFrequency.periodical)"], "Fixed commit": "5073b8c4a3ac6200544eccabb21207bb8ed4d5c2", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2016-09-26T14:11:26Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.length) == 3) { double ratioTrain = java.lang.Double.parseDouble(data[1]); double ratioValid = java.lang.Double.parseDouble(data[2]); double[] ratios = new double[]{ ratioTrain, ratioValid }; mltk.core.Instances[] datasets = mltk.core.processor.InstancesSplitter.split(instances, opts.attToStrafity, ratios); mltk.core.io.InstancesWriter.write(datasets[0], ((((opts.outputDirPath) + (java.io.File.separator)) + prefix) + \".attr\"), ((((opts.outputDirPath) + (java.io.File.separator)) + prefix) + \".train\")); mltk.core.io.InstancesWriter.write(datasets[1], ((((opts.outputDirPath) + (java.io.File.separator)) + prefix) + \".valid\")); }else if ((data.length) == 4) { double ratioTrain = java.lang.Double.parseDouble(data[1]); double ratioValid = java.lang.Double.parseDouble(data[2]); double ratioTest = java.lang.Double.parseDouble(data[3]); double[] ratios = new double[]{ ratioTrain, ratioValid, ratioTest }; mltk.core.Instances[] datasets = mltk.core.processor.InstancesSplitter.split(instances, opts.attToStrafity, ratios); mltk.core.io.InstancesWriter.write(datasets[0], ((((opts.outputDirPath) + (java.io.File.separator)) + prefix) + \".attr\"), ((((opts.outputDirPath) + (java.io.File.separator)) + prefix) + \".train\")); mltk.core.io.InstancesWriter.write(datasets[1], ((((opts.outputDirPath) + (java.io.File.separator)) + prefix) + \".valid\")); mltk.core.io.InstancesWriter.write(datasets[2], ((((opts.outputDirPath) + (java.io.File.separator)) + prefix) + \".test\")); }else { double[] ratios = new double[(data.length) - 1]; for (int i = 0; i < (ratios.length); i++) { ratios[i] = java.lang.Double.parseDouble(data[(i + 1)]); } mltk.core.Instances[] datasets = mltk.core.processor.InstancesSplitter.split(instances, opts.attToStrafity, ratios); for (int i = 0; i < (datasets.length); i++) { mltk.core.io.InstancesWriter.write(datasets[i], (((((opts.outputDirPath) + (java.io.File.separator)) + prefix) + \".data.\") + i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7019/buggy-version/src.main.java.mltk.core.processor.InstancesSplitter.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "e32e0d798f1131f49724981b26472d4e9e5c85a3", "Url": "https://api.github.com/repos/yinlou/mltk", "Date": "2017-01-23T21:29:15Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kate.app.model.BrokerInfoQuyu.getBroker_language()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((yuyan != null) && (!(\"\".equals(yuyan)))) { yuyan = yuyan.replace(\"+\", \" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5730/buggy-version/src.main.java.com.kate.app.controller.ServiceController.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "7478aad233b3d51fac975742aa08145ce4489a76", "Url": "https://api.github.com/repos/OrganizationIllegal/house20150615", "Date": "2015-08-04T07:06:44Z"},
{"Line": "=>692", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7919/buggy-version/src.igwmod.gui.GuiWiki.java", "BodyUseAPI": [], "Fixed commit": "3c52ff8aa9a7d54e94f2eaac3ea39764a1c8277d", "Url": "https://api.github.com/repos/MineMaarten/IGW-mod", "Date": "2016-01-21T12:26:38Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stack.getUnlocalizedName()) != null) { java.util.List<java.lang.String> info = igwmod.InfoSupplier.getInfo(modid, igwmod.WikiUtils.getNameFromStack(stack), true); if (info != null) igwmod.api.WikiRegistry.registerBlockAndItemPageEntry(stack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7919/buggy-version/src.igwmod.ClientProxy.java", "BodyUseAPI": ["igwmod.InfoSupplier.getInfo(java.lang.String,igwmod.WikiUtils.getNameFromStack(stack),boolean)", "igwmod.api.WikiRegistry.registerBlockAndItemPageEntry(net.minecraft.item.ItemStack)", "igwmod.WikiUtils.getNameFromStack(net.minecraft.item.ItemStack)"], "Fixed commit": "3c52ff8aa9a7d54e94f2eaac3ea39764a1c8277d", "Url": "https://api.github.com/repos/MineMaarten/IGW-mod", "Date": "2016-01-21T12:26:38Z"},
{"Line": "=>1593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sayservice.AnnotatedTTGenerator.matchedTripIds.contains(tripId)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3422/buggy-version/sayservice.it.src.main.java.sayservice.AnnotatedTTGenerator.java", "BodyUseAPI": [], "Fixed commit": "2a1e520167d1cb57c5e1eb9899708211223b80aa", "Url": "https://api.github.com/repos/nawaz2013/annotated.timetable", "Date": "2015-07-20T10:07:28Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["_context.interactiveWarGame.getCursorPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(_reachablePositions.contains(cursorPosition))) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1910/buggy-version/LinusWars.src.se.lolektivet.linus.linuswars.StateSelectMove.java", "BodyUseAPI": [], "Fixed commit": "65c3d49f7c451031d5f03752d8d58f94a31e9f6e", "Url": "https://api.github.com/repos/linusonline/LinusWars", "Date": "2015-12-28T16:18:23Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["variables[0].getValue()", "variables[1].getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (T > T0) { n = java.lang.Math.floor(((T - T0) / T1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2267/buggy-version/dynetica.expression.Pulses.java", "BodyUseAPI": ["java.lang.Math.floor(double)"], "Fixed commit": "90e2234a9837e9b82a81b3b0b1ac6ad1267b8148", "Url": "https://api.github.com/repos/youlab/dynetica", "Date": "2016-05-12T20:48:25Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params[i][0]) != (-1)) { Pi = (params[i][1]) + (((100 - (params[i][1])) * (params[i][0])) / 100); }else { Pi = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5391/buggy-version/src.BZDProblem.java", "BodyUseAPI": [], "Fixed commit": "24fd177f8668266f020595ccd9e1ee8a33b6fee3", "Url": "https://api.github.com/repos/Filter94/BZD", "Date": "2015-04-09T15:38:28Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eveningoutpost.dexdrip.Models.BgReading.lastNoSenssor()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bgReading != null) { double slope = ((2 * (bgReading.a)) * ((new java.util.Date().getTime()) + (com.eveningoutpost.dexdrip.Models.BgReading.BESTOFFSET))) + (bgReading.b); android.util.Log.w(com.eveningoutpost.dexdrip.Models.BgReading.TAG, (\"ESTIMATE SLOPE\" + slope)); return slope; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5826/buggy-version/app.src.main.java.com.eveningoutpost.dexdrip.Models.BgReading.java", "BodyUseAPI": [], "Fixed commit": "41fa86fc9e9b36ec01468e9a16475de2a6fc5096", "Url": "https://api.github.com/repos/StephenBlackWasAlreadyTaken/xDrip-Experimental", "Date": "2015-05-09T14:38:34Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((gA != null) && ((gA.checkSpace(board, space)) != (EngineValues.EMPTY))) || ((gS.checkSpace(board, space)) != (EngineValues.EMPTY))) { throw new engine.LocalBoardSpaceAlreadyOccupiedException(space, p, board); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1568/buggy-version/src.engine.GameStateAlteration.java", "BodyUseAPI": [], "Fixed commit": "e1ea98c460018bee231bae4b219f3cbaeb29e1f4", "Url": "https://api.github.com/repos/BrandonQDixon/SuperT", "Date": "2017-04-16T01:03:12Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == (EngineValues.EMPTY)) { result = player; }else { java.lang.System.out.println(\"FAIL IN GAMEALTER CHECKSPACE\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1568/buggy-version/src.engine.GameStateAlteration.java", "BodyUseAPI": [], "Fixed commit": "e1ea98c460018bee231bae4b219f3cbaeb29e1f4", "Url": "https://api.github.com/repos/BrandonQDixon/SuperT", "Date": "2017-04-16T01:03:12Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blogname == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2994/buggy-version/Qora.src.api.BlogPostResource.java", "BodyUseAPI": [], "Fixed commit": "26d305d16fe7ef928d9a2b483382ebdd8394c7af", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2015-06-17T19:16:17Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blogname == null) { return new qora.web.BlogBlackWhiteList(false, new java.util.ArrayList<java.lang.String>(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2994/buggy-version/Qora.src.qora.web.BlogBlackWhiteList.java", "BodyUseAPI": [], "Fixed commit": "26d305d16fe7ef928d9a2b483382ebdd8394c7af", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2015-06-17T19:16:17Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((people.get(i).getProfession().getStartingSkill()) != (model.Person.Skill.NONE)) { int[] permanent = new int[1]; permanent[0] = people.get(i).getProfession().getStartingSkill().ordinal(); skillSegmentedControl.setPermanent(permanent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/454/buggy-version/src.scene.PartyCreationScene.java", "BodyUseAPI": ["people.get(i).getProfession().getStartingSkill()", "people.get(i).getProfession()", "java.util.ArrayList<model.Person>.get(int)", "people.get(i).getProfession().getStartingSkill().ordinal()"], "Fixed commit": "bfa528d848242948cd8bf910afa2029e179dd11d", "Url": "https://api.github.com/repos/Tanner/Oregon-Trail", "Date": "2011-10-06T06:01:08Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1)) { gview.getViewTreeObserver().removeOnGlobalLayoutListener(this); }else { gview.getViewTreeObserver().removeGlobalOnLayoutListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1313/buggy-version/app.src.main.java.email.com.gmail.songjiapei.arimaa.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "59537361d1c6b79641209e1cb1e121c28bf74a44", "Url": "https://api.github.com/repos/jack-song/Arimaa", "Date": "2015-04-16T04:57:08Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lineOffset) == (line.length())) { if ((lineNumber) == ((lines.size()) - 1)) { throw new com.uci.cs241.pl241.frontend.PLEndOfFileException(); } line = lines.get((++(lineNumber))); lineOffset = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3293/buggy-version/project.src.com.uci.cs241.pl241.frontend.PLTokenizer.java", "BodyUseAPI": [], "Fixed commit": "31be8eba21732f869a9621e9902a2f2511cb9de5", "Url": "https://api.github.com/repos/chris-wood/PL241-Compiler", "Date": "2014-01-12T20:43:37Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.lang.Character.isDigit(nextChar)) { token.append(nextChar); nextChar = line.charAt(((lineOffset)++)); while (java.lang.Character.isDigit(nextChar)) { token.append(nextChar); nextChar = line.charAt(((lineOffset)++)); } }else if (java.lang.Character.isLetter(nextChar)) { token.append(nextChar); nextChar = line.charAt(((lineOffset)++)); while ((java.lang.Character.isDigit(nextChar)) || (java.lang.Character.isLetter(nextChar))) { token.append(nextChar); nextChar = line.charAt(((lineOffset)++)); } }else { token.append(nextChar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3293/buggy-version/project.src.com.uci.cs241.pl241.frontend.PLTokenizer.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)", "java.lang.Character.isLetter(char)"], "Fixed commit": "31be8eba21732f869a9621e9902a2f2511cb9de5", "Url": "https://api.github.com/repos/chris-wood/PL241-Compiler", "Date": "2014-01-12T20:43:37Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((freeText != null) && (!(freeText.equalsIgnoreCase(\"\")))) jsonArray.put(new org.json.JSONObject().put(Const.SEARCH_KEY, Const.FREE_TEXT).put(Const.SEARCH_VALUE, freeText));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/39/buggy-version/Leumi.src.com.pictureit.leumi.server.PostSearch.java", "BodyUseAPI": ["new org.json.JSONObject().put(Const.SEARCH_KEY, Const.FREE_TEXT).put(Const.SEARCH_VALUE,java.lang.String)", "org.json.JSONArray.put(new org.json.JSONObject().put(Const.SEARCH_KEY, Const.FREE_TEXT).put(Const.SEARCH_VALUE, freeText))"], "Fixed commit": "9ac9718a4f804212b7f1ccf564ee5de10e214804", "Url": "https://api.github.com/repos/NoamBO/Pictureit", "Date": "2014-07-17T11:30:15Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((role != null) && (!(role.equalsIgnoreCase(\"\")))) jsonArray.put(new org.json.JSONObject().put(Const.SEARCH_KEY, Const.JOB).put(Const.SEARCH_VALUE, role));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/39/buggy-version/Leumi.src.com.pictureit.leumi.server.PostSearch.java", "BodyUseAPI": ["org.json.JSONArray.put(new org.json.JSONObject().put(Const.SEARCH_KEY, Const.JOB).put(Const.SEARCH_VALUE, role))", "new org.json.JSONObject().put(Const.SEARCH_KEY, Const.JOB).put(Const.SEARCH_VALUE,java.lang.String)"], "Fixed commit": "9ac9718a4f804212b7f1ccf564ee5de10e214804", "Url": "https://api.github.com/repos/NoamBO/Pictureit", "Date": "2014-07-17T11:30:15Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((department != null) && (!(department.equalsIgnoreCase(\"\")))) jsonArray.put(new org.json.JSONObject().put(Const.SEARCH_KEY, Const.DEPARTMENT).put(Const.SEARCH_VALUE, department));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/39/buggy-version/Leumi.src.com.pictureit.leumi.server.PostSearch.java", "BodyUseAPI": ["org.json.JSONArray.put(new org.json.JSONObject().put(Const.SEARCH_KEY, Const.DEPARTMENT).put(Const.SEARCH_VALUE, department))", "new org.json.JSONObject().put(Const.SEARCH_KEY, Const.DEPARTMENT).put(Const.SEARCH_VALUE,java.lang.String)"], "Fixed commit": "9ac9718a4f804212b7f1ccf564ee5de10e214804", "Url": "https://api.github.com/repos/NoamBO/Pictureit", "Date": "2014-07-17T11:30:15Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((lastName != null) && (!(lastName.equalsIgnoreCase(\"\")))) jsonArray.put(new org.json.JSONObject().put(Const.SEARCH_KEY, Const.LAST_NAME).put(Const.SEARCH_VALUE, lastName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/39/buggy-version/Leumi.src.com.pictureit.leumi.server.PostSearch.java", "BodyUseAPI": ["new org.json.JSONObject().put(Const.SEARCH_KEY, Const.LAST_NAME).put(Const.SEARCH_VALUE,java.lang.String)", "org.json.JSONArray.put(new org.json.JSONObject().put(Const.SEARCH_KEY, Const.LAST_NAME).put(Const.SEARCH_VALUE, lastName))"], "Fixed commit": "9ac9718a4f804212b7f1ccf564ee5de10e214804", "Url": "https://api.github.com/repos/NoamBO/Pictureit", "Date": "2014-07-17T11:30:15Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((firstName != null) && (!(firstName.equalsIgnoreCase(\"\")))) jsonArray.put(new org.json.JSONObject().put(Const.SEARCH_KEY, Const.FIRST_NAME).put(Const.SEARCH_VALUE, firstName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/39/buggy-version/Leumi.src.com.pictureit.leumi.server.PostSearch.java", "BodyUseAPI": ["new org.json.JSONObject().put(Const.SEARCH_KEY, Const.FIRST_NAME).put(Const.SEARCH_VALUE,java.lang.String)", "org.json.JSONArray.put(new org.json.JSONObject().put(Const.SEARCH_KEY, Const.FIRST_NAME).put(Const.SEARCH_VALUE, firstName))"], "Fixed commit": "9ac9718a4f804212b7f1ccf564ee5de10e214804", "Url": "https://api.github.com/repos/NoamBO/Pictureit", "Date": "2014-07-17T11:30:15Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetType.equals(reference)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/757/buggy-version/src.main.java.spoon.reflect.visitor.ImportScannerImpl.java", "BodyUseAPI": [], "Fixed commit": "de2a768053311eef9f2dca54c9b43957d73dd4c5", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2017-12-07T10:30:23Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getConfig().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(\"false\".equalsIgnoreCase(editWarp))) { if (!(\"true\".equalsIgnoreCase(editWarp))) { me.Batsed.WorldTp.Config.WarpUp(spawnName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/578/buggy-version/src.me.Batsed.WorldTp.WorldTp.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "eb67ed6d368dd37e90d842a65aa3d12c1aa04423", "Url": "https://api.github.com/repos/Batsed/WorldTp", "Date": "2013-07-11T12:50:14Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getConfig().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(\"true\".equalsIgnoreCase(editWarp))) { if (!(\"false\".equalsIgnoreCase(editWarp))) { me.Batsed.WorldTp.Config.WarpUp(spawnName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/578/buggy-version/src.me.Batsed.WorldTp.WorldTp.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "eb67ed6d368dd37e90d842a65aa3d12c1aa04423", "Url": "https://api.github.com/repos/Batsed/WorldTp", "Date": "2013-07-11T12:50:14Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (alignmentY > 1.0F) { this.alignmentY = 1.0F; }else { this.alignmentY = (alignmentY < 0.0F) ? 0.0F : alignmentY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/446/buggy-version/src.main.java.org.sonarlint.intellij.util.CompoundIcon.java", "BodyUseAPI": [], "Fixed commit": "dfe83ac34d79b74d28ddc4955aa3e689f6d2eac1", "Url": "https://api.github.com/repos/SonarSource/sonarlint-intellij", "Date": "2017-05-23T14:17:48Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (alignmentX > 1.0F) { this.alignmentX = 1.0F; }else { this.alignmentX = (alignmentX < 0.0F) ? 0.0F : alignmentX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/446/buggy-version/src.main.java.org.sonarlint.intellij.util.CompoundIcon.java", "BodyUseAPI": [], "Fixed commit": "dfe83ac34d79b74d28ddc4955aa3e689f6d2eac1", "Url": "https://api.github.com/repos/SonarSource/sonarlint-intellij", "Date": "2017-05-23T14:17:48Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bsChecker.ErrorPassiveVoice.tag(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tags[j].equals(\"VBN\")) { errors.add(new int[]{ i, j, bsChecker.ErrorPassiveVoice.ERROR_NUMBER }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5478/buggy-version/src.bsChecker.ErrorPassiveVoice.java", "BodyUseAPI": ["java.util.ArrayList<int[]>.add(int[])"], "Fixed commit": "3d81b72ef1c5a9788f3183df23bc14b7d67e1c4b", "Url": "https://api.github.com/repos/MXProgrammingClub/BSChecker", "Date": "2016-11-11T23:07:07Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isReference) { ++intCountReadAccesses; }else { targetExpressions.add(parent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8982/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.OnlyWritesOnParameterInspector.java", "BodyUseAPI": [], "Fixed commit": "31d168a8fe4a7a754352d5603f63301e21c37ad6", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2017-05-27T20:51:07Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((barsan.opengl.rendering.Shader.i_buff.remaining()) == 0) { logContents = new java.lang.String(barsan.opengl.rendering.Shader.b_buff.array(), 0, l); }else { logContents = new java.lang.String(barsan.opengl.rendering.Shader.b_buff.array(), 0, barsan.opengl.rendering.Shader.i_buff.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3744/buggy-version/src.barsan.opengl.rendering.Shader.java", "BodyUseAPI": ["java.nio.IntBuffer.get()"], "Fixed commit": "07f5c1c79c84be27fab38e28ea6c4f7629fa16d8", "Url": "https://api.github.com/repos/AndreiBarsan/Yeti", "Date": "2013-04-14T17:51:12Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(flushing.compareAndSet(false, true))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8289/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.msgbus.LogQueryPlugin.java", "BodyUseAPI": [], "Fixed commit": "f675345a4df1775112188f7531fcb45208914b25", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-11-26T07:05:55Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\":0\".equals(stringHostAndPort)) { return new redis.clients.jedis.HostAndPort(currentConnection.getClient().getHost(), currentConnection.getClient().getPort()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2781/buggy-version/src.main.java.redis.clients.jedis.JedisClusterConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "d846149ae16739b55cc891eba1f2455a4acc28c3", "Url": "https://api.github.com/repos/HeartSaVioR/jedis", "Date": "2014-02-05T01:34:48Z"},
{"Line": "=>812", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((demo.kolorob.kolorobdemoversion.activity.PlaceDetailsActivityNewLayout.currentCategoryID) < 1) categoryListBuildUp(1); else categoryListBuildUp(demo.kolorob.kolorobdemoversion.activity.PlaceDetailsActivityNewLayout.currentCategoryID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6519/buggy-version/app.src.main.java.demo.kolorob.kolorobdemoversion.activity.PlaceDetailsActivityNewLayout.java", "BodyUseAPI": [], "Fixed commit": "58b030c28de726c29a1d0a4f6f49a58a5be444cc", "Url": "https://api.github.com/repos/Kolorob/Kolorob", "Date": "2016-07-23T11:36:10Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dest) == null) dest = source;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3065/buggy-version/src.main.java.dbshadow.DbShadowOpt.java", "BodyUseAPI": [], "Fixed commit": "fe6a6f8478c6fb8fa2babf3cce10cad515e1f12d", "Url": "https://api.github.com/repos/applitect/DbShadow", "Date": "2017-02-15T20:54:35Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dest) == null) { java.lang.System.err.println(\"destination tablename must be set\"); throw new dbshadow.exception.IncompleteArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3065/buggy-version/src.main.java.dbshadow.DbShadowOpt.java", "BodyUseAPI": [], "Fixed commit": "fe6a6f8478c6fb8fa2babf3cce10cad515e1f12d", "Url": "https://api.github.com/repos/applitect/DbShadow", "Date": "2017-02-15T20:54:35Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null == (java.lang.System.getProperty(\"RP_LOG_DIR\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6557/buggy-version/src.main.java.fr.cines.eudat.log.Log.java", "BodyUseAPI": [], "Fixed commit": "ae3f638eac8d4de9d2e6e81dd5fa5b9e4bd28e39", "Url": "https://api.github.com/repos/ufal/lindat-B2SAFE-repository-package", "Date": "2015-07-16T20:41:43Z"},
{"Line": "=>992", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapLayers.getLocationLayer()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5547/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "3a99f49053f62fd31163950ce235cf1ebdda58a3", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2012-09-29T14:19:00Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((column.getValue()) != null) { value = column.getValue().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8801/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.sql.Table.java", "BodyUseAPI": ["column.getValue().toString()", "com.Ben12345rocks.AdvancedCore.sql.Column.getValue()"], "Fixed commit": "932bc639f0229d548ff61fcab819a2f6c9a987aa", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-09-26T00:05:52Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mode) == (ch.admin.vbs.cube.core.impl.CubeCore.Mode.SESSION)) { ch.admin.vbs.cube.core.impl.CubeCore.LOG.debug(((\"notifyConnectionState(\" + state) + \"]\")); clientFacade.notifyConnectionStateUpdate(state); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5739/buggy-version/cube-client-core.src.main.java.ch.admin.vbs.cube.core.impl.CubeCore.java", "BodyUseAPI": [], "Fixed commit": "80326abd6dccc22b3e25807d24f8ec67a39704ec", "Url": "https://api.github.com/repos/jonosterman/cube", "Date": "2011-11-10T14:29:00Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getInput().charAt(((getInput().length()) - 1))) == '0') setInput(getInput().substring(0, ((getInput().length()) - 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1849/buggy-version/src.us.loadingpleasewait.pee.Syllable.java", "BodyUseAPI": [], "Fixed commit": "2556fb1f73cd142adb374e8dcaf8d32cfa436566", "Url": "https://api.github.com/repos/KIllinPleaseWait/PinyinExtensibleEditor", "Date": "2014-12-12T02:14:45Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Modifier.isPrivate(de.getField().getModifiers())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isPrivate) { buildString(\" if (_$$_t.%s == null) {\\n\", de.getName()); }else { buildString(\" if (%s.readPrivateField(_$$_t, %s.class, \\\"%s\\\") == null) {\\n\", org.msgpack.template.builder.DefaultBuildContext.class.getName(), de.getField().getDeclaringClass().getName(), de.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/272/buggy-version/src.main.java.org.msgpack.template.builder.DefaultBuildContext.java", "BodyUseAPI": [], "Fixed commit": "432f15ba95ef83e3658e6cbdeb96e584f0cf5131", "Url": "https://api.github.com/repos/kjim/msgpack-java", "Date": "2011-11-02T10:53:45Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wheeloffortune.game.Game.getLogic().hasGuessedPhrase()) { wheeloffortune.game.Game.getLogic().chooseNewPhrase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5368/buggy-version/src.wheeloffortune.gui.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "5b0d2d24105f8e2572d817dd61626cf5acf2fd95", "Url": "https://api.github.com/repos/Sudlow/WheelOfFortune", "Date": "2016-11-08T13:52:55Z"},
{"Line": "=>1030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cn.jzvd.JZVideoPlayerManager.getCurrentJzvd().currentState) == (cn.jzvd.JZVideoPlayer.CURRENT_STATE_PAUSE)) { cn.jzvd.JZVideoPlayer.releaseAllVideos(); }else { android.util.Log.e(cn.jzvd.JZVideoPlayer.TAG, \"onScroll: out screen\"); cn.jzvd.JZVideoPlayerManager.getCurrentJzvd().startWindowTiny(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3707/buggy-version/jiaozivideoplayer.src.main.java.cn.jzvd.JZVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "1ff6dba8d25eb6912240610e2303f1e48d7e6640", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2017-11-04T09:11:50Z"},
{"Line": "=>1069", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.jzvd.JZVideoPlayerManager.getCurrentJzvd()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((android.view.ViewGroup) (view)).indexOfChild(videoPlayer)) != (-1)) { if ((videoPlayer.currentState) == (cn.jzvd.JZVideoPlayer.CURRENT_STATE_PAUSE)) { cn.jzvd.JZVideoPlayer.releaseAllVideos(); }else { videoPlayer.startWindowTiny(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3707/buggy-version/jiaozivideoplayer.src.main.java.cn.jzvd.JZVideoPlayer.java", "BodyUseAPI": ["cn.jzvd.JZVideoPlayer.startWindowTiny()"], "Fixed commit": "1ff6dba8d25eb6912240610e2303f1e48d7e6640", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2017-11-04T09:11:50Z"},
{"Line": "=>722", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i5 == 2) { return \"plagal\"; }else { return \"imperfect\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3264/buggy-version/src.EarTrainer.Controllers.JMMusicCreator.java", "BodyUseAPI": [], "Fixed commit": "c79feb8c94b358cd6e38c5355bd4d36e2596107c", "Url": "https://api.github.com/repos/tnoel999888/ear-trainer", "Date": "2017-04-28T18:39:10Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(drone.isAccelerating())) pneumaticCraft.lib.Log.info(\"Exit 3\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5441/buggy-version/src.pneumaticCraft.common.ai.DroneGoToChargingStation.java", "BodyUseAPI": [], "Fixed commit": "b59637fe4c16ab936695342bcc526077fbddcf2f", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-09-01T21:44:59Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isExecuting)) pneumaticCraft.lib.Log.info(\"Exit 2\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5441/buggy-version/src.pneumaticCraft.common.ai.DroneGoToChargingStation.java", "BodyUseAPI": [], "Fixed commit": "b59637fe4c16ab936695342bcc526077fbddcf2f", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-09-01T21:44:59Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.cast.CastDevice.getDeviceId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (services.containsKey(uuid)) { com.connectsdk.service.config.ServiceDescription serviceDescription = services.get(uuid); for (com.connectsdk.discovery.DiscoveryProviderListener listener : serviceListeners) { listener.onServiceRemoved(this, serviceDescription); } services.remove(uuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/185/buggy-version/src.com.connectsdk.discovery.provider.CastDiscoveryProvider.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, com.connectsdk.service.config.ServiceDescription>.get(java.lang.String)", "java.util.concurrent.ConcurrentHashMap<java.lang.String, com.connectsdk.service.config.ServiceDescription>.remove(java.lang.String)"], "Fixed commit": "d6ae39bde3a77b28334f0fffcb7b2ba4090edd0e", "Url": "https://api.github.com/repos/jlai/Connect-SDK-Android", "Date": "2014-05-15T00:09:00Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.provider.DocumentsContract.getDocumentId(android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(id))) { try { final android.net.Uri contentUri = android.content.ContentUris.withAppendedId(android.net.Uri.parse(\"content://downloads/public_downloads\"), java.lang.Long.valueOf(id)); return com.yalantis.ucrop.util.FileUtils.getDataColumn(context, contentUri, null, null); } catch (java.lang.NumberFormatException e) { android.util.Log.i(com.yalantis.ucrop.util.FileUtils.TAG, e.getMessage()); return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6000/buggy-version/ucrop.src.main.java.com.yalantis.ucrop.util.FileUtils.java", "BodyUseAPI": ["android.content.ContentUris.withAppendedId(android.net.Uri.parse(\"content://downloads/public_downloads\"),java.lang.Long)", "java.lang.Long.valueOf(java.lang.String)"], "Fixed commit": "9e2bb067631ac3bd3817c0fb55c51db3d61edfe0", "Url": "https://api.github.com/repos/Yalantis/uCrop", "Date": "2017-08-11T15:17:29Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((session.getAttribute(\"adminPrivileges\")) != null) { java.lang.Integer adminPrivileges = java.lang.Integer.parseInt(session.getAttribute(\"adminPrivileges\").toString()); if (adminPrivileges != null) { if (adminPrivileges != 1) { response.sendRedirect(\"/error/error_401.jsp\"); }else { chain.doFilter(request, resp); } }else { response.sendRedirect(\"/error/error_404.jsp\"); } }else { response.sendRedirect(\"/error/error_404.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6802/buggy-version/src.main.java.controller.RequestAdminPrivilegesFilter.java", "BodyUseAPI": ["session.getAttribute(\"adminPrivileges\").toString()", "javax.servlet.http.HttpSession.getAttribute(java.lang.String)", "java.lang.Integer.parseInt(session.getAttribute(\"adminPrivileges\").toString())"], "Fixed commit": "6a3b8cdf4d4398e6c0d5633ae4d5dc45ab15e278", "Url": "https://api.github.com/repos/AMProduction/AMNews_WEB", "Date": "2016-05-20T20:54:10Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(returnPath.substring(((returnPath.length()) - 1)).equals(\"/\"))) returnPath += \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8103/buggy-version/src.edu.stanford.nlp.coref.CorefProperties.java", "BodyUseAPI": [], "Fixed commit": "33cad1d33df445cf74a6f592b1904952a41b5c7d", "Url": "https://api.github.com/repos/stanfordnlp/CoreNLP", "Date": "2016-10-28T01:54:53Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getPatterns().size()) == 0) { this.getPatternsFromSample(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1097/buggy-version/src.main.java.fr.ufrt.bi.controllers.SearchBean.java", "BodyUseAPI": [], "Fixed commit": "47934bf7dbc0ea345849d442d59ccd91388b34c2", "Url": "https://api.github.com/repos/marianapatriciooo/BI_Seminar", "Date": "2016-06-01T13:26:35Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (old == null) { throw new java.lang.IllegalStateException(jetbrick.template.Errors.format(Errors.VAR_TYPE_DEFAINE_AFTER_USE, name)); }else { throw new java.lang.IllegalStateException(jetbrick.template.Errors.format(Errors.VAR_TYPE_REDEFINE, name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9091/buggy-version/jetbrick-template-core.src.main.java.jetbrick.template.parser.ParserContext.java", "BodyUseAPI": [], "Fixed commit": "5cfdbf78cd2e45d8054c90464b33151a2af4086f", "Url": "https://api.github.com/repos/subchen/jetbrick-template-2x", "Date": "2014-10-27T08:26:54Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mSignIn) == null) { mSignIn = new org.tweetalib.android.TwitterSignIn(); initSignIn(consumerKey, consumerSecret, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8775/buggy-version/android.libraries.SocialNetLib.src.org.socialnetlib.android.SocialNetApi.java", "BodyUseAPI": [], "Fixed commit": "0a4219e5c3c6b01df66e413ba2578eb97a00c207", "Url": "https://api.github.com/repos/chrislacy/TweetLanes", "Date": "2013-03-24T15:49:34Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (element != null) { return org.jetbrains.plugins.groovy.springloaded.SpringLoadedPositionManager.getClassNameForJvm(((com.intellij.psi.PsiClass) (element))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2777/buggy-version/plugins.groovy.src.org.jetbrains.plugins.groovy.springloaded.SpringLoadedPositionManager.java", "BodyUseAPI": [], "Fixed commit": "778380cdc3f446330e57b18689164f8c6cb6b6da", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2013-11-14T15:33:59Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (version.contains(\"IbisServiceDispatcher 1.3\")) throw new nl.nn.adapterframework.core.SenderException(\"IBIS-ServiceDispatcher out of date! Please update to version 1.4 or higher\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7544/buggy-version/core.src.main.java.nl.nn.adapterframework.senders.IbisJavaSender.java", "BodyUseAPI": [], "Fixed commit": "9227fd683b4302e20c2b3044dda1f4f33479f214", "Url": "https://api.github.com/repos/gvanbrakel/iaf", "Date": "2017-08-16T15:35:16Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((anyColumnField) != null) { com.ebay.xcelite.annotations.AnyColumn anyColumnAnno = anyColumnField.getAnnotation(com.ebay.xcelite.annotations.AnyColumn.class); ignoreCols = com.google.common.collect.Sets.newHashSet(anyColumnAnno.ignoreCols()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/843/buggy-version/src.main.java.com.ebay.xcelite.reader.BeanSheetReader.java", "BodyUseAPI": [], "Fixed commit": "dc7011b03830c43bbb6fbd6b5e9d286568862293", "Url": "https://api.github.com/repos/sanshi0518/xcelite", "Date": "2014-11-07T02:14:02Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getFieldValues()) != null) { parameters.putAll(this.getFieldValues()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1273/buggy-version/commcare.src.main.java.org.motechproject.commcare.events.CaseEvent.java", "BodyUseAPI": [], "Fixed commit": "12f62add500a9a8b3182a3836159c95e2d834517", "Url": "https://api.github.com/repos/motech/modules", "Date": "2017-02-15T13:44:34Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.modcrafting.diablodrops.listeners.SocketListener.findColor(is.getItemMeta().getDisplayName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (list.contains((fuelColor + \"(Socket)\"))) { if (plugin.getItemAPI().isArmor(tool.getType())) { list.remove((fuelColor + \"(Socket)\")); list.add((fuelColor + (plugin.defenselore.get(plugin.getSingleRandom().nextInt(plugin.defenselore.size()))))); }else if (plugin.getItemAPI().isTool(tool.getType())) { list.remove((fuelColor + \"(Socket)\")); list.add((fuelColor + (plugin.offenselore.get(plugin.getSingleRandom().nextInt(plugin.offenselore.size()))))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5245/buggy-version/src.com.modcrafting.diablodrops.listeners.SocketListener.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add((fuelColor + (plugin.offenselore.get(plugin.getSingleRandom().nextInt(plugin.offenselore.size())))))", "java.util.List<java.lang.String>.remove((fuelColor + \"(Socket)\"))", "java.util.List<java.lang.String>.remove((fuelColor + \"(Socket)\"))", "java.util.List<java.lang.String>.add((fuelColor + (plugin.defenselore.get(plugin.getSingleRandom().nextInt(plugin.defenselore.size())))))"], "Fixed commit": "da0785b737e1a11d3059c2604cc223041e5eb0b6", "Url": "https://api.github.com/repos/deathmarine/DiabloDrops", "Date": "2013-01-19T15:33:51Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.getStatus()) == (POGOProtos.Networking.Responses.CatchPokemonResponseOuterClass.CatchPokemonResponse.CatchStatus.CATCH_ERROR)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3301/buggy-version/library.src.main.java.com.pokegoapi.api.map.pokemon.CatchablePokemon.java", "BodyUseAPI": [], "Fixed commit": "d44e3e664de493757ab1ac7e5450dcccd61c7c85", "Url": "https://api.github.com/repos/Annoraaq/PokeGOAPI-Java", "Date": "2016-08-01T10:49:08Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client) != null) { client.cancelCurrentRequest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5628/buggy-version/src.sk.gista.medobs.Medobs.java", "BodyUseAPI": [], "Fixed commit": "e5e55680edfe5169237055710b267062fde61c37", "Url": "https://api.github.com/repos/mmincikova/medobs-android-client", "Date": "2011-05-23T10:53:57Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request instanceof org.springframework.web.multipart.MultipartHttpServletRequest) { java.lang.String uidMd5 = com.eweblib.util.DataEncrypt.generatePassword(com.eweblib.util.EWeblibThreadLocal.getCurrentUserId()); java.lang.String relativeFilePath = genRandomRelativePath(uidMd5); return uploadFile(request, relativeFilePath, parameterName, size, suffixes); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2780/buggy-version/src.main.java.com.eweblib.controller.AbstractController.java", "BodyUseAPI": ["com.eweblib.controller.AbstractController.uploadFile(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String,int,java.lang.String[])"], "Fixed commit": "31d60b85cec04ee9efafde96ad63ac3a7cd6b1ed", "Url": "https://api.github.com/repos/antme/_eweblib", "Date": "2015-07-31T03:05:52Z"},
{"Line": "=>939", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(this.isPaused)) && (!(this.turnIsOver))) { this.pauseGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1881/buggy-version/src.com.buzzwords.Turn.java", "BodyUseAPI": [], "Fixed commit": "4267315bc2f23dfb3925de9faed52e6ed6fb20f6", "Url": "https://api.github.com/repos/siramix/buzzwords", "Date": "2011-05-15T23:16:54Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dlobj.Override) == (mcmu.api.CompatOverride.DISABLE)) { ufd.renameTo(fild); ufd = fild; }else if ((dlobj.Override) == (mcmu.api.CompatOverride.ENABLE)) { ufd.renameTo(fil); ufd = fil; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7424/buggy-version/MCMU.src.main.java.mcmu.impl.baseService.tasks.DownloadTask.java", "BodyUseAPI": [], "Fixed commit": "7895eadf1037a89caf87180e643baea440d4b1a7", "Url": "https://api.github.com/repos/TeamEndAllReality/MCMU", "Date": "2017-09-19T18:09:51Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateCurrentTool) currentDiameter = diameter;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3417/buggy-version/src.org.cirqwizard.excellon.ExcellonParser.java", "BodyUseAPI": [], "Fixed commit": "4c8faf50715528dbc3a7a65358836eb144044960", "Url": "https://api.github.com/repos/simonsalykov/cirqwizard", "Date": "2014-01-22T15:47:17Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vJobEntity.getVresult()) != null) jobIDs.add(vJobEntity.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8357/buggy-version/src.main.java.com.volkan.Neo4jClientAsync.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.add(vJobEntity.getId())", "com.volkan.db.VJobEntity.getId()"], "Fixed commit": "651acef884fb5a93dc15daad751c44ff6bc93cdb", "Url": "https://api.github.com/repos/volkantufekci/Neo4jCSVParserHubway", "Date": "2013-02-03T23:56:37Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instr.dst) instanceof IC.CodeGeneration.Reg) { IC.CodeGeneration.Reg reg = ((IC.CodeGeneration.Reg) (instr.dst)); if (reg.name.equals(Registers.DUMMY_REG)) isDummyReg = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2094/buggy-version/src.IC.CodeGeneration.CodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "3573808e788849a81357b27e3893c5e57114a42a", "Url": "https://api.github.com/repos/Compiler2015a/PA05", "Date": "2015-03-17T16:34:14Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commandInput.getName().isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7191/buggy-version/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java", "BodyUseAPI": [], "Fixed commit": "9e9f53040ea88977df3db3eb5433d7b76a396adb", "Url": "https://api.github.com/repos/cs2103jan2015-t09-1j/main", "Date": "2015-03-11T05:26:23Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (commandInput.getName().isEmpty()) { ui.showMessage(\"Failed to add task. Please fill in the task name!\"); }else { ui.showMessage(((\"Failed to add task \\\"\" + (commandInput.getName())) + \"\\\".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7191/buggy-version/src.main.java.sg.edu.nus.cs2103t.omnitask.controller.ControllerMainImpl.java", "BodyUseAPI": ["sg.edu.nus.cs2103t.omnitask.ui.UI.showMessage(((\"Failed to add task \\\"\" + (commandInput.getName())) + \"\\\".\"))", "sg.edu.nus.cs2103t.omnitask.model.CommandInput.getName()"], "Fixed commit": "9e9f53040ea88977df3db3eb5433d7b76a396adb", "Url": "https://api.github.com/repos/cs2103jan2015-t09-1j/main", "Date": "2015-03-11T05:26:23Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((happyyoung.trashnetwork.recycle.util.GlobalInfo.user) == null) { startActivity(new android.content.Intent(this, happyyoung.trashnetwork.recycle.ui.activity.LoginActivity.class)); android.widget.Toast.makeText(this, getString(R.string.alert_login_first), Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8081/buggy-version/app.src.main.java.happyyoung.trashnetwork.recycle.ui.activity.CreditMallDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "74ee1329d849aa4f7fd8590aff67b6ea88a9b432", "Url": "https://api.github.com/repos/TrashNetwork/trashnetwork-recycle-android", "Date": "2017-07-10T06:56:05Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hu.rgai.android.messageproviders.SimpleEmailMessageProvider.getStore(hu.rgai.android.beens.EmailAccount)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((store == null) || (!(store.isConnected()))) { return new hu.rgai.android.beens.MessageListResult(emails, MessageListResult.ResultType.ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5820/buggy-version/src.hu.rgai.android.messageproviders.SimpleEmailMessageProvider.java", "BodyUseAPI": [], "Fixed commit": "ac37cb731a6524748d6e89911e43424a7aef40bc", "Url": "https://api.github.com/repos/k-kojak/yako", "Date": "2014-05-13T16:18:46Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((topicName) != null) { topicUrl = com.guguluk.sausozluk.util.Utils.dirtyUrl(getIntent().getExtras().getString(\"topicUrl\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1386/buggy-version/app.src.main.java.com.guguluk.sausozluk.activity.EntryListActivity.java", "BodyUseAPI": [], "Fixed commit": "36cb6d7d937ea6a9e170ab39096029bad5076de6", "Url": "https://api.github.com/repos/erayarslan/sau-sozluk-android", "Date": "2014-09-22T20:24:11Z"},
{"Line": "=>1318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((invocation.getTarget()) != null) { write(((invocation.getTarget().getSignature()) + '.')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3642/buggy-version/src.main.java.spoon.reflect.visitor.DefaultJavaPrettyPrinter.java", "BodyUseAPI": ["invocation.getTarget().getSignature()", "spoon.reflect.code.CtInvocation<T>.getTarget()", "spoon.reflect.visitor.DefaultJavaPrettyPrinter.write(((invocation.getTarget().getSignature()) + '.'))"], "Fixed commit": "f4fedad1e0f8ec88141ce0529451f79beb2121ae", "Url": "https://api.github.com/repos/petitpre/spoon", "Date": "2014-10-16T11:34:15Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((redirects) != null) { for (com.adobe.acs.commons.redirectmaps.models.RedirectConfigModel config : redirects) { invalidEntries.addAll(gatherEntries(config, sb)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4080/buggy-version/bundle.src.main.java.com.adobe.acs.commons.redirectmaps.models.RedirectMapModel.java", "BodyUseAPI": [], "Fixed commit": "ff3c17f4cf946feef8d8625c6532e4866b361464", "Url": "https://api.github.com/repos/klcodanr/acs-aem-commons", "Date": "2017-10-23T21:21:08Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((((weight == null) || (weight.isEmpty())) || (height == null)) || (height.isEmpty())) { request.setAttribute(\"result\", \"Please specify weight and height.\"); javax.servlet.RequestDispatcher dispatcher = request.getRequestDispatcher(redirectionPage()); dispatcher.forward(request, response); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/323/buggy-version/src.main.java.com.mycompany.app.NewServlet.java", "BodyUseAPI": [], "Fixed commit": "cd78b3d850437adba71313838c65dfb564d162d1", "Url": "https://api.github.com/repos/vitalijzad/servlet-example", "Date": "2017-02-26T20:23:59Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.block.BlockBreakEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((p.getItemInHand()) != null) { if (((((p.getItemInHand().getType().equals(Material.WOOD_SWORD)) || (p.getItemInHand().getType().equals(Material.GOLD_SWORD))) || (p.getItemInHand().getType().equals(Material.STONE_SWORD))) || (p.getItemInHand().getType().equals(Material.IRON_SWORD))) || (p.getItemInHand().getType().equals(Material.DIAMOND_SWORD))) { e.setCancelled(true); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1441/buggy-version/src.com.github.nathannr.buildmode.listener.Break.java", "BodyUseAPI": ["p.getItemInHand().getType()", "p.getItemInHand().getType()", "org.bukkit.entity.Player.getItemInHand()", "p.getItemInHand().getType().equals(Material.DIAMOND_SWORD)", "org.bukkit.entity.Player.getItemInHand()", "p.getItemInHand().getType()", "p.getItemInHand().getType().equals(Material.STONE_SWORD)", "org.bukkit.entity.Player.getItemInHand()", "p.getItemInHand().getType()", "p.getItemInHand().getType().equals(Material.GOLD_SWORD)", "p.getItemInHand().getType()", "org.bukkit.entity.Player.getItemInHand()", "p.getItemInHand().getType().equals(Material.WOOD_SWORD)", "p.getItemInHand().getType().equals(Material.IRON_SWORD)", "org.bukkit.entity.Player.getItemInHand()"], "Fixed commit": "c1770e9e80aa07bd5dadbba118afb1a93f540d1f", "Url": "https://api.github.com/repos/NathanNr/BuildMode", "Date": "2017-02-18T16:49:23Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!empty) { images = imageAdapt.getFiles(); }else { images2 = imageAdapt.getFiles2(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1249/buggy-version/Lockit.src.amazenite.lockit.OpenImages.java", "BodyUseAPI": [], "Fixed commit": "aa2805b2dd2a87d07719976780d9bc4831f14e50", "Url": "https://api.github.com/repos/maddiesolz/SeniorProjectUF13", "Date": "2013-02-05T16:54:27Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (values != null) { ctx.globalVar = new java.util.HashMap<java.lang.String, java.lang.Object>(); java.util.Map<java.lang.String, java.lang.Object> target = ctx.globalVar; for (java.util.Map.Entry<java.lang.String, java.lang.Object> entry : values.entrySet()) { target.put(entry.getKey(), entry.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4865/buggy-version/beetl-core.src.main.java.org.beetl.core.Template.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.entrySet()"], "Fixed commit": "825a416c02c584cbe3723400b3423182d812840f", "Url": "https://api.github.com/repos/javamonkey/beetl2.0", "Date": "2014-05-20T09:54:29Z"},
{"Line": "=>1719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getChildNodes()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (att.item(i).getNodeName().equals(\"type\")) { java.lang.String t = att.item(i).getAttributes().item(0).getNodeValue(); log.info((((((prev.substring(1)) + \"/\") + (e.getAttribute(\"name\"))) + \" is a \") + t)); YangType.put((((prev.substring(1)) + \"/\") + (e.getAttribute(\"name\"))), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8956/buggy-version/model-based-configurable-nat.src.main.java.org.onosproject.model.based.configurable.nat.StateListenerNew.java", "BodyUseAPI": ["org.w3c.dom.NodeList.item(int)", "org.w3c.dom.Node.getAttributes()", "org.w3c.dom.NamedNodeMap.item(int)", "org.w3c.dom.Node.getNodeValue()"], "Fixed commit": "9b0aac04111b9bd06199fb4a4f23146b340d5496", "Url": "https://api.github.com/repos/netgroup-polito/onos-applications", "Date": "2017-05-15T09:30:26Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInitialized())) { throw new java.lang.IllegalStateException(\"Cannot call getRenderSize() before initialized!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4235/buggy-version/jme3-vr.src.main.java.com.jme3.input.vr.OculusVR.java", "BodyUseAPI": [], "Fixed commit": "e8e205caeba503a0996fb14dd95daec8ff434e07", "Url": "https://api.github.com/repos/ZNiPATHn/jmonkeyengine", "Date": "2017-10-01T05:17:41Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((flushIntervalInMillis) > 0) { flushTimer = new java.util.Timer(\"WebHDFS-Flush-Timer\", true); flushTask = createFlushTask(); flushTimer.schedule(flushTask, flushIntervalInMillis, flushIntervalInMillis); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6724/buggy-version/src.main.java.org.graylog.outputs.hdfs.WebHDFSOutput.java", "BodyUseAPI": [], "Fixed commit": "9103a5ba23028c1e40b4e7e121fa07f7edaa7aae", "Url": "https://api.github.com/repos/sivasamyk/graylog-plugin-output-webhdfs", "Date": "2016-09-29T15:47:21Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flushTask) != null) { flushTask.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6724/buggy-version/src.main.java.org.graylog.outputs.hdfs.WebHDFSOutput.java", "BodyUseAPI": [], "Fixed commit": "9103a5ba23028c1e40b4e7e121fa07f7edaa7aae", "Url": "https://api.github.com/repos/sivasamyk/graylog-plugin-output-webhdfs", "Date": "2016-09-29T15:47:21Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flushTimer) != null) { flushTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6724/buggy-version/src.main.java.org.graylog.outputs.hdfs.WebHDFSOutput.java", "BodyUseAPI": [], "Fixed commit": "9103a5ba23028c1e40b4e7e121fa07f7edaa7aae", "Url": "https://api.github.com/repos/sivasamyk/graylog-plugin-output-webhdfs", "Date": "2016-09-29T15:47:21Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.LocalDate.toLocalDateTime(org.joda.time.LocalTime)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((reminderForToday.compareTo(now)) > 0) { reminderForToday = reminderForToday.plusDays(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2565/buggy-version/src.com.jtbdevelopment.rest.helpers.NextReminderCalculator.java", "BodyUseAPI": ["org.joda.time.LocalDateTime.plusDays(int)"], "Fixed commit": "98651d888a1597de57b3cd95d711483fa87c1ffc", "Url": "https://api.github.com/repos/jtbdevelopment/REST_So_I_Can_Rest", "Date": "2012-12-02T20:20:22Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inputMeta.exists()) { inputFiles.remove(inputMeta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/983/buggy-version/src.biolockj.module.BioModuleImpl.java", "BodyUseAPI": ["java.util.List<java.io.File>.remove(java.io.File)"], "Fixed commit": "ad4003f5e55e1a9ee67fa034d7f4715b69681bf5", "Url": "https://api.github.com/repos/mikesioda/BioLockJ_Dev", "Date": "2017-11-06T19:21:01Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tutorial) && (isLoaded)) && (!(isStarted))) { com.lhsalliance.aquatic.core.Main.game.startGame(); isStarted = true; }else if (((tutorial) && (isLoaded)) && (isStarted)) java.lang.System.out.println(\"Emily is right\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6807/buggy-version/Project.src.com.lhsalliance.aquatic.core.Main.java", "BodyUseAPI": [], "Fixed commit": "202c82b2dbdd49473014a88a9e8930cc4afcadf2", "Url": "https://api.github.com/repos/absorr/Aquatic-Adventure", "Date": "2015-02-17T21:43:55Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hr > 1) { alarmHr = (hr < 10) ? \"0\" + (hr - 1) : java.lang.String.valueOf((hr - 1)); }else if (hr == 1) { alarmHr = \"12\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8257/buggy-version/app.src.main.java.me.thenightmancodeth.classi.controllers.services.AlarmBootService.java", "BodyUseAPI": ["java.lang.String.valueOf(int)"], "Fixed commit": "e80735f947d2fb1eeb83ecf66436708d402308d2", "Url": "https://api.github.com/repos/TheNightmanCodeth/classi", "Date": "2017-01-20T05:33:42Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (key.equals(WebQuerySpecialField.CLASS.getName())) addClass(entry.getValue()); else if (key.equals(WebQuerySpecialField.COMPUTE_SIZE.getName())) { }else if ((key.equals(WebQuerySpecialField.FETCH.getName())) || (key.equals(WebQuerySpecialField.EXPAND.getName()))) { }else throw new java.lang.IllegalArgumentException((\"Unknown built-in name: \" + key));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5366/buggy-version/guice.hibernate.src.main.java.com.peterphi.std.guice.hibernate.webquery.impl.QCriteriaBuilder.java", "BodyUseAPI": ["java.lang.String.equals(WebQuerySpecialField.FETCH.getName())", "java.lang.String.equals(WebQuerySpecialField.COMPUTE_SIZE.getName())", "java.lang.String.equals(WebQuerySpecialField.EXPAND.getName())"], "Fixed commit": "361f963174ccb6ef93a1a8deb289f6c8b7a82e14", "Url": "https://api.github.com/repos/petergeneric/stdlib", "Date": "2015-10-19T16:06:06Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInCreativeTab(tab)) { for (org.halvors.nuclearphysics.common.item.reactor.fission.ItemUranium.EnumUranium type : org.halvors.nuclearphysics.common.item.reactor.fission.ItemUranium.EnumUranium.values()) { items.add(new net.minecraft.item.ItemStack(this, 1, type.ordinal())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6958/buggy-version/src.main.java.org.halvors.nuclearphysics.common.item.reactor.fission.ItemUranium.java", "BodyUseAPI": [], "Fixed commit": "3d20365286f1c69d50c95aef8b6f2cb2576c1d76", "Url": "https://api.github.com/repos/halvors/Nuclear-Physics", "Date": "2017-09-12T12:47:06Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInCreativeTab(tab)) { items.add(new net.minecraft.item.ItemStack(this)); items.add(new net.minecraft.item.ItemStack(this, 1, ((getMaxDamage()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6958/buggy-version/src.main.java.org.halvors.nuclearphysics.common.item.reactor.fission.ItemFissileFuel.java", "BodyUseAPI": [], "Fixed commit": "3d20365286f1c69d50c95aef8b6f2cb2576c1d76", "Url": "https://api.github.com/repos/halvors/Nuclear-Physics", "Date": "2017-09-12T12:47:06Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInCreativeTab(tab)) { for (org.halvors.nuclearphysics.common.item.particle.ItemAntimatterCell.EnumAntimatterCell type : org.halvors.nuclearphysics.common.item.particle.ItemAntimatterCell.EnumAntimatterCell.values()) { items.add(new net.minecraft.item.ItemStack(this, 1, type.ordinal())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6958/buggy-version/src.main.java.org.halvors.nuclearphysics.common.item.particle.ItemAntimatterCell.java", "BodyUseAPI": [], "Fixed commit": "3d20365286f1c69d50c95aef8b6f2cb2576c1d76", "Url": "https://api.github.com/repos/halvors/Nuclear-Physics", "Date": "2017-09-12T12:47:06Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInCreativeTab(tab)) { for (org.halvors.nuclearphysics.common.item.ItemCell.EnumCell type : org.halvors.nuclearphysics.common.item.ItemCell.EnumCell.values()) { subItems.add((type == (org.halvors.nuclearphysics.common.item.ItemCell.EnumCell.EMPTY) ? new net.minecraft.item.ItemStack(this) : org.halvors.nuclearphysics.common.utility.FluidUtility.getFilledCell(net.minecraftforge.fluids.FluidRegistry.getFluid(type.getName())))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6958/buggy-version/src.main.java.org.halvors.nuclearphysics.common.item.ItemCell.java", "BodyUseAPI": [], "Fixed commit": "3d20365286f1c69d50c95aef8b6f2cb2576c1d76", "Url": "https://api.github.com/repos/halvors/Nuclear-Physics", "Date": "2017-09-12T12:47:06Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (indexLinkedBroker != (-1)) { it.trade.android.sdk.TradeItSDK.getLinkedBrokerManager().getLinkedBrokers().remove(indexLinkedBroker); it.trade.android.sdk.TradeItSDK.getLinkedBrokerManager().getLinkedBrokers().add(indexLinkedBroker, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1658/buggy-version/tradeit-android-sdk.src.main.java.it.trade.android.sdk.model.TradeItLinkedBrokerParcelable.java", "BodyUseAPI": [], "Fixed commit": "956a5a3f581b0ec944fc6750386432aff3b53f2a", "Url": "https://api.github.com/repos/tradingticket/AndroidSDK", "Date": "2017-08-29T15:14:26Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.Spinner.getSelectedItemPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sckIndex < 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6652/buggy-version/src.main.java.net.alegen.android.netclip.ui.SendTextFragment.java", "BodyUseAPI": [], "Fixed commit": "21daf301ecd601da7982d64f3d2a18e41409d630", "Url": "https://api.github.com/repos/jacekmusial/netclip", "Date": "2016-08-13T10:39:41Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (run instanceof hudson.model.AbstractBuild) { execPattern = resolveFilePaths(((hudson.model.AbstractBuild) (run)), taskListener, execPattern); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8307/buggy-version/src.main.java.hudson.plugins.jacoco.JacocoPublisher.java", "BodyUseAPI": [], "Fixed commit": "249bd6dd1dc6023a54ce6f2e73563e92af770fa6", "Url": "https://api.github.com/repos/jenkinsci/jacoco-plugin", "Date": "2016-04-15T16:36:43Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((req.getParameter((\"select_\" + i))) != null) { java.util.ArrayList<java.lang.String> timePrefToAdd = new java.util.ArrayList<java.lang.String>(); timePrefToAdd.add(req.getParameter((\"select_\" + i))); timePrefToAdd.add(req.getParameter((\"firstTime_\" + i))); timePrefToAdd.add(req.getParameter((\"secondTime_\" + i))); timePrefs.add(timePrefToAdd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5350/buggy-version/Guestbook.src.main.java.studyR.EditProfile.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(req.getParameter((\"firstTime_\" + i)))", "java.util.ArrayList<java.lang.String>.add(req.getParameter((\"secondTime_\" + i)))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(req.getParameter((\"select_\" + i)))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "5e3226cd38457cf4f87c8872bc4df879d299b749", "Url": "https://api.github.com/repos/mvandinh/ee461l_studyR", "Date": "2017-04-20T00:51:47Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (env == null) { env = com.tmarsteel.jcli.Environment.getEnvironment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2533/buggy-version/src.com.tmarsteel.jcli.validation.configuration.XMLValidatorConfigurator.java", "BodyUseAPI": [], "Fixed commit": "2a77cb674728a51158210603ec27db6d59a11aff", "Url": "https://api.github.com/repos/tmarsteel/jcli", "Date": "2015-09-15T15:48:14Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mGoogleApiClient) != null) && (mGoogleApiClient.isConnected())) { LocationServices.FusedLocationApi.removeLocationUpdates(mGoogleApiClient, this); mGoogleApiClient.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1775/buggy-version/app.src.main.java.com.byteshaft.namaztime.fragments.Maps.java", "BodyUseAPI": ["LocationServices.FusedLocationApi.removeLocationUpdates(com.google.android.gms.common.api.GoogleApiClient,com.byteshaft.namaztime.fragments.Maps)", "com.google.android.gms.common.api.GoogleApiClient.disconnect()"], "Fixed commit": "edbf6dc50bb0bf5a62a30ec5267ac5cb340326aa", "Url": "https://api.github.com/repos/s9iper1/namaz-time", "Date": "2017-12-27T11:09:50Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.M)) { setLayerType(View.LAYER_TYPE_HARDWARE, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9007/buggy-version/app.src.main.java.com.sample.andremion.musicplayer.view.CoverView.java", "BodyUseAPI": [], "Fixed commit": "7f089b4a0d8123d548a64a25ae4d9d55c0fdabf0", "Url": "https://api.github.com/repos/avalond/Music-Player", "Date": "2016-08-18T17:36:06Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.image) == (mine)) this.deadly = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8716/buggy-version/src.game2.world.Cell.java", "BodyUseAPI": [], "Fixed commit": "2f9d2e4354728bc1b18459ca7455333ee8bc214b", "Url": "https://api.github.com/repos/nicorb/tgd-multigame", "Date": "2017-03-19T03:32:15Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((link.getContext()) != null) { ((org.apache.activemq.artemis.protocol.amqp.proton.ProtonDeliveryHandler) (link.getContext())).onFlow(link.getCredit(), link.getDrain()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4022/buggy-version/artemis-protocols.artemis-amqp-protocol.src.main.java.org.apache.activemq.artemis.protocol.amqp.proton.AMQPConnectionContext.java", "BodyUseAPI": ["org.apache.qpid.proton.engine.Link.getDrain()", "org.apache.qpid.proton.engine.Link.getContext()", "org.apache.qpid.proton.engine.Link.getCredit()", "((org.apache.activemq.artemis.protocol.amqp.proton.ProtonDeliveryHandler) (link.getContext())).onFlow(link.getCredit(),link.getDrain())"], "Fixed commit": "f957d8b1aaad5fc9b0a8ff5d6aea7665dd693fff", "Url": "https://api.github.com/repos/clebertsuconic/activemq-artemis", "Date": "2016-10-21T13:22:46Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.mobicents.servlet.sip.message.B2buaHelperImpl.B2BUA_SYSTEM_HEADERS.contains(headerName)) { java.lang.String overridenRuleStr = servCtx.getInitParameter(SipServletMessageImpl.SYS_HDR_MOD_OVERRIDE); if ((overridenRuleStr != null) && (!(AddressImpl.ModifiableRule.valueOf(overridenRuleStr).equals(ModifiableRule.Modifiable)))) { throw new java.lang.IllegalArgumentException((headerName + \" in the provided map is a system header\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4308/buggy-version/sip-servlets-impl.src.main.java.org.mobicents.servlet.sip.message.B2buaHelperImpl.java", "BodyUseAPI": [], "Fixed commit": "25e2d60e98e75cbdf8f1cca9f32c6855618d68d9", "Url": "https://api.github.com/repos/pimenas/sip-servlets", "Date": "2016-09-19T15:06:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(distribsInitialised)) { for (int m = 0; m < (nDistribs); m++) { if (m == (modelNumberInput.get().getValue())) logP = distributionsInput.get().get(m).calculateLogP(); else distributionsInput.get().get(m).calculateLogP(); } distribsInitialised = true; }else { int m = modelNumberInput.get().getValue(); logP = distributionsInput.get().get(m).calculateLogP(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3864/buggy-version/src.timsaddons.modelselection.DistributionSwitcher.java", "BodyUseAPI": [], "Fixed commit": "a420dffff3ce80cc4da25f2739f69e55727657c1", "Url": "https://api.github.com/repos/tgvaughan/TimsBEASTAddons", "Date": "2012-10-25T21:58:51Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (rid != null) return rid.findEdge(this); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3184/buggy-version/src.main.java.com.thinkaurelius.titan.graphdb.blueprints.TitanBlueprintsTransaction.java", "BodyUseAPI": ["com.thinkaurelius.titan.graphdb.relations.RelationIdentifier.findEdge(com.thinkaurelius.titan.graphdb.blueprints.TitanBlueprintsTransaction)"], "Fixed commit": "b19db1a92b8def41f105374275ee5f56e9cc6734", "Url": "https://api.github.com/repos/thinkaurelius/titan", "Date": "2012-08-16T00:02:47Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((picsNumber) % 2) == 0) { rows = (picsNumber) / 2; }else { rows = ((picsNumber) / 2) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2515/buggy-version/src.com.chimpo.easyraport.SourceCode.java", "BodyUseAPI": [], "Fixed commit": "860f9538c49757a50ffc4aba340dfc21bd3940e7", "Url": "https://api.github.com/repos/grzeprza/EasyRaport", "Date": "2015-05-30T11:24:22Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(t.getMessage().equals(\"Stream closed\"))) { that.dispatchErrorListener(t.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1717/buggy-version/lib.TCPStream.java", "BodyUseAPI": ["lib.TCPStream.dispatchErrorListener(java.lang.String)", "java.lang.Throwable.getMessage()"], "Fixed commit": "f76d23e5dfc635028df55732729f834e0e9962ea", "Url": "https://api.github.com/repos/SEGBK/lab2", "Date": "2016-09-26T23:33:35Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getTreeViewer().getTree().getTopItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (topItem != null) { java.lang.Object data = topItem.getData(); if (data instanceof com.magnetstreet.swt.beanwidget.datatreegrid.TreeNode) return ((com.magnetstreet.swt.beanwidget.datatreegrid.TreeNode) (data)).getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3540/buggy-version/swt-bean-widgets-core.src.main.java.com.magnetstreet.swt.beanwidget.datatreegrid.AbstractDataTreeGrid.java", "BodyUseAPI": ["com.magnetstreet.swt.beanwidget.datatreegrid.TreeItem.getData()"], "Fixed commit": "72513adad2fe0381fc8f7fb11dcbfc7add7d1bf6", "Url": "https://api.github.com/repos/martin1yness/swt-bean-widgets", "Date": "2011-12-07T01:27:24Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getData()) instanceof com.magnetstreet.swt.beanwidget.datatreegrid.TreeNode) { if ((((com.magnetstreet.swt.beanwidget.datatreegrid.TreeNode) (item.getData())).getValue().getClass()) == (bean.getClass())) { if ((((java.lang.Comparable) (((com.magnetstreet.swt.beanwidget.datatreegrid.TreeNode) (item.getData())).getValue())).compareTo(bean)) == 0) { getTreeViewer().getTree().setTopItem(item); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3540/buggy-version/swt-bean-widgets-core.src.main.java.com.magnetstreet.swt.beanwidget.datatreegrid.AbstractDataTreeGrid.java", "BodyUseAPI": ["((com.magnetstreet.swt.beanwidget.datatreegrid.TreeNode) (item.getData())).getValue()", "getTreeViewer().getTree().setTopItem(com.magnetstreet.swt.beanwidget.datatreegrid.TreeItem)", "((java.lang.Comparable) (((com.magnetstreet.swt.beanwidget.datatreegrid.TreeNode) (item.getData())).getValue())).compareTo(java.lang.Comparable)", "com.magnetstreet.swt.beanwidget.datatreegrid.TreeItem.getData()", "com.magnetstreet.swt.beanwidget.datatreegrid.TreeItem.getData()", "((com.magnetstreet.swt.beanwidget.datatreegrid.TreeNode) (item.getData())).getValue().getClass()", "((com.magnetstreet.swt.beanwidget.datatreegrid.TreeNode) (item.getData())).getValue()"], "Fixed commit": "72513adad2fe0381fc8f7fb11dcbfc7add7d1bf6", "Url": "https://api.github.com/repos/martin1yness/swt-bean-widgets", "Date": "2011-12-07T01:27:24Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.beans.PropertyDescriptor.createPropertyEditor(io.fabric8.devops.ProjectConfig)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (editor == null) { editor = java.beans.PropertyEditorManager.findEditor(propertyType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/738/buggy-version/components.fabric8-devops.src.main.java.io.fabric8.devops.ProjectConfigs.java", "BodyUseAPI": [], "Fixed commit": "5f65b9343bee7942038dd89ed635dd1b1fdb7c9c", "Url": "https://api.github.com/repos/fabric8io/fabric8", "Date": "2015-07-03T14:06:35Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getNameNode().getNodeID()) == (org.apache.flex.compiler.tree.ASTNodeID.MemberAccessExpressionID)) { write(\"new \"); getWalker().walk(node.getNameNode()); write(\"(\"); walkParameters(node); write(\")\"); }else { emitNew(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6331/buggy-version/src.main.java.randori.compiler.internal.codegen.js.emitter.FunctionCallEmitter.java", "BodyUseAPI": ["org.apache.flex.compiler.tree.as.IFunctionCallNode.getNameNode()", "getWalker().walk(node.getNameNode())", "randori.compiler.internal.codegen.js.emitter.FunctionCallEmitter.emitNew(org.apache.flex.compiler.tree.as.IFunctionCallNode)", "randori.compiler.internal.codegen.js.emitter.FunctionCallEmitter.walkParameters(org.apache.flex.compiler.tree.as.IFunctionCallNode)"], "Fixed commit": "de2065478ea3fda9a3eafd8194a146d7e020a142", "Url": "https://api.github.com/repos/RandoriAS/randori-compiler", "Date": "2013-06-26T18:33:34Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contains(x, y)) return obstacles[x][y];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4598/buggy-version/src.Map.java", "BodyUseAPI": [], "Fixed commit": "656e6b3cb073231cdfb9ebec7a7bde682fba8e4a", "Url": "https://api.github.com/repos/EscapeGame/EscapeGame", "Date": "2011-12-02T03:06:15Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contains(x, y)) return visited[x][y];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4598/buggy-version/src.Map.java", "BodyUseAPI": [], "Fixed commit": "656e6b3cb073231cdfb9ebec7a7bde682fba8e4a", "Url": "https://api.github.com/repos/EscapeGame/EscapeGame", "Date": "2011-12-02T03:06:15Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((classStack.size()) > 0) { edu.isi.bmkeg.uml.model.UMLclass top = this.getTopClass(); this.classStack.remove(top); thisClass = this.getTopClass(); }else if ((thisAssoc) != null) { thisAssoc = null; }else if (typeStack.get(((typeStack.size()) - 1)).startsWith(\"uml:Package\")) { edu.isi.bmkeg.uml.model.UMLpackage top = this.getPackage(); this.packageStack.remove(top); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8073/buggy-version/src.main.java.edu.isi.bmkeg.uml.sources.MagicDrawXMI_ModelParserHandler.java", "BodyUseAPI": [], "Fixed commit": "5af07b125dd3f4ff70839f84f1a8eef20d3180e0", "Url": "https://api.github.com/repos/BMKEG/uml", "Date": "2016-06-10T22:55:20Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((headerLine == null) || ((headerLine.length()) < 1)) { closeConnection(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1366/buggy-version/src.studentsHttpServer.Server.java", "BodyUseAPI": [], "Fixed commit": "0069524236a30bd02e0fd9dc5d314fab59cdb312", "Url": "https://api.github.com/repos/Barak2222/javaHTTPserver", "Date": "2016-06-12T21:48:37Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fis != null) { properties.load(fis); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6683/buggy-version/src.java.com.idega.core.ldap.server.business.EmbeddedLDAPServerBusinessBean.java", "BodyUseAPI": ["java.util.Properties.load(java.io.FileInputStream)"], "Fixed commit": "2716aeef3678d971d76cb53791cea11a5844d3d3", "Url": "https://api.github.com/repos/idega/com.idega.block.ldap", "Date": "2016-01-20T11:59:54Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.original.getPosition()) != null) && ((this.original.getPosition().getFile()) != null)) { repst += ((\"at l: \" + (this.original.getPosition().getLine())) + \" on \") + (this.original.getPosition().getFile().getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5386/buggy-version/src.main.java.fr.inria.astor.core.entities.OperatorInstance.java", "BodyUseAPI": ["spoon.reflect.declaration.CtElement.getPosition()", "this.original.getPosition().getFile()", "spoon.reflect.declaration.CtElement.getPosition()", "this.original.getPosition().getLine()", "this.original.getPosition().getFile().getAbsolutePath()"], "Fixed commit": "c15cfd6c216a21b24b78d2cc15534c89237a90a3", "Url": "https://api.github.com/repos/SpoonLabs/astor", "Date": "2017-07-18T07:22:50Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.getTimeOfRecord()) > (_latestUpdate)) { _latestUpdate = message.getTimeOfRecord(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3409/buggy-version/onebusaway-transit-data-federation.src.main.java.org.onebusaway.transit_data_federation.impl.realtime.orbcad.AbstractOrbcadRecordSource.java", "BodyUseAPI": ["org.onebusaway.realtime.api.VehicleLocationRecord.getTimeOfRecord()"], "Fixed commit": "6bd1f4eaf4f751fbe6c4dca8f327b23464c49080", "Url": "https://api.github.com/repos/camsys/onebusaway-application-modules", "Date": "2015-04-09T15:33:58Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((path.length) > 1) files.add(path[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6322/buggy-version/src.main.java.com.dyonovan.teambrcore.utils.FileUtils.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "6a274f4e95c52955670141029b8b853cd94e0076", "Url": "https://api.github.com/repos/TeamBR-Modding/TeamBR-Core", "Date": "2015-03-11T07:06:55Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.dm.wallpaper.board.applications.WallpaperBoardApplication.getConfiguration().getWallpapersGrid()) == (WallpaperBoardApplication.GridStyle.FLAT)) { int padding = getActivity().getResources().getDimensionPixelSize(R.dimen.card_margin); mRecyclerView.setPadding(padding, padding, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2676/buggy-version/library.src.main.java.com.dm.wallpaper.board.fragments.FavoritesFragment.java", "BodyUseAPI": [], "Fixed commit": "1c9713af7bab4e28c2f75ef4b7f9bf3267df0678", "Url": "https://api.github.com/repos/danimahardhika/wallpaperboard", "Date": "2017-07-05T22:59:11Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGoogleApiClient) == null) { mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(this).addConnectionCallbacks(this).addOnConnectionFailedListener(this).addApi(LocationServices.API).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6585/buggy-version/Parse-Starter-Project-1.13.0.ParseStarterProject.src.main.java.com.parse.starter.AddNewActivity.java", "BodyUseAPI": [], "Fixed commit": "6499f657c7e5e0d21c727228be748860f384c7cf", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110M240T5", "Date": "2016-02-21T07:09:06Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message.startsWith(\"info\")) { if (config.isGlobalAdmin(user)) { return \"Inviter size is \" + (inviter.pendingItems.size()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6775/buggy-version/src.org.leolo.ircbot.inviteBot.Console.java", "BodyUseAPI": [], "Fixed commit": "e6be165459184f8707967b1f3bbbbd1f6821c58e", "Url": "https://api.github.com/repos/ktllo/inviteBot", "Date": "2015-04-11T09:11:35Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message.startsWith(\"version\")) { return \"master-1711H11042015\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6775/buggy-version/src.org.leolo.ircbot.inviteBot.Console.java", "BodyUseAPI": [], "Fixed commit": "e6be165459184f8707967b1f3bbbbd1f6821c58e", "Url": "https://api.github.com/repos/ktllo/inviteBot", "Date": "2015-04-11T09:11:35Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((config.getReportChannel(event.getChannel().getName())) != null) { event.getBot().sendIRC().message(config.getReportChannel(event.getChannel().getName()), (((((((\"User \" + (event.getUser().getNick())) + \"joined \") + (event.getChannel().getName())) + \" Q:\") + (record.getQuestion().getQuestion())) + \" Sol:\") + (record.getQuestion().getSolution()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6775/buggy-version/src.org.leolo.ircbot.inviteBot.Inviter.java", "BodyUseAPI": ["event.getChannel().getName()", "event.getUser().getNick()", "org.leolo.ircbot.inviteBot.JoinEvent<org.pircbotx.PircBotX>.getUser()", "org.leolo.ircbot.inviteBot.JoinEvent<org.pircbotx.PircBotX>.getChannel()", "org.leolo.ircbot.inviteBot.Config.getReportChannel(event.getChannel().getName())", "org.leolo.ircbot.inviteBot.JoinEvent<org.pircbotx.PircBotX>.getBot()", "event.getBot().sendIRC()", "event.getBot().sendIRC().message(config.getReportChannel(event.getChannel().getName()),(((((((\"User \" + (event.getUser().getNick())) + \"joined \") + (event.getChannel().getName())) + \" Q:\") + (record.getQuestion().getQuestion())) + \" Sol:\") + (record.getQuestion().getSolution())))", "event.getChannel().getName()", "org.leolo.ircbot.inviteBot.JoinEvent<org.pircbotx.PircBotX>.getChannel()"], "Fixed commit": "e6be165459184f8707967b1f3bbbbd1f6821c58e", "Url": "https://api.github.com/repos/ktllo/inviteBot", "Date": "2015-04-11T09:11:35Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parsedArguments[0].equals(\"put\")) { if (oneCommand.contains(\"<\")) { java.lang.String valueForPut = oneCommand.trim().substring(oneCommand.indexOf('<')); parsedArguments[2] = valueForPut; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2429/buggy-version/src.ru.fizteh.fivt.students.ZatsepinMikhail.Storeable.FileMap.Shell.java", "BodyUseAPI": [], "Fixed commit": "45779a5873d08e726e2e29e68628a008b6aa793d", "Url": "https://api.github.com/repos/ZatsepinMikhail/fizteh-java-2014", "Date": "2014-11-23T14:02:01Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(com.example.alexthomas.myapplication.MainActivity.powerButton_on)) && (com.example.alexthomas.myapplication.MainActivity.snooze_alarm.getText().toString().equals(\"Silence Alarm\"))) { android.util.Log.e(\"Conditional\", \"7\"); android.widget.Toast.makeText(this, \"You need to silence the alarm first!\", Toast.LENGTH_SHORT).show(); }else { com.example.alexthomas.myapplication.MainActivity.powerButton_on = !(com.example.alexthomas.myapplication.MainActivity.powerButton_on); android.util.Log.e(\"Time\", (((java.lang.String.valueOf(hour)) + \":\") + (java.lang.String.valueOf(minute)))); if (com.example.alexthomas.myapplication.MainActivity.powerButton_on) { com.example.alexthomas.myapplication.MainActivity.on_off_boolean(true); android.util.Log.e(\"power is on\", \"now\"); store_PowerButtonBoolean(true); }else { com.example.alexthomas.myapplication.MainActivity.on_off_boolean(false); android.util.Log.e(\"power is off\", \"now\"); store_PowerButtonBoolean(false); } com.example.alexthomas.myapplication.MainActivity.alarmUp = (android.app.PendingIntent.getBroadcast(this, 1, new android.content.Intent(this, com.example.alexthomas.myapplication.alarm_receiver.class), PendingIntent.FLAG_NO_CREATE)) != null; boolean repeating_alarm = (android.app.PendingIntent.getBroadcast(this, 2, new android.content.Intent(this, com.example.alexthomas.myapplication.alarm_receiver.class), PendingIntent.FLAG_NO_CREATE)) != null; android.util.Log.e(\"Conditionals\", (((java.lang.String.valueOf(repeating_alarm)) + \" \") + (java.lang.String.valueOf(com.example.alexthomas.myapplication.MainActivity.alarmUp)))); if (((repeating_alarm && (alarm_service.isRunning)) && (!(com.example.alexthomas.myapplication.MainActivity.powerButton_on))) || (((com.example.alexthomas.myapplication.MainActivity.alarmUp) && (alarm_service.isRunning)) && (!(com.example.alexthomas.myapplication.MainActivity.powerButton_on)))) { android.util.Log.e(\"Conditional\", \"0\"); alarm_service.isRunning = true; com.example.alexthomas.myapplication.MainActivity.alarm_intent = new android.content.Intent(this, com.example.alexthomas.myapplication.alarm_receiver.class); pendingIntent = android.app.PendingIntent.getBroadcast(this, 2, com.example.alexthomas.myapplication.MainActivity.alarm_intent, PendingIntent.FLAG_CANCEL_CURRENT); sendBroadcast(com.example.alexthomas.myapplication.MainActivity.alarm_intent); pendingIntent.cancel(); com.example.alexthomas.myapplication.MainActivity.alarm_intent = new android.content.Intent(this, com.example.alexthomas.myapplication.alarm_receiver.class); pendingIntent = android.app.PendingIntent.getBroadcast(this, 1, com.example.alexthomas.myapplication.MainActivity.alarm_intent, PendingIntent.FLAG_CANCEL_CURRENT); pendingIntent.cancel(); com.example.alexthomas.myapplication.MainActivity.lastTimerisNull = true; store_timer_null(true); com.example.alexthomas.myapplication.MainActivity.snooze_alarm.setText(\"Get Quotes\"); store_snoozeText(\"Get Quotes\"); com.example.alexthomas.myapplication.MainActivity.alarm_confirmation.setText(\"Your alarm is unset.\"); }else { if ((((!(com.example.alexthomas.myapplication.MainActivity.alarmUp)) && (!(com.example.alexthomas.myapplication.MainActivity.powerButton_on))) && (!(alarm_service.isRunning))) && (!repeating_alarm)) { android.util.Log.e(\"Conditional\", \"2\"); android.widget.Toast.makeText(this, \"The alarm is already off!\", Toast.LENGTH_SHORT).show(); }else if ((!(com.example.alexthomas.myapplication.MainActivity.alarmUp)) && (com.example.alexthomas.myapplication.MainActivity.powerButton_on)) { android.util.Log.e(\"Conditional\", \"3\"); com.example.alexthomas.myapplication.MainActivity.alarm_intent = new android.content.Intent(this, com.example.alexthomas.myapplication.alarm_receiver.class); pendingIntent = android.app.PendingIntent.getBroadcast(this, 1, com.example.alexthomas.myapplication.MainActivity.alarm_intent, PendingIntent.FLAG_CANCEL_CURRENT); java.util.Calendar calendar = java.util.Calendar.getInstance(); calendar.set(java.util.Calendar.HOUR_OF_DAY, hour); calendar.set(java.util.Calendar.MINUTE, minute); long time = calendar.getTimeInMillis(); alarm_service.fromAlarmStart = true; android.app.AlarmManager alarmManager = ((android.app.AlarmManager) (getSystemService(com.example.alexthomas.myapplication.ALARM_SERVICE))); alarmManager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP, adjustTime(time), pendingIntent); com.example.alexthomas.myapplication.MainActivity.lastTimerisNull = false; store_timer_null(false); getInput_bottomText(); }else if ((com.example.alexthomas.myapplication.MainActivity.alarmUp) && (!(com.example.alexthomas.myapplication.MainActivity.powerButton_on))) { android.util.Log.e(\"Conditional\", \"4\"); com.example.alexthomas.myapplication.MainActivity.alarm_intent = new android.content.Intent(this, com.example.alexthomas.myapplication.alarm_receiver.class); pendingIntent = android.app.PendingIntent.getBroadcast(this, 1, com.example.alexthomas.myapplication.MainActivity.alarm_intent, PendingIntent.FLAG_CANCEL_CURRENT); pendingIntent.cancel(); com.example.alexthomas.myapplication.MainActivity.alarm_intent = new android.content.Intent(this, com.example.alexthomas.myapplication.alarm_receiver.class); pendingIntent = android.app.PendingIntent.getBroadcast(this, 2, com.example.alexthomas.myapplication.MainActivity.alarm_intent, PendingIntent.FLAG_CANCEL_CURRENT); pendingIntent.cancel(); com.example.alexthomas.myapplication.MainActivity.lastTimerisNull = true; store_timer_null(true); com.example.alexthomas.myapplication.MainActivity.alarm_confirmation.setText(\"Your alarm is unset\"); com.example.alexthomas.myapplication.MainActivity.snooze_alarm.setText(\"Get Quotes\"); store_snoozeText(\"Get Quotes\"); android.widget.Toast.makeText(this, \"Alarm unset.\", Toast.LENGTH_SHORT).show(); android.util.Log.e(\"Cancelled for real\", \"Cancelled Intent\"); } setInput_bottomText(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9033/buggy-version/java.com.example.alexthomas.myapplication.MainActivity.java", "BodyUseAPI": ["android.widget.Button.setText(java.lang.String)", "android.widget.Button.setText(java.lang.String)"], "Fixed commit": "72183cbe82546a8d3c7800ec6f397f7845d72d85", "Url": "https://api.github.com/repos/kevindhu/getwoke", "Date": "2017-01-08T20:07:28Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((activePane) == null) || (!(activePane.isVisible()))) { activePane = ((org.carewebframework.shell.layout.UIElementTabPane) (this.getFirstVisibleChild())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1968/buggy-version/org.carewebframework.shell.src.main.java.org.carewebframework.shell.layout.UIElementTabView.java", "BodyUseAPI": [], "Fixed commit": "4bd77bdca08a7d5edb0dad6dd4467d9c0b055ebc", "Url": "https://api.github.com/repos/carewebframework/carewebframework-core", "Date": "2017-07-05T15:34:02Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sa.getEchostr()) != null) accessRepository.saveAccessLog(sa);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/327/buggy-version/mmt-shared.src.main.java.com.github.cjm0000000.mmt.shared.message.process.AbstractPassiveProcessor.java", "BodyUseAPI": ["com.github.cjm0000000.mmt.shared.access.persistence.AccessRepository.saveAccessLog(com.github.cjm0000000.mmt.core.access.Access)"], "Fixed commit": "788151f07d1ed536cfa2739329b9a97b0da77179", "Url": "https://api.github.com/repos/SmartCloud2025/mmt", "Date": "2014-01-24T08:23:59Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getResources().getBoolean(R.bool.bottom_toolbar_enabled)) { navigationView.getMenu().removeItem(R.id.nav_settings); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3921/buggy-version/src.main.java.com.owncloud.android.ui.activity.DrawerActivity.java", "BodyUseAPI": [], "Fixed commit": "274aa7e9a8b504f3bd9ec5c8086d89b16cd77f0d", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-03-14T23:12:17Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (delidx > 0) delidx = random.nextInt(delidx);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6012/buggy-version/src.main.java.rlill.landlord.util.NewMonthService.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "fc3ed73c6053073a414755c1a6cbc5de3217bf0a", "Url": "https://api.github.com/repos/rlill/landlord", "Date": "2017-12-22T07:02:35Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (delidx > 0) delidx = random.nextInt(delidx);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6012/buggy-version/src.main.java.rlill.landlord.util.NewMonthService.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "fc3ed73c6053073a414755c1a6cbc5de3217bf0a", "Url": "https://api.github.com/repos/rlill/landlord", "Date": "2017-12-22T07:02:35Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (delidx > 0) delidx = random.nextInt(delidx);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6012/buggy-version/src.main.java.rlill.landlord.util.NewMonthService.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "fc3ed73c6053073a414755c1a6cbc5de3217bf0a", "Url": "https://api.github.com/repos/rlill/landlord", "Date": "2017-12-22T07:02:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (delidx > 0) delidx = random.nextInt(delidx);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6012/buggy-version/src.main.java.rlill.landlord.util.NewMonthService.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "fc3ed73c6053073a414755c1a6cbc5de3217bf0a", "Url": "https://api.github.com/repos/rlill/landlord", "Date": "2017-12-22T07:02:35Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.isDirectory()) return f;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7452/buggy-version/src.application.git_tool.GITTool.java", "BodyUseAPI": [], "Fixed commit": "8c95197436f6cf95a7411fb657aa00bc08ac7e99", "Url": "https://api.github.com/repos/cxan96/GIT-Tool", "Date": "2016-12-01T09:18:31Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.doridian.yiffbukkit.main.util.RedisManager.jedisPool) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4820/buggy-version/src.main.java.de.doridian.yiffbukkit.main.util.RedisManager.java", "BodyUseAPI": [], "Fixed commit": "a7165936c350c9f79ddb29004d89646ad9614153", "Url": "https://api.github.com/repos/YiffBukkit/YiffBukkit", "Date": "2014-05-18T12:35:56Z"},
{"Line": "=>1175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (city.build_queue.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1966/buggy-version/src.game.Game.java", "BodyUseAPI": [], "Fixed commit": "993f25edf9d5c218210dcc2f29657b55afd6b472", "Url": "https://api.github.com/repos/joulupunikki/Phoenix", "Date": "2014-03-19T13:07:06Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)", "android.text.Editable.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((posDot == 0) && ((temp.length()) == 1)) { edt.delete(0, 1); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2416/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.activity.SectionNewSubsidenceActivity.java", "BodyUseAPI": [], "Fixed commit": "30cd4160a10052c0a30d65ee6557005dc2f60f1d", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-10-17T10:02:59Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.text.Editable.toString()", "java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((posDot == 0) && ((temp.length()) == 1)) { edt.delete(0, 1); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2416/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.activity.SectionNewActivity.java", "BodyUseAPI": [], "Fixed commit": "30cd4160a10052c0a30d65ee6557005dc2f60f1d", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-10-17T10:02:59Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blocks.isEmpty()) return blocks;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2983/buggy-version/parquet-hadoop.src.main.java.org.apache.parquet.filter2.compat.RowGroupFilter.java", "BodyUseAPI": [], "Fixed commit": "c69db44c7c7079746d09cbe958927ff4e50b548d", "Url": "https://api.github.com/repos/AndyYSWoo/parquet-mr", "Date": "2016-11-22T07:14:32Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(e.getKey().contains(\"_name\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4920/buggy-version/OsmAnd-java.src.net.osmand.binary.BinaryMapPoiReaderAdapter.java", "BodyUseAPI": [], "Fixed commit": "74cb45c505297743251aee3c11d2cab913dc5cc4", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-10-20T20:25:26Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (separatorIndex <= 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4680/buggy-version/src.tsdb.KafkaToTsdbChannel.java", "BodyUseAPI": [], "Fixed commit": "25ce0019940dd453e8a168cc919b63b535ddcb23", "Url": "https://api.github.com/repos/EddiePi/tracing-server-2.0", "Date": "2017-07-28T21:28:52Z"},
{"Line": "=>789", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(updateDescriptor)) && ((descriptor) == null)) { msgKey = \"error.problemsFoundSuggest\"; }else { msgKey = \"error.problemsFound\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7698/buggy-version/src.com.redhat.ceylon.tools.importjar.CeylonImportJarTool.java", "BodyUseAPI": [], "Fixed commit": "22b5763ec5c93facac02d3f687af0f2176b89f3b", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2015-02-10T14:39:29Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (boubleData != null) { track.remove(boubleData.getMoment()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7364/buggy-version/src.model.Music.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.String>.remove(boubleData.getMoment())", "model.TupleMomentSymbol.getMoment()"], "Fixed commit": "6dfef4ace16dc1176cfe1b4ef8d1a2f24295d667", "Url": "https://api.github.com/repos/wilq1994/Projekt-Java", "Date": "2016-01-22T13:00:26Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.daughters.size()) == 0) list.add(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4842/buggy-version/src.eTree.ENode.java", "BodyUseAPI": [], "Fixed commit": "f4270c830f3de96037d3627b9b8bb51499eeb6e7", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2013-11-29T14:54:18Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"\".equals(getAddress().value))) { builder.append(\" Address: \").append(getAddress()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1067/buggy-version/src.main.java.seedu.address.model.person.ReadOnlyPerson.java", "BodyUseAPI": [], "Fixed commit": "80cdde046e49f38d0cd914696f4f2f81d0ca90c7", "Url": "https://api.github.com/repos/EskayYew/main", "Date": "2017-11-11T17:44:51Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"\".equals(getEmail().value))) { builder.append(\" Email: \").append(getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1067/buggy-version/src.main.java.seedu.address.model.person.ReadOnlyPerson.java", "BodyUseAPI": [], "Fixed commit": "80cdde046e49f38d0cd914696f4f2f81d0ca90c7", "Url": "https://api.github.com/repos/EskayYew/main", "Date": "2017-11-11T17:44:51Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((icons[position]) == (R.drawable.share)) { convertView.findViewById(R.id.lajn).setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/713/buggy-version/app.src.main.java.com.example.mjokic.quizapp.adapters.NavDrawerListAdapter.java", "BodyUseAPI": [], "Fixed commit": "c5a77e3df8bbe71af25f12dbf6f28be326f1fb8e", "Url": "https://api.github.com/repos/mjokic/QuizAndroidApp", "Date": "2017-09-29T11:51:31Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vn.mbm.phimp.me.Utility.getTheme(getApplicationContext())) == (DARKTHEME)) layout.setBackgroundColor(getResources().getColor(R.color.black)); else layout.setBackgroundColor(getResources().getColor(R.color.white));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3844/buggy-version/app.src.main.java.vn.mbm.phimp.me.gallery.PhimpMeGallery.java", "BodyUseAPI": [], "Fixed commit": "cc9aaaac4eb205fd5a9a6e85e0b26e349c1332f5", "Url": "https://api.github.com/repos/mohitmanuja/phimpme-android", "Date": "2017-05-07T14:35:54Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.weka.web.application.service.FileService.getAllFileNames()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tempList.size()) == 0) { return new org.springframework.http.ResponseEntity<java.util.List<java.lang.String>>(new java.util.ArrayList<java.lang.String>(), org.springframework.http.HttpStatus.BAD_REQUEST); }else { return new org.springframework.http.ResponseEntity<java.util.List<java.lang.String>>(tempList, org.springframework.http.HttpStatus.OK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4819/buggy-version/src.main.java.org.weka.web.application.controller.FilesController.java", "BodyUseAPI": [], "Fixed commit": "81aefc3f66a14a34b905024cacaabef06127d3d5", "Url": "https://api.github.com/repos/Daus-x/wekaWebAPI", "Date": "2015-01-03T17:41:22Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parentDifferenceElement != null) { setAttribute(parentDifferenceElement, com.delcyon.capo.xml.XMLDiff.XDIFF_NAMESPACE_URI, com.delcyon.capo.xml.XMLDiff.XDIFF_PREFIX, com.delcyon.capo.xml.XMLDiff.XDIFF_ELEMENT_ATTRIBUTE_NAME, com.delcyon.capo.xml.XMLDiff.INEQUALITY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5041/buggy-version/java.com.delcyon.capo.xml.XMLDiff.java", "BodyUseAPI": ["com.delcyon.capo.xml.XMLDiff.setAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "72eb15d69dadfbfa150958a2a0b2deb2d2cad0aa", "Url": "https://api.github.com/repos/jahnje/delcyon-capo", "Date": "2012-10-26T21:18:29Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.delcyon.capo.xml.XMLDiff.createElement(org.w3c.dom.Document,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((differenceElement.hasAttributeNS(com.delcyon.capo.xml.XMLDiff.XDIFF_NAMESPACE_URI, com.delcyon.capo.xml.XMLDiff.XDIFF_ELEMENT_ATTRIBUTE_NAME)) && (differenceElement.hasChildNodes())) && (differenceElement.getAttributeNS(com.delcyon.capo.xml.XMLDiff.XDIFF_NAMESPACE_URI, com.delcyon.capo.xml.XMLDiff.XDIFF_ELEMENT_ATTRIBUTE_NAME).equals(com.delcyon.capo.xml.XMLDiff.EQUALITY))) { org.w3c.dom.NodeList nodeList = differenceElement.getChildNodes(); for (int index = 0; index < (nodeList.getLength()); index++) { if ((nodeList.item(index)) instanceof org.w3c.dom.Element) { ((org.w3c.dom.Element) (nodeList.item(index))).removeAttribute((((com.delcyon.capo.xml.XMLDiff.XDIFF_PREFIX) + \":\") + (com.delcyon.capo.xml.XMLDiff.XDIFF_ELEMENT_ATTRIBUTE_NAME))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5041/buggy-version/java.com.delcyon.capo.xml.XMLDiff.java", "BodyUseAPI": ["org.w3c.dom.Element.getChildNodes()"], "Fixed commit": "72eb15d69dadfbfa150958a2a0b2deb2d2cad0aa", "Url": "https://api.github.com/repos/jahnje/delcyon-capo", "Date": "2012-10-26T21:18:29Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Attr.getLocalName()", "org.w3c.dom.Attr.getNamespaceURI()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((attributeLocalName == null) && (attributeNamesapceURI == null)) { attributeLocalName = attribute.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5041/buggy-version/java.com.delcyon.capo.xml.XMLDiff.java", "BodyUseAPI": [], "Fixed commit": "72eb15d69dadfbfa150958a2a0b2deb2d2cad0aa", "Url": "https://api.github.com/repos/jahnje/delcyon-capo", "Date": "2012-10-26T21:18:29Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((keywords != null) && (!(keywords.equalsIgnoreCase(\"\")))) { dynamicQuery = buildPatientDynamicQueryForKeywords(keywords, andSearch); resultsCount = ((int) (com.liferay.patient.registration.service.PatientRegistrationLocalServiceUtil.dynamicQueryCount(dynamicQuery))); }else { resultsCount = getAllPatients().size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5953/buggy-version/docroot.WEB-INF.src.com.liferay.patient.registration.service.impl.PatientRegistrationLocalServiceImpl.java", "BodyUseAPI": ["com.liferay.patient.registration.service.impl.PatientRegistrationLocalServiceImpl.buildPatientDynamicQueryForKeywords(java.lang.String,boolean)"], "Fixed commit": "ce312761f98cea93e4f2495bba8c1273d57000d1", "Url": "https://api.github.com/repos/kevinneibarger/healthmap-patient-project", "Date": "2017-07-07T14:51:24Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((keywords != null) && (!(keywords.equalsIgnoreCase(\"\")))) { dynamicQuery = buildPatientDynamicQueryForKeywords(keywords, andSearch); patients = com.liferay.patient.registration.service.PatientRegistrationLocalServiceUtil.dynamicQuery(dynamicQuery, start, end); }else { patients = getAllPatients(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5953/buggy-version/docroot.WEB-INF.src.com.liferay.patient.registration.service.impl.PatientRegistrationLocalServiceImpl.java", "BodyUseAPI": ["com.liferay.patient.registration.service.impl.PatientRegistrationLocalServiceImpl.buildPatientDynamicQueryForKeywords(java.lang.String,boolean)"], "Fixed commit": "ce312761f98cea93e4f2495bba8c1273d57000d1", "Url": "https://api.github.com/repos/kevinneibarger/healthmap-patient-project", "Date": "2017-07-07T14:51:24Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((operation == (com.ibm.watson.developer_cloud.alchemy.v1.util.AlchemyEndPoints.AlchemyAPI.TYPED)) && (params.containsKey(com.ibm.watson.developer_cloud.alchemy.v1.AlchemyLanguage.MODEL_ID))) { requestBuilder.query(com.ibm.watson.developer_cloud.alchemy.v1.AlchemyLanguage.MODEL_ID, params.get(com.ibm.watson.developer_cloud.alchemy.v1.AlchemyLanguage.MODEL_ID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/531/buggy-version/src.main.java.com.ibm.watson.developer_cloud.alchemy.v1.AlchemyLanguage.java", "BodyUseAPI": ["com.ibm.watson.developer_cloud.http.RequestBuilder.query(java.lang.String,java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "0a8fe011c133d83d8fca7327d4cbbb7c0770bfcb", "Url": "https://api.github.com/repos/watson-developer-cloud/java-sdk", "Date": "2016-06-23T18:16:18Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUpPosition) { params.setMargins(8, 40, 8, 0); }else { params.setMargins(8, 0, 8, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6763/buggy-version/app.src.main.java.com.roka.circleviewpager.CircleIndicatorViewPager.java", "BodyUseAPI": [], "Fixed commit": "42c0e1531bc975ec5a0b88adefab50f999120e83", "Url": "https://api.github.com/repos/roka88/indicatorviewpager", "Date": "2016-11-30T08:17:59Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.giiwa.core.json.JSON>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (j != null) { if (jo.containsKey(\"tag\")) { j.put(\"tag\", jo.get(\"tag\")); } org.giiwa.framework.bean.Menu.insertOrUpdate(j, m.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5914/buggy-version/src.main.java.org.giiwa.framework.bean.Menu.java", "BodyUseAPI": ["org.giiwa.core.json.JSON.put(java.lang.String,jo.get(\"tag\"))", "org.giiwa.framework.bean.Menu.insertOrUpdate(org.giiwa.core.json.JSON,long)"], "Fixed commit": "fc66612b4f50555a129aeb54f367f6d36155e4a1", "Url": "https://api.github.com/repos/giiwa/giiwa", "Date": "2016-09-18T08:37:54Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(errors.hasErrors())) && ((this.innerValidator) != null)) { if ((this.innerValidator) instanceof org.springframework.validation.SmartValidator) { ((org.springframework.validation.SmartValidator) (this.innerValidator)).validate(obj, errors, hints); }else { this.innerValidator.validate(obj, errors); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1054/buggy-version/hdiv-spring-mvc.src.main.java.org.hdiv.web.validator.EditableParameterValidator.java", "BodyUseAPI": ["org.springframework.validation.Validator.validate(java.lang.Object,org.springframework.validation.Errors)", "org.springframework.validation.Validator.validate(java.lang.Object,org.springframework.validation.Errors,java.lang.Object[])"], "Fixed commit": "260d71714bd5c054b196bfecf2fc0914e24a303b", "Url": "https://api.github.com/repos/hdiv/hdiv", "Date": "2015-02-25T10:06:37Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((origin.getSignedProperties().getSignatureProductionPlace()) != null) { postalCode = origin.getSignedProperties().getSignatureProductionPlace().getPostalCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6489/buggy-version/src.org.digidoc4j.impl.ddoc.DDocSignature.java", "BodyUseAPI": ["origin.getSignedProperties().getSignatureProductionPlace().getPostalCode()", "org.digidoc4j.Signature.getSignedProperties()", "origin.getSignedProperties().getSignatureProductionPlace()"], "Fixed commit": "9f9f3f925c102c0ee6b218aa2393f3465be108cc", "Url": "https://api.github.com/repos/open-eid/digidoc4j", "Date": "2015-10-02T09:30:52Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((origin.getSignedProperties().getSignatureProductionPlace()) != null) { countryName = origin.getSignedProperties().getSignatureProductionPlace().getCountryName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6489/buggy-version/src.org.digidoc4j.impl.ddoc.DDocSignature.java", "BodyUseAPI": ["origin.getSignedProperties().getSignatureProductionPlace()", "org.digidoc4j.Signature.getSignedProperties()", "origin.getSignedProperties().getSignatureProductionPlace().getCountryName()"], "Fixed commit": "9f9f3f925c102c0ee6b218aa2393f3465be108cc", "Url": "https://api.github.com/repos/open-eid/digidoc4j", "Date": "2015-10-02T09:30:52Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((origin.getSignedProperties().getSignatureProductionPlace()) != null) { stateOrProvince = origin.getSignedProperties().getSignatureProductionPlace().getStateOrProvince(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6489/buggy-version/src.org.digidoc4j.impl.ddoc.DDocSignature.java", "BodyUseAPI": ["org.digidoc4j.Signature.getSignedProperties()", "origin.getSignedProperties().getSignatureProductionPlace().getStateOrProvince()", "origin.getSignedProperties().getSignatureProductionPlace()"], "Fixed commit": "9f9f3f925c102c0ee6b218aa2393f3465be108cc", "Url": "https://api.github.com/repos/open-eid/digidoc4j", "Date": "2015-10-02T09:30:52Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((origin.getSignedProperties().getSignatureProductionPlace()) != null) { city = origin.getSignedProperties().getSignatureProductionPlace().getCity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6489/buggy-version/src.org.digidoc4j.impl.ddoc.DDocSignature.java", "BodyUseAPI": ["origin.getSignedProperties().getSignatureProductionPlace().getCity()", "origin.getSignedProperties().getSignatureProductionPlace()", "org.digidoc4j.Signature.getSignedProperties()"], "Fixed commit": "9f9f3f925c102c0ee6b218aa2393f3465be108cc", "Url": "https://api.github.com/repos/open-eid/digidoc4j", "Date": "2015-10-02T09:30:52Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5248/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "887041d423b1260053298a01da6f0f8d7a1e2f3a", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > (cdata.length())) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5248/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "887041d423b1260053298a01da6f0f8d7a1e2f3a", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset + count) > length) { return new java.lang.String(document.characters, (inDocOffset + offset), (length - offset)); }else { return new java.lang.String(document.characters, (inDocOffset + offset), length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5248/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "887041d423b1260053298a01da6f0f8d7a1e2f3a", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > length) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5248/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "887041d423b1260053298a01da6f0f8d7a1e2f3a", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dest >= 0) { org.elasql.cache.CachedRecord clonedRec = new org.elasql.cache.CachedRecord(entry.getValue()); cacheMgr.passToTheNextTx(entry.getKey(), clonedRec, txNum, dest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4645/buggy-version/src.main.java.org.elasql.cache.tpart.TPartTxLocalCache.java", "BodyUseAPI": ["org.elasql.cache.tpart.TPartCacheMgr.passToTheNextTx(entry.getKey(),org.elasql.cache.CachedRecord,long,long)"], "Fixed commit": "9247ff97450faf3b10195d87acba50626bd4037e", "Url": "https://api.github.com/repos/elasql/elasql", "Date": "2017-04-20T08:18:15Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cancelled()) { org.openstreetmap.josm.Main.info(org.openstreetmap.josm.tools.I18n.tr(\"Ignoring exception because download has been canceled. Exception was: {0}\", e.toString())); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1576/buggy-version/src.main.java.org.openstreetmap.josm.plugins.ods.entities.internal.InternalDownloadTask.java", "BodyUseAPI": [], "Fixed commit": "bf2f26b8d1102ee628091be027ba54ed007cc852", "Url": "https://api.github.com/repos/gidema/josm-openservices", "Date": "2014-02-22T15:10:53Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.openstreetmap.josm.plugins.ods.entities.internal.InternalDownloadTask>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (task.failed) { javax.swing.JOptionPane.showMessageDialog(Main.parent, task.errorMessage); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1576/buggy-version/src.main.java.org.openstreetmap.josm.plugins.ods.entities.internal.InternalDownloadJob.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(Main.parent,task.errorMessage)"], "Fixed commit": "bf2f26b8d1102ee628091be027ba54ed007cc852", "Url": "https://api.github.com/repos/gidema/josm-openservices", "Date": "2014-02-22T15:10:53Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orgIds == null) || (orgIds.isEmpty())) { return orgs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7877/buggy-version/manager.api.jpa.src.main.java.io.apiman.manager.api.jpa.JpaStorage.java", "BodyUseAPI": [], "Fixed commit": "df11b85a83b133d70757ddde394b53ed7d182554", "Url": "https://api.github.com/repos/jorgemoralespou/apiman", "Date": "2015-01-13T16:56:36Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openlmis.stockmanagement.controller.StockCard.getLotsOnHand()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (originalLotsOnHand == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1880/buggy-version/src.main.java.org.openlmis.stockmanagement.controller.StockCardController.java", "BodyUseAPI": [], "Fixed commit": "22772eccad6236f739f9a6a2d675275fd45521bd", "Url": "https://api.github.com/repos/OpenLMIS/stock-management", "Date": "2015-11-04T02:55:06Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.util.config.Configuration.getKeys(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (keys != null) { for (java.lang.String key : keys) { playersGroup.put(key.toLowerCase(), config.getString((\"PlayerGroupAssignments.\" + key), com.bekvon.bukkit.residence.permissions.PermissionManager.defaultGroup).toLowerCase()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6250/buggy-version/src.com.bekvon.bukkit.residence.permissions.PermissionManager.java", "BodyUseAPI": [], "Fixed commit": "da3417f81233dc246e9bde92ed287a55e2a8cb6c", "Url": "https://api.github.com/repos/bekvon/Residence", "Date": "2011-04-11T21:27:58Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.mzk.editor.client.view.other.PageNumberingManager.getPageNumberFromText(data[0].getAttributeAsString(Constants.ATTR_NAME))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i < 0) && useRoman) { i = cz.mzk.editor.client.util.ClientCreateUtils.romanToDecimal(data[0].getAttributeAsString(Constants.ATTR_NAME)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/615/buggy-version/editor-common.editor-common-client.src.main.java.cz.mzk.editor.client.view.other.PageNumberingManager.java", "BodyUseAPI": [], "Fixed commit": "b554ca1b937a553c736f37df15cf6c511b0651a2", "Url": "https://api.github.com/repos/MatousJobanek/MEditor", "Date": "2012-10-31T07:53:28Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.collectionspace.services.config.service.AuthorityInstanceType.getTermList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (termListElement == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2871/buggy-version/services.JaxRsServiceProvider.src.main.java.org.collectionspace.services.jaxrs.CSpaceResteasyBootstrap.java", "BodyUseAPI": [], "Fixed commit": "2be3f62ad23503acdf35056e0ccaea5b7b9a06b8", "Url": "https://api.github.com/repos/collectionspace/services", "Date": "2017-11-06T16:08:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Boolean.valueOf(initAuthsString)) == true) { initializeAuthorities(app.getResourceMap()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2871/buggy-version/services.JaxRsServiceProvider.src.main.java.org.collectionspace.services.jaxrs.CSpaceResteasyBootstrap.java", "BodyUseAPI": [], "Fixed commit": "2be3f62ad23503acdf35056e0ccaea5b7b9a06b8", "Url": "https://api.github.com/repos/collectionspace/services", "Date": "2017-11-06T16:08:42Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((taskCount[i]) > 0) pieEntries.add(new com.github.mikephil.charting.data.PieEntry(taskCount[i], taskClass[i]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3559/buggy-version/app.src.main.java.com.example.kit305.tmqapp.dashboard.java", "BodyUseAPI": ["java.util.List<com.github.mikephil.charting.data.PieEntry>.add(com.github.mikephil.charting.data.PieEntry)"], "Fixed commit": "5d9eed1f70393a8224adbc4ab54a6d6e4b068d25", "Url": "https://api.github.com/repos/ThomasEnniss/TMQApp2", "Date": "2017-05-21T08:36:24Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.IInventory.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (stack != null) { growthcraft.core.util.ItemUtils.spawnItemStack(world, x, y, z, stack, rand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5208/buggy-version/src.java.growthcraft.core.common.block.GrcBlockContainer.java", "BodyUseAPI": ["growthcraft.core.util.ItemUtils.spawnItemStack(net.minecraft.world.World,int,int,int,net.minecraft.item.ItemStack,java.util.Random)"], "Fixed commit": "f4dd27da6e6e08e95f86f6da9128e9149c57c602", "Url": "https://api.github.com/repos/Um-Mitternacht/George-Washington-Carver-1.7", "Date": "2016-08-23T03:20:46Z"},
{"Line": "=>776", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((end - start) >= (filereaders.VcfReader.BinMethodThreshold)) largescale = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/605/buggy-version/filereaders.VcfReader.java", "BodyUseAPI": [], "Fixed commit": "06581474e063665d99123b04f58a4d6ad37d1e67", "Url": "https://api.github.com/repos/lrjuan/FGB", "Date": "2015-02-10T11:25:34Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jobGraph.getPackageName()) == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/868/buggy-version/src.main.java.org.tuberlin.de.common.codegenerator.CodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "ed8917d94d704c407b6bbb87b1474f221bd7c7b9", "Url": "https://api.github.com/repos/citmp2015/flink-visual-programming", "Date": "2016-01-20T13:14:08Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(periodic.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (val != 0) { periodic.setSummary(((\"Status every \" + val) + \" seconds\")); }else { periodic.setSummary(\"Status disabled\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8325/buggy-version/Android.src.org.droidplanner.android.fragments.SettingsFragment.java", "BodyUseAPI": ["android.preference.ListPreference.setSummary(java.lang.String)"], "Fixed commit": "724325102f5a84d419b791f28fe8275f7a86aa93", "Url": "https://api.github.com/repos/DroidPlanner/droidplanner", "Date": "2014-08-22T16:01:22Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getApplication()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (droidPlannerApp.getDrone().MavClient.isConnected()) { droidPlannerApp.mNotificationHandler.getTtsNotification().setupPeriodicSpeechOutput(val, droidPlannerApp.getDrone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8325/buggy-version/Android.src.org.droidplanner.android.fragments.SettingsFragment.java", "BodyUseAPI": ["droidPlannerApp.mNotificationHandler.getTtsNotification().setupPeriodicSpeechOutput(int,droidPlannerApp.getDrone())", "org.droidplanner.android.DroidPlannerApp.getDrone()", "droidPlannerApp.mNotificationHandler.getTtsNotification()"], "Fixed commit": "724325102f5a84d419b791f28fe8275f7a86aa93", "Url": "https://api.github.com/repos/DroidPlanner/droidplanner", "Date": "2014-08-22T16:01:22Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.getProvider().decode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((p.getDelay()) != null) && ((p.getDelay().getTotal()) > 0)) { packets = p.getDelay().getPackets(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5815/buggy-version/emsg-sdk-java.src.main.java.com.emsg.client.PacketReader.java", "BodyUseAPI": ["p.getDelay().getPackets()", "com.emsg.client.beans.IPacket<T>.getDelay()"], "Fixed commit": "3ecbd44c07985c18f6c96ccda9d69389a837dc19", "Url": "https://api.github.com/repos/cc14514/emsg_sdk", "Date": "2014-09-02T03:01:17Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (packets != null) client.listener.offlinePacket(packets);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5815/buggy-version/emsg-sdk-java.src.main.java.com.emsg.client.PacketReader.java", "BodyUseAPI": ["client.listener.offlinePacket(java.util.List<com.emsg.client.beans.IPacket<T>>)"], "Fixed commit": "3ecbd44c07985c18f6c96ccda9d69389a837dc19", "Url": "https://api.github.com/repos/cc14514/emsg_sdk", "Date": "2014-09-02T03:01:17Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.admin.printqr.MainActivity.findViewById(R.id.editText)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (text.getText().toString().isEmpty()) { android.widget.Toast.makeText(this, \"Kindly enter any text first\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5017/buggy-version/app.src.main.java.com.example.admin.printqr.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c4a00f3317ada0e1a8440f24b4bd6ab3db8ac054", "Url": "https://api.github.com/repos/msayanece/PrintQR", "Date": "2017-08-25T06:05:11Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wrapped) && ((probe) >= initialProbe)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8475/buggy-version/src.main.java.com.g414.hash.file2.impl.Iterators2.java", "BodyUseAPI": [], "Fixed commit": "770c03f539faf303f06c7e414fb9eee1164abda6", "Url": "https://api.github.com/repos/sunnygleason/g414-hash", "Date": "2012-03-29T14:16:15Z"},
{"Line": "=>831", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_telescope.eastofnorth) { PAval -= _telescope.delta_pa; }else { PAval = (_telescope.delta_pa) - PAval; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2240/buggy-version/usfinder.src.usfinder.java", "BodyUseAPI": [], "Fixed commit": "daaa29acf393f0f2b49c131d13cb3549b42e6cff", "Url": "https://api.github.com/repos/StuartLittlefair/usfinder", "Date": "2015-01-19T16:07:58Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getContentResolver().insert(android.net.Uri,android.content.ContentValues)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (newUri != null) { android.media.MediaScannerConnection.scanFile(context, new java.lang.String[]{ newUri.toString() }, new java.lang.String[]{ mimeType }, null); try { java.lang.Thread.sleep(300); } catch (java.lang.InterruptedException e) { java.lang.System.out.println(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3015/buggy-version/phoneProfilesPlus.src.main.java.sk.henrichg.phoneprofilesplus.FirstStartService.java", "BodyUseAPI": ["android.media.MediaScannerConnection.scanFile(android.content.Context,java.lang.String[],java.lang.String[],<nulltype>)", "android.net.Uri.toString()"], "Fixed commit": "9c4c1ef280e40a2816bb31388cecbf8789a64edd", "Url": "https://api.github.com/repos/henrichg/PhoneProfilesPlus", "Date": "2015-04-15T13:55:07Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (executor == null) { executor = java.util.concurrent.Executors.newCachedThreadPool(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/129/buggy-version/src.main.java.org.http.client.HttpClientAcceptor.java", "BodyUseAPI": [], "Fixed commit": "69add164469fc2c55be032ed13b4f8b3b6a93bd3", "Url": "https://api.github.com/repos/mastery001/core", "Date": "2016-01-28T09:48:12Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_paquetes) != null) { _paquetes = new java.util.ArrayList<com.ofertaPaquetes.dtos.PaqueteDTO>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3594/buggy-version/OfertaPaquetesWebSite.src.com.ofertaPaquetes.Paquetes.Paquetes.java", "BodyUseAPI": [], "Fixed commit": "579e0482c7d2156d121e88ea1283d3febd11b8b8", "Url": "https://api.github.com/repos/pablotese/IntegracionAplicaciones", "Date": "2017-11-11T15:29:52Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.worldObj.isRemote) return stack;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8445/buggy-version/src.main.java.blusunrize.immersiveengineering.common.items.ItemManeuverGear.java", "BodyUseAPI": [], "Fixed commit": "6104ace93ff69dd55693f2db778516873b47a11b", "Url": "https://api.github.com/repos/malte0811/ImmersiveEngineering", "Date": "2016-05-21T15:42:17Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.type) instanceof ast.type.Class) this.tmpVars.add(new codegen.C.dec.Dec(new codegen.C.type.Class(s.type.toString()), tmpid)); else this.tmpVars.add(new codegen.C.dec.Dec(new codegen.C.type.IntArray(), tmpid));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8639/buggy-version/src.codegen.C.TranslateVisitor.java", "BodyUseAPI": ["java.util.LinkedList<codegen.C.stm.T>.add(codegen.C.dec.Dec)", "s.type.toString()"], "Fixed commit": "d4bb59ba092b615844fdfde7dac7183d078b3f60", "Url": "https://api.github.com/repos/xudifsd/tiger", "Date": "2013-12-17T03:20:08Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) adapter.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8340/buggy-version/android.android.main.src.sneer.android.main.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9ebff109cacbd7612db98e4832a553244f3a9180", "Url": "https://api.github.com/repos/sneerteam/sneer", "Date": "2014-10-20T17:55:52Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.getStatusId().intValue()) == (PayloadStatus.Pending0)) { message.setStatusId(PayloadStatus.Pending); message.setTotalUsers(0); PayloadServiceImpl.instance.add(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2604/buggy-version/Gateway.src.main.java.com.argo.qpush.gateway.dispatch.OneSendThread.java", "BodyUseAPI": ["com.argo.qpush.gateway.dispatch.Payload.setTotalUsers(int)", "com.argo.qpush.gateway.dispatch.Payload.setStatusId(PayloadStatus.Pending)", "PayloadServiceImpl.instance.add(com.argo.qpush.gateway.dispatch.Payload)"], "Fixed commit": "f29368c10f75c6bc3c69628865de3f87cbffa6f1", "Url": "https://api.github.com/repos/yamingd/QPush", "Date": "2015-07-12T02:23:48Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c.getType().equals(\"varchar2\")) { declarationLine += (((\"l_\" + (c.getColumnName())) + \" \") + (c.getType())) + \"(4000);\"; }else if (c.getType().equals(\"number\")) { declarationLine += (((\"l_\" + (c.getColumnName())) + \" \") + (c.getType())) + \"(38);\"; }else if ((c.getType().equals(\"date\")) || (c.getType().equals(\"boolean\"))) { declarationLine += ((\"l_\" + (c.getColumnName())) + \" \") + (c.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8086/buggy-version/src.generator.Generator.java", "BodyUseAPI": ["domain.Column.getType()", "c.getType().equals(java.lang.String)", "domain.Column.getType()", "domain.Column.getColumnName()", "domain.Column.getType()", "domain.Column.getType()", "domain.Column.getType()", "c.getType().equals(java.lang.String)", "domain.Column.getType()", "domain.Column.getColumnName()", "c.getType().equals(java.lang.String)", "domain.Column.getColumnName()"], "Fixed commit": "a9a7146b1ac5a2707b86a10425789385186ba3a8", "Url": "https://api.github.com/repos/projectblok6/yolo-octo-dangerzone", "Date": "2015-01-26T15:55:08Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(appArchive.exists(\"META-INF/application.xml\"))) { if (aModule.getModuleType().equals(com.sun.enterprise.deployment.util.DOLUtils.warType())) { com.sun.enterprise.deployment.WebBundleDescriptor wbd = ((com.sun.enterprise.deployment.WebBundleDescriptor) (descriptor)); if (((wbd.getContextRoot()) != null) && (!(wbd.getContextRoot().equals(\"\")))) aModule.setContextRoot(wbd.getContextRoot()); else aModule.setContextRoot(aModule.getModuleName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6913/buggy-version/appserver.deployment.dol.src.main.java.com.sun.enterprise.deployment.archivist.ApplicationArchivist.java", "BodyUseAPI": [], "Fixed commit": "c63944130aabdb9fb71630b1326aedaec786fc94", "Url": "https://api.github.com/repos/h2002044/glassfish", "Date": "2017-07-10T10:50:26Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mCustomer)) { android.widget.Toast.makeText(mContext, \"\u8bf7\u9009\u62e9\u5ba2\u6237!\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1543/buggy-version/crm.src.main.java.com.ogg.crm.ui.activity.SmsSendActivity.java", "BodyUseAPI": [], "Fixed commit": "7f780558ed119a8c2adcbfb406395e003ed2d303", "Url": "https://api.github.com/repos/xiguofeng/Crm", "Date": "2015-12-10T06:03:11Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState == null) { websiteSelection = ((com.dannybit.tuneflow.fragments.search.WebsiteSelection) (getIntent().getSerializableExtra(\"SELECTION\"))); }else { websiteSelection = ((com.dannybit.tuneflow.fragments.search.WebsiteSelection) (savedInstanceState.getSerializable(\"SELECTION\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4884/buggy-version/app.src.main.java.com.dannybit.tuneflow.SearchSongActivity.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "3aa16dffc5d3a862be316f68f1ca02dd774a2d89", "Url": "https://api.github.com/repos/dannybit/TuneFlow", "Date": "2015-07-22T04:13:24Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((nodeModel.executor) != null) { stdout = ((nodeModel.executor.getToolOutput()) != null) ? nodeModel.executor.getToolOutput() : \"\"; stderr = ((nodeModel.executor.getToolErrorOutput()) != null) ? nodeModel.executor.getToolErrorOutput() : \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7410/buggy-version/com.genericworkflownodes.knime.base_plugin.src.com.genericworkflownodes.knime.generic_node.GenericKnimeNodeView.java", "BodyUseAPI": [], "Fixed commit": "7535025e866bc2cfab1ae2d4bc62a94488e12a90", "Url": "https://api.github.com/repos/genericworkflownodes/GenericKnimeNodes", "Date": "2013-01-30T17:24:19Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(new java.io.File(\"serialized.bin\").exists())) { makeRooms(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2139/buggy-version/Hotel.java", "BodyUseAPI": [], "Fixed commit": "df59cc0233894560c5f6994c4e23ef8f044a790d", "Url": "https://api.github.com/repos/farhantamam/dark-ninja", "Date": "2016-12-10T23:57:20Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((article.author) == null) { article.author = \"unknow\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8560/buggy-version/app.src.main.java.com.durrutia.dnews.model.Article.java", "BodyUseAPI": [], "Fixed commit": "e6841407736bebf6f25717113d1237fa937ee438", "Url": "https://api.github.com/repos/godiecl/DISC-News", "Date": "2017-11-22T13:49:47Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.authdb.util.Config.hasBackpack) { theinv = new org.bukkit.inventory.ItemStack[252]; }else { theinv = new org.bukkit.inventory.ItemStack[36]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7413/buggy-version/src.main.java.com.authdb.listeners.AuthDBPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "8a83eec636a8f74d14d357b41129efc1ae835a77", "Url": "https://api.github.com/repos/CraftFire/AuthDB", "Date": "2011-07-27T01:52:26Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dto.getCertificateAcademicRank().getDocId()) == 0) && (((dto.getCertificateAcademicRank().getFile()) == null) || (dto.getCertificateAcademicRank().getFile().isEmpty()))) { err.rejectValue(\"userOrdinaturDetailDto.certificateAcademicRank.file\", \"required.field\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4190/buggy-version/gde-webapp.src.main.java.com.nagarro.gde.validator.UserOrdinaturValidator.java", "BodyUseAPI": [], "Fixed commit": "75ddf26449875bd67b345c6fa051fe9c2947ee81", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-01-10T08:03:06Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dto.getCertificateOrdinatur().getDocId()) == 0) && (((dto.getCertificateOrdinatur().getFile()) == null) || (dto.getCertificateOrdinatur().getFile().isEmpty()))) { err.rejectValue(\"userOrdinaturDetailDto.certificateOrdinatur.file\", \"required.field\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4190/buggy-version/gde-webapp.src.main.java.com.nagarro.gde.validator.UserOrdinaturValidator.java", "BodyUseAPI": [], "Fixed commit": "75ddf26449875bd67b345c6fa051fe9c2947ee81", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-01-10T08:03:06Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.photon.phresco.service.dao.ApplicationTypeDAO.getTechGroupIds()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(techGroups)) { for (java.lang.String techGroupId : techGroups) { deleteTechGroup(techGroupId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8005/buggy-version/phresco-service-web.src.main.java.com.photon.phresco.service.rest.api.ComponentService.java", "BodyUseAPI": [], "Fixed commit": "eaedf4403f4e08b20d5a880901dd0c68f41de497", "Url": "https://api.github.com/repos/phresco/service", "Date": "2012-11-27T13:56:33Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (filter == null) filter = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3377/buggy-version/src.main.java.net.continuumsecurity.jbehave.JUnitStoryRunner.java", "BodyUseAPI": [], "Fixed commit": "72ee73b9f443efae23357000fee5b3acf53ba058", "Url": "https://api.github.com/repos/continuumsecurity/bdd-security", "Date": "2015-04-26T15:57:58Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotifyWorkflow()) { updateWorkflowStatus(status, coded); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7605/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.file.MirrorFileTaskCompleter.java", "BodyUseAPI": [], "Fixed commit": "833b1610134d0749adef7b9c0f83d800fd50986f", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-27T13:03:24Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (frac != 0.0) rectangle.setVisible(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9138/buggy-version/src.main.java.org.geepawhill.contentment.LabelBoxStep.java", "BodyUseAPI": [], "Fixed commit": "9245050ed659b0927fd2a9fab7def07e5c3f7469", "Url": "https://api.github.com/repos/GeePawHill/contentment", "Date": "2016-08-02T16:17:54Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.region.table(DyFriends.TBL).frame().through(new com.jcabi.dynamo.QueryValve()).where(DyFriends.HASH, com.jcabi.dynamo.Conditions.equalTo(this.bout)).where(DyFriends.RANGE, com.jcabi.dynamo.Conditions.equalTo(this.self)).iterator().next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (item.has(DyFriends.ATTR_UNREAD)) { unread = java.lang.Long.parseLong(item.get(DyFriends.ATTR_UNREAD).getN()); }else { unread = 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1715/buggy-version/netbout-web.src.main.java.com.netbout.dynamo.DyMessages.java", "BodyUseAPI": ["java.lang.Long.parseLong(item.get(DyFriends.ATTR_UNREAD).getN())", "com.jcabi.dynamo.Item.get(DyFriends.ATTR_UNREAD)", "item.get(DyFriends.ATTR_UNREAD).getN()"], "Fixed commit": "010c2e5d69663229b72ca736c79418bad2f65e20", "Url": "https://api.github.com/repos/netbout/netbout", "Date": "2014-05-26T14:57:26Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) == null) { throw new java.lang.RuntimeException(\"Null Connection\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/613/buggy-version/src.main.java.com.kylepfromer.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "fead4c1462bb40ec4adbf415f4717142a050676a", "Url": "https://api.github.com/repos/kpfromer/HomeWorkManager", "Date": "2016-11-27T00:02:43Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.redomar.game.Game.getDummy()) != null) { com.redomar.game.Game.getLevel().removeEntity(com.redomar.game.Game.getDummy()); com.redomar.game.Game.setNpc(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9093/buggy-version/src.com.redomar.game.Game.java", "BodyUseAPI": [], "Fixed commit": "b078b8b0a477f236ef129fbef5ebeccb51461d0b", "Url": "https://api.github.com/repos/redomar/JavaGame", "Date": "2014-09-01T01:36:37Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.redomar.game.Game.getDummy()) != null) { com.redomar.game.Game.getLevel().removeEntity(com.redomar.game.Game.getDummy()); com.redomar.game.Game.setNpc(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9093/buggy-version/src.com.redomar.game.Game.java", "BodyUseAPI": [], "Fixed commit": "b078b8b0a477f236ef129fbef5ebeccb51461d0b", "Url": "https://api.github.com/repos/redomar/JavaGame", "Date": "2014-09-01T01:36:37Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.nbt.NBTTagCompound.getTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (nbt instanceof net.minecraft.nbt.NBTTagIntArray) { com.google.gson.JsonArray array = new com.google.gson.JsonArray(); net.minecraft.nbt.NBTTagIntArray intArray = ((net.minecraft.nbt.NBTTagIntArray) (nbt)); for (int i : intArray.func_150302_c()) { array.add(new com.google.gson.JsonPrimitive(i)); } keyObject.add(\"value\", array); }else { throw new java.lang.IllegalArgumentException((((\"NBT to JSON converter doesn't support the nbt tag: \" + (net.minecraft.nbt.NBTBase.NBTTypes[nbt.getId()])) + \", tag: \") + nbt)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4479/buggy-version/src.pneumaticCraft.common.util.NBTToJsonConverter.java", "BodyUseAPI": ["net.minecraft.nbt.NBTBase.getId()"], "Fixed commit": "6a1b998bd99d7eda2726a474dadbc6aa4f588302", "Url": "https://api.github.com/repos/AnodeCathode/PneumaticCraft", "Date": "2015-12-06T19:17:17Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.flower.rmt.service.IInvitationManager.loadById(invitation.getId(),Invitation_.event,Invitation_.user)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (origInvitation.getEvent().isCanceled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1985/buggy-version/rmt.src.main.java.de.flower.rmt.service.ActivityManager.java", "BodyUseAPI": [], "Fixed commit": "ae72e74c05ac59ca451c5a1e809df15c9e680ac6", "Url": "https://api.github.com/repos/flowerrrr/RMT", "Date": "2012-06-08T15:08:15Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((member.getColor()) == null) { member.setColor(mlproject.fuzzy.FuzzyVariable.memberShipColors[((memberShipFunctions.size()) % (mlproject.fuzzy.FuzzyVariable.memberShipColors.length))]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2361/buggy-version/src.mlproject.fuzzy.FuzzyVariable.java", "BodyUseAPI": ["mlproject.fuzzy.MemberShip.setColor(java.awt.Color)"], "Fixed commit": "4afd054e7eb85d67e1bd6c38cd1474c8fe596854", "Url": "https://api.github.com/repos/samynk/ML", "Date": "2014-09-01T08:23:07Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getRulesRepository().containsSnapshot(packageName, snapshotName)) { getRulesRepository().removePackageSnapshot(packageName, snapshotName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5042/buggy-version/guvnor-webapp.src.main.java.org.drools.guvnor.server.RepositoryPackageOperations.java", "BodyUseAPI": ["org.drools.repository.RulesRepository.removePackageSnapshot(java.lang.String,java.lang.String)"], "Fixed commit": "e80cb13b0a6831329edad950c3b8a28a890f6685", "Url": "https://api.github.com/repos/droolsjbpm/guvnor", "Date": "2012-05-10T07:38:21Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.rmen.sunrisesunset.SunriseSunset.getSunriseSunset(java.util.Calendar,double,double)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sunriseSunset == null) { int month = today.get(java.util.Calendar.MONTH); if (latitude > 0) { if ((month >= 3) && (month <= 10)) { return false; }else { return true; } }else { if ((month >= 3) && (month <= 10)) { return true; }else { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3274/buggy-version/library.src.main.java.ca.rmen.sunrisesunset.SunriseSunset.java", "BodyUseAPI": [], "Fixed commit": "13abb054374b74fc9a6b3289ef4aa0a4142ff97a", "Url": "https://api.github.com/repos/caarmen/SunriseSunset", "Date": "2015-05-16T18:38:29Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((andList.size()) > 0) { queryText.append(\"WHERE \"); andList.buildClause(queryText); queryText.append(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/451/buggy-version/app.org.tdl.vireo.model.jpa.JpaSubmissionRepositoryImpl.java", "BodyUseAPI": ["org.tdl.vireo.model.jpa.JpaSubmissionRepositoryImpl.ANDList.buildClause(java.lang.StringBuilder)"], "Fixed commit": "ca3a21fb4f5b484d3dd1a91d578efcc2c4b9eb55", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2012-06-20T18:36:52Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((andList.size()) > 0) { queryText.append(\"WHERE \"); andList.buildClause(queryText); queryText.append(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/451/buggy-version/app.org.tdl.vireo.model.jpa.JpaSubmissionRepositoryImpl.java", "BodyUseAPI": ["org.tdl.vireo.model.jpa.JpaSubmissionRepositoryImpl.ANDList.buildClause(java.lang.StringBuilder)"], "Fixed commit": "ca3a21fb4f5b484d3dd1a91d578efcc2c4b9eb55", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2012-06-20T18:36:52Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fragment == null) { getFragmentManager().beginTransaction().add(R.id.fragment_holder, movies.movieDetails.MovieDetailFragment.newInstance(((movies.abhimaan.com.popularmovies1.MovieDetailsModel) (getIntent().getParcelableExtra(MovieDetailFragment.ARG_PARAM1)))), TAGMOVIEDETAILS).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5043/buggy-version/app.src.main.java.movies.movieDetails.MovieDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "7e3950ea142b7d3735e051c846f80de2993a2ba6", "Url": "https://api.github.com/repos/abhimaanmadhav/PopularMovie", "Date": "2016-02-04T12:21:34Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<net.atomarea.flowx.entities.Message>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tMessage.getEncryption()) == (net.atomarea.flowx.entities.Message.ENCRYPTION_NONE)) tRow.findViewById(R.id.message_security).setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6855/buggy-version/src.main.java.net.atomarea.flowx.ui.FxUi.java", "BodyUseAPI": [], "Fixed commit": "bbb814af6bfbf9927535401945315f1d277d227d", "Url": "https://api.github.com/repos/atomarea/FlowX", "Date": "2016-05-11T10:40:19Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (change) mFooter.addView(getLayoutInflater().inflate(R.layout.fx_msg_input, mFooter, false));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6855/buggy-version/src.main.java.net.atomarea.flowx.ui.FxUi.java", "BodyUseAPI": [], "Fixed commit": "bbb814af6bfbf9927535401945315f1d277d227d", "Url": "https://api.github.com/repos/atomarea/FlowX", "Date": "2016-05-11T10:40:19Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (change) mFooter.removeAllViews();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6855/buggy-version/src.main.java.net.atomarea.flowx.ui.FxUi.java", "BodyUseAPI": [], "Fixed commit": "bbb814af6bfbf9927535401945315f1d277d227d", "Url": "https://api.github.com/repos/atomarea/FlowX", "Date": "2016-05-11T10:40:19Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((range) == 0) { saturation = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7335/buggy-version/src.main.java.makeo.gadomancy.common.blocks.tiles.TileBlockProtector.java", "BodyUseAPI": [], "Fixed commit": "1b5a2e0ccd8c4ebc337ba4f24224d6da312ca9e5", "Url": "https://api.github.com/repos/makeoo/Gadomancy", "Date": "2015-11-15T15:32:06Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["maybeSmtpConfiguration.get().getEmailConfiguration().get(com.hubspot.singularity.config.EmailConfigurationEnums.EmailType)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fromMap == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2574/buggy-version/SingularityService.src.main.java.com.hubspot.singularity.smtp.SingularityMailer.java", "BodyUseAPI": [], "Fixed commit": "43b7ea608e27aa2c78cf3af2d3988db52a8ee3f2", "Url": "https://api.github.com/repos/jloisel/Singularity", "Date": "2014-09-28T06:34:06Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bukkitPlayer.getBedSpawnLocation()) != null) return new com.andune.minecraft.commonlib.server.bukkit.BukkitLocation(bukkitPlayer.getBedSpawnLocation()); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1555/buggy-version/src.main.java.com.andune.minecraft.commonlib.server.bukkit.BukkitPlayer.java", "BodyUseAPI": ["com.andune.minecraft.commonlib.server.api.Player.getBedSpawnLocation()"], "Fixed commit": "82bf4149d5df1406053137b232cc765cb93475ad", "Url": "https://api.github.com/repos/andune/anduneCommonBukkitLib", "Date": "2014-12-19T16:58:45Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dUnits > 10000) { throw new uk.chromis.basic.BasicException(uk.chromis.pos.forms.AppLocal.getIntString(\"message.valuetoolarge\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2464/buggy-version/src-pos.uk.chromis.pos.inventory.StockDiaryEditor.java", "BodyUseAPI": [], "Fixed commit": "d9043035314decca5d41c52c80f3a0bbaf735a30", "Url": "https://api.github.com/repos/ChromisPos/ChromisPOS", "Date": "2017-08-07T18:52:54Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.appointment.getStatus()) != (ch.bfh.bti7081.s2017.grey.database.entity.AppointmentStatus.FINISHED)) { if (this.isEditMode()) { this.appointmentService.editAppointment(appointment); }else { this.appointmentService.createAppointment(this.appointment.getPatient(), this.appointment.getStaff(), this.appointment.getDescription(), this.appointment.getTitle(), this.appointment.getDate(), this.appointment.getEndDate()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/174/buggy-version/src.main.java.ch.bfh.bti7081.s2017.grey.ui.appointment.AppointmentModel.java", "BodyUseAPI": ["ch.bfh.bti7081.s2017.grey.database.entity.Appointment.getTitle()", "ch.bfh.bti7081.s2017.grey.database.entity.Appointment.getPatient()", "ch.bfh.bti7081.s2017.grey.database.entity.Appointment.getEndDate()", "ch.bfh.bti7081.s2017.grey.database.entity.Appointment.getStaff()", "ch.bfh.bti7081.s2017.grey.database.entity.Appointment.getDescription()", "ch.bfh.bti7081.s2017.grey.database.entity.Appointment.getDate()", "ch.bfh.bti7081.s2017.grey.service.AppointmentService.createAppointment(this.appointment.getPatient(),this.appointment.getStaff(),this.appointment.getDescription(),this.appointment.getTitle(),this.appointment.getDate(),this.appointment.getEndDate())"], "Fixed commit": "1f969afa46486911324cea1ffdd6d3cd58afa9e1", "Url": "https://api.github.com/repos/TeamGrey/ch.bfh.bti7081.s2017.grey", "Date": "2017-06-15T14:43:00Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.util.Arrays.asList(allowedDomains).contains(originHeader)) { ((javax.servlet.http.HttpServletResponse) (servletResponse)).addHeader(\"Access-Control-Allow-Origin\", originHeader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8680/buggy-version/ViewController.src.home.utiliy.hp.svc.view.filter.ResponseFilter.java", "BodyUseAPI": ["javax.servlet.ServletResponse.addHeader(java.lang.String,java.lang.String)"], "Fixed commit": "d0096c920902b473a14e3b6b077c46502888badd", "Url": "https://api.github.com/repos/anirbmuk/HpService", "Date": "2017-11-29T13:53:56Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.uaihebert.uaimockserver.model.UaiMockServerConfig.getRouteList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (uaiRouteList.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1248/buggy-version/src.main.java.com.uaihebert.uaimockserver.model.UaiMockServerConfig.java", "BodyUseAPI": [], "Fixed commit": "4746b51519c57a42572ea1c66e8ebf0f86168b4e", "Url": "https://api.github.com/repos/uaihebert/uaiMockServer", "Date": "2015-02-23T18:51:33Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((date) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6770/buggy-version/src.com.sl.mimc.EntryActivity.java", "BodyUseAPI": [], "Fixed commit": "f5da62bfc3e6e3e90a7659a2c9a20391e9f73321", "Url": "https://api.github.com/repos/sleutho/MiMC", "Date": "2012-04-13T02:38:05Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (range == 0) { entries.add(new com.github.mikephil.charting.data.PieEntry(100, (\"\\u0434\\u043d\\u0435\\u0441\\n\" + points))); }else { entries.add(new com.github.mikephil.charting.data.PieEntry(points, \"\u0434\u043d\u0435\u0441\")); entries.add(new com.github.mikephil.charting.data.PieEntry((range - points), \"\u043e\u0441\u0442\u0430\u0432\u0430\u0442\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7757/buggy-version/app.src.main.java.bg.softuni.softuniada.studyrise.Fragments.OverviewProductivityFragment.java", "BodyUseAPI": ["java.util.ArrayList<com.github.mikephil.charting.data.PieEntry>.add(com.github.mikephil.charting.data.PieEntry)"], "Fixed commit": "a8377722c84226a6f0166433e7fedb28ddcdf085", "Url": "https://api.github.com/repos/AleksandarKovachev/StudyRise", "Date": "2017-01-04T19:45:28Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (range == 0) data.setValueFormatter(new com.github.mikephil.charting.formatter.PercentFormatter()); else data.setValueFormatter(new com.github.mikephil.charting.formatter.LargeValueFormatter());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7757/buggy-version/app.src.main.java.bg.softuni.softuniada.studyrise.Fragments.OverviewProductivityFragment.java", "BodyUseAPI": [], "Fixed commit": "a8377722c84226a6f0166433e7fedb28ddcdf085", "Url": "https://api.github.com/repos/AleksandarKovachev/StudyRise", "Date": "2017-01-04T19:45:28Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["petablox.project.ClassicProject.g().getTrgt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(petablox.project.ClassicProject.g().isTrgtDone(d))) { petablox.project.ClassicProject.g().getTaskProducingTrgt(d).run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3722/buggy-version/src.petablox.util.soot.SootUtilities.java", "BodyUseAPI": ["petablox.project.ClassicProject.g().getTaskProducingTrgt(petablox.project.analyses.ProgramDom)", "petablox.project.ClassicProject.g().getTaskProducingTrgt(d).run()"], "Fixed commit": "afba0b97ad8b36bf27228e595827ecba31eb1bd2", "Url": "https://api.github.com/repos/petablox-project/petablox", "Date": "2016-01-19T06:48:07Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ThreadLocal<java.sql.Connection>.get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (conn != localConn) { _releaseConnection(conn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7916/buggy-version/bundle_framework.src.ddth.dasp.framework.bo.jdbc.BaseJdbcBoManager.java", "BodyUseAPI": ["ddth.dasp.framework.bo.jdbc.BaseJdbcBoManager._releaseConnection(java.sql.Connection)"], "Fixed commit": "cd27ffb85de35d2c424c9cdf06143aff31133eb0", "Url": "https://api.github.com/repos/DDTH/DASP", "Date": "2013-01-20T07:56:45Z"},
{"Line": "=>1779", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((peer_socket) == null) { gcb.Main.println(6, ((\"[GInterface \" + (id)) + \"] Failed to send lookup: peer socket not initialized\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3695/buggy-version/src.gcb.GarenaInterface.java", "BodyUseAPI": [], "Fixed commit": "209eee24fc6ab4098add8832df46196bf99de0fc", "Url": "https://api.github.com/repos/uakfdotb/gcb", "Date": "2014-05-27T01:50:28Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.xqhs.util.XML.XMLTree.XMLNode.getAttributeValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (platformName == null) platformName = defaultPlatform;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1363/buggy-version/src.tatami.simulation.Boot.java", "BodyUseAPI": [], "Fixed commit": "2d9f92892965d79b44e5427d1be232473e9f1a0e", "Url": "https://api.github.com/repos/tATAmI-Project/tATAmI-PC", "Date": "2016-01-29T12:47:01Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.Integer, java.util.List<org.twodividedbyzero.idea.findbugs.gui.tree.model.BugInstanceGroupNode>>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (map != null) { for (final java.util.Map.Entry<java.lang.Integer, java.util.List<org.twodividedbyzero.idea.findbugs.gui.tree.model.BugInstanceGroupNode>> entry : map.entrySet()) { final java.util.List<org.twodividedbyzero.idea.findbugs.gui.tree.model.BugInstanceGroupNode> groupNodes = entry.getValue(); for (final org.twodividedbyzero.idea.findbugs.gui.tree.model.BugInstanceGroupNode groupNode : groupNodes) { final java.util.List<org.twodividedbyzero.idea.findbugs.gui.tree.model.VisitableTreeNode> bugInstanceNodes = groupNode.getChildsList(); for (final org.twodividedbyzero.idea.findbugs.gui.tree.model.VisitableTreeNode node : bugInstanceNodes) { final edu.umd.cs.findbugs.BugInstance bug = ((org.twodividedbyzero.idea.findbugs.gui.tree.model.BugInstanceNode) (node)).getBugInstance(); if (bug.equals(bugInstance)) { return ((org.twodividedbyzero.idea.findbugs.gui.tree.model.BugInstanceNode) (node)); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9112/buggy-version/src.src.impl.org.twodividedbyzero.idea.findbugs.gui.tree.model.GroupTreeModel.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.util.List<org.twodividedbyzero.idea.findbugs.gui.tree.model.BugInstanceGroupNode>>.entrySet()"], "Fixed commit": "2f190dc55f03a596da7635736615390f73da6951", "Url": "https://api.github.com/repos/andrepdo/findbugs-idea", "Date": "2015-05-19T21:04:25Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.netmanagers.api.SQL.sqlQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (result.next()) { if ((result.getInt(1)) == 0) { log.warning(((((((\"There are no rows containing \" + keyName) + \" in the \") + keyColumn) + \" column, on the \") + tableName) + \" table.\")); } }else { log.warning((\"Empty result set while checking: \" + yamlKeyName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1076/buggy-version/src.org.ruhlendavis.mc.communitybridge.Configuration.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "5216417128d5d7d3c3ce02d527b47cb65ddcda86", "Url": "https://api.github.com/repos/iain-davis/CommunityBridge", "Date": "2013-02-26T20:38:47Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (partial >= (partials_.length)) partial -= partials_.length;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5434/buggy-version/src.org.none.noise.BandPassWhiteNoiseSource.java", "BodyUseAPI": [], "Fixed commit": "6b48e4e18649a22234a902349d4e58ef835711f2", "Url": "https://api.github.com/repos/tpurtell/MaskedNoise", "Date": "2011-07-23T07:23:35Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bundle == null) { android.util.Log.e(getClass().getName(), \"Missing intent extras.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8675/buggy-version/serenity-app.src.main.java.us.nineworlds.serenity.core.services.MusicTrackRetrievalIntentService.java", "BodyUseAPI": [], "Fixed commit": "8b2a31f748cb38c452a5a82d82fb1c2cebb5dd79", "Url": "https://api.github.com/repos/NineWorlds/serenity-android", "Date": "2014-08-18T17:55:59Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == 0) throw new java.lang.RuntimeException(RedisClient.i18nFile.getText(I18nFile.CMDEXCEPTION));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6415/buggy-version/src.main.java.com.cxy.redisclient.integration.protocol.RedisSession.java", "BodyUseAPI": [], "Fixed commit": "dfc1dd1ba05bd0418ad6e9f0b7280db88369c251", "Url": "https://api.github.com/repos/caoxinyu/RedisClient", "Date": "2014-09-08T16:15:54Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 23) { fraction = animator.getAnimatedFraction(); }else { fraction = ((animator.getDuration()) > 0) ? ((float) (animator.getCurrentPlayTime())) / (animator.getDuration()) : 0.0F; fraction = java.lang.Math.min(fraction, 1.0F); fraction = animator.getInterpolator().getInterpolation(fraction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/922/buggy-version/library-circular.src.main.java.fr.castorflex.android.circularprogressbar.Utils.java", "BodyUseAPI": [], "Fixed commit": "480bde918e4cbb0f71e7b57769b954706b2f410d", "Url": "https://api.github.com/repos/castorflex/SmoothProgressBar", "Date": "2017-06-26T19:11:45Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getPlayer().getGameMode()) != (org.bukkit.GameMode.CREATIVE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3997/buggy-version/src.main.java.org.simiancage.bukkit.TheMonkeyPack.events.CSBlockEvent.java", "BodyUseAPI": [], "Fixed commit": "2a1f60e52ab24858040f4759bdbf8d8868e6d37f", "Url": "https://api.github.com/repos/dredhorse/TheMonkeyPack", "Date": "2012-04-10T17:04:56Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((memoryManager.nextReference()) == false) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5103/buggy-version/src.SwingWindow.java", "BodyUseAPI": [], "Fixed commit": "d2ae6f12e7a74238bfba1a427c615c05e5ff19bd", "Url": "https://api.github.com/repos/calkinsd9/CIS453Prog3", "Date": "2017-11-30T03:09:35Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newestFile != null) { newestFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7186/buggy-version/src.main.scala.com.builtbroken.mc.core.deps.DepDownloader.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "ca4658b644e836219d4334284e5fa8a5e06870a8", "Url": "https://api.github.com/repos/VoltzEngine-Project/Engine", "Date": "2015-10-13T06:30:36Z"},
{"Line": "=>713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.activeEntities) != null) { activeEntities.remove(entityTuple); }else { passiveEntities.remove(entityTuple); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2722/buggy-version/passthrough-server.src.main.java.org.terracotta.passthrough.PassthroughServerProcess.java", "BodyUseAPI": [], "Fixed commit": "71dcb3ad258de1a9d75643398a072b1d8e13896b", "Url": "https://api.github.com/repos/ljacomet/tc-passthrough-testing", "Date": "2017-01-31T09:33:44Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((configurationService.getIntValue(\"http.port\")) > 0) { return (localAddress.getPort()) == (configurationService.getIntValue(\"http.port\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9183/buggy-version/hypersocket-server.src.main.java.com.hypersocket.server.HypersocketServerImpl.java", "BodyUseAPI": ["com.hypersocket.config.SystemConfigurationService.getIntValue(java.lang.String)"], "Fixed commit": "c08d2003a564568abe5aa91f9aeb5bf889a8d098", "Url": "https://api.github.com/repos/ludup/hypersocket-framework", "Date": "2014-10-15T15:53:05Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(attributeName)) { localizer.removeLocalizedValue(key, LocalizedObjectTypes.CUSTOM_ATTRIBUTE_NAME, language); }else { localizer.storeLocalizedResource(language, key, LocalizedObjectTypes.CUSTOM_ATTRIBUTE_NAME, attributeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5006/buggy-version/oscm-accountmgmt-intsvc.javasrc.org.oscm.accountservice.dataaccess.UdaDefinitionAccess.java", "BodyUseAPI": ["org.oscm.i18nservice.local.LocalizerServiceLocal.storeLocalizedResource(java.lang.String,long,LocalizedObjectTypes.CUSTOM_ATTRIBUTE_NAME,java.lang.String)"], "Fixed commit": "a68c2d0415948290d29f87169bc019622e4866e6", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-12-21T09:19:31Z"},
{"Line": "=>7055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (force) { ((org.pentaho.di.base.AbstractMeta) (tabObject)).setChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7025/buggy-version/ui.src.org.pentaho.di.ui.spoon.Spoon.java", "BodyUseAPI": [], "Fixed commit": "1bca5d84f4e6f8962c6b50404470a6f19c3d6cc7", "Url": "https://api.github.com/repos/jmcrfp/pentaho-kettle", "Date": "2017-01-18T19:45:41Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.dreammaster.main.MainRegistry.CoreConfig.ModCustomFuels_Enabled) pEvent.registerServerCommand(new com.dreammaster.command.CustomFuelsCommand());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8814/buggy-version/src.main.java.com.dreammaster.main.MainRegistry.java", "BodyUseAPI": [], "Fixed commit": "56e111e0655e871287bf20398010e16d10f4c572", "Url": "https://api.github.com/repos/GTNewHorizons/NewHorizonsCoreMod", "Date": "2015-07-20T16:25:37Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((joypadIndex) >= 0) { java.util.List<java.lang.Integer> singleDirectionAxisExit = com.shiny.joypadmod.ControllerSettings.getSingleDirectionAxis(joypadIndex); for (int i = 0; i < (org.lwjgl.input.Controllers.getController(joypadIndex).getAxisCount()); i++) { if ((singleDirectionAxisSaved.contains(i)) != (singleDirectionAxisExit.contains(i))) com.shiny.joypadmod.ControllerSettings.toggleSingleDirectionAxis(joypadIndex, i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/617/buggy-version/MinecraftJoypadSplitscreenMod.src.main.java.com.shiny.joypadmod.minecraftExtensions.JoypadCalibrationMenu.java", "BodyUseAPI": [], "Fixed commit": "2cfba98c4e53e5747ad4fde6c5a7759e8034be40", "Url": "https://api.github.com/repos/ljsimin/MinecraftJoypadSplitscreenMod", "Date": "2016-02-19T21:27:51Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values.length) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3865/buggy-version/src.main.mondrian.rolap.agg.DenseDoubleSegmentDataset.java", "BodyUseAPI": [], "Fixed commit": "e3771dc03fbbc24a2106569e960c546cd22b2fae", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2013-07-08T16:36:24Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((te) != null) && (te.isInvalid())) te = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2332/buggy-version/src.pneumaticCraft.common.util.TileEntityCache.java", "BodyUseAPI": [], "Fixed commit": "1fd23e88e26e8f79c117992c0605ed800e67ea02", "Url": "https://api.github.com/repos/DarkStarDS9/PneumaticCraft", "Date": "2015-01-19T17:08:52Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p_correspondingRequest == null) { throw new de.hhu.bsinfo.dxnet.core.NetworkRuntimeException((\"Setting corresponding request NULL to response \" + (this))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1718/buggy-version/src.de.hhu.bsinfo.dxnet.core.Response.java", "BodyUseAPI": [], "Fixed commit": "9470b73e22a8e5bcfcb3565ea146a7b0756a62e0", "Url": "https://api.github.com/repos/hhu-bsinfo/dxram", "Date": "2017-11-05T14:55:34Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((results.length) == 4) this.setUserId(results[3]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2885/buggy-version/src.HBCIPassportDDVExt.java", "BodyUseAPI": ["HBCIPassportDDVExt.setUserId(java.lang.String)"], "Fixed commit": "37779a557953672ecf1a78fe3f0fa422a41f1f0a", "Url": "https://api.github.com/repos/pecuniabanking/pecunia-server", "Date": "2015-11-11T19:58:31Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((ccode != null) && ((ccode.length()) > 0)) this.setCountry(org.kapott.hbci.datatypes.SyntaxCtr.getName(ccode));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2885/buggy-version/src.HBCIPassportDDVExt.java", "BodyUseAPI": ["HBCIPassportDDVExt.setCountry(org.kapott.hbci.datatypes.SyntaxCtr.getName(ccode))", "org.kapott.hbci.datatypes.SyntaxCtr.getName(java.lang.String)"], "Fixed commit": "37779a557953672ecf1a78fe3f0fa422a41f1f0a", "Url": "https://api.github.com/repos/pecuniabanking/pecunia-server", "Date": "2015-11-11T19:58:31Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.undone.isEmpty())) { this.undone.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7748/buggy-version/src.main.java.services.command.CommandManager.java", "BodyUseAPI": ["java.util.Stack<services.command.AbstractCommand>.clear()"], "Fixed commit": "7a576ab4fdc45aaa15e9750f31c6143f889944f6", "Url": "https://api.github.com/repos/if-h4102/pld-agile", "Date": "2016-11-09T23:58:03Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(client.isClosed())) { ClientPool.getInstance().disconnectMe(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1932/buggy-version/src.ClientThread.java", "BodyUseAPI": [], "Fixed commit": "aea6fce194c20940684d521be69a70292cfa2917", "Url": "https://api.github.com/repos/naknut/TcpChat", "Date": "2014-09-24T12:04:30Z"},
{"Line": "=>658", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((viewbounds) == null) { if ((initBounds) == null) setBoundManual(getScene().getGraph().getBounds()); else setBoundManual(initBounds); }else { lookToBox(viewbounds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5571/buggy-version/jzy3d-api.src.api.org.jzy3d.plot3d.rendering.view.View.java", "BodyUseAPI": [], "Fixed commit": "7b4e58b1bc5b2c7f06384f136611ca856fe07bf3", "Url": "https://api.github.com/repos/jzy3d/jzy3d-api", "Date": "2013-09-17T10:15:18Z"},
{"Line": "=>1047", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.contains(unique)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7705/buggy-version/src.agis.ps.util.PathBuilder.java", "BodyUseAPI": [], "Fixed commit": "168f1eda8bcc9d91f23467638ada753286edee43", "Url": "https://api.github.com/repos/shingocat/lrscaf", "Date": "2016-08-18T02:45:22Z"},
{"Line": "=>1486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gregtech.api.util.GT_OreDictUnificator.getItemData(net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (((itemData != null) && (itemData.hasValidPrefixMaterialData())) && ((itemData.mPrefix) == (gregtech.api.enums.OrePrefixes.cell))) { net.minecraft.item.ItemStack dustStack = itemData.mMaterial.mMaterial.getDust(input.stackSize); if (dustStack != null) { adjustedInputs.add(dustStack); }else { adjustedInputs.add(input); } }else { adjustedInputs.add(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7260/buggy-version/src.main.java.gregtech.api.util.GT_Recipe.java", "BodyUseAPI": ["itemData.mMaterial.mMaterial.getDust(input.stackSize)"], "Fixed commit": "17edbc2d4840a19a435973003f756acdfa6e393f", "Url": "https://api.github.com/repos/JohannesGaessler/GT5-Unofficial", "Date": "2017-05-13T15:51:51Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { player.addTailLevel(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3389/buggy-version/src.GSGame.java", "BodyUseAPI": [], "Fixed commit": "9de273e53b9afd5f641e1846f36d04ba56c3f887", "Url": "https://api.github.com/repos/faijdherbe/LD24", "Date": "2012-08-26T15:42:43Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDocumentGallery) != null) { if (!(mDocumentGallery.isEmpty())) { com.wfcrc.sqlite.WFCRCDB db = new com.wfcrc.sqlite.WFCRCDB(mContext); db.deleteDocuments(); db.insertDocuments(mDocumentGallery); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4097/buggy-version/app.src.main.java.com.wfcrc.repository.FTPDocumentRepository.java", "BodyUseAPI": [], "Fixed commit": "e55efeca8505774aa2c61649bff5a8439f48fd28", "Url": "https://api.github.com/repos/malonsolopez/wfcrc-android", "Date": "2017-07-19T00:54:59Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getItemDamage()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((descriptions[metadata]) != null) && (!(descriptions[metadata].isEmpty()))) list.addAll(java.util.Arrays.asList(clashsoft.clashsoftapi.util.CSString.makeLineList(descriptions[metadata])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4382/buggy-version/CustomBlock.java", "BodyUseAPI": ["java.util.Arrays.asList(clashsoft.clashsoftapi.util.CSString.makeLineList(descriptions[metadata]))", "clashsoft.clashsoftapi.util.CSString.makeLineList(java.lang.String)", "java.util.List<java.lang.String>.addAll(java.util.List)"], "Fixed commit": "cd8bc083449934b785e40477ded4c1d2fe3ac88f", "Url": "https://api.github.com/repos/Clashsoft/Clashsoft-API", "Date": "2013-11-15T23:10:29Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((debugSettingsClass) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/897/buggy-version/src.main.java.anabolicandroids.chanobol.ui.UiActivity.java", "BodyUseAPI": [], "Fixed commit": "f37c1e5fc4ef07316bb05fa094db0d7eb2a0301c", "Url": "https://api.github.com/repos/eugenkiss/chanobol", "Date": "2015-03-11T18:48:31Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(sItem.isVisible())) || (sItem.isSpacerItem())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/782/buggy-version/entirej-rwt-rap.src.org.entirej.applicationframework.rwt.renderers.chart.EJRWTLineChartRecordBlockRenderer.java", "BodyUseAPI": [], "Fixed commit": "3559f8809902fadd6321acaf864520426a909025", "Url": "https://api.github.com/repos/entirej/rap", "Date": "2017-07-18T16:42:58Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Positionen[j][0]) != (Positionen[IndexStein][0])) && (((((Positionen[j][1]) + (Positionen[j][2])) == 2) || (((Positionen[j][1]) + (Positionen[j][2])) == 4)) || (((Positionen[j][1]) + (Positionen[j][2])) == 6))) { zaehler--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3820/buggy-version/muehle_projekt.src.de.dhbw.muehle_spiel.Pruefung.java", "BodyUseAPI": [], "Fixed commit": "414a54cc43e533f5e2b78ac2b3bf57c5db2551d4", "Url": "https://api.github.com/repos/maklose/project_x", "Date": "2013-10-21T11:57:03Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Ben12345rocks.VotingPlugin.Utils.getInstance().getVoteSiteName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (voteSiteName == null) { com.Ben12345rocks.VotingPlugin.Events.VotiferEvent.plugin.getLogger().info(\"SiteName = null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6994/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Events.VotiferEvent.java", "BodyUseAPI": [], "Fixed commit": "53cc9ffb54320f2773dc7c77059b145ef85a7b0f", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-05-31T01:25:23Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites.getInstance().getServiceSite(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (URL != null) { if (URL.equals(url)) { return siteName; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6994/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Utils.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "53cc9ffb54320f2773dc7c77059b145ef85a7b0f", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-05-31T01:25:23Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6994/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Utils.java", "BodyUseAPI": [], "Fixed commit": "53cc9ffb54320f2773dc7c77059b145ef85a7b0f", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-05-31T01:25:23Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isNull) || (v.isNull())) return java.lang.Double.POSITIVE_INFINITY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8563/buggy-version/src.org.caliog.myRPG.Utils.Vector.java", "BodyUseAPI": [], "Fixed commit": "0af040df29399faccae0b1805e1951e571ecfe89", "Url": "https://api.github.com/repos/caliog/myRPG", "Date": "2016-02-15T13:57:32Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fromBackStack)) { com.midtrans.sdk.uikit.models.SavedCardList savedCardList = ((com.midtrans.sdk.uikit.models.SavedCardList) (getArguments().getSerializable(com.midtrans.sdk.uikit.fragments.SavedCardListFragment.PARAM_CARD_LIST))); if (savedCardList != null) { savedCards = ((java.util.ArrayList<com.midtrans.sdk.corekit.models.SaveCardRequest>) (savedCardList.saveCardRequests)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1784/buggy-version/uikit.src.main.java.com.midtrans.sdk.uikit.fragments.SavedCardListFragment.java", "BodyUseAPI": [], "Fixed commit": "bc36cd0a48bf2f07454cc8f772c85b3cc8d9d3ee", "Url": "https://api.github.com/repos/veritrans/veritrans-android", "Date": "2017-05-24T04:16:19Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7005/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "f427cbfc3574fab12fd219b269130794f11361d0", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultThumbNail) == null) { defaultThumbNail = android.graphics.BitmapFactory.decodeResource(application.getResources(), R.drawable.no_photo_clip); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4640/buggy-version/RapidFTR-Android.src.main.java.com.rapidftr.utils.PhotoCaptureHelper.java", "BodyUseAPI": [], "Fixed commit": "a2884b45c740ef01b0be352fe684f80a9de0203f", "Url": "https://api.github.com/repos/austiine04/RapidFTR---Android", "Date": "2014-10-10T15:37:08Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (var == null) { throw new org.exist.xquery.XPathException(new org.exist.extensions.exquery.restxq.impl.adapters.EXQueryErrorCode(org.exquery.restxq.RestXqErrorCodes.RQDY0101), getLine(), getColumn()); }else { return var.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6830/buggy-version/extensions.exquery.restxq.src.main.java.org.exist.extensions.exquery.restxq.impl.xquery.UriFunctions.java", "BodyUseAPI": ["org.exist.xquery.Variable.getValue()"], "Fixed commit": "d2e57d64cea74acefe3608812b99e6147dabbaca", "Url": "https://api.github.com/repos/wolfgangmm/exist", "Date": "2013-08-21T09:32:18Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.cordova.PermissionHelper.hasPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE))) { this.callbackContext.error(com.synconset.ImagePicker.permissionDenied); }else if ((this.cordova) != null) { this.cordova.startActivityForResult(((org.apache.cordova.CordovaPlugin) (this)), intent, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6736/buggy-version/src.android.com.synconset.ImagePicker.ImagePicker.java", "BodyUseAPI": [], "Fixed commit": "954575e3da8dd62987d373bfcbfaacc08c297d41", "Url": "https://api.github.com/repos/zimmo-be/cordova-imagePicker", "Date": "2016-10-04T08:16:53Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_globoNetworkService.removeVmFromLoadBalancer(vm)) { _globoNetworkService.unregisterNicInGloboNetwork(nic, vm); super.deallocate(network, nic, vm); }else { throw new com.cloud.utils.exception.CloudRuntimeException(\"Could not remove VM from load balancers. Please remove it from any load balancer before continuing\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5316/buggy-version/plugins.network-elements.globonetwork.src.com.globo.globonetwork.cloudstack.guru.GloboNetworkGuru.java", "BodyUseAPI": ["com.globo.globonetwork.cloudstack.manager.GloboNetworkService.unregisterNicInGloboNetwork(com.cloud.vm.NicProfile,com.cloud.vm.VirtualMachineProfile)", "com.cloud.network.guru.GuestNetworkGuru.deallocate(com.cloud.network.Network,com.cloud.vm.NicProfile,com.cloud.vm.VirtualMachineProfile)"], "Fixed commit": "52fd0f767ceb8231ab757feef6c44ee994783eab", "Url": "https://api.github.com/repos/globocom/cloudstack", "Date": "2015-03-25T20:50:06Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.currentUrl) != null) && (this.currentUrl.equals(currentUrl))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6072/buggy-version/src.main.java.org.wilson.world.manager.URLManager.java", "BodyUseAPI": [], "Fixed commit": "afe2278ecf06c467b4ebb497963bd56282507436", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2016-07-25T05:25:52Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liuliume.portal.dao.HairdressingTimeDao.getHairdressingTimeByStartTime(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (ht != null) { int sum = ht.getServicePersionNum(); java.text.DateFormat format = new java.text.SimpleDateFormat(\"yyyy-MM-dd hh:mm\"); java.util.Date date = format.parse(serviceTime); int startTime = date.getHours(); int count = countHairDressingOrders(date, startTime); if (sum > count) return true; return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1356/buggy-version/src.main.java.com.liuliume.portal.service.impl.HairdressingTimeServiceImpl.java", "BodyUseAPI": ["com.liuliume.portal.entity.HairdressingTime.getServicePersionNum()"], "Fixed commit": "5f5be9d7178b4530c7ae229fc21faf009db0fa8e", "Url": "https://api.github.com/repos/liuliume/zues", "Date": "2015-11-17T14:24:29Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((viewsingle) == null) && (((viewContentRef) == null) || ((viewContentRef.size()) == 0))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1352/buggy-version/src.main.java.net.gy.SwiftFrameWork.MVVM.Entity.HttpMethodProxy.java", "BodyUseAPI": [], "Fixed commit": "66edd2cfd59eccd47fe37433eeb29e70dd4327f3", "Url": "https://api.github.com/repos/ganyao114/SwiftFrameWork", "Date": "2016-09-13T04:03:35Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMuc && (message.startsWith(\"/me \"))) { message = \"[i]* [b][c=purple]\".concat(nickName).concat(\" [/c][/b]\").concat(message.substring(4)).concat(\"[/i]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7037/buggy-version/src.com.tomclaw.mandarin.main.ChatFrame.java", "BodyUseAPI": [], "Fixed commit": "41056c1e762067ce52929b4df3cfc36b0cfc2da9", "Url": "https://api.github.com/repos/solkin/mandarin-j2me", "Date": "2012-09-30T10:14:19Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.andrew.apollo.adapters.SongAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (song == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8518/buggy-version/android.apollo.src.com.andrew.apollo.adapters.SongAdapter.java", "BodyUseAPI": [], "Fixed commit": "3557c1e0bfb68ccdfe161e9736e758faf7b0ce21", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2016-03-25T11:06:35Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adaptableObject instanceof org.eclipse.jdt.core.IJavaElement) && (adapterType.equals(org.eclipse.ui.model.IWorkbenchAdapter.class))) { return new org.eclipse.jdt.internal.debug.ui.sourcelookup.JavaDebugWorkbenchAdapter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5045/buggy-version/org.eclipse.jdt.debug.ui.ui.org.eclipse.jdt.internal.debug.ui.sourcelookup.WorkbenchAdapterFactory.java", "BodyUseAPI": [], "Fixed commit": "e644421b4528ce8a3c5bad32d7f02f37050a42bd", "Url": "https://api.github.com/repos/kriegaex/Eclipse-Debug-View-Stack-Filter", "Date": "2015-01-14T21:25:13Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFutureQuery && (futureEventCount != (-1))) { mFutureEventCount = futureEventCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3049/buggy-version/app.src.main.java.com.jaxvy.errandr.ui.adapters.PinnedEventInstanceAdapter.java", "BodyUseAPI": [], "Fixed commit": "ff3549bd1aff2b32d7439dbe991b0a7a57754219", "Url": "https://api.github.com/repos/jaxvy/Errandr_android", "Date": "2014-10-02T20:16:35Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.get(i).size()) == 0) result.remove(i); else java.util.Collections.sort(result.get(i), Constants.comp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5291/buggy-version/src.eu.cassandra.utils.Utils.java", "BodyUseAPI": ["java.util.ArrayList<java.util.ArrayList<eu.cassandra.utils.PointOfInterest>>.get(int)", "java.util.ArrayList<java.util.ArrayList<eu.cassandra.utils.PointOfInterest>>.remove(int)", "java.util.Collections.sort(result.get(i),Constants.comp)"], "Fixed commit": "595bcc4e62fa40bfbc523ab9c02859bee62709dd", "Url": "https://api.github.com/repos/cassandra-project/disaggregation", "Date": "2013-10-30T09:56:05Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (createTables) { sqlImport.insertSamples(buffer, threadName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5135/buggy-version/src.main.java.de.mvbonline.jmeteranalyzer.frontend.ImportCsvFile.java", "BodyUseAPI": [], "Fixed commit": "5109bf1dd8bd6f3dbf530ce80bc0ad6193493697", "Url": "https://api.github.com/repos/mvb-online/jmeter-analyzer", "Date": "2015-12-01T13:47:41Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cinchapi.concourse.server.storage.AtomicOperation.LockDescription.forVersionExpectation(org.cinchapi.concourse.server.storage.AtomicOperation.VersionExpectation)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (description.getLock().tryLock()) { locks.put(expectation.getToken(), description); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/332/buggy-version/concourse-server.src.main.java.org.cinchapi.concourse.server.storage.AtomicOperation.java", "BodyUseAPI": ["java.util.Map<org.cinchapi.concourse.server.concurrent.Token, org.cinchapi.concourse.server.storage.AtomicOperation.LockDescription>.put(org.cinchapi.concourse.server.concurrent.Token,org.cinchapi.concourse.server.storage.AtomicOperation.LockDescription)"], "Fixed commit": "91ddd40cc4708f50b34942b619d64bea75db9271", "Url": "https://api.github.com/repos/cinchapi/concourse", "Date": "2013-12-09T13:14:04Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new java.io.File(mapFolder, \"uid.dat\").exists()) { new java.io.File(mapFolder, \"uid.dat\").delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2435/buggy-version/src.main.java.net.laby.devathlon.game.ArenaManager.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "b6012bb38669b435eb6ebb5b98266ed14cb63a11", "Url": "https://api.github.com/repos/qlow/devathlon16", "Date": "2016-07-16T22:21:48Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(java.io.InputStream.class)) return entityStream;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/303/buggy-version/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java", "BodyUseAPI": [], "Fixed commit": "0dd2842be39937b14420b48b5a5f7ebb9ddd5af4", "Url": "https://api.github.com/repos/apache/ambari", "Date": "2016-11-03T09:54:39Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentNumber.length()) <= 5) callText.setText(currentNumber);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1442/buggy-version/app.src.main.java.com.example.ralemproductions.ezchat.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "4d8c02dc73e42bb697a5f2d29306a7d234a0e177", "Url": "https://api.github.com/repos/Ralem-Productions/EZChat", "Date": "2015-07-14T01:32:17Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentNumber.length()) <= 5) callText.setText((\"CALL: \" + (currentNumber)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1442/buggy-version/app.src.main.java.com.example.ralemproductions.ezchat.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4d8c02dc73e42bb697a5f2d29306a7d234a0e177", "Url": "https://api.github.com/repos/Ralem-Productions/EZChat", "Date": "2015-07-14T01:32:17Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wifiLock.isHeld()) { wifiLock.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/276/buggy-version/app.src.main.java.com.scooter1556.sms.android.activity.VideoPlayerActivity.java", "BodyUseAPI": ["WifiManager.WifiLock.release()"], "Fixed commit": "176daaba14a1ecf169011b4adcc7a8a9cbf8fea0", "Url": "https://api.github.com/repos/scoot-software/sms-android", "Date": "2016-05-12T21:38:02Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wifiLock.isHeld()) { wifiLock.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/276/buggy-version/app.src.main.java.com.scooter1556.sms.android.activity.VideoPlayerActivity.java", "BodyUseAPI": ["WifiManager.WifiLock.release()"], "Fixed commit": "176daaba14a1ecf169011b4adcc7a8a9cbf8fea0", "Url": "https://api.github.com/repos/scoot-software/sms-android", "Date": "2016-05-12T21:38:02Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wifiLock.isHeld()) { wifiLock.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/276/buggy-version/app.src.main.java.com.scooter1556.sms.android.activity.VideoPlayerActivity.java", "BodyUseAPI": ["WifiManager.WifiLock.release()"], "Fixed commit": "176daaba14a1ecf169011b4adcc7a8a9cbf8fea0", "Url": "https://api.github.com/repos/scoot-software/sms-android", "Date": "2016-05-12T21:38:02Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.frameBuffer) != null) { this.frameBuffer.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6677/buggy-version/core.src.com.thommil.libgdx.runtime.graphics.renderer.buffer.OffScreenRenderer.java", "BodyUseAPI": [], "Fixed commit": "0bf0ff8b89b10672d6e601d7e05b8c1651406ae4", "Url": "https://api.github.com/repos/Thommil/GameRuntime", "Date": "2016-04-24T22:26:55Z"},
{"Line": "=>829", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(logAverage)) { if (iDim == 0) { loggerLikelihood.needsUpdate = true; } return loggerLikelihood.getPosition(iDim); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3007/buggy-version/src.sphericalGeo.ApproxMultivariateTraitLikelihood.java", "BodyUseAPI": [], "Fixed commit": "df27fe54d82e0e3ce5dd56676b7dbf9f237312ba", "Url": "https://api.github.com/repos/BEAST2-Dev/beast-geo", "Date": "2017-10-11T21:19:39Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Statistics.statVersion) == (StatisticVersion.MODIFIED_STAT)) { distStat.mergeStats(intStats.getDistStat()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2673/buggy-version/parquet-column.src.main.java.org.apache.parquet.column.statistics.IntStatistics.java", "BodyUseAPI": [], "Fixed commit": "d921770d38fb027076a5d214612dca19c82140ad", "Url": "https://api.github.com/repos/yulang/Modified-Parquet", "Date": "2016-06-16T05:36:30Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Statistics.statVersion) == (StatisticVersion.MODIFIED_STAT)) { distStat = new org.apache.parquet.column.statistics.DistributionStatistics<java.lang.Integer>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2673/buggy-version/parquet-column.src.main.java.org.apache.parquet.column.statistics.IntStatistics.java", "BodyUseAPI": [], "Fixed commit": "d921770d38fb027076a5d214612dca19c82140ad", "Url": "https://api.github.com/repos/yulang/Modified-Parquet", "Date": "2016-06-16T05:36:30Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pp.getLocation().getY()) < 1.0) { recentlyFreed.put(pp.getImprisonedId(), pp.getLocation().add(0, 1.0, 0)); }else { recentlyFreed.put(pp.getImprisonedId(), pp.getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4358/buggy-version/src.com.untamedears.PrisonPearl.managers.PrisonPearlManager.java", "BodyUseAPI": ["com.untamedears.PrisonPearl.PrisonPearl.getLocation()", "java.util.Map<java.util.UUID, org.bukkit.Location>.put(pp.getImprisonedId(),pp.getLocation().add(0, 1.0, 0))", "com.untamedears.PrisonPearl.PrisonPearl.getImprisonedId()", "java.util.Map<java.util.UUID, org.bukkit.Location>.put(pp.getImprisonedId(),pp.getLocation())", "com.untamedears.PrisonPearl.PrisonPearl.getLocation()", "pp.getLocation().add(int,double,int)", "com.untamedears.PrisonPearl.PrisonPearl.getImprisonedId()"], "Fixed commit": "aa388fb13ac5f0cf793168e65d712307b3dd563b", "Url": "https://api.github.com/repos/DevotedMC/PrisonPearl", "Date": "2016-06-21T01:47:20Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (resolutionType == null) { parameters.add(new com.nulabinc.backlog4j.http.NameValuePair(\"resolutionId\", \"\")); }else { parameters.add(new com.nulabinc.backlog4j.http.NameValuePair(\"resolutionId\", java.lang.String.valueOf(resolutionType.getIntValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5016/buggy-version/src.main.java.com.nulabinc.backlog4j.api.option.UpdateIssueParams.java", "BodyUseAPI": ["Issue.ResolutionType.getIntValue()", "com.nulabinc.backlog4j.api.option.UpdateIssueParams.add(com.nulabinc.backlog4j.http.NameValuePair)", "java.lang.String.valueOf(resolutionType.getIntValue())"], "Fixed commit": "ab2e7a9086e888ea6c85817660df51a12dbcce4c", "Url": "https://api.github.com/repos/nulab/backlog4j", "Date": "2014-10-18T09:52:00Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.otter.canal.extend.communication.CanalConfigClient.findCanal(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((canal.getCanalParameter().getSlaveId()) != null) { slaveId = canal.getCanalParameter().getSlaveId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5844/buggy-version/node.etl.src.main.java.com.alibaba.otter.node.etl.select.selector.canal.CanalEmbedSelector.java", "BodyUseAPI": ["canal.getCanalParameter().getSlaveId()", "com.alibaba.otter.canal.instance.manager.model.Canal.getCanalParameter()"], "Fixed commit": "dc87f064908181c17ff59ac7c0f7d843003e8b88", "Url": "https://api.github.com/repos/alibaba/otter", "Date": "2013-08-21T03:41:49Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.spid.android.sdk.exceptions.SPiDException.getError()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (error.equals(\"invalid_user_credentials\")) { error = \"Invalid email/password\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5256/buggy-version/SPiDGooglePlusApp.src.main.java.com.spid.android.example.googleplusapp.NativeLoginDialog.java", "BodyUseAPI": [], "Fixed commit": "135a3aa8cb9faf1be3504bab7e925af31771f329", "Url": "https://api.github.com/repos/schibsted/sdk-android", "Date": "2014-02-24T15:40:53Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (date1.equals(date2)) { return true; }else if (date2.after(date1)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/147/buggy-version/app.src.main.java.sep.software.anicare.fragment.MakeFriendFragment.java", "BodyUseAPI": ["java.util.Date.after(java.util.Date)"], "Fixed commit": "2ff36dffbf1d95102109b1e46f549da415605215", "Url": "https://api.github.com/repos/Jeffrey-Cho/Anicare", "Date": "2015-06-10T02:48:57Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentQuote) == null) || ((previousQuote) == null)) { throw new exceptions.InvalidAnalysisState(\"Two successful updates have not been retrieved\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6200/buggy-version/src.StockQuoteAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "d491ce318197b62a5a49ca4b99ffd708ce1ccace", "Url": "https://api.github.com/repos/se2832/se2832-lab-07-stock-market-ticker-darb-eloc", "Date": "2017-04-26T23:33:30Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.freeshr.events.EncounterEvent>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == 1) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8789/buggy-version/shr.src.main.java.org.freeshr.interfaces.encounter.ws.CatchmentEncounterController.java", "BodyUseAPI": [], "Fixed commit": "5ee0b24429ce81d2b46de6bff4ea65f2a0c13f29", "Url": "https://api.github.com/repos/SharedHealth/FreeSHR", "Date": "2015-12-08T20:52:26Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { mCurrentMood = savedInstanceState.getInt(com.zafindratafa.terence.moodtracker.Controller.MainActivity.BUNDLE_STATE_MOOD); }else { mCurrentMood = getPreferences(com.zafindratafa.terence.moodtracker.Controller.MODE_PRIVATE).getInt(com.zafindratafa.terence.moodtracker.Controller.MainActivity.MOOD_OF_THE_DAY, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6533/buggy-version/app.src.main.java.com.zafindratafa.terence.moodtracker.Controller.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "a211d17b7c19d28828250294be6d4e4b63546074", "Url": "https://api.github.com/repos/Te-Z/MoodTracker", "Date": "2017-11-02T07:30:18Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type instanceof org.jetbrains.jet.lang.types.FlexibleType) { org.jetbrains.jet.lang.types.FlexibleType flexibleType = ((org.jetbrains.jet.lang.types.FlexibleType) (type)); org.jetbrains.jet.lang.resolve.lazy.ForceResolveUtil.forceResolveAllContents(flexibleType.getLowerBound()); org.jetbrains.jet.lang.resolve.lazy.ForceResolveUtil.forceResolveAllContents(flexibleType.getUpperBound()); }else { org.jetbrains.jet.lang.resolve.lazy.ForceResolveUtil.forceResolveAllContents(type.getConstructor()); for (org.jetbrains.jet.lang.types.TypeProjection projection : type.getArguments()) { org.jetbrains.jet.lang.resolve.lazy.ForceResolveUtil.forceResolveAllContents(projection.getType()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1505/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.resolve.lazy.ForceResolveUtil.java", "BodyUseAPI": ["org.jetbrains.jet.lang.types.JetType.getArguments()", "org.jetbrains.jet.lang.types.JetType.getConstructor()", "org.jetbrains.jet.lang.resolve.lazy.ForceResolveUtil.forceResolveAllContents(type.getConstructor())"], "Fixed commit": "34235ffed9b6eaa16ca5550531d67b2df16cb920", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2014-07-01T17:15:34Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (h.getRules().isEmpty()) h.run(MiningStrategy.SUPPORT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1524/buggy-version/src.org.aksw.mandolin.rulemining.RuleMiner.java", "BodyUseAPI": ["org.aksw.mandolin.rulemining.AmieHandler.run(MiningStrategy.SUPPORT)"], "Fixed commit": "455e7e575512005cb34ef3af373aa3066bb20ce9", "Url": "https://api.github.com/repos/mommi84/Mandolin", "Date": "2016-07-12T10:37:02Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(name))) { pdata.setName(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3084/buggy-version/app.models.altermotif.projects.EditedProjectData.java", "BodyUseAPI": ["com.svend.dab.core.beans.projects.ProjectData.setName(java.lang.String)"], "Fixed commit": "7bfb0c5fd6fbc28cf6e63736fb9e4bdb63da613f", "Url": "https://api.github.com/repos/sv3ndk/altermotif", "Date": "2011-12-05T19:54:51Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(goal))) { pdata.setGoal(goal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3084/buggy-version/app.models.altermotif.projects.EditedProjectData.java", "BodyUseAPI": ["com.svend.dab.core.beans.projects.ProjectData.setGoal(java.lang.String)"], "Fixed commit": "7bfb0c5fd6fbc28cf6e63736fb9e4bdb63da613f", "Url": "https://api.github.com/repos/sv3ndk/altermotif", "Date": "2011-12-05T19:54:51Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (image.playing) { image.updateBoard(); image.validate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4717/buggy-version/src.LifeInterface.java", "BodyUseAPI": ["imageOfBoard.updateBoard()", "imageOfBoard.validate()"], "Fixed commit": "6b10fbaa07635667afd8ff47d434c3fe1e9120f7", "Url": "https://api.github.com/repos/Sam-Belliveau/Conway-s-Game-Of-Life", "Date": "2017-09-24T20:08:35Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (acebOnly) { toOutput(result, t.getResult()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3515/buggy-version/src.main.java.org.agmip.ui.quadui.QuadUIWindow.java", "BodyUseAPI": [], "Fixed commit": "6e140c5d33310239bf8c2cbb9e72f6388da0d88a", "Url": "https://api.github.com/repos/agmip/quadui", "Date": "2015-02-10T00:49:33Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.springframework.util.CollectionUtils.isEmpty(statisticModels)) { return statisticReport; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8098/buggy-version/src.main.java.com.afkl.cases.df.service.impl.StatisticServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "43527ab3216e1c1379dc74ce0d2db3183f06b703", "Url": "https://api.github.com/repos/pvaughan/travel", "Date": "2016-12-07T00:37:50Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (row.getColumnDefinitions().getName(i).contains(\"signature\")) { colNames.add(\"signature\"); colTypes.add(\"Map<String.class,String.class>\"); colValues.add(\"null\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9117/buggy-version/src.java.ViewManager.CustomizedRow.java", "BodyUseAPI": [], "Fixed commit": "a7c2eab8e5df2667760072a7e5235512d8e18a2f", "Url": "https://api.github.com/repos/abdelrahmanbadawy/Cassandra-VMS", "Date": "2015-10-25T13:24:38Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.collections.MapUtils.getObject(java.util.Map<java.lang.String, java.lang.Object>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roleCodes instanceof java.lang.String) { roleCodeList = new java.lang.String[]{ ((java.lang.String) (roleCodes)) }; }else if (roleCodes instanceof java.lang.String[]) { roleCodeList = ((java.lang.String[]) (roleCodes)); }else { return new int[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4801/buggy-version/implements.default.src.main.java.top.cardone.authority.service.impl.UserRoleServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "873e869ab19707a1bd40115d4573b68a8aecd702", "Url": "https://api.github.com/repos/yht-fand/cardone-authority", "Date": "2016-09-18T12:41:43Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((end - 1) == last_day_of_month) condition2 = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8256/buggy-version/TapIn.app.src.main.java.com.example.thomas.tapin.Choose_week.java", "BodyUseAPI": [], "Fixed commit": "05f7f91b5444068303ef736da6a3211cad1f0dd5", "Url": "https://api.github.com/repos/ThomasDelaney/TapIn", "Date": "2017-04-23T09:07:51Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (condition2) { spinnerArray.add(((((((monday_index + \"/0\") + (java.lang.String.valueOf((month - 1)))) + \" - \") + (monday_index + 6)) + \"/0\") + (java.lang.String.valueOf((month - 1))))); }else { spinnerArray.add(((((((monday_index + \"/0\") + (java.lang.String.valueOf((month - 1)))) + \" - \") + (monday_index + 6)) + \"/0\") + (java.lang.String.valueOf(month)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8256/buggy-version/TapIn.app.src.main.java.com.example.thomas.tapin.Choose_week.java", "BodyUseAPI": [], "Fixed commit": "05f7f91b5444068303ef736da6a3211cad1f0dd5", "Url": "https://api.github.com/repos/ThomasDelaney/TapIn", "Date": "2017-04-23T09:07:51Z"},
{"Line": "=>813", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((element.children) != null) && (element.build(routeBuilder))) { trackBuilder.set(\"TrackId\", ((inputID.length()) > 0 ? inputID : element.composeID(\"\", false, true))); return mil.nga.giat.geowave.format.gpx.GPXConsumer.buildGeoWaveDataInstance(element.composeID(inputID, false, true), primaryIndexId, mil.nga.giat.geowave.format.gpx.GPXConsumer.routeKey, routeBuilder, additionalData.get(element.getPath())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4998/buggy-version/extensions.formats.gpx.src.main.java.mil.nga.giat.geowave.format.gpx.GPXConsumer.java", "BodyUseAPI": ["mil.nga.giat.geowave.format.gpx.GPXConsumer.GPXDataElement.composeID(java.lang.String,boolean,boolean)", "org.geotools.feature.simple.SimpleFeatureBuilder.set(java.lang.String,((inputID.length()) > 0 ? inputID : element.composeID(\"\", false, true)))", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.get(java.lang.String)", "mil.nga.giat.geowave.format.gpx.GPXConsumer.GPXDataElement.composeID(java.lang.String,boolean,boolean)", "mil.nga.giat.geowave.format.gpx.GPXConsumer.GPXDataElement.getPath()", "mil.nga.giat.geowave.format.gpx.GPXConsumer.buildGeoWaveDataInstance(java.lang.String,mil.nga.giat.geowave.core.index.ByteArrayId,mil.nga.giat.geowave.core.index.ByteArrayId,org.geotools.feature.simple.SimpleFeatureBuilder,java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "16a49426616aad26b8002025396a4b18390f0d98", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-01-06T13:35:52Z"},
{"Line": "=>792", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((element.children) != null) && (element.build(trackBuilder))) { trackBuilder.set(\"TrackId\", ((inputID.length()) > 0 ? inputID : element.composeID(\"\", false, true))); return mil.nga.giat.geowave.format.gpx.GPXConsumer.buildGeoWaveDataInstance(element.composeID(inputID, false, true), primaryIndexId, mil.nga.giat.geowave.format.gpx.GPXConsumer.trackKey, trackBuilder, additionalData.get(element.getPath())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4998/buggy-version/extensions.formats.gpx.src.main.java.mil.nga.giat.geowave.format.gpx.GPXConsumer.java", "BodyUseAPI": ["org.geotools.feature.simple.SimpleFeatureBuilder.set(java.lang.String,((inputID.length()) > 0 ? inputID : element.composeID(\"\", false, true)))", "mil.nga.giat.geowave.format.gpx.GPXConsumer.GPXDataElement.getPath()", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.get(java.lang.String)", "mil.nga.giat.geowave.format.gpx.GPXConsumer.buildGeoWaveDataInstance(java.lang.String,mil.nga.giat.geowave.core.index.ByteArrayId,mil.nga.giat.geowave.core.index.ByteArrayId,org.geotools.feature.simple.SimpleFeatureBuilder,java.util.Map<java.lang.String, java.lang.String>)", "mil.nga.giat.geowave.format.gpx.GPXConsumer.GPXDataElement.composeID(java.lang.String,boolean,boolean)", "mil.nga.giat.geowave.format.gpx.GPXConsumer.GPXDataElement.composeID(java.lang.String,boolean,boolean)"], "Fixed commit": "16a49426616aad26b8002025396a4b18390f0d98", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-01-06T13:35:52Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.usuario) != null) { retval = this.bd.detenerTarea(this.tareaEnTrabajo, this.usuario.getId()); setChanged(); this.notifyObservers(this.tareaEnTrabajo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4991/buggy-version/codigo.servidor.HiloConexionPrimario.java", "BodyUseAPI": [], "Fixed commit": "4c2367b3110a2eb07477f3f0b62c8bb48a319344", "Url": "https://api.github.com/repos/lucasmufato/Integrador-Distribuida", "Date": "2016-12-22T00:18:06Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.servidor) != null) { this.servidor.eliminarHiloConexion(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4991/buggy-version/codigo.servidor.HiloConexionPrimario.java", "BodyUseAPI": [], "Fixed commit": "4c2367b3110a2eb07477f3f0b62c8bb48a319344", "Url": "https://api.github.com/repos/lucasmufato/Integrador-Distribuida", "Date": "2016-12-22T00:18:06Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tags[i].equalsIgnoreCase(npChunker.getStartTag())) { start = i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8610/buggy-version/src.uk.ac.shef.dcs.jate.lucene.filter.OpenNLPNounPhraseFilter.java", "BodyUseAPI": [], "Fixed commit": "bfd1d3e167a6ba12bebb5ea96a993d3f40227e81", "Url": "https://api.github.com/repos/ziqizhang/jate", "Date": "2015-10-14T13:20:14Z"},
{"Line": "=>996", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(object.isNotProcessed())) java.lang.System.out.printf(\"Choose a processed point ?\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8661/buggy-version/src.main.java.gdsc.core.clustering.optics.OPTICSManager.java", "BodyUseAPI": [], "Fixed commit": "dc44b17be2f456abb9c28e1965128cc2840e4019", "Url": "https://api.github.com/repos/aherbert/GDSC-Core", "Date": "2017-01-13T13:26:22Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((re.headers().get(\"Host\")) == null) { io.netty.util.ReferenceCountUtil.release(msg); ctx.close(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3620/buggy-version/BeastKeeper.src.main.java.org.epiclouds.client.netty.handler.NettyHttpServerHandler.java", "BodyUseAPI": [], "Fixed commit": "91b269b268b3651af160593821a1b7609f5fa1ef", "Url": "https://api.github.com/repos/longlong524/BeastKeeper", "Date": "2015-06-05T09:39:36Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((new_loc.distanceTo(loc)) < 1.0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1872/buggy-version/app.src.main.java.com.denislachance.anonument.FindActivity.java", "BodyUseAPI": [], "Fixed commit": "4d93fc721f4fdbc48ecb6d56463ad26331da47fc", "Url": "https://api.github.com/repos/dudeofea/Anonument", "Date": "2015-10-23T05:27:45Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ning.killbill.zuora.api.ZuoraPaymentPluginApi.1.processPayment(com.ning.killbill.zuora.zuora.ZuoraConnection,java.lang.String,java.math.BigDecimal,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rowPaymentOrError.isRight()) { final com.zuora.api.object.Payment rowPayment = rowPaymentOrError.getRight(); if (\"Processed\".equals(rowPayment.getStatus())) { zuoraPluginDao.insertPayment(new com.ning.killbill.zuora.dao.entities.PaymentEntity(kbPaymentId.toString(), kbAccountId.toString(), rowPayment.getId(), rowPayment.getCreatedDate().toDate(), rowPayment.getEffectiveDate().toDate(), rowPayment.getAmount(), rowPayment.getStatus(), rowPayment.getGatewayResponse(), rowPayment.getGatewayResponseCode(), rowPayment.getReferenceId(), rowPayment.getSecondPaymentReferenceId())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2520/buggy-version/src.main.java.com.ning.killbill.zuora.api.ZuoraPaymentPluginApi.java", "BodyUseAPI": ["com.ning.killbill.zuora.util.Either<com.ning.killbill.zuora.zuora.ZuoraError, com.zuora.api.object.Payment>.getRight()"], "Fixed commit": "1859e97f3f24466421b24079d8b9850d75291919", "Url": "https://api.github.com/repos/killbill/killbill-zuora-plugin", "Date": "2013-05-06T23:54:48Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cutoff.getBounds()) != null) boundsDim = cutoff.getBounds().getBoundsDimension(); else boundsDim = cutoff.getDimension();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8908/buggy-version/src.dr.inference.distribution.MomentDistributionModel.java", "BodyUseAPI": [], "Fixed commit": "df37bf82bc0bdcd39773daef28fe10a05915ffa5", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2016-11-29T03:27:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (session.getAttribute(\"userType\").equals(\"CANDIDATE\")) { htmlStringBuilder.append(\"\\r\\n<form class=\\\"form\\\" action=\\\"CandidateHomeServlet\\\" method=\\\"post\\\">\"); }else { htmlStringBuilder.append(\"\\r\\n<form class=\\\"form\\\" action=\\\"OrganizationHomeServlet\\\" method=\\\"post\\\">\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/637/buggy-version/WEB-INF.classes.ContactConfirmationServlet.java", "BodyUseAPI": [], "Fixed commit": "6ba0c2b81dda5c9b05b0bafc7aa8da88e4b3b469", "Url": "https://api.github.com/repos/gwest4/RezuMe", "Date": "2015-06-10T03:35:54Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.firebase.client.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (newShopList != null) t.setText(newShopList.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9041/buggy-version/app.src.main.java.com.nexb.shopr4.FireBaseController.java", "BodyUseAPI": ["com.nexb.shopr4.dataModel.ShopList.getName()", "android.widget.TextView.setText(newShopList.getName())"], "Fixed commit": "0fc26248c2263070d9e3eee18ac7d233c9b5ed08", "Url": "https://api.github.com/repos/cbudtz/Shopr4", "Date": "2015-12-04T13:07:15Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { if (prefs.getBoolean(\"permission\", false)) { android.graphics.Bitmap bitmapImg = ((android.graphics.drawable.BitmapDrawable) (imgShare.getDrawable())).getBitmap(); android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_SEND); intent.putExtra(Intent.EXTRA_TEXT, \"M\u00e1s im\u00e1genes en: https://goo.gl/GPUoTJ\"); java.lang.String path = MediaStore.Images.Media.insertImage(main_activity.getContentResolver(), bitmapImg, \"\", null); android.net.Uri screenshotUri = android.net.Uri.parse(path); intent.putExtra(Intent.EXTRA_STREAM, screenshotUri); intent.setType(\"image/*\"); main_activity.startActivity(android.content.Intent.createChooser(intent, \"Compartir la imagen en:\")); }else { if (!(Settings.System.canWrite(main_activity))) { main_activity.requestPermissions(new java.lang.String[]{ Manifest.permission.WRITE_EXTERNAL_STORAGE, Manifest.permission.READ_EXTERNAL_STORAGE }, 2909); } } }else { android.graphics.Bitmap bitmapImg = ((android.graphics.drawable.BitmapDrawable) (imgShare.getDrawable())).getBitmap(); android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_SEND); intent.putExtra(Intent.EXTRA_TEXT, \"M\u00e1s im\u00e1genes en: https://goo.gl/GPUoTJ\"); java.lang.String path = MediaStore.Images.Media.insertImage(main_activity.getContentResolver(), bitmapImg, \"\", null); android.net.Uri screenshotUri = android.net.Uri.parse(path); intent.putExtra(Intent.EXTRA_STREAM, screenshotUri); intent.setType(\"image/*\"); main_activity.startActivity(android.content.Intent.createChooser(intent, \"Compartir la imagen en:\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4035/buggy-version/app.src.main.java.com.kuvi.cuantarazon.Token.java", "BodyUseAPI": [], "Fixed commit": "f91c5be8ea8ef774d3d583e156be95bf191c7396", "Url": "https://api.github.com/repos/mmsergi/uscr2015", "Date": "2015-11-30T17:34:01Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[i].equals(\"-force\")) { eu.sunrave.homecontrol_server.Main.forceConnect = true; args[i] = null; }else if (args[i].substring(0, 12).equals(\"-identifier=\")) { eu.sunrave.homecontrol_server.Main.identifier = args[i].substring(12, args[i].length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/160/buggy-version/src.eu.sunrave.homecontrol_server.Main.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "0c0ba35e9eade2b5130213b9578a16e0a53d8bcd", "Url": "https://api.github.com/repos/Aileenche/homecontrol_server", "Date": "2015-12-30T20:04:42Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file_sep.equals(\"\\\\\")) file_sep = \"\\\\\\\\\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8613/buggy-version/org.hive2hive.core.src.org.hive2hive.core.model.FileTreeNode.java", "BodyUseAPI": [], "Fixed commit": "3b1f3d5f9c2bf93984aa7d64b3dffc785ebc5c43", "Url": "https://api.github.com/repos/ippes/Hive2Hive", "Date": "2013-12-18T22:48:03Z"},
{"Line": "=>1164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isExtension) { shiftableSets[(state + stateOffset)].andNot(offsetExtNonterminals); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4453/buggy-version/src.edu.umn.cs.melt.copper.compiletime.srcbuilders.single.ParserFragmentEngineBuilder.java", "BodyUseAPI": [], "Fixed commit": "3e8fea334c38e3ecb8cc5634873e24b40b28d79e", "Url": "https://api.github.com/repos/viratyosin/copper", "Date": "2016-03-31T00:22:07Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.keke142.hshop.managers.ShopManager.getShopAt(b.getLocation())", "org.bukkit.event.block.BlockBreakEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(p.getUniqueId().toString().equals(shop.getPlayerUuid()))) { e.setCancelled(true); org.bukkit.Bukkit.broadcastMessage((((\"Invalid UUID: \" + (p.getUniqueId().toString())) + \" \") + (shop.getPlayerUuid()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3979/buggy-version/src.main.java.fr.keke142.hshop.listeners.ShopDestroyListener.java", "BodyUseAPI": ["org.bukkit.Bukkit.broadcastMessage((((\"Invalid UUID: \" + (p.getUniqueId().toString())) + \" \") + (shop.getPlayerUuid())))", "org.bukkit.entity.Player.getUniqueId()", "fr.keke142.hshop.objects.Shop.getPlayerUuid()", "p.getUniqueId().toString()"], "Fixed commit": "550d12951865961892e109cb9054de22110309f0", "Url": "https://api.github.com/repos/jdkeke142/HShop", "Date": "2016-03-16T14:12:46Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.aartikov.alligator.internal.FragmentStack.getCurrentFragment()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (currentFragment != null) { animation.applyAfterFragmentTransactionExecuted(fragment, currentFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7660/buggy-version/alligator.src.main.java.me.aartikov.alligator.internal.FragmentStack.java", "BodyUseAPI": ["me.aartikov.alligator.TransitionAnimation.applyAfterFragmentTransactionExecuted(android.support.v4.app.Fragment,android.support.v4.app.Fragment)"], "Fixed commit": "4101ff2ce1d96a94a1257662149c75ce888a6bba", "Url": "https://api.github.com/repos/aartikov/Alligator", "Date": "2017-05-14T04:13:58Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.aartikov.alligator.internal.FragmentStack.getCurrentFragment()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (currentFragment != null) { animation.applyAfterFragmentTransactionExecuted(fragment, currentFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7660/buggy-version/alligator.src.main.java.me.aartikov.alligator.internal.FragmentStack.java", "BodyUseAPI": ["me.aartikov.alligator.TransitionAnimation.applyAfterFragmentTransactionExecuted(android.support.v4.app.Fragment,android.support.v4.app.Fragment)"], "Fixed commit": "4101ff2ce1d96a94a1257662149c75ce888a6bba", "Url": "https://api.github.com/repos/aartikov/Alligator", "Date": "2017-05-14T04:13:58Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.support.v4.app.Fragment>.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (count > 0) { animation.applyAfterFragmentTransactionExecuted(fragment, fragments.get((count - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7660/buggy-version/alligator.src.main.java.me.aartikov.alligator.internal.FragmentStack.java", "BodyUseAPI": ["me.aartikov.alligator.TransitionAnimation.applyAfterFragmentTransactionExecuted(android.support.v4.app.Fragment,fragments.get((count - 1)))", "java.util.List<android.support.v4.app.Fragment>.get(int)"], "Fixed commit": "4101ff2ce1d96a94a1257662149c75ce888a6bba", "Url": "https://api.github.com/repos/aartikov/Alligator", "Date": "2017-05-14T04:13:58Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (previousFragment != null) { animation.applyAfterFragmentTransactionExecuted(previousFragment, currentFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7660/buggy-version/alligator.src.main.java.me.aartikov.alligator.internal.FragmentStack.java", "BodyUseAPI": ["me.aartikov.alligator.TransitionAnimation.applyAfterFragmentTransactionExecuted(android.support.v4.app.Fragment,android.support.v4.app.Fragment)"], "Fixed commit": "4101ff2ce1d96a94a1257662149c75ce888a6bba", "Url": "https://api.github.com/repos/aartikov/Alligator", "Date": "2017-05-14T04:13:58Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endButton.getVisibility()) == (android.view.View.VISIBLE)) { newGame(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5974/buggy-version/src.de.sethosii.android_spielesammlung.SpacesliderActivity.java", "BodyUseAPI": [], "Fixed commit": "fee0cf779bc7963552bcccf2b15b3a091f0cbea9", "Url": "https://api.github.com/repos/SethosII/android-spielesammlung", "Date": "2014-03-07T09:23:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.preference.PreferenceManager.getDefaultSharedPreferences(getContext()).getBoolean(\"service_enabled\", true)) { realm = io.realm.Realm.getInstance(UpdateWeatherService.realmConfiguration); }else { realm = io.realm.Realm.getInstance(MainActivity.realmConfiguration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6080/buggy-version/app.src.main.java.com.vtrifonov.weatherapp.fragments.ListFragment.java", "BodyUseAPI": [], "Fixed commit": "fc905a4fd15ea988e99e4de58836f4c6eadd9198", "Url": "https://api.github.com/repos/Volfor/WeatherApp", "Date": "2015-12-30T18:33:02Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (organization != null) { organization = organization.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2624/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.DefaultGroupIDExtractorImpl.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "4a78b87b1e29aec32dce083ae93d1adccae363fc", "Url": "https://api.github.com/repos/lakmali/carbon-apimgt", "Date": "2015-05-26T09:25:30Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (u == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/265/buggy-version/src.main.java.me.entityreborn.socbot.core.Core.java", "BodyUseAPI": [], "Fixed commit": "85f1165c3f165aa8b9cbf4f563b71a3c31f603cc", "Url": "https://api.github.com/repos/EntityReborn/SocCore", "Date": "2013-09-27T21:00:56Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nick == null) || (nick.trim().isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/265/buggy-version/src.main.java.me.entityreborn.socbot.core.Core.java", "BodyUseAPI": [], "Fixed commit": "85f1165c3f165aa8b9cbf4f563b71a3c31f603cc", "Url": "https://api.github.com/repos/EntityReborn/SocCore", "Date": "2013-09-27T21:00:56Z"},
{"Line": "=>1641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.psddev.dari.util.ObjectUtils.to(java.lang.Class,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (amount == null) amount = 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4898/buggy-version/db.src.main.java.com.psddev.dari.db.SqlDatabase.java", "BodyUseAPI": [], "Fixed commit": "fff73de2207878b7bc8593f453138b7ee7e1ca3d", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2013-04-10T23:45:42Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox<net.nikr.eve.jeveasset.data.sde.Item>.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (object == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3103/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.tabs.stockpile.StockpileItemDialog.java", "BodyUseAPI": [], "Fixed commit": "6ba3ed8ac5a7c87b40e14c0d1770f775490694db", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-11-20T09:46:23Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox<net.nikr.eve.jeveasset.data.sde.Item>.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(object instanceof net.nikr.eve.jeveasset.data.sde.Item)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3103/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.tabs.stockpile.StockpileItemDialog.java", "BodyUseAPI": [], "Fixed commit": "6ba3ed8ac5a7c87b40e14c0d1770f775490694db", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-11-20T09:46:23Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((java.lang.System.currentTimeMillis()) - l1) >= timeout) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1641/buggy-version/src.main.java.org.epics.pvds.impl.RTPSWriter.java", "BodyUseAPI": [], "Fixed commit": "bbcc293caa47a8abf2d9f4b0e498377e4c93ead3", "Url": "https://api.github.com/repos/msekoranja/pvDS", "Date": "2015-09-03T17:48:57Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (now < 0) { org.zstack.storage.primary.PrimaryStorageManagerImpl.logger.warn(java.lang.String.format((\"negative available capacity of the primary storage, detail: re-calculated available capacity of the primary storage\" + \"[uuid:%s, before:%s, now:%s] with over-provisioning ratio[%s]\"), psUuid, before, now, ratioMgr.getRatio(psUuid))); now = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1957/buggy-version/storage.src.main.java.org.zstack.storage.primary.PrimaryStorageManagerImpl.java", "BodyUseAPI": ["org.zstack.utils.logging.CLogger.warn(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,long,long,ratioMgr.getRatio(psUuid))"], "Fixed commit": "f90711cb1b3dbf69734bbde55480428e92978614", "Url": "https://api.github.com/repos/liningone/zstack", "Date": "2017-03-13T14:37:36Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status < 400) { inputStream = conn.getInputStream(); }else { inputStream = conn.getErrorStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2982/buggy-version/app.src.main.java.rikka.akashitoolkit.ui.PushSendActivity.java", "BodyUseAPI": [], "Fixed commit": "24fa0af9a763e971b920109ef841cfbcf25bf235", "Url": "https://api.github.com/repos/kcwikizh/Akashi-Toolkit", "Date": "2016-07-02T16:04:34Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((partSales.getSalesType()) == (com.topsun.posclient.common.AppConstants.SALES_TYPE_EXECHANGE)) { retailM.setInvoceCode(partSales.getInvoiceNumber()); }else { retailM.setInvoceCode(item.getInvoceCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8788/buggy-version/com.topsun.posclient.sales.core.src.com.topsun.posclient.sales.core.SalesDataUtil.java", "BodyUseAPI": ["com.topsun.posclient.datamodel.RetailM.setInvoceCode(partSales.getInvoiceNumber())", "com.topsun.posclient.datamodel.PartSales.getInvoiceNumber()"], "Fixed commit": "19036a7621607773821ccde598e1f931341a3778", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2013-11-12T05:05:29Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateType == 0) { if (dbAdapter.updateMarketAccount(account, depositAmount, 0)) { java.lang.System.out.println(\"Deposit Successful!\"); java.lang.System.out.println(); }else { java.lang.System.out.println(\"Error occurred. Please see above for details.\"); java.lang.System.out.println(); } break; }else { if (dbAdapter.updateMarketAccount(account, depositAmount, 1)) { java.lang.System.out.println(\"Withdraw Successful!\"); java.lang.System.out.println(); }else { java.lang.System.out.println(\"Error occurred. Please see above for details.\"); java.lang.System.out.println(); } break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6140/buggy-version/src.UserInterface.java", "BodyUseAPI": [], "Fixed commit": "b75785b898f20b8290d18b1ebf9326121c3003cf", "Url": "https://api.github.com/repos/shumarvin/starsrus", "Date": "2017-11-21T02:13:06Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((val_1) == false) { val1 = java.lang.Double.parseDouble(v1.getText().toString()); val_1 = calculate.setValue(val1); sgn.setText(\"+\"); opr = true; }else { android.widget.Toast.makeText(this, \"Invalid\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1827/buggy-version/app.src.main.java.com.example.mangesh.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4f2608a2e7b266deab6fb7b61f83282ca61e64ef", "Url": "https://api.github.com/repos/Mangeshp214/Calculator", "Date": "2017-09-18T16:46:21Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bActionPresent) { dSelected = ((com.appsmarttech.utpro.Day) (lvDays.getItemAtPosition(position))); mActionMode.setTitle(dSelected.getName()); }else { dSelected = ((com.appsmarttech.utpro.Day) (lvDays.getItemAtPosition(position))); inExerDetails.putExtra(\"DAY_ID\", dSelected.getDayID()); startActivity(inExerDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1264/buggy-version/UltitrackPro.src.com.appsmarttech.utpro.Days_Fragment.java", "BodyUseAPI": [], "Fixed commit": "63a1608501017be45f326eb8ff0822e752d19e3e", "Url": "https://api.github.com/repos/sniderzero/UTPRO", "Date": "2012-08-04T19:12:15Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scrollOffset) == 0) scrollOffset = ((getWidth()) / 2) - (paddingLeft);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5262/buggy-version/library.src.com.astuetz.PagerSlidingTabStrip.java", "BodyUseAPI": [], "Fixed commit": "6db1650f2a55770cca2eed36e56395c150703ef8", "Url": "https://api.github.com/repos/jpardogo/PagerSlidingTabStrip", "Date": "2014-11-18T13:53:27Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rs.next()) { return rs.getString(1); }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7976/buggy-version/alternativmud-server.src.main.java.net.alternativmud.db.variables.H2SQLPersistenceProvider.java", "BodyUseAPI": ["java.sql.ResultSet.getString(int)"], "Fixed commit": "1440848224802ee7b22ef3811ebe0f2a43d8c7c3", "Url": "https://api.github.com/repos/Jblew/alternativ-mud", "Date": "2014-02-09T22:58:53Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["il.ac.shenkar.hibernate.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (admin.equals(\"true\")) { request.setAttribute(\"tasksList\", dao.getAllTasks()); }else { request.setAttribute(\"tasksList\", dao.getAllItemsByUserId(userID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5538/buggy-version/src.il.ac.shenkar.hibernate.ToDoServlet.java", "BodyUseAPI": [], "Fixed commit": "5c5cf7392855eaedd69d0fe9068c2a7ef4d1fe4d", "Url": "https://api.github.com/repos/DassiShenkar/HibernateToDoList", "Date": "2017-02-20T00:38:31Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (clazz != null) { net.neevek.android.lib.paginize.util.AnnotationUtils.initAnnotatedFields(clazz, this, viewFinder, true); net.neevek.android.lib.paginize.util.AnnotationUtils.handleAnnotatedConstructors(clazz, this, viewFinder, true); }else { net.neevek.android.lib.paginize.util.AnnotationUtils.initAnnotatedFields(getClass(), this, viewFinder, true); net.neevek.android.lib.paginize.util.AnnotationUtils.handleAnnotatedConstructors(getClass(), this, viewFinder, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4967/buggy-version/PaginizeLib.src.net.neevek.android.lib.paginize.ViewWrapper.java", "BodyUseAPI": ["net.neevek.android.lib.paginize.util.AnnotationUtils.handleAnnotatedConstructors(java.lang.Class<?>,net.neevek.android.lib.paginize.ViewWrapper,net.neevek.android.lib.paginize.util.ViewFinder,boolean)", "net.neevek.android.lib.paginize.util.AnnotationUtils.initAnnotatedFields(java.lang.Class<?>,net.neevek.android.lib.paginize.ViewWrapper,net.neevek.android.lib.paginize.util.ViewFinder,boolean)"], "Fixed commit": "cf94aab4d3b99ba8644a59f1b1652b2fcd65bed4", "Url": "https://api.github.com/repos/neevek/Paginize", "Date": "2016-08-03T03:42:17Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (className.equals(com.liferay.document.library.kernel.model.DLFileEntryConstants.getClassName())) { com.liferay.document.library.kernel.model.DLFileEntry dlFileEntry = _dlFileEntryLocalService.fetchDLFileEntry(classTypePK); if ((dlFileEntry == null) || ((dlFileEntry.getRepositoryId()) != groupId)) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7119/buggy-version/modules.apps.web-experience.asset.asset-categories-service.src.main.java.com.liferay.asset.categories.validator.CardinalityAssetEntryValidator.java", "BodyUseAPI": [], "Fixed commit": "c05895f8f90d344d5b77ed5fecdc11a56993ab6f", "Url": "https://api.github.com/repos/pei-jung/liferay-portal", "Date": "2016-03-22T13:26:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfDay == 7) { return \"Saturday\"; }else if (numberOfDay == 1) { return \"Sunday\"; }else { throw new java.lang.AssertionError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2985/buggy-version/src.com.cormag.twitchbot.commons.Utils.java", "BodyUseAPI": [], "Fixed commit": "4bb0102fedeeb7b3af399d480b2a8d34d48bb682", "Url": "https://api.github.com/repos/Ativelox/TwitchBot", "Date": "2017-04-07T22:51:26Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((pieces.length) > 1) { opts.port = java.lang.Integer.parseInt(pieces[((pieces.length) - 1)]); }else if ((opts.port) == (-1)) { opts.port = (this.secure) ? 443 : 80; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8916/buggy-version/src.main.java.com.github.nkzawa.engineio.client.Socket.java", "BodyUseAPI": [], "Fixed commit": "2dc81e00d63e1d17af98b29fff35bca007b732e4", "Url": "https://api.github.com/repos/socketio/engine.io-client-java", "Date": "2015-01-24T20:43:27Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["robot.getUser().getProgramSource(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (programSource.getVerified()) { robot.setSourceCode(programSource.getSourceCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1142/buggy-version/RoboMinerWeb.src.java.nl.robominer.controller.RobotServlet.java", "BodyUseAPI": ["nl.robominer.entity.ProgramSource.getSourceCode()", "nl.robominer.entity.Robot.setSourceCode(programSource.getSourceCode())"], "Fixed commit": "b7b1134e5eae0168118c5492bb11a49177f66531", "Url": "https://api.github.com/repos/arnoudja/RoboMiner", "Date": "2014-10-29T12:06:06Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.remus.work.RemusApplet, java.lang.Integer>.get(ai.applet)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (wc == null) wc = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4537/buggy-version/src.org.remus.manage.WorkManager.java", "BodyUseAPI": [], "Fixed commit": "5148a800e908e8fbb9dfc80f8ad6f826447d428a", "Url": "https://api.github.com/repos/kellrott/Remus", "Date": "2011-03-11T00:21:22Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((varSplit.length) < 2) { functionName = functionName.replaceAll(\"\\\\(|\\\\)\", \"\"); }else { takesVariables = true; java.lang.String vars = varSplit[((varSplit.length) - 1)]; java.lang.String[] vNames = vars.split(\",\"); variables = new java.lang.String[vNames.length]; for (int i = 0; i < (vNames.length); i++) { variables[i] = vNames[i].trim(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6641/buggy-version/com.blazingkin.interpreter.executor.Method.java", "BodyUseAPI": [], "Fixed commit": "b1dd44a9e634abe4d1c6bf92061232106f794498", "Url": "https://api.github.com/repos/blazingkin/blz-ospl", "Date": "2017-10-04T20:17:13Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user != null) { if ((user.getName()) != \"default\") { java.lang.String string = ((\"Name: \" + (user.getName())) + \" Age: \") + (user.getAge()); setImage(user); textView.setText(string); }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5759/buggy-version/app.src.main.java.com.example.ak.firebaseauthdemo.AccountActivity.java", "BodyUseAPI": ["com.example.ak.firebaseauthdemo.UserInformation.getAge()", "com.example.ak.firebaseauthdemo.UserInformation.getName()", "com.example.ak.firebaseauthdemo.AccountActivity.1.setImage(com.example.ak.firebaseauthdemo.UserInformation)", "com.example.ak.firebaseauthdemo.UserInformation.getName()"], "Fixed commit": "e383dafab07431835b7049639d0991c652ff0850", "Url": "https://api.github.com/repos/kovi77/firebaseExample", "Date": "2016-10-21T11:18:20Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ndIndices[d].get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((pos == null) || ((pos.size()) == 0)) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6898/buggy-version/librec.src.main.java.librec.data.SparseTensor.java", "BodyUseAPI": [], "Fixed commit": "e9b416dd916b3648322733a516542c2c76d663ef", "Url": "https://api.github.com/repos/guoguibing/librec", "Date": "2015-07-16T05:13:06Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmpOut.asByteSource().isEmpty()) { out.write(\"\".getBytes(), 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2130/buggy-version/hmac-auth-common.src.main.java.de.otto.hmac.authentication.WrappedOutputStream.java", "BodyUseAPI": [], "Fixed commit": "d0dfc27a865e2fa09fc3dbbb5c7a2d4c5f1df649", "Url": "https://api.github.com/repos/ipavkovic/hmac-auth", "Date": "2016-01-19T08:04:46Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["resource.getURI().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (uriString.contains(\"xmof/petrinet.xmof\")) { airdURI = org.eclipse.emf.common.util.URI.createURI(uriString.replace(\"xmof/petrinet.xmof\", \"representations.aird\")); }else { airdURI = org.eclipse.emf.common.util.URI.createURI(uriString.replace(\"xmof/petrinet2.xmof\", \"representations.aird\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1647/buggy-version/dev.language_workbench.org.modelexecution.xmof.animation.src.org.modelexecution.xmof.animation.ModelAnimator.java", "BodyUseAPI": ["org.eclipse.emf.common.util.URI.createURI(java.lang.String)", "org.eclipse.emf.common.util.URI.createURI(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "9eab7fefd64825ae18637ac19e045394a6bf41b8", "Url": "https://api.github.com/repos/tortmayr/ame_lab", "Date": "2016-07-13T20:46:16Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2074/buggy-version/src.org.mariotaku.twidere.app.TwidereApplication.java", "BodyUseAPI": [], "Fixed commit": "f47663d64b1a69eb564b0562461212cce72ffa43", "Url": "https://api.github.com/repos/mariotaku/twidere", "Date": "2013-09-03T10:23:20Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((program) == (-1)) { program = loadShaderProgram(\"shaders/texture\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5433/buggy-version/desktop.src.main.java.com.ezardlabs.dethsquare.util.DesktopRenderUtils.java", "BodyUseAPI": [], "Fixed commit": "cb819bb156693843486fcf345b00989c81b769ad", "Url": "https://api.github.com/repos/8-Bit-Warframe/Dethsquare-Engine", "Date": "2017-08-18T12:02:20Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intData[i]) == 1) { java.lang.System.out.println(namesArray[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7174/buggy-version/src.AllFriends.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "89de5cdd1e9eb7386f7b1ba5fe4fa7a73492aca0", "Url": "https://api.github.com/repos/matttse/FriendFinder", "Date": "2017-04-04T22:57:35Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((n.getLocalView().getStatus()) == (View.Status.FIN)) maxTag = n.getLocalTag(); else maxTag = new Structures.Tag(0, 0, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8427/buggy-version/src.NetworkPrimitives.ConnectionManager.java", "BodyUseAPI": ["com.robustMRMW.Node.getLocalTag()"], "Fixed commit": "85ab56ee765eec5f2a2f7135929ed053cb37555c", "Url": "https://api.github.com/repos/lightem90/testMRMW", "Date": "2015-10-15T18:11:19Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(request.equals(\"exit\"))) || (!(request.equals(\"close\")))) { response = fibonacciRPC.call(request); java.lang.System.out.println(((\" [.] Got '\" + response) + \"'\")); }else { java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2099/buggy-version/src.InstantMessagingClient.java", "BodyUseAPI": ["InstantMessagingClient.call(java.lang.String)"], "Fixed commit": "733586d6cfb771d0945a7b1fa1d23d6b72d5ec62", "Url": "https://api.github.com/repos/adindabudi/InstantMessagingRabbitMQ", "Date": "2016-10-26T10:55:24Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.forgeessentials.customserveritems.TextureRegistry.enabled)) return com.forgeessentials.customserveritems.TextureRegistry.DEFAULT_TEXTURE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8170/buggy-version/src.main.java.com.forgeessentials.customserveritems.TextureRegistry.java", "BodyUseAPI": [], "Fixed commit": "efd1a25d518fdc32f35a4bca586dae18bb1f0a00", "Url": "https://api.github.com/repos/ForgeEssentials/CustomServerItems", "Date": "2015-09-25T08:00:41Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (connection != null) { connection.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3221/buggy-version/src.com.ctrlplusz.dashclock.yr.extension.YrExtension.java", "BodyUseAPI": ["java.net.HttpURLConnection.disconnect()"], "Fixed commit": "1db575e6c87e9ffa339426db08a940dc580d1d8f", "Url": "https://api.github.com/repos/hanspeide/dashclock-yr-extension", "Date": "2013-06-02T20:49:05Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((optSet.get(i).getOptChoice()) == null) { continue; }else totalPrice = totalPrice + (optSet.get(i).getOptChoice().getPrice());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5832/buggy-version/Project1_Unit2.src.model.Automobile.java", "BodyUseAPI": ["optSet.get(i).getOptChoice().getPrice()", "optSet.get(i).getOptChoice()", "java.util.ArrayList<model.OptionSet>.get(int)"], "Fixed commit": "582d677f35aa19e2eb7e2bad806494c517571654", "Url": "https://api.github.com/repos/XuefengZhai/JavaForSP_Proj1_Unit2", "Date": "2014-02-07T06:22:43Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newChild.parent) != null) { newChild.parent.getChildren().remove(newChild); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9176/buggy-version/src.util.collections.tree.TreeNode.java", "BodyUseAPI": ["java.util.List<util.collections.tree.TreeNode<E>>.remove(util.collections.tree.TreeNode<E>)", "util.collections.tree.TreeNode<E>.getChildren()"], "Fixed commit": "bfe579a09eaef66160cc3b7b3428d005784e3cca", "Url": "https://api.github.com/repos/JP-Anderson/SSRPG", "Date": "2017-09-05T20:53:29Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (os.contains(\"mac\")) { java.lang.System.setProperty(\"java.awt.headless\", \"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7345/buggy-version/src.silvertiger.tutorial.lwjgl.Main.java", "BodyUseAPI": [], "Fixed commit": "6afe2aac0d133ff391174b36fb6201d7191b4b29", "Url": "https://api.github.com/repos/defconx/lwjgl3-tutorial", "Date": "2016-06-06T21:17:06Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.jet.lang.diagnostics.rendering.ConstraintSystemImpl.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((typeParameterDescriptor == null) && (status.hasConflictingConstraints())) { return org.jetbrains.jet.lang.diagnostics.rendering.Renderers.renderConflictingSubstitutionsInferenceError(inferenceErrorData, result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1196/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.diagnostics.rendering.Renderers.java", "BodyUseAPI": [], "Fixed commit": "01836d4dcf87f967424ad570aae3dce04058215d", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2013-12-24T10:52:58Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rowIndex < 0) { rowIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7621/buggy-version/Timeline.src.view.NewDayTimelineGrid.java", "BodyUseAPI": [], "Fixed commit": "17c5e59bd013e5f66efe9e4f0b51a797351fa8f4", "Url": "https://api.github.com/repos/DanielHammerin/TimeLine", "Date": "2015-05-25T09:50:43Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isDebugEnabled()) { logger.debug((\"NodeRef Id: \" + (nodeRef.getId().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7020/buggy-version/alfviral.src.main.java.com.fegor.alfresco.behavior.OnUpdateReadScan.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug((\"NodeRef Id: \" + (nodeRef.getId().toString())))"], "Fixed commit": "429e705c808cdaef1bf0531cebb2ef8b98a816fe", "Url": "https://api.github.com/repos/fegorama/alfviral", "Date": "2015-06-14T11:24:38Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nodeService.exists(nodeRef)) { actionService.executeAction(actionService.createAction(\"alfviral.virusscan.action\"), nodeRef); if (nodeService.hasAspect(nodeRef, AlfviralModel.ASPECT_INFECTED)) { if (logger.isDebugEnabled()) { logger.debug(((((this.getClass().getName()) + \": [In onContentUpdate: \") + nodeRef) + \" is infected]\")); } } }else { logger.debug(((\"NodeRef Id: \" + (nodeRef.getId().toString())) + \" has deleted (update event)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7020/buggy-version/alfviral.src.main.java.com.fegor.alfresco.behavior.OnUpdateReadScan.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(((((this.getClass().getName()) + \": [In onContentUpdate: \") + nodeRef) + \" is infected]\"))", "org.apache.log4j.Logger.debug(((\"NodeRef Id: \" + (nodeRef.getId().toString())) + \" has deleted (update event)\"))", "org.alfresco.service.cmr.repository.NodeService.hasAspect(org.alfresco.service.cmr.repository.NodeRef,AlfviralModel.ASPECT_INFECTED)", "org.alfresco.service.cmr.action.ActionService.executeAction(actionService.createAction(\"alfviral.virusscan.action\"),org.alfresco.service.cmr.repository.NodeRef)", "org.alfresco.service.cmr.repository.NodeRef.getId()", "nodeRef.getId().toString()"], "Fixed commit": "429e705c808cdaef1bf0531cebb2ef8b98a816fe", "Url": "https://api.github.com/repos/fegorama/alfviral", "Date": "2015-06-14T11:24:38Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client.smrtms.com.smrtms_client.controller.LoginUser.getInstance()) != null) { this.location = location; client.smrtms.com.smrtms_client.controller.LoginUser.getInstance().setLatitude(location.getLatitude()); client.smrtms.com.smrtms_client.controller.LoginUser.getInstance().setLongitude(location.getLongitude()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4337/buggy-version/app.src.main.java.client.smrtms.com.smrtms_client.controller.GPSTracker.java", "BodyUseAPI": [], "Fixed commit": "a8b1082579e0417755f696e17dd82013eafcd825", "Url": "https://api.github.com/repos/ethragur/SMRTMS", "Date": "2015-06-12T18:08:13Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (data != null) { while (data.moveToNext()) { com.example.lovebhardwaj.popularmoviesapp.utilities.JsonDataUtility.MovieItem loadedMovieItem = new com.example.lovebhardwaj.popularmoviesapp.utilities.JsonDataUtility.MovieItem(data.getString(data.getColumnIndex(MovieContract.MovieEntry.MOVIE_ID)), data.getString(data.getColumnIndex(MovieContract.MovieEntry.MOVIE_TITLE)), data.getString(data.getColumnIndex(MovieContract.MovieEntry.MOVIE_POSTER_PATH)), data.getString(data.getColumnIndex(MovieContract.MovieEntry.MOVIE_PLOT)), data.getString(data.getColumnIndex(MovieContract.MovieEntry.MOVIE_RATING)), data.getString(data.getColumnIndex(MovieContract.MovieEntry.MOVIE_RELEASE_DATE))); favoriteList.add(loadedMovieItem); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/754/buggy-version/app.src.main.java.com.example.lovebhardwaj.popularmoviesapp.MainActivity.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(MovieContract.MovieEntry.MOVIE_ID)", "android.database.Cursor.getColumnIndex(MovieContract.MovieEntry.MOVIE_POSTER_PATH)", "android.database.Cursor.getString(data.getColumnIndex(MovieContract.MovieEntry.MOVIE_PLOT))", "android.database.Cursor.getString(data.getColumnIndex(MovieContract.MovieEntry.MOVIE_RATING))", "android.database.Cursor.getColumnIndex(MovieContract.MovieEntry.MOVIE_RELEASE_DATE)", "android.database.Cursor.getString(data.getColumnIndex(MovieContract.MovieEntry.MOVIE_RELEASE_DATE))", "android.database.Cursor.getString(data.getColumnIndex(MovieContract.MovieEntry.MOVIE_ID))", "android.database.Cursor.getColumnIndex(MovieContract.MovieEntry.MOVIE_PLOT)", "android.database.Cursor.getColumnIndex(MovieContract.MovieEntry.MOVIE_TITLE)", "android.database.Cursor.getString(data.getColumnIndex(MovieContract.MovieEntry.MOVIE_POSTER_PATH))", "android.database.Cursor.getString(data.getColumnIndex(MovieContract.MovieEntry.MOVIE_TITLE))", "android.database.Cursor.getColumnIndex(MovieContract.MovieEntry.MOVIE_RATING)", "android.database.Cursor.moveToNext()"], "Fixed commit": "6ce24639e04e0b146388f14c2ae70723747bb214", "Url": "https://api.github.com/repos/lovebhardwaj/PopularMoviesApp", "Date": "2017-07-08T16:23:31Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((com.example.lovebhardwaj.popularmoviesapp.MainActivity.mMovieItems) != null) && ((selectionCriteria.equals(com.example.lovebhardwaj.popularmoviesapp.MainActivity.SELECTION_POPULAR)) || (selectionCriteria.equals(com.example.lovebhardwaj.popularmoviesapp.MainActivity.SELECTION_TOP_RATED)))) { int scrollPosition = com.example.lovebhardwaj.popularmoviesapp.MainActivity.saveRecyclerState.getInt(com.example.lovebhardwaj.popularmoviesapp.MainActivity.POSITION_KEY); if (scrollPosition == ((mMovieListAdapter.getItemCount()) - 1)) { mRecyclerView.smoothScrollToPosition(scrollPosition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/754/buggy-version/app.src.main.java.com.example.lovebhardwaj.popularmoviesapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6ce24639e04e0b146388f14c2ae70723747bb214", "Url": "https://api.github.com/repos/lovebhardwaj/PopularMoviesApp", "Date": "2017-07-08T16:23:31Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cgiar.ccafs.ap.data.model.Project.getBudget(budget.getInstitution().getId(),budget.getType().getValue(),int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (previous == null) { budget.setAmount(0); }else { budget.setAmount(previous.getAmount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/566/buggy-version/impactPathways.src.main.java.org.cgiar.ccafs.ap.action.planning.ProjectBudgetsPlanningAction.java", "BodyUseAPI": ["org.cgiar.ccafs.ap.data.model.Budget.getAmount()", "org.cgiar.ccafs.ap.data.model.Budget.setAmount(previous.getAmount())"], "Fixed commit": "1e5a4bfc795e8d0b989871c92621f860f2b5e0bc", "Url": "https://api.github.com/repos/CCAFS/ccafs-ap", "Date": "2015-10-23T20:25:21Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlaylist) != null) { playerState = 1; pIsComplete = false; mp1 = new android.media.MediaPlayer(); mp1.setOnErrorListener(this); mp1.setOnPreparedListener(this); mp1.setOnCompletionListener(this); mp2 = new android.media.MediaPlayer(); mp2.setOnErrorListener(this); mp2.setOnPreparedListener(this); mp2.setOnCompletionListener(this); try { mp1.setDataSource(currentPlaylist.getSong(0).getSource()); android.os.Bundle bundle = new android.os.Bundle(); bundle.putString(\"name\", currentPlaylist.getSong(0).getName()); android.os.Message msg = android.os.Message.obtain(pHandler, com.captncript.dadsRadio.DadsPlayer.SONG_NAME); msg.setData(bundle); msg.sendToTarget(); mp1.prepare(); } catch (java.lang.SecurityException e) { mPrepped = \"Security: \" + (e.toString()); } catch (java.lang.IllegalArgumentException e) { mPrepped = \"IllegalArgument: \" + (e.toString()); } catch (java.lang.IllegalStateException e) { mPrepped = \"IllegalState: \" + (e.toString()); } catch (java.io.IOException e) { mPrepped = \"IO: \" + (e.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8620/buggy-version/dadsRadio.app.src.main.java.com.captncript.dadsRadio.DadsPlayer.java", "BodyUseAPI": [], "Fixed commit": "2468cf1d83821724a7745e3cc9505b13fff00aa3", "Url": "https://api.github.com/repos/captncript/dadsradio", "Date": "2016-09-01T18:25:19Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (base == null) base = hudson.remoting.ByteStreamCommandTransport.class.getClassLoader();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8147/buggy-version/src.main.java.hudson.remoting.ByteStreamCommandTransport.java", "BodyUseAPI": [], "Fixed commit": "302d1a56f7a039dc33cd39084c61c79a6b80fc68", "Url": "https://api.github.com/repos/huybrechts/remoting", "Date": "2012-03-14T03:49:14Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.core.technicaldebt.db.CharacteristicDto.getRootId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rootId == null) { throw new java.lang.IllegalArgumentException(((\"Requirement on rule '\" + (pluginRequirement.ruleKey())) + \"' should not be linked on a root characteristic.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5080/buggy-version/sonar-core.src.main.java.org.sonar.core.technicaldebt.TechnicalDebtModelSynchronizer.java", "BodyUseAPI": [], "Fixed commit": "c6aae7c065df6bdbe0d96baf1d5d46e459d36a57", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-12-02T17:02:03Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getHttpCode()) == (Http.Status.NOT_FOUND)) { flash(\"error\", \"The requested stream was deleted and no longer exist.\"); return redirect(routes.StreamsController.index()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3044/buggy-version/app.controllers.StreamSearchController.java", "BodyUseAPI": [], "Fixed commit": "cd32a7e4408fbf0a52378c76667448ef263c0e84", "Url": "https://api.github.com/repos/AsherBond/graylog2-web-interface", "Date": "2014-01-30T16:42:55Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pandora.clone.services.MusicServices.playByGenre(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (song != null) { return new org.springframework.http.ResponseEntity(song, org.springframework.http.HttpStatus.OK); }else { try { response.sendError(404, \"Genre does not exist\"); } catch (java.io.IOException e) { e.printStackTrace(); } return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1971/buggy-version/AudioStreaming.src.main.java.pandora.clone.controller.MusicController.java", "BodyUseAPI": [], "Fixed commit": "79153064a6dca68c0bfe92f7657be8d4124f3ca2", "Url": "https://api.github.com/repos/pastorsj/pandora-clone", "Date": "2017-04-28T14:31:50Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pandora.clone.services.StatementResult.list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((songList.size()) == 0) { java.lang.System.out.println(songList.toString()); java.lang.System.out.println(\"Song List is Empty!!!\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1971/buggy-version/AudioStreaming.src.main.java.pandora.clone.services.MusicServices.java", "BodyUseAPI": ["java.util.List<pandora.clone.services.Record>.toString()", "java.io.PrintStream.println(songList.toString())"], "Fixed commit": "79153064a6dca68c0bfe92f7657be8d4124f3ca2", "Url": "https://api.github.com/repos/pastorsj/pandora-clone", "Date": "2017-04-28T14:31:50Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getBestProvider(android.location.Criteria,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (provider != null) { mLocationManager.requestLocationUpdates(provider, Constants.EXTRA_MIN_TIME, Constants.EXTRA_MIN_DISTANCE, mListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5014/buggy-version/src.com.CallMapper.receivers.OutgoingCallReceiver.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(java.lang.String,Constants.EXTRA_MIN_TIME,Constants.EXTRA_MIN_DISTANCE,android.location.LocationListener)"], "Fixed commit": "07ee3c4329113dc2b0ece7189bf0b347a897cfd0", "Url": "https://api.github.com/repos/spinnaker99/callmapper", "Date": "2013-03-16T19:30:46Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getBestProvider(android.location.Criteria,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (provider != null) { mLocationManager.requestLocationUpdates(provider, Constants.EXTRA_MIN_TIME, Constants.EXTRA_MIN_DISTANCE, mListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5014/buggy-version/src.com.CallMapper.receivers.IncomingSmsListener.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(java.lang.String,Constants.EXTRA_MIN_TIME,Constants.EXTRA_MIN_DISTANCE,android.location.LocationListener)"], "Fixed commit": "07ee3c4329113dc2b0ece7189bf0b347a897cfd0", "Url": "https://api.github.com/repos/spinnaker99/callmapper", "Date": "2013-03-16T19:30:46Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getBestProvider(android.location.Criteria,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (provider != null) { mLocationManager.requestLocationUpdates(provider, Constants.EXTRA_MIN_TIME, Constants.EXTRA_MIN_DISTANCE, mListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5014/buggy-version/src.com.CallMapper.receivers.IncomingCallReceiver.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(java.lang.String,Constants.EXTRA_MIN_TIME,Constants.EXTRA_MIN_DISTANCE,android.location.LocationListener)"], "Fixed commit": "07ee3c4329113dc2b0ece7189bf0b347a897cfd0", "Url": "https://api.github.com/repos/spinnaker99/callmapper", "Date": "2013-03-16T19:30:46Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (register) { builder.setTitle(R.string.registering); }else { builder.setTitle(R.string.logging_in); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6825/buggy-version/app.src.main.java.edu.msu.wegschei.flocking.LoginDlg.java", "BodyUseAPI": [], "Fixed commit": "44d91d75dfe8cbd639f89035df4e1da772e32ef0", "Url": "https://api.github.com/repos/dlwegscheid/FlockingWeb", "Date": "2015-04-05T04:18:02Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == returnMessage) { android.widget.Toast.makeText(this, \"\u7f51\u7edc\u8fde\u63a5\u5931\u8d25\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/356/buggy-version/app.src.main.java.com.example.qdu_edu_cnclient.app.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "16b11d1a90d2d057fb8cf8b0d02b0aa12176461c", "Url": "https://api.github.com/repos/whatwewant/qdu_edu_cn_client_for_android", "Date": "2014-11-22T10:44:01Z"},
{"Line": "=>1407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count < 0) && ((_model) instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (_model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2426/buggy-version/zul.src.org.zkoss.zul.Listbox.java", "BodyUseAPI": [], "Fixed commit": "dd529f1b548ca0348e65e2762a4313f79f79b760", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>1941", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRemove && ((_model) instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (_model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2426/buggy-version/zul.src.org.zkoss.zul.Listbox.java", "BodyUseAPI": [], "Fixed commit": "dd529f1b548ca0348e65e2762a4313f79f79b760", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zul.Grid.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((count < 0) && (model instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2426/buggy-version/zul.src.org.zkoss.zul.Rows.java", "BodyUseAPI": [], "Fixed commit": "dd529f1b548ca0348e65e2762a4313f79f79b760", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zul.Grid.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isRemove && (model instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2426/buggy-version/zul.src.org.zkoss.zul.Rows.java", "BodyUseAPI": [], "Fixed commit": "dd529f1b548ca0348e65e2762a4313f79f79b760", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((password != null) && (password.trim().equals(\"\"))) { password = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3321/buggy-version/src.main.java.issac.demo.utils.RedisUtil.java", "BodyUseAPI": [], "Fixed commit": "e12c0b16ee24dc084b6a78e8227c783ed5d4101e", "Url": "https://api.github.com/repos/humaoyongyx/web", "Date": "2017-06-02T09:06:57Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((clientName != null) && (clientName.trim().equals(\"\"))) { clientName = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3321/buggy-version/src.main.java.issac.demo.utils.RedisUtil.java", "BodyUseAPI": [], "Fixed commit": "e12c0b16ee24dc084b6a78e8227c783ed5d4101e", "Url": "https://api.github.com/repos/humaoyongyx/web", "Date": "2017-06-02T09:06:57Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (theWorld.isRemote) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7921/buggy-version/src.BlockColoniesChest.java", "BodyUseAPI": [], "Fixed commit": "4ed989591a55233704420e1aa5662d260efc81dd", "Url": "https://api.github.com/repos/AngleWyrm/Colonies", "Date": "2013-01-29T18:08:40Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(myLocation.getLocation(this, locationResult))) { address = session.getLoginLocation(); place = address; if (pd != null) { pd.dismiss(); } if (validateFields()) { if ((selectedImagePath) != null) { compressImageOrGif(); }else if ((selectedVideoPath) != null) { compressVideo(); }else uploadImage(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1005/buggy-version/app.src.main.java.in.reweyou.reweyou.PostReport.java", "BodyUseAPI": [], "Fixed commit": "60709a42c3db2aebe0924496906a901f978aa82e", "Url": "https://api.github.com/repos/varunn12/Reweyou", "Date": "2016-12-05T03:31:04Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(checkLogin(admin))) { add(admin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8856/buggy-version/CashFlow.src.com.mikesandfriends.cashflow.LoginHandler.java", "BodyUseAPI": [], "Fixed commit": "ec1861e4dcb058b7901ffe788bc304311d0b65e1", "Url": "https://api.github.com/repos/alombardo4/CashFlow", "Date": "2014-02-05T19:54:09Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((btAdapter) == null) { uiControl(6, R.string.no_bt_adapter); }else { if (!(btAdapter.isEnabled())) { android.content.Intent enableBt = new android.content.Intent(android.bluetooth.BluetoothAdapter.ACTION_REQUEST_ENABLE); startActivityForResult(enableBt, REQUEST_ENABLE_BT); }else { startBluetoothService(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8685/buggy-version/android.GirodicerApp.app.src.main.java.com.example.tberroa.girodicerapp.activities.CurrentOneActivity.java", "BodyUseAPI": [], "Fixed commit": "51237b1f4a57053756484999e1ac603eda96aaac", "Url": "https://api.github.com/repos/lasoren/ice-dam-drone", "Date": "2016-04-05T19:25:23Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newNode.getParent()) == (root)) { newNode.getParent().setBlack(); newNode = newNode.getParent(); }else if ((newNode.getGrandParent().hasLeftChild()) && ((newNode.getParent()) == (newNode.getGrandParent().getLeftChild()))) { y = newNode.getGrandParent().getLeftChild(); if (y.isRed()) { newNode.getParent().setBlack(); y.setBlack(); newNode.getGrandParent().setRed(); newNode = newNode.getGrandParent(); }else if (newNode == (newNode.getParent().getRightChild())) { newNode = newNode.getParent(); leftRotate(newNode); } if (newNode.hasParent()) { newNode.getParent().setBlack(); if (newNode.hasGrandParent()) { newNode.getGrandParent().setRed(); rightRotate(newNode.getGrandParent()); } } }else { y = newNode.getGrandParent().getRightChild(); if (y.isRed()) { newNode.getParent().setBlack(); y.setBlack(); newNode.getGrandParent().setRed(); newNode = newNode.getGrandParent(); }else if (newNode == (newNode.getParent().getLeftChild())) { newNode = newNode.getParent(); rightRotate(newNode); } if (newNode.hasParent()) { newNode.getParent().setBlack(); if (newNode.hasGrandParent()) { newNode.getGrandParent().setRed(); leftRotate(newNode.getGrandParent()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4230/buggy-version/src.awesomeRB.RBTree.java", "BodyUseAPI": ["awesomeRB.RBTree.RBNode.getParent()", "awesomeRB.RBTree.RBNode.setRed()", "awesomeRB.RBTree.RBNode.getGrandParent()", "awesomeRB.RBTree.RBNode.setBlack()", "awesomeRB.RBTree.RBNode.getParent()", "awesomeRB.RBTree.RBNode.getGrandParent()", "awesomeRB.RBTree.RBNode.hasLeftChild()", "awesomeRB.RBTree.RBNode.getLeftChild()", "awesomeRB.RBTree.RBNode.getGrandParent()", "awesomeRB.RBTree.RBNode.getGrandParent()", "awesomeRB.RBTree.RBNode.getParent()", "awesomeRB.RBTree.RBNode.getGrandParent()", "awesomeRB.RBTree.RBNode.setBlack()", "awesomeRB.RBTree.RBNode.getParent()", "awesomeRB.RBTree.RBNode.getLeftChild()"], "Fixed commit": "a46dc4ba927514e38770d3d6a75d731f716704d5", "Url": "https://api.github.com/repos/n0nick/awesomeRB", "Date": "2011-12-13T09:00:27Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["codes.derive.foldem.Poker.hand(codes.derive.foldem.Card,codes.derive.foldem.Card)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(hands.contains(h))) { hands.add(codes.derive.foldem.Poker.hand(codes.derive.foldem.Poker.card(a, suits[0]), codes.derive.foldem.Poker.card(b, suits[1]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6384/buggy-version/src.main.java.codes.derive.foldem.Poker.java", "BodyUseAPI": ["java.util.List<codes.derive.foldem.Hand>.add(codes.derive.foldem.Hand)"], "Fixed commit": "ddd6d5541300adbd25bde287fd78e4e9780588cf", "Url": "https://api.github.com/repos/ableiten/foldem", "Date": "2017-03-31T05:08:34Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (a != b) { for (codes.derive.foldem.Suit suit : codes.derive.foldem.Suit.values()) { hands.add(codes.derive.foldem.Poker.hand(codes.derive.foldem.Poker.card(a, suit), codes.derive.foldem.Poker.card(b, suit))); } }else if (length == 3) { throw new java.lang.IllegalArgumentException(\"A hand cannot have identical cards of the same suit\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6384/buggy-version/src.main.java.codes.derive.foldem.Poker.java", "BodyUseAPI": ["codes.derive.foldem.Poker.hand(codes.derive.foldem.Card,codes.derive.foldem.Card)", "java.util.List<codes.derive.foldem.Hand>.add(codes.derive.foldem.Hand)", "codes.derive.foldem.Poker.card(int,codes.derive.foldem.Suit)", "codes.derive.foldem.Poker.card(int,codes.derive.foldem.Suit)"], "Fixed commit": "ddd6d5541300adbd25bde287fd78e4e9780588cf", "Url": "https://api.github.com/repos/ableiten/foldem", "Date": "2017-03-31T05:08:34Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Intent.ACTION_BOOT_COMPLETED.equals(intent.getAction())) { android.content.Intent i = new android.content.Intent(context, com.catchingnow.tinyclipboards.CBWatcherService.class); context.startService(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7672/buggy-version/app.src.main.java.com.catchingnow.tinyclipboards.LaunchServiceAtStartup.java", "BodyUseAPI": [], "Fixed commit": "def56a95ed8cd2efc02a29d367123a9ab10c187b", "Url": "https://api.github.com/repos/heruoxin/Clip-Stack", "Date": "2015-01-19T06:23:09Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((null != value) && (value instanceof java.lang.String)) { java.lang.Class<?> ftype = f.getType(); if (!(ftype.isInstance(value))) { value = act.Act.app().resolverManager().resolve(((java.lang.String) (value)), ftype); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9155/buggy-version/src.main.java.act.db.AdaptiveRecord.java", "BodyUseAPI": ["java.lang.Class<?>.isInstance(java.lang.Object)"], "Fixed commit": "95d47888380fd9daf3779d6726c31610303a0028", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2017-01-26T23:27:18Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState == null) { adapter = new edu.sintez.audioplayer.app.adapter.PlaylistAdapter(this, R.layout.pattern_playlist_item, tracks); }else { android.os.Bundle bundle = savedInstanceState.getBundle(edu.sintez.audioplayer.app.activity.MainActivity.SAVED_BUNDLE_KEY); restoreData(bundle); adapter = new edu.sintez.audioplayer.app.adapter.PlaylistAdapter(this, R.layout.pattern_playlist_item, tracks); lvPlaylist.setSelection(selTrackPos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8827/buggy-version/app.src.main.java.edu.sintez.audioplayer.app.activity.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.getBundle(java.lang.String)"], "Fixed commit": "9bd33a77b277f5c79af78f9ad4dcca9b658afc8f", "Url": "https://api.github.com/repos/maxtat3/audioplayer-android", "Date": "2016-05-30T14:10:23Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.size()) > 0) { for (int i = 0; i < (values.size()); i++) { temp += values.elementAt(i).ToString(); temp += \",\"; } temp = temp.substring(0, ((temp.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4347/buggy-version/src.JavaEasyJson.java", "BodyUseAPI": ["JavaEasyJson.JsonValue.ToString()", "java.util.Vector<JavaEasyJson.JsonValue>.size()", "java.util.Vector<JavaEasyJson.JsonValue>.elementAt(int)"], "Fixed commit": "ef6c0ad23cb6b3e615747472080508ecae4e90fa", "Url": "https://api.github.com/repos/zhaoliangcn/JavaEasyJson", "Date": "2016-03-01T09:22:21Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c.getID()) == (opponentConnection.getID())) opponentConnection = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2918/buggy-version/src.net.LobbyManager.java", "BodyUseAPI": [], "Fixed commit": "0e56c445f07fad6c779d1ebf483646d8da86084f", "Url": "https://api.github.com/repos/jchilln92/cs32final", "Date": "2011-05-05T00:35:02Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.storedOxygen) > (this.maxOxygen)) this.storedOxygen = this.maxOxygen;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3577/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.tile.TileEntityOxygenDistributor.java", "BodyUseAPI": [], "Fixed commit": "cfd4180fea63697a6d55aae6e8b38853940d4312", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2014-09-11T16:29:37Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isVisible())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6261/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.shared.components.JDropDownButton.java", "BodyUseAPI": [], "Fixed commit": "5cd2db0295bcda0cdabe00a4dbdae39fd5db808d", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2016-08-14T10:19:54Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tr.getText().toString().equals(\"\")) || (en.getText().toString().equals(\"\"))) { android.widget.Toast.makeText(this, \"PLEASE FILL ALL BLANKS\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3457/buggy-version/app.src.main.java.com.example.mesihmalikkuru.quizapp.AddItemActivity.java", "BodyUseAPI": [], "Fixed commit": "81e6fcda85844bf067d3553e2a90798705310ede", "Url": "https://api.github.com/repos/malikkuru/QuizApp_Android", "Date": "2017-04-16T20:55:33Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((string == null) || (!(java.net.URI.create(org.apache.commons.httpclient.util.URIUtil.encodeQuery(string)).isAbsolute()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/325/buggy-version/ss-datatypes.ss-datatypes-datatypes.src.main.java.at.kc.tugraz.ss.datatypes.datatypes.entity.SSUri.java", "BodyUseAPI": [], "Fixed commit": "cb1132e9040d8c766ef38b4c38eda28d6087cc33", "Url": "https://api.github.com/repos/learning-layers/SocialSemanticServer", "Date": "2014-06-20T08:17:29Z"},
{"Line": "=>1002", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.emf.ecore.resource.Resource.getResourceSet()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (rs != null) { for (org.eclipse.emf.ecore.resource.Resource r : rs.getResources()) { if (r instanceof org.eclipse.bpmn2.util.Bpmn2Resource) { return r; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3242/buggy-version/org.eclipse.bpmn2.modeler.core.src.org.eclipse.bpmn2.modeler.core.utils.ModelUtil.java", "BodyUseAPI": ["org.eclipse.emf.ecore.resource.ResourceSet.getResources()"], "Fixed commit": "4caceb3b724a1e5e7755e27ae1cfdef0d7b4e034", "Url": "https://api.github.com/repos/fixteam/bpmn2-modeler", "Date": "2013-11-06T21:25:34Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value == null) && (this.field.getType().isPrimitive())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8736/buggy-version/src.main.java.org.sql2o.reflection.FieldSetter.java", "BodyUseAPI": [], "Fixed commit": "4a0f0e39819df728ae194fc5b0dbac8538764330", "Url": "https://api.github.com/repos/aaberg/sql2o", "Date": "2012-03-19T22:35:20Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((value == null) && ((this.method.getParameterTypes().length) == 1)) && (this.method.getParameterTypes()[0].isPrimitive())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8736/buggy-version/src.main.java.org.sql2o.reflection.MethodSetter.java", "BodyUseAPI": [], "Fixed commit": "4a0f0e39819df728ae194fc5b0dbac8538764330", "Url": "https://api.github.com/repos/aaberg/sql2o", "Date": "2012-03-19T22:35:20Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((indexModel) != null) { initShownPoint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1384/buggy-version/app.src.main.java.cn.com.jinrizhushi.stock.util.customstockview.StockTimeSharingView.java", "BodyUseAPI": [], "Fixed commit": "77c7e2999d0d192d321437c1b70b9e25838f927a", "Url": "https://api.github.com/repos/jinrizhushi/stock", "Date": "2015-12-08T10:48:36Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((cn.com.jinrizhushi.stock.util.customstockview.StockTimeSharingView.listPoint) != null) && ((cn.com.jinrizhushi.stock.util.customstockview.StockTimeSharingView.listPoint.size()) > 0)) { initLine(canvas); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1384/buggy-version/app.src.main.java.cn.com.jinrizhushi.stock.util.customstockview.StockTimeSharingView.java", "BodyUseAPI": [], "Fixed commit": "77c7e2999d0d192d321437c1b70b9e25838f927a", "Url": "https://api.github.com/repos/jinrizhushi/stock", "Date": "2015-12-08T10:48:36Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wrap != null) { player = new info.tregmine.api.TregminePlayer(name); }else { player = new info.tregmine.api.TregminePlayer(wrap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3694/buggy-version/src.info.tregmine.database.DBPlayerDAO.java", "BodyUseAPI": [], "Fixed commit": "a4ff58834ad2b7d26116516f46d8417cfb705ae2", "Url": "https://api.github.com/repos/EmilHernvall/tregmine", "Date": "2013-07-20T12:52:04Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.gecosi.internal.SiDriverState.sicard6_192PunchesMode()) { return net.gecosi.internal.SiDriverState.RETRIEVE_SICARD_10_PLUS_DATA_192_MODE.retrieve(queue, writer, siHandler); }else { return net.gecosi.internal.SiDriverState.RETRIEVE_SICARD_10_PLUS_DATA.retrieve(queue, writer, siHandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5539/buggy-version/src.net.gecosi.internal.SiDriverState.java", "BodyUseAPI": [], "Fixed commit": "d43d383356cecb4e7c0afce40b15be45f08a9d76", "Url": "https://api.github.com/repos/sdenier/GecoSI", "Date": "2013-09-02T20:15:03Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.org.intersect.faims.android.ui.view.CustomSpinner.getItemAtPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pair.getValue()) != null) { pairs.add(pair); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7938/buggy-version/faims-android-app.src.au.org.intersect.faims.android.ui.view.CustomSpinner.java", "BodyUseAPI": ["java.util.List<au.org.intersect.faims.android.data.NameValuePair>.add(au.org.intersect.faims.android.data.NameValuePair)"], "Fixed commit": "88d811890aaddb0294ae3eb70aa69cd54127ab4d", "Url": "https://api.github.com/repos/IntersectAustralia/faims-android", "Date": "2014-08-13T04:10:24Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentClusterIdx) >= (clusterIds.length)) currentClusterIdx = (clusterIds.length) - 1; else if ((currentClusterIdx) < 0) currentClusterIdx = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5688/buggy-version/core.src.main.java.com.orientechnologies.orient.core.iterator.ORecordIteratorClusters.java", "BodyUseAPI": [], "Fixed commit": "f33ae3aa49cabd4404c27784bd6452004b015104", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-01-27T15:34:35Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((age) < 18) || ((age) > 65)) { errors.add(new play.data.validation.ValidationError(\"age\", \"Sorry in order to calculate calorie estimates this application can only be used for ages 18-65\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/140/buggy-version/app.views.formdata.UserFormData.java", "BodyUseAPI": [], "Fixed commit": "07a81b1a7b35ed0c216ab98856bfa29fc78199c4", "Url": "https://api.github.com/repos/lkellett/Stanford", "Date": "2015-03-04T06:01:25Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((height) < 20) || ((height) > 260)) { errors.add(new play.data.validation.ValidationError(\"height\", \"Invalid value in the height field, please enter the height in cm, should be a value in between 20-260\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/140/buggy-version/app.views.formdata.UserFormData.java", "BodyUseAPI": [], "Fixed commit": "07a81b1a7b35ed0c216ab98856bfa29fc78199c4", "Url": "https://api.github.com/repos/lkellett/Stanford", "Date": "2015-03-04T06:01:25Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a.getItemDamage()) != (b.getItemDamage())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1065/buggy-version/java.cyano.lootable.entities.EntityLootableBody.java", "BodyUseAPI": [], "Fixed commit": "7dfea27508d1c07f20684253bcae5374dc51c6ba", "Url": "https://api.github.com/repos/cyanobacterium/DrCyanos_Lootable-Bodies", "Date": "2014-12-20T21:51:35Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (possi_percentage >= 1) { possi_percentage = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1481/buggy-version/src.SecondStage.java", "BodyUseAPI": [], "Fixed commit": "8e860190c13e91a67b355a8d3e4f58b50e297f19", "Url": "https://api.github.com/repos/sharonWU0505/SMART", "Date": "2016-12-01T11:54:49Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aCallInfo.toString().contains(\"move\")) { java.lang.System.out.println(\"found move\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3951/buggy-version/src.unc.cs.checks.MissingMethodCallCheck.java", "BodyUseAPI": [], "Fixed commit": "c9fc47c06d1c10efec018d484282bfc681e10476", "Url": "https://api.github.com/repos/pdewan/UNCCheckStyle", "Date": "2017-11-02T17:41:56Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selected.getRepairLocation().equals(\"\")) { javax.swing.JOptionPane.showMessageDialog(null, \"Repair Ticket already cleared !\", \"Repair Ticket\", javax.swing.JOptionPane.ERROR_MESSAGE); }else { phoneInv.DDriver.updateLocation(selected.getRepairLocation(), 0); phoneInv.DDriver.updateRepair(DDriver.repairList.indexOf(selected), selected.getPhoneBrand(), selected.getPhoneModel(), selected.getPhoneImei(), selected.getRepairService(), selected.getPhonePrice(), selected.getRepairStats(), selected.getRepairComment(), selected.getRepairUserPin(), \"\"); javax.swing.JOptionPane.showMessageDialog(null, \"Repair Ticket has been cleard !\", \"Repair Ticket\", javax.swing.JOptionPane.INFORMATION_MESSAGE); updateScreen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/216/buggy-version/src.phoneInv.RepairScreen.java", "BodyUseAPI": ["phoneInv.Repair.getRepairStats()", "phoneInv.DDriver.updateLocation(selected.getRepairLocation(),int)", "phoneInv.DDriver.updateRepair(DDriver.repairList.indexOf(selected),selected.getPhoneBrand(),selected.getPhoneModel(),selected.getPhoneImei(),selected.getRepairService(),selected.getPhonePrice(),selected.getRepairStats(),selected.getRepairComment(),selected.getRepairUserPin(),java.lang.String)", "phoneInv.Repair.getPhoneBrand()", "phoneInv.Repair.getRepairComment()", "phoneInv.Repair.getRepairService()", "phoneInv.Repair.getPhonePrice()", "phoneInv.Repair.getPhoneModel()", "phoneInv.Repair.getPhoneImei()", "phoneInv.Repair.getRepairLocation()", "phoneInv.Repair.getRepairUserPin()", "DDriver.repairList.indexOf(phoneInv.Repair)"], "Fixed commit": "0aebee77d4a37414b2ad3423f89841d784de2867", "Url": "https://api.github.com/repos/premieremobi/phone", "Date": "2015-03-06T10:12:25Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cp.hw3.storage.HBaseHelper.getInvertedByWord(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (iw == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4127/buggy-version/src.main.java.cp.hw3.query.SearchEngine.java", "BodyUseAPI": [], "Fixed commit": "a492f95e3786df07b2455642b477e2ebd05c0e03", "Url": "https://api.github.com/repos/yuzzwx/CP2015-hw3-PageRank", "Date": "2015-06-25T06:42:31Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.erlide.engine.ErlangEngine.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (engine == null) { org.erlide.util.ErlLogger.warn(\"Erlang engine was not created!\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6599/buggy-version/org.erlide.model.src.org.erlide.engine.internal.model.BeamLocator.java", "BodyUseAPI": [], "Fixed commit": "242b953d45835a0fb17bd192fccc15cf5f55e242", "Url": "https://api.github.com/repos/vladdu/erlide", "Date": "2013-12-10T07:55:48Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["engine.getModel().getErlangProject(org.eclipse.core.resources.IProject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (erlProject == null) { org.erlide.util.ErlLogger.warn(((\"Project \" + project) + \" is not in erlang model...\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6599/buggy-version/org.erlide.model.src.org.erlide.engine.internal.model.BeamLocator.java", "BodyUseAPI": [], "Fixed commit": "242b953d45835a0fb17bd192fccc15cf5f55e242", "Url": "https://api.github.com/repos/vladdu/erlide", "Date": "2013-12-10T07:55:48Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cols.size()) > 0) { for (java.lang.String field : cols) { if ((updateStr.length()) > 0) { updateStr.append(','); } if (!(field.equals(optLckCol))) { updateStr.append(identifier(field)).append(\"=IFNULL(?,\").append(identifier(field)).append(\")\"); }else { updateStr.append(identifier(field)).append(\"=(IFNULL(\").append(identifier(field)).append(\",IFNULL(?,0))+1)\"); } append(params, field, (++pos)); } insertOrUpdate.append(\" ON DUPLICATE KEY UPDATE \").append(updateStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4159/buggy-version/obase-mysql.src.main.java.com.github.obase.mysql.jdbc.SqlMetaKit.java", "BodyUseAPI": [], "Fixed commit": "ba4ba22427f7c4fe9c12399d3190112a12c27cf3", "Url": "https://api.github.com/repos/obase/java", "Date": "2017-01-04T07:58:05Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.daskiworks.ghwatch.backend.GHConstants.DEBUG)) { com.google.android.gms.analytics.Tracker t = com.daskiworks.ghwatch.ActivityTracker.getTracker(context); if (t != null) { t.send(new com.google.android.gms.analytics.HitBuilders.EventBuilder().setCategory(category).setAction(action).setLabel(label).setValue(value).build()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2651/buggy-version/src.com.daskiworks.ghwatch.ActivityTracker.java", "BodyUseAPI": [], "Fixed commit": "38942c1df5cc11dce7616246b9ee5e653a784509", "Url": "https://api.github.com/repos/Daskiworks/ghwatch", "Date": "2015-01-19T18:11:48Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.daskiworks.ghwatch.ActivityTracker.getTracker(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (t != null) { t.setScreenName(appScreen); t.send(new com.google.android.gms.analytics.HitBuilders.AppViewBuilder().build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2651/buggy-version/src.com.daskiworks.ghwatch.ActivityTracker.java", "BodyUseAPI": ["com.google.android.gms.analytics.Tracker.send(new com.google.android.gms.analytics.HitBuilders.AppViewBuilder().build())", "com.google.android.gms.analytics.Tracker.setScreenName(java.lang.String)"], "Fixed commit": "38942c1df5cc11dce7616246b9ee5e653a784509", "Url": "https://api.github.com/repos/Daskiworks/ghwatch", "Date": "2015-01-19T18:11:48Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (0 == (e.getValue().size())) { model.addElement(e.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/229/buggy-version/src.nameserver.ui.MetaInfo.java", "BodyUseAPI": ["javax.swing.DefaultListModel.addElement(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.getKey()"], "Fixed commit": "ef7290adba3089f755f5380685efaa8ae70b957e", "Url": "https://api.github.com/repos/dshnightmare/DistributedFileSystem", "Date": "2014-07-06T07:10:43Z"},
{"Line": "=>895", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (spaceBeforeSelfClosingElement) { stringBuffer.append(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4111/buggy-version/src.main.java.org.jboss.pressgang.ccms.utils.common.XMLUtilities.java", "BodyUseAPI": [], "Fixed commit": "c8064cc638b2c282c4dead360fea6d7c9baf7143", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCommonUtilities", "Date": "2014-06-04T00:27:44Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((coordField) != null) coordField.addPropertyChangeListener(\"value\", listener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4763/buggy-version/src.main.java.pointGroups.gui.CoordinateView.java", "BodyUseAPI": [], "Fixed commit": "4779ef8e505963324b62a3a26bdeed0f7e433959", "Url": "https://api.github.com/repos/Ryugoron/point-groups", "Date": "2014-01-23T22:41:49Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event != (org.chocosolver.solver.variables.events.IntEventType.REMOVE)) { super.notifyPropagators(transformEvent(((org.chocosolver.solver.variables.events.IntEventType) (event))), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6657/buggy-version/src.main.java.org.chocosolver.solver.variables.view.RealView.java", "BodyUseAPI": [], "Fixed commit": "f60daff22171e2d2bafdcf33bd9977b3847c858b", "Url": "https://api.github.com/repos/chocoteam/choco-solver", "Date": "2017-10-10T12:38:38Z"},
{"Line": "=>1254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getOpCode()) == (BuiltinFunctionOp.LOG)) output.setValueType(ValueType.DOUBLE); else if ((getOpCode()) == (BuiltinFunctionOp.XOR)) output.setValueType(ValueType.DOUBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1501/buggy-version/src.main.java.org.apache.sysml.parser.BuiltinFunctionExpression.java", "BodyUseAPI": [], "Fixed commit": "05e0d0e239a936e960b2396f448d2b5375d068df", "Url": "https://api.github.com/repos/j143/systemml", "Date": "2017-12-17T16:04:01Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (move.doMove()) { level.getMoveStack().push(move); level.handlePostMove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8893/buggy-version/src.hackstreet.sixeswild.controller.SwipeController.java", "BodyUseAPI": ["level.getMoveStack().push(hackstreet.sixeswild.move.StandardMove)"], "Fixed commit": "cfd7c02cdc3ad942ff8072a2d99869b8b1c6b4b0", "Url": "https://api.github.com/repos/HackStreetBoys/SixesWild", "Date": "2015-05-05T13:53:12Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.DyeColor.getByData(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (dyeColorData != null) return dyeColorData.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5227/buggy-version/src.com.gmail.zariust.otherdrops.data.ItemData.java", "BodyUseAPI": ["org.bukkit.DyeColor.toString()"], "Fixed commit": "1f39e4182388c78747a7a929f9ea794aca793a61", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2012-06-28T11:30:22Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mskcc.cbio.oncokb.util.Alteration.getAlteration()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (name != null) { java.lang.Boolean contain = false; for (java.lang.String inferredAlt : org.mskcc.cbio.oncokb.util.AlterationUtils.inferredAlterations) { if (inferredAlt.equalsIgnoreCase(name)) { contain = true; } } if (!contain) { result.add(alteration); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3974/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.AlterationUtils.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "be9c2773f76dfb7dbaaacf9652cb8258bb02054a", "Url": "https://api.github.com/repos/JiaoJiao123/oncokb", "Date": "2016-12-28T06:04:59Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(line.endsWith(\".\"))) && (!(line.endsWith(\"!\")))) && (!(line.endsWith(\"?\")))) line = line.concat(\".\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6151/buggy-version/src.monster.MarkovMonster.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "720569cc5f37b1d7ed2a12211a4a50ff86f347cc", "Url": "https://api.github.com/repos/CookiePLMonster/Markov-Monster-Chat", "Date": "2015-06-06T16:04:56Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mEmptyView) != null) && ((mEmptyView.getVisibility()) == (android.view.View.VISIBLE))) { mEmptyView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5665/buggy-version/library.src.main.java.com.devin.refreshview.MarsRefreshView.java", "BodyUseAPI": ["android.view.View.setVisibility(View.GONE)"], "Fixed commit": "69c3e6b7547eb5b9711a92208940e5417e57ca5a", "Url": "https://api.github.com/repos/shanhouwang/MarsRefreshView", "Date": "2017-12-15T09:21:19Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mEmptyView) != null) && ((mEmptyView.getVisibility()) == (android.view.View.GONE))) { mEmptyView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5665/buggy-version/library.src.main.java.com.devin.refreshview.MarsRefreshView.java", "BodyUseAPI": ["android.view.View.setVisibility(View.VISIBLE)"], "Fixed commit": "69c3e6b7547eb5b9711a92208940e5417e57ca5a", "Url": "https://api.github.com/repos/shanhouwang/MarsRefreshView", "Date": "2017-12-15T09:21:19Z"},
{"Line": "=>2284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["allCases.get(((allCases.size()) - 1)).isDefault()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hasDefault) { print(\"(\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3550/buggy-version/plugin.src.se.arnetheduck.j2c.transform.ImplWriter.java", "BodyUseAPI": [], "Fixed commit": "6f414fc9c0f294df3725aad43a2239ebca14d9c3", "Url": "https://api.github.com/repos/arnetheduck/j2c", "Date": "2012-06-24T20:22:38Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(this.size_max.equals(\"\"))) && show) { if ((java.lang.Integer.parseInt(this.size_max)) > (java.lang.Integer.parseInt(item.getSize()))) { show = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8791/buggy-version/player.SPIRIT-android.src.de.hft_stuttgart.spirit.android.view.StoryFilter.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "cb9795897a827416a192d52e2217949a34eff381", "Url": "https://api.github.com/repos/r0bn/swp2", "Date": "2015-05-10T22:27:44Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ogg.crm.entity.Customer.getLastestTradeTime()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(\"null\".equals(lastTradeTime))) { if (lastTradeTime.contains(\".\")) { int index = lastTradeTime.indexOf(\".\"); lastTradeTime = lastTradeTime.substring(0, index); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/737/buggy-version/crm.src.main.java.com.ogg.crm.ui.activity.CustomerDetailActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "d8c429dabebd0ee3ac147ec732dc1f65934b854c", "Url": "https://api.github.com/repos/xiguofeng/Crm", "Date": "2015-12-10T03:08:51Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3692/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "5df6e6b0bf9cde23f304e4f3f8ac2e45fe682078", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3692/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "5df6e6b0bf9cde23f304e4f3f8ac2e45fe682078", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_notEquals) { return org.eclipse.xtext.xbase.controlflow.EvaluationResult.NOT_A_CONSTANT.value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1429/buggy-version/plugins.org.eclipse.xtext.xbase.xtend-gen.org.eclipse.xtext.xbase.controlflow.EvaluationResult.java", "BodyUseAPI": [], "Fixed commit": "f9f1253d072b50a58cf9c5afed5e494426d86929", "Url": "https://api.github.com/repos/eclipse/xtext", "Date": "2014-11-21T08:23:23Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.ViewGroup.findViewById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (oldF != null) { com.shuyu.gsyvideoplayer.GSYVideoPlayer gsyVideoPlayer = ((com.shuyu.gsyvideoplayer.GSYVideoPlayer) (oldF)); gsyVideoPlayer.mIfCurrentIsFullscreen = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5836/buggy-version/gsyVideoPlayer.src.main.java.com.shuyu.gsyvideoplayer.video.GSYBaseVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "5c2d41a74d0c504b8bd40c254635252c95f03811", "Url": "https://api.github.com/repos/jyh149129/GSYVideoPlayer", "Date": "2017-06-12T09:14:59Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchRecentsListView) != null) { mSearchRecentsListView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1010/buggy-version/box-browse-sdk.src.main.java.com.box.androidsdk.browse.fragments.BoxBrowseFragment.java", "BodyUseAPI": [], "Fixed commit": "b1322a124e63ca1770481c9672f5d52d12cd0996", "Url": "https://api.github.com/repos/varungu/box-android-browse-sdk", "Date": "2016-08-23T20:48:23Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ct.vss.VirtualStackOfStacks.getFileInfosSer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((infos[0][0][0].compression) == 2) ij.IJ.log(\"Compression = LZW\"); else if ((infos[0][0][0].compression) == 6) ij.IJ.log(\"Compression = ZIP\"); else ij.IJ.log((\"Compression = \" + (infos[0][0][0].compression)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3403/buggy-version/open_stacks_as_virtual_stack_maven.src.main.java.ct.vss.OpenStacksAsVirtualStack.java", "BodyUseAPI": ["ij.IJ.log((\"Compression = \" + (infos[0][0][0].compression)))"], "Fixed commit": "20b578509ea6cf10f38c5f4747862c02adfb3cbe", "Url": "https://api.github.com/repos/tischi/imagej-open-stacks-as-virtualstack", "Date": "2017-02-13T11:24:30Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.beanutils.PropertyUtils.getProperty(java.lang.Object,workBookSheet.getField().getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (data != null) { data.clear(); data.addAll(records); }else { java.lang.reflect.Field field = org.adorsys.xlseasy.utils.ReflectionUtils.findField(workbookObj.getClass(), workBookSheet.getField().getName()); java.lang.Class<?> extractRawType = org.adorsys.xlseasy.utils.XlseasyUtils.extractRawType(field); if ((extractRawType.equals(java.util.Collection.class)) || (extractRawType.equals(java.util.List.class))) { org.apache.commons.beanutils.PropertyUtils.setProperty(workbookObj, workBookSheet.getField().getName(), records); }else if (extractRawType.equals(java.util.Set.class)) { org.apache.commons.beanutils.PropertyUtils.setProperty(workbookObj, workBookSheet.getField().getName(), new java.util.HashSet<T>(records)); }else { throw new org.adorsys.xlseasy.annotation.SheetSystemException(org.adorsys.xlseasy.annotation.ErrorCodeSheet.READ_BEAN_DATA_ERROR).addValue(\"detail\", ((\"Property \" + (workBookSheet.getField().getName())) + \" must be preinstantiated or from type, Set, List or Collection but not from a concrete type.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6667/buggy-version/xlseasy.cbe.src.main.java.org.adorsys.xlseasy.cbe.SheetDescCbe.java", "BodyUseAPI": ["java.util.Collection<T>.clear()", "java.util.Collection<T>.addAll(java.util.List<T>)"], "Fixed commit": "2610f5e8557ca3f4083781f302c6535a190bd9bf", "Url": "https://api.github.com/repos/adorsys/xlseasy", "Date": "2011-12-25T19:46:24Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof ru.tehkode.permissions.config.ConfigurationNode) { list.add(((ru.tehkode.permissions.config.ConfigurationNode) (o))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6839/buggy-version/src.main.java.ru.tehkode.permissions.config.ConfigurationNode.java", "BodyUseAPI": [], "Fixed commit": "16047468590f908b15498855b4d6ac49613b0501", "Url": "https://api.github.com/repos/lycano/PermissionsEx", "Date": "2011-04-21T23:54:24Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.tehkode.permissions.config.ConfigurationNode.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (raw instanceof ru.tehkode.permissions.config.ConfigurationNode) { return ((ru.tehkode.permissions.config.ConfigurationNode) (raw)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6839/buggy-version/src.main.java.ru.tehkode.permissions.config.ConfigurationNode.java", "BodyUseAPI": [], "Fixed commit": "16047468590f908b15498855b4d6ac49613b0501", "Url": "https://api.github.com/repos/lycano/PermissionsEx", "Date": "2011-04-21T23:54:24Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) instanceof ru.tehkode.permissions.config.ConfigurationNode) { nodes.put(entry.getKey(), ((ru.tehkode.permissions.config.ConfigurationNode) (entry.getValue()))); }else if ((entry.getValue()) instanceof java.util.Map) { nodes.put(entry.getKey(), new ru.tehkode.permissions.config.ConfigurationNode(((java.util.Map<java.lang.String, java.lang.Object>) (entry.getValue())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6839/buggy-version/src.main.java.ru.tehkode.permissions.config.ConfigurationNode.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map<java.lang.String, ru.tehkode.permissions.config.ConfigurationNode>.put(java.lang.String,java.lang.Object)", "java.util.Map<java.lang.String, ru.tehkode.permissions.config.ConfigurationNode>.put(java.lang.String,ru.tehkode.permissions.config.ConfigurationNode)"], "Fixed commit": "16047468590f908b15498855b4d6ac49613b0501", "Url": "https://api.github.com/repos/lycano/PermissionsEx", "Date": "2011-04-21T23:54:24Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((url) != null) { bitmap = com.loopj.android.image.WebImage.webImageCache.get(url); if (bitmap == null) { bitmap = getBitmapFromUrl(url); if (bitmap != null) { com.loopj.android.image.WebImage.webImageCache.put(url, bitmap); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1661/buggy-version/src.com.loopj.android.image.WebImage.java", "BodyUseAPI": [], "Fixed commit": "4195ce300f58b4ca0a80e57f905e4b3108e1b1e0", "Url": "https://api.github.com/repos/loopj/android-smart-image-view", "Date": "2011-05-29T23:37:29Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (index != (-1)) roomId = roomId.substring(index);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4630/buggy-version/xmppbot-commands.src.main.java.de.raion.xmppbot.hipchat.JiraLinkBeautifierInterceptor.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "bef3931f98f582980855820c5341005a4730b053", "Url": "https://api.github.com/repos/brndkfr/xmppbot", "Date": "2013-02-21T10:54:20Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage()) != null) { event.getPlayer().sendMessage(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1707/buggy-version/src.common.com.sk89q.craftbook.MechanicManager.java", "BodyUseAPI": ["event.getPlayer().sendMessage(e.getMessage())", "com.sk89q.craftbook.InvalidMechanismException.getMessage()"], "Fixed commit": "7bfb53c206521dd26e439d07c48a1c5d2ddbceab", "Url": "https://api.github.com/repos/EngineHub/CraftBook", "Date": "2011-02-27T07:41:25Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.hilbri.assist.mapping.ui.multipageeditor.MultiPageEditor.getDetailedResultViewUiModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((model.getResults()) != null) { setDeploymentNumberAndScore(0); }else { setDeploymentNumberAndScore((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1701/buggy-version/ch.hilbri.assist.mapping.src.ch.hilbri.assist.mapping.ui.infosheet.InfoSheetView.java", "BodyUseAPI": [], "Fixed commit": "31b2592bc508202bb7cc0486ae8255539327548d", "Url": "https://api.github.com/repos/RobertHilbrich/assist", "Date": "2014-11-25T16:25:55Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((multiPageEditor) != null) { org.eclipse.swt.widgets.Display.getDefault().asyncExec(new java.lang.Runnable() { @java.lang.Override public void run() { multiPageEditor.resetView(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1701/buggy-version/ch.hilbri.assist.mapping.src.ch.hilbri.assist.mapping.solver.SolverJob.java", "BodyUseAPI": [], "Fixed commit": "31b2592bc508202bb7cc0486ae8255539327548d", "Url": "https://api.github.com/repos/RobertHilbrich/assist", "Date": "2014-11-25T16:25:55Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((input == null) || (input.equals(\" \"))) || (input.equals(\"\"))) { android.widget.Toast.makeText(this, \"Invalid Resto Name\", Toast.LENGTH_SHORT).show(); }else if (checkDuplicates(input)) { android.widget.Toast.makeText(this, \"Resto already exists\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(this, \"Resto Added!\", Toast.LENGTH_SHORT).show(); restos.add(new com.example.owner.restorandomizer.Restos(input, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7241/buggy-version/app.src.main.java.com.example.owner.restorandomizer.MainActivity.java", "BodyUseAPI": ["java.util.List<com.example.owner.restorandomizer.Restos>.add(com.example.owner.restorandomizer.Restos)", "com.example.owner.restorandomizer.MainActivity.checkDuplicates(java.lang.String)"], "Fixed commit": "71eb94b23437136b222930b943d2dad14f96355c", "Url": "https://api.github.com/repos/patrickmina00/RestoRandomizer", "Date": "2016-05-01T02:31:49Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.emf.ecore.resource.ResourceSet.getResource(org.eclipse.emf.common.util.URI.createPlatformResourceURI(file.getFullPath().toString(), true),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resource == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6273/buggy-version/plugins.org.yakindu.sct.generator.genmodel.ui.src.org.yakindu.sct.generator.genmodel.ui.action.GenerateModelAction.java", "BodyUseAPI": [], "Fixed commit": "74ad2960aaeadac9be81d3a9f44eefa5e3a7186c", "Url": "https://api.github.com/repos/Yakindu/statecharts", "Date": "2015-12-07T18:49:27Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((settings.suppressJoinMessage) && (cfg.vanished.state)) { event.setJoinMessage(null); }else if (!(cfg.needsSave())) removeVanishedName(playerName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6616/buggy-version/SimplyVanish.src.asofold.simplyvanish.SimplyVanishCore.java", "BodyUseAPI": ["asofold.simplyvanish.config.VanishConfig.needsSave()"], "Fixed commit": "f3b19debc70252ad0c1467af80bae5356494942a", "Url": "https://api.github.com/repos/asofold/SimplyVanish", "Date": "2012-04-12T00:24:45Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["prevPage.getShortcutsAndWidgets().getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (tempV != null) { boolean isPrevPageFullscreen = ((com.android.launcher3.CellLayout.LayoutParams) (tempV.getLayoutParams())).isFullscreen; if (isPrevPageFullscreen) { workspace.getPageAt((pageIndex - 1)).requestFocus(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7049/buggy-version/src.com.android.launcher3.FocusHelper.java", "BodyUseAPI": ["android.view.View.getLayoutParams()"], "Fixed commit": "126e6a44a2854a2fc507d5549f233c290a68d6e3", "Url": "https://api.github.com/repos/TeamExodus/packages_apps_Launcher3", "Date": "2016-08-30T12:51:27Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (spec.endsWith(\"px\")) { return ((int) (java.lang.Math.round(java.lang.Double.parseDouble(spec.substring(0, ((spec.length()) - 2)))))); }else { return java.lang.Integer.parseInt(spec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4406/buggy-version/src.HTML_Renderer.org.lobobrowser.html.style.HtmlValues.java", "BodyUseAPI": ["java.lang.Math.round(double)", "java.lang.String.length()", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "967e9b6932b96fd6c65e1d4ab1b9db91be4742d3", "Url": "https://api.github.com/repos/UprootLabs/gngr", "Date": "2015-10-27T15:20:51Z"},
{"Line": "=>1117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (path.getParent().getParent().getParent().toString().contains(\"\\\\\")) nf = new java.io.File((((path.getParent().getParent().getParent().toString()) + \"\\\\UploadedAssignments\\\\\") + fileName)); else nf = new java.io.File((((path.getParent().getParent().getParent().toString()) + \"/UploadedAssignments/\") + fileName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7094/buggy-version/app.controllers.HomeController.java", "BodyUseAPI": ["java.nio.file.Path.getParent()", "java.nio.file.Path.getParent()", "java.nio.file.Path.toString()", "java.nio.file.Path.getParent()", "java.nio.file.Path.getParent()", "java.nio.file.Path.getParent()", "java.nio.file.Path.toString()", "java.nio.file.Path.getParent()"], "Fixed commit": "e5a1fc4136e35d8076dc260867d877538a22d0c7", "Url": "https://api.github.com/repos/diegofigs/tutorme.io", "Date": "2016-12-10T19:15:51Z"},
{"Line": "=>1015", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (path.getParent().getParent().getParent().toString().contains(\"\\\\\")) nf = new java.io.File((((path.getParent().getParent().getParent().toString()) + \"\\\\UploadedDocuments\\\\\") + fileName)); else nf = new java.io.File((((path.getParent().getParent().getParent().toString()) + \"/UploadedDocuments/\") + fileName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7094/buggy-version/app.controllers.HomeController.java", "BodyUseAPI": ["java.nio.file.Path.getParent()", "java.nio.file.Path.getParent()", "java.nio.file.Path.getParent()", "java.nio.file.Path.getParent()", "java.nio.file.Path.toString()", "java.nio.file.Path.getParent()", "java.nio.file.Path.toString()", "java.nio.file.Path.getParent()"], "Fixed commit": "e5a1fc4136e35d8076dc260867d877538a22d0c7", "Url": "https://api.github.com/repos/diegofigs/tutorme.io", "Date": "2016-12-10T19:15:51Z"},
{"Line": "=>1160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (path.getParent().getParent().getParent().toString().contains(\"\\\\\")) nf = new java.io.File((((path.getParent().getParent().getParent().toString()) + \"\\\\UploadedSubmissions\\\\\") + fileName)); else nf = new java.io.File((((path.getParent().getParent().getParent().toString()) + \"/UploadedSubmissions/\") + fileName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7094/buggy-version/app.controllers.HomeController.java", "BodyUseAPI": ["java.nio.file.Path.toString()", "java.nio.file.Path.getParent()", "java.nio.file.Path.getParent()", "java.nio.file.Path.getParent()", "java.nio.file.Path.getParent()", "java.nio.file.Path.getParent()", "java.nio.file.Path.toString()", "java.nio.file.Path.getParent()"], "Fixed commit": "e5a1fc4136e35d8076dc260867d877538a22d0c7", "Url": "https://api.github.com/repos/diegofigs/tutorme.io", "Date": "2016-12-10T19:15:51Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.vending.expansion.zipfile.APKExpansionSupport.getAPKExpansionZipFile(android.content.Context,com.headroid.unityobbextractor.Helpers.getVersionCode(mContext),int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == expansionFile) { mCallback.callback(com.headroid.unityobbextractor.OBBExtractor.EXTRACT_OBB_FETCH_OBB_FAIL, mContext.getString(R.string.extract_obb_fetch_obb_fail)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9008/buggy-version/Extract_obb_library.src.com.headroid.unityobbextractor.OBBExtractor.java", "BodyUseAPI": [], "Fixed commit": "9a181f8b518d316b9472ec6c802f1cde74f5f202", "Url": "https://api.github.com/repos/arohim/UnityOBBExtractor", "Date": "2015-11-09T04:37:37Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.edu.ifpb.pd.rmimessenger.interfaces.MessengerIF.sendPrivateMessage(client.getName(),java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == 0) throw new java.lang.Exception(\"Usuario nao encontrado\"); else if (result == (-1)) throw new java.lang.Exception(\"Nao e possivel enviar para voce mesmo\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6552/buggy-version/src.br.edu.ifpb.pd.rmimessenger.client.MainScreen.java", "BodyUseAPI": [], "Fixed commit": "2c9df0f5cc5bfa07119b795b9c76e226fb3a19f4", "Url": "https://api.github.com/repos/joaopaulo11jp/rmimessengerclient", "Date": "2016-02-16T01:33:33Z"},
{"Line": "=>751", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.nyu.cs.cs2580.PostingsWithOccurences<java.lang.String>.getCachedIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ct > 0) && ((((edu.nyu.cs.cs2580.PostingEntry<java.lang.String>) (postingList.get((ct - 1)))).getDocID()) > current)) { ct = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2129/buggy-version/WebSearchEngineHW3.src.edu.nyu.cs.cs2580.IndexerInvertedCompressed.java", "BodyUseAPI": [], "Fixed commit": "2761c5cbe7d40a51e5fcd6589546d7ce56fe7a09", "Url": "https://api.github.com/repos/samskd/Turbo360", "Date": "2013-04-10T19:45:58Z"},
{"Line": "=>847", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.nyu.cs.cs2580.PostingsWithOccurences<java.lang.String>.searchDocumentID(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((documentEntry != null) && ((documentEntry.getDocID()) == docId)) { java.util.Vector<java.lang.String> strOffsets = documentEntry.getOffset(); java.util.Vector<java.lang.Integer> offsets = edu.nyu.cs.cs2580.IndexerInvertedCompressed.decode(strOffsets); for (int i = 0; i < ((offsets.size()) - 1); i++) { if ((offsets.get(i)) == pos) { return offsets.get((i + 1)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2129/buggy-version/WebSearchEngineHW3.src.edu.nyu.cs.cs2580.IndexerInvertedCompressed.java", "BodyUseAPI": ["edu.nyu.cs.cs2580.PostingEntry<java.lang.String>.getOffset()"], "Fixed commit": "2761c5cbe7d40a51e5fcd6589546d7ce56fe7a09", "Url": "https://api.github.com/repos/samskd/Turbo360", "Date": "2013-04-10T19:45:58Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.nyu.cs.cs2580.PostingsWithOccurences<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lt == 0) || ((((edu.nyu.cs.cs2580.PostingEntry<java.lang.String>) (postingList.get((lt - 1)))).getDocID()) <= current)) { return INFINITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2129/buggy-version/WebSearchEngineHW3.src.edu.nyu.cs.cs2580.IndexerInvertedCompressed.java", "BodyUseAPI": [], "Fixed commit": "2761c5cbe7d40a51e5fcd6589546d7ce56fe7a09", "Url": "https://api.github.com/repos/samskd/Turbo360", "Date": "2013-04-10T19:45:58Z"},
{"Line": "=>746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((edu.nyu.cs.cs2580.PostingEntry<java.lang.String>) (postingList.get(0))).getDocID()) > current) { postingList.setCachedIndex(0); return ((edu.nyu.cs.cs2580.PostingEntry<java.lang.String>) (postingList.get(0))).getDocID(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2129/buggy-version/WebSearchEngineHW3.src.edu.nyu.cs.cs2580.IndexerInvertedCompressed.java", "BodyUseAPI": ["edu.nyu.cs.cs2580.PostingsWithOccurences<java.lang.String>.setCachedIndex(int)", "edu.nyu.cs.cs2580.PostingsWithOccurences<java.lang.String>.get(int)", "((edu.nyu.cs.cs2580.PostingEntry<java.lang.String>) (postingList.get(0))).getDocID()"], "Fixed commit": "2761c5cbe7d40a51e5fcd6589546d7ce56fe7a09", "Url": "https://api.github.com/repos/samskd/Turbo360", "Date": "2013-04-10T19:45:58Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pushd.tuple.SendMsg.getCallBack()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (processor != null) processor.process(this.status, this.msg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8990/buggy-version/com.pushd.tuple.SendResultMsg.java", "BodyUseAPI": ["com.pushd.inters.ISendResult.process(int,java.lang.String)"], "Fixed commit": "ebd07f892342c2ff615537495dd3b8a3e56cb567", "Url": "https://api.github.com/repos/unisky/sdk", "Date": "2017-04-27T09:48:34Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tweet.contains(\" sign\\\" />\")) { tweet = tweet.split(\"<a href=\")[0]; tweet = tweet.split(\" sign\\\" />\")[1]; }else { tweet = tweet.split(\"<a href=\")[0]; tweet = tweet.split((city + \" \"))[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8727/buggy-version/src.main.java.RareNotifier.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "c6d17aabdbf75a4591fa7c397a82b9e9db9dc4af", "Url": "https://api.github.com/repos/Decretum/TwitterPokemonListener", "Date": "2017-11-27T01:30:34Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (maxEntry == null) { maxCounter = e.getValue(); maxEntry = tempEntry; }else if ((e.getValue()) >= maxCounter) { maxEntryCosts = maxEntry.getCosts(Profiler.profilerDataTypeForHotSwap); tempEntryCosts = tempEntry.getCosts(Profiler.profilerDataTypeForHotSwap); if ((maxEntryCosts.compareTo(tempEntryCosts)) > 0) { maxCounter = e.getValue(); maxEntry = e.getKey(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6932/buggy-version/src.dna.profiler.HotSwapMap.java", "BodyUseAPI": ["dna.profiler.RecommenderEntry.getCosts(Profiler.profilerDataTypeForHotSwap)"], "Fixed commit": "6e80d5e49d012acdbbe437b94e5da5a179704d05", "Url": "https://api.github.com/repos/NicoHaase/DNA", "Date": "2014-05-13T08:54:43Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(expressions.Literal.class.isInstance(e))) { for (int i = 0; i < (e.getChildren().size()); i++) { expressions.Expression child = e.getChildren().get(i); expressions.Expression newChild = expressions.Expression.replaceImplicationsAndEquivalences(child); e.getChildren().remove(i); e.getChildren().add(i, newChild); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7940/buggy-version/src.main.java.expressions.Expression.java", "BodyUseAPI": ["expressions.Expression.getChildren()", "java.util.ArrayList<expressions.Expression>.add(int,expressions.Expression)", "expressions.Expression.getChildren()", "expressions.Expression.getChildren()", "expressions.Expression.getChildren()", "java.util.ArrayList<expressions.Expression>.get(int)", "java.util.ArrayList<expressions.Expression>.remove(int)", "java.util.ArrayList<expressions.Expression>.size()"], "Fixed commit": "180864aa1085e865ff095e2bf863f77ca7d2fcb3", "Url": "https://api.github.com/repos/gcoter/automated-theorem-prover", "Date": "2016-07-18T16:01:50Z"},
{"Line": "=>1068", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.jodah.expiringmap.ExpiringMap.EntryMap<K, V>.get(K)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (entry != null) { entry.expirationNanos.set(java.util.concurrent.TimeUnit.NANOSECONDS.convert(duration, timeUnit)); resetEntry(entry, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/938/buggy-version/src.main.java.net.jodah.expiringmap.ExpiringMap.java", "BodyUseAPI": ["net.jodah.expiringmap.ExpiringMap<K, V>.resetEntry(net.jodah.expiringmap.ExpiringMap.ExpiringEntry<K, V>,boolean)", "java.util.concurrent.atomic.AtomicLong.set(long)"], "Fixed commit": "7eafef7b5a33c758ee38ccbe397c94f798f5c83d", "Url": "https://api.github.com/repos/jhalterman/expiringmap", "Date": "2016-05-13T17:16:18Z"},
{"Line": "=>751", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.objectweb.asm.tree.AbstractInsnNode.getOpcode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (opcode == trimAtOpcode) { trimAtOpcode = -1; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5214/buggy-version/src.main.java.org.spongepowered.asm.mixin.transformer.MixinTransformer.java", "BodyUseAPI": [], "Fixed commit": "9d9c2238e890398d26b1ac64d9e77b1e60f6fb88", "Url": "https://api.github.com/repos/simon816/Mixin", "Date": "2015-02-21T14:37:09Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1760/buggy-version/core.src.main.java.org.bitcoinj.script.ScriptChunk.java", "BodyUseAPI": [], "Fixed commit": "b7bac50fa118053be888672f58d5f89ce971f789", "Url": "https://api.github.com/repos/devrandom/bitcoinj", "Date": "2014-11-14T12:58:46Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.asafge.newsblurplus.APIHelper.isSubscribedToFeed(c, item.subUid))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1322/buggy-version/NewsBlurPlus.src.com.asafge.newsblurplus.NewsBlurPlus.java", "BodyUseAPI": [], "Fixed commit": "da811abd1bffed9158c2d6da9245dcef936e9553", "Url": "https://api.github.com/repos/asafge/NewsBlurPlus", "Date": "2014-05-26T19:15:41Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.getJSONArray(\"entries\").length()) == 0) { createEmptyContent(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1362/buggy-version/src.main.java.os.running.leaderboard.app.fragment.LeaderBoardPage.java", "BodyUseAPI": [], "Fixed commit": "d72d09425d405683976d177275566dfe0f04cf24", "Url": "https://api.github.com/repos/Garthi/Running-Leaderboard", "Date": "2015-09-07T05:27:55Z"},
{"Line": "=>1133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.util.PropsValues.DOCKBAR_MANAGE_LINKS_WINDOW_STATE_POPUP) { siteSettingsURL.setControlPanelCategory(((com.liferay.portal.events.ServicePreAction._CONTROL_PANEL_CATEGORY_PORTLET_PREFIX) + (com.liferay.portal.util.PortletKeys.SITE_SETTINGS))); siteSettingsURL.setParameter(\"closeRedirect\", currentURL); siteSettingsURL.setWindowState(LiferayWindowState.POP_UP); }else { siteSettingsURL.setPlid(plid); siteSettingsURL.setParameter(\"redirect\", themeDisplay.getURLHome()); siteSettingsURL.setWindowState(LiferayWindowState.MAXIMIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3934/buggy-version/portal-impl.src.com.liferay.portal.events.ServicePreAction.java", "BodyUseAPI": [], "Fixed commit": "79e61fdd6d79113203cecc3e6581e5a4d8b8fb9a", "Url": "https://api.github.com/repos/jonmak08/liferay-portal", "Date": "2013-01-23T23:18:10Z"},
{"Line": "=>1176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.util.PropsValues.DOCKBAR_MANAGE_LINKS_WINDOW_STATE_POPUP) { siteMapSettingsURL.setControlPanelCategory(((com.liferay.portal.events.ServicePreAction._CONTROL_PANEL_CATEGORY_PORTLET_PREFIX) + (com.liferay.portal.util.PortletKeys.LAYOUTS_ADMIN))); siteMapSettingsURL.setParameter(\"closeRedirect\", currentURL); siteMapSettingsURL.setWindowState(LiferayWindowState.POP_UP); }else { siteMapSettingsURL.setPlid(plid); siteMapSettingsURL.setParameter(\"redirect\", themeDisplay.getURLHome()); siteMapSettingsURL.setWindowState(LiferayWindowState.MAXIMIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3934/buggy-version/portal-impl.src.com.liferay.portal.events.ServicePreAction.java", "BodyUseAPI": [], "Fixed commit": "79e61fdd6d79113203cecc3e6581e5a4d8b8fb9a", "Url": "https://api.github.com/repos/jonmak08/liferay-portal", "Date": "2013-01-23T23:18:10Z"},
{"Line": "=>1073", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.util.PropsValues.DOCKBAR_MANAGE_LINKS_WINDOW_STATE_POPUP) { manageSiteMembershipsURL.setControlPanelCategory(((com.liferay.portal.events.ServicePreAction._CONTROL_PANEL_CATEGORY_PORTLET_PREFIX) + (com.liferay.portal.util.PortletKeys.SITE_MEMBERSHIPS_ADMIN))); manageSiteMembershipsURL.setWindowState(LiferayWindowState.POP_UP); }else { manageSiteMembershipsURL.setPlid(plid); manageSiteMembershipsURL.setParameter(\"redirect\", themeDisplay.getURLHome()); manageSiteMembershipsURL.setParameter(\"showBackURL\", java.lang.Boolean.FALSE.toString()); manageSiteMembershipsURL.setWindowState(WindowState.MAXIMIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3934/buggy-version/portal-impl.src.com.liferay.portal.events.ServicePreAction.java", "BodyUseAPI": [], "Fixed commit": "79e61fdd6d79113203cecc3e6581e5a4d8b8fb9a", "Url": "https://api.github.com/repos/jonmak08/liferay-portal", "Date": "2013-01-23T23:18:10Z"},
{"Line": "=>1028", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.util.PropsValues.DOCKBAR_MANAGE_LINKS_WINDOW_STATE_POPUP) { pageSettingsURL.setControlPanelCategory(((com.liferay.portal.events.ServicePreAction._CONTROL_PANEL_CATEGORY_PORTLET_PREFIX) + (com.liferay.portal.util.PortletKeys.LAYOUTS_ADMIN))); pageSettingsURL.setParameter(\"closeRedirect\", currentURL); pageSettingsURL.setWindowState(LiferayWindowState.POP_UP); }else { pageSettingsURL.setPlid(plid); pageSettingsURL.setParameter(\"redirect\", themeDisplay.getURLHome()); pageSettingsURL.setWindowState(WindowState.MAXIMIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3934/buggy-version/portal-impl.src.com.liferay.portal.events.ServicePreAction.java", "BodyUseAPI": [], "Fixed commit": "79e61fdd6d79113203cecc3e6581e5a4d8b8fb9a", "Url": "https://api.github.com/repos/jonmak08/liferay-portal", "Date": "2013-01-23T23:18:10Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (typeDeclaration instanceof com.github.javaparser.symbolsolver.javassistmodel.JavassistInterfaceDeclaration) { return ((com.github.javaparser.symbolsolver.javassistmodel.JavassistInterfaceDeclaration) (typeDeclaration)).solveSymbol(name, typeSolver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1829/buggy-version/java-symbol-solver-core.src.main.java.com.github.javaparser.symbolsolver.resolution.SymbolSolver.java", "BodyUseAPI": [], "Fixed commit": "4b38e7a7a7fee2a0f7ec479b61511820cf74e416", "Url": "https://api.github.com/repos/WimTibackx/javasymbolsolver", "Date": "2017-10-19T06:21:02Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((player.getScoreboard()) != null) && ((player.getScoreboard().getTeam(\"Spectators\")) != null)) player.getScoreboard().getTeam(\"Spectators\").addPlayer(getPlayer());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6345/buggy-version/src.me.libraryaddict.Hungergames.Types.Gamer.java", "BodyUseAPI": ["player.getScoreboard().getTeam(\"Spectators\").addPlayer(org.bukkit.entity.Player)", "player.getScoreboard().getTeam(java.lang.String)", "org.bukkit.entity.Player.getScoreboard()"], "Fixed commit": "f40daf8be160e81afc27a533680df9374c03d223", "Url": "https://api.github.com/repos/libraryaddict/LibsHungergames", "Date": "2013-10-16T20:42:53Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entity instanceof org.bukkit.entity.FallingBlock)) entities.add(entity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/906/buggy-version/Bending2.src.earthbending.Ripple.java", "BodyUseAPI": ["java.util.ArrayList<org.bukkit.entity.Entity>.add(org.bukkit.entity.Entity)"], "Fixed commit": "ad70b831a01ddc7669c112390e5bf69e410b2345", "Url": "https://api.github.com/repos/orion304/MinecraftTLA", "Date": "2012-09-16T04:28:44Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entity instanceof org.bukkit.entity.FallingBlock)) entity.setVelocity(norm.clone().multiply(0.75));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/906/buggy-version/Bending2.src.tools.Tools.java", "BodyUseAPI": ["org.bukkit.entity.Entity.setVelocity(norm.clone().multiply(0.75))"], "Fixed commit": "ad70b831a01ddc7669c112390e5bf69e410b2345", "Url": "https://api.github.com/repos/orion304/MinecraftTLA", "Date": "2012-09-16T04:28:44Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Float.isNaN(sum)) { result[index] = 0; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2471/buggy-version/cv4j.src.main.java.com.cv4j.core.hist.GaussianBackProjection.java", "BodyUseAPI": [], "Fixed commit": "76ba7f0918df2b46de197606293bee146317b42a", "Url": "https://api.github.com/repos/imageprocessor/cv4j", "Date": "2017-08-13T07:02:42Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (capacity >= 4) { D.newdelimiter4 = new algvis.ds.dynamicarray.DynamicArrayDelimiter(D.newarray.get((capacity / 4)), D, java.awt.Color.GREEN); D.newdelimiter2 = new algvis.ds.dynamicarray.DynamicArrayDelimiter(D.newarray.get((capacity / 2)), D, java.awt.Color.RED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2311/buggy-version/src.algvis.ds.dynamicarray.DynamicArrayAlg.java", "BodyUseAPI": ["D.newarray.get(int)", "D.newarray.get(int)"], "Fixed commit": "8c1e32b952322a290a54d148f9c1a0fbc86ae7b3", "Url": "https://api.github.com/repos/kuk0/alg-vis", "Date": "2013-12-14T21:39:53Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (professor == null) professor = \"empty\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3192/buggy-version/app.src.main.java.com.example.caballero.cse455_fall17.ProfessorActivity.java", "BodyUseAPI": [], "Fixed commit": "db5eafad586f50874b539df9843eade491cfdafd", "Url": "https://api.github.com/repos/EsparzaCarlos/CSE455Team3", "Date": "2017-12-08T05:09:22Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (professorInfo.getName().equals(\"empty\")) { db.deleteProf(new com.example.caballero.cse455_fall17.ProfessorInfo(1, null, null, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3192/buggy-version/app.src.main.java.com.example.caballero.cse455_fall17.ProfessorActivity.java", "BodyUseAPI": [], "Fixed commit": "db5eafad586f50874b539df9843eade491cfdafd", "Url": "https://api.github.com/repos/EsparzaCarlos/CSE455Team3", "Date": "2017-12-08T05:09:22Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.getCurrentPosition()) > 999999999) currentTrackTime = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3334/buggy-version/app.src.main.java.com.company.integer.vkmusic.musicplayer.MusicPlayer.java", "BodyUseAPI": [], "Fixed commit": "c2b927d949291cfe6e7814c72f2a9e1ea2e954f5", "Url": "https://api.github.com/repos/IntegerCompany/VkMusic", "Date": "2015-09-18T16:07:19Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isWebOS) httpMethod = \"subscribe\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3443/buggy-version/src.com.connectsdk.service.command.URLServiceSubscription.java", "BodyUseAPI": [], "Fixed commit": "ae869d75bd04de4bbd2ecba34c9503b76b1ff052", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android", "Date": "2014-05-12T22:44:07Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRoomId) == null) mRoomId = room.getRoomId();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/67/buggy-version/BasicSamples.ButtonClicker.src.main.java.com.google.example.games.bc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c212f1bdb6d1792865bcb31e2599607b1bde684e", "Url": "https://api.github.com/repos/MonsterOfCookie/android-basic-samples", "Date": "2015-12-07T22:41:44Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.thm.arsnova.dao.IDatabaseDao.getQuestion(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4941/buggy-version/src.main.java.de.thm.arsnova.services.QuestionService.java", "BodyUseAPI": [], "Fixed commit": "ff69d162a92081c978e5e953e5cebd21464d414f", "Url": "https://api.github.com/repos/thm-projects/arsnova-war", "Date": "2014-02-25T08:30:52Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (task == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4629/buggy-version/astrid.plugin-src.com.todoroo.astrid.timers.TimerPlugin.java", "BodyUseAPI": [], "Fixed commit": "67a342364e043ccf83e0c027c53e66c0195f633c", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2012-09-07T17:21:12Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) instanceof com.alibaba.otter.canal.parse.exception.TableIdNotFoundException) { throw ((com.alibaba.otter.canal.parse.exception.TableIdNotFoundException) (e.getCause())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/386/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.AbstractEventParser.java", "BodyUseAPI": ["java.lang.Throwable.getCause()"], "Fixed commit": "3e5b3e1467cc24df9013bef48710cd0d26ad0a1f", "Url": "https://api.github.com/repos/dadarom/canal", "Date": "2017-06-22T05:37:11Z"},
{"Line": "=>2196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) != (com.ibm.ejs.j2c.MCWrapper.STATE_INACTIVE)) { this.releaseToPoolManager(); }else { if (isTracingEnabled && (com.ibm.ejs.j2c.MCWrapper.tc.isDebugEnabled())) { com.ibm.websphere.ras.Tr.debug(com.ibm.ejs.j2c.MCWrapper.tc, \"Skipping release since the MCWrapper state was already STATE_INACTIVE\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6408/buggy-version/dev.com.ibm.ws.jca.cm.src.com.ibm.ejs.j2c.MCWrapper.java", "BodyUseAPI": [], "Fixed commit": "e50403a8198031f198c16cc60c35d044c1b573e4", "Url": "https://api.github.com/repos/acdemyers/open-liberty", "Date": "2017-12-07T17:00:46Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((timing) == (mage.constants.TimingRule.SORCERY)) && (!(game.canPlaySorcery(playerId)))) && (!(game.getContinuousEffects().asThough(sourceId, AsThoughEffectType.ACTIVATE_AS_INSTANT, this, controllerId, game)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8404/buggy-version/Mage.src.main.java.mage.abilities.mana.ActivatedManaAbilityImpl.java", "BodyUseAPI": [], "Fixed commit": "ee07a6ebc500475e80e94be64589c6f555b2d85e", "Url": "https://api.github.com/repos/ciaccona007/mage", "Date": "2017-07-11T13:26:33Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.isFile())) { javax.swing.JOptionPane.showOptionDialog(this, \"File not found\", \"Unable to load file\", javax.swing.JOptionPane.CLOSED_OPTION, javax.swing.JOptionPane.ERROR_MESSAGE, null, null, null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5874/buggy-version/modules.exbin-framework-deltahex.src.main.java.org.exbin.framework.deltahex.panel.HexPanel.java", "BodyUseAPI": [], "Fixed commit": "2b5075d83359266da28ef027dc3aaf40d322f3de", "Url": "https://api.github.com/repos/exbin/exbin-framework-java", "Date": "2017-01-05T21:23:48Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((poisonViews) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8841/buggy-version/src.main.java.co.nodeath.magichealthcounter.ui.TwoPlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "ce2f46efb8898d479cc898aea5963961303b3c79", "Url": "https://api.github.com/repos/pieces029/MagicLifeCounter", "Date": "2014-08-29T15:38:57Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (identities != null) cache.putAll(identities);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8867/buggy-version/Core.src.main.java.net.minecrell.serverlistplus.core.player.JSONIdentificationStorage.java", "BodyUseAPI": ["com.google.common.cache.Cache<java.net.InetAddress, net.minecrell.serverlistplus.core.player.PlayerIdentity>.putAll(java.util.Map<java.net.InetAddress, net.minecrell.serverlistplus.core.player.PlayerIdentity>)"], "Fixed commit": "b867ed9922c7e800398df186f2a41ac4a5ce2ef3", "Url": "https://api.github.com/repos/Minecrell/ServerListPlus", "Date": "2014-09-17T14:55:37Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabled())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8867/buggy-version/Core.src.main.java.net.minecrell.serverlistplus.core.player.JSONIdentificationStorage.java", "BodyUseAPI": [], "Fixed commit": "b867ed9922c7e800398df186f2a41ac4a5ce2ef3", "Url": "https://api.github.com/repos/Minecrell/ServerListPlus", "Date": "2014-09-17T14:55:37Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (host == \"\") { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3316/buggy-version/src.main.java.edu.uci.ics.crawler4j.url.URLCanonicalizer.java", "BodyUseAPI": [], "Fixed commit": "183d98a269dbdf99c927cb7d052a515f10014071", "Url": "https://api.github.com/repos/boyddensmore/crawler4j", "Date": "2013-03-03T07:07:51Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (nextToken == null) { shouldCheckLastRcurly = true; nextToken = com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.getNextToken(ast); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2327/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.java", "BodyUseAPI": [], "Fixed commit": "11e1eb3ddd07df6a8859430bb6794b418c6a08b7", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-01-30T20:29:10Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ast.getFirstChild().getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.RESOURCE_SPECIFICATION)) { lcurly = ast.getFirstChild().getNextSibling(); }else { lcurly = ast.getFirstChild(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2327/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()", "ast.getFirstChild().getNextSibling()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()"], "Fixed commit": "11e1eb3ddd07df6a8859430bb6794b418c6a08b7", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-01-30T20:29:10Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teamd.taxi.service.TaxiOrder.getFeatures()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (features != null) { for (com.teamd.taxi.service.Feature feature : features) { featurePrice += feature.getPrice(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3533/buggy-version/src.main.java.com.teamd.taxi.service.PriceCountService.java", "BodyUseAPI": [], "Fixed commit": "5f10a14540b62c5726f6600366d726668211b9a7", "Url": "https://api.github.com/repos/NetCracker-TeamD/TaxiService", "Date": "2015-05-27T04:36:16Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.isUserInRole(\"tudeng\")) { json.put(\"role\", \"tudeng\"); }else { json.put(\"role\", \"admin\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/949/buggy-version/automaatnehindaja.src.automaatnehindaja.TasktableServlet.java", "BodyUseAPI": [], "Fixed commit": "01c5285dde76090618d0747be3f48a6146a7f1ff", "Url": "https://api.github.com/repos/splangi/automaatnehindaja", "Date": "2013-11-11T11:33:51Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) == \"\") { id = generateId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6964/buggy-version/src.main.java.org.cloudfoundry.samples.music.domain.DataObject.java", "BodyUseAPI": [], "Fixed commit": "c966699232b12bacd577a0303c4639fd165c7f84", "Url": "https://api.github.com/repos/shijianjian/spring-jdbc", "Date": "2017-03-18T18:54:33Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((key.length) > 16) throw new java.security.InvalidParameterException((\"Key Size > 16 bytes\" + (key.length)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3793/buggy-version/src.main.java.jsse.AES.java", "BodyUseAPI": [], "Fixed commit": "921338991c96ca748633fd2f115e7dfb38fd804a", "Url": "https://api.github.com/repos/sashank/jsse", "Date": "2015-10-19T02:13:58Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (key == null) throw new java.security.InvalidParameterException(\"Key is empty cannot proceed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3793/buggy-version/src.main.java.jsse.AES.java", "BodyUseAPI": [], "Fixed commit": "921338991c96ca748633fd2f115e7dfb38fd804a", "Url": "https://api.github.com/repos/sashank/jsse", "Date": "2015-10-19T02:13:58Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model.model.getUserMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(userMap.containsKey(getUsername()))) { Model.model.getUserMap().put(getUsername(), newUser); goBackToLoginScreen(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6908/buggy-version/Rat_Tracking_Application.app.src.main.java.area52.rat_tracking_application.controllers.RegistrationActivity.java", "BodyUseAPI": [], "Fixed commit": "7c28a45f188a19179cfb30771206fee096e7b4f8", "Url": "https://api.github.com/repos/CS2340-ProjectGroup-GTFall2017/Area52", "Date": "2017-10-12T03:11:52Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model.model.getUserMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(userMap.containsKey(getUsername()))) { Model.model.getUserMap().put(getUsername(), newUser); goBackToLoginScreen(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6908/buggy-version/Rat_Tracking_Application.app.src.main.java.area52.rat_tracking_application.controllers.RegistrationActivity.java", "BodyUseAPI": [], "Fixed commit": "7c28a45f188a19179cfb30771206fee096e7b4f8", "Url": "https://api.github.com/repos/CS2340-ProjectGroup-GTFall2017/Area52", "Date": "2017-10-12T03:11:52Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modelConfig.getNormalize().getIsParquet()) { normPigPath = pathFinder.getAbsolutePath(\"scripts/NormalizeWithParquetOut.pig\"); }else { normPigPath = pathFinder.getAbsolutePath(\"scripts/Normalize.pig\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3384/buggy-version/src.main.java.ml.shifu.shifu.core.processor.NormalizeModelProcessor.java", "BodyUseAPI": [], "Fixed commit": "935f6884a2365690af0387bf1343dcedd9376377", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2015-06-26T01:31:01Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ibs.webui.client.ApplicationManager.getInstance().getAccount().getUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((userDTO != null) && ((userDTO.getId()) > 0L)) { edu.ibs.webui.client.CardRequestController controller = new edu.ibs.webui.client.CardRequestController(); controller.getWindow().draw(); }else { com.smartgwt.client.util.SC.say(\"\u0417\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5424/buggy-version/ibs.ibs-webui.src.main.java.edu.ibs.webui.client.NavigationPane.java", "BodyUseAPI": [], "Fixed commit": "3b047765e3485341df419f1f22bad449d82c21bb", "Url": "https://api.github.com/repos/martosvadim/ibs", "Date": "2013-01-10T16:12:57Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(value)) { return org.cinchapi.concourse.Tag.EMPTY_TAG; }else { return new org.cinchapi.concourse.Tag(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3659/buggy-version/concourse.src.main.java.org.cinchapi.concourse.Tag.java", "BodyUseAPI": [], "Fixed commit": "bfd92f074728e6c857971adce7d779a1ea776439", "Url": "https://api.github.com/repos/cinchapi/concourse", "Date": "2014-09-21T12:37:49Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.equals(\"\")) return Distance.INCORRECT;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5157/buggy-version/src.main.Sentence.java", "BodyUseAPI": [], "Fixed commit": "37c12d0ffe9e44be52eb86bc5848a1022e9be93f", "Url": "https://api.github.com/repos/akht/MyankiJ", "Date": "2016-05-02T15:49:38Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (main.getConfig().getString(\"bannedtime\").contains(\":\")) { java.lang.String[] helper = main.getConfig().getString(\"bannedtime\").split(\":\"); if ((helper.length) == 2) { mins = java.lang.Integer.parseInt(helper[0]); secs = java.lang.Integer.parseInt(helper[1]); }else if ((helper.length) == 3) { hours = java.lang.Integer.parseInt(helper[0]); mins = java.lang.Integer.parseInt(helper[1]); secs = java.lang.Integer.parseInt(helper[2]); } }else { secs = java.lang.Integer.parseInt(main.getConfig().getString(\"bannedtime\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1458/buggy-version/src.com.exitium.hclives2.PlayerDeath.java", "BodyUseAPI": ["com.exitium.hclives2.Main.getConfig()", "com.exitium.hclives2.Main.getConfig()", "main.getConfig().getString(java.lang.String)", "main.getConfig().getString(\"bannedtime\").split(java.lang.String)", "main.getConfig().getString(java.lang.String)", "java.lang.Integer.parseInt(main.getConfig().getString(\"bannedtime\"))"], "Fixed commit": "e5f9563c717a1574050f0fce5ffd2ec112eb5f1b", "Url": "https://api.github.com/repos/rocketrobot3/HCLives2.0", "Date": "2015-02-28T04:57:14Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1571/buggy-version/src.tv.huohua.peterson.misc.JavaLangUtils.java", "BodyUseAPI": [], "Fixed commit": "852be7d4dfa795719ab323e796c617f8f607e3e5", "Url": "https://api.github.com/repos/Huohua/Peterson", "Date": "2013-03-07T07:03:50Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1571/buggy-version/src.tv.huohua.peterson.misc.JavaLangUtils.java", "BodyUseAPI": [], "Fixed commit": "852be7d4dfa795719ab323e796c617f8f607e3e5", "Url": "https://api.github.com/repos/Huohua/Peterson", "Date": "2013-03-07T07:03:50Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (type instanceof java.lang.reflect.ParameterizedType) this.clazz = ((java.lang.Class) (((java.lang.reflect.ParameterizedType) (type)).getRawType())); else this.clazz = ((java.lang.Class) (type));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/645/buggy-version/guice.webapp.src.main.java.com.peterphi.std.guice.web.rest.service.servicedescription.freemarker.RestServiceResourceParamInfo.java", "BodyUseAPI": [], "Fixed commit": "002687160c7083cd1c76fc8a2f23c49536e7874a", "Url": "https://api.github.com/repos/petergeneric/stdlib", "Date": "2013-10-28T13:43:10Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getListAdapter()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9141/buggy-version/app.src.main.java.com.llamacorp.equate.view.ResultListFragment.java", "BodyUseAPI": [], "Fixed commit": "864ef122cb5fd48a7337a11870eb8377c6a6ee04", "Url": "https://api.github.com/repos/EvanRespaut/Equate", "Date": "2016-12-05T02:19:30Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (probability < 1.0E-5) { this.probability = 0; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3153/buggy-version/src.graph.clustering.vertex.Probability.java", "BodyUseAPI": [], "Fixed commit": "e3fe627a357dbb5d253648d74eeceeb6f89f57de", "Url": "https://api.github.com/repos/DaopingWang/ProjectWORDLE", "Date": "2016-12-05T16:03:30Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.StringTokenizer.nextToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isValidPhoneNr(phoneNr)) { updateUIOutputHandler.post(new at.khassraf.gat.app.ServerModeActivity.updateUIOutputThread(((remoteIp) + \"Sending...\"))); smsManager.sendTextMessage(phoneNr, null, cmd, pendingSentIntent, pendingDeliveryIntent); }else { try { updateUIOutputHandler.post(new at.khassraf.gat.app.ServerModeActivity.updateUIOutputThread(((remoteIp) + \"Invalid phone nr\"))); msgQueue.put(((\"sms-send#\" + phoneNr) + \"#NOK#\")); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5556/buggy-version/app.src.main.java.at.khassraf.gat.app.ServerModeActivity.java", "BodyUseAPI": ["android.telephony.gsm.SmsManager.sendTextMessage(java.lang.String,<nulltype>,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)", "java.util.concurrent.BlockingQueue<java.lang.String>.put(java.lang.String)"], "Fixed commit": "1cdbe0f87f64845a5c68a14998e639836582ab31", "Url": "https://api.github.com/repos/romankh/gat-app", "Date": "2017-06-18T06:30:24Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mark.games.fallingblocks.framework.collision.OverlapTester.pointInRectangle(pauseButton, touchPosition)) { if ((event.type) == (com.mark.games.fallingblocks.framework.Input.TouchEvent.TOUCH_UP)) { world.state = GameWorld.GAME_PAUSED; } }else if ((event.type) == (com.mark.games.fallingblocks.framework.Input.TouchEvent.TOUCH_DOWN)) { world.character.jump(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8342/buggy-version/FallingBlocks.src.main.java.com.mark.games.fallingblocks.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "95a406fa44294ebe2912850d4fa5e1b6d1650365", "Url": "https://api.github.com/repos/MaelstromDrift/FallingBlocks", "Date": "2013-05-20T00:23:35Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liskovsoft.smartyoutubetv.SmartYouTubeTVActivityBase.extractVideoParamsFromUrl(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (videoId == null) { return uri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5469/buggy-version/smartyoutubetv.src.main.java.com.liskovsoft.smartyoutubetv.SmartYouTubeTVActivityBase.java", "BodyUseAPI": [], "Fixed commit": "901ade51fb1451dbcd78facf704a5adcb922366f", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2017-12-28T14:26:26Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(classPath.toString().isEmpty())) { classFileName = (classPath.toString()) + (java.io.File.separator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4688/buggy-version/src.main.java.by.babich.classloader.custom.FileClassLoader.java", "BodyUseAPI": ["java.nio.file.Path.toString()"], "Fixed commit": "0f889918e7e15dceed334e834158b55c4eb6f7cd", "Url": "https://api.github.com/repos/BRRRRR/java-core-course", "Date": "2017-06-12T20:24:45Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getCharCode()) == 13) { event.preventDefault(); event.stopPropagation(); restoreFocus_ = true; processCommandEntry(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1892/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.console.shell.Shell.java", "BodyUseAPI": ["org.rstudio.studio.client.workbench.views.console.shell.KeyPressEvent.stopPropagation()", "org.rstudio.studio.client.workbench.views.console.shell.KeyPressEvent.preventDefault()"], "Fixed commit": "370b249607f7ac1cb3f54bf86b533ea8601fc5ae", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2011-03-15T21:02:54Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.getStatusLine().getStatusCode()) != 200) { return new java.lang.Object[]{ \"USERID_NOT_FOUND\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7064/buggy-version/contracep.src.main.java.com.aslan.contracep.function.TripPlannerStreamFunctionExtension.java", "BodyUseAPI": [], "Fixed commit": "35789e40688f26c2dcf5b577685c4e03d4e24226", "Url": "https://api.github.com/repos/AslanUOM/ConTra", "Date": "2016-02-03T10:03:15Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.commons.lang.NumberUtils.isDigits(port))) { port = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5783/buggy-version/design.gir-webdriver.src.main.java.com.automationrockstars.design.gir.webdriver.GridUtils.java", "BodyUseAPI": [], "Fixed commit": "8869deae792c60232cce7678147c6775e4c94f55", "Url": "https://api.github.com/repos/AutomationRockstars/Design", "Date": "2017-04-09T17:01:43Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchRecentsListView) != null) { mSearchRecentsListView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3644/buggy-version/box-browse-sdk.src.main.java.com.box.androidsdk.browse.fragments.BoxBrowseFragment.java", "BodyUseAPI": [], "Fixed commit": "f7312e380d716c710cca2a5bd7a451409583487b", "Url": "https://api.github.com/repos/varungu/box-android-browse-sdk", "Date": "2016-08-23T20:48:23Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cls.getAnnotations().get(org.teavm.jso.plugin.FunctorImpl.class.getName())) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3841/buggy-version/teavm-jso.src.main.java.org.teavm.jso.plugin.JavascriptNativeProcessor.java", "BodyUseAPI": [], "Fixed commit": "5a1810c5e50d5f68e6628bcb55cc4bb84504d18a", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2015-07-02T16:30:33Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((best_vertex == 1) && (A.contains(1))) { java.util.Random rand = new java.util.Random(); best_vertex = (rand.nextInt(num_vertices)) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5534/buggy-version/src.MinCut.java", "BodyUseAPI": [], "Fixed commit": "87b5ec37dc62b18b3fa9cf718debff990b798163", "Url": "https://api.github.com/repos/SquigglySerg/AlgoBowl", "Date": "2016-05-04T22:34:45Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) && ((getResources().getConfiguration().getLayoutDirection()) == (android.view.View.LAYOUT_DIRECTION_RTL))) { ((com.metinkale.prayerapp.TextView) (v)).setCompoundDrawablesWithIntrinsicBounds(0, 0, com.metinkale.prayerapp.BaseActivity.ICONS[pos], 0); }else { ((com.metinkale.prayerapp.TextView) (v)).setCompoundDrawablesWithIntrinsicBounds(com.metinkale.prayerapp.BaseActivity.ICONS[pos], 0, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4432/buggy-version/app.src.main.java.com.metinkale.prayerapp.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "069867a8f2991182c470129c915d1a440ac2139a", "Url": "https://api.github.com/repos/metinkale38/prayer-times-android", "Date": "2016-11-06T16:46:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attributeExpressionExecutors.length) > 0) { throw new org.wso2.siddhi.query.api.exception.ExecutionPlanValidationException(\"TableWindowProcessor could not be have any input parameters\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5817/buggy-version/modules.siddhi-core.src.main.java.org.wso2.siddhi.core.query.processor.stream.window.TableWindowProcessor.java", "BodyUseAPI": [], "Fixed commit": "034c19f9dc9f7b76889d9b17c044d7a361d3de55", "Url": "https://api.github.com/repos/grainier/siddhi", "Date": "2017-09-29T11:06:02Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subcommand.equalsIgnoreCase(\"removeplayer\")) { if ((args.length) == 3) { org.bukkit.entity.Player player = p.getServer().getPlayer(args[3]); if ((player == null) || (!(player.isOnline()))) { sender.sendMessage(((((ce) + \"Unable to remove the player \") + (args[2])) + \" from his team. Either he is not connected or doesn't belong to a team.\")); }else { tm.removePlayerFromTeam(player); sender.sendMessage(((((cs) + \"The player \") + (args[2])) + \" was successfully removed from his team.\")); } }else { sender.sendMessage(((ce) + \"Syntax error, see /uh team.\")); } }else if (subcommand.equalsIgnoreCase(\"list\")) { if ((tm.getTeams().size()) == 0) { sender.sendMessage(((ce) + \"There isn't any team to show.\")); return; } for (final me.azenet.UHPlugin.UHTeam team : tm.getTeams()) { sender.sendMessage(((((((team.getChatColor()) + (team.getName())) + (org.bukkit.ChatColor.WHITE)) + \" - \") + (((java.lang.Integer) (team.getPlayers().size())).toString())) + \" players\")); for (final org.bukkit.entity.Player player : team.getPlayers()) { sender.sendMessage((((org.bukkit.ChatColor.LIGHT_PURPLE) + \" - \") + (player.getName()))); } } }else if (subcommand.equalsIgnoreCase(\"reset\")) { tm.reset(); sender.sendMessage(((cs) + \"All teams where removed.\")); }else { sender.sendMessage(((ce) + \"Unknown command. See /uh team for availables commands.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6676/buggy-version/src.me.azenet.UHPlugin.UHPluginCommand.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "33a7ec7151d2210e9c8a5e2d00e36569dfd70b51", "Url": "https://api.github.com/repos/AmauryCarrade/KTP", "Date": "2014-07-08T14:10:54Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stack.stackSize) <= 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4602/buggy-version/src.tconstruct.items.Pattern.java", "BodyUseAPI": [], "Fixed commit": "5c3976f7dfbccebd8185b452b9433dbe0be042c5", "Url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct", "Date": "2013-11-05T00:12:19Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { int colorPrimary = com.apptentive.android.sdk.util.Util.getThemeColor(apptentiveTheme, R.attr.colorPrimary); android.app.ActivityManager.TaskDescription taskDes = new android.app.ActivityManager.TaskDescription(null, null, colorPrimary); setTaskDescription(taskDes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5338/buggy-version/apptentive.src.main.java.com.apptentive.android.sdk.ApptentiveViewActivity.java", "BodyUseAPI": [], "Fixed commit": "c3ba569da8be201d36f37a95769837eaa20893c9", "Url": "https://api.github.com/repos/apptentive/apptentive-android", "Date": "2016-05-21T20:27:47Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getMessage().contains(\"Stream Closed\")) { }else { writeFailedFromThreadToMainThread(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4079/buggy-version/backbone.src.main.java.org.researchstack.backbone.result.logger.DataLoggerFileWriterThread.java", "BodyUseAPI": ["org.researchstack.backbone.result.logger.DataLoggerFileWriterThread.FileWriterHandler.writeFailedFromThreadToMainThread(java.io.IOException)"], "Fixed commit": "581345fea2678cf533d9af3319779ed373aac031", "Url": "https://api.github.com/repos/ResearchStack/ResearchStack", "Date": "2017-10-31T20:34:33Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (HTTPString != null) { java.lang.String[] multipleCookies = HTTPString.split(\";\\\\s*\"); for (java.lang.String ccy : multipleCookies) { java.lang.String[] eachVal = ccy.split(\"=\"); if ((eachVal.length) == 2) inputCookie(host, eachVal[0], eachVal[1]); else inputCookie(host, eachVal[0], null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5429/buggy-version/src.com.dalthed.tucan.Connection.CookieManager.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "de92a968683f8c7bad86d903d2a3a56c66ca7ab9", "Url": "https://api.github.com/repos/Tyde/TuCanMobile", "Date": "2012-08-16T17:15:22Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7556/buggy-version/extensions.bundles.ofertie.ncl.src.main.java.org.opennaas.extensions.ofertie.ncl.provisioner.NCLProvisioner.java", "BodyUseAPI": [], "Fixed commit": "5d02b72d5d8a16636bed11980b5ec032c9c71591", "Url": "https://api.github.com/repos/dana-i2cat/opennaas", "Date": "2013-12-20T09:04:05Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tokens.size()) == 0) { java.lang.System.out.println(\"Invalid input\"); }else { for (int i = 0; i < (tokens.size()); i++) { java.lang.System.out.println(tokens.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1351/buggy-version/src.LexBasedOnDFA.runLexer.java", "BodyUseAPI": ["java.util.ArrayList<LexBasedOnDFA.DFAToken>.get(int)", "java.io.PrintStream.println(tokens.get(i))", "java.util.ArrayList<LexBasedOnDFA.DFAToken>.size()"], "Fixed commit": "6d23de27b05d2b3286a75431f34b5f31df47b73d", "Url": "https://api.github.com/repos/zhoubinseu/MyCompiler", "Date": "2017-01-08T11:43:00Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LexBasedOnDFA.DFALexer.scan()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (token != null) { tokens.add(token); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1351/buggy-version/src.LexBasedOnDFA.runLexer.java", "BodyUseAPI": ["java.util.ArrayList<LexBasedOnDFA.DFAToken>.add(LexBasedOnDFA.DFAToken)"], "Fixed commit": "6d23de27b05d2b3286a75431f34b5f31df47b73d", "Url": "https://api.github.com/repos/zhoubinseu/MyCompiler", "Date": "2017-01-08T11:43:00Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Input.pos) == (Input.string.length())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1351/buggy-version/src.LexicalAnalyzer.Lexer.java", "BodyUseAPI": [], "Fixed commit": "6d23de27b05d2b3286a75431f34b5f31df47b73d", "Url": "https://api.github.com/repos/zhoubinseu/MyCompiler", "Date": "2017-01-08T11:43:00Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((peek) == '>') state = 8; else if ((peek) == ((char) (-1))) return null; else error();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1351/buggy-version/src.LexBasedOnDFA.DFALexer.java", "BodyUseAPI": [], "Fixed commit": "6d23de27b05d2b3286a75431f34b5f31df47b73d", "Url": "https://api.github.com/repos/zhoubinseu/MyCompiler", "Date": "2017-01-08T11:43:00Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { android.app.AlertDialog.Builder statusDialog = new android.app.AlertDialog.Builder(this); statusDialog.setSingleChoiceItems(R.array.statusOptions, user.getStatus(), new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int selectedStatus) { setStatus(selectedStatus); dialog.dismiss(); } }); statusDialog.setTitle(R.string.statusOption); statusDialog.show(); }else { showToast(\"Not logged in correctly or list hasn't loaded yet\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3608/buggy-version/src.au.edu.adelaide.physics.opticsstatusboard.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e8594d191b402d87eceacfe8383c55b84e8af065", "Url": "https://api.github.com/repos/Osyrus/OpticsStatusBoard", "Date": "2013-05-03T06:54:03Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((pos) + 1) < (input.length())) && ((input.charAt(((pos) + 1))) == '|')) { pos += 2; return new wyc.io.NewWhileyFileLexer.Token(wyc.io.NewWhileyFileLexer.Token.Kind.LogicalOr, \"||\", ((pos) - 2)); }else { return new wyc.io.NewWhileyFileLexer.Token(wyc.io.NewWhileyFileLexer.Token.Kind.VerticalBar, \"|\", ((pos)++)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2786/buggy-version/modules.wyc.src.wyc.io.NewWhileyFileLexer.java", "BodyUseAPI": [], "Fixed commit": "cd03d149c8ea2ce7b39fdd3a36d6cc8194651808", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2014-01-05T05:07:17Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().isVulkanEngine()) && (org.nschmidt.ldparteditor.logger.NLogger.DEBUG)) { org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().setOpenGLVersion(20); }else { org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().setOpenGLVersion(20); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2829/buggy-version/src.org.nschmidt.ldparteditor.splash.SplashScreen.java", "BodyUseAPI": [], "Fixed commit": "51de5f8d7e7f2caa04c90043a2b19b700bced74e", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-12-28T16:23:08Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((topic.getLastreplyuserid()) != null) { lastReplyUserMap = org.neusoft.neubbs.utils.JsonUtil.toMapByObject(userService.getUserInfoById(topic.getLastreplyuserid())); org.neusoft.neubbs.utils.MapFilterUtil.filterTopicUserInfo(lastReplyUserMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5106/buggy-version/src.main.java.org.neusoft.neubbs.service.impl.TopicServiceImpl.java", "BodyUseAPI": ["org.neusoft.neubbs.utils.JsonUtil.toMapByObject(userService.getUserInfoById(topic.getLastreplyuserid()))", "org.neusoft.neubbs.service.IUserService.getUserInfoById(topic.getLastreplyuserid())", "org.neusoft.neubbs.entity.TopicDO.getLastreplyuserid()"], "Fixed commit": "9542239a7a070bfff92f36a7d32caea0dc9b23d8", "Url": "https://api.github.com/repos/nuitcoder/neubbs", "Date": "2017-11-29T11:12:59Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.getType()) == (de.mirkosertic.gameengine.event.Property.class)) { de.mirkosertic.gameengine.event.Property theProperty = ((de.mirkosertic.gameengine.event.Property) (field.getValue(object))); return de.mirkosertic.gameengine.scriptengine.lua.LuaScriptEngine.toLuaValue(theProperty.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3068/buggy-version/gameengine.src.main.java.de.mirkosertic.gameengine.scriptengine.lua.LuaScriptEngine.java", "BodyUseAPI": ["de.mirkosertic.gameengine.type.Field.getValue(java.lang.Object)"], "Fixed commit": "77df757ad4027be290dc96a0ad1c38ec8dff8f7e", "Url": "https://api.github.com/repos/fpetrola/GameComposer", "Date": "2015-01-05T23:36:22Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sm_Debug) java.lang.System.err.print(((\". \" + (ADMM_currItr_value.get())) + \" .\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8182/buggy-version/src.org.seqcode.projects.sequnwinder.framework.LOne.java", "BodyUseAPI": [], "Fixed commit": "b2e98c2c74bede30e8ab3b44aadb90b0824fa9b9", "Url": "https://api.github.com/repos/seqcode/sequnwinder", "Date": "2017-01-02T17:27:13Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getCommands().contains(getBackCommand())) { getCommands().remove(getBackCommand()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2819/buggy-version/CodenameOne.src.com.codename1.ui.SideMenuBar.java", "BodyUseAPI": [], "Fixed commit": "e3a62118dacdbf187397478b2c5ec06479697359", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-06-08T11:49:07Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (week) { undoneM++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7273/buggy-version/genplan.src.main.java.ru.svalov.ma.progressreport.ProgressStatusServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "5e12a44973d05720d5443008768aee4929fbeae0", "Url": "https://api.github.com/repos/subzero0x1/SDMA", "Date": "2017-12-07T08:48:41Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (week) { undoneS++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7273/buggy-version/genplan.src.main.java.ru.svalov.ma.progressreport.ProgressStatusServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "5e12a44973d05720d5443008768aee4929fbeae0", "Url": "https://api.github.com/repos/subzero0x1/SDMA", "Date": "2017-12-07T08:48:41Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (week) { undoneL++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7273/buggy-version/genplan.src.main.java.ru.svalov.ma.progressreport.ProgressStatusServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "5e12a44973d05720d5443008768aee4929fbeae0", "Url": "https://api.github.com/repos/subzero0x1/SDMA", "Date": "2017-12-07T08:48:41Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nPages) == 2) { args.putString(PhotoItemFragment.KEY_PHOTO_DATA, mServiceRequest.attachments.get(0)); return com.github.codetanzania.ui.fragment.PhotoItemFragment.getNewInstance(args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5948/buggy-version/app.src.main.java.com.github.codetanzania.adapter.IssueItemsViewPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "b576312bb97e9bc0b1219f229d5b4f5ff558ad69", "Url": "https://api.github.com/repos/CodeTanzania/open311-android", "Date": "2017-06-28T02:38:43Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (de.cismet.cids.custom.sudplan.DefaultModelManagerUI.LOG.isDebugEnabled()) { de.cismet.cids.custom.sudplan.DefaultModelManagerUI.LOG.debug(((\"DefaultModelManagerUI for '\" + (model.getCidsBean())) + \"' initialized\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1545/buggy-version/src.main.java.de.cismet.cids.custom.sudplan.DefaultModelManagerUI.java", "BodyUseAPI": [], "Fixed commit": "cbef020ef7dd534696cd532bfbd5e9d0b99bafc9", "Url": "https://api.github.com/repos/cismet/cids-custom-sudplan", "Date": "2012-08-13T12:49:26Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.util.ParamUtil.getLong(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dossierFileId > 0) { org.opencps.jasperreport.util.JRReportUtil.renderReportHTMLStream(response, writer, jrxmlTemplate, jsonObject.toString(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/292/buggy-version/portlets.opencps-portlet.docroot.WEB-INF.src.org.opencps.servlet.PreviewReportServlet.java", "BodyUseAPI": [], "Fixed commit": "1b527109a10e14a639380fe26392101e859a4cab", "Url": "https://api.github.com/repos/trungnt-ksnb/opencps", "Date": "2016-08-03T03:25:22Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldShowRequestPermissionRationale(Manifest.permission.WRITE_EXTERNAL_STORAGE)) { android.support.design.widget.Snackbar.make(getView(), getString(R.string.external_storage_request), Snackbar.LENGTH_INDEFINITE).setAction(getString(R.string.ok_button), new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { requestPermissions(org.openstaxcollege.android.fragment.NoteEditorFragment.STORAGE_PERMS, REQUEST); } }).show(); }else { requestPermissions(org.openstaxcollege.android.fragment.NoteEditorFragment.STORAGE_PERMS, REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5444/buggy-version/app.src.main.java.org.openstaxcollege.android.fragment.NoteEditorFragment.java", "BodyUseAPI": [], "Fixed commit": "cbda75bbe13b11e2d7fa5964c584f13e637fa79f", "Url": "https://api.github.com/repos/Connexions/OSCAndroid", "Date": "2016-09-26T13:12:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (datum != null) { org.apache.avro.Conversion<?> conversion = getData().getConversionFrom(datum.getClass(), schema); writeWithoutConversion(schema, convert(schema, conversion, datum), out); }else { writeWithoutConversion(schema, null, out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/926/buggy-version/lang.java.avro.src.main.java.org.apache.avro.generic.GenericDatumWriter.java", "BodyUseAPI": ["org.apache.avro.generic.GenericData.getConversionFrom(java.lang.Class<? extends java.lang.Object>,org.apache.avro.Schema)", "org.apache.avro.generic.GenericDatumWriter<D>.writeWithoutConversion(org.apache.avro.Schema,java.lang.Object,org.apache.avro.io.Encoder)", "org.apache.avro.generic.GenericDatumWriter<D>.convert(org.apache.avro.Schema,org.apache.avro.Conversion<?>,java.lang.Object)", "java.lang.Object.getClass()"], "Fixed commit": "1e628b28cb3d7157d0bea58c0ff352e5c56821ff", "Url": "https://api.github.com/repos/rdblue/avro", "Date": "2015-04-09T20:39:56Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (datum != null) { java.util.List<org.apache.avro.Schema> candidates = union.getTypes(); for (int i = 0; i < (candidates.size()); i += 1) { if ((getConversionFrom(datum.getClass(), candidates.get(i))) != null) { return i; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/926/buggy-version/lang.java.avro.src.main.java.org.apache.avro.generic.GenericData.java", "BodyUseAPI": ["org.apache.avro.generic.GenericData.getConversionFrom(java.lang.Class<? extends java.lang.Object>,candidates.get(i))", "java.lang.Object.getClass()"], "Fixed commit": "1e628b28cb3d7157d0bea58c0ff352e5c56821ff", "Url": "https://api.github.com/repos/rdblue/avro", "Date": "2015-04-09T20:39:56Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDragEnabled) { if (type == (DragUtils.DragViewType.PAGE)) { com.bigfat.draggedviewpager.utils.DragUtils.removeDragEvent(view); }else { com.bigfat.draggedviewpager.utils.DragUtils.setupDragEvent(this, view, DragUtils.DragViewType.ITEM, draggedViewPagerListener); } }else { com.bigfat.draggedviewpager.utils.DragUtils.removeDragEvent(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5391/buggy-version/library.src.main.java.com.bigfat.draggedviewpager.view.MDA_DraggedViewPager.java", "BodyUseAPI": [], "Fixed commit": "3fbd25e4a84d5ece9b59dadda18e1bdd4de34cae", "Url": "https://api.github.com/repos/yueban/DraggedViewPager", "Date": "2015-09-13T15:52:34Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDragEnabled) { if (type == (DragUtils.DragViewType.ITEM)) { com.bigfat.draggedviewpager.utils.DragUtils.removeDragEvent(viewGroup); }else { com.bigfat.draggedviewpager.utils.DragUtils.setupDragEvent(this, viewGroup, DragUtils.DragViewType.PAGE, draggedViewPagerListener); } }else { com.bigfat.draggedviewpager.utils.DragUtils.removeDragEvent(viewGroup); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5391/buggy-version/library.src.main.java.com.bigfat.draggedviewpager.view.MDA_DraggedViewPager.java", "BodyUseAPI": [], "Fixed commit": "3fbd25e4a84d5ece9b59dadda18e1bdd4de34cae", "Url": "https://api.github.com/repos/yueban/DraggedViewPager", "Date": "2015-09-13T15:52:34Z"},
{"Line": "=>916", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSlideState) == (com.sothree.slidinguppanel.SlidingUpPanelLayout.SlideState.EXPANDED)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5382/buggy-version/src.com.sothree.slidinguppanel.SlidingUpPanelLayout.java", "BodyUseAPI": [], "Fixed commit": "26a2b624a1605f19ce497d694f3a23572e9388a8", "Url": "https://api.github.com/repos/zhuchen1109/AndroidSlidingUpPanel", "Date": "2014-06-11T08:41:27Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (def.isAllowNullPrimaryKeyInserts()) { if (!(i.validateIndexKeys(i.getIndexKeyAndValues(data)))) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7279/buggy-version/src.main.java.com.pardot.rhombus.cobject.CObjectCQLGenerator.java", "BodyUseAPI": [], "Fixed commit": "2263f1f5e440d27e68b6ebc675065144ef7ead19", "Url": "https://api.github.com/repos/Pardot/Rhombus", "Date": "2013-11-06T04:09:28Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (b) { this.topLeft = new version5.mapDrawer.itemManagement.infoTypes.Point2D(java.lang.Math.min(pointOne.getX(), pointTwo.getX()), java.lang.Math.min(pointOne.getY(), pointTwo.getY())); this.bottomRight = new version5.mapDrawer.itemManagement.infoTypes.Point2D(java.lang.Math.max(pointOne.getX(), pointTwo.getX()), java.lang.Math.max(pointOne.getY(), pointTwo.getY())); }else { this.topLeft = pointOne; this.bottomRight = pointTwo; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9079/buggy-version/src.version5.mapDrawer.itemManagement.infoTypes.BoundingBox2D.java", "BodyUseAPI": [], "Fixed commit": "08d37061161e2ed18cdcb58f8714d5339afaf4e1", "Url": "https://api.github.com/repos/Rafael09ED/TeamMapPlanner", "Date": "2015-05-01T12:24:48Z"},
{"Line": "=>1195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.IWorkbenchPart.getAdapter(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sys instanceof org.dawb.common.ui.plot.IPlottingSystem) && (tool instanceof org.dawb.common.ui.plot.EmptyTool)) { final java.util.Collection<org.dawb.common.ui.plot.trace.ITrace> images = ((org.dawb.common.ui.plot.IPlottingSystem) (sys)).getTraces(org.dawb.common.ui.plot.trace.IImageTrace.class); if ((images == null) || (images.isEmpty())) { if ((activeRec.tool.getToolPageRole()) == (org.dawb.common.ui.plot.tool.IToolPage.ToolPageRole.ROLE_2D)) return; }else { if ((activeRec.tool.getToolPageRole()) == (org.dawb.common.ui.plot.tool.IToolPage.ToolPageRole.ROLE_1D)) return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5083/buggy-version/org.dawb.workbench.plotting.src.org.dawb.workbench.plotting.views.ToolPageView.java", "BodyUseAPI": [], "Fixed commit": "75935dcaf1828f7c6895fa5258fa3c10283198d8", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2012-07-10T14:37:06Z"},
{"Line": "=>1031", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (id.startsWith(\"Merged_GPRN\")) { id = id.substring(8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1205/buggy-version/src.edu.ucdenver.ccp.PhenoGen.tools.analysis.GeneDataTools.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "1337d3a4f4c48fcb2e7b5573f75cb18389d97f06", "Url": "https://api.github.com/repos/TabakoffLab/PhenoGen", "Date": "2017-06-07T15:59:17Z"},
{"Line": "=>2706", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPerf) != null) { mPerf.perfLockAcquire(mPreFlingBoostTimeOut, mPreFlingBoostParamVal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/286/buggy-version/core.java.android.view.ViewRootImpl.java", "BodyUseAPI": [], "Fixed commit": "220159050ad88dd0a7fa4de89b4e7a31add42a99", "Url": "https://api.github.com/repos/cj360/platform_frameworks_base", "Date": "2017-03-10T15:27:16Z"},
{"Line": "=>2703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPerf) == null) { mPerf = new android.util.BoostFramework(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/286/buggy-version/core.java.android.view.ViewRootImpl.java", "BodyUseAPI": [], "Fixed commit": "220159050ad88dd0a7fa4de89b4e7a31add42a99", "Url": "https://api.github.com/repos/cj360/platform_frameworks_base", "Date": "2017-03-10T15:27:16Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((measurementUnits.getFamily()) == (MeasurementUnits.Family.BYTES)) || ((measurementUnits.getFamily()) == (MeasurementUnits.Family.BITS))) { returnValueAndUnits = org.rhq.coregui.client.inventory.common.graph.MetricGraphData.autoScaleBytesAndBits(adjustedValue, measurementUnits); }else if ((measurementUnits.getFamily()) == (MeasurementUnits.Family.TIME)) { returnValueAndUnits = new org.rhq.core.domain.measurement.composite.MeasurementNumericValueAndUnits(org.rhq.coregui.client.util.MeasurementConverterClient.scale((adjustedValue / 1000), measurementUnits), measurementUnits); }else { returnValueAndUnits = new org.rhq.core.domain.measurement.composite.MeasurementNumericValueAndUnits(org.rhq.coregui.client.util.MeasurementConverterClient.scale(adjustedValue, measurementUnits), measurementUnits); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5407/buggy-version/modules.enterprise.gui.coregui.src.main.java.org.rhq.coregui.client.inventory.common.graph.MetricGraphData.java", "BodyUseAPI": ["org.rhq.coregui.client.util.MeasurementConverterClient.scale(double,org.rhq.core.domain.measurement.MeasurementUnits)", "org.rhq.core.domain.measurement.MeasurementUnits.getFamily()", "org.rhq.coregui.client.inventory.common.graph.MetricGraphData.autoScaleBytesAndBits(double,org.rhq.core.domain.measurement.MeasurementUnits)", "org.rhq.coregui.client.util.MeasurementConverterClient.scale(double,org.rhq.core.domain.measurement.MeasurementUnits)"], "Fixed commit": "251d60aa898402d28338a43bc844a3d69d4aff7d", "Url": "https://api.github.com/repos/rhq-project/rhq", "Date": "2014-04-24T02:02:53Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fragment == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/368/buggy-version/app.src.main.java.com.bearenterprises.sofiatraffic.utilities.communication.CommunicationUtility.java", "BodyUseAPI": [], "Fixed commit": "f6e8e21cbebf43570d3229ebd385d37120495d3b", "Url": "https://api.github.com/repos/thalvadzhi/Sofia-Traffic", "Date": "2017-03-08T23:23:55Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toUpperCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s.equals(\"BLOCK\")) { Block(enemy, player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4404/buggy-version/NormalRPG.java", "BodyUseAPI": [], "Fixed commit": "f2c618072360adfe338d7e24f105b53453f14877", "Url": "https://api.github.com/repos/jeremysharapov/MKS21X-Final-Project", "Date": "2017-01-12T01:15:03Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((beanItemCollection.size()) > 0) { return getValueAt(0, c).getClass(); }else { return java.lang.String.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6177/buggy-version/src.main.java.com.ags.pirate.model.BeanItemTableModel.java", "BodyUseAPI": [], "Fixed commit": "f324750796240295f13abbec3d4972390e1b60aa", "Url": "https://api.github.com/repos/angel-git/piratebay-downloader", "Date": "2013-12-11T19:00:17Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rapidRandomTree.intersectingGoalNode(rand)) { rapidRandomTree.getGoalNode().setParentNode(rand); goalNodeFound = true; }else if (rapidRandomTree.intersectingGoalNode(rand2)) { rapidRandomTree.getGoalNode().setParentNode(rand2); goalNodeFound = true; }else if (rapidRandomTree.intersectingGoalNode(rand3)) { rapidRandomTree.getGoalNode().setParentNode(rand3); goalNodeFound = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4312/buggy-version/src.rrt.java", "BodyUseAPI": ["rapidRandomTree.getGoalNode().setParentNode(TreeNode)", "RapidRandomTree.intersectingGoalNode(TreeNode)", "rapidRandomTree.getGoalNode().setParentNode(TreeNode)", "rapidRandomTree.getGoalNode().setParentNode(TreeNode)", "RapidRandomTree.getGoalNode()", "RapidRandomTree.getGoalNode()", "RapidRandomTree.getGoalNode()", "RapidRandomTree.intersectingGoalNode(TreeNode)"], "Fixed commit": "f2fc246619029021dbf7ceb22dcfa608360b85cd", "Url": "https://api.github.com/repos/molinab297/RapidExploringRandomTree", "Date": "2017-05-31T19:16:12Z"},
{"Line": "=>2993", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getModelProcessor().isNumericOperator(operations)) && ((!(isNumeric(leftTypeCheckInfo))) || (!(isNumeric(rightTypeCheckInfo))))) { if ((!(leftConceptName.getUri().equals(SadlConstants.SADL_IMPLICIT_MODEL_UNITTEDQUANTITY_URI))) || (!(rightConceptName.getUri().equals(SadlConstants.SADL_IMPLICIT_MODEL_UNITTEDQUANTITY_URI)))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2224/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": [], "Fixed commit": "57dd404140aeabd53815fc09c48dbd27011e6328", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-08-23T20:20:35Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (last_channel.isEmpty()) { last_channel = name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4088/buggy-version/src.it.gamerover.collision.tinyprotocol.TinyProtocol.java", "BodyUseAPI": [], "Fixed commit": "5abc0dde3cfb8c1eae0249280f0429929a821250", "Url": "https://api.github.com/repos/gamerover98/NoCollision", "Date": "2017-06-14T18:21:04Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.ActionEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (source == (lance)) { framework.Framework.gameState = framework.Framework.GameState.LANCE; this.validate(); }else if (source == (play)) { framework.Framework.gameState = framework.Framework.GameState.STARTING; this.validate(); }else if (source == (settings)) { framework.Framework.gameState = framework.Framework.GameState.OPTIONS; this.validate(); }else if ((source == (menu)) || (source == (menu2))) { if (source == (menu)) { musiqueMenu.jouer(); musiqueMenu.boucle(); Game.etat = Game.ETAT.FIN; } framework.Framework.gameState = framework.Framework.GameState.MAIN_MENU; this.validate(); }else if (source == (reprendre)) { musiqueMenu.stop(); framework.Framework.gameState = framework.Framework.GameState.PLAYING; game.etat = old; this.validate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1735/buggy-version/Projet-Info.src.framework.Framework.java", "BodyUseAPI": [], "Fixed commit": "e58c91039c41e19af1de54f18c422cc2d9dba5f2", "Url": "https://api.github.com/repos/tnodet/Projet-Info", "Date": "2015-06-02T21:32:39Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.hunantv.fw.utils.WebUtil.isTextHtml(request)) { response.setContentType(\"text/html;charset=UTF-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3704/buggy-version/src.main.java.com.hunantv.fw.Dispatcher.java", "BodyUseAPI": [], "Fixed commit": "0da13d5256328d3bb5c35bbf236fe7df74c5e606", "Url": "https://api.github.com/repos/liuPATHolsdx/fw", "Date": "2016-01-10T17:43:08Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/502/buggy-version/astrid.plugin-src.com.todoroo.astrid.notes.EditNoteActivity.java", "BodyUseAPI": [], "Fixed commit": "38c4417758c47994d744eab4dc7edb5760af9418", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2013-03-18T22:30:43Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { if (data.hasExtra(com.roamingroths.cmcc.logic.Cycle.class.getName())) { com.roamingroths.cmcc.logic.Cycle cycleFromResponse = data.getParcelableExtra(com.roamingroths.cmcc.logic.Cycle.class.getName()); if (!(mChartEntryAdapter.getCycle().equals(cycleFromResponse))) { swapCycles(cycleFromResponse); } } if (data.hasExtra(com.roamingroths.cmcc.logic.EntryContainer.class.getName())) { com.roamingroths.cmcc.logic.EntryContainer container = data.getParcelableExtra(com.roamingroths.cmcc.logic.EntryContainer.class.getName()); mChartEntryAdapter.updateContainer(container); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5825/buggy-version/app.src.main.java.com.roamingroths.cmcc.ui.entry.list.ChartEntryListActivity.java", "BodyUseAPI": ["android.content.Intent.getParcelableExtra(java.lang.String)", "android.content.Intent.hasExtra(java.lang.String)", "android.content.Intent.hasExtra(java.lang.String)", "android.content.Intent.getParcelableExtra(java.lang.String)"], "Fixed commit": "3d8d682b7d739ef3f05a7dc38729a7a8605c06b7", "Url": "https://api.github.com/repos/parkeroth/ChartyMcChartChart", "Date": "2017-11-11T14:03:45Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4871/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "7bef19ad2e0f7d76c2a4f30b7e2f7d3040ecaeaa", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-21T19:37:29Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.emory.cci.aiw.i2b2etl.dest.config.Settings.getAgeConceptCodePrefix()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ageConceptCodePrefix == null) { ageConceptCodePrefix = edu.emory.cci.aiw.i2b2etl.dest.metadata.DemographicsAgeBuilder.DEFAULT_AGE_PREFIX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4938/buggy-version/src.main.java.edu.emory.cci.aiw.i2b2etl.dest.metadata.DemographicsAgeBuilder.java", "BodyUseAPI": [], "Fixed commit": "543e75ac060fa7df131488ef2d1fdfbac7143737", "Url": "https://api.github.com/repos/eurekaclinical/aiw-i2b2-etl", "Date": "2016-07-07T16:01:16Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p1.x) == (p2.x)) return (p1.y) - (p2.y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5846/buggy-version/src.FractionalCascadingORQ2D.java", "BodyUseAPI": [], "Fixed commit": "90578149530cfba444daabe4ea25288e5bacfff0", "Url": "https://api.github.com/repos/ivanovak/ORQ2D", "Date": "2014-12-19T15:12:01Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(deviceList.contains(device))) { deviceList.add(device); deviceName.add(device.getName()); arrayAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7239/buggy-version/app.src.main.java.com.example.mobile.bledemo.MainActivity.java", "BodyUseAPI": ["java.util.List<android.bluetooth.BluetoothDevice>.add(android.bluetooth.BluetoothDevice)", "java.util.List<java.lang.String>.add(device.getName())", "android.bluetooth.BluetoothDevice.getName()"], "Fixed commit": "a3ad1b5980ebf7dcf1aeafd5077a9b9032fe7fde", "Url": "https://api.github.com/repos/GaoPATHng-Zhang/Android_BluetoothLowEnergy_Demo", "Date": "2016-03-05T08:02:06Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.cqframework.cql.cql2elm.model.Signature, org.cqframework.cql.cql2elm.model.OperatorEntry.SignatureNode>.containsKey(operator.getSignature())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!result) { for (org.cqframework.cql.cql2elm.model.OperatorEntry.SignatureNode n : signatures.values()) { result = n.subSignatures.contains(operator); if (result) { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4070/buggy-version/Src.java.cql-to-elm.src.main.java.org.cqframework.cql.cql2elm.model.OperatorEntry.java", "BodyUseAPI": [], "Fixed commit": "ad671d538824f4f634c2fb817f8b26481e806273", "Url": "https://api.github.com/repos/cqframework/clinical_quality_language", "Date": "2016-12-30T22:04:08Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (builder.isCancelOnBack) { dialog.setCancelable(builder.cancelable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4515/buggy-version/src.com.afollestad.materialdialogs.DialogInit.java", "BodyUseAPI": ["com.afollestad.materialdialogs.MaterialDialog.setCancelable(builder.cancelable)"], "Fixed commit": "70e61e7d427b712a5b3e0b56720652059d48ed69", "Url": "https://api.github.com/repos/imoblife/ImoblifeLibrary", "Date": "2016-08-11T02:07:49Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((count == 1) && ((parts.length) == 0)) { builder.append(aDetails[0]); }else { for (int index = 0; index < (parts.length); index++) { builder.append(parts[index]); if (index < (aDetails.length)) { builder.append(aDetails[index]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8441/buggy-version/src.main.java.info.freelibrary.util.StringUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "8fcc8aaf6a74f654a72bd5577aec0c308ce1d95d", "Url": "https://api.github.com/repos/ksclarke/freelib-utils", "Date": "2012-11-13T04:11:26Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentDirection) != null) { value = ((int) (s.getSense(((currentDirection.name()) + (agent.lfo.DirtBasedAgentSenseConfig.TYPE_SUFFIX))).getValue())); dist = ((int) (s.getSense(((currentDirection.name()) + (agent.lfo.DirtBasedAgentSenseConfig.DISTANCE_SUFFIX))).getValue())); if ((value == (sandbox.Environment.WALL)) && (dist == (sandbox.Environment.CLOSE))) { currentDirection = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4449/buggy-version/src.agent.lfo.expert.SmartStraightLineExpert.java", "BodyUseAPI": [], "Fixed commit": "f088f631e146c31e7e2f39ab31151a732598985c", "Url": "https://api.github.com/repos/CalebChan/jLOAF-Sandbox", "Date": "2015-09-17T21:11:24Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kj.scotlyard.game.model.DefaultGameState.getMove(kj.scotlyard.game.model.Player,int,kj.scotlyard.game.rules.MoveAccessMode)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (m != null) { m = maskMove(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4262/buggy-version/ScotlYard.src.kj.scotlyard.game.rules.TheGameStateAccessPolicy.java", "BodyUseAPI": ["kj.scotlyard.game.rules.TheGameStateAccessPolicy.DetectivesGameState.maskMove(kj.scotlyard.game.model.Move)"], "Fixed commit": "c0be06ec120471a551afec1a01ca55e8bbf804bc", "Url": "https://api.github.com/repos/jakob190590/ScotlYard", "Date": "2012-05-15T19:16:59Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.netbeans.gradle.project.api.entry.GradleProjectExtension.deduceModelsForProjects(org.openide.util.Lookup)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(deduced.containsKey(projectDir))) { java.util.List<java.lang.Object> lookupContent = new java.util.LinkedList<java.lang.Object>(); for (java.util.List<java.lang.Class<?>> models : extension.getGradleModels()) { for (java.lang.Class<?> neededModel : models) { java.lang.Object model = retrievedModels.lookup(neededModel); if (model != null) { lookupContent.add(model); break; } } } return new org.netbeans.gradle.project.api.entry.ParsedModel<org.openide.util.Lookup>(org.openide.util.lookup.Lookups.fixed(lookupContent.toArray()), deduced); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/24/buggy-version/netbeans-gradle-plugin.src.main.java.org.netbeans.gradle.project.ExtensionLoader.java", "BodyUseAPI": [], "Fixed commit": "5ebd0810f4c710aec05aa17caab4533c7654a138", "Url": "https://api.github.com/repos/mam0nth/netbeans-gradle-project", "Date": "2014-01-01T22:40:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(etExpirationYear.getText().toString().matches(\"\"))) { cardExpYear = java.lang.Integer.parseInt(etExpirationYear.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/532/buggy-version/app.src.main.java.com.codepath.the_town_kitchen.activities.PaymentInfoActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "etExpirationYear.getText().toString()", "java.lang.Integer.parseInt(etExpirationYear.getText().toString())"], "Fixed commit": "cbaa1e26f46cc1caea1e841d016bad74d283ecef", "Url": "https://api.github.com/repos/the-town-kitchen/the-town-kitchen", "Date": "2015-03-18T05:16:18Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(etExpirationMonth.getText().toString().matches(\"\"))) { cardExpMonth = java.lang.Integer.parseInt(etExpirationMonth.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/532/buggy-version/app.src.main.java.com.codepath.the_town_kitchen.activities.PaymentInfoActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "java.lang.Integer.parseInt(etExpirationMonth.getText().toString())", "etExpirationMonth.getText().toString()"], "Fixed commit": "cbaa1e26f46cc1caea1e841d016bad74d283ecef", "Url": "https://api.github.com/repos/the-town-kitchen/the-town-kitchen", "Date": "2015-03-18T05:16:18Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f instanceof dk.frv.enav.esd.gui.JMapFrame) { if ((toFront.size()) == 0) { super.activateFrame(f); }else { if (toFront.containsKey(((dk.frv.enav.esd.gui.JMapFrame) (f)).getId())) { super.activateFrame(f); }else { super.activateFrame(f); java.util.Iterator<java.util.Map.Entry<java.lang.Integer, javax.swing.JInternalFrame>> it = toFront.entrySet().iterator(); while (it.hasNext()) { java.util.Map.Entry<java.lang.Integer, javax.swing.JInternalFrame> pairs = ((java.util.Map.Entry<java.lang.Integer, javax.swing.JInternalFrame>) (it.next())); super.activateFrame(pairs.getValue()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1367/buggy-version/src.main.java.dk.frv.enav.esd.gui.JMainDesktopManager.java", "BodyUseAPI": ["javax.swing.DefaultDesktopManager.activateFrame(javax.swing.JInternalFrame)", "javax.swing.DefaultDesktopManager.activateFrame(javax.swing.JInternalFrame)", "javax.swing.DefaultDesktopManager.activateFrame(javax.swing.JInternalFrame)"], "Fixed commit": "974d9978b73ad078146b1725ee3807b35074a208", "Url": "https://api.github.com/repos/DaMSA/eNav-Shore-Display", "Date": "2012-04-20T19:48:00Z"},
{"Line": "=>912", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((matches.size()) > 0) { for (int i = ((int) (start)); i <= end; i++) { matches.add(sorted.get(i).container); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5850/buggy-version/src.main.java.com.fiftyonred.mock_jedis.MockStorage.java", "BodyUseAPI": ["java.util.Set<com.fiftyonred.mock_jedis.DataContainer>.add(com.fiftyonred.mock_jedis.DataContainer)"], "Fixed commit": "d93a60ff89d81572827106ee3388b830711ceb8a", "Url": "https://api.github.com/repos/Quiq/mock-jedis", "Date": "2016-12-02T22:05:55Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message.args().length) != 1) { throw new exceptions.InvalidArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2191/buggy-version/src.controllers.CommandHandler.java", "BodyUseAPI": [], "Fixed commit": "1cd35998f606c626f76f3c1624f25d6ea67797da", "Url": "https://api.github.com/repos/LiesbethW/go-go-go", "Date": "2016-01-29T09:57:44Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (se.crafted.chrisb.ecoCreature.commons.DependencyUtils.hasFactions()) { gainMultipliers.addAll(se.crafted.chrisb.ecoCreature.rewards.gain.FactionsGain.parseConfig(config.getConfigurationSection(\"Gain.Factions\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8554/buggy-version/src.main.java.se.crafted.chrisb.ecoCreature.PluginConfig.java", "BodyUseAPI": [], "Fixed commit": "ea58ad4d3914e1786c8dc346e07771971abac1b7", "Url": "https://api.github.com/repos/mung3r/ecoCreature", "Date": "2014-06-13T07:45:59Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JColorChooser.showDialog(ui.Window,java.lang.String,e.getBackgroundColor())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3999/buggy-version/src.ui.ToolBox.java", "BodyUseAPI": [], "Fixed commit": "3380898ad2048086d769107158250863d9624fc3", "Url": "https://api.github.com/repos/gre/shape-editor", "Date": "2011-06-04T20:25:56Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JColorChooser.showDialog(ui.Window,java.lang.String,e.getStrokeColor())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3999/buggy-version/src.ui.ToolBox.java", "BodyUseAPI": [], "Fixed commit": "3380898ad2048086d769107158250863d9624fc3", "Url": "https://api.github.com/repos/gre/shape-editor", "Date": "2011-06-04T20:25:56Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restlet.engine.header.RecipientInfoReader.readToken()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((protocolToken == null) || (\"\".equals(protocolToken))) { throw new java.io.IOException(\"Unexpected empty protocol token for while reading recipient info header, please check the value.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8506/buggy-version/modules.org.restlet.src.org.restlet.engine.header.RecipientInfoReader.java", "BodyUseAPI": [], "Fixed commit": "cc4a299b122f61521590a602f4d7a969ddb5a7de", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-12-21T12:27:55Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (receiver.equals(sender)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6688/buggy-version/server.src.main.java.io.github.halfo.Session.java", "BodyUseAPI": [], "Fixed commit": "831aff3f721170183dd69ad2f2f7b2c5f6ac17ab", "Url": "https://api.github.com/repos/halfo/messenger", "Date": "2015-06-30T01:07:41Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t1.getText().equals(\"\")) l1.setText(\"Error: No string submited for translation\"); else l1.setText(((((\"<html><table><td align = 'center' width='\" + 290) + \"'>\") + (pig.getPigLatinPhrase(t1.getText()))) + \"</td></table></html>\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8000/buggy-version/src.com.luciofranco.piglatinator.Frame.java", "BodyUseAPI": ["javax.swing.JLabel.setText(((((\"<html><table><td align = 'center' width='\" + 290) + \"'>\") + (pig.getPigLatinPhrase(t1.getText()))) + \"</td></table></html>\"))", "com.luciofranco.piglatinator.PigLatinTranslator.getPigLatinPhrase(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "24ee3e9b5dd0caed382c8c662e04fb97ba1b25f7", "Url": "https://api.github.com/repos/LucioFranco/PigLatinator", "Date": "2013-11-23T20:50:04Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((packet.acceleration) <= (com.waleed.Spaceoids.entities.Player.MAX_SPEED)) { SpaceoidsClient.players.get(packet.id).acceleration = packet.accleration; SpaceoidsClient.players.get(packet.id).acceleration = packet.acclerationTimer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1365/buggy-version/src.com.waleed.Spaceoids.network.Network.java", "BodyUseAPI": ["SpaceoidsClient.players.get(packet.id)", "SpaceoidsClient.players.get(packet.id)"], "Fixed commit": "3f93ef36ab5d2d7aa18543b7c7185a72aac3d956", "Url": "https://api.github.com/repos/robocos987/Spaceoids", "Date": "2015-12-09T18:23:51Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (agenda.hasData((day - 1))) { dayButton_plan[i].setBackground(java.awt.Color.ORANGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3897/buggy-version/src.display.Method.java", "BodyUseAPI": [], "Fixed commit": "0c85f60ac357bba978cefd9925a336fc6eaa118b", "Url": "https://api.github.com/repos/High-density/AMS", "Date": "2016-11-18T13:06:04Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { selectMenuItem(ru.vlad805.guap.schedule.MainMenuItem.defaultItem()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2487/buggy-version/app.src.main.java.ru.vlad805.guap.schedule.activities.DrawerActivity.java", "BodyUseAPI": [], "Fixed commit": "b58c27afa8d510491af52ad07649cfbabc40521d", "Url": "https://api.github.com/repos/djarktic/GUAPSchedule", "Date": "2015-11-08T15:08:47Z"},
{"Line": "=>2006", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i + 1) >= (ch.length)) { result.append(c); continue; }else if (!(org.xhtmlrenderer.css.parser.CSSParser.isHexChar(ch[(i + 1)]))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8131/buggy-version/flying-saucer-core.src.main.java.org.xhtmlrenderer.css.parser.CSSParser.java", "BodyUseAPI": ["org.xhtmlrenderer.css.parser.CSSParser.isHexChar(char)"], "Fixed commit": "5a6052767c79308b551ae1adc558449824a76e0c", "Url": "https://api.github.com/repos/trbt/flyingsaucer", "Date": "2015-10-26T19:36:53Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (item != null) { mMessageBuilder.setTags(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5040/buggy-version/src.org.servalproject.maps.protobuf.BinaryFileContract.java", "BodyUseAPI": ["org.servalproject.maps.protobuf.PointOfInterestMessage.Message.Builder.setTags(java.lang.String)"], "Fixed commit": "429c27654ab5fb617d72abda864d7a8a5fde4b2e", "Url": "https://api.github.com/repos/servalproject/ServalMaps", "Date": "2012-08-23T23:29:31Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sections) == null) sections = getResources().getStringArray(R.array.sections);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4426/buggy-version/app.src.main.java.za.co.lukestonehm.logicaldefence.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b375b6d11e3fae55cad0fd0761ec261cc5b9e576", "Url": "https://api.github.com/repos/LukeStonehm/LogicalDefence", "Date": "2015-02-27T21:32:03Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.isObject()) { shell.readFromUBObject(value.asObject()); shell.afterRead(); return shell; }else { com.devsmart.microdb.Utils.LOGGER.warn(\"value is not an object or a string id\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8674/buggy-version/microdb-runtime.src.main.java.com.devsmart.microdb.Utils.java", "BodyUseAPI": ["com.devsmart.ubjson.UBValue.asObject()", "T.readFromUBObject(value.asObject())"], "Fixed commit": "4a312de907cf5f6363634d919f23444d77af1071", "Url": "https://api.github.com/repos/dinocore1/MicroDb", "Date": "2016-02-28T17:07:20Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIngredients.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2664/buggy-version/app.src.com.example.cookbookapp.Ingredients.java", "BodyUseAPI": [], "Fixed commit": "b28c4acf23169bc8c983c0f7905ff4cf317417ea", "Url": "https://api.github.com/repos/stevejosborne/how-to-feed-yourself", "Date": "2016-08-21T02:24:10Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dbClient.userDao().selectNullableByScmAccountOrLoginOrName(org.sonar.core.persistence.DbSession,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (matchingUser != null) { if ((existingUser == null) || (!(matchingUser.getId().equals(existingUser.getId())))) { messages.add(org.sonar.server.exceptions.Message.of(\"user.scm_account_already_used\", scmAccount, matchingUser.getName(), matchingUser.getLogin())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6162/buggy-version/server.sonar-server.src.main.java.org.sonar.server.user.UserUpdater.java", "BodyUseAPI": ["org.sonar.core.user.UserDto.getId()", "java.util.List<org.sonar.server.exceptions.Message>.add(org.sonar.server.exceptions.Message.of(\"user.scm_account_already_used\", scmAccount, matchingUser.getName(), matchingUser.getLogin()))", "org.sonar.core.user.UserDto.getLogin()", "org.sonar.server.exceptions.Message.of(java.lang.String,java.lang.String,matchingUser.getName(),matchingUser.getLogin())", "org.sonar.core.user.UserDto.getName()", "matchingUser.getId().equals(existingUser.getId())"], "Fixed commit": "0e9785908603273c7f4ef00800a8fc7042b55a2a", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-01-06T13:27:03Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) > 0) str.delete(((str.length()) - 1), str.length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5074/buggy-version/src.corp.util.SerializationUtil.java", "BodyUseAPI": [], "Fixed commit": "190a1074676d5db14e882e88ff167bc02378e892", "Url": "https://api.github.com/repos/forkunited/CorporateRelationExtraction", "Date": "2013-10-28T18:36:31Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arguments.size()) > 0) str = str.delete(((str.length()) - 1), str.length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5074/buggy-version/src.corp.util.SerializationUtil.java", "BodyUseAPI": [], "Fixed commit": "190a1074676d5db14e882e88ff167bc02378e892", "Url": "https://api.github.com/repos/forkunited/CorporateRelationExtraction", "Date": "2013-10-28T18:36:31Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(textField.getText().isEmpty())) { java.lang.Float floatVal = java.lang.Float.parseFloat(textField.getText()); fieldUpdateFunc.accept(floatVal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6234/buggy-version/src.ui.SettingsBox.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "90947c48f880b998380e350da3c8e14320fb66a3", "Url": "https://api.github.com/repos/hator/fontys-ood2-flow-network", "Date": "2017-01-12T19:06:08Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((telearm.getTargetPosition()) != 0) { telearm.setMode(DcMotorController.RunMode.RESET_ENCODERS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9238/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.robot.java", "BodyUseAPI": ["com.qualcomm.robotcore.hardware.DcMotor.setMode(DcMotorController.RunMode.RESET_ENCODERS)"], "Fixed commit": "4f09fe9a555ba7495009240471ff62ae0066a3c6", "Url": "https://api.github.com/repos/team10051/ftc_app-master", "Date": "2015-12-11T21:56:33Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gamepad2.right_stick_y) < 0) { extend.setPower(((-0.25) * (gamepad2.right_stick_y))); }else if ((gamepad2.right_stick_y) > 0) { extend.setPower(((-0.1) * (gamepad2.right_stick_y))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9238/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.robot.java", "BodyUseAPI": ["com.qualcomm.robotcore.hardware.DcMotor.setPower(((-0.1) * (gamepad2.right_stick_y)))", "com.qualcomm.robotcore.hardware.DcMotor.setPower(((-0.25) * (gamepad2.right_stick_y)))"], "Fixed commit": "4f09fe9a555ba7495009240471ff62ae0066a3c6", "Url": "https://api.github.com/repos/team10051/ftc_app-master", "Date": "2015-12-11T21:56:33Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gamepad2.a) { telearm.setMode(DcMotorController.RunMode.RUN_USING_ENCODERS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9238/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.robot.java", "BodyUseAPI": [], "Fixed commit": "4f09fe9a555ba7495009240471ff62ae0066a3c6", "Url": "https://api.github.com/repos/team10051/ftc_app-master", "Date": "2015-12-11T21:56:33Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hex.matches(\"([a-fA-F\\\\d])+\"))) { return new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3062/buggy-version/src.net.util.Hash.java", "BodyUseAPI": [], "Fixed commit": "440feb1067a0c0fefe665c0971b4dfac85594614", "Url": "https://api.github.com/repos/DHIF14/MPi3-Server", "Date": "2017-05-31T12:41:16Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getInventory().getChestplate().getType()", "player.getInventory().getBoots().getType()", "player.getInventory().getHelmet().getType()", "player.getInventory().getLeggings().getType()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((((helmet != null) && (chest != null)) && (legs != null)) && (feet != null)) armor = (((getHelmetMelee(helmet)) + (getChestMelee(chest))) + (getLegMelee(legs))) + (getFootMelee(feet));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5067/buggy-version/src.com.gildorymrp.gildorym.stats.ArmorStats.java", "BodyUseAPI": ["com.gildorymrp.gildorym.stats.ArmorStats.getLegMelee(org.bukkit.Material)", "com.gildorymrp.gildorym.stats.ArmorStats.getHelmetMelee(org.bukkit.Material)", "com.gildorymrp.gildorym.stats.ArmorStats.getChestMelee(org.bukkit.Material)", "com.gildorymrp.gildorym.stats.ArmorStats.getFootMelee(org.bukkit.Material)"], "Fixed commit": "60d5acd7c6889cac2732d5da54710d41f8c8487e", "Url": "https://api.github.com/repos/Gildorym/Gildorym", "Date": "2014-04-08T01:04:52Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((weapon) != null) meleeAttack += Weapon.getMeleeAttack(weapon);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5067/buggy-version/src.com.gildorymrp.gildorym.stats.CharacterStats.java", "BodyUseAPI": [], "Fixed commit": "60d5acd7c6889cac2732d5da54710d41f8c8487e", "Url": "https://api.github.com/repos/Gildorym/Gildorym", "Date": "2014-04-08T01:04:52Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((weapon) != null) magicAttack += Weapon.getMagicAttack(weapon);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5067/buggy-version/src.com.gildorymrp.gildorym.stats.CharacterStats.java", "BodyUseAPI": [], "Fixed commit": "60d5acd7c6889cac2732d5da54710d41f8c8487e", "Url": "https://api.github.com/repos/Gildorym/Gildorym", "Date": "2014-04-08T01:04:52Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((weapon) != null) rangedAttack += Weapon.getRangedAttack(weapon);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5067/buggy-version/src.com.gildorymrp.gildorym.stats.CharacterStats.java", "BodyUseAPI": [], "Fixed commit": "60d5acd7c6889cac2732d5da54710d41f8c8487e", "Url": "https://api.github.com/repos/Gildorym/Gildorym", "Date": "2014-04-08T01:04:52Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Location.getChunk()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(chunk.isLoaded())) { chunk.load(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2714/buggy-version/src.main.java.com.matthewhatcher.randomspawn.Utils.TeleportUtils.java", "BodyUseAPI": ["org.bukkit.Chunk.load(boolean)"], "Fixed commit": "0491d427c22b69a8d51f299cc6873e198306fbe6", "Url": "https://api.github.com/repos/MatthewSH/spigot-RandomSpawn", "Date": "2017-01-16T10:00:36Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.Spinner.getAdapter()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((adapter.getCount()) > 0) { spinner.setSelection(0, true); com.firebirdberlin.tinytimetracker.TrackerEntry tracker = ((com.firebirdberlin.tinytimetracker.TrackerEntry) (spinner.getItemAtPosition(0))); android.util.Log.i(com.firebirdberlin.tinytimetracker.MainFragment.TAG, (\"Tracker selected \" + (tracker.verbose_name))); de.greenrobot.event.EventBus bus = de.greenrobot.event.EventBus.getDefault(); bus.post(new com.firebirdberlin.tinytimetracker.OnTrackerSelected(tracker)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1951/buggy-version/android.src.com.firebirdberlin.tinytimetracker.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "a3d911f9d58947486d7c9792fe3ccb17e971c487", "Url": "https://api.github.com/repos/firebirdberlin/tinytimetracker", "Date": "2016-05-11T14:53:44Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jFrame.isVisible()) { jLockWindow.show(net.nikr.eve.jeveasset.i18n.GuiShared.get().updating(), new net.nikr.eve.jeveasset.gui.shared.components.JLockWindow.LockWorker() { @java.lang.Override public void task() { jMainTab.updateCache(); } @java.lang.Override public void gui() { } }); }else { jMainTab.updateCache(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5350/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.frame.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "93344af66d20fe7d17e050e930748a6ea2bf12a3", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-12-02T10:37:06Z"},
{"Line": "=>1493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (workflowedBaseModel instanceof com.liferay.portal.model.WorkflowedModel) { com.liferay.portal.model.WorkflowedModel workflowedModel = ((com.liferay.portal.model.WorkflowedModel) (workflowedBaseModel)); document.addKeyword(Field.STATUS, workflowedModel.getStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/747/buggy-version/portal-service.src.com.liferay.portal.kernel.search.BaseIndexer.java", "BodyUseAPI": [], "Fixed commit": "da7487d67b1f042769c9a826f9885c41519ab7f4", "Url": "https://api.github.com/repos/ealonso/liferay-portal", "Date": "2013-09-09T09:26:49Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key instanceof java.security.interfaces.ECPrivateKey) { return new org.apache.cxf.rs.security.jose.jwe.EcdhAesWrapKeyDecryptionAlgorithm(((java.security.interfaces.ECPrivateKey) (key)), algo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6844/buggy-version/rt.rs.security.jose.jose-core.src.main.java.org.apache.cxf.rs.security.jose.jwe.JweUtils.java", "BodyUseAPI": [], "Fixed commit": "06698761a7ba32be4fb16dc8446885dfd2885ddf", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2015-10-14T14:36:24Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof wycs.transforms.Value.String) { wycs.transforms.Value.String v = ((wycs.transforms.Value.String) (value)); return automaton.add(new wycs.transforms.Automaton.Strung(v.value)); }else if (value instanceof wycs.transforms.Value.Set) { wycs.transforms.Value.Set vs = ((wycs.transforms.Value.Set) (value)); int[] vals = new int[vs.values.size()]; int i = 0; for (wycs.transforms.Value c : vs.values) { vals[(i++)] = convert(c, element, automaton); } return Set(automaton, vals); }else if (value instanceof wycs.transforms.Value.Tuple) { wycs.transforms.Value.Tuple vt = ((wycs.transforms.Value.Tuple) (value)); int[] vals = new int[vt.values.size()]; for (int i = 0; i != (vals.length); ++i) { vals[i] = convert(vt.values.get(i), element, automaton); } return Tuple(automaton, vals); }else { internalFailure(((((\"unknown value encountered (\" + value) + \", \") + (value.getClass().getName())) + \")\"), filename, element); return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2626/buggy-version/modules.wycs.src.wycs.transforms.VerificationCheck.java", "BodyUseAPI": ["wycs.transforms.Value.getClass()", "value.getClass().getName()", "wycs.transforms.VerificationCheck.internalFailure(((((\"unknown value encountered (\" + value) + \", \") + (value.getClass().getName())) + \")\"),java.lang.String,wybs.lang.SyntacticElement)"], "Fixed commit": "d0edcf1fabe877be22450a8e49d6b07876ee80b7", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2013-03-04T02:45:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.json.JSONObject.getString(java.lang.String)", "com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.liferay.portal.kernel.util.Validator.isNull(uuid)) && (com.liferay.portal.kernel.util.Validator.isNull(groupId))) { return com.liferay.portal.kernel.util.StringPool.BLANK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7341/buggy-version/dynamic-data-mapping-service.src.main.java.com.liferay.dynamic.data.mapping.render.impl.DocumentLibraryDDMFormFieldValueRenderer.java", "BodyUseAPI": [], "Fixed commit": "389c6f96d05ad790cb35dae9d357a98c620de187", "Url": "https://api.github.com/repos/liferay/com-liferay-dynamic-data-mapping", "Date": "2016-06-20T18:13:47Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)", "com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.liferay.portal.kernel.util.Validator.isNull(groupId)) && (com.liferay.portal.kernel.util.Validator.isNull(layoutId))) { return com.liferay.portal.kernel.util.StringPool.BLANK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7341/buggy-version/dynamic-data-mapping-service.src.main.java.com.liferay.dynamic.data.mapping.render.impl.LinkToPageDDMFormFieldValueRenderer.java", "BodyUseAPI": [], "Fixed commit": "389c6f96d05ad790cb35dae9d357a98c620de187", "Url": "https://api.github.com/repos/liferay/com-liferay-dynamic-data-mapping", "Date": "2016-06-20T18:13:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.json.JSONObject.getString(java.lang.String)", "com.liferay.portal.kernel.json.JSONObject.getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.liferay.portal.kernel.util.Validator.isNull(className)) && (com.liferay.portal.kernel.util.Validator.isNull(classPK))) { return com.liferay.portal.kernel.util.StringPool.BLANK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7341/buggy-version/dynamic-data-mapping-service.src.main.java.com.liferay.dynamic.data.mapping.render.impl.JournalArticleDDMFormFieldValueRenderer.java", "BodyUseAPI": [], "Fixed commit": "389c6f96d05ad790cb35dae9d357a98c620de187", "Url": "https://api.github.com/repos/liferay/com-liferay-dynamic-data-mapping", "Date": "2016-06-20T18:13:47Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(client.getTempGeoLocation().equals(\"\"))) { try { client.setGeoLocationId(java.lang.Integer.parseInt(client.getTempGeoLocation())); } catch (java.lang.NumberFormatException e) { client.setGeoLocationId(geographicalLocationManager.getGeographicalLocationByRegion(client.getTempGeoLocation()).getGeoLocationId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7684/buggy-version/web.src.main.java.za.co.scarlet.controller.Profile.EditProfileController.java", "BodyUseAPI": ["za.co.scarlet.service.IGeographicalLocationManager.getGeographicalLocationByRegion(client.getTempGeoLocation())", "za.co.scarlet.domain.ClientEntity.getTempGeoLocation()", "za.co.scarlet.domain.ClientEntity.setGeoLocationId(geographicalLocationManager.getGeographicalLocationByRegion(client.getTempGeoLocation()).getGeoLocationId())", "za.co.scarlet.domain.ClientEntity.setGeoLocationId(int)", "java.lang.Integer.parseInt(client.getTempGeoLocation())", "geographicalLocationManager.getGeographicalLocationByRegion(client.getTempGeoLocation()).getGeoLocationId()", "za.co.scarlet.domain.ClientEntity.getTempGeoLocation()"], "Fixed commit": "1f48c7ac1181926c7258e897974a1965d9ef7fc6", "Url": "https://api.github.com/repos/candiceswarts/FitnessBBG", "Date": "2015-06-16T20:15:23Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (category == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9267/buggy-version/app.src.main.java.com.matthewn4444.voiceautomation.UIPresenter.java", "BodyUseAPI": [], "Fixed commit": "4b5d2f9c6b95040e0dd1b6017d4902efa297b410", "Url": "https://api.github.com/repos/matthewn4444/VoiceAutomation", "Date": "2015-05-18T07:02:48Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tab.areAllFieldsValid())) { showFieldValidationError(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/153/buggy-version/overwatch.src.overwatch.controllers.SupplyLogic.java", "BodyUseAPI": [], "Fixed commit": "339db99188a3ab06429d0387a0bce41285ce3bae", "Url": "https://api.github.com/repos/LeeCIT/overwatch", "Date": "2013-04-26T10:07:23Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((currentCountry) != null) && (!(currentCountry.isEmpty()))) && ((currentCity) != null)) && (!(currentCity.isEmpty()))) getCityKey(currentCity, currentCountry);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9285/buggy-version/app.src.main.java.dhiraj.com.weatherapp.MainActivity.java", "BodyUseAPI": ["dhiraj.com.weatherapp.MainActivity.getCityKey(java.lang.String,java.lang.String)"], "Fixed commit": "a8cea64e2841db57d503335185f5d0b104fd1a23", "Url": "https://api.github.com/repos/dnayak1/WeatherApp", "Date": "2017-04-10T05:17:02Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((firstChild.getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.RESOURCE_SPECIFICATION)) { firstChild = firstChild.getNextSibling(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4793/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getNextSibling()"], "Fixed commit": "32285aadd7635960005f3bcf7ad3104ca52fd784", "Url": "https://api.github.com/repos/cypai/checkstyle", "Date": "2017-01-05T21:02:04Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((info.getLatLng()) != null) { latitude = info.getLatLng().latitude; longitude = info.getLatLng().longitude; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3864/buggy-version/openweathermap-lib.src.main.java.com.kubotaku.android.openweathermap.lib.db.WeatherInfoDAO.java", "BodyUseAPI": ["com.kubotaku.android.openweathermap.lib.WeatherInfo.getLatLng()", "com.kubotaku.android.openweathermap.lib.WeatherInfo.getLatLng()"], "Fixed commit": "07a3aa8880d3a3dc40f52e4b45921f3eb2654592", "Url": "https://api.github.com/repos/kubotaku1119/OpenWeatherMapLib", "Date": "2014-12-26T14:06:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getX()) != 0) { result += java.lang.Math.atan(((getY()) / (getX()))); }else { result = ((getY()) < 0) ? 0 : java.lang.Math.PI; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/215/buggy-version/src.main.java.hu.oe.nik.szfmv.common.Vector2D.java", "BodyUseAPI": [], "Fixed commit": "a52ec9cc76b98ac60ee373bbae461eba8e979f30", "Url": "https://api.github.com/repos/SzFMV2017-Osz/AutomatedCar", "Date": "2017-11-12T14:52:49Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"/\".equals(facility)) { this.length = 1; }else { this.length = ((facility.length()) + ((facility.charAt(0)) == '/' ? 0 : 1)) - (facility.endsWith(\"/\") ? 1 : 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/188/buggy-version/src.main.java.net.researchgate.archaius.ConsulConfigurationSource.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "77e3b4670e5396c6292575f0032cd04f45ed0a82", "Url": "https://api.github.com/repos/researchgate/archaius-consul", "Date": "2016-03-01T12:29:19Z"},
{"Line": "=>904", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pointsSPCarte) != null) { for (int i = 0; i < (pointsSPCarte.size()); i++) { istic.fr.droneproject.model.PointInteret pointCourant = pointsSPCarte.get(i); ajoutImageFromPoint(pointCourant, (2000 + i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1366/buggy-version/app.src.main.java.istic.fr.droneproject.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "e47d1ae7907e1994f55667ad196d9fa91eb42278", "Url": "https://api.github.com/repos/bouluad/DroneProject", "Date": "2017-03-31T09:17:52Z"},
{"Line": "=>896", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pointsCarte) != null) { for (int i = 0; i < (pointsCarte.size()); i++) { istic.fr.droneproject.model.PointInteret pointCourant = pointsCarte.get(i); ajoutImageFromPoint(pointCourant, (1000 + i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1366/buggy-version/app.src.main.java.istic.fr.droneproject.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "e47d1ae7907e1994f55667ad196d9fa91eb42278", "Url": "https://api.github.com/repos/bouluad/DroneProject", "Date": "2017-03-31T09:17:52Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((imaginary) == 0.0) { return \"\"; }else if ((real) == 0.0) { return (format.format(imaginary)) + \"i\"; }else { return ((imaginary) > 0 ? format.format(imaginary) : format.format((-(imaginary)))) + \"i\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/623/buggy-version/src.hw3.q2.math.Complex.java", "BodyUseAPI": ["java.text.DecimalFormat.format(double)"], "Fixed commit": "1b17515a1e879c04c77a5ced7121996a2157f075", "Url": "https://api.github.com/repos/palmerjoshua/COP4331", "Date": "2015-10-03T18:55:14Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) == 1) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4180/buggy-version/src.uts.sep.Persons.java", "BodyUseAPI": [], "Fixed commit": "799938e476ea788756740decacd80520c7488499", "Url": "https://api.github.com/repos/timothygee/SEP2", "Date": "2013-11-07T15:48:35Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4180/buggy-version/src.uts.sep.Persons.java", "BodyUseAPI": [], "Fixed commit": "799938e476ea788756740decacd80520c7488499", "Url": "https://api.github.com/repos/timothygee/SEP2", "Date": "2013-11-07T15:48:35Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (account.getPassword().contains(\"$2a$10$\")) { jdbcTemplate.update(SQL_UPDATE_ACCOUNT_USER, account.isActive(), account.getPassword(), account.getUserRole(), account.getName(), account.getAddress(), account.getEmail(), account.getPhone(), username); }else { jdbcTemplate.update(SQL_UPDATE_ACCOUNT_USER, account.isActive(), encoder.encode(account.getPassword()), account.getUserRole(), account.getName(), account.getAddress(), account.getEmail(), account.getPhone(), username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4927/buggy-version/src.com.OrganicFreshShop.daoImplements.AccountDAOImplement.java", "BodyUseAPI": ["org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String,account.isActive(),encoder.encode(account.getPassword()),account.getUserRole(),account.getName(),account.getAddress(),account.getEmail(),account.getPhone(),java.lang.String)", "com.OrganicFreshShop.model.Account.getPassword()", "com.OrganicFreshShop.model.Account.getEmail()", "com.OrganicFreshShop.model.Account.getPhone()", "com.OrganicFreshShop.model.Account.getUserRole()", "com.OrganicFreshShop.model.Account.getAddress()", "com.OrganicFreshShop.model.Account.getName()", "com.OrganicFreshShop.model.Account.getName()", "com.OrganicFreshShop.model.Account.getPhone()", "com.OrganicFreshShop.model.Account.isActive()", "com.OrganicFreshShop.model.Account.getPassword()", "com.OrganicFreshShop.model.Account.getAddress()", "com.OrganicFreshShop.model.Account.getEmail()", "com.OrganicFreshShop.model.Account.getUserRole()", "com.OrganicFreshShop.model.Account.isActive()", "org.springframework.security.crypto.password.PasswordEncoder.encode(account.getPassword())", "org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String,account.isActive(),account.getPassword(),account.getUserRole(),account.getName(),account.getAddress(),account.getEmail(),account.getPhone(),java.lang.String)"], "Fixed commit": "34661df0bdf9f63fb177a353dc4c854d8f25408b", "Url": "https://api.github.com/repos/sadekyo1712/OrganikFreshShop", "Date": "2016-12-15T08:22:28Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((predicates.length) > 1) { java.lang.Object[] values = new java.lang.Object[predicates.length]; for (int i = 0; i < (predicates.length); i++) { assert (predicates[i].type()) == (exact) : \"composite indexes only supported for seek\"; values[i] = ((org.neo4j.kernel.api.schema_new.IndexQuery.ExactPredicate) (predicates[i])).value(); } return seek(values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1790/buggy-version/community.lucene-index.src.main.java.org.neo4j.kernel.api.impl.schema.reader.SimpleIndexReader.java", "BodyUseAPI": ["predicates[i].type()", "((org.neo4j.kernel.api.schema_new.IndexQuery.ExactPredicate) (predicates[i])).value()"], "Fixed commit": "3cdb0746788c06513562253cd91d78dd8366fdd9", "Url": "https://api.github.com/repos/neo4j/neo4j", "Date": "2017-02-23T13:52:09Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Sign.getLines()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lSignLines.length) > 1) { lCircuit.signLine1 = lSignLines[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4496/buggy-version/src.com.mahn42.anhalter42.circuit.CircuitBuildingHandler.java", "BodyUseAPI": [], "Fixed commit": "552f11e5992bcadbf29927c41d940446da1b587f", "Url": "https://api.github.com/repos/anhalter42/Minecraft-Bukkit-Circuit", "Date": "2012-07-08T19:37:20Z"},
{"Line": "=>1754", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lineType != (TacticalLines.PBS_CIRCLE)) lineutility.RotateGeometryDouble(pEllipsePoints, 36, (azimuth - 90));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4418/buggy-version/Renderer.src.main.java.armyc2.c2sd.JavaLineArray.arraysupport.java", "BodyUseAPI": [], "Fixed commit": "1b282b1718b3c72d024bb56b34acabd3ae41486f", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2016-11-17T23:18:24Z"},
{"Line": "=>1742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lineType == (TacticalLines.PBS_CIRCLE)) b = a;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4418/buggy-version/Renderer.src.main.java.armyc2.c2sd.JavaLineArray.arraysupport.java", "BodyUseAPI": [], "Fixed commit": "1b282b1718b3c72d024bb56b34acabd3ae41486f", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2016-11-17T23:18:24Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeCaret) == caretModel) { activeCaret = carets.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6292/buggy-version/platform.platform-impl.src.com.intellij.openapi.editor.impl.MultiCaretModelImpl.java", "BodyUseAPI": [], "Fixed commit": "3fc6bdaa5cde7c90c77862c3f111792737ad90f5", "Url": "https://api.github.com/repos/krasa/intellij-community", "Date": "2014-01-14T01:22:17Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.batch.index.DefaultIndex.checkIndexed(org.sonar.batch.index.Resource)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (addViolation(violation, bucket, force)) { deprecatedViolations.add(violation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3921/buggy-version/sonar-batch.src.main.java.org.sonar.batch.index.DefaultIndex.java", "BodyUseAPI": ["org.sonar.batch.issue.DeprecatedViolations.add(org.sonar.api.rules.Violation)"], "Fixed commit": "12b3f014ce875093ed513900e7f7bc4c9997c5cc", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-04-17T09:06:46Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mErrorView) != null) { mErrorView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6328/buggy-version/src.org.denevell.droidnatch.app.views.ReceivingClickingAutopaginatingListView.java", "BodyUseAPI": [], "Fixed commit": "0ad6b00d05b6912d4778e6c52566e5a1d387f3a8", "Url": "https://api.github.com/repos/denevell/Natch-Android", "Date": "2014-03-04T23:45:35Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.talizorah.githubmobile.Model.ConnectionChecker.isNetworkAvailable(this)) { saveIntoDb(); }else { android.widget.Toast.makeText(mContext, R.string.saving_alert, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7295/buggy-version/app.src.main.java.com.example.talizorah.githubmobile.UserActivity.java", "BodyUseAPI": [], "Fixed commit": "f605e6edbce21d455d252bd77a930ebe2a19c7e3", "Url": "https://api.github.com/repos/BogdanOros/GitHubPhone", "Date": "2016-05-19T11:45:48Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expr.getExpressionTag()) != (edu.uci.ics.hyracks.algebricks.core.algebra.base.LogicalExpressionTag.FUNCTION_CALL)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7392/buggy-version/asterix-algebra.src.main.java.edu.uci.ics.asterix.optimizer.rules.am.AbstractIntroduceAccessMethodRule.java", "BodyUseAPI": [], "Fixed commit": "8739f3428b07f6c2e10cf1994e1b6346d6fae867", "Url": "https://api.github.com/repos/sjaco002/incubator-asterixdb", "Date": "2015-05-18T22:41:33Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ovgu.featureide.core.CorePlugin.getFeatureProject(org.eclipse.core.resources.IProject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (featureProject == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4480/buggy-version/plugins.de.ovgu.featureide.core.antenna.src.de.ovgu.featureide.antenna.AntennaFMComposerExtension.java", "BodyUseAPI": [], "Fixed commit": "e4bb165c44188a3e00adad3260b9a4e68c8fdb60", "Url": "https://api.github.com/repos/skrieter/FeatureIDE", "Date": "2015-05-06T15:04:35Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((structure.isCrystallographic()) && ((this.crystallographicInfo.getSpaceGroup()) != null)) { this.numOperatorsSg = this.crystallographicInfo.getSpaceGroup().getMultiplicity(); this.isCrystallographic = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5845/buggy-version/biojava3-structure.src.main.java.org.biojava.bio.structure.xtal.CrystalBuilder.java", "BodyUseAPI": [], "Fixed commit": "246a5dcfb90cd5e16631745df4014ff7729e0847", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2015-01-22T15:49:16Z"},
{"Line": "=>1010", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nR.length) == 1) target.setName(rule.getName()); else target.setName(nR[((nR.length) - 1)]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7526/buggy-version/idees.gama.graphicalmodeling.src.idees.gama.diagram.GamaFeatureProvider.java", "BodyUseAPI": ["gama.ERule.setName(java.lang.String)"], "Fixed commit": "38246ed7a875b8cdb9102431f2e3ce58606b6c75", "Url": "https://api.github.com/repos/gama-platform/gama.graphical.modeling", "Date": "2017-03-27T09:01:24Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rows) > 0) { listbox.setRows(rows); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7704/buggy-version/customDatabasePagingListbox.src.main.java.be.chillworld.component.PagingListbox.java", "BodyUseAPI": [], "Fixed commit": "4c8c96be7298f95a193ee6c1fa1ca0440ab95a19", "Url": "https://api.github.com/repos/Jardo-51/custom_database_paging_listbox", "Date": "2017-11-11T11:43:50Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentChallengeBlock) != null) { currentChallengeBlock.challengeBlockState.update(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2152/buggy-version/src.belven.arena.blocks.StandardArenaBlock.java", "BodyUseAPI": [], "Fixed commit": "edb50adfa97eda406e884830c1ab9a01fb47010a", "Url": "https://api.github.com/repos/belven/Arenas", "Date": "2014-08-14T20:55:01Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentChallengeBlock) != null) { currentChallengeBlock.challengeBlockState.update(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2152/buggy-version/src.belven.arena.blocks.TempArenaBlock.java", "BodyUseAPI": [], "Fixed commit": "edb50adfa97eda406e884830c1ab9a01fb47010a", "Url": "https://api.github.com/repos/belven/Arenas", "Date": "2014-08-14T20:55:01Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.smap.smapTask.android.receivers.NetworkReceiver.running)) { org.smap.smapTask.android.receivers.NetworkReceiver.running = true; mContext = context; mDownloadTasks = new org.smap.smapTask.android.tasks.DownloadTasksTask(); mDownloadTasks.setDownloaderListener(this, context); mDownloadTasks.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8/buggy-version/fieldTask.src.main.java.org.smap.smapTask.android.receivers.NetworkReceiver.java", "BodyUseAPI": [], "Fixed commit": "1d72662659374e77d5a80897a8abbfaa19e6c751", "Url": "https://api.github.com/repos/tymiles003/datacollect", "Date": "2014-12-13T04:05:24Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.okhttplib.bean.UploadFileInfo>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(uploadFileInfo.getUrl()))) { this.httpInfo.setUrl(uploadFileInfo.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1753/buggy-version/okhttp3.src.main.java.com.okhttplib.helper.OkHttpHelper.java", "BodyUseAPI": ["com.okhttplib.HttpInfo.setUrl(uploadFileInfo.getUrl())", "com.okhttplib.bean.UploadFileInfo.getUrl()"], "Fixed commit": "b8d487f7372d58fb28a6227930dd08bf4d70f80f", "Url": "https://api.github.com/repos/MrZhousf/OkHttp3", "Date": "2017-10-23T05:09:30Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(downloadFileInfo.getUrl()))) { this.httpInfo.setUrl(downloadFileInfo.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1753/buggy-version/okhttp3.src.main.java.com.okhttplib.helper.OkHttpHelper.java", "BodyUseAPI": ["com.okhttplib.HttpInfo.setUrl(downloadFileInfo.getUrl())", "com.okhttplib.bean.DownloadFileInfo.getUrl()"], "Fixed commit": "b8d487f7372d58fb28a6227930dd08bf4d70f80f", "Url": "https://api.github.com/repos/MrZhousf/OkHttp3", "Date": "2017-10-23T05:09:30Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name == null) || (name.isEmpty())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4836/buggy-version/app.src.main.java.org.theotech.ceaselessandroid.person.PersonManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "cd06b0525f0ed391b330327f82827e91fa4fe220", "Url": "https://api.github.com/repos/ceaseless-prayer/CeaselessAndroid", "Date": "2016-04-05T03:53:18Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) < (map.getList().size())) { this.registerCircle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2647/buggy-version/src.tatakae.game.Game.java", "BodyUseAPI": [], "Fixed commit": "2b152646076ddebe105fd4e663f543c725810b37", "Url": "https://api.github.com/repos/JEPPSER/tatakae", "Date": "2017-07-03T19:30:13Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((verses) == null) { return io.realm.Realm.getDefaultInstance().where(com.bigndesign.light.Model.Verses.class).equalTo(\"chapter.id\", this.getId()).findFirst(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5706/buggy-version/app.src.main.java.com.bigndesign.light.Model.Chapter.java", "BodyUseAPI": [], "Fixed commit": "c72570add073be1bc059be73d8071ebdfe82d773", "Url": "https://api.github.com/repos/calebl/light", "Date": "2017-01-02T21:34:46Z"},
{"Line": "=>821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((results.getString(5)) != null) { gameplay.put(g.GP_FIELD_WIN, results.getBoolean(5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8987/buggy-version/src.main.java.uws.engage.controller.GamePlayController.java", "BodyUseAPI": ["java.sql.ResultSet.getBoolean(int)", "org.json.simple.JSONObject.put(g.GP_FIELD_WIN,boolean)"], "Fixed commit": "6bd9c7cec768c5c0eebe78c36307249cda96c583", "Url": "https://api.github.com/repos/yaelleUWS/engage_ws", "Date": "2015-02-26T12:30:57Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.onepf.openpush.OpenPushHelper.getLastProvider()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(registerProvider(provider))) { saveLastProvider(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8151/buggy-version/library.src.main.java.org.onepf.openpush.OpenPushHelper.java", "BodyUseAPI": [], "Fixed commit": "edafb0b5994e012aaaf7d6a93923d8bfb5bd6f99", "Url": "https://api.github.com/repos/onepf/OpenPush", "Date": "2014-09-11T10:00:04Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInitDone()) { throw new org.onepf.openpush.OpenPushException(\"Try to init OpenPushHelper twice.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8151/buggy-version/library.src.main.java.org.onepf.openpush.OpenPushHelper.java", "BodyUseAPI": [], "Fixed commit": "edafb0b5994e012aaaf7d6a93923d8bfb5bd6f99", "Url": "https://api.github.com/repos/onepf/OpenPush", "Date": "2014-09-11T10:00:04Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (visionFiles != null) { java.util.Arrays.sort(visionFiles, new java.util.Comparator<java.io.File>() { public int compare(java.io.File f1, java.io.File f2) { return java.lang.Long.valueOf(f2.lastModified()).compareTo(f1.lastModified()); } }); for (int i = 0; i < (java.lang.Math.min(visionFiles.length, 10)); i++) { images.add(visionFiles[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7813/buggy-version/src.main.java.org.openpnp.gui.SubmitDiagnosticsDialog.java", "BodyUseAPI": ["java.lang.Math.min(int,int)", "java.util.List<java.io.File>.add(java.io.File)", "java.util.Arrays.sort(java.io.File[],java.util.Comparator<java.io.File>)"], "Fixed commit": "98ecec2ee2eb633fae66669dd5b37150f2c45ac8", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2017-03-22T23:07:17Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<de.fhg.iais.roberta.ast.syntax.action.ActorPort, de.fhg.iais.roberta.ev3.components.EV3Actor>.get(de.fhg.iais.roberta.ast.syntax.action.ActorPort)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(actor.getComponentType().getName().equals(\"robBrick_motor_middle\"))) { actorFields.add(mkField(\"MOTOR_DRIVE\", actor.getMotorSide().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5340/buggy-version/OpenRobertaServer.src.main.java.de.fhg.iais.roberta.ast.transformer.JaxbBrickConfigTransformer.java", "BodyUseAPI": ["actor.getMotorSide().toString()", "java.util.List<de.fhg.iais.roberta.blockly.generated.Field>.add(de.fhg.iais.roberta.blockly.generated.Field)", "de.fhg.iais.roberta.ast.transformer.JaxbBrickConfigTransformer.mkField(java.lang.String,actor.getMotorSide().toString())", "de.fhg.iais.roberta.ev3.components.EV3Actor.getMotorSide()"], "Fixed commit": "9351122f5e73196490cbb6af258795151d46ff93", "Url": "https://api.github.com/repos/opinsys/robertalab", "Date": "2015-05-06T06:24:51Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((distanciaNodosRecords) == null) { distanciaNodosRecords = matrizDistanciaService.getDistanciaNodosByMatriz(selectedMatriz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/550/buggy-version/src.main.java.com.tmModulos.vista.BusquedaMatrizDistanciaView.java", "BodyUseAPI": [], "Fixed commit": "1370949d97b31bf8979bed4b7183f41248da9132", "Url": "https://api.github.com/repos/angynk/tmProject", "Date": "2017-03-23T15:49:15Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((like.type) == 0) || ((like.type) == 2)) { java.lang.String prefix = ldbc.socialnet.dbgen.vocabulary.SN.getPostURI(like.messageId); AddTriple(result, true, false, likePrefix, SNVOC.hasPost, prefix); }else { java.lang.String prefix = ldbc.socialnet.dbgen.vocabulary.SN.getCommentURI(like.messageId); AddTriple(result, true, false, likePrefix, SNVOC.hasComment, prefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8027/buggy-version/ldbc_socialnet_dbgen.src.main.java.ldbc.socialnet.dbgen.serializer.Turtle.java", "BodyUseAPI": ["ldbc.socialnet.dbgen.vocabulary.SN.getCommentURI(like.messageId)", "ldbc.socialnet.dbgen.vocabulary.SN.getPostURI(like.messageId)"], "Fixed commit": "3645f9a281bc9d47c208e1079b8d7d93438cd879", "Url": "https://api.github.com/repos/ldbc/ldbc_socialnet_bm", "Date": "2014-05-22T16:35:48Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((commObject.getGroupAddress()) != null) && (de.konnekting.deviceconfig.utils.Helper.checkValidGa(commObject.getGroupAddress()))) { fireProgressStatusMessage((\"Using commobject: \" + (commObject.getId()))); comObjectList.add(new de.root1.slicknx.konnekting.ComObject(((byte) (commObject.getId())), commObject.getGroupAddress())); }else { fireProgressStatusMessage((\"Skipping commobject with no GA: \" + (commObject.getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1516/buggy-version/src.main.java.de.konnekting.deviceconfig.Program.java", "BodyUseAPI": ["de.konnekting.deviceconfig.Program.fireProgressStatusMessage((\"Skipping commobject with no GA: \" + (commObject.getId())))", "de.konnekting.xml.konnektingdevice.v0.CommObjectConfiguration.getId()", "de.konnekting.xml.konnektingdevice.v0.CommObjectConfiguration.getGroupAddress()", "de.konnekting.deviceconfig.Program.fireProgressStatusMessage((\"Using commobject: \" + (commObject.getId())))", "de.konnekting.xml.konnektingdevice.v0.CommObjectConfiguration.getId()", "java.util.List<de.root1.slicknx.konnekting.ComObject>.add(de.root1.slicknx.konnekting.ComObject)", "de.konnekting.xml.konnektingdevice.v0.CommObjectConfiguration.getId()"], "Fixed commit": "d64bec05bbc6ded2627e0948b658f421f353daa2", "Url": "https://api.github.com/repos/KONNEKTING/KonnektingDeviceConfig", "Date": "2016-02-18T16:54:26Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cc.kave.commons.pointsto.analysis.inclusion.graph.ConstraintGraph.concat(preEdge.getInclusionAnnotation(),succEdge.getInclusionAnnotation())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bothConstructedTerms && (newInclAnnotation instanceof cc.kave.commons.pointsto.analysis.inclusion.annotations.InvocationAnnotation)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2049/buggy-version/exec.exec.pointsto.src.main.java.cc.kave.commons.pointsto.analysis.inclusion.graph.ConstraintGraph.java", "BodyUseAPI": [], "Fixed commit": "de21cb58e20fc99d6ddeda9f7af2252cabe943b5", "Url": "https://api.github.com/repos/stg-tud/kave-java", "Date": "2016-04-26T08:50:57Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(endDate.isBefore(startDate))) { return adherenceService.countOfDosesTakenBetween(patientId, therapyUid, startDate, endDate); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/531/buggy-version/whp-adherence.src.main.java.org.motechproject.whp.adherence.service.WHPAdherenceService.java", "BodyUseAPI": ["org.motechproject.adherence.service.AdherenceService.countOfDosesTakenBetween(java.lang.String,java.lang.String,org.joda.time.LocalDate,org.joda.time.LocalDate)"], "Fixed commit": "0cd5af229294d7fd052b1354c07d072a9b5293f0", "Url": "https://api.github.com/repos/motech/motech-whp", "Date": "2012-07-10T11:36:45Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Game.player.getX()) <= ((Game.WIDTH) / 2)) return; else x = (-(Game.player.getX())) + ((Game.WIDTH) / 2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4128/buggy-version/SideScroller.src.com.joshuacrotts.sidescroller.main.Camera.java", "BodyUseAPI": [], "Fixed commit": "a47bd7b8d17d625c0e62b47064b4364ddd05108e", "Url": "https://api.github.com/repos/JoshuaCrotts/SideScroller", "Date": "2017-01-11T02:56:38Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getGenericSuperclass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(genericSuperType instanceof java.lang.reflect.ParameterizedType)) { return java.lang.Object.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/854/buggy-version/common.src.main.java.io.netty.util.internal.TypeParameterMatcher.java", "BodyUseAPI": [], "Fixed commit": "ed825de4bffe5a6238c750f3fba3a492f9263211", "Url": "https://api.github.com/repos/shantanusharma/netty", "Date": "2013-03-09T00:19:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isSubElement(node.getQualifier().toString()))) uses.add(node.getQualifier().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5473/buggy-version/PESTT.src.domain.explorer.DefUsesStatementVisitor.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(node.getQualifier().toString())", "org.eclipse.jdt.core.dom.QualifiedName.getQualifier()", "node.getQualifier().toString()"], "Fixed commit": "010372d8f1e08c976afd873249d052d7e60575e6", "Url": "https://api.github.com/repos/pestt/PESTT", "Date": "2012-06-25T17:16:38Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == (this)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5352/buggy-version/src.main.java.ru.argos.springMVC.model.Categorie.java", "BodyUseAPI": [], "Fixed commit": "f3c5395fe6374fdaff1675bd931184902be25ac3", "Url": "https://api.github.com/repos/titsi/argos", "Date": "2017-03-18T09:22:45Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((other.getClass()) != (this.getClass())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5352/buggy-version/src.main.java.ru.argos.springMVC.model.Categorie.java", "BodyUseAPI": [], "Fixed commit": "f3c5395fe6374fdaff1675bd931184902be25ac3", "Url": "https://api.github.com/repos/titsi/argos", "Date": "2017-03-18T09:22:45Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5352/buggy-version/src.main.java.ru.argos.springMVC.model.Categorie.java", "BodyUseAPI": [], "Fixed commit": "f3c5395fe6374fdaff1675bd931184902be25ac3", "Url": "https://api.github.com/repos/titsi/argos", "Date": "2017-03-18T09:22:45Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((constraintsCopy.size()) > constraintsSize) { constraintsCopy.subList(constraintsSize, constraintsCopy.size()).clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6204/buggy-version/src.apps.phd.MultiCostDrainLogic.java", "BodyUseAPI": ["java.util.List<java.lang.Double>.subList(int,int)", "java.util.List<java.lang.Double>.size()", "java.util.List<java.lang.Double>.clear()"], "Fixed commit": "eae0ac60e6fd7ab7fa10e9cc755e3405cada2af6", "Url": "https://api.github.com/repos/k-stachowiak/jmcritmcast", "Date": "2015-03-08T17:15:56Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(obj instanceof model.data.value.DataValue)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8605/buggy-version/src.main.java.model.data.value.DataValue.java", "BodyUseAPI": [], "Fixed commit": "3c268f7a1a6f7c7309e744147ca1b3e595c5824a", "Url": "https://api.github.com/repos/clanghout/Health-Informatics-3", "Date": "2015-06-09T20:34:59Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null != polygon) { this.polygon.fillSegmentsIds(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5480/buggy-version/src.main.java.net.epsilony.mf.model.Model2D.java", "BodyUseAPI": [], "Fixed commit": "d782ad65882f2f499551f4e2627dea7d7a6f8b6c", "Url": "https://api.github.com/repos/epsilony/mf", "Date": "2013-07-14T09:08:56Z"},
{"Line": "=>939", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (kaijin.InventoryStocker.Utils.isClient(worldObj)) { boolean isPowered = worldObj.isBlockIndirectlyGettingPowered(xCoord, yCoord, zCoord); if ((!isPowered) && (previousPoweredState)) { previousPoweredState = false; int meta = worldObj.getBlockMetadata(xCoord, yCoord, zCoord); meta &= 7; worldObj.setBlockMetadataWithNotify(xCoord, yCoord, zCoord, meta); worldObj.markBlockAsNeedsUpdate(xCoord, yCoord, zCoord); } if (isPowered && (!(previousPoweredState))) { previousPoweredState = true; int meta = worldObj.getBlockMetadata(xCoord, yCoord, zCoord); meta |= 8; worldObj.setBlockMetadataWithNotify(xCoord, yCoord, zCoord, meta); worldObj.markBlockAsNeedsUpdate(xCoord, yCoord, zCoord); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3379/buggy-version/src.minecraft.kaijin.InventoryStocker.TileEntityInventoryStocker.java", "BodyUseAPI": ["kaijin.InventoryStocker.TileEntityInventoryStocker.setBlockMetadataWithNotify(kaijin.InventoryStocker.TileEntityInventoryStocker,kaijin.InventoryStocker.TileEntityInventoryStocker,kaijin.InventoryStocker.TileEntityInventoryStocker,int)", "kaijin.InventoryStocker.TileEntityInventoryStocker.getBlockMetadata(kaijin.InventoryStocker.TileEntityInventoryStocker,kaijin.InventoryStocker.TileEntityInventoryStocker,kaijin.InventoryStocker.TileEntityInventoryStocker)", "kaijin.InventoryStocker.TileEntityInventoryStocker.markBlockAsNeedsUpdate(kaijin.InventoryStocker.TileEntityInventoryStocker,kaijin.InventoryStocker.TileEntityInventoryStocker,kaijin.InventoryStocker.TileEntityInventoryStocker)", "kaijin.InventoryStocker.TileEntityInventoryStocker.getBlockMetadata(kaijin.InventoryStocker.TileEntityInventoryStocker,kaijin.InventoryStocker.TileEntityInventoryStocker,kaijin.InventoryStocker.TileEntityInventoryStocker)", "kaijin.InventoryStocker.TileEntityInventoryStocker.isBlockIndirectlyGettingPowered(kaijin.InventoryStocker.TileEntityInventoryStocker,kaijin.InventoryStocker.TileEntityInventoryStocker,kaijin.InventoryStocker.TileEntityInventoryStocker)", "kaijin.InventoryStocker.TileEntityInventoryStocker.markBlockAsNeedsUpdate(kaijin.InventoryStocker.TileEntityInventoryStocker,kaijin.InventoryStocker.TileEntityInventoryStocker,kaijin.InventoryStocker.TileEntityInventoryStocker)", "kaijin.InventoryStocker.TileEntityInventoryStocker.setBlockMetadataWithNotify(kaijin.InventoryStocker.TileEntityInventoryStocker,kaijin.InventoryStocker.TileEntityInventoryStocker,kaijin.InventoryStocker.TileEntityInventoryStocker,int)"], "Fixed commit": "de38fa2a99798c046312fdda7bc5e72a22b05c7c", "Url": "https://api.github.com/repos/Tallinu/InventoryStocker", "Date": "2012-05-12T16:50:30Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.chrisrm.idea.icons.Associations.isClass(\"com.intellij.psi.PsiClass\")) { xStream.alias(\"psi\", com.chrisrm.idea.icons.PsiElementAssociation.class); }else { xStream.alias(\"psi\", com.chrisrm.idea.icons.TypeAssociation.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1844/buggy-version/src.com.chrisrm.idea.icons.Associations.java", "BodyUseAPI": [], "Fixed commit": "b920a6e40c536a78b277806b23e6a845b5644951", "Url": "https://api.github.com/repos/ChrisRM/material-theme-jetbrains", "Date": "2016-04-13T19:57:55Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.chrisrm.idea.icons.Associations.isClass(\"com.intellij.psi.PsiClass\")) { xStream.useAttributeFor(com.chrisrm.idea.icons.PsiElementAssociation.class, \"type\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1844/buggy-version/src.com.chrisrm.idea.icons.Associations.java", "BodyUseAPI": [], "Fixed commit": "b920a6e40c536a78b277806b23e6a845b5644951", "Url": "https://api.github.com/repos/ChrisRM/material-theme-jetbrains", "Date": "2016-04-13T19:57:55Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((page.getErrorCode()) != null) && (!(page.getErrorCode().isEmpty()))) { errorPage = new io.undertow.servlet.api.ErrorPage(page.getLocation(), java.lang.Integer.parseInt(page.getErrorCode())); }else { errorPage = new io.undertow.servlet.api.ErrorPage(page.getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/347/buggy-version/undertow.src.main.java.org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService.java", "BodyUseAPI": ["org.jboss.metadata.web.spec.ErrorPageMetaData.getLocation()", "java.lang.Integer.parseInt(page.getErrorCode())", "org.jboss.metadata.web.spec.ErrorPageMetaData.getLocation()", "org.jboss.metadata.web.spec.ErrorPageMetaData.getErrorCode()"], "Fixed commit": "dbd0484e574c5ad59f17b22cea54acb0f353b9ac", "Url": "https://api.github.com/repos/pferraro/wildfly", "Date": "2013-05-29T03:14:28Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (rowKey == null) { rowKey = range.getFirstRow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9083/buggy-version/components.rich.src.main.java.org.richfaces.renderkit.SelectionRenderer.java", "BodyUseAPI": [], "Fixed commit": "d581eb62bc17da051daec6acbd0f430dc318dd55", "Url": "https://api.github.com/repos/richfaces/richfaces", "Date": "2014-12-18T10:58:00Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checkSelfPermission(android.Manifest.permission.READ_EXTERNAL_STORAGE)) != (PackageManager.PERMISSION_GRANTED)) { if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.LOLLIPOP_MR1)) { java.lang.String[] perms = new java.lang.String[]{ \"android.permission.READ_EXTERNAL_STORAGE\" }; requestPermissions(perms, 200); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7466/buggy-version/app.src.main.java.sid.comslav.com.circleofmusic.ListFileActivity.java", "BodyUseAPI": [], "Fixed commit": "8f1fdc616cd9b4c4a719a07d61c7242c96c0ed02", "Url": "https://api.github.com/repos/Circle-Of-Music-Makers/com-android", "Date": "2016-05-27T19:17:05Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.jotschi.jxattr.XAttr.getAttributeSize(java.io.File,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (expectedLenght <= 0) { throw new java.io.IOException(((((\"The attribute {\" + key) + \"} contains no data for file {\") + (file.getAbsolutePath())) + \"}\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5741/buggy-version/src.main.java.de.jotschi.jxattr.XAttr.java", "BodyUseAPI": [], "Fixed commit": "52c8caaf2873d5c06609b22e95a1c8a1b8471f64", "Url": "https://api.github.com/repos/Jotschi/jxattr", "Date": "2012-10-07T12:43:58Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.internal.compiler.impl.CompilerOptions.versionToJdkLevel(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (jdkLevel < (org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants.JDK1_6)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1557/buggy-version/org.eclipse.jdt.compiler.tool.src.org.eclipse.jdt.internal.compiler.tool.EclipseFileManager.java", "BodyUseAPI": [], "Fixed commit": "b6effce92f2016bd6463646b18f417214714aa52", "Url": "https://api.github.com/repos/Overruler/eclipse.jdt.core", "Date": "2013-04-09T09:21:51Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.internal.compiler.impl.CompilerOptions.versionToJdkLevel(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (jdkLevel < (org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants.JDK1_6)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1557/buggy-version/org.eclipse.jdt.compiler.apt.src.org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager.java", "BodyUseAPI": [], "Fixed commit": "b6effce92f2016bd6463646b18f417214714aa52", "Url": "https://api.github.com/repos/Overruler/eclipse.jdt.core", "Date": "2013-04-09T09:21:51Z"},
{"Line": "=>926", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.concord.energy3d.scene.Scene.getInstance().getAlwaysComputeHeatFluxVectors()) { part.drawHeatFlux(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2960/buggy-version/src.main.java.org.concord.energy3d.simulation.SolarRadiation.java", "BodyUseAPI": [], "Fixed commit": "cf719c6e6817a5f2d37e797a15bc3cf926fe18cd", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2016-09-20T00:50:12Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allkey.contains(\":,\")) || (allkey.contains(\":}\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4786/buggy-version/TocFinal.java", "BodyUseAPI": [], "Fixed commit": "da7138ebc04a20756b6490a2b7cca0a61b433096", "Url": "https://api.github.com/repos/Mouther/TOC_Final", "Date": "2014-07-03T12:40:52Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allkey.contains(\":,\")) || (allkey.contains(\":}\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4786/buggy-version/TocFinal.java", "BodyUseAPI": [], "Fixed commit": "da7138ebc04a20756b6490a2b7cca0a61b433096", "Url": "https://api.github.com/repos/Mouther/TOC_Final", "Date": "2014-07-03T12:40:52Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allkey.contains(\":,\")) || (allkey.contains(\":}\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4786/buggy-version/TocFinal.java", "BodyUseAPI": [], "Fixed commit": "da7138ebc04a20756b6490a2b7cca0a61b433096", "Url": "https://api.github.com/repos/Mouther/TOC_Final", "Date": "2014-07-03T12:40:52Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (input.equals(\"Sample\")) { java.lang.System.out.println(\"More supplies needed.\"); }else if (input.equals(\"David\")) { java.lang.System.out.println(\"More supplies needed.\"); }else { try { if ((java.lang.Double.valueOf(input)) >= 0) { currentMoney += java.lang.Double.valueOf(input); }else { java.lang.System.out.println(\"Please enter positive number.\"); } } catch (java.lang.Exception e) { java.lang.System.out.println(\"Error: Invalid Input\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5194/buggy-version/src.VendingMachine.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "f116db87a1a45d0e0d1e47690215641b85e848e2", "Url": "https://api.github.com/repos/VitruvianBots/JavaTraining", "Date": "2017-06-22T01:22:31Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((componentRegistry.workerCount()) > 0) { com.hazelcast.simulator.protocol.registry.WorkerData firstWorker = componentRegistry.getFirstWorker(); com.hazelcast.simulator.coordinator.Coordinator.LOGGER.info(java.lang.String.format(\"Worker for global test phases will be %s (%s)\", firstWorker.getAddress(), firstWorker.getSettings().getWorkerType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6428/buggy-version/simulator.src.main.java.com.hazelcast.simulator.coordinator.Coordinator.java", "BodyUseAPI": ["com.hazelcast.simulator.protocol.registry.ComponentRegistry.getFirstWorker()"], "Fixed commit": "58c8650acc7a9a11763f9b3ac15fa06b9d73e89e", "Url": "https://api.github.com/repos/hazelcast/hazelcast-simulator", "Date": "2016-01-11T10:52:46Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mTagList)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4563/buggy-version/moduleCommunication.android.Communication.communicationlibrary.src.main.java.com.kjs.skywalk.communicationlibrary.ResHousePublicBriefInfo.java", "BodyUseAPI": [], "Fixed commit": "43084e95be922bb006a4a1bcaaeefb63cd8357c8", "Url": "https://api.github.com/repos/KennyHuangChina/Skywalk", "Date": "2017-06-04T08:50:49Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mTagList)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4563/buggy-version/moduleCommunication.android.Communication.communicationlibrary.src.main.java.com.kjs.skywalk.communicationlibrary.ResHousePublicBriefInfo.java", "BodyUseAPI": [], "Fixed commit": "43084e95be922bb006a4a1bcaaeefb63cd8357c8", "Url": "https://api.github.com/repos/KennyHuangChina/Skywalk", "Date": "2017-06-04T08:50:49Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mTagList)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4563/buggy-version/moduleCommunication.android.Communication.communicationlibrary.src.main.java.com.kjs.skywalk.communicationlibrary.ResHousePublicBriefInfo.java", "BodyUseAPI": [], "Fixed commit": "43084e95be922bb006a4a1bcaaeefb63cd8357c8", "Url": "https://api.github.com/repos/KennyHuangChina/Skywalk", "Date": "2017-06-04T08:50:49Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preferred == null) { for (org.lwjgl.opengl.DisplayMode mode : modes) { java.lang.String supportedMode = ((mode.getWidth()) + \"x\") + (mode.getHeight()); if (supportedMode.equals(preferredRes)) { preferred = mode; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1237/buggy-version/src.antonafanasjew.cosmodog.CosmodogStarter.java", "BodyUseAPI": [], "Fixed commit": "6977f016cf7aaf1648b7563da6b7e52c34a1e25a", "Url": "https://api.github.com/repos/armitage81/cosmodog", "Date": "2017-09-29T15:03:12Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (joshua.decoder.chart_parser.Chart.logger.isLoggable(java.util.logging.Level.FINE)) joshua.decoder.chart_parser.Chart.logger.finest((\"Allowing label: \" + (symbolTable.getWord(l))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7558/buggy-version/src.joshua.decoder.chart_parser.Chart.java", "BodyUseAPI": ["java.util.logging.Logger.finest((\"Allowing label: \" + (symbolTable.getWord(l))))"], "Fixed commit": "e828383c7a3fbf53fdd16541efc0f5e62cf00144", "Url": "https://api.github.com/repos/jganitkevitch/joshua", "Date": "2011-03-02T23:12:03Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectInputStream.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (object instanceof ua.com.korniichuk.client.Account) { UI.holder.add(((ua.com.korniichuk.client.Account) (object)).getExistingNickName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1905/buggy-version/src.main.java.ua.com.korniichuk.client.Listener.java", "BodyUseAPI": [], "Fixed commit": "9689e1c79474da2050a54903a3c1bea4755900c5", "Url": "https://api.github.com/repos/SayidJarrah/ChatClient", "Date": "2016-02-11T20:05:52Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (len > 1) { sb.append(c); }else { sb.append(java.lang.Character.toLowerCase(c)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8212/buggy-version/play-jnc.src.main.java.com.tailf.jnc.YangElement.java", "BodyUseAPI": [], "Fixed commit": "8b0f922e91ecbebae36871898f850701db2c11b0", "Url": "https://api.github.com/repos/airshiplay/play-yang", "Date": "2017-10-13T05:31:01Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (json == null) { android.util.Log.d(\"DialogRequest\", \"json == null\"); android.widget.Toast.makeText(app, \"json == null\", Toast.LENGTH_SHORT).show(); }else { android.util.Log.d(\"DialogRequest\", (\"\" + (json.toString()))); android.widget.Toast.makeText(app, (\"\" + (json.toString())), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1235/buggy-version/src.com.mercandalli.jarvis.DialogRequest.java", "BodyUseAPI": ["android.widget.Toast.makeText(com.mercandalli.jarvis.Application,(\"\" + (json.toString())),Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(app, (\"\" + (json.toString())), Toast.LENGTH_SHORT).show()", "org.json.JSONObject.toString()", "org.json.JSONObject.toString()", "android.util.Log.d(java.lang.String,(\"\" + (json.toString())))"], "Fixed commit": "eb23e8ca531de9bbc50fb2a642ca95bcadf7ed3e", "Url": "https://api.github.com/repos/Mercandj/Jarvis", "Date": "2014-10-29T23:49:47Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((lynch_string.equals(\"NULL\")) == false) { imported_character.vote(GameEngine.Player.get(lynch_string)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7735/buggy-version/src.GameEngine.DatabaseManager.java", "BodyUseAPI": ["GameEngine.Player.get(java.lang.String)", "java.lang.Character.vote(GameEngine.Player.get(lynch_string))"], "Fixed commit": "2603dc5927b089672e4c153af924f5f86114fdc5", "Url": "https://api.github.com/repos/mobcore/mafia-game", "Date": "2015-06-09T06:35:32Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listIaPlanets.size()) > 0) { int planetSelected = rand.nextInt(listIaPlanets.size()); int planetObjectiveSelected = rand.nextInt(simpleUIApp.Planet.allPlanets.size()); while ((listIaPlanets.get(planetSelected)) == (simpleUIApp.Planet.allPlanets.get(planetObjectiveSelected))) planetObjectiveSelected = rand.nextInt(simpleUIApp.Planet.allPlanets.size()); listIaPlanets.get(planetSelected).setObjective(simpleUIApp.Planet.allPlanets.get(planetObjectiveSelected)); listIaPlanets.get(planetSelected).generateShips(simpleUIApp.Planet.allPlanets.get(planetObjectiveSelected), \"UNKNOWN\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8527/buggy-version/src.simpleUIApp.Planet.java", "BodyUseAPI": ["java.util.ArrayList<simpleUIApp.Planet>.get(int)", "simpleUIApp.Planet.generateShips(simpleUIApp.Planet,java.lang.String)", "java.util.ArrayList<simpleUIApp.Planet>.size()", "java.util.ArrayList<simpleUIApp.Planet>.get(int)", "simpleUIApp.Planet.setObjective(simpleUIApp.Planet)", "java.util.Random.nextInt(int)", "java.util.ArrayList<simpleUIApp.Planet>.get(int)"], "Fixed commit": "1f15889032a1d5a31928965e866df93e2016a9ce", "Url": "https://api.github.com/repos/fmorel002/Project_POO", "Date": "2017-11-26T16:43:15Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileValid) synchronized(pnlFileDetail.getTreeLock()) { silver.starbound.ui.ModWindow.setEnabledRecursively(pnlFileDetail, fileValid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9181/buggy-version/src.silver.starbound.ui.ModWindow.java", "BodyUseAPI": ["silver.starbound.ui.ModWindow.setEnabledRecursively(javax.swing.JPanel,boolean)"], "Fixed commit": "00ad0b5a9ed5876161e998e488e4fad30622d78f", "Url": "https://api.github.com/repos/SilverFishCat/SBModMake", "Date": "2015-05-29T19:15:36Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!fileValid) synchronized(pnlFileDetail.getTreeLock()) { silver.starbound.ui.ModWindow.setEnabledRecursively(pnlFileDetail, fileValid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9181/buggy-version/src.silver.starbound.ui.ModWindow.java", "BodyUseAPI": ["silver.starbound.ui.ModWindow.setEnabledRecursively(javax.swing.JPanel,boolean)"], "Fixed commit": "00ad0b5a9ed5876161e998e488e4fad30622d78f", "Url": "https://api.github.com/repos/SilverFishCat/SBModMake", "Date": "2015-05-29T19:15:36Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((receiver) != null) { unregisterReceiver(receiver); receiver = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9273/buggy-version/app.src.main.java.br.ufrn.imd.smartparkingapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f48b068b5fdd18eb4d82e4f682507e5ed35a573e", "Url": "https://api.github.com/repos/andretads/SmartParkingApp", "Date": "2016-08-23T11:52:54Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tcpMessage instanceof Messages.DeclineConnectMessage) && (tcpMessage.getCorrect())) { try { tcp.close(); } catch (java.io.IOException e) { } java.lang.System.out.println(\"Other client declined to chat.\\nDisconnecting\"); return new States.Disconnected(); }else { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6241/buggy-version/Chat.src.States.MidhandshakeClient.java", "BodyUseAPI": [], "Fixed commit": "5f7b44bb48c81129e226a5e03bd488272484e508", "Url": "https://api.github.com/repos/ragnarok089/CS544", "Date": "2013-06-08T02:19:33Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.diamond.scisoft.analysis.io.SliceObject.getAxes()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (da != null) { aa = new java.util.ArrayList<uk.ac.diamond.scisoft.analysis.dataset.AbstractDataset>(2); for (uk.ac.diamond.scisoft.analysis.dataset.IDataset ia : da) aa.add(((uk.ac.diamond.scisoft.analysis.dataset.AbstractDataset) (ia))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3931/buggy-version/uk.ac.diamond.scisoft.deprecated.rcp.src.uk.ac.diamond.scisoft.analysis.rcp.views.nexus.SliceUtils.java", "BodyUseAPI": [], "Fixed commit": "591a300b612b60569335b6468d8cef8b543c839b", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2013-09-09T08:09:29Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!getTouch) savePos.set((((float) (java.lang.Math.sin(angle))) * ((position.x) - (touchPos.x))), (((float) (java.lang.Math.cos(angle))) * ((position.y) - (touchPos.y))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6913/buggy-version/core.src.com.indygame.Objects.Platform.java", "BodyUseAPI": [], "Fixed commit": "4b353f66a4fe16fd76ddc2a34a0bf5990c31ee89", "Url": "https://api.github.com/repos/payvint/IndyGame", "Date": "2016-10-30T16:37:42Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((su) != null) if (su.isDead()) su = null; else su.update();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5838/buggy-version/app.src.main.java.capprotectors.saveyourcap.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "dbbf2f622affd1eb636dc6fcbaa344f77eebd419", "Url": "https://api.github.com/repos/NgoKimPhu/SaveYourCAP_Android", "Date": "2015-06-28T16:10:30Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parents.size()) > 0) { parents.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8805/buggy-version/nuxeo-quota-core.src.main.java.org.nuxeo.ecm.quota.QuotaStatsServiceImpl.java", "BodyUseAPI": ["java.util.List<org.nuxeo.ecm.core.api.DocumentModel>.remove(int)"], "Fixed commit": "dc77df91a6b267ed502c8e57775d2afb57d4b7ef", "Url": "https://api.github.com/repos/nuxeo/nuxeo-quota", "Date": "2013-02-18T10:03:57Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (apks != null) { for (java.io.File apk : apks) { com.lbz.android.myappplay.commom.apkparset.AndroidApk androidApk = com.lbz.android.myappplay.commom.apkparset.AndroidApk.read(mContext, apk.getPath()); if (androidApk != null) { androidApks.add(androidApk); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3838/buggy-version/app.src.main.java.com.lbz.android.myappplay.data.AppManagerModel.java", "BodyUseAPI": [], "Fixed commit": "479bd6ae54f41a1c8d0270fb3a555ef4a3fb6600", "Url": "https://api.github.com/repos/laibinzhi/MyAppPlay", "Date": "2017-10-27T02:53:53Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)", "org.bukkit.event.player.PlayerCommandPreprocessEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((un.purges.get(player.getName()).equals(\"1\")) && ((args.length) == 2)) { org.tritania.unicus.utils.Message.info(player, \"Please pick your new main home with /pick [homename]\"); org.tritania.unicus.utils.Message.info(player, \"The others will be locked as your rank has fallen\"); org.tritania.unicus.utils.Message.info(player, \"To unlock them again simply donate\"); event.setCancelled(true); }else if (((args.length) == 2) && (args[1].equals(un.purges.get(player.getName())))) { }else { event.setCancelled(true); org.tritania.unicus.utils.Message.info(player, \"That home is locked!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2524/buggy-version/src.main.java.org.tritania.unicus.PlayerListener.java", "BodyUseAPI": ["java.lang.String.equals(un.purges.get(player.getName()))", "org.tritania.unicus.utils.Message.info(org.bukkit.entity.Player,java.lang.String)", "org.bukkit.entity.Player.getName()", "org.tritania.unicus.utils.Message.info(org.bukkit.entity.Player,java.lang.String)", "org.tritania.unicus.utils.Message.info(org.bukkit.entity.Player,java.lang.String)", "org.tritania.unicus.utils.Message.info(org.bukkit.entity.Player,java.lang.String)", "un.purges.get(player.getName())"], "Fixed commit": "71e00b3c16c1509c6f515f7a90a2c8fd9588f12d", "Url": "https://api.github.com/repos/tritania/Unicus", "Date": "2014-07-22T16:58:55Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["netmash.forest.ObjectMash.contentList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ll == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3502/buggy-version/src.netmash.forest.ObjectMash.java", "BodyUseAPI": [], "Fixed commit": "15d38f8cbf0e2b6cd014ee855300e789976687bb", "Url": "https://api.github.com/repos/DuncanCragg/NetMash", "Date": "2012-11-28T21:55:48Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.handler.codec.http.HttpResponse.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (status == null) { status = org.jboss.netty.handler.codec.http.HttpResponseStatus.TEMPORARY_REDIRECT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3656/buggy-version/netty.src.main.java.xingu.netty.http.HttpResponseBuilder.java", "BodyUseAPI": [], "Fixed commit": "6672793810991119a60726f423ca91fa57b73592", "Url": "https://api.github.com/repos/leandrocruz/Xingu", "Date": "2012-08-21T02:46:40Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getMessage().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (message.startsWith(com.google.sitebricks.mail.MailClientHandler.CAPABILITY_PREFIX)) { this.capabilities = java.util.Arrays.asList(message.substring(((com.google.sitebricks.mail.MailClientHandler.CAPABILITY_PREFIX.length()) + 1)).split(\"[ ]+\")); return; }else if (com.google.sitebricks.mail.MailClientHandler.AUTH_SUCCESS_REGEX.matcher(message).matches()) { com.google.sitebricks.mail.MailClientHandler.log.info(\"Authentication success for user {}\", config.getUsername()); loginSuccess.countDown(); }else { java.util.regex.Matcher matcher = com.google.sitebricks.mail.MailClientHandler.COMMAND_FAILED_REGEX.matcher(message); if (matcher.find()) { com.google.sitebricks.mail.MailClientHandler.log.warn(\"Authentication failed for {} due to: {}\", config.getUsername(), message); errorStack.push(new com.google.sitebricks.mail.MailClientHandler.Error(null, extractError(matcher), wireTrace)); disconnectAbnormally(message); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3632/buggy-version/sitebricks-mail.src.main.java.com.google.sitebricks.mail.MailClientHandler.java", "BodyUseAPI": ["java.lang.String.substring(int)", "org.slf4j.Logger.warn(java.lang.String,config.getUsername(),java.lang.String)", "java.lang.String.length()", "com.google.sitebricks.mail.MailClientHandler.disconnectAbnormally(java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.util.Arrays.asList(java.lang.String[])", "java.util.regex.Matcher.matches()"], "Fixed commit": "ccc77051c3edd143f9cfb646d4f8366c997ff389", "Url": "https://api.github.com/repos/dhanji/sitebricks", "Date": "2011-11-14T01:41:42Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHeader.headerSize) > 12) { byte[] byteToSkip = new byte[(mHeader.headerSize) - 12]; mIn.readFully(byteToSkip); brut.androlib.res.decoder.ARSCDecoder.LOGGER.info((\"Skip extra head size: \" + (byteToSkip.length))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7793/buggy-version/brut.apktool.apktool-lib.src.main.java.brut.androlib.res.decoder.ARSCDecoder.java", "BodyUseAPI": [], "Fixed commit": "5e0e7b2eb2c4b53862a9539c12cc2f7adefa9636", "Url": "https://api.github.com/repos/sanli/Apktool", "Date": "2016-07-26T07:18:20Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workplace2 && (org.opencms.util.CmsStringUtil.isEmptyOrWhitespaceOnly(fragment))) && (CmsWorkplace.FILE_EXPLORER_FILELIST.equals(settings.getUserSettings().getStartView()))) { fragment = org.opencms.ui.apps.CmsFileExplorerConfiguration.APP_ID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/46/buggy-version/src.org.opencms.ui.login.CmsLoginController.java", "BodyUseAPI": [], "Fixed commit": "10fae486cd7c33ae86483a9a47e89d369b03bb0c", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2016-02-26T15:37:48Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((timeoutTasks.remove(ts)) != null) { addReady(ts); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9093/buggy-version/seep-system.src.main.java.uk.ac.imperial.lsds.seep.runtimeengine.OutOfOrderBufferedBarrier.java", "BodyUseAPI": ["uk.ac.imperial.lsds.seep.runtimeengine.OutOfOrderBufferedBarrier.BarrierTimeoutMonitor.1.addReady(long)"], "Fixed commit": "13bbdea169fcc6f837e0be18517b9f3facbcbc9b", "Url": "https://api.github.com/repos/lsds/SEEP", "Date": "2015-07-27T18:56:40Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (disconfCenterFile.isTaggedWithNonAnnotationFile()) { existCenterFile.setIsTaggedWithNonAnnotationFile(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5341/buggy-version/disconf-client.src.main.java.com.baidu.disconf.client.store.inner.DisconfCenterStore.java", "BodyUseAPI": [], "Fixed commit": "d725b855025d97ed2eb5c92b3d628bb90fcc3dd7", "Url": "https://api.github.com/repos/knightliao/disconf", "Date": "2016-06-27T09:07:28Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nextAnimations.size()) >= 6) { nextAnimations.get(5).setShouldStartOver(false); nextAnimations.get(5).setLooped(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3928/buggy-version/src.com.p3k.magictale.engine.graphics.ResourceManager.java", "BodyUseAPI": ["java.util.ArrayList<com.p3k.magictale.engine.graphics.ServerAnimation>.get(int)", "nextAnimations.get(5).setLooped(boolean)", "nextAnimations.get(5).setShouldStartOver(boolean)", "java.util.ArrayList<com.p3k.magictale.engine.graphics.ServerAnimation>.get(int)"], "Fixed commit": "9a8bb6746b041e673b273da7e9511478bb44fa54", "Url": "https://api.github.com/repos/ArtemPopof/MagicTaleOnline", "Date": "2017-01-16T18:56:26Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["page.getModel().getDefaultShowlet()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == defaultShowlets) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5736/buggy-version/src.main.java.com.agiletec.apsadmin.portal.PageAction.java", "BodyUseAPI": [], "Fixed commit": "03097432a7cebf6dccd5c894063cc5338d3dbda1", "Url": "https://api.github.com/repos/entando/entando-core-engine", "Date": "2013-02-17T10:07:43Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIABCategory()) != null) { org.json.JSONArray catJsonArray = new org.json.JSONArray(); java.lang.String[] appCategories = getIABCategory().split(\",\"); if ((appCategories != null) && ((appCategories.length) > 0)) { for (int i = 0; i < (appCategories.length); i++) catJsonArray.put(appCategories[i]); } appJsonObject.put(\"cat\", catJsonArray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7290/buggy-version/PubMatic-Android-SDK.header-bidding.src.main.java.com.pubmatic.sdk.headerbidding.PubMaticBannerPrefetchRequest.java", "BodyUseAPI": [], "Fixed commit": "c952b620f8c28da25b96eb6c52c882e53ddc7567", "Url": "https://api.github.com/repos/PubMatic/pubmatic-sdk-android", "Date": "2016-10-21T12:54:03Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (builder.boardConfig.get(i, j).isTileOccupied()) { if ((builder.boardConfig.get(i, j).getPiece().getPieceAllegiance()) == alliance) { pieceList.add(builder.boardConfig.get(i, j).getPiece()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2670/buggy-version/src.main.java.org.chessgameai.board.Board.java", "BodyUseAPI": ["java.util.List<org.chessgameai.Piece>.add(builder.boardConfig.get(i, j).getPiece())", "com.google.common.collect.Table<java.lang.Integer, java.lang.Integer, org.chessgameai.board.Tile>.get(int,int)", "builder.boardConfig.get(i, j).getPiece()", "com.google.common.collect.Table<java.lang.Integer, java.lang.Integer, org.chessgameai.board.Tile>.get(int,int)", "builder.boardConfig.get(i, j).getPiece().getPieceAllegiance()", "builder.boardConfig.get(i, j).getPiece()"], "Fixed commit": "dae58539dad3dae20262a3ab25945e94eccd1ede", "Url": "https://api.github.com/repos/TheoWolf/ChessGameAI", "Date": "2017-12-27T02:53:03Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.channels.FileChannel.tryLock()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (baseDirFileLock == null) { java.lang.Thread.sleep(1000); baseDirFileLock = baseDirLockFile.getChannel().tryLock(); if (baseDirFileLock == null) { throw new org.glowroot.agent.fat.init.DataDirLocking.BaseDirLockedException(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6706/buggy-version/agent-parent.agent.src.main.java.org.glowroot.agent.fat.init.DataDirLocking.java", "BodyUseAPI": [], "Fixed commit": "8e0947ad04587327f064a0adbe5ed76a147a818b", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2016-08-20T23:26:22Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stack.getItemDamage()) >= 20) { stack = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/29/buggy-version/src.com.teammetallurgy.atum.items.artifacts.ItemAnubisMercy.java", "BodyUseAPI": [], "Fixed commit": "fe56d869c72523b070128e1a1742804aa979ded6", "Url": "https://api.github.com/repos/TeamMetallurgy/Atum", "Date": "2014-03-14T23:04:36Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isHavingType.equals(\"anchor\")) && (!(ismap))) { addNewMessage(anchorValue, false, false, isPieChart, isSearchResult, datumList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7316/buggy-version/app.src.main.java.org.fossasia.susi.ai.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a3e936ee7f5809a62e16960bd0d5daec34b33cee", "Url": "https://api.github.com/repos/samsruti/susi_android", "Date": "2016-12-11T07:38:50Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { return (bitmap.getByteCount()) / 1024; }else { return (bitmap.getRowBytes()) * (bitmap.getHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3519/buggy-version/src.org.redPanda.ChannelList.FlActivity.java", "BodyUseAPI": [], "Fixed commit": "86c38d988f1fe9d89e3e0416d3bae6019177c757", "Url": "https://api.github.com/repos/redPanda-project/android", "Date": "2014-04-24T18:32:06Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mCurrentSelectPayWay))) { com.xgf.winecome.network.logic.OrderLogic.setPayWay(mContext, mHandler, com.xgf.winecome.utils.OrderManager.getsCurrentOrderId(), mCurrentSelectPayWay); }else { android.widget.Toast.makeText(mContext, getString(R.string.pay_way_hint), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5085/buggy-version/src.com.xgf.winecome.ui.activity.PayActivity.java", "BodyUseAPI": ["com.xgf.winecome.network.logic.OrderLogic.setPayWay(android.content.Context,android.os.Handler,com.xgf.winecome.utils.OrderManager.getsCurrentOrderId(),java.lang.String)"], "Fixed commit": "1b1169d8b69b06fe687f22407802d974164aaf7f", "Url": "https://api.github.com/repos/xiguofeng/WineCome", "Date": "2015-08-17T02:18:11Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((orderItem.getId()) == 0) { orderItemDAO.add(orderItem); }else { int count = orderItemDAO.updateOrderId(orderItem); if (count != 1) { throw new java.lang.RuntimeException(\"error\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5240/buggy-version/src.main.java.com.warframe.mytmall.service.impl.OrderServiceImpl.java", "BodyUseAPI": ["com.warframe.mytmall.dao.OrderItemDAO.add(com.warframe.mytmall.pojo.OrderItem)", "com.warframe.mytmall.dao.OrderItemDAO.updateOrderId(com.warframe.mytmall.pojo.OrderItem)"], "Fixed commit": "e8ad4767761c6e0e110d2130b57effb9cb3e036a", "Url": "https://api.github.com/repos/WarframePrimer/mytmall", "Date": "2017-10-12T12:03:00Z"},
{"Line": "=>885", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(origValue.contains(\"localhost:\"))) && (\"ZOOKEEPER_SERVER\".equals(component))) { return origValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/283/buggy-version/ambari-server.src.main.java.org.apache.ambari.server.controller.internal.BlueprintConfigurationProcessor.java", "BodyUseAPI": [], "Fixed commit": "2e0c6af8f641c8f9ade9babd01979b1fb1983dfe", "Url": "https://api.github.com/repos/tragicjun/ambari", "Date": "2015-12-08T10:56:06Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((elements.size()) > 0) || ((content) == null)) retstr = retstr + \"\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7560/buggy-version/src.main.java.nl.joshuaslik.UFMReckoning.XMLToolkit.XMLTag.java", "BodyUseAPI": [], "Fixed commit": "b5aec81acfac77489717007e2cd07bb06ed7655e", "Url": "https://api.github.com/repos/IJoshFTW/UFM-Reckoning", "Date": "2014-12-09T13:12:12Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orientationBuffer.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5182/buggy-version/AdvancedHud_Moverio.app.src.main.java.hud.advancedhud_moverio.MoverioBluetooth.java", "BodyUseAPI": [], "Fixed commit": "b3921956cd551de99e523f6a4739d5192196a3b6", "Url": "https://api.github.com/repos/PYates77/AdvancedHud", "Date": "2017-04-19T19:46:48Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fileName.indexOf(\"/\")) != (-1)) fileName = fileName.substring(((fileName.lastIndexOf(\"/\")) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6946/buggy-version/jbpm-services.jbpm-kie-services.src.main.java.org.jbpm.kie.services.impl.KModuleDeploymentService.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "fd07b4cad5313d2ca47fc79d25607ec831bf8d4e", "Url": "https://api.github.com/repos/livthomas/jbpm", "Date": "2015-04-21T15:11:25Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (target != null) angle = java.lang.Math.atan2(((target.y) - (user.y)), ((target.x) - (user.x))); else on = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4301/buggy-version/src.abilities.Beam_E.java", "BodyUseAPI": ["java.lang.Math.atan2(((target.y) - (user.y)),((target.x) - (user.x)))"], "Fixed commit": "4fe7a404fcc2e38d0fc434af10d249cea2f84393", "Url": "https://api.github.com/repos/itamarcu/Worm-Prototype", "Date": "2016-01-26T14:07:21Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((hue) < 0) { hue += 360; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6595/buggy-version/app.src.main.java.com.example.nick.hsvcolor.fragment.HSVColor.java", "BodyUseAPI": [], "Fixed commit": "cf9dd19c2452d5f8022e68e18ec23ed9ce7f1fc1", "Url": "https://api.github.com/repos/Dr-Evans/HSVColor", "Date": "2015-04-24T07:09:03Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hsvColorGradient.getStartColor().getHue()) > (hsvColorGradient.getEndColor().getHue())) { selection = (com.example.nick.hsvcolor.fragment.SelectedColorsListFragment.mHueClauseOr) + (com.example.nick.hsvcolor.fragment.SelectedColorsListFragment.mSelectionClause); }else { selection = (com.example.nick.hsvcolor.fragment.SelectedColorsListFragment.mHueClauseAnd) + (com.example.nick.hsvcolor.fragment.SelectedColorsListFragment.mSelectionClause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6595/buggy-version/app.src.main.java.com.example.nick.hsvcolor.fragment.SelectedColorsListFragment.java", "BodyUseAPI": [], "Fixed commit": "cf9dd19c2452d5f8022e68e18ec23ed9ce7f1fc1", "Url": "https://api.github.com/repos/Dr-Evans/HSVColor", "Date": "2015-04-24T07:09:03Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hsvColorGradient.getStartColor().getHue()) > (hsvColorGradient.getEndColor().getHue())) { selection = (com.example.nick.hsvcolor.fragment.SelectedColorsListFragment.mHueClauseOr) + (com.example.nick.hsvcolor.fragment.SelectedColorsListFragment.mSelectionClause); }else { selection = (com.example.nick.hsvcolor.fragment.SelectedColorsListFragment.mHueClauseAnd) + (com.example.nick.hsvcolor.fragment.SelectedColorsListFragment.mSelectionClause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6595/buggy-version/app.src.main.java.com.example.nick.hsvcolor.fragment.SelectedColorsListFragment.java", "BodyUseAPI": [], "Fixed commit": "cf9dd19c2452d5f8022e68e18ec23ed9ce7f1fc1", "Url": "https://api.github.com/repos/Dr-Evans/HSVColor", "Date": "2015-04-24T07:09:03Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.LOLLIPOP)) { android.webkit.CookieManager.getInstance().setAcceptThirdPartyCookies(childView, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5537/buggy-version/src.android.InAppChromeClient.java", "BodyUseAPI": [], "Fixed commit": "05272e164932270f2ee9f5bd4800faf64c84e2d6", "Url": "https://api.github.com/repos/ngyewch/cordova-plugin-inappbrowser", "Date": "2016-04-08T03:50:00Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gh4a.Gh4Application.getAuthLogin()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (login == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7745/buggy-version/src.com.gh4a.loader.IsCollaboratorLoader.java", "BodyUseAPI": [], "Fixed commit": "698d14a2d060a3606f43116b879d773a0446d315", "Url": "https://api.github.com/repos/slapperwan/gh4a", "Date": "2015-06-03T11:03:16Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file.getContentDescription()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9247/buggy-version/src.eclipse.net.vtst.eclipse.easy.ui.src.net.vtst.eclipse.easy.ui.properties.fields.ResourceListField.java", "BodyUseAPI": [], "Fixed commit": "3ba6ab92520762bb31199f3f423988646fb34576", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2012-04-18T16:33:48Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (barcodeDetector.isOperational()) barcodeDetector.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2811/buggy-version/mobilevisionbarcodescanner.src.main.java.com.google.android.gms.samples.vision.barcodereader.BarcodeCapture.java", "BodyUseAPI": ["com.google.android.gms.vision.barcode.BarcodeDetector.release()"], "Fixed commit": "ce537187e79f211061faee278f5eb0da91aeec37", "Url": "https://api.github.com/repos/KingsMentor/MobileVisionBarcodeScanner", "Date": "2017-08-17T11:24:46Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((whatToCall[0]) == 2) || ((whatToCall[1]) == 1)) { whatToCall[2] = 1; }else { whatToCall[2] = isWild; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8662/buggy-version/src.com.orange.game.dice.robot.client.DiceRobotIntelligence.java", "BodyUseAPI": [], "Fixed commit": "1250be85dee6d516851bbb3c5efb8ecc4b480cf5", "Url": "https://api.github.com/repos/gckjdev/DiceTrafficServer", "Date": "2012-08-30T03:13:52Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numToRetrieve == (desi.juan.email.internal.commands.RetrieveOperations.ALL_MESSAGES)) { numToRetrieve = folder.getMessageCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8680/buggy-version/src.main.java.desi.juan.email.internal.commands.RetrieveOperations.java", "BodyUseAPI": [], "Fixed commit": "631c25a876c7b25ddb84b9dc983f722a48956869", "Url": "https://api.github.com/repos/jhult/email4j", "Date": "2017-10-10T00:46:30Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tileAlveary.getMultiblockLogic().getController()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((alveary.getReferenceCoord()) != null) { Proxies.net.sendNetworkPacket(new forestry.apiculture.network.packets.PacketAlveryChange(alveary), world); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2285/buggy-version/src.main.java.forestry.apiculture.blocks.BlockAlveary.java", "BodyUseAPI": ["Proxies.net.sendNetworkPacket(forestry.apiculture.network.packets.PacketAlveryChange,net.minecraft.world.World)"], "Fixed commit": "f6daefe255ee1265e8d9b99ec1e0270330d64a2d", "Url": "https://api.github.com/repos/ForestryMC/ForestryMC", "Date": "2016-03-31T23:05:01Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["femr.data.daos.IRepository<femr.common.models.IPatient>.findAll(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((patients.size()) > 0) { response.setResponseObject(patients); }else { response.addError(\"patients\", \"No patients available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7703/buggy-version/app.femr.business.services.ResearchService.java", "BodyUseAPI": ["femr.business.dtos.ServiceResponse<java.util.List<? extends femr.common.models.IPatient>>.setResponseObject(java.util.List<? extends femr.common.models.IPatient>)"], "Fixed commit": "d30ce9b41b230e5421c1e9ca85e1fff36b33a71e", "Url": "https://api.github.com/repos/kevinzurek/femr", "Date": "2014-03-09T04:02:22Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts.length) == 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/37/buggy-version/src.stc.Model.java", "BodyUseAPI": [], "Fixed commit": "e5e6a2da6c4586ee9132da64c826f65864382b4d", "Url": "https://api.github.com/repos/steppers/revoluzone", "Date": "2017-05-20T19:57:26Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentState) == (fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.CURRENT_STATE_PLAYING_BUFFERING_START)) { setState(fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.BACKUP_PLAYING_BUFFERING_STATE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9180/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "d40e8786f7f4e3ea108c30a1354265c83665e97e", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2017-07-06T11:25:03Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((event.getClickedBlock().getType()) == (org.bukkit.Material.SIGN)) || ((event.getClickedBlock().getType()) == (org.bukkit.Material.WALL_SIGN))) && (!(event.getPlayer().isSneaking()))) { org.bukkit.block.Sign s = ((org.bukkit.block.Sign) (event.getClickedBlock().getState())); if (org.bukkit.ChatColor.stripColor(s.getLine(0)).equalsIgnoreCase(\"[MobNinja]\")) { java.lang.String map = s.getLine(2); event.getPlayer().performCommand((\"mobninja join \" + map)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8573/buggy-version/src.main.java.com.chaseoes.mobninja.listeners.PlayerInteractListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getClickedBlock().getState()", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()", "event.getPlayer().performCommand(java.lang.String)"], "Fixed commit": "10ada316035c3188c48ce071fe96c0f3a875775e", "Url": "https://api.github.com/repos/tenjavacontest/chaseoes", "Date": "2013-12-07T21:50:46Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.lang.Class.class.isAssignableFrom(clazz)) { serializedValue = ((java.lang.Class<?>) (obj)).getName(); }else if (java.util.Collection.class.isAssignableFrom(clazz)) { serializedValue = org.openmrs.module.auditlog.api.db.hibernate.interceptor.InterceptorUtil.serializeCollection(((java.util.Collection) (obj))); }else if (java.util.Map.class.isAssignableFrom(clazz)) { serializedValue = org.openmrs.module.auditlog.api.db.hibernate.interceptor.InterceptorUtil.serializeMap(((java.util.Map) (obj))); }else if (org.openmrs.OpenmrsObject.class.isAssignableFrom(clazz)) { try { serializedValue = (org.openmrs.module.auditlog.util.AuditLogConstants.UUID_LABEL) + (((org.openmrs.OpenmrsObject) (obj)).getUuid()); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5461/buggy-version/api.src.main.java.org.openmrs.module.auditlog.api.db.hibernate.interceptor.InterceptorUtil.java", "BodyUseAPI": ["java.lang.Class.isAssignableFrom(java.lang.Class<?>)", "java.lang.Class.isAssignableFrom(java.lang.Class<?>)", "java.lang.Class.isAssignableFrom(java.lang.Class<?>)"], "Fixed commit": "23f40118306b20eb6c504e924f438075b8d9e4a3", "Url": "https://api.github.com/repos/openmrs/openmrs-module-auditlog", "Date": "2013-12-05T05:48:49Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bundle.getState()) <= 2) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2226/buggy-version/org.lunifera.xtext.builder.metadata.services.src.org.lunifera.xtext.builder.metadata.services.impl.MetadataBuilder.java", "BodyUseAPI": [], "Fixed commit": "2cc84685b18beb138ef51e3d2da8ade086252a8e", "Url": "https://api.github.com/repos/lunifera/lunifera-xtext-runtimebuilder", "Date": "2014-10-14T11:06:16Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!forLogging) && (getAction().equals(Stomp.Commands.KEEPALIVE))) { return \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1160/buggy-version/activemq-stomp.src.main.java.org.apache.activemq.transport.stomp.StompFrame.java", "BodyUseAPI": [], "Fixed commit": "f7311567a022dcdfb00126b4931a485a8afdb134", "Url": "https://api.github.com/repos/apache/activemq", "Date": "2013-10-30T17:55:55Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(autoAck)) ackMessage(getDeliveryTag(delivery));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/601/buggy-version/src.main.java.com.aweber.flume.source.rabbitmq.Consumer.java", "BodyUseAPI": [], "Fixed commit": "580987dc8f1baf2fc97ad15fa0727f7f35b6091c", "Url": "https://api.github.com/repos/gmr/rabbitmq-flume-plugin", "Date": "2015-04-22T14:34:10Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (b != null) { query = b.getString(SearchManager.QUERY, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8211/buggy-version/app.src.main.java.com.dancedeets.android.eventlist.SearchListActivity.java", "BodyUseAPI": ["android.os.Bundle.getString(SearchManager.QUERY,java.lang.String)"], "Fixed commit": "bc6a35dc67651c07ec252246695db6e06735c22c", "Url": "https://api.github.com/repos/mikelambert/dancedeets-newdroid", "Date": "2015-12-23T06:48:32Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (location != null) { locations.add(location); locationIdSet.add(location.getId()); findLocationIds(locations); }else { locationIdSet.add(0L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1680/buggy-version/axelor-stock.src.main.java.com.axelor.apps.stock.service.LocationServiceImpl.java", "BodyUseAPI": ["java.util.Set<java.lang.Long>.add(location.getId())", "com.axelor.apps.stock.db.Location.getId()", "java.util.List<com.axelor.apps.stock.db.Location>.add(com.axelor.apps.stock.db.Location)"], "Fixed commit": "3a054d8fa40e6f9dd855fba714d4d503ed7411c2", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2017-12-07T12:05:00Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (space) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6415/buggy-version/MLGPics.src.mlgpics.Contents.java", "BodyUseAPI": [], "Fixed commit": "0167003fcd5fceaf3398bb4838ff8b2d9e02c1d4", "Url": "https://api.github.com/repos/xMrPoi/MLG-Pics-Pls", "Date": "2015-05-29T19:05:16Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stringBeginChar != ' ') throw new java.lang.IllegalStateException((((\"Missing closed string character: '\" + stringBeginChar) + \"', position: \") + (parserCurrentPos)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3799/buggy-version/commons.src.main.java.com.orientechnologies.common.parser.OBaseParser.java", "BodyUseAPI": [], "Fixed commit": "16bfe63f09812f2860413a7428c36f076c944006", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-09-06T17:56:05Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (openGraph > 0) throw new java.lang.IllegalStateException((\"Missing closed graph character: '}', position: \" + (parserCurrentPos)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3799/buggy-version/commons.src.main.java.com.orientechnologies.common.parser.OBaseParser.java", "BodyUseAPI": [], "Fixed commit": "16bfe63f09812f2860413a7428c36f076c944006", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-09-06T17:56:05Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (openParenthesis > 0) throw new java.lang.IllegalStateException((\"Missing closed parenthesis character: ')', position: \" + (parserCurrentPos)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3799/buggy-version/commons.src.main.java.com.orientechnologies.common.parser.OBaseParser.java", "BodyUseAPI": [], "Fixed commit": "16bfe63f09812f2860413a7428c36f076c944006", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-09-06T17:56:05Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (openBraket > 0) throw new java.lang.IllegalStateException((\"Missing closed braket character: ']', position: \" + (parserCurrentPos)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3799/buggy-version/commons.src.main.java.com.orientechnologies.common.parser.OBaseParser.java", "BodyUseAPI": [], "Fixed commit": "16bfe63f09812f2860413a7428c36f076c944006", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-09-06T17:56:05Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5107/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "105bded45d164b904abeaf4e087510bb040e895d", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-03-31T03:01:02Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((invalidTradeTransaction.state) != (models.enums.States.APPROVE)) { invalidTradeTransaction.state = models.enums.States.INVALID; invalidTradeTransaction.save(); emailList.addAll(controllers.EmailSender.getBookExchangeInvalid(invalidTradeTransaction.owner, invalidTradeTransaction.recipient)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5006/buggy-version/app.controllers.BookController.java", "BodyUseAPI": [], "Fixed commit": "d5d5a0acbe7936634180a69e4515f8223350b158", "Url": "https://api.github.com/repos/anhapu/SDFplay", "Date": "2014-01-13T17:55:05Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serverGame) != null) { serverGame.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1324/buggy-version/server.src.com.tutorial.game.server.Connection.java", "BodyUseAPI": [], "Fixed commit": "99204edf5b7bcda31d1f2df7eb6b48351de96756", "Url": "https://api.github.com/repos/lar-ryan-nick/FightingGame", "Date": "2017-12-23T03:01:11Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Gdx.graphics.getHeight()) != 0) { if (((Gdx.graphics.getWidth()) / (Gdx.graphics.getHeight())) < (16.0F / 9)) { camera.zoom = (WORLD_WIDTH) / (Gdx.graphics.getWidth()); }else { camera.zoom = (WORLD_HEIGHT) / (Gdx.graphics.getHeight()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1324/buggy-version/core.src.com.tutorial.game.maps.Map.java", "BodyUseAPI": [], "Fixed commit": "99204edf5b7bcda31d1f2df7eb6b48351de96756", "Url": "https://api.github.com/repos/lar-ryan-nick/FightingGame", "Date": "2017-12-23T03:01:11Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o instanceof org.drools.lang.dsl.DSLMappingParseException) { org.drools.lang.dsl.DSLMappingParseException dslMappingParseException = ((org.drools.lang.dsl.DSLMappingParseException) (o)); dslErrorEvent.recordError(assetItem, (((\"Line \" + (dslMappingParseException.getLine())) + \" : \") + (dslMappingParseException.getMessage()))); }else if (o instanceof java.lang.Exception) { java.lang.Exception excp = ((java.lang.Exception) (o)); dslErrorEvent.recordError(assetItem, (((((\"Exception \" + (excp.getClass())) + \" \") + (excp.getMessage())) + \" \") + (excp.getCause()))); }else { dslErrorEvent.recordError(assetItem, (\"Uncategorized error \" + o)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4984/buggy-version/guvnor-webapp.src.main.java.org.drools.guvnor.server.builder.DSLLoader.java", "BodyUseAPI": ["BRMSPackageBuilder.DSLErrorEvent.recordError(org.drools.repository.AssetItem,java.lang.String)"], "Fixed commit": "8edc51c32d1ed1fd77a698edf8a5289c3b6055f0", "Url": "https://api.github.com/repos/nheron/guvnor", "Date": "2011-06-09T23:48:09Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["okhttp3.Response.header(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((((cacheControl == null) || (cacheControl.contains(\"no-store\"))) || (cacheControl.contains(\"no-cache\"))) || (cacheControl.contains(\"must-revalidate\"))) || (cacheControl.contains(\"max-age=0\"))) { return origResponse.newBuilder().removeHeader(\"Pragma\").header(\"Cache-Control\", (\"public, max-age=\" + ((60 * 60) * 24))).build(); }else { return origResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7683/buggy-version/app.src.main.java.com.example.robertduriancik.meteorito.api.NasaDataApi.java", "BodyUseAPI": [], "Fixed commit": "23f8c6f27a2da343cc9445386aa79b984803dd6f", "Url": "https://api.github.com/repos/rduriancik/Meteorito", "Date": "2017-06-16T10:35:24Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (distance < 0.1) { distance = 0.1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3404/buggy-version/modules.graph-impl.src.main.java.org.clueminer.graph.adjacencyMatrix.AdjMatrixGraph.java", "BodyUseAPI": [], "Fixed commit": "2ec456eb8b890f59198e4d8e96f462112320bc04", "Url": "https://api.github.com/repos/tomasbruna/clueminer", "Date": "2014-11-03T21:07:17Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.endsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isSharedLibrary) { installContext.onFileWrite(destFile, changeInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1330/buggy-version/process.process-manager.src.main.java.io.fabric8.process.manager.support.InstallDeploymentsTask.java", "BodyUseAPI": [], "Fixed commit": "48107b003b130d0750277e0fb197d3992fd6ca90", "Url": "https://api.github.com/repos/grgrzybek/fabric8", "Date": "2014-05-22T05:11:10Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ru.apertum.qsystem.common.Uses.userTimeZone) == null) { zoneTimeFormat.setTimeZone(currentTimeZone); }else { zoneTimeFormat.setTimeZone(Uses.userTimeZone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2527/buggy-version/QSystem.src.ru.apertum.qsystem.common.model.QCustomer.java", "BodyUseAPI": [], "Fixed commit": "bc02a0ae4f2fa620ce527fe0ebd5e4d9b14466a5", "Url": "https://api.github.com/repos/bcgov/sbc-qsystem", "Date": "2017-07-24T20:30:54Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((itemStack != null) && ((itemStack.getType()) != null)) { player.getInventory().addItem(itemStack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2270/buggy-version/src.main.java.com.tealcube.minecraft.bukkit.battered.BatteredPlugin.java", "BodyUseAPI": ["player.getInventory().addItem(org.bukkit.inventory.ItemStack)"], "Fixed commit": "a61a6a6299c10857558759dff8c5d2abf054dc44", "Url": "https://api.github.com/repos/TealCube/battered", "Date": "2015-02-26T20:39:33Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, com.wizered67.game.Inputs.MyInputProcessor.ControlType>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (control == null) { control = com.wizered67.game.Inputs.MyInputProcessor.ControlType.OTHER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3812/buggy-version/core.src.com.wizered67.game.Inputs.MyInputProcessor.java", "BodyUseAPI": [], "Fixed commit": "52438af9e363e7943d1d52cc50597271e20f2a09", "Url": "https://api.github.com/repos/wizered67/ProjectVisualNovel", "Date": "2017-02-06T02:57:32Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.junrar.rarfile.FileHeader.getFileNameW()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((fileName == null) || ((fileName.trim().length()) == 0)) fileName = fh.getFileNameString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7714/buggy-version/src.main.java.com.ifreeshare.util.ZipUtil.java", "BodyUseAPI": [], "Fixed commit": "37d716d007f2194333f252cd8de38dfba9697d90", "Url": "https://api.github.com/repos/714303584/util", "Date": "2016-10-21T08:44:45Z"},
{"Line": "=>1101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Collection<de.cismet.cids.dynamics.CidsBean>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (gruFlu.contains(flurstueck)) { if (!(flurstueckeToGrundstueckeMap.containsKey(flurstueck))) { flurstueckeToGrundstueckeMap.put(flurstueck, new java.util.HashSet<java.lang.String>()); } final java.util.Collection<java.lang.String> grundstuecke = flurstueckeToGrundstueckeMap.get(flurstueck); grundstuecke.add(grundstueck); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/617/buggy-version/src.main.java.de.cismet.cids.custom.utils.BaulastBescheinigungDialog.java", "BodyUseAPI": ["java.util.HashMap<de.cismet.cids.dynamics.CidsBean, java.util.Collection<java.lang.String>>.put(de.cismet.cids.dynamics.CidsBean,java.util.HashSet<java.lang.String>)", "java.util.HashMap<de.cismet.cids.dynamics.CidsBean, java.util.Collection<java.lang.String>>.get(de.cismet.cids.dynamics.CidsBean)", "java.util.HashMap<de.cismet.cids.dynamics.CidsBean, java.util.Collection<java.lang.String>>.containsKey(de.cismet.cids.dynamics.CidsBean)"], "Fixed commit": "53242529eaf44755d247d1bae2f0fe9e4b979f0d", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2016-03-30T07:45:38Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLevel) != null) { removeComponent(currentLevel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5899/buggy-version/src.main.java.sem.group47.gamestate.LevelState.java", "BodyUseAPI": [], "Fixed commit": "b143087c98cba5a0647074dd2298779b7288c633", "Url": "https://api.github.com/repos/karinvangarderen/SEMGroup47", "Date": "2015-10-22T11:16:57Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentClause.getTail()) == null) currentClause.m_tail = new com.ugos.jiprolog.engine.ConsCell(com.ugos.jiprolog.engine.Atom.createAtom(\"true\"), null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1108/buggy-version/src.com.ugos.jiprolog.engine.Retract1.java", "BodyUseAPI": [], "Fixed commit": "eb17356a136928dc53fb001c8ff0118857f58ee7", "Url": "https://api.github.com/repos/jiprolog/jiprolog", "Date": "2015-04-20T17:53:19Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.INVALID_CHARACTER_DETECT_IN_SERVER)) { message = res.getString(R.string.filename_forbidden_charaters_from_server); }else if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.CONFLICT)) { message = res.getString(R.string.move_file_error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8305/buggy-version/src.com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.java", "BodyUseAPI": ["com.owncloud.android.lib.common.operations.RemoteOperationResult.getCode()"], "Fixed commit": "47af3adfa738307103b4aa088196f6c83ac27316", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2017-03-07T07:56:33Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(a.containsPlayer(p_))) { a.joinPlayerLobby(p_, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3596/buggy-version/API.src.main.java.com.comze_instancelabs.minigamesapi.Arena.java", "BodyUseAPI": ["com.comze_instancelabs.minigamesapi.Arena.joinPlayerLobby(java.lang.String,boolean)"], "Fixed commit": "03fd642b7444ee2b9719e20000081eef03d59362", "Url": "https://api.github.com/repos/instance01/MinigamesAPI", "Date": "2014-08-31T11:08:59Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["accountAsyncTask.execute().get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (responsePair == null) return false; else return (responsePair.first) != null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7990/buggy-version/app.src.main.java.de.fhdw.wipbank.android.activity.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "5d019ba05be5d5af800cf2dc3cf05314f0f6cf4e", "Url": "https://api.github.com/repos/wip-bank/android", "Date": "2017-09-20T07:33:08Z"},
{"Line": "=>1095", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dsOpOldAlives != null) { for (java.lang.Long id : dsOpOldAlives) { if (((id > (combinedDownFctrl.lw())) && (!(combinedDownFctrl.acks().contains(id)))) && (!(combinedDownFctrl.alives().contains(id)))) { retractions.add(id); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7084/buggy-version/seep-system.src.main.java.uk.ac.imperial.lsds.seep.processingunit.Dispatcher.java", "BodyUseAPI": [], "Fixed commit": "1cf10293e3e5cfd323af4654e6b220c4d0b2f400", "Url": "https://api.github.com/repos/lsds/SEEP", "Date": "2016-08-01T18:07:34Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (branchDefinedInScm.equals(\"*\")) return true; else if (branchDefinedInScm.equals(brachToTrigger)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6564/buggy-version/src.main.java.com.cloudbees.jenkins.plugins.BitbucketHookReceiver.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "b5175383a5a973e7a5c9f7d2d0686d368b4822af", "Url": "https://api.github.com/repos/fbelzunc/bitbucket-plugin", "Date": "2014-11-03T19:15:03Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callback) != null) { flyway.setCallbacks(callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7824/buggy-version/nakadi-producer-spring-boot-starter.src.main.java.org.zalando.nakadiproducer.FlywayMigrator.java", "BodyUseAPI": [], "Fixed commit": "df2d54e0a7edd047ec04a8d5c263f89043fd8853", "Url": "https://api.github.com/repos/zalando-nakadi/nakadi-producer-spring-boot-starter", "Date": "2017-05-23T17:51:05Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jaspersoft.android.sdk.network.HttpException.code()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (code >= 500) { return new com.jaspersoft.android.sdk.service.exception.ServiceException(\"Server encountered unexpected error\", e, com.jaspersoft.android.sdk.service.exception.StatusCodes.INTERNAL_ERROR); }else { com.jaspersoft.android.sdk.service.exception.ServiceException undefinedError = new com.jaspersoft.android.sdk.service.exception.ServiceException(\"The operation failed with no more detailed information\", e, com.jaspersoft.android.sdk.service.exception.StatusCodes.UNDEFINED_ERROR); if ((code >= 400) && (code < 500)) { switch (code) { case 404 : return new com.jaspersoft.android.sdk.service.exception.ServiceException(\"Service exist but requested entity not found\", e, com.jaspersoft.android.sdk.service.exception.StatusCodes.CLIENT_ERROR); case 403 : return new com.jaspersoft.android.sdk.service.exception.ServiceException(\"User has no access to resource\", e, com.jaspersoft.android.sdk.service.exception.StatusCodes.PERMISSION_DENIED_ERROR); case 401 : return new com.jaspersoft.android.sdk.service.exception.ServiceException(\"User is not authorized\", e, com.jaspersoft.android.sdk.service.exception.StatusCodes.AUTHORIZATION_ERROR); case 400 : return new com.jaspersoft.android.sdk.service.exception.ServiceException(\"Some parameters in request not valid\", e, com.jaspersoft.android.sdk.service.exception.StatusCodes.CLIENT_ERROR); default : return undefinedError; } }else { return undefinedError; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4333/buggy-version/core.src.main.java.com.jaspersoft.android.sdk.service.internal.DefaultExceptionMapper.java", "BodyUseAPI": [], "Fixed commit": "1877398d4038fa44a15532c74906bcdd4444c7f8", "Url": "https://api.github.com/repos/Jaspersoft/js-android-sdk", "Date": "2016-02-24T13:14:44Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id != (Block.tallGrass.blockID)) { world.setBlock(x, y, z, id); }else { world.setBlock(x, y, z, id, world.getBlockMetadata(i, j, k), 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2063/buggy-version/NatureOverhaul.java", "BodyUseAPI": ["net.minecraft.world.World.setBlock(int,int,int,int,world.getBlockMetadata(i, j, k),int)", "net.minecraft.world.World.setBlock(int,int,int,int)"], "Fixed commit": "fa6339c492dc7e46b8325da9b809321781c42fe5", "Url": "https://api.github.com/repos/GotoLink/NatureOverhaul", "Date": "2013-04-26T15:40:31Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.shanerx.faketrollplus.core.UserCache.getJSONConfiguration()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(root.containsKey(uuid.toString()))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/330/buggy-version/src.org.shanerx.faketrollplus.core.TrollPlayerImpl.java", "BodyUseAPI": [], "Fixed commit": "6d9efdb3fe796168a9820762317b4ea57ac86953", "Url": "https://api.github.com/repos/SparklingComet/FakeTrollPlus", "Date": "2017-04-28T14:30:02Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.folding.msmexplorer.util.render.SelfRefEdgeRenderer.getShape(prefuse.visual.VisualItem)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (shape != null) drawShape(g, item, shape);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/782/buggy-version/MSMExplorer.src.edu.stanford.folding.msmexplorer.util.render.SelfRefEdgeRenderer.java", "BodyUseAPI": ["edu.stanford.folding.msmexplorer.util.render.SelfRefEdgeRenderer.drawShape(java.awt.Graphics2D,prefuse.visual.VisualItem,java.awt.Shape)"], "Fixed commit": "6256fdd10e3e88ab68461ca6857c39ce913f96c6", "Url": "https://api.github.com/repos/brycecr/msmexplorer", "Date": "2012-08-29T22:21:25Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["helpers.GoogleSearchService.search(link.getLabel(),int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (searchResultsForThisLink == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4428/buggy-version/src.processors.SearchEngineLinksProcessor.java", "BodyUseAPI": [], "Fixed commit": "8c53e58bcdae02bc3c3da06d7ba12607167626cf", "Url": "https://api.github.com/repos/abforce/Web-Mining", "Date": "2016-01-18T13:01:49Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((city != null) && (!(city.isEmpty()))) { java.util.List<com.fpt.xml.hth.db.lib.DTO.TheaterSessionDTO> lstTheaterSession = movieDto.getTheaters(); int size = lstTheaterSession.size(); for (int i = 0; i < size; i++) { com.fpt.xml.hth.db.lib.DTO.TheaterSessionDTO dto = lstTheaterSession.get(i); if (!(dto.getTheater().getCity().equals(city))) { movieDto.getTheaters().remove(dto); i--; size--; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7005/buggy-version/db-lib.src.main.java.com.fpt.xml.hth.db.lib.DAO.MovieDAO.java", "BodyUseAPI": ["dto.getTheater().getCity().equals(java.lang.String)"], "Fixed commit": "889f97a045e07dc56a7c7c5750276841d0876d36", "Url": "https://api.github.com/repos/trungdq88/movie-showtimes", "Date": "2015-02-06T11:47:38Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["marytts.util.dom.MaryDomUtils.tokenText(org.w3c.dom.Element)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.util.regex.Pattern.matches(NumberEP.sInteger, text)) { marytts.language.de.preprocess.AbbrevEP.logger.debug(((\"Expanding as integer: `\" + text) + \"'\")); exp.addAll(makeNewTokens(token.getOwnerDocument(), number.expandInteger(text))); }else { marytts.language.de.preprocess.AbbrevEP.logger.debug(((\"Expanding as digits: `\" + text) + \"'\")); exp.addAll(makeNewTokens(token.getOwnerDocument(), number.expandDigits(text))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9006/buggy-version/marytts-languages.marytts-lang-de.src.main.java.marytts.language.de.preprocess.AbbrevEP.java", "BodyUseAPI": ["java.util.ArrayList<org.w3c.dom.Element>.addAll(makeNewTokens(token.getOwnerDocument(), number.expandInteger(text)))", "marytts.language.de.preprocess.AbbrevEP.expandDigits(java.lang.String)", "marytts.language.de.preprocess.AbbrevEP.expandInteger(java.lang.String)", "marytts.language.de.preprocess.AbbrevEP.makeNewTokens(org.w3c.dom.Document,number.expandInteger(text))", "org.apache.log4j.Logger.debug(java.lang.String)", "marytts.language.de.preprocess.AbbrevEP.makeNewTokens(org.w3c.dom.Document,number.expandDigits(text))", "org.apache.log4j.Logger.debug(java.lang.String)", "java.util.ArrayList<org.w3c.dom.Element>.addAll(makeNewTokens(token.getOwnerDocument(), number.expandDigits(text)))"], "Fixed commit": "4bd2480dde1655f82849565263bca48d1b5fbb55", "Url": "https://api.github.com/repos/Rootex/marytts", "Date": "2016-02-25T15:04:37Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(newName)) { originalTitle = newName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2688/buggy-version/portal-impl.src.com.liferay.portlet.documentlibrary.trash.DLFolderTrashHandler.java", "BodyUseAPI": [], "Fixed commit": "a9cabf4c1538e6d4733e4dc6555c96c89936fb03", "Url": "https://api.github.com/repos/ealonso/liferay-portal", "Date": "2013-02-07T15:08:49Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(newName)) { originalTitle = newName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2688/buggy-version/portal-impl.src.com.liferay.portlet.documentlibrary.trash.DLFileEntryTrashHandler.java", "BodyUseAPI": [], "Fixed commit": "a9cabf4c1538e6d4733e4dc6555c96c89936fb03", "Url": "https://api.github.com/repos/ealonso/liferay-portal", "Date": "2013-02-07T15:08:49Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(newName)) { originalTitle = newName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2688/buggy-version/portal-impl.src.com.liferay.portlet.wiki.trash.WikiPageTrashHandler.java", "BodyUseAPI": [], "Fixed commit": "a9cabf4c1538e6d4733e4dc6555c96c89936fb03", "Url": "https://api.github.com/repos/ealonso/liferay-portal", "Date": "2013-02-07T15:08:49Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(newName)) { originalTitle = newName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2688/buggy-version/portal-impl.src.com.liferay.portlet.wiki.trash.WikiNodeTrashHandler.java", "BodyUseAPI": [], "Fixed commit": "a9cabf4c1538e6d4733e4dc6555c96c89936fb03", "Url": "https://api.github.com/repos/ealonso/liferay-portal", "Date": "2013-02-07T15:08:49Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mTutorialOptions.getTutorialFinishedListener()) != null) { mTutorialOptions.getTutorialFinishedListener().OnTutorialPageFinishedListener(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4640/buggy-version/lib.src.main.java.com.cleveroad.slidingtutorial.TutorialImpl.java", "BodyUseAPI": ["com.cleveroad.slidingtutorial.TutorialOptions.getTutorialFinishedListener()", "mTutorialOptions.getTutorialFinishedListener().OnTutorialPageFinishedListener()"], "Fixed commit": "eee5040af8706e8237a150e5595f41cda6c099aa", "Url": "https://api.github.com/repos/Frayo44-deprecated/SlidingTutorial-Android", "Date": "2017-07-17T14:04:02Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (angle < 0) angle += 360;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4868/buggy-version/src.com.crocoware.infographix.utils.Vector.java", "BodyUseAPI": [], "Fixed commit": "c5b2589fa1aa6d217b2070ce93925155db8581ce", "Url": "https://api.github.com/repos/Orabig/Android.Infographix", "Date": "2014-09-07T19:51:14Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstStart) { mapView.getController().setCenter(getCurrentLocation()); firstStart = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8198/buggy-version/app.src.main.java.be.artoria.belfortapp.activities.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "733e639a91cbb6a695016ee1dafefb60efdb6b3a", "Url": "https://api.github.com/repos/oSoc14/Artoria", "Date": "2014-07-07T08:09:41Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((method.getParameterTypes().length) > 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2638/buggy-version/bedede.src.main.java.com.github.thogr.bedede.EntryFinder.java", "BodyUseAPI": [], "Fixed commit": "145d4838c44032b7a19ad3af9c32bcbc49692128", "Url": "https://api.github.com/repos/thogr/bedede", "Date": "2014-10-20T16:18:14Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isAttached) openOptionsMenu();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7037/buggy-version/src.com.mrk1869.glasslogger.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "45d3ec41106eaa7f215aae000ed00cc33792045c", "Url": "https://api.github.com/repos/shoya140/GlassLogger", "Date": "2014-07-18T08:20:40Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((objects.get(i).get(\"Nickname\")) != null) { name = objects.get(i).get(\"Nickname\").toString(); }else { name = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8304/buggy-version/app.src.main.java.com.example.vanne.tradish_alpha.CustomerActivity.ResturantList.RestaurantListActivity.java", "BodyUseAPI": ["java.util.List<com.parse.ParseUser>.get(int)", "objects.get(i).get(\"Nickname\").toString()", "objects.get(i).get(java.lang.String)"], "Fixed commit": "cb6fed5eebd676020d907dfb0a5218f942a25d80", "Url": "https://api.github.com/repos/vannesschancc/Tradish_Android_Client", "Date": "2017-10-01T19:01:36Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mCartGroceryName.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(name.isEmpty())) { android.content.ContentValues values = new android.content.ContentValues(); values.put(CartTable.COLUMN_CART_GROCERY_NAME, name); if ((cartGroceryItemUri) == null) { cartGroceryItemUri = getContentResolver().insert(GroceryotgProvider.CONTENT_URI_CART_ITEM, values); }else { getContentResolver().update(cartGroceryItemUri, values, null, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/547/buggy-version/GroceryOTG.src.com.groceryotg.android.ShopCartDetailView.java", "BodyUseAPI": ["android.content.ContentValues.put(CartTable.COLUMN_CART_GROCERY_NAME,java.lang.String)"], "Fixed commit": "126f187c09e31c61829da3013ce4c43e64f3e03a", "Url": "https://api.github.com/repos/wangyif2/GroceryOTG", "Date": "2013-03-02T04:41:42Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (query != \"\") { query = ((((((\"{\\n\" + (((\" query: {\\n\" + \" filtered : {\\n\") + \" query_string : {\\n\") + \" term : \")) + (search_parameters[0])) + \";\\n\") + \" }\\n\") + \" }\\n\") + \" }\\n\") + \"}\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3155/buggy-version/app.src.main.java.ca.ualberta.cs.lonelytwitter.ElasticsearchTweetController.java", "BodyUseAPI": [], "Fixed commit": "34fc6ba084cb26164c252e087c0b5378e6961c1d", "Url": "https://api.github.com/repos/Omergosh/lonelyTwitter", "Date": "2017-02-10T21:54:34Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.slee.resource.sip11.SipResourceAdaptor.getTransactionWrapper(gov.nist.javax.sip.stack.SIPServerTransaction)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((inviteSTW != null) && (inviteSTW.isActivity())) { activity = inviteSTW; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4484/buggy-version/resources.sip11.ra.src.main.java.org.mobicents.slee.resource.sip11.SipResourceAdaptor.java", "BodyUseAPI": [], "Fixed commit": "f5056210bd5fd1db6a104b610ab7376767f155b0", "Url": "https://api.github.com/repos/Mobicents/jain-slee.sip", "Date": "2013-02-27T15:11:18Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.LOLLIPOP)) { bookLocale = java.util.Locale.forLanguageTag(myApi.getBookLanguage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5934/buggy-version/FBReader.src.main.java.org.geometerplus.android.fbreader.benetech.FBReaderWithNavigationBar.java", "BodyUseAPI": [], "Fixed commit": "ea406735f90972ac28826dd600e093a0d4ead9ce", "Url": "https://api.github.com/repos/benetech/FBReaderJ", "Date": "2016-09-06T20:07:10Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myTTS) != null) { try { if ((myTTS.isLanguageAvailable(bookLocale)) == (android.speech.tts.TextToSpeech.LANG_AVAILABLE)) { myTTS.setLanguage(bookLocale); } } catch (java.lang.Exception e) { android.util.Log.e(\"FBReaderWNavBar\", \"failed fetching locale\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5934/buggy-version/FBReader.src.main.java.org.geometerplus.android.fbreader.benetech.FBReaderWithNavigationBar.java", "BodyUseAPI": [], "Fixed commit": "ea406735f90972ac28826dd600e093a0d4ead9ce", "Url": "https://api.github.com/repos/benetech/FBReaderJ", "Date": "2016-09-06T20:07:10Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileUri == null) { chatRoomView.sendMessageFailed(\"\u627e\u4e0d\u5230\u5716\u7247\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2449/buggy-version/app.src.main.java.andy.firebasedemo.chatroom.ChatRoomPresenterImp.java", "BodyUseAPI": [], "Fixed commit": "da9152af83ed3448c0bc5010d76fc8c6387be419", "Url": "https://api.github.com/repos/yung-yu/FireBaseDemo", "Date": "2016-11-25T16:36:58Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.greatmancode.craftconomy3.Common.getInstance().getDatabaseManager().getDatabase().select(com.greatmancode.craftconomy3.database.tables.ConfigTable.class).where().equal(ConfigTable.NAME_FIELD, \"longmode\").execute().findOne()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (displayFormatTable == null) { displayFormatTable = new com.greatmancode.craftconomy3.database.tables.ConfigTable(); displayFormatTable.setName(\"longmode\"); displayFormatTable.setValue(DisplayFormat.LONG.name()); com.greatmancode.craftconomy3.Common.getInstance().getDatabaseManager().getDatabase().save(displayFormatTable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8408/buggy-version/src.main.java.com.greatmancode.craftconomy3.configuration.ConfigurationManager.java", "BodyUseAPI": [], "Fixed commit": "2800b91b96211fd6f3f9ed22fb0baa6ff861257f", "Url": "https://api.github.com/repos/greatman/craftconomy3", "Date": "2013-02-11T01:44:44Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((driveLogicInterface) != null) driveLogicInterface.doDriveLogic(this, gameObject, tick, world);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6624/buggy-version/Source.src.code.game.tank.Drive.java", "BodyUseAPI": [], "Fixed commit": "76a239fa6c1d569c53dd37f363cb7222fa3c671d", "Url": "https://api.github.com/repos/Baseman95/Yankee_Summersault", "Date": "2016-02-20T08:05:10Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((hourOfDay) < (cal.get(java.util.Calendar.HOUR_OF_DAY))) || (((hourOfDay) == (cal.get(java.util.Calendar.HOUR_OF_DAY))) && ((minute) < (cal.get(java.util.Calendar.MINUTE))))) cal.set(java.util.Calendar.DAY_OF_MONTH, ((cal.get(java.util.Calendar.DAY_OF_MONTH)) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6697/buggy-version/src.main.java.com.tzwm.deadalarm.MyAlarm.java", "BodyUseAPI": ["java.util.Calendar.set(int,int)", "java.util.Calendar.get(int)"], "Fixed commit": "a4e16b998ddfd23fdee55c3fb61ae4b15ddf59d2", "Url": "https://api.github.com/repos/tzwm/DeadAlarm", "Date": "2013-10-07T17:19:24Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (propertiesComponent.isValueSet(com.imaginea.betterdocs.RefreshAction.EXCLUDE_IMPORT_LIST)) { java.lang.String excludeImport = propertiesComponent.getValue(com.imaginea.betterdocs.RefreshAction.EXCLUDE_IMPORT_LIST); if (excludeImport != null) { java.util.Set<java.lang.String> excludeImports = new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(excludeImport.split(\",\"))); imports = editorDocOps.excludeCustomImports(imports, excludeImports); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/767/buggy-version/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.RefreshAction.java", "BodyUseAPI": ["com.intellij.ide.util.PropertiesComponent.getValue(java.lang.String)"], "Fixed commit": "32add80527e58aaf3806be981142b3ad0fd79219", "Url": "https://api.github.com/repos/amit-shar/BetterDocs", "Date": "2015-05-05T11:30:48Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ssReadingActivityBinding) != null) { ssReadingActivityBinding.ssReadingView.updateComments(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6363/buggy-version/app.src.main.java.com.cryart.sabbathschool.viewmodel.SSReadingViewModel.java", "BodyUseAPI": [], "Fixed commit": "722ccd38e13afda80e069250d22eaf6c10dcbd3a", "Url": "https://api.github.com/repos/Adventech/sabbath-school-android", "Date": "2017-10-06T18:22:36Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["restWebService.ProductCatalogService.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (pc != null) { product.add(pc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3129/buggy-version/AllergyIAPWS.src.restWebService.RestWebService.java", "BodyUseAPI": ["java.util.List<restWebService.ProductCatalog>.add(restWebService.ProductCatalog)"], "Fixed commit": "e8658f4d0214681b45e83830494249f60a38f3e0", "Url": "https://api.github.com/repos/jaccao/AllergyIAPWS", "Date": "2016-12-13T21:46:31Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["restWebService.UserService.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (u != null) { user.add(u); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3129/buggy-version/AllergyIAPWS.src.restWebService.RestWebService.java", "BodyUseAPI": ["java.util.List<restWebService.User>.add(restWebService.User)"], "Fixed commit": "e8658f4d0214681b45e83830494249f60a38f3e0", "Url": "https://api.github.com/repos/jaccao/AllergyIAPWS", "Date": "2016-12-13T21:46:31Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["restWebService.CustomerService.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (c != null) { customer.add(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3129/buggy-version/AllergyIAPWS.src.restWebService.RestWebService.java", "BodyUseAPI": ["java.util.List<restWebService.Customer>.add(restWebService.Customer)"], "Fixed commit": "e8658f4d0214681b45e83830494249f60a38f3e0", "Url": "https://api.github.com/repos/jaccao/AllergyIAPWS", "Date": "2016-12-13T21:46:31Z"},
{"Line": "=>821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (voltage != 0) temp_volt_tv.setText(((((java.lang.String) (temp_volt_tv.getText().toString())) + \" / \") + (str.formatVoltage(voltage))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1339/buggy-version/src.com.darshancomputing.BatteryIndicatorProRetro.LogViewActivity.java", "BodyUseAPI": ["com.darshancomputing.BatteryIndicatorProRetro.Str.formatVoltage(int)", "android.widget.TextView.setText(((((java.lang.String) (temp_volt_tv.getText().toString())) + \" / \") + (str.formatVoltage(voltage))))"], "Fixed commit": "dab872846786cb504d2b5ee46eaeac97260d44f1", "Url": "https://api.github.com/repos/darshan-/Battery-Indicator-Pro-Retro", "Date": "2014-07-10T00:14:30Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bourg.austin.VersusArena.Arena.ArenaManager.getArenasBySize(statusType.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (arenas == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8391/buggy-version/src.bourg.austin.VersusArena.Arena.ArenaManager.java", "BodyUseAPI": [], "Fixed commit": "48fb7bdbb900cbed2af0a075a8b53fab73ec046f", "Url": "https://api.github.com/repos/MCWarcraft/VersusArena", "Date": "2014-08-23T02:00:38Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getContentResolver().query(ContactsContract.Profile.CONTENT_URI,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cursor.getCount()) > 0) { cursor.moveToFirst(); return cursor.getString(cursor.getColumnIndex(ContactsContract.Profile.DISPLAY_NAME)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6291/buggy-version/app.src.main.java.com.johnsimon.payback.util.Resource.java", "BodyUseAPI": ["android.database.Cursor.moveToFirst()", "android.database.Cursor.getString(cursor.getColumnIndex(ContactsContract.Profile.DISPLAY_NAME))", "android.database.Cursor.getColumnIndex(ContactsContract.Profile.DISPLAY_NAME)"], "Fixed commit": "afd3608b7a5eb76fb558a294facef66324f08f5c", "Url": "https://api.github.com/repos/JohnSimonCo/PayBack", "Date": "2014-11-04T17:19:32Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((waypoints.size()) - 1) < (index)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2378/buggy-version/app.src.main.java.com.example.coolerbot.app.Guidance.java", "BodyUseAPI": [], "Fixed commit": "c4842facf1bf7da353d48931113b4a1af0828fb0", "Url": "https://api.github.com/repos/patrick-walters/CoolerBot", "Date": "2014-08-16T17:56:23Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == false) { reDraw.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1552/buggy-version/src.client.RoomList.java", "BodyUseAPI": [], "Fixed commit": "392a3daf457c2fa208561c7d0ff3879bf39cfbc5", "Url": "https://api.github.com/repos/tristanSzucs/client", "Date": "2016-03-28T17:53:34Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage()) != null) { actionErrors.add(\"error\", new org.apache.struts.action.ActionMessage(e.getMessage())); }else { actionErrors.add(\"error\", new org.apache.struts.action.ActionMessage(\"label.invalid.student.number\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8677/buggy-version/src.main.java.org.fenixedu.academic.ui.struts.action.teacher.ManageExecutionCourseDA.java", "BodyUseAPI": ["org.apache.struts.action.ActionErrors.add(java.lang.String,org.apache.struts.action.ActionMessage)", "org.fenixedu.academic.service.services.exceptions.FenixServiceException.getMessage()"], "Fixed commit": "358bc82c1f4123799497cfffff5ee646aa8b1f1e", "Url": "https://api.github.com/repos/diutsu/fenixedu-academic", "Date": "2015-03-30T11:27:17Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.fenixframework.FenixFramework.getDomainObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((selectedShift.getLotacao().intValue()) <= (selectedShift.getStudentsSet().size())) { throw new org.fenixedu.academic.service.services.exceptions.FenixServiceException(\"error.exception.shift.full\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8677/buggy-version/src.main.java.org.fenixedu.academic.service.services.enrollment.shift.EnrollStudentInShifts.java", "BodyUseAPI": [], "Fixed commit": "358bc82c1f4123799497cfffff5ee646aa8b1f1e", "Url": "https://api.github.com/repos/diutsu/fenixedu-academic", "Date": "2015-03-30T11:27:17Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (kernelWidth.getValue().toString().equalsIgnoreCase(\"Specify\")) widthValue.setEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1147/buggy-version/src.main.java.org.geworkbenchweb.plugins.aracne.AracneUI.java", "BodyUseAPI": [], "Fixed commit": "750ac4d5e076dd877fbad742a90667b89296ce7d", "Url": "https://api.github.com/repos/geworkbench-group/geworkbench-web", "Date": "2015-07-10T21:48:15Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lothrazar.cyclicmagic.block.base.BaseTESR.getWorld().getCombinedLight(te.getPos().offset(EnumFacing.UP),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ambLight == 0) { ambLight = 15728656; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2062/buggy-version/src.main.java.com.lothrazar.cyclicmagic.block.base.BaseTESR.java", "BodyUseAPI": [], "Fixed commit": "96f92c9ebab02cb0377dba75d65151b0b04932d8", "Url": "https://api.github.com/repos/PrinceOfAmber/Cyclic", "Date": "2017-12-29T22:26:27Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ingredientAutoFillList.contains(i.getIngredient()))) team13.cmput301.recipefinder.controllers.IngredientManager.getIngredientManager().ingredientAutoFillList.add(i.getIngredient());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8453/buggy-version/RecipeFinder.src.team13.cmput301.recipefinder.controllers.IngredientManager.java", "BodyUseAPI": ["team13.cmput301.recipefinder.model.Ingredient.getIngredient()", "java.util.List<java.lang.String>.add(i.getIngredient())"], "Fixed commit": "e2a5fad9d3ab0adc3ff9267351bfcb78051bdd8d", "Url": "https://api.github.com/repos/jessicayuen/CMPUT301T13", "Date": "2013-03-31T23:34:49Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6862/buggy-version/src.main.java.cyano.basemetals.events.BucketHandler.java", "BodyUseAPI": [], "Fixed commit": "4621e91565355451825928108cfaf847ee11b53b", "Url": "https://api.github.com/repos/cyanobacterium/BaseMetals", "Date": "2016-03-20T20:12:06Z"},
{"Line": "=>1751", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(int,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (waitTime > 0) { wait(waitTime); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6200/buggy-version/src.freenet.node.RequestSender.java", "BodyUseAPI": ["freenet.node.RequestSender.wait(int)"], "Fixed commit": "12bcfb3057738e4836f9fb781cd7e8a5b2273614", "Url": "https://api.github.com/repos/freenet/fred", "Date": "2011-08-03T00:34:34Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RunningView.gps.getMapDataPoints()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((points.size()) > 1) { long time = (points.get(((points.size()) - 1)).getTime()) - (points.get(0).getTime()); long hours = time / ((1000 * 60) * 60); long minutes = (time - (((hours * 1000) * 60) * 60)) / (1000 * 60); long seconds = ((time - (((hours * 1000) * 60) * 60)) - ((minutes * 1000) * 60)) / 1000; java.lang.String s = java.lang.String.format(\"%02d:%02d:%02d\", hours, minutes, seconds); return s; }else { return \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1703/buggy-version/HeartRunning.src.com.local.heartrunning.PostRunView.java", "BodyUseAPI": ["java.util.ArrayList<com.local.heartrunning.MapDataPoint>.size()", "points.get(((points.size()) - 1)).getTime()", "points.get(0).getTime()", "java.util.ArrayList<com.local.heartrunning.MapDataPoint>.get(((points.size()) - 1))", "java.util.ArrayList<com.local.heartrunning.MapDataPoint>.get(int)"], "Fixed commit": "add932d187f0626778286ecca91bec4845e513c3", "Url": "https://api.github.com/repos/ashleyg/HeartRunning", "Date": "2013-01-08T21:58:22Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (referenceBand != null) { if (org.esa.beam.globalbedo.bbdr.TileExtractor.containsFloatData(referenceBand, referenceBand.getNoDataValue())) { return reproject; } }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3050/buggy-version/beam-globalbedo-bbdr-retrieval.src.main.java.org.esa.beam.globalbedo.bbdr.TileExtractor.java", "BodyUseAPI": ["org.esa.beam.framework.datamodel.Band.getNoDataValue()", "org.esa.beam.globalbedo.bbdr.TileExtractor.containsFloatData(org.esa.beam.framework.datamodel.Band,referenceBand.getNoDataValue())"], "Fixed commit": "45e6234c3f2d741de3ef437e80ba83f620465e3a", "Url": "https://api.github.com/repos/bcdev/beam-globalbedo", "Date": "2016-02-03T15:03:24Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.aegisql.conveyor.cart.command.GeneralCommand.getKey()) != null) { return new com.aegisql.conveyor.cart.command.GeneralCommand<K, V>(com.aegisql.conveyor.cart.command.GeneralCommand.getKey(), com.aegisql.conveyor.cart.command.GeneralCommand.getValue(), com.aegisql.conveyor.cart.command.GeneralCommand.getLabel(), com.aegisql.conveyor.cart.command.GeneralCommand.getCreationTime(), com.aegisql.conveyor.cart.command.GeneralCommand.getExpirationTime()); }else { return new com.aegisql.conveyor.cart.command.GeneralCommand<K, V>(getFilter(), com.aegisql.conveyor.cart.command.GeneralCommand.getValue(), com.aegisql.conveyor.cart.command.GeneralCommand.getLabel(), com.aegisql.conveyor.cart.command.GeneralCommand.getCreationTime(), com.aegisql.conveyor.cart.command.GeneralCommand.getExpirationTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8899/buggy-version/src.main.java.com.aegisql.conveyor.cart.command.GeneralCommand.java", "BodyUseAPI": [], "Fixed commit": "c6b7eee37e3f209ac285aa093c0405c4215ef918", "Url": "https://api.github.com/repos/aegisql/conveyor", "Date": "2017-02-09T18:05:37Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getPackageManager().hasSystemFeature(PackageManager.FEATURE_BLUETOOTH_LE))) { speaker.allow(true); speaker.speak(\"Necesitas una version m\u00e1s nueva de bluetooth para utilizar esta aplicacion\"); new android.os.Handler().postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { finish(); } }, 4000); returnValue = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/667/buggy-version/app.src.main.java.com.example.seba.funcionsuavizadora.SplashActivity.java", "BodyUseAPI": [], "Fixed commit": "a7a7c9e96d783f93734774d519170a34e7393a9e", "Url": "https://api.github.com/repos/sevax88/funcionSuavizadora", "Date": "2016-11-15T13:28:44Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(produits.get(position).mediumImage.equals(\"null\"))) { com.squareup.picasso.Picasso.with(getActivity().getApplicationContext()).load(produits.get(position).mediumImage).into(image); title.setText(produits.get(position).salePrice); title.append(\"$\"); }else if (!(produits.get(position).largeImage.equals(\"null\"))) { com.squareup.picasso.Picasso.with(getActivity().getApplicationContext()).load(produits.get(position).largeImage).into(image); title.setText(produits.get(position).salePrice); title.append(\"$\"); }else { title.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6370/buggy-version/Bestbuy.app.src.main.java.com.example.xpack.bestbuy.BestSellings.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(getActivity().getApplicationContext()).load(produits.get(position).mediumImage)", "produits.get(position).largeImage.equals(java.lang.String)", "java.util.ArrayList<com.example.xpack.bestbuy.Products>.get(int)", "java.util.ArrayList<com.example.xpack.bestbuy.Products>.get(int)", "java.util.ArrayList<com.example.xpack.bestbuy.Products>.get(int)", "com.squareup.picasso.Picasso.with(getActivity().getApplicationContext()).load(produits.get(position).largeImage).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.with(getActivity().getApplicationContext()).load(produits.get(position).mediumImage).into(android.widget.ImageView)", "java.util.ArrayList<com.example.xpack.bestbuy.Products>.get(int)", "android.widget.TextView.setText(produits.get(position).salePrice)", "java.util.ArrayList<com.example.xpack.bestbuy.Products>.get(int)", "com.squareup.picasso.Picasso.with(getActivity().getApplicationContext()).load(produits.get(position).largeImage)", "android.widget.TextView.setText(produits.get(position).salePrice)"], "Fixed commit": "0d983c0ebc6d30bea485c8c142b6099d1418cf29", "Url": "https://api.github.com/repos/xpack94/android", "Date": "2017-04-07T22:30:14Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Object>.getPackage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pkg == null) { return suffix; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7123/buggy-version/gru.src.main.groovy.com.agorapulse.gru.AbstractClient.java", "BodyUseAPI": [], "Fixed commit": "63d097dd4d2205f7c88db179d3553eedd4e7aada", "Url": "https://api.github.com/repos/agorapulse/gru", "Date": "2017-08-24T03:49:56Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((-1) == (itemID)) android.widget.Toast.makeText(getApplicationContext(), getString(R.string.please_select_an_item), Toast.LENGTH_SHORT).show(); else showEditDialog(itemID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4970/buggy-version/app.src.main.java.com.example.show.todolistv2.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4d3ee0340318005d4c2e9424a39ad484adecb347", "Url": "https://api.github.com/repos/ShowLiao/todolist", "Date": "2017-08-18T18:19:30Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mAppDataListAdapter.isEmpty()) { if (com.asgj.android.appusage.Utility.UsageSharedPrefernceHelper.isServiceRunning(com.asgj.android.appusage.activities.UsageListFragment.SamplePagerAdapter.getActivity())) { textViewNoData.setVisibility(View.VISIBLE); }else { java.util.Calendar endCalendar; endCalendar = java.util.Calendar.getInstance(); endCalendar.setTimeInMillis(com.asgj.android.appusage.Utility.UsageSharedPrefernceHelper.getCalendar(com.asgj.android.appusage.activities.UsageListFragment.SamplePagerAdapter.getActivity(), \"endCalendar\")); if ((com.asgj.android.appusage.Utility.UsageSharedPrefernceHelper.getShowByType(com.asgj.android.appusage.activities.UsageListFragment.SamplePagerAdapter.getActivity()).equals(getString(R.string.string_Custom))) && ((com.asgj.android.appusage.Utility.Utils.compareDates(java.util.Calendar.getInstance(), endCalendar)) > 0)) { textViewNoData.setVisibility(View.VISIBLE); }else { textViewNoDataStartTracking.setVisibility(View.VISIBLE); } } container.addView(viewNoData); returnView = viewNoData; }else { textViewNoData.setVisibility(View.GONE); textViewNoDataStartTracking.setVisibility(View.GONE); container.addView(viewData); returnView = viewData; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7963/buggy-version/src.com.asgj.android.appusage.activities.UsageListFragment.java", "BodyUseAPI": [], "Fixed commit": "fcc6e64cb3f617d2798ca7124629b887a814d9a9", "Url": "https://api.github.com/repos/gaurav133/PhoneUse", "Date": "2015-06-27T06:38:33Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position == 1) && ((mMusicDataListAdapter) != null)) { title.setVisibility(View.GONE); musicListView.setChildDivider(null); musicListView.setDivider(null); musicListView.setDividerHeight(0); musicListView.setGroupIndicator(null); musicListView.setVisibility(View.VISIBLE); musicListView.setAdapter(mMusicDataListAdapter); if ((mMusicDataListAdapter.getGroupCount()) == 0) { if (com.asgj.android.appusage.Utility.UsageSharedPrefernceHelper.isServiceRunning(com.asgj.android.appusage.activities.UsageListFragment.SamplePagerAdapter.getActivity())) { textViewNoData.setVisibility(View.VISIBLE); }else { java.util.Calendar endCalendar; endCalendar = java.util.Calendar.getInstance(); endCalendar.setTimeInMillis(com.asgj.android.appusage.Utility.UsageSharedPrefernceHelper.getCalendar(com.asgj.android.appusage.activities.UsageListFragment.SamplePagerAdapter.getActivity(), \"endCalendar\")); if ((com.asgj.android.appusage.Utility.UsageSharedPrefernceHelper.getShowByType(com.asgj.android.appusage.activities.UsageListFragment.SamplePagerAdapter.getActivity()).equals(getString(R.string.string_Custom))) && ((com.asgj.android.appusage.Utility.Utils.compareDates(java.util.Calendar.getInstance(), endCalendar)) > 0)) { textViewNoData.setVisibility(View.VISIBLE); }else { textViewNoDataStartTracking.setVisibility(View.VISIBLE); } } container.addView(viewNoData); returnView = viewNoData; }else { textViewNoData.setVisibility(View.GONE); textViewNoDataStartTracking.setVisibility(View.GONE); container.addView(viewData); returnView = viewData; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7963/buggy-version/src.com.asgj.android.appusage.activities.UsageListFragment.java", "BodyUseAPI": [], "Fixed commit": "fcc6e64cb3f617d2798ca7124629b887a814d9a9", "Url": "https://api.github.com/repos/gaurav133/PhoneUse", "Date": "2015-06-27T06:38:33Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(argument.equalsIgnoreCase(\"key\"))) { item = mud.removeItemFromRoom(currRoom.getRoomName(), argument); }else { item = mud.getItemFromName(argument); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5649/buggy-version/src.Controller.Server.java", "BodyUseAPI": ["Model.SerialKillerMud.removeItemFromRoom(currRoom.getRoomName(),java.lang.String)", "Model.SerialKillerMud.getItemFromName(java.lang.String)"], "Fixed commit": "abf39359b2630e7bc207307e5abecca88da83fc5", "Url": "https://api.github.com/repos/albychaj/serial-killer-mud2.0", "Date": "2014-12-17T02:14:46Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ucchyocean.ct.config.ClassData.getPotionTypeByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(type.isInstant())) { potion.setHasExtendedDuration(section.getBoolean(\"extend\", false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4670/buggy-version/src.main.java.com.github.ucchyocean.ct.config.ClassData.java", "BodyUseAPI": [], "Fixed commit": "22d5acf849ef15a18c1f99486bacbb40e44937f5", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2014-03-11T13:56:48Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.shredzone.cilla.core.model.Picture.getCreateTimeZone()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tz == null) { tz = section.getDefaultTimeZone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4511/buggy-version/cilla-service.src.main.java.org.shredzone.cilla.service.impl.PictureServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0543877faf70a0fa313c75c5d03cb673d64268d4", "Url": "https://api.github.com/repos/shred/cilla", "Date": "2012-03-10T16:15:10Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((readingPlan) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1724/buggy-version/Alkitab.src.yuku.alkitab.base.ac.ReadingPlanActivity.java", "BodyUseAPI": [], "Fixed commit": "8ec162597f5c5821991019b41e4c9b92184e7e6f", "Url": "https://api.github.com/repos/yukuku/androidbible", "Date": "2013-11-05T03:35:09Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDialog) != null) { mDialog.setCancelable(cancelable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4161/buggy-version/pickerview.src.main.java.com.bigkoo.pickerview.view.BasePickerView.java", "BodyUseAPI": [], "Fixed commit": "0f306b3e235db093bd7606429e8e67ff9ca714ec", "Url": "https://api.github.com/repos/Bigkoo/Android-PickerView", "Date": "2017-11-08T07:08:36Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (world.isRemote) { GraveStone.tileentity.TileEntityGSGraveStone entity = ((GraveStone.tileentity.TileEntityGSGraveStone) (world.getBlockTileEntity(x, y, z))); if (entity != null) { java.lang.String deathText = entity.getDeathText(); if (!(deathText.equals(\"\"))) { entityPlayer.sendChatToPlayer(deathText); if ((entity.getAge()) != (-1)) { entityPlayer.sendChatToPlayer(((\"Had lived \" + (entity.getAge())) + \" days\")); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4785/buggy-version/block.BlockGSGraveStone.java", "BodyUseAPI": ["net.minecraft.world.World.getBlockTileEntity(int,int,int)"], "Fixed commit": "231db4acbdfb0a936aa7af0078bc3e759e625679", "Url": "https://api.github.com/repos/NightKosh/GraveStone-mod", "Date": "2013-04-30T22:27:30Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (classPath == null) { classPath = \".\"; }else { classPath += \":.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/61/buggy-version/modules.siddhi-core.src.main.java.org.wso2.siddhi.core.util.SiddhiExtensionLoader.java", "BodyUseAPI": [], "Fixed commit": "b92c7257c9e169dcb0c63d2b94b3a6ba7d3f530c", "Url": "https://api.github.com/repos/dilini-muthumala/siddhi", "Date": "2015-04-24T09:34:57Z"},
{"Line": "=>1958", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.util.EntityUtil.getFirst(delegator.findByAnd(\"ZuczugProduct\", org.ofbiz.base.util.UtilMisc.toMap(\"isVirtual\", \"N\", \"productId\", productAssoc.get(\"productIdTo\"))))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.ofbiz.base.util.UtilValidate.isNotEmpty(variantProduct)) { products.add(variantProduct); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4804/buggy-version/hot-deploy.zuczugcommon.src.com.zuczug.product.ZuczugProductServices.java", "BodyUseAPI": ["java.util.List<org.ofbiz.entity.GenericValue>.add(org.ofbiz.entity.GenericValue)"], "Fixed commit": "78ff3117ef33ee9f73dba5caee185143d22eee20", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-11-18T08:28:24Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.motechproject.tama.eventlogging.repository.AllCallDetails.getByCallId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (callDetail == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4808/buggy-version/src.main.java.org.motechproject.tama.eventlogging.service.EventLoggingServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "66e219163f2cfb551cbe9c3dbd6cdbff6a028d9c", "Url": "https://api.github.com/repos/motech/TAMA-Web", "Date": "2011-09-21T12:32:11Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((16 ^ keyLength) < numKeys) { throw new java.lang.IllegalArgumentException(\"Keys consist of hex digits, so the total number of keys must be larger than 16^key length\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6032/buggy-version/SSC.src.Mapping.java", "BodyUseAPI": [], "Fixed commit": "9f522ebcd1e6faf259c9c76894bcd46aa6f43551", "Url": "https://api.github.com/repos/snoooze03/costOfVolatile", "Date": "2013-05-14T07:17:13Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.isAssignableFrom(att.getKeyType().getTypeClass())", "java.lang.Class.isAssignableFrom(att.getValueType().getTypeClass())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!isSpecificKey) && (!isSpecificValue)) { conf.setBoolean(AvroJob.MAP_OUTPUT_IS_REFLECT, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5472/buggy-version/src.main.java.com.cloudera.crunch.type.avro.AvroGroupedTableType.java", "BodyUseAPI": [], "Fixed commit": "7e5e2ae8a03e22871fa07393bc5a06fc69b1116e", "Url": "https://api.github.com/repos/tzolov/crunch", "Date": "2012-05-03T23:52:46Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloudera.crunch.type.avro.SafeAvroSerialization.getConf()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (conf.getBoolean(AvroJob.MAP_OUTPUT_IS_REFLECT, false)) { com.cloudera.crunch.type.avro.ReflectDataFactory factory = ((com.cloudera.crunch.type.avro.ReflectDataFactory) (org.apache.hadoop.util.ReflectionUtils.newInstance(conf.getClass(\"crunch.reflectdatafactory\", com.cloudera.crunch.type.avro.ReflectDataFactory.class), conf))); datumReader = factory.getReader(schema); }else { datumReader = new org.apache.avro.specific.SpecificDatumReader<T>(schema); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5472/buggy-version/src.main.java.com.cloudera.crunch.type.avro.SafeAvroSerialization.java", "BodyUseAPI": ["org.apache.hadoop.util.ReflectionUtils.newInstance(conf.getClass(\"crunch.reflectdatafactory\", com.cloudera.crunch.type.avro.ReflectDataFactory.class),org.apache.hadoop.conf.Configuration)", "org.apache.hadoop.conf.Configuration.getClass(java.lang.String,java.lang.Class)"], "Fixed commit": "7e5e2ae8a03e22871fa07393bc5a06fc69b1116e", "Url": "https://api.github.com/repos/tzolov/crunch", "Date": "2012-05-03T23:52:46Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["otherCellCollection.get(label).toArray(org.kframework.backend.java.symbolic.Cell[])", "cellCollection.get(label).toArray(org.kframework.backend.java.symbolic.Cell[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((otherCells.length) > (cells.length)) { fail(cellCollection, otherCellCollection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8100/buggy-version/src.javasources.KTool.src.org.kframework.backend.java.symbolic.SymbolicUnifier.java", "BodyUseAPI": [], "Fixed commit": "b7178cc9def62d6fd939b0d5d5929b773bab1aad", "Url": "https://api.github.com/repos/yilongli/k", "Date": "2014-08-31T03:58:08Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == blob) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5463/buggy-version/src.main.java.org.jocean.idiom.block.BlockUtils.java", "BodyUseAPI": [], "Fixed commit": "9730067cad732474c5c61d6da69d441a042c752e", "Url": "https://api.github.com/repos/isdom/jocean-idiom", "Date": "2014-05-22T13:43:44Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((maintenanceTypes.size()) > (maintenanceTypeCombo.getSelectedIndex())) { if ((vehicles.size()) > (vehicleCombo.getSelectedIndex())) { carrental.Maintenance newMaintenance = new carrental.Maintenance(carrental.CarRental.getInstance().requestNewMaintenanceId(), vehicles.get(vehicleCombo.getSelectedIndex()).getID(), new java.sql.Timestamp(dateFormat.parse(dateStartField.getText().trim()).getTime()), new java.sql.Timestamp(dateFormat.parse(dateEndField.getText().trim()).getTime()), maintenanceTypes.get(maintenanceTypeCombo.getSelectedIndex()).getID()); carrental.CarRental.getInstance().saveMaintenance(newMaintenance); maintenanceList = carrental.CarRental.getInstance().requestMaintenances(); }else { carrental.CarRental.getInstance().appendLog(\"No vehicle selected, or invalid vehicle\"); } }else { carrental.CarRental.getInstance().appendLog(\"No maintenance selected, or invalid maintenance.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6130/buggy-version/src.carrental.MaintenancePanel.java", "BodyUseAPI": ["java.util.ArrayList<carrental.MaintenanceType>.get(int)", "javax.swing.JComboBox.getSelectedIndex()", "maintenanceTypes.get(maintenanceTypeCombo.getSelectedIndex()).getID()"], "Fixed commit": "4839ae63ad3f7ff965823e80fa6d969e7c6d5f50", "Url": "https://api.github.com/repos/CNN/CarRental", "Date": "2011-12-18T20:13:46Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.previous) == (selfNode)) || ((this.next) == (selfNode))) firstSetup = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6288/buggy-version/node.src.be.dist.node.NodeSetup.java", "BodyUseAPI": [], "Fixed commit": "17ded6ecc09329c4f35686f4ae9fcd2622b6804c", "Url": "https://api.github.com/repos/iliessens/SystemY", "Date": "2017-12-06T11:32:10Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstSetup) doReplicationWhenSetup();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6288/buggy-version/node.src.be.dist.node.NodeSetup.java", "BodyUseAPI": [], "Fixed commit": "17ded6ecc09329c4f35686f4ae9fcd2622b6804c", "Url": "https://api.github.com/repos/iliessens/SystemY", "Date": "2017-12-06T11:32:10Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstSetup) doReplicationWhenSetup();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6288/buggy-version/node.src.be.dist.node.NodeSetup.java", "BodyUseAPI": [], "Fixed commit": "17ded6ecc09329c4f35686f4ae9fcd2622b6804c", "Url": "https://api.github.com/repos/iliessens/SystemY", "Date": "2017-12-06T11:32:10Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(org.apache.commons.lang3.StringUtils.isEmpty(customScript))) || (!(org.apache.commons.lang3.ArrayUtils.isEmpty(contextPaths)))) { check.setInterval(interval); check.setScript(buildScript(customScript, contextPaths, host, servicePort)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8825/buggy-version/src.main.java.gov.usgs.cida.ConsulRegistratorMojo.java", "BodyUseAPI": ["gov.usgs.cida.ConsulRegistratorMojo.buildScript(java.lang.String,java.lang.String[],java.lang.String,int)", "Registration.Check.setScript(java.lang.String)"], "Fixed commit": "7b4e9f8fdb4784fe3863f311166013a0d971e587", "Url": "https://api.github.com/repos/USGS-CIDA/consul-registrator-maven-plugin", "Date": "2015-01-20T21:40:33Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(ttl))) { check.setTtl(ttl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8825/buggy-version/src.main.java.gov.usgs.cida.ConsulRegistratorMojo.java", "BodyUseAPI": ["Registration.Check.setTtl(java.lang.String)"], "Fixed commit": "7b4e9f8fdb4784fe3863f311166013a0d971e587", "Url": "https://api.github.com/repos/USGS-CIDA/consul-registrator-maven-plugin", "Date": "2015-01-20T21:40:33Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dl.size()) > 1) { list.add(dl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6632/buggy-version/src.fr.thumbnailsdb.DuplicateMediaFinder.java", "BodyUseAPI": ["java.util.TreeSet<fr.thumbnailsdb.DuplicateMediaFinder.DuplicateGroup>.add(fr.thumbnailsdb.DuplicateMediaFinder.DuplicateGroup)"], "Fixed commit": "c65bee5f22597944b61dc8cf9b1ebe74793fe446", "Url": "https://api.github.com/repos/fabricehuet/RESTfulSimilar", "Date": "2012-09-28T15:53:31Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queryInfo.getWhereStmtInfo()) != null) { java.util.Map<java.lang.String, java.lang.Object> whereInfoMap = vql.web.service.WhereInfoConverter.convertInfoToMap(queryInfo.getWhereStmtInfo()); queryInfoMap.put(\"where_info\", whereInfoMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3558/buggy-version/VQLweb.src.main.java.vql.web.service.VisualizeService.java", "BodyUseAPI": ["queryParser.vo.QueryInfo.getWhereStmtInfo()", "vql.web.service.WhereInfoConverter.convertInfoToMap(queryInfo.getWhereStmtInfo())"], "Fixed commit": "44ccacdaacaa9b948e2db64f7123678ecc7fe9ca", "Url": "https://api.github.com/repos/yh-kin/VQLweb", "Date": "2015-05-17T05:02:39Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (containerConfiguration.containsKey(org.arquillian.cube.docker.impl.docker.DockerClientExecutor.ENTRYPOINT)) { java.util.List<java.lang.String> entrypoints = org.arquillian.cube.docker.impl.docker.DockerClientExecutor.asListOfString(containerConfiguration, org.arquillian.cube.docker.impl.docker.DockerClientExecutor.ENTRYPOINT); createContainerCmd.withEntrypoint(entrypoints.toArray(new java.lang.String[entrypoints.size()])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5081/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.docker.DockerClientExecutor.java", "BodyUseAPI": ["org.arquillian.cube.docker.impl.docker.DockerClientExecutor.asListOfString(java.util.Map<java.lang.String, java.lang.Object>,java.lang.String)"], "Fixed commit": "354184a8e31fd6c7441a27b5db96a7d449c90883", "Url": "https://api.github.com/repos/jamesnetherton/arquillian-cube", "Date": "2015-06-09T11:48:32Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blockNum >= (fh.totalNumOfBlocks)) (fh.totalNumOfBlocks)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2339/buggy-version/src.minidb.storagemanager.StorageManager.java", "BodyUseAPI": [], "Fixed commit": "66dc59080622fde57a5a4b37ce85d814f78829a4", "Url": "https://api.github.com/repos/kajogo777/minidb-LIR", "Date": "2016-03-18T13:35:46Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((child.getNodeType()) == (org.w3c.dom.Node.COMMENT_NODE)) { com.tcmj.common.xml.map.intern.XMLMapDomAccessor.LOG.trace(\"skipping comment: {}\", child.getNodeValue()); }else if ((child.getNodeType()) == (org.w3c.dom.Node.TEXT_NODE)) { com.tcmj.common.xml.map.intern.XMLMapDomAccessor.LOG.trace(\"skipping text node: {}\", child.getNodeValue()); }else { com.tcmj.common.xml.map.intern.XMLMapDomAccessor.LOG.trace(\"skipping nodeType: {}\", child.getNodeType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4909/buggy-version/tcmj.commons-basic.src.main.java.com.tcmj.common.xml.map.intern.XMLMapDomAccessor.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String,java.lang.String)", "org.slf4j.Logger.trace(java.lang.String,short)", "org.w3c.dom.Node.getNodeType()", "org.slf4j.Logger.trace(java.lang.String,java.lang.String)", "org.w3c.dom.Node.getNodeValue()", "org.w3c.dom.Node.getNodeValue()", "org.w3c.dom.Node.getNodeType()"], "Fixed commit": "2177f0c3eec808ab1fdf00f4856751f74e592527", "Url": "https://api.github.com/repos/tcmj/javaone", "Date": "2015-10-11T18:50:36Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["femr.data.daos.IRepository<femr.common.models.IPatient>.findAll(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((patients.size()) > 0) { response.setResponseObject(patients); }else { response.addError(\"patients\", \"No patients available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5423/buggy-version/app.femr.business.services.ResearchService.java", "BodyUseAPI": ["femr.business.dtos.ServiceResponse<java.util.List<? extends femr.common.models.IPatient>>.setResponseObject(java.util.List<? extends femr.common.models.IPatient>)"], "Fixed commit": "8087ae490cd37f0146dd27c3f34224f93ebd1f28", "Url": "https://api.github.com/repos/kevinzurek/femr", "Date": "2014-03-09T04:02:22Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (language == null) language = \"fr-FR\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5330/buggy-version/app.src.main.java.com.example.yassine.mymdb.BaseDrawerActivity.java", "BodyUseAPI": [], "Fixed commit": "f328bec983e88e8e1cc93d7f32ed1903a3790628", "Url": "https://api.github.com/repos/cheqriyass/MyMdb", "Date": "2017-11-23T20:53:07Z"},
{"Line": "=>1562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.servlet.sip.message.SipServletRequestImpl.getTransaction()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (sessionCreatingTransactionRequestTransaction != null) { sessionCreatingTransactionRequestTransactionBranchId = sessionCreatingTransactionRequestTransaction.getBranchId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/427/buggy-version/sip-servlets-impl.src.main.java.org.mobicents.servlet.sip.core.session.SipSessionImpl.java", "BodyUseAPI": ["javax.sip.Transaction.getBranchId()"], "Fixed commit": "ede4a376c98814ced53e22d00c4b6264b05083fd", "Url": "https://api.github.com/repos/RestComm/sip-servlets", "Date": "2016-04-28T13:43:07Z"},
{"Line": "=>1567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.servlet.sip.message.SipServletRequestImpl.getTransaction()", "javax.sip.Transaction.getBranchId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((sessionCreatingTransactionRequestTransaction != null) && (branchId.equals(sessionCreatingTransactionRequestTransactionBranchId))) { if (org.mobicents.servlet.sip.core.session.SipSessionImpl.logger.isDebugEnabled()) { org.mobicents.servlet.sip.core.session.SipSessionImpl.logger.debug((((((((((((((\"Session \" + (key)) + \": cleaning up \") + (sessionCreatingTransactionRequest)) + \" since transaction \") + transaction) + \" with branch id \") + branchId) + \" is the same as sessionCreatingRequestTransaction \") + sessionCreatingTransactionRequestTransaction) + \" with branch id \") + sessionCreatingTransactionRequestTransactionBranchId) + \" and method \") + sessionCreatingTransactionRequestMethod)); } sessionCreatingTransactionRequest.cleanUp(); if ((((sessionCreatingDialog) != null) || ((proxy) != null)) || (JainSipUtils.DIALOG_CREATING_METHODS.contains(sessionCreatingTransactionRequestMethod))) { if ((org.mobicents.servlet.sip.core.session.SipSessionImpl.logger.isDebugEnabled()) && ((sessionCreatingTransactionRequest) != null)) { org.mobicents.servlet.sip.core.session.SipSessionImpl.logger.debug((((\"nullifying sessionCreatingTransactionRequest\" + (sessionCreatingTransactionRequest)) + \" from Session \") + (key))); } sessionCreatingTransactionRequest = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/427/buggy-version/sip-servlets-impl.src.main.java.org.mobicents.servlet.sip.core.session.SipSessionImpl.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug((((((((((((((\"Session \" + (key)) + \": cleaning up \") + (sessionCreatingTransactionRequest)) + \" since transaction \") + transaction) + \" with branch id \") + branchId) + \" is the same as sessionCreatingRequestTransaction \") + sessionCreatingTransactionRequestTransaction) + \" with branch id \") + sessionCreatingTransactionRequestTransactionBranchId) + \" and method \") + sessionCreatingTransactionRequestMethod))"], "Fixed commit": "ede4a376c98814ced53e22d00c4b6264b05083fd", "Url": "https://api.github.com/repos/RestComm/sip-servlets", "Date": "2016-04-28T13:43:07Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((res.getURI()) == null) || (((res.getURI()) != null) && (!(res.getURI().equals(\"http://www.w3.org/2000/01/rdf-schema#Resource\"))))) { tmp = getSuperclassName(res, info); if (tmp != null) { intersection.add(tmp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5206/buggy-version/src.Structure.ClassAnalyzer.java", "BodyUseAPI": ["Structure.ClassAnalyzer.getSuperclassName(Structure.OntResource,Structure.ClassInfo)"], "Fixed commit": "e05eeec28b9a9bef6c2b1e5250969c344361244f", "Url": "https://api.github.com/repos/dontpanic42/Diss-O-Tron", "Date": "2014-04-27T09:16:40Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.common.GooglePlayServicesUtil.isGooglePlayServicesAvailable(com.primerworldapps.pointer.ui.activity.LoginActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (resultCode == (com.google.android.gms.common.ConnectionResult.SUCCESS)) { initBackgroundMap(); }else { com.google.android.gms.common.GooglePlayServicesUtil.getErrorDialog(resultCode, this, 0).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3719/buggy-version/Pointer.src.com.primerworldapps.pointer.ui.activity.LoginActivity.java", "BodyUseAPI": ["com.google.android.gms.common.GooglePlayServicesUtil.getErrorDialog(resultCode, this, 0).show()", "com.google.android.gms.common.GooglePlayServicesUtil.getErrorDialog(int,com.primerworldapps.pointer.ui.activity.LoginActivity,int)"], "Fixed commit": "5dd8cca7cd250e8e45e3c15e02793a7ad9367632", "Url": "https://api.github.com/repos/PrimerUA/Pointer", "Date": "2013-12-01T20:17:46Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.material.Diode.getFacing()", "org.bukkit.event.block.BlockRedstoneEvent.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((block.getRelative(f).getTypeId()) != 0) handleDirectWireInput(new com.sk89q.worldedit.WorldVector(w, (x + (f.getModX())), (y - 1), (z + (f.getModZ()))), block, oldLevel, newLevel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5197/buggy-version/src.main.java.com.sk89q.craftbook.bukkit.MechanicListenerAdapter.java", "BodyUseAPI": ["org.bukkit.block.BlockFace.getModX()", "com.sk89q.craftbook.bukkit.MechanicListenerAdapter.MechanicBlockListener.handleDirectWireInput(com.sk89q.worldedit.WorldVector,org.bukkit.block.Block,int,int)", "org.bukkit.block.BlockFace.getModZ()"], "Fixed commit": "a771ff8b6a0e632bbfcf5cc4c1fba0a74646c739", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-02-03T04:37:50Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((projectile.getShooter()) instanceof org.bukkit.entity.Player) { attacker = ((org.bukkit.entity.Player) (projectile.getShooter())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9184/buggy-version/API.src.main.java.com.comze_instancelabs.minigamesapi.ArenaListener.java", "BodyUseAPI": ["org.bukkit.entity.Projectile.getShooter()"], "Fixed commit": "db1ed56b6a1bdd0b432a9228350ea557c7130508", "Url": "https://api.github.com/repos/instance01/MinigamesAPI", "Date": "2014-08-31T15:55:45Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dragome.commons.javascript.ScriptHelper.eval(java.lang.String,com.dragome.html.dom.w3c.BrowserDomHandler)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (object != null) result = com.dragome.enhancers.jsdelegate.JsDelegateFactory.createFrom(object, org.w3c.dom.Element.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1606/buggy-version/dragome-core.src.main.java.com.dragome.html.dom.w3c.BrowserDomHandler.java", "BodyUseAPI": ["com.dragome.enhancers.jsdelegate.JsDelegateFactory.createFrom(java.lang.Object,java.lang.Class)"], "Fixed commit": "fe3ba314e2b85c945178f5116ce6ae1b9be9f3fa", "Url": "https://api.github.com/repos/dragome/dragome-sdk", "Date": "2015-01-02T00:20:10Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connector) != null) { connector.commitOffsets(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3484/buggy-version/src.main.java.com.sachin.kafka.consumer.InfraKafkaConsumer.java", "BodyUseAPI": [], "Fixed commit": "e3ce4ecf500944901ca9482d85e68fc589e05a49", "Url": "https://api.github.com/repos/sachincode/infra-kafka-client", "Date": "2017-09-22T12:21:18Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.internalConsumer) == null) { this.internalConsumer = new com.sachin.kafka.consumer.InfraKafkaConsumer.InternalConsumer(topic, group); }else { this.internalConsumer.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3484/buggy-version/src.main.java.com.sachin.kafka.consumer.InfraKafkaConsumer.java", "BodyUseAPI": [], "Fixed commit": "e3ce4ecf500944901ca9482d85e68fc589e05a49", "Url": "https://api.github.com/repos/sachincode/infra-kafka-client", "Date": "2017-09-22T12:21:18Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connector) != null) { connector.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3484/buggy-version/src.main.java.com.sachin.kafka.consumer.InfraKafkaConsumer.java", "BodyUseAPI": [], "Fixed commit": "e3ce4ecf500944901ca9482d85e68fc589e05a49", "Url": "https://api.github.com/repos/sachincode/infra-kafka-client", "Date": "2017-09-22T12:21:18Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirstSelection) { isFirstSelection = false; }else { if (position == ((getCount()) - 1)) { android.util.Log.d(no.wtw.android.dynamicspinner.widget.DynamicSpinner.TAG, \"Adding an item\"); listener.onItemAdd(); }else { android.util.Log.d(no.wtw.android.dynamicspinner.widget.DynamicSpinner.TAG, \"Selected an item\"); listener.onItemSelected(((T) (getItemAtPosition(position)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2222/buggy-version/src.no.wtw.android.dynamicspinner.widget.DynamicSpinner.java", "BodyUseAPI": [], "Fixed commit": "06d46b709166fbc250667f4d05d752d1aee1f7aa", "Url": "https://api.github.com/repos/wtw-software/AndroidDynamicSpinner", "Date": "2014-08-11T07:17:39Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.che.ide.ext.runner.client.models.Environment.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.eclipse.che.ide.ext.runner.client.util.EnvironmentIdValidator.isValid(environmentId))) { environmentId = com.google.gwt.http.client.URL.encode(environmentId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2319/buggy-version/plugin-runner.che-plugin-runner-ext-runner.src.main.java.org.eclipse.che.ide.ext.runner.client.tabs.templates.environment.EnvironmentWidget.java", "BodyUseAPI": ["com.google.gwt.http.client.URL.encode(java.lang.String)"], "Fixed commit": "2d0ac18e6ea279f4bbc08e5a88ca2ca4e2f52848", "Url": "https://api.github.com/repos/codenvy-legacy/che-plugins", "Date": "2015-06-24T13:33:41Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eclipse.rap.rwt.internal.service.ContextProvider.hasContext()) { java.lang.Object updater = org.eclipse.rap.rwt.RWT.getUISession().getAttribute(com.eclipsesource.tabris.internal.ui.UpdateUtil.UPDATER_PROPERTY); if ((updater != null) && (updater instanceof com.eclipsesource.tabris.internal.ui.UIUpdater)) { result = ((com.eclipsesource.tabris.internal.ui.UIUpdater) (updater)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4165/buggy-version/com.eclipsesource.tabris.src.com.eclipsesource.tabris.internal.ui.UpdateUtil.java", "BodyUseAPI": [], "Fixed commit": "10a8ea5b52225a18c4e14424359ba553728fd819", "Url": "https://api.github.com/repos/eclipsesource/tabris", "Date": "2013-10-29T10:23:01Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemStack.contains(retval)) { shadowStack.push(second); shadowStack.push(first); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1659/buggy-version/src.astnodes.builders.FunctionContentBuilder.java", "BodyUseAPI": [], "Fixed commit": "f77075148816980e9698ca4897ed91bfee43944c", "Url": "https://api.github.com/repos/fabsx00/joern", "Date": "2013-09-11T22:52:37Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (c == '\\n') { ndx--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7976/buggy-version/jodd-props.src.main.java.jodd.props.PropsParser.java", "BodyUseAPI": [], "Fixed commit": "cdfc4144294ca0896d0bc413317669643d53d11e", "Url": "https://api.github.com/repos/moh-sushi/jodd", "Date": "2017-10-14T08:00:46Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(name.startsWith(\"@\"))) de.fro_ozen.cl4ire.UserManager.createUser(name); else de.fro_ozen.cl4ire.UserManager.createUser(name.substring(1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1279/buggy-version/Source.src.de.fro_ozen.cl4ire.IRCInputListener.java", "BodyUseAPI": ["de.fro_ozen.cl4ire.UserManager.createUser(java.lang.String)", "de.fro_ozen.cl4ire.UserManager.createUser(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "8c1ee2ac8b3402ac745937eace8dc9e0dcef95dd", "Url": "https://api.github.com/repos/froozen/Claire", "Date": "2013-09-04T16:34:07Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGridPaint) == null) { mGridPaint = new android.graphics.Paint(android.graphics.Paint.ANTI_ALIAS_FLAG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6447/buggy-version/achartengine.src.org.achartengine.chart.XYChart.java", "BodyUseAPI": [], "Fixed commit": "d618ef38b82f4ada702466b735162ecd0ef83f08", "Url": "https://api.github.com/repos/ddanny/achartengine", "Date": "2016-02-02T10:12:27Z"},
{"Line": "=>812", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getIconId()) != 0) { availableWidth -= (mEventTextSize) + (mEventPadding); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4704/buggy-version/library.src.main.java.com.alamkanak.weekview.WeekView.java", "BodyUseAPI": [], "Fixed commit": "e1c275aebf6ad477458c5508987ca8c6d2f3adac", "Url": "https://api.github.com/repos/vermotr/Android-Week-View", "Date": "2016-01-24T21:09:49Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (User.godlist.contains(player.getName())) { event.setCancelled(true); player.playEffect(EntityEffect.HURT); if ((player.getGameMode()) == (org.bukkit.GameMode.CREATIVE)) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1268/buggy-version/src.main.java.me.ceramictitan.simplyjesus.Listeners.MyPlayerListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.getGameMode()", "org.bukkit.entity.Player.playEffect(EntityEffect.HURT)"], "Fixed commit": "7bd709b0491e18619cc90724d2765df0ae9d761f", "Url": "https://api.github.com/repos/CeramicTitan/SimplyJesus", "Date": "2013-01-16T13:30:40Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teamd.taxi.models.TaxiOrderForm.getServiceType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (serviceType.isDestinationLocationsChain()) { java.lang.String source = form.getSource().get(0); java.lang.String destination = form.getDestination().get(0); routes.add(new com.teamd.taxi.service.Route(null, RouteStatus.QUEUED, source, destination, false)); }else { java.lang.String source = form.getSource().get(0); mapService.checkAddress(source); routes.add(new com.teamd.taxi.service.Route(null, RouteStatus.QUEUED, source, null, false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6201/buggy-version/src.main.java.com.teamd.taxi.service.TaxiOrderService.java", "BodyUseAPI": [], "Fixed commit": "21d489b830c70ebd57664751071411d3f528fc52", "Url": "https://api.github.com/repos/NetCracker-TeamD/TaxiService", "Date": "2015-05-22T12:18:46Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sslContext) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/143/buggy-version/libnetcipher.src.info.guardianproject.netcipher.client.StrongBuilderBase.java", "BodyUseAPI": [], "Fixed commit": "3052f179fd80ee5bfdf127f5b63e4c0e8a705b0c", "Url": "https://api.github.com/repos/commonsguy/NetCipher", "Date": "2016-05-17T11:44:33Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > existingDataLen) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6645/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "9552fb7c459de639804093bcb60336b6a5d792ab", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-07T15:16:37Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mainView) instanceof view.DoctorMainView) { openSlots = eventH.getDoctorDayAppointments(mainView.getAppID(), getDate()); }else openSlots = eventH.getDayEvents(getDate());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1737/buggy-version/src.control.CalendarProgram.java", "BodyUseAPI": [], "Fixed commit": "fdd970deecff76c11d6fadfbe765e6fafb61bbea", "Url": "https://api.github.com/repos/SWDESPA-S18T2AY1617/UDC_Group4", "Date": "2017-04-09T13:05:26Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mainView) instanceof view.DoctorMainView) { closedSlots = eventH.getDoctorDayAppointments(mainView.getAppID(), getDate()); }else closedSlots = eventH.getDayEvents(getDate());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1737/buggy-version/src.control.CalendarProgram.java", "BodyUseAPI": [], "Fixed commit": "fdd970deecff76c11d6fadfbe765e6fafb61bbea", "Url": "https://api.github.com/repos/SWDESPA-S18T2AY1617/UDC_Group4", "Date": "2017-04-09T13:05:26Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((paths[path[((path.length) - 1)]]) == null) { if ((predecessors[path[0]].size()) == 1) { path = br.usp.each.saeg.asm.defuse.FlowAnalyzer.merge(getPath(predecessors[path[0]].iterator().next()), path); } return java.util.Arrays.copyOf(path, ((br.usp.each.saeg.asm.defuse.FlowAnalyzer.indexOf(path, insn)) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3709/buggy-version/src.main.java.br.usp.each.saeg.asm.defuse.FlowAnalyzer.java", "BodyUseAPI": ["br.usp.each.saeg.asm.defuse.FlowAnalyzer.merge(int[],int[])", "java.util.Set<java.lang.Integer>.size()", "br.usp.each.saeg.asm.defuse.FlowAnalyzer<V>.getPath(java.lang.Integer)", "java.util.Iterator<java.lang.Integer>.next()", "java.util.Set<java.lang.Integer>.iterator()"], "Fixed commit": "0c1cc7cc3704011425fd7b50c39c2ce2beca80c9", "Url": "https://api.github.com/repos/andrioli/asm-defuse", "Date": "2014-12-17T16:02:38Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((par3 == 0) && ((par2 == 0) || (par2 == 1))) && (aroma1997.betterchests.UpgradeHelper.canBeDisabled(getStack()))) { if (net.minecraftforge.fml.common.FMLCommonHandler.instance().getEffectiveSide().isClient()) return null; if (chest.isUpgradeDisabled(getStack())) { chest.setUpgradeDisabled(getStack(), false); }else { chest.setUpgradeDisabled(getStack(), true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8528/buggy-version/src.main.java.aroma1997.betterchests.SlotUpgrades.java", "BodyUseAPI": [], "Fixed commit": "01a9f5e78013cf64b523b91180d5c485fafc8f4f", "Url": "https://api.github.com/repos/Aroma1997/BetterChests", "Date": "2015-04-05T16:16:06Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.scenarioo.utils.design.readers.DesignReader.loadScenarioSketches(java.lang.String,i.getIssueId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((scenarioSketches.size()) > 0) { org.scenarioo.model.design.entities.ScenarioSketch firstScenarioSketch = scenarioSketches.get(0); summary.setFirstScenarioSketchId(firstScenarioSketch.getScenarioSketchId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7545/buggy-version/scenarioo-server.src.main.java.org.scenarioo.rest.issue.IssuesResource.java", "BodyUseAPI": ["java.util.List<org.scenarioo.model.design.entities.ScenarioSketch>.get(int)"], "Fixed commit": "5ad4633a55ecb77f887265af9f2540d5632b2ae0", "Url": "https://api.github.com/repos/MyrionPhoenixmoon/scenarioo", "Date": "2015-07-15T05:52:05Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nationalId.length()) > 50) { errors.rejectValue(\"nationalId\", \"Expected length of National Id is exceeding\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5122/buggy-version/omod.src.main.java.org.openmrs.module.kenyaemr.fragment.controller.patient.EditPatientFragmentController.java", "BodyUseAPI": [], "Fixed commit": "9c34797d115198077d40fdf8f546d0e84242a6db", "Url": "https://api.github.com/repos/hispindia/his-hiv-emr", "Date": "2016-01-20T12:31:53Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((placeOfBirth.length()) > 50) { errors.rejectValue(\"placeOfBirth\", \"Expected length of Birth Place is exceeding\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5122/buggy-version/omod.src.main.java.org.openmrs.module.kenyaemr.fragment.controller.patient.EditPatientFragmentController.java", "BodyUseAPI": [], "Fixed commit": "9c34797d115198077d40fdf8f546d0e84242a6db", "Url": "https://api.github.com/repos/hispindia/his-hiv-emr", "Date": "2016-01-20T12:31:53Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.videoFile.delete())) { logger.warn(\"Failed to delete expired rolling video file: {}, keepOld = {}\", this.videoFile.getPath(), keepOld); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5239/buggy-version/src.main.java.com.shootoff.camera.RollingRecorder.java", "BodyUseAPI": ["java.io.File.getPath()", "org.slf4j.Logger.warn(java.lang.String,java.lang.String,boolean)"], "Fixed commit": "382d40a70f14d38af5de4bbcb8f5b59a150d2c57", "Url": "https://api.github.com/repos/phrack/ShootOFF", "Date": "2015-09-18T22:21:10Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(videoFile.delete())) { logger.warn(\"Failed to delete expired rolling video file on close: {}\", videoFile.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5239/buggy-version/src.main.java.com.shootoff.camera.RollingRecorder.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.lang.String)", "java.io.File.getPath()"], "Fixed commit": "382d40a70f14d38af5de4bbcb8f5b59a150d2c57", "Url": "https://api.github.com/repos/phrack/ShootOFF", "Date": "2015-09-18T22:21:10Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.videoFile.delete())) { logger.warn(\"Failed to delete expired rolling video file: {}, keepOld = {}\", this.videoFile.getPath(), keepOld); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5239/buggy-version/src.main.java.com.shootoff.camera.RollingRecorder.java", "BodyUseAPI": ["java.io.File.getPath()", "org.slf4j.Logger.warn(java.lang.String,java.lang.String,boolean)"], "Fixed commit": "382d40a70f14d38af5de4bbcb8f5b59a150d2c57", "Url": "https://api.github.com/repos/phrack/ShootOFF", "Date": "2015-09-18T22:21:10Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fiware.apps.marketplace.bo.LocaluserBo.findByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (userRegistrationAuth.canGet(localuser)) { response = javax.ws.rs.core.Response.status(Status.OK).entity(localuser).build(); }else { response = javax.ws.rs.core.Response.status(Status.FORBIDDEN).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5832/buggy-version/src.main.java.org.fiware.apps.marketplace.rest.UserRegistrationService.java", "BodyUseAPI": ["javax.ws.rs.core.Response.status(Status.OK).entity(localuser).build()", "javax.ws.rs.core.Response.status(Status.OK).entity(org.fiware.apps.marketplace.model.Localuser)"], "Fixed commit": "ff297bfd77c89c216aa318cbfd2804d83d7da7e5", "Url": "https://api.github.com/repos/conwetlab/WMarket", "Date": "2014-11-20T17:02:15Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getItemId()) == (R.id.action_paper_clip)) { showImagePicker(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1889/buggy-version/app.src.main.java.com.jiacorp.couponkeeper.CouponActivity.java", "BodyUseAPI": [], "Fixed commit": "87d72f96d95e682db26b2ce0e86121c6bd1bb0f9", "Url": "https://api.github.com/repos/jam0cam/CouponKeeper", "Date": "2015-01-08T02:20:19Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDisplayedUri) == null) { showImagePicker(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1889/buggy-version/app.src.main.java.com.jiacorp.couponkeeper.CouponActivity.java", "BodyUseAPI": [], "Fixed commit": "87d72f96d95e682db26b2ce0e86121c6bd1bb0f9", "Url": "https://api.github.com/repos/jam0cam/CouponKeeper", "Date": "2015-01-08T02:20:19Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(currentText))) { setPartnername(currentText); setPartnerID(newID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1895/buggy-version/monma.src.main.java.de.aw.monma.gv.Buchung.java", "BodyUseAPI": ["de.aw.monma.gv.Buchung.setPartnername(java.lang.String)"], "Fixed commit": "7fc6830007d60549e4ebffb943aea2c2b96b908f", "Url": "https://api.github.com/repos/gitwalex/MonMa", "Date": "2017-05-07T11:01:02Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((to.getReplicationGroupInstance()) == null) { com.emc.storageos.db.client.model.Volume backendVolume = dbClient.queryObject(com.emc.storageos.db.client.model.Volume.class, java.net.URI.create(backingVolume)); to.setReplicationGroupInstance(backendVolume.getReplicationGroupInstance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2698/buggy-version/apisvc.src.main.java.com.emc.storageos.api.mapper.BlockMapper.java", "BodyUseAPI": ["com.emc.storageos.model.block.VolumeRestRep.setReplicationGroupInstance(backendVolume.getReplicationGroupInstance())"], "Fixed commit": "04d984099965335d26e4bd2d310c145c0e661aad", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-19T17:24:52Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (Intent.ACTION_BOOT_COMPLETED.equals(action)) { init(); for (int i = 0; i < (com.android.server.WiredAccessoryObserver.MAX_AUDIO_PORTS); i++) { startObserving(com.android.server.WiredAccessoryObserver.uEventInfo[i][0]); } if ((Settings.System.getInt(context.getContentResolver(), Settings.System.DOCK_USB_AUDIO_ENABLED, 0)) == 1) { for (int i = 0; i < (com.android.server.WiredAccessoryObserver.MAX_AUDIO_PORTS_DOCK); i++) { startObserving(com.android.server.WiredAccessoryObserver.uEventInfoDock[i][0]); } } }else if (com.android.server.WiredAccessoryObserver.DOCK_AUDIO_SETTING_CHANGED.equals(action)) { if ((Settings.System.getInt(context.getContentResolver(), Settings.System.DOCK_USB_AUDIO_ENABLED, 0)) == 1) { for (int i = 0; i < (com.android.server.WiredAccessoryObserver.MAX_AUDIO_PORTS_DOCK); i++) { startObserving(com.android.server.WiredAccessoryObserver.uEventInfoDock[i][0]); } }else { stopObserving(); for (int i = 0; i < (com.android.server.WiredAccessoryObserver.MAX_AUDIO_PORTS); i++) { startObserving(com.android.server.WiredAccessoryObserver.uEventInfo[i][0]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/508/buggy-version/services.java.com.android.server.WiredAccessoryObserver.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "fcd43b4e36d4d28228e5537d0ae936d70b6738c5", "Url": "https://api.github.com/repos/maniac103/android_frameworks_base", "Date": "2012-05-18T05:34:43Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mapping.getSourceReference()) == null) { appliesToAll.add(mapping); }else { nonNested.put(entry.getKey(), entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7017/buggy-version/processor.src.main.java.org.mapstruct.ap.internal.model.source.GroupedSourceReferences.java", "BodyUseAPI": ["java.util.List<org.mapstruct.ap.internal.model.source.Mapping>.add(org.mapstruct.ap.internal.model.source.Mapping)"], "Fixed commit": "fe711465da886ee77655854128f98cfc1716ff67", "Url": "https://api.github.com/repos/sjaakd/mapstruct", "Date": "2017-02-12T19:31:58Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(userDir.mkdirs())) { throw new java.io.IOException(((\"Could not create directory [\" + (userDir.getAbsolutePath())) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3599/buggy-version/cube-ws-service.src.main.java.ch.admin.cube.ws.impl.CubeManageDAO.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()"], "Fixed commit": "5b47d3cd59dc39bf331a44cd15a0f434a1df477b", "Url": "https://api.github.com/repos/jonosterman/cube", "Date": "2012-12-21T10:02:37Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (move == previousBest) { java.util.List<java.lang.Integer> moves = logic.generateMoves(board); int i = random.nextInt(moves.size()); move = moves.get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5923/buggy-version/src.main.java.net.dervism.nnboard.game.nnrow.ai.alphabeta.AlphaBetaAi.java", "BodyUseAPI": [], "Fixed commit": "33288400ae133c170e699c6173568032048f4269", "Url": "https://api.github.com/repos/dervism/NNBoard", "Date": "2015-09-12T12:55:38Z"},
{"Line": "=>1960", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(categoryEventGroupList.contains(category.getId()))) categoryEventGroupList.add(category.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4937/buggy-version/src.main.java.unicopa.copa.server.database.DatabaseService.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.add(category.getId())", "unicopa.copa.base.event.CategoryNode.getId()"], "Fixed commit": "196b647ab6b4297c9d153781ecb703607c77ba87", "Url": "https://api.github.com/repos/UniCopa/CopaServer", "Date": "2013-06-30T16:23:58Z"},
{"Line": "=>1973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(categoryEventList.contains(category.getId()))) categoryEventList.add(category.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4937/buggy-version/src.main.java.unicopa.copa.server.database.DatabaseService.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.add(category.getId())", "unicopa.copa.base.event.CategoryNode.getId()"], "Fixed commit": "196b647ab6b4297c9d153781ecb703607c77ba87", "Url": "https://api.github.com/repos/UniCopa/CopaServer", "Date": "2013-06-30T16:23:58Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((product.getDistrict()) == null) { product.setDistrict(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2578/buggy-version/src.main.java.com.salamworld.yapraksuyu.activities.ResultActivity.java", "BodyUseAPI": ["com.salamworld.yapraksuyu.models.Product.setDistrict(java.lang.String)"], "Fixed commit": "e52c65780aa0be76fec3df1808507c15325bd49e", "Url": "https://api.github.com/repos/leafteam/leaf_android", "Date": "2014-09-14T09:55:24Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((product.getCity()) == null) { product.setCity(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2578/buggy-version/src.main.java.com.salamworld.yapraksuyu.activities.ResultActivity.java", "BodyUseAPI": ["com.salamworld.yapraksuyu.models.Product.setCity(java.lang.String)"], "Fixed commit": "e52c65780aa0be76fec3df1808507c15325bd49e", "Url": "https://api.github.com/repos/leafteam/leaf_android", "Date": "2014-09-14T09:55:24Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (gymId != null) { activities = activityService.findAllByGymId(gymId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5691/buggy-version/WorkSpace.Acme-Six-Pack.src.main.java.controllers.administrator.ActivityAdministratorController.java", "BodyUseAPI": ["services.ActivityService.findAllByGymId(java.lang.Integer)"], "Fixed commit": "5acce5d3de78e3e314905f2ab0c7957e6e275ae4", "Url": "https://api.github.com/repos/DPIRPSG/DP9Entrega", "Date": "2016-04-03T22:16:54Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((js.getString(\"dollar_balance\").length()) >= 10) { com.bbz.latte.MainActivity.editor.putString(com.bbz.latte.MainActivity.BALANCE, \"0.00\"); }else { java.lang.Double balanceFormatted = js.getDouble(\"dollar_balance\"); java.lang.String moneyString = java.text.NumberFormat.getCurrencyInstance().format(balanceFormatted); com.bbz.latte.MainActivity.editor.putString(com.bbz.latte.MainActivity.BALANCE, moneyString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9197/buggy-version/WearBucksPhone.src.com.bbz.latte.MainActivity.java", "BodyUseAPI": ["org.json.JSONObject.getDouble(java.lang.String)"], "Fixed commit": "08abdae5e5663bd19b0b8405c1e92ae73c97700e", "Url": "https://api.github.com/repos/tylerl0706/latte.", "Date": "2014-09-15T15:52:23Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (queue)) { org.zenoss.app.consumer.metric.impl.MetricsQueue.log.warn(\"queue is null. Nothing will be added.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6341/buggy-version/metric-consumer-app.src.main.java.org.zenoss.app.consumer.metric.impl.MetricsQueue.java", "BodyUseAPI": [], "Fixed commit": "e1d60d7c7b3c698edb7f4bf8a642c1e5998f65ba", "Url": "https://api.github.com/repos/zenoss/zenoss.metric.consumer", "Date": "2014-06-12T21:20:00Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (session.isClosed()) { android.util.Log.d(\"Guest Logout \", \"Log out button activated\"); android.content.Intent i = getBaseContext().getPackageManager().getLaunchIntentForPackage(getBaseContext().getPackageName()); i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/119/buggy-version/Android.src.com.swipesexchange.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4de58e44e3ca25090dea5d309f5ae8a80013cb22", "Url": "https://api.github.com/repos/Yuncun/SwipesExchange", "Date": "2014-07-10T00:25:58Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scoreAnimStep) == ((tuc.werkstatt.doubleup.MiniGame.animations.size) - 1)) { tuc.werkstatt.doubleup.MiniGame.animations.get(scoreAnimStep).duration = origEndTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4776/buggy-version/core.src.tuc.werkstatt.doubleup.MiniGame.java", "BodyUseAPI": ["com.badlogic.gdx.utils.Array<tuc.werkstatt.doubleup.MiniGame.ScoreAnimation>.get(int)"], "Fixed commit": "d3756c87d441d757e9aa8853b0a93008cc3515ff", "Url": "https://api.github.com/repos/ddd3/DoubleUP", "Date": "2017-02-05T23:47:32Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCanceled())) executeDelayedTask(((timeout) - ((java.lang.System.currentTimeMillis()) - (lastMessageReceiveTime))), this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7338/buggy-version/raven-core.src.main.java.org.raven.dp.impl.DataProcessorFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "c168a3c0468f7365bb52af4feea00516e06e713c", "Url": "https://api.github.com/repos/mktitov/raven-monitoring", "Date": "2016-04-25T05:49:37Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((matcher.group(5)) != null) { return createWarning(\"-\", 0, category, matcher.group(5), priority); }else { java.lang.String message = matcher.group(2); java.lang.String fileName = matcher.group(3); java.lang.String start = matcher.group(4); return createWarning(fileName, java.lang.Integer.parseInt(start), category, message, priority); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2689/buggy-version/src.main.java.hudson.plugins.warnings.parser.PhpParser.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "hudson.plugins.warnings.parser.PhpParser.createWarning(java.lang.String,int,java.lang.String,java.lang.String,hudson.plugins.analysis.util.model.Priority)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "21ae1650696805f98c2c09e9ee63556b044b1ee6", "Url": "https://api.github.com/repos/jenkinsci/warnings-plugin", "Date": "2015-11-28T12:07:38Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.bg.check.ui.CheckerActivity.isDoubleClick()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8954/buggy-version/Check.src.com.bg.check.ui.CheckerActivity.java", "BodyUseAPI": [], "Fixed commit": "e85c5cf9377b346e3def9446385b26354c64e886", "Url": "https://api.github.com/repos/dev-kit/001", "Date": "2012-08-14T15:58:44Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.action_reset)) { android.widget.Toast.makeText(getApplicationContext(), \"Qua Marco ci deve fare il reset!\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4177/buggy-version/app.src.main.java.dicarlo.fierimonte.infoodrmations.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d102e0bd5e05c049814b2a28dc4c0a01e3e50eb5", "Url": "https://api.github.com/repos/LFDC89/progettoREPD_2", "Date": "2015-07-27T08:35:33Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(columnsReordered)) && ((values.length) < (appenders.length))) { java.util.Arrays.fill(appenders, values.length, appenders.length, appender); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5918/buggy-version/src.main.java.com.univocity.parsers.common.ParserOutput.java", "BodyUseAPI": ["java.util.Arrays.fill(com.univocity.parsers.common.CharAppender[],int,appenders.length,com.univocity.parsers.common.CharAppender)"], "Fixed commit": "ab95786b600e2a1cbdceed555a4b9bef1aabfc29", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2014-10-22T18:23:05Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((completePayload.length()) > 0) { this.clientId = completePayload.substring(0, 36); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6444/buggy-version/common.instamsg.mqtt.org.eclipse.paho.client.mqttv3.internal.wire.MqttProvack.java", "BodyUseAPI": [], "Fixed commit": "9baa21f7f9d4a481eadf66d8d42f1001a11e2e8f", "Url": "https://api.github.com/repos/InstaMsg/instamsg-java", "Date": "2016-03-29T07:16:45Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (offset > ((stops.size()) / 2)) { offset -= stops.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4700/buggy-version/app.src.main.java.edu.mit.mitmobile2.shuttles.fragment.ShuttleStopFragment.java", "BodyUseAPI": ["java.util.List<edu.mit.mitmobile2.shuttles.model.MITShuttleStop>.size()"], "Fixed commit": "422207aef4f39a8d2c5fb0e086c510cafaa992f8", "Url": "https://api.github.com/repos/MIT-Mobile/MIT-Mobile-for-Android", "Date": "2015-04-08T20:33:06Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sounds.contains(value)) { sound.setFlag(value.toUpperCase().replace(\" \", \"_\")); }else { player.sendMessage(\"Sound not available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6443/buggy-version/Regions.src.main.java.au.com.mineauz.minigamesregions.actions.PlaySoundAction.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "au.com.mineauz.minigames.config.StringFlag.setFlag(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "542394b4b1f71de22e040dbcfe6867f33a49a84d", "Url": "https://api.github.com/repos/AddstarMC/Minigames", "Date": "2017-12-19T02:59:38Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getCategory()) != null) { categoryTextView.setText(task.getCategory().getName()); categoryTextView.setTextColor(task.getCategory().getColor()); dateTextView.setText(task.getExpireDateString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3321/buggy-version/app.src.main.java.com.example.student_3.todolist.activities.CreateTaskActivity.java", "BodyUseAPI": ["task.getCategory().getColor()", "com.example.student_3.todolist.models.Task.getCategory()", "android.widget.TextView.setText(task.getExpireDateString())", "task.getCategory().getName()", "android.widget.TextView.setText(task.getCategory().getName())", "com.example.student_3.todolist.models.Task.getExpireDateString()", "android.widget.TextView.setTextColor(task.getCategory().getColor())", "com.example.student_3.todolist.models.Task.getCategory()"], "Fixed commit": "3d73b8cccfd27e4b0625d2336355aaece97fb7f9", "Url": "https://api.github.com/repos/phoenixxt/ToDolist", "Date": "2017-11-28T17:43:47Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.nbt.NBTTagCompound.getBoolean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hasHeater) heaterLocation = par1nbtTagCompound.getIntArray(\"HeaterLoc\"); else heaterLocation = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/395/buggy-version/common.com.noiz.steamcraft.entities.tiles.TileEntityTank.java", "BodyUseAPI": [], "Fixed commit": "717b95bfd2f5739d3115abd70925171af48204fe", "Url": "https://api.github.com/repos/diadistis/SteamCraft", "Date": "2014-07-05T22:15:11Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((heaterLocation) != null) par1nbtTagCompound.setIntArray(\"HeaterLoc\", heaterLocation);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/395/buggy-version/common.com.noiz.steamcraft.entities.tiles.TileEntityTank.java", "BodyUseAPI": [], "Fixed commit": "717b95bfd2f5739d3115abd70925171af48204fe", "Url": "https://api.github.com/repos/diadistis/SteamCraft", "Date": "2014-07-05T22:15:11Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subs != null) sbti = new edu.northwestern.cs.websail.sbt.SparseBackoffTreeIntersection(sbts, curZ, subs); else sbti = new edu.northwestern.cs.websail.sbt.SparseBackoffTreeIntersection(sbts);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2507/buggy-version/src.main.java.edu.northwestern.cs.websail.sbt.SBTSequenceModel.java", "BodyUseAPI": [], "Fixed commit": "56b563a5f93e5c2adef6fee7abd786d94ee38570", "Url": "https://api.github.com/repos/dcdowney/sbt", "Date": "2015-09-03T23:58:43Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mcmoddev.orespawn.impl.features.DefaultFeatureGenerator.retrieveCache(net.minecraft.util.math.Vec3i)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(cache.isEmpty())) { for (java.util.Map.Entry<net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState> ent : cache.entrySet()) { com.mcmoddev.orespawn.impl.features.DefaultFeatureGenerator.spawn(cache.get(ent.getKey()), world, ent.getKey(), world.provider.getDimension(), false, replaceBlock); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4350/buggy-version/src.main.java.com.mcmoddev.orespawn.impl.features.DefaultFeatureGenerator.java", "BodyUseAPI": ["com.mcmoddev.orespawn.impl.features.DefaultFeatureGenerator.spawn(cache.get(ent.getKey()),net.minecraft.world.World,ent.getKey(),world.provider.getDimension(),boolean,net.minecraft.block.state.IBlockState)", "java.util.Map<net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState>.get(ent.getKey())", "java.util.Map<net.minecraft.util.math.BlockPos, net.minecraft.block.state.IBlockState>.entrySet()"], "Fixed commit": "4d205e43506ebd0707019cda6d04e880060e2d7e", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/OreSpawn", "Date": "2017-07-15T21:23:44Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mcmoddev.orespawn.data.Config.getBoolean(Constants.RETROGEN_KEY)) { event.setResult(Event.Result.DENY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4350/buggy-version/src.main.java.com.mcmoddev.orespawn.EventHandlers.java", "BodyUseAPI": [], "Fixed commit": "4d205e43506ebd0707019cda6d04e880060e2d7e", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/OreSpawn", "Date": "2017-07-15T21:23:44Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source.equals(event.getSource())) { if (((event.getOldValue()) == null) && ((event.getNewValue()) != null)) { sourceList.add(event.getNewValue()); } }else if (sourceList.equals(event.getSource())) { if (((event.getOldValue()) == null) && ((event.getNewValue()) != null)) { addItem(event.getNewValue()); }else if (event.getPropertyName().equals(TableList.PROPERTY_ITEMS)) { if (((event.getOldValue()) != null) && ((event.getNewValue()) == null)) { removeItem(event.getOldValue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4188/buggy-version/src.de.uniks.networkparser.gui.table.TableComponent.java", "BodyUseAPI": ["java.beans.PropertyChangeEvent.getNewValue()", "java.beans.PropertyChangeEvent.getSource()", "java.beans.PropertyChangeEvent.getNewValue()", "java.beans.PropertyChangeEvent.getOldValue()", "java.beans.PropertyChangeEvent.getOldValue()", "java.beans.PropertyChangeEvent.getOldValue()", "java.lang.String.equals(TableList.PROPERTY_ITEMS)", "java.beans.PropertyChangeEvent.getNewValue()", "de.uniks.networkparser.gui.table.TableList.equals(java.lang.Object)", "de.uniks.networkparser.gui.table.TableComponent.addItem(java.lang.Object)", "java.beans.PropertyChangeEvent.getPropertyName()", "de.uniks.networkparser.gui.table.TableList.add(java.lang.Object)", "de.uniks.networkparser.gui.table.TableComponent.removeItem(java.lang.Object)", "java.beans.PropertyChangeEvent.getNewValue()", "java.beans.PropertyChangeEvent.getNewValue()", "java.beans.PropertyChangeEvent.getOldValue()"], "Fixed commit": "73acdc8b6c66c29c2c42a100f5ace3b325e00e5a", "Url": "https://api.github.com/repos/fujaba/NetworkParser", "Date": "2013-11-29T16:24:47Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cassandraHost.getUseThriftFramedTransport()) { transport = new org.apache.thrift.transport.TFramedTransport(transport); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1007/buggy-version/core.src.main.java.me.prettyprint.cassandra.connection.client.HSaSlThriftClient.java", "BodyUseAPI": [], "Fixed commit": "ca2bb69532702902dad38b0de4c6b6fddd187a79", "Url": "https://api.github.com/repos/alexliu68/hector", "Date": "2012-11-15T22:55:00Z"},
{"Line": "=>858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getChildAt(mDraggedItemDestination)) != null) { android.view.View v = getChildAt(mDraggedItemDestination); mLayoutHandle = ((android.widget.LinearLayout) (v.findViewById(R.id.paddingViewLayout))); mLayoutHandle.setLayoutParams(mOpenParams); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6615/buggy-version/app.src.main.java.com.main.toledo.gymtrackr.WorkspaceExpandableListView.java", "BodyUseAPI": ["com.main.toledo.gymtrackr.WorkspaceExpandableListView.getChildAt(int)"], "Fixed commit": "58f4f785e9d8c596144eb6ede5008c56f111498f", "Url": "https://api.github.com/repos/kodieGlosser/FitnessApp", "Date": "2015-04-29T07:21:41Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spoints) != null) regionCounts[i].setKey(spoints.get(i)); else if ((strandedReg) != null) regionCounts[i].setKey(strandedReg.get(i)); else if ((regions) != null) regionCounts[i].setKey(regions.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4230/buggy-version/src.org.seqcode.projects.galaxyexo.RegionCountSorter.java", "BodyUseAPI": [], "Fixed commit": "20c36520ac43387233f275010eb6b91b42230f2b", "Url": "https://api.github.com/repos/seqcode/seqcode-core", "Date": "2017-10-04T19:35:59Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!suceed) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8780/buggy-version/Android-DataLib-Sample-Netflix.src.fr.eyal.datalib.sample.netflix.fragment.SelectionFragment.java", "BodyUseAPI": [], "Fixed commit": "0aeb6b92e28ed502a65c4584ba774c4e2784bb25", "Url": "https://api.github.com/repos/eyal-lezmy/Android-DataLib", "Date": "2013-01-26T02:33:58Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tmp.getClass().equals(zhy.com.highlight.util.ViewUtils.FRAGMENT_CON))) { result.left += tmpRect.left; result.top += tmpRect.top; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1448/buggy-version/highlight.src.main.java.zhy.com.highlight.util.ViewUtils.java", "BodyUseAPI": [], "Fixed commit": "effd69c5eb0228a2f51b4c205decb1e1fc34b372", "Url": "https://api.github.com/repos/hongyangAndroid/Highlight", "Date": "2016-02-23T15:41:29Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((column % 2) == 0) && ((row % 2) == 0)) { column++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7672/buggy-version/app.src.main.java.group2.cs301.labyrinthgame.Labyrinth.Board.java", "BodyUseAPI": [], "Fixed commit": "a75e592f01d10daa8c90a91fc20da18a37a1fc5e", "Url": "https://api.github.com/repos/CelestiaTheDryad/LabyrinthGame", "Date": "2015-11-07T23:32:02Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(list.isEmpty())) { java.lang.Object component = list.get(0); if (component instanceof java.lang.String) { return true; }else { java.lang.Class<?> componentClass = component.getClass(); return (componentClass.isPrimitive()) || (com.box.boxjavalibv2.dao.BoxObject.primitiveWrapperSet.contains(componentClass)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3284/buggy-version/BoxJavaLibraryV2.src.com.box.boxjavalibv2.dao.BoxObject.java", "BodyUseAPI": ["java.util.ArrayList<?>.get(int)"], "Fixed commit": "3f0cfcb0e479a1c8046e84f90fcd4c9ee9ba7fa1", "Url": "https://api.github.com/repos/tdtran/box-java-sdk-v2", "Date": "2014-05-27T19:09:00Z"},
{"Line": "=>1873", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.Delegator.findByAnd(java.lang.String,org.ofbiz.base.util.UtilMisc.toMap(\"productIdTo\", productIdTo, \"productAssocTypeId\", \"PRODUCT_VARIANT\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.ofbiz.base.util.UtilValidate.isNotEmpty(productAssocs)) { java.lang.String virtualProductId = org.ofbiz.entity.util.EntityUtil.getFirst(productAssocs).get(\"productId\").toString(); org.ofbiz.entity.GenericValue virtualProduct = delegator.findByPrimaryKey(\"Product\", org.ofbiz.base.util.UtilMisc.toMap(\"productId\", virtualProductId)); if (org.ofbiz.base.util.UtilValidate.isNotEmpty(virtualProduct.get(\"primaryProductCategoryId\"))) { productCategoryId = virtualProduct.get(\"primaryProductCategoryId\").toString(); }else { noCategoryProductList.add(product); } }else { noCategoryProductList.add(product); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7543/buggy-version/hot-deploy.zuczugcommon.src.com.zuczug.product.ZuczugProductServices.java", "BodyUseAPI": ["org.ofbiz.entity.util.EntityUtil.getFirst(productAssocs).get(\"productId\").toString()", "org.ofbiz.entity.util.EntityUtil.getFirst(java.util.List<org.ofbiz.entity.GenericValue>)", "org.ofbiz.entity.util.EntityUtil.getFirst(productAssocs).get(java.lang.String)"], "Fixed commit": "a38438ae5f3b050500c403b091e9e3c86092227d", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-07-20T04:35:59Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (by.slesh.sj.activity.SettingsActivity.PERIODS.values().contains(checkedId)) { for (java.lang.String key : by.slesh.sj.activity.SettingsActivity.PERIODS.keySet()) { if ((by.slesh.sj.activity.SettingsActivity.PERIODS.get(key)) == checkedId) { by.slesh.sj.database.local.SjPreferences.set(SjPreferences.Key.HISTORY_CLEANING_FREQUENCY, by.slesh.sj.activity.SettingsActivity.PERIODS.get(by.slesh.sj.activity.SettingsActivity.PERIODS.get(key)).toString()); return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9155/buggy-version/app.src.main.java.by.slesh.sj.activity.SettingsActivity.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.lang.Integer.toString()", "by.slesh.sj.database.local.SjPreferences.set(SjPreferences.Key.HISTORY_CLEANING_FREQUENCY,java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.Integer)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.keySet()"], "Fixed commit": "2270e25364c2de29d1c9df3d8bfb41c53476ce95", "Url": "https://api.github.com/repos/sleshJdev/sj", "Date": "2015-09-06T02:35:58Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/319/buggy-version/ContactManager.app.src.main.java.com.example.contactmanager.CreateContact.java", "BodyUseAPI": [], "Fixed commit": "469ef9ec24d693dbaf2e190d54bf39e9dbc8c38c", "Url": "https://api.github.com/repos/tmn150530/3354-3-Guys", "Date": "2017-12-04T09:47:53Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((UI) instanceof edu.cpp.cs.cs141.final_project.User_Interface.TextUI.TextUserInterface) UI.update();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3942/buggy-version/src.edu.cpp.cs.cs141.final_project.Application.java", "BodyUseAPI": [], "Fixed commit": "248e433eadd5ce7f34cce87bb9d5249b5f2c9991", "Url": "https://api.github.com/repos/fanfare00/CS141_FinalProject", "Date": "2016-12-03T01:49:04Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getView().getSupportFragmentManager().isDestroyed()) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4887/buggy-version/common-ui.src.main.java.org.opensilk.common.ui.mortarfragment.FragmentManagerOwner.java", "BodyUseAPI": [], "Fixed commit": "63fd4d8a031655d8c02719fad4fbd25dbb95635e", "Url": "https://api.github.com/repos/Zillode/syncthing-silk", "Date": "2015-07-24T07:22:07Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["communication.HouseholdServiceCommunication.getHouseholdForUserId(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (householdPOJO != null) { java.util.HashMap<java.lang.String, java.lang.String> parameters = new java.util.HashMap<>(); parameters.put(\"userId\", java.lang.Long.toString(id)); parameters.put(\"householdId\", java.lang.Long.toString(householdPOJO.getHouseholdId())); householdServiceCommunication.removeUserFromHousehold(parameters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2805/buggy-version/smartsync-user-service.src.main.java.com.smartsync.service.UserService.java", "BodyUseAPI": ["java.lang.Long.toString(householdPOJO.getHouseholdId())", "model.HouseholdPOJO.getHouseholdId()", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "7c76912c552f4ec0a0ae365fe368328ac72de6e4", "Url": "https://api.github.com/repos/jackcmeyer/SmartSync", "Date": "2017-04-03T22:49:12Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 23) { android.graphics.drawable.Icon mSmallIcon = ((android.graphics.drawable.Icon) (com.limpoxe.fairy.util.RefInvoker.getFieldObject(notification, android.app.Notification.class, \"mSmallIcon\"))); android.graphics.drawable.Icon mLargeIcon = ((android.graphics.drawable.Icon) (com.limpoxe.fairy.util.RefInvoker.getFieldObject(notification, android.app.Notification.class, \"mLargeIcon\"))); if (mSmallIcon != null) { com.limpoxe.fairy.util.RefInvoker.setFieldObject(mSmallIcon, android.graphics.drawable.Icon.class, \"mString1\", com.limpoxe.fairy.core.PluginLoader.getApplication().getPackageName()); } if (mLargeIcon != null) { com.limpoxe.fairy.util.RefInvoker.setFieldObject(mLargeIcon, android.graphics.drawable.Icon.class, \"mString1\", com.limpoxe.fairy.core.PluginLoader.getApplication().getPackageName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2686/buggy-version/FairyPlugin.src.main.java.com.limpoxe.fairy.core.proxy.systemservice.AndroidAppINotificationManager.java", "BodyUseAPI": [], "Fixed commit": "f194b3b7dfec62405ee77a05d93fc1dc02e7defd", "Url": "https://api.github.com/repos/limpoxe/Android-Plugin-Framework", "Date": "2016-10-23T13:40:11Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spellWord) != null) { spellWord.removeSpell(this); spellWord = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1542/buggy-version/core.src.lando.systems.ld32.screens.FightScreen.java", "BodyUseAPI": [], "Fixed commit": "a10ffb810ee43274edf606a4c9ce9e499856c0f2", "Url": "https://api.github.com/repos/bploeckelman/LudumDare32", "Date": "2015-04-20T04:01:04Z"},
{"Line": "=>1390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tolerateRoundOffError) return shape.contains(x, y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/484/buggy-version/energy2d.src.org.concord.energy2d.model.Model2D.java", "BodyUseAPI": [], "Fixed commit": "dcdba17d50a4b88c04096728971ba8c394ecb4d2", "Url": "https://api.github.com/repos/charxie/energy2d", "Date": "2015-03-18T19:30:29Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jorgediazest.util.modelquery.ModelQuery.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"com.liferay.calendar.model.CalendarBooking\".equals(model.getClassName())) { attributesToCheck.add(\"calendarId\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1558/buggy-version/docroot.WEB-INF.src.jorgediazest.indexchecker.portlet.CallableCheckGroupAndModel.java", "BodyUseAPI": [], "Fixed commit": "c6a71c5e2ce3a12b869acaafc20d7a33bea31194", "Url": "https://api.github.com/repos/jorgediaz-lr/index-checker", "Date": "2017-05-14T12:49:46Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (CALENDAR_BOOKING.equals(className)) { return jorgediazest.indexchecker.model.CalendarBookingQuery.class; }else if (DDL_RECORD.equals(className)) { return jorgediazest.indexchecker.model.DDLRecordQuery.class; }else if (DL_FILE_ENTRY.equals(className)) { return jorgediazest.indexchecker.model.DLFileEntryQuery.class; }else if (JOURNAL_ARTICLE.equals(className)) { return jorgediazest.indexchecker.model.JournalArticleQuery.class; }else if (MB_MESSAGE.equals(className)) { return jorgediazest.indexchecker.model.MBMessageQuery.class; }else { return jorgediazest.indexchecker.model.IndexCheckerModelQuery.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1558/buggy-version/docroot.WEB-INF.src.jorgediazest.indexchecker.model.IndexCheckerModelQueryFactory.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "c6a71c5e2ce3a12b869acaafc20d7a33bea31194", "Url": "https://api.github.com/repos/jorgediaz-lr/index-checker", "Date": "2017-05-14T12:49:46Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unicodeHost != null) && (unicodeHost.isDomain())) unicodeHost = new org.stdurl.host.Domain(org.stdurl.idna.IDNA.domainToUnicode(unicodeHost.toDomain().getDomain()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7700/buggy-version/src.org.stdurl.origin.Origin.java", "BodyUseAPI": [], "Fixed commit": "5959856a97a9291d5dbea31ce121ae1282605a29", "Url": "https://api.github.com/repos/std4453/StdURL", "Date": "2017-02-03T16:43:33Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((u.getModel()) != null) { java.lang.String[] models = u.getModel().split(\",\"); java.util.List<java.lang.String> modelNameList = new java.util.ArrayList<java.lang.String>(); for (java.lang.String m : models) { if (!(org.springframework.util.StringUtils.isEmpty(m.trim()))) { modelNameList.add(modelList.get(((java.lang.Integer.valueOf(m)) - 1)).getModelName()); } } u.setModelNameList(modelNameList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4701/buggy-version/src.main.java.com.kabuda.controller.UserController.java", "BodyUseAPI": ["com.kabuda.entity.User.getModel()", "com.kabuda.entity.User.setModelNameList(java.util.List<java.lang.String>)", "u.getModel().split(java.lang.String)"], "Fixed commit": "34ca2b3a9a85460b13298c706d77232eec20affc", "Url": "https://api.github.com/repos/BUAAMusketeers/kabuda", "Date": "2017-02-20T14:22:18Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getWorld(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (worldV == null) { com.turt2live.antishare.AntiShare.getInstance().getLogger().severe(((((((\"World '\" + world) + \"' does not exist (Inventory: \") + (type.name())) + \", \") + name) + \".yml! AntiShare is ignoring this world.\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2018/buggy-version/src.com.turt2live.antishare.inventory.ASInventory.java", "BodyUseAPI": [], "Fixed commit": "3da846e70a53030507abfb70cae0e303d36a6c23", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2012-06-02T01:07:34Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mObject) instanceof com.industry.printer.object.GraphicObject) { mPicture.setText(mObject.getContent()); }else if ((mObject) instanceof com.industry.printer.object.GraphicObject) { mPicture.setText(mObject.getContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1622/buggy-version/src.com.industry.printer.ui.CustomerDialog.ObjectInfoDialog.java", "BodyUseAPI": [], "Fixed commit": "b896d2487c1f28efb9993f4bc172cfb3804ae960", "Url": "https://api.github.com/repos/kevin-zhaotk/Printer", "Date": "2017-11-12T13:45:29Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.industry.printer.Utils.ConfigPath.getMountedUsb()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((usbs != null) && ((usbs.size()) > 0)) { com.industry.printer.Utils.FileUtil.copyDirectiory(((usbs.get(0)) + (com.industry.printer.Utils.Configs.SYSTEM_CONFIG_DIR)), ((com.industry.printer.Utils.Configs.CONFIG_PATH_FLASH) + (com.industry.printer.Utils.Configs.SYSTEM_CONFIG_DIR))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1622/buggy-version/src.com.industry.printer.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "com.industry.printer.Utils.FileUtil.copyDirectiory(((usbs.get(0)) + (com.industry.printer.Utils.Configs.SYSTEM_CONFIG_DIR)),((com.industry.printer.Utils.Configs.CONFIG_PATH_FLASH) + (com.industry.printer.Utils.Configs.SYSTEM_CONFIG_DIR)))"], "Fixed commit": "b896d2487c1f28efb9993f4bc172cfb3804ae960", "Url": "https://api.github.com/repos/kevin-zhaotk/Printer", "Date": "2017-11-12T13:45:29Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (msg.exists()) { msg.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1622/buggy-version/src.com.industry.printer.MainActivity.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "b896d2487c1f28efb9993f4bc172cfb3804ae960", "Url": "https://api.github.com/repos/kevin-zhaotk/Printer", "Date": "2017-11-12T13:45:29Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,(((\"Your score: \" + (_panel.gameModel().step())) + \"\\n\") + \"Enter your name:\\n\"),java.lang.String,int,<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (playername != null) _scoreBoard.put(_panel.gameModel().step(), playername);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3534/buggy-version/Spiders.src.spiders.Spiders.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.String>.put(_panel.gameModel().step(),java.lang.String)"], "Fixed commit": "37d21898c1806622dee6037a436e94eeb51bd68d", "Url": "https://api.github.com/repos/anhcx0209/game_spiders", "Date": "2016-01-17T12:58:07Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (o.getClass().isInstance(java.lang.String.class)) { c.addAttribute(new com.iqser.core.model.Attribute(\"Category\", ((java.lang.String) (o)), com.iqser.core.model.Attribute.ATTRIBUTE_TYPE_TEXT, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6455/buggy-version/sf-rss-plugin.src.main.java.sf.net.iqser.plugin.rss.RSSContentProvider.java", "BodyUseAPI": [], "Fixed commit": "b4c23b40efaea6e065be4a722df126ab1c75036c", "Url": "https://api.github.com/repos/iqser-gmbh/gin2-contentprovider-rss", "Date": "2011-09-13T20:43:27Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1958/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Utils.java", "BodyUseAPI": [], "Fixed commit": "67e87812f4700c3fab0efad964e7a5f2d1e7c859", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-05-06T21:07:27Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((server) != null) { server.updateExecutionState(aState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1373/buggy-version/de.gebit.integrity.runner.src.de.gebit.integrity.runner.forking.Fork.java", "BodyUseAPI": [], "Fixed commit": "38a2de1f2cd0752a8724065c870453400e91b361", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2015-09-29T05:28:40Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (columnIndex == 2) return mail.getSubject(); else if (columnIndex == 3) return mail.getReceived(); else if (columnIndex == 4) return mail.getAttachments().size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8458/buggy-version/src.ftoop.mailclient.gui.MailTableModel.java", "BodyUseAPI": [], "Fixed commit": "d67a1333dc0a696438fd51fdaedbbff5d8a27a44", "Url": "https://api.github.com/repos/hervesatori/Mail-Client-FTOOP", "Date": "2016-06-03T20:34:51Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (Intent.ACTION_MEDIA_BUTTON.equals(action)) { android.support.v4.media.session.MediaButtonReceiver.handleIntent(mSession, startIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2512/buggy-version/app.src.main.java.com.neykov.podcastportal.playback.PlaybackService.java", "BodyUseAPI": [], "Fixed commit": "2f4003d6e5763f118b24e67814ee1b8906711134", "Url": "https://api.github.com/repos/georgi-neykov-hub/Capstone-Project", "Date": "2015-11-07T17:07:53Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hbase.client.Table.get(org.apache.hadoop.hbase.client.Get)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (startVertexResult.isEmpty()) { throw new java.lang.IllegalStateException(\"Start vertex of edge was not found in graph store.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/78/buggy-version/core.src.main.java.com.puresoltechnologies.ductiledb.core.tx.DuctileDBTransactionImpl.java", "BodyUseAPI": [], "Fixed commit": "09223ec6ad159044a21c63f2fa70f376e97717c0", "Url": "https://api.github.com/repos/PureSolTechnologies/DuctileDB", "Date": "2015-12-09T12:38:30Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hbase.client.Table.get(org.apache.hadoop.hbase.client.Get)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (targetVertexResult.isEmpty()) { throw new java.lang.IllegalStateException(\"Target vertex of edge was not found in graph store.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/78/buggy-version/core.src.main.java.com.puresoltechnologies.ductiledb.core.tx.DuctileDBTransactionImpl.java", "BodyUseAPI": [], "Fixed commit": "09223ec6ad159044a21c63f2fa70f376e97717c0", "Url": "https://api.github.com/repos/PureSolTechnologies/DuctileDB", "Date": "2015-12-09T12:38:30Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (schema != null) schema = schema.toLowerCase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/488/buggy-version/src.main.java.nl.topicus.mssql2monetdb.CopyTable.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "e55e3db55c2659e6b1048a6cf0c7214b60d3041d", "Url": "https://api.github.com/repos/topicusonderwijs/mssql2monetdb", "Date": "2017-07-18T12:50:08Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(urlList.contains(input.toURI().toURL()))) { urlList.add(input.toURI().toURL()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2499/buggy-version/plugins.entando-plugin-jpcomponentinstaller.src.main.java.org.entando.entando.plugins.jpcomponentinstaller.aps.system.services.installer.DefaultPluginInstaller.java", "BodyUseAPI": ["java.net.URI.toURL()", "java.util.List<java.net.URL>.add(java.net.URL)", "java.io.File.toURI()"], "Fixed commit": "9a6d9a182ced442209aaa3a677f7675e4726f350", "Url": "https://api.github.com/repos/entando/entando-components", "Date": "2014-12-17T21:31:27Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.ServletContext.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (urlList == null) { urlList = new java.util.ArrayList<java.net.URL>(); servletContext.setAttribute(\"pluginInstallerURLList\", urlList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2499/buggy-version/plugins.entando-plugin-jpcomponentinstaller.src.main.java.org.entando.entando.plugins.jpcomponentinstaller.aps.system.services.installer.DefaultPluginInstaller.java", "BodyUseAPI": [], "Fixed commit": "9a6d9a182ced442209aaa3a677f7675e4726f350", "Url": "https://api.github.com/repos/entando/entando-components", "Date": "2014-12-17T21:31:27Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attributeValueIsAvailable(attrs, annotation)) { return attrs.getColor(annotation.attributeId(), 0); }else { throw new java.lang.RuntimeException((\"No attribute found for ID \" + (annotation.attributeId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2291/buggy-version/library.src.main.java.com.matthewtamlin.spyglass.library.handler_adapters.ColorHandlerAdapter.java", "BodyUseAPI": ["com.matthewtamlin.spyglass.library.handler_annotations.ColorHandler.attributeId()", "com.matthewtamlin.spyglass.library.handler_annotations.ColorHandler.attributeId()", "android.content.res.TypedArray.getColor(annotation.attributeId(),int)"], "Fixed commit": "576cd475f8d27f724dad96b8dad21b64549eda46", "Url": "https://api.github.com/repos/MatthewTamlin/Spyglass", "Date": "2017-03-31T08:47:24Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ret.size()) == 0) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7706/buggy-version/project-team01.src.main.java.util.RetrievalMeasures.java", "BodyUseAPI": [], "Fixed commit": "c6498f3b958a0a1858920430d850f43fd64534bb", "Url": "https://api.github.com/repos/lubronzhan/project-team01", "Date": "2014-11-11T01:47:02Z"},
{"Line": "=>4", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (root != null) java.lang.System.out.println(root.data);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4550/buggy-version/20140106-check-bst.CheckBST.java", "BodyUseAPI": ["java.io.PrintStream.println(root.data)"], "Fixed commit": "f1e18e2731caf7d1265fff6b547f92806ba0fe86", "Url": "https://api.github.com/repos/paul-jean/code-dojo", "Date": "2014-01-07T05:31:18Z"},
{"Line": "=>5", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (root == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4550/buggy-version/20140106-check-bst.CheckBST.java", "BodyUseAPI": [], "Fixed commit": "f1e18e2731caf7d1265fff6b547f92806ba0fe86", "Url": "https://api.github.com/repos/paul-jean/code-dojo", "Date": "2014-01-07T05:31:18Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.inaf.oats.vospacebackend.implementation.VOSpaceBackendMetadata.getRequestByNode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(backendMetadata.getIfOperationSuccessful())) { myQuery = \"INSERT INTO cadctest.StoredFileAndNode \" + (\"(nodeID, storedFileID)\" + \" VALUES (?, ?);\"); }else { myQuery = ((\"UPDATE cadctest.StoredFileAndNode SET \" + \"nodeID = ?, storedFileID = ? WHERE nodeID = '\") + nodeID) + \"';\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1060/buggy-version/src.main.java.it.inaf.oats.vospacebackend.implementation.VOSpaceBackendMetadata.java", "BodyUseAPI": [], "Fixed commit": "eba0c289954da6d45eb44cdcf51988f00e876acc", "Url": "https://api.github.com/repos/bertocco/oats-vospace-backend", "Date": "2017-02-07T16:41:39Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.inaf.oats.vospacebackend.implementation.VOSpaceBackendMetadata.getRequestByNode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (backendMetadata == null) { log.debug(\"Backend metadata not found\"); backendMetadata.setIfOperationSuccessful(false); return backendMetadata; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1060/buggy-version/src.main.java.it.inaf.oats.vospacebackend.implementation.VOSpaceBackendMetadata.java", "BodyUseAPI": ["it.inaf.oats.vospacebackend.implementation.FileRecord.setIfOperationSuccessful(boolean)"], "Fixed commit": "eba0c289954da6d45eb44cdcf51988f00e876acc", "Url": "https://api.github.com/repos/bertocco/oats-vospace-backend", "Date": "2017-02-07T16:41:39Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(cConf.get(Constants.CFG_LOCAL_DATA_DIR),cConf.get(Constants.AppFabric.TEMP_DIR))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(co.cask.cdap.common.utils.DirUtils.mkdirs(tempDir.toFile()))) { throw new java.io.IOException((\"Could not create temporary directory at: \" + tempDir)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4974/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.security.DefaultUGIProvider.java", "BodyUseAPI": [], "Fixed commit": "0bdda351e3a6ed18024e3d3a329d59208e7b32cc", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2016-07-20T19:14:45Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["solver.SokobanSearchable.simpleWhatActionMade(solver.State<general.Cordination>,solver.State<general.Cordination>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(simpleWhatActionMade(arg0.getPrev(), arg0).getAction().equals(thisMove.getAction()))) { solver.PathSearchable ps = new solver.PathSearchable(arg0.getPrev().getState(), new general.Cordination(getPosBeforeMovement(thisMove, arg0.getState())), this.lvl.getMatrixedLevel()); java.util.List<solver.Movement> moves = new solver.BFSSearcher<general.Cordination>().search(ps); java.lang.String path = \"\"; if (((arg0.getPrev().getState().get_cords()[0]) > (arg0.getState().get_cords()[0])) || ((arg0.getPrev().getState().get_cords()[1]) > (arg0.getState().get_cords()[1]))) for (int i = 0; i < (moves.size()); i++) path += (moves.get((((moves.size()) - 1) - i)).getAction()) + \",\"; else for (int i = 0; i < (moves.size()); i++) path += (moves.get(i).getAction()) + \",\"; path += thisMove.getAction(); return new solver.Movement(path); }else { return thisMove; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5897/buggy-version/Sokoban4.src.solver.SokobanSearchable.java", "BodyUseAPI": ["solver.State<general.Cordination>.getState()", "solver.SokobanSearchable.getPosBeforeMovement(solver.Movement,arg0.getState())", "arg0.getPrev().getState()", "solver.State<general.Cordination>.getPrev()", "arg0.getState().get_cords()", "arg0.getPrev().getState().get_cords()", "solver.Movement.getAction()", "solver.State<general.Cordination>.getState()", "arg0.getPrev().getState()", "arg0.getState().get_cords()", "solver.State<general.Cordination>.getPrev()", "arg0.getPrev().getState()", "solver.State<general.Cordination>.getState()", "solver.State<general.Cordination>.getPrev()", "arg0.getPrev().getState().get_cords()"], "Fixed commit": "777871e744ace57fe70181a670042b24b1761ac0", "Url": "https://api.github.com/repos/iftachFridental/Sokoban4", "Date": "2017-06-25T19:15:30Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((arg0.getState().get_cords()[0]) == 3) && ((arg0.getState().get_cords()[1]) == 3)) java.lang.System.out.println(\"Check\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5897/buggy-version/Sokoban4.src.solver.SokobanSearchable.java", "BodyUseAPI": [], "Fixed commit": "777871e744ace57fe70181a670042b24b1761ac0", "Url": "https://api.github.com/repos/iftachFridental/Sokoban4", "Date": "2017-06-25T19:15:30Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prevAct.length()) > 12) prevAct = prevAct.split(\",\")[((prevAct.split(\",\").length) - 1)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5897/buggy-version/Sokoban4.src.solver.SokobanSearchable.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "777871e744ace57fe70181a670042b24b1761ac0", "Url": "https://api.github.com/repos/iftachFridental/Sokoban4", "Date": "2017-06-25T19:15:30Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["solver.SokobanSearchable.simpleWhatActionMade(solver.State<general.Cordination>,solver.State<general.Cordination>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(new solver.Movement(firstBoxMove).getAction().equals(thisMove.getAction()))) { solver.PathSearchable ps = new solver.PathSearchable(new general.Cordination(getPosBeforeMovement(new solver.Movement(firstBoxMove), arg0.getState())), new general.Cordination(getPosBeforeMovement(thisMove, arg0.getState())), this.lvl.getMatrixedLevel()); java.util.List<solver.Movement> moves = new solver.BFSSearcher<general.Cordination>().search(ps); java.lang.String path = \"\"; if (((getPosBeforeMovement(new solver.Movement(firstBoxMove), arg0.getState())[0]) > (arg0.getState().get_cords()[0])) || ((getPosBeforeMovement(new solver.Movement(firstBoxMove), arg0.getState())[1]) > (arg0.getState().get_cords()[1]))) for (int i = 0; i < (moves.size()); i++) path += (moves.get((((moves.size()) - 1) - i)).getAction()) + \",\"; else for (int i = 0; i < (moves.size()); i++) path += (moves.get(i).getAction()) + \",\"; path += thisMove.getAction(); return new solver.Movement(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5897/buggy-version/Sokoban4.src.solver.SokobanSearchable.java", "BodyUseAPI": ["solver.SokobanSearchable.getPosBeforeMovement(solver.Movement,arg0.getState())", "solver.Movement.getAction()", "solver.SokobanSearchable.getPosBeforeMovement(solver.Movement,arg0.getState())", "solver.SokobanSearchable.getPosBeforeMovement(solver.Movement,arg0.getState())", "solver.SokobanSearchable.getPosBeforeMovement(solver.Movement,arg0.getState())"], "Fixed commit": "777871e744ace57fe70181a670042b24b1761ac0", "Url": "https://api.github.com/repos/iftachFridental/Sokoban4", "Date": "2017-06-25T19:15:30Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (finalCoeff == null) finalCoeff = new org.linqs.psl.model.rule.arithmetic.expression.coefficient.ConstantNumber(0.0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1292/buggy-version/psl-parser.src.main.java.org.linqs.psl.parser.ModelLoader.java", "BodyUseAPI": [], "Fixed commit": "a12dffa0e46df09b4952f1be7306c79273d1a3f4", "Url": "https://api.github.com/repos/eriq-augustine/psl", "Date": "2016-11-19T00:30:07Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.playerList_) == null) this.playerList_ = new java.util.ArrayList<java.lang.String>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4930/buggy-version/RouteRunner.android.src.com.cs130.routerunner.android.LobbyActivity.java", "BodyUseAPI": [], "Fixed commit": "df1823d0a5225914703070c8a8a411a6f38780a5", "Url": "https://api.github.com/repos/CS130-RouteRunner/routerunner-mobile", "Date": "2015-11-19T02:36:17Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.getMajorVersion()) < 3) { ctx.addListener(org.jboss.portletbridge.config.BridgeConfigureListener.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6975/buggy-version/core.portletbridge-impl.src.main.java.org.jboss.portletbridge.config.BridgeInitializer.java", "BodyUseAPI": ["javax.servlet.ServletContext.addListener(java.lang.Class)"], "Fixed commit": "ca760cde2a6fd3c3ef59d5869dfbe1b298d85864", "Url": "https://api.github.com/repos/ammendonca/jbossportletbridge", "Date": "2013-07-17T13:29:29Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageByte) != null) { byte[] decodedString = android.util.Base64.decode(imageByte, Base64.DEFAULT); android.graphics.Bitmap decodedByte = android.graphics.BitmapFactory.decodeByteArray(decodedString, 0, decodedString.length); image.setImageBitmap(decodedByte); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7626/buggy-version/AdventureBook.src.c301.AdventureBook.AnnotationActivity.java", "BodyUseAPI": [], "Fixed commit": "8c966b4aba916b5f8078e3e75e304f81cd1efb11", "Url": "https://api.github.com/repos/CMPUT301F13T11/Team11AdventureBook", "Date": "2013-11-25T07:58:23Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status.isRetweet()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3060/buggy-version/app.src.main.java.com.example.mick.emotionanalizer.TwitterCrawler.java", "BodyUseAPI": [], "Fixed commit": "f1e68a467e756755fd3df6f4cdd5a8345c6e50db", "Url": "https://api.github.com/repos/remc17green/twitteranalysis", "Date": "2017-04-29T04:31:50Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (forceShow) { forceHide = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6861/buggy-version/library.src.main.java.com.melnykov.fab.FloatingActionButton.java", "BodyUseAPI": [], "Fixed commit": "142d72eaa86e97c58d953dd61c5a6649fddcd544", "Url": "https://api.github.com/repos/PeeJWeeJ/FloatingActionButton", "Date": "2015-10-23T15:22:43Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (forceHide) { forceShow = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6861/buggy-version/library.src.main.java.com.melnykov.fab.FloatingActionButton.java", "BodyUseAPI": [], "Fixed commit": "142d72eaa86e97c58d953dd61c5a6649fddcd544", "Url": "https://api.github.com/repos/PeeJWeeJ/FloatingActionButton", "Date": "2015-10-23T15:22:43Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((model == null) || ((model.getAvatars()) == null)) || ((model.getAvatars().getMedium()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2204/buggy-version/app.src.main.java.com.jx.moviehub.viewholder.CastViewHolder.java", "BodyUseAPI": [], "Fixed commit": "76a1877b2c8f43292a873d6d4cd61b0c23391180", "Url": "https://api.github.com/repos/handsomeslow/MovieHub", "Date": "2017-02-13T09:17:22Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.soap.SOAPElement.getElementQName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.anonymous.solar.server.TRateSOAPHandler.INSERT_TARIFF_RATE.equals(qname)) { responsePojo = handleInsertTariffRateRequest(soapElement); break; }else if (com.anonymous.solar.server.TRateSOAPHandler.REMOVE_TARIFF_RATE.equals(qname)) { responsePojo = handleRemoveTariffRateRequest(soapElement); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5775/buggy-version/src.com.anonymous.solar.server.TRateSOAPHandler.java", "BodyUseAPI": ["javax.xml.namespace.QName.equals(javax.xml.namespace.QName)"], "Fixed commit": "d1f38bb0b4e75b52c3cfeefa7f0e2fdcf5990db6", "Url": "https://api.github.com/repos/dkartaschew/anonymous-solarenergy", "Date": "2012-09-26T02:10:48Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (base != null) { link.setBaseUri(base); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6412/buggy-version/src.main.java.org.warcbase.pig.piggybank.ExtractLinks.java", "BodyUseAPI": ["org.jsoup.nodes.Element.setBaseUri(java.lang.String)"], "Fixed commit": "a3a2cd7853c8b69c95395711b56836b8cd706939", "Url": "https://api.github.com/repos/lintool/warcbase", "Date": "2015-05-12T22:29:18Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (candy != null) { if (candyMachine.canBuyCandy(candy)) { candy = candyMachine.buyCandy(code); logTextArea.append(((((\"Purchased \" + (candy.name)) + \" for \u20ac\") + (java.lang.String.format(\"%.2f\", candy.priceInEuro()))) + \"\\n\")); }else { logTextArea.append(((((((\"\\n\" + \"You do not have enough money to buy \") + (candy.name)) + \".\\n\") + \"please add \u20ac\") + (((double) ((candy.price) - (candyMachine.balance))) / 100)) + \" to your balance.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8057/buggy-version/src.com.company.CandyMachineUI.java", "BodyUseAPI": ["com.company.CandyMachine.canBuyCandy(com.company.Candy)"], "Fixed commit": "1122e942e205152e0caa8f3dec5690e135b19a19", "Url": "https://api.github.com/repos/cor/CandyMachine", "Date": "2015-06-01T08:54:27Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ws) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9174/buggy-version/app.src.main.java.com.hyperionii.android.cerebrate.WebSocketClient.java", "BodyUseAPI": [], "Fixed commit": "37c0d87000cbc7d14239189e2c4a45e8132bfa85", "Url": "https://api.github.com/repos/HyperionII/android_cerebrate", "Date": "2016-02-29T16:31:16Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentExercisePartModel == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7275/buggy-version/30days.app.src.main.java.com.challenge.bennho.a30days.controls.LayoutExerciseStates.java", "BodyUseAPI": [], "Fixed commit": "5d9744d04be9135f6051ba238de3467e1e08049c", "Url": "https://api.github.com/repos/soulwraith/thirtydays", "Date": "2017-06-04T10:29:45Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.siddhi.debs2016.post.Post.getPostId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (postStore.getPostList().containsKey(postID)) { postScoreMap.put(newScore, postID); if (nextQueue != null) { nextQueue.add(commentPostObject); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7304/buggy-version/src.main.java.org.wso2.siddhi.debs2016.comment.TimeWindow.java", "BodyUseAPI": ["edu.ucla.sspace.util.BoundedSortedMultiMap<java.lang.Integer, java.lang.Long>.put(int,long)"], "Fixed commit": "13e7f80532c2a12d0fad24ddcff5a02de072ccff", "Url": "https://api.github.com/repos/miyurud/debs2016", "Date": "2016-04-12T11:07:21Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ctx.kernalContext().cacheObjects().binary().type(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { throw new org.apache.ignite.internal.processors.platform.client.IgniteClientException(org.apache.ignite.internal.processors.platform.client.ClientStatus.FAILED, (\"Binary type not found: \" + (typeId))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/359/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.platform.client.binary.ClientBinaryTypeGetRequest.java", "BodyUseAPI": [], "Fixed commit": "01efdaadbcc9d51dc2c767a1067107ac4e2f2657", "Url": "https://api.github.com/repos/ptupitsyn/ignite", "Date": "2017-10-18T13:12:49Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((processing) == null) charge = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1661/buggy-version/src.main.java.subsistence.common.tile.machine.TileHammerMill.java", "BodyUseAPI": [], "Fixed commit": "f48aa8b85bcb09401d4832f96f3823cef59d05c8", "Url": "https://api.github.com/repos/CyanideX/Subsistence", "Date": "2015-07-19T09:41:14Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name != null) && ((name.length()) > 0)) { this.name = name; }else throw new java.lang.IllegalArgumentException(\"Le nom d'un groupe doit \u00eatre rempli !\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8346/buggy-version/Janote.src.com.janote.model.entities.Group.java", "BodyUseAPI": [], "Fixed commit": "a6e1bd2c5b2e6861553c2ed51e34eb74a181c4f6", "Url": "https://api.github.com/repos/stellasia/janote", "Date": "2015-05-21T19:37:39Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getY()) >= 0) { logisticspipes.proxy.MainProxy.sendToPlayerList(logisticspipes.network.PacketHandler.getPacket(logisticspipes.network.packets.module.ApiaristAnalyserMode.class).setInteger2(slot).setInteger(getExtractMode()).setPosX(getX()).setPosY(getY()).setPosZ(getZ()), localModeWatchers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2431/buggy-version/common.logisticspipes.modules.ModuleApiaristAnalyser.java", "BodyUseAPI": [], "Fixed commit": "7ccf61d1f07c57f9b9e53c08394fadb77556b54d", "Url": "https://api.github.com/repos/RS485/LogisticsPipes-Dev", "Date": "2014-04-23T13:30:43Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((reMatch.group(1)) != null) { playerWorldSpec = reMatch.group(1).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1250/buggy-version/src.au.com.addstar.pansentials.modules.SpawnMobModule.java", "BodyUseAPI": ["java.lang.String.toString()", "java.util.regex.Matcher.group(int)"], "Fixed commit": "ef55d7a5536c6c78aa98161a2df9b75bbdab7376", "Url": "https://api.github.com/repos/AddstarMC/Pansentials", "Date": "2015-10-23T04:45:14Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldName.isEmpty()) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"Missing world name after the # sign\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1250/buggy-version/src.au.com.addstar.pansentials.modules.SpawnMobModule.java", "BodyUseAPI": [], "Fixed commit": "ef55d7a5536c6c78aa98161a2df9b75bbdab7376", "Url": "https://api.github.com/repos/AddstarMC/Pansentials", "Date": "2015-10-23T04:45:14Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!exists) { misses.add(new Point(p.x, p.y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7599/buggy-version/src.main.java", "BodyUseAPI": [], "Fixed commit": "476d10d9cdbd795837e844713a1cd1e36f5c301d", "Url": "https://api.github.com/repos/dustinmhorvath/simpleProjects", "Date": "2015-05-14T21:21:19Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.braintags.netrelay.controller.persistence.RecordContractor.extractIds(de.braintags.io.vertx.pojomapper.mapping.IMapper,de.braintags.netrelay.controller.AbstractCaptureController.CaptureMap)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ids.isEmpty())) { de.braintags.io.vertx.pojomapper.dataaccess.query.ISearchConditionContainer and = query.and(); for (java.lang.String[] id : ids) { and.getConditions().add(query.isEqual(id[0], id[1])); } query.setSearchCondition(and); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8744/buggy-version/src.main.java.de.braintags.netrelay.controller.persistence.RecordContractor.java", "BodyUseAPI": [], "Fixed commit": "cd551e4404de843fab5ff1ecdae06623789a3859", "Url": "https://api.github.com/repos/BraintagsGmbH/NetRelay-Controller", "Date": "2017-01-16T10:35:38Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a >= 1) && (b <= (DataStructures.ArrayManipulation.arrayIntegers.length))) { for (int i = a - 1; i < b; i++) { DataStructures.ArrayManipulation.arrayIntegers[i] += k; } }else { java.lang.System.out.println(\"invalid; a must be greater than 0 & b must be less than or equal to n elements\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7325/buggy-version/HackerRankChallenges.src.DataStructures.ArrayManipulation.java", "BodyUseAPI": [], "Fixed commit": "086adc0cb5a85d9a33b428aecc28be9e9bdc88c1", "Url": "https://api.github.com/repos/vivz753/HackerRankChallenges", "Date": "2017-12-12T05:14:36Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (verifiable) { buffer.putInt(uk.co.real_logic.aeron.tools.MessageStream.MAGIC_OFFSET, uk.co.real_logic.aeron.tools.MessageStream.MAGIC_END); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5488/buggy-version/aeron-tools.src.main.java.uk.co.real_logic.aeron.tools.MessageStream.java", "BodyUseAPI": [], "Fixed commit": "ef74a8c462c04daab98af1a30b562823db9cf63b", "Url": "https://api.github.com/repos/strangelydim/Aeron", "Date": "2015-03-18T18:54:49Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cts.crs.CoordinateReferenceSystem.getDatum()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((datum.getEllipsoid().getInverseFlattening()) != (java.lang.Double.POSITIVE_INFINITY)) { w.append(',').append(datum.getEllipsoid().getInverseFlattening()); }else { w.append(',').append(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7996/buggy-version/src.main.java.org.cts.parser.prj.PrjWriter.java", "BodyUseAPI": ["datum.getEllipsoid().getInverseFlattening()", "org.cts.datum.Datum.getEllipsoid()", "java.lang.StringBuilder.append(datum.getEllipsoid().getInverseFlattening())"], "Fixed commit": "7725de500a5b4b13c0b371cde801e3019dbd1518", "Url": "https://api.github.com/repos/jparty/CTS", "Date": "2013-07-03T12:52:52Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.axelby.podax.PlayerService._player) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3279/buggy-version/src.com.axelby.podax.PlayerService.java", "BodyUseAPI": [], "Fixed commit": "e1cd1ecdbf6f732a3d5d5b8afd878246a40687e0", "Url": "https://api.github.com/repos/thasmin/Podax", "Date": "2012-04-22T15:38:28Z"},
{"Line": "=>1326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mThread) != null) mThread.interrupt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6781/buggy-version/src.fi.mikuz.boarder.gui.BoardEditor.java", "BodyUseAPI": [], "Fixed commit": "0136fe5916945560156951933db132aa9d27908b", "Url": "https://api.github.com/repos/Mikuz/Boarder", "Date": "2013-09-15T13:41:02Z"},
{"Line": "=>1098", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rgb[i]) >>> 24) < 128) pixels[i] = ((byte) (255)); else pixels[i] = ((byte) ((((((rgb[i]) >> 16) & 255) * 0.2126) + ((((rgb[i]) >> 8) & 255) * 0.7152)) + (((rgb[i]) & 255) * 0.0722)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6255/buggy-version/src.cafe.image.util.IMGUtils.java", "BodyUseAPI": [], "Fixed commit": "d0882903c3325713f24476d42918abc82d11fb55", "Url": "https://api.github.com/repos/dragon66/icafe", "Date": "2014-11-26T18:11:24Z"},
{"Line": "=>1134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rgb[i]) >>> 24) < 128) pixels[i] = ((byte) (255)); else pixels[i] = ((byte) ((((((rgb[i]) >> 16) & 255) * 0.2126) + ((((rgb[i]) >> 8) & 255) * 0.7152)) + (((rgb[i]) & 255) * 0.0722)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6255/buggy-version/src.cafe.image.util.IMGUtils.java", "BodyUseAPI": [], "Fixed commit": "d0882903c3325713f24476d42918abc82d11fb55", "Url": "https://api.github.com/repos/dragon66/icafe", "Date": "2014-11-26T18:11:24Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > 0) { infinity.resource.gam.Familiar familiar = new infinity.resource.gam.Familiar(this, buffer, offset); offset += familiar.getSize(); list.add(familiar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/402/buggy-version/src.infinity.resource.gam.GamResource.java", "BodyUseAPI": [], "Fixed commit": "c401e8bc734d8eeaaca0c1a752221d27cc3c9aa5", "Url": "https://api.github.com/repos/NearInfinityBrowser/NearInfinity", "Date": "2013-08-29T14:37:46Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (drawerToggle.onOptionsItemSelected(item)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6545/buggy-version/app.src.main.java.example.com.mpdlcamera.Folder.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "606ed01c899b3dc363185182cb82f17719e8b5fe", "Url": "https://api.github.com/repos/MPDL/LabCam_imeji", "Date": "2015-11-04T13:24:58Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(StringPool.SLASH)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (slashIndex == (-1)) { return com.liferay.knowledge.base.constants.KBArticleConstants.DEFAULT_PRIORITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5979/buggy-version/modules.apps.knowledge-base.knowledge-base-service.src.main.java.com.liferay.knowledge.base.internal.importer.KBArticleImporter.java", "BodyUseAPI": [], "Fixed commit": "8c68fa1e2f7d8ad4090daec7396bd09566bb2969", "Url": "https://api.github.com/repos/koor4356/liferay-portal", "Date": "2017-12-05T09:11:19Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (builder.showGui) { executor = com.google.common.util.concurrent.MoreExecutors.newDirectExecutorService(); }else { executor = com.google.common.util.concurrent.MoreExecutors.listeningDecorator(java.util.concurrent.Executors.newFixedThreadPool(threads)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8536/buggy-version/experiment.src.main.java.com.github.rinde.rinsim.experiment.LocalComputer.java", "BodyUseAPI": [], "Fixed commit": "5323aed669ed2f0d47c96f1af770d398b3340405", "Url": "https://api.github.com/repos/rinde/RinSim", "Date": "2015-08-19T14:51:29Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.wsAddr.equals(MixAll.WS_ADDR)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2564/buggy-version/common.src.main.java.org.apache.rocketmq.common.namesrv.TopAddressing.java", "BodyUseAPI": [], "Fixed commit": "ffff63704577e51534a7f793d5c13b23cd91c188", "Url": "https://api.github.com/repos/qqeasonchen/incubator-rocketmq", "Date": "2017-07-26T11:25:15Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fieldEntityAnnotation != null) { java.lang.String columnName = garin.artemiy.simple.sqlite.util.DatabaseUtil.getColumnName(field); if (columnName != null) columnsList.add(columnName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3356/buggy-version/src.garin.artemiy.simple.sqlite.SQLiteSimpleDAO.java", "BodyUseAPI": [], "Fixed commit": "2a5cbdb5f3f6a50a18b1dcc75edc319fe7f158c0", "Url": "https://api.github.com/repos/kvirair/SQLite-Simple-Android", "Date": "2013-01-08T18:18:39Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fieldEntityAnnotation != null) { classField.set(newTObject, getValueFromCursor(cursor, field)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3356/buggy-version/src.garin.artemiy.simple.sqlite.SQLiteSimpleDAO.java", "BodyUseAPI": [], "Fixed commit": "2a5cbdb5f3f6a50a18b1dcc75edc319fe7f158c0", "Url": "https://api.github.com/repos/kvirair/SQLite-Simple-Android", "Date": "2013-01-08T18:18:39Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fieldEntityAnnotation != null) { putInContentValues(contentValues, field, object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3356/buggy-version/src.garin.artemiy.simple.sqlite.SQLiteSimpleDAO.java", "BodyUseAPI": [], "Fixed commit": "2a5cbdb5f3f6a50a18b1dcc75edc319fe7f158c0", "Url": "https://api.github.com/repos/kvirair/SQLite-Simple-Android", "Date": "2013-01-08T18:18:39Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fieldEntityAnnotation != null) { putInContentValues(contentValues, field, newObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3356/buggy-version/src.garin.artemiy.simple.sqlite.SQLiteSimpleDAO.java", "BodyUseAPI": [], "Fixed commit": "2a5cbdb5f3f6a50a18b1dcc75edc319fe7f158c0", "Url": "https://api.github.com/repos/kvirair/SQLite-Simple-Android", "Date": "2013-01-08T18:18:39Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((type) == (de.game_coding.armypicker.model.UnitOptionGroup.GroupType.X_OF_EACH_PER_MODEL)) || (((options.size()) == 1) && (((type) == (de.game_coding.armypicker.model.UnitOptionGroup.GroupType.ONE_PER_MODEL)) || ((type) == (de.game_coding.armypicker.model.UnitOptionGroup.GroupType.ONE_PER_MODEL_EXEPT_ONE))))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6445/buggy-version/ArmyPicker.src.de.game_coding.armypicker.model.UnitOptionGroup.java", "BodyUseAPI": [], "Fixed commit": "432b05b99c8e9aa017223ce5b7e517c5c9be7034", "Url": "https://api.github.com/repos/BlueCobold/ArmyPicker", "Date": "2017-05-28T19:42:39Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((actor.extID) == 0) return guessCharacterForActor(actor.name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8715/buggy-version/java.sage.SeriesInfo.java", "BodyUseAPI": ["sage.SeriesInfo.guessCharacterForActor(actor.name)"], "Fixed commit": "e09925dc4fde8d4047baaa8f6a1c048a1cbd4242", "Url": "https://api.github.com/repos/gasinger/sagetv", "Date": "2015-09-15T00:04:16Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TabLayout.Tab.getCustomView()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tabView == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5631/buggy-version/app.src.main.java.com.mybus.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "220ebfca9a27e148318bd04cea3491bf3e935d17", "Url": "https://api.github.com/repos/sparkdigital/mybus-android", "Date": "2016-12-06T16:01:35Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holder.tableLayout.getChildCount()) > 1) { for (int childPos = 1; childPos < (holder.tableLayout.getChildCount()); childPos++) { if ((holder.tableLayout.getChildAt(childPos)) != null) { holder.tableLayout.removeView(holder.tableLayout.getChildAt(childPos)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7021/buggy-version/app.src.main.java.com.example.anubhav.vacmet.adapters.ListOrderInformation.java", "BodyUseAPI": ["android.widget.TableLayout.removeView(holder.tableLayout.getChildAt(childPos))", "android.widget.TableLayout.getChildAt(int)", "android.widget.TableLayout.getChildAt(int)", "android.widget.TableLayout.getChildCount()"], "Fixed commit": "768dcd62a12c72d0b78209d5e6f5483eb48e1fb3", "Url": "https://api.github.com/repos/jay1493/vacmetOrderStatus", "Date": "2017-10-03T07:56:14Z"},
{"Line": "=>1163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.cel4j.java.binary.classfile.CPInfo>.indexOf(org.cel4j.java.binary.classfile.CPInfo)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index != (-1)) { cPInfos.remove(index); if (index < (cPInfos.size())) { cPInfo = cPInfos.get(index); if (cPInfo instanceof org.cel4j.java.binary.classfile.ConstantUnreachableInfo) { cPInfos.remove(index); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6165/buggy-version/src.main.org.cel4j.java.binary.classfile.ClassFile.java", "BodyUseAPI": ["java.util.List<org.cel4j.java.binary.classfile.CPInfo>.get(int)", "java.util.List<org.cel4j.java.binary.classfile.CPInfo>.remove(int)", "java.util.List<org.cel4j.java.binary.classfile.CPInfo>.remove(int)"], "Fixed commit": "3bc7df139d921fca378803c28e5515f6b004c855", "Url": "https://api.github.com/repos/WavePropagation/org.cel4j.java.binary", "Date": "2014-06-05T22:14:34Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((match) != null) { match.cleanUpOnMatchEnd(isTournament); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2113/buggy-version/Mage.src.mage.game.Table.java", "BodyUseAPI": [], "Fixed commit": "95b39bd44ccd601f859eae976a3bf4b921e0dae4", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-03-15T23:36:36Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["infographic.MainPart.getHighestChild()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (child != null) { int childHeight = child.getImageHeight(); if (childHeight > height) { heighestChild = child; height = childHeight; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2182/buggy-version/src.infographic.CompositeMainPart.java", "BodyUseAPI": ["infographic.ExtraPart.getImageHeight()"], "Fixed commit": "052a3db52b65a5649827896771b16f0eef7f49dc", "Url": "https://api.github.com/repos/DieterN/DynamicInfographics", "Date": "2015-04-24T10:07:53Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (state == null) { cards.getWordLabel().setText(\"\"); cards.getPrgBar().setValue(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2389/buggy-version/EnglishCards.src.ua.com.hedgehogsoft.listener.StartAction.java", "BodyUseAPI": [], "Fixed commit": "7d5be8deec92104c0bc7474b69b60c7a00fa22f6", "Url": "https://api.github.com/repos/andrey2901/Tools", "Date": "2015-05-13T19:27:43Z"},
{"Line": "=>853", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((env1.size()) > (env2.size())) { for (int i = env.size(); i != (env1.size()); ++i) { env.add(env1.get(i)); } }else if ((env2.size()) > (env1.size())) { for (int i = env.size(); i != (env2.size()); ++i) { env.add(env2.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9308/buggy-version/src.wyc.stages.BackPropagation.java", "BodyUseAPI": ["wyc.stages.BackPropagation.Env.size()", "wyc.stages.BackPropagation.Env.add(wyc.stages.Type)", "wyc.stages.BackPropagation.Env.get(int)", "wyc.stages.BackPropagation.Env.add(wyc.stages.Type)", "wyc.stages.BackPropagation.Env.get(int)", "wyc.stages.BackPropagation.Env.size()", "wyc.stages.BackPropagation.Env.size()", "wyc.stages.BackPropagation.Env.size()"], "Fixed commit": "06dae4f8b84762121a07c326eb67b45755b6be00", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-11-12T01:53:57Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valid) { return java.lang.String.format(\"(%s)%s-%s\", areacode, value.substring(0, 3), value.substring(3)); }else { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6821/buggy-version/src.banking.MobilePhoneNumber.java", "BodyUseAPI": [], "Fixed commit": "73367f593addfd9581481769095d6c1b724e88d1", "Url": "https://api.github.com/repos/norman-ma/atmsimulator", "Date": "2017-04-22T04:39:36Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (valid) { areacode = number.substring(0, 3); value = number.substring(3); }else { value = number; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6821/buggy-version/src.banking.MobilePhoneNumber.java", "BodyUseAPI": [], "Fixed commit": "73367f593addfd9581481769095d6c1b724e88d1", "Url": "https://api.github.com/repos/norman-ma/atmsimulator", "Date": "2017-04-22T04:39:36Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (parentConcept != null) { parameter.setContainer(parentConcept.getDisplayString()); parameter.setContainerId(parentConcept.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7199/buggy-version/omod.src.main.java.org.openmrs.module.laboratoryapp.util.LaboratoryUtil.java", "BodyUseAPI": ["org.openmrs.module.laboratoryapp.util.ParameterModel.setContainer(parentConcept.getDisplayString())", "org.openmrs.module.laboratoryapp.util.ParameterModel.setContainerId(parentConcept.getId())", "org.openmrs.Concept.getId()", "org.openmrs.Concept.getDisplayString()"], "Fixed commit": "f528771beffa077075f4c02f242df0f7e4b676af", "Url": "https://api.github.com/repos/bespokeinteractive/laboratory-app", "Date": "2016-06-16T05:25:01Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((datasetConfiguration.getOffheapResourceName()) != null) { datasetConfigurationBuilder = offHeapMethod.invoke(datasetConfigurationBuilder, datasetConfiguration.getOffheapResourceName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8819/buggy-version/src.main.java.org.terracotta.tinypounder.DatasetManagerBusinessReflectionImpl.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.lang.Object,datasetConfiguration.getOffheapResourceName())", "org.terracotta.tinypounder.DatasetConfiguration.getOffheapResourceName()"], "Fixed commit": "ddaf47efb358a105f9a11c58a5c5b6343a5734c2", "Url": "https://api.github.com/repos/mathieucarbou/tinypounder", "Date": "2017-08-17T16:35:42Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((datasetConfiguration.getDiskResourceName()) != null) { datasetConfigurationBuilder = diskMethod.invoke(datasetConfigurationBuilder, datasetConfiguration.getDiskResourceName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8819/buggy-version/src.main.java.org.terracotta.tinypounder.DatasetManagerBusinessReflectionImpl.java", "BodyUseAPI": ["org.terracotta.tinypounder.DatasetConfiguration.getDiskResourceName()", "java.lang.reflect.Method.invoke(java.lang.Object,datasetConfiguration.getDiskResourceName())"], "Fixed commit": "ddaf47efb358a105f9a11c58a5c5b6343a5734c2", "Url": "https://api.github.com/repos/mathieucarbou/tinypounder", "Date": "2017-08-17T16:35:42Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.skip(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tail > totalChars) file.skip(0); else file.skip((totalChars - tail));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6137/buggy-version/vcd.VCD.java", "BodyUseAPI": ["java.io.BufferedReader.skip(long)"], "Fixed commit": "d48bf76ff933aa5ae115b68e4ccfd6adac0055fe", "Url": "https://api.github.com/repos/impedimentToProgress/ProcessVCD", "Date": "2015-08-13T15:16:30Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isDotNetPipeDelimitedResponse(responsetHeaderAndBody[1])) { responsetHeaderAndBody[1] = responsetHeaderAndBody[1].replaceAll(\"(?i)\\\\\\\\[\\\\s]+\\\"[\\\\s]*:\", \"\\\\\\\\\\\":\"); responsetHeaderAndBody[1] = responsetHeaderAndBody[1].replaceAll(\"(?i)\\\\\\\\[\\\\s]+\\\"[\\\\s]*,\", \"\\\\\\\\\\\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1825/buggy-version/jsbeautifier.src.burp.JSBeautifier.JSBeautifierFunctions.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "12ba466f6c37bdf255d472b9ee527d3630ddb9dd", "Url": "https://api.github.com/repos/irsdl/BurpSuiteJSBeautifier", "Date": "2014-02-18T23:35:59Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cntx == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9239/buggy-version/app.src.main.java.com.utyf.pmetro.util.Util.java", "BodyUseAPI": [], "Fixed commit": "0ddfa2324727483430761f93e6182c1604af2f8d", "Url": "https://api.github.com/repos/Utyff/pMetro", "Date": "2016-10-23T16:21:08Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seq == 0) { found = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1829/buggy-version/Integration-Project.src.network.SeqAckTable.java", "BodyUseAPI": [], "Fixed commit": "eb8d2169854f4c4264e79d2470880ce20b3a6e99", "Url": "https://api.github.com/repos/JordyvdZwan/IntegrationProject", "Date": "2016-04-12T08:45:33Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiElement.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (definitionNode instanceof org.ballerinalang.plugins.idea.psi.ConnectorDefinitionNode) { return new org.ballerinalang.plugins.idea.psi.references.ActionInvocationReference(this); }else if (definitionNode instanceof org.ballerinalang.plugins.idea.psi.VariableDefinitionNode) { return checkDefinitionAndSuggestReference(((org.ballerinalang.plugins.idea.psi.VariableDefinitionNode) (definitionNode))); }else if (definitionNode instanceof org.ballerinalang.plugins.idea.psi.CodeBlockParameterNode) { return new org.ballerinalang.plugins.idea.psi.references.FieldReference(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7744/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.IdentifierPSINode.java", "BodyUseAPI": [], "Fixed commit": "e86ddbd78c82a3814dc7b648032a5f522c7660ff", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2017-07-20T09:23:04Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (doc != null) { result.add(doc); java.lang.System.out.println((\"Crawled: \" + url)); java.lang.Thread.sleep(300); if (current < (depth)) { for (java.lang.String link : doc.links) { crawl(link, (current + 1)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9162/buggy-version/src.spinfo.Crawling.java", "BodyUseAPI": ["java.util.List<spinfo.Crawling.WebDocument>.add(spinfo.Crawling.WebDocument)"], "Fixed commit": "05e7f7d367d0210d4c019adfe5e480eca67502f9", "Url": "https://api.github.com/repos/spinfo/java", "Date": "2011-07-28T16:39:07Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scanData.capabilities.equals(\"Open\")) { mPwd.setVisibility(View.GONE); mPwdField.setVisibility(View.GONE); }else { mPwd.setVisibility(View.VISIBLE); mPwdField.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7587/buggy-version/hanin.mobile.wifimanager.src.hanin.mobile.wifimanager.widget.ConnectionBox1.java", "BodyUseAPI": [], "Fixed commit": "a00109320d6f0e7b9f887a6d34e6778c51e213ac", "Url": "https://api.github.com/repos/arthastseng/HanInMobileWifi", "Date": "2015-02-18T01:13:37Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vincit.go.task.slack.model.Config.getColorType()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (colorType == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4629/buggy-version/src.main.java.com.vincit.go.task.slack.model.Config.java", "BodyUseAPI": [], "Fixed commit": "f07714db032f3552b88c4ad529774a586ecc1a14", "Url": "https://api.github.com/repos/Vincit/gocd-slack-task", "Date": "2016-01-15T15:02:13Z"},
{"Line": "=>1836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWellSampleDataSelection(selected)) { return; }else if (selected instanceof omero.gateway.model.DataObject) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((omero.gateway.model.DataObject) (selected))); accept(visitor); foundNode = visitor.getSelectedNode(); if (foundNode != null) { if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else view.setFoundNode(null); }else if (selected instanceof org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) { foundNode = ((org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) (selected)); if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else if (selected instanceof java.util.List) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((java.util.List<omero.gateway.model.DataObject>) (selected))); accept(visitor); java.util.List<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> nodes = visitor.getSelectedNodes(); if ((nodes.size()) == 0) { view.setFoundNode(null); }else if ((nodes.size()) == 1) { model.setSelectedDisplay(nodes.get(0), true); view.setFoundNode(model.getSelectedDisplays()); }else { model.setSelectedDisplay(null, true); java.util.Iterator<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> i = nodes.iterator(); while (i.hasNext()) model.addFoundNode(i.next()); view.setFoundNode(model.getSelectedDisplays()); } }else if (selected instanceof java.lang.String) { model.setSelectedDisplay(null, true); view.setFoundNode(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1676/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.treeviewer.browser.BrowserComponent.java", "BodyUseAPI": [], "Fixed commit": "606dd7be2f7f6a2c3954603f1843ef8a470f6fc5", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-05-23T03:07:11Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(uid)) { dao.setScreen_name(((org.qii.weiciyuan.ui.Abstract.IUserInfo) (getActivity())).getUser().getScreen_name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4968/buggy-version/src.org.qii.weiciyuan.ui.userinfo.StatusesByIdTimeLineFragment.java", "BodyUseAPI": [], "Fixed commit": "dcbbcf616762ca1587b0d370e8e5447aaa2e5ceb", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-27T15:33:52Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(uid)) { dao.setScreen_name(((org.qii.weiciyuan.ui.Abstract.IUserInfo) (getActivity())).getUser().getScreen_name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4968/buggy-version/src.org.qii.weiciyuan.ui.userinfo.StatusesByIdTimeLineFragment.java", "BodyUseAPI": [], "Fixed commit": "dcbbcf616762ca1587b0d370e8e5447aaa2e5ceb", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-27T15:33:52Z"},
{"Line": "=>909", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((txEntry.type) == (com.orientechnologies.orient.core.db.record.ORecordOperation.CREATED)) || ((txEntry.type) == (com.orientechnologies.orient.core.db.record.ORecordOperation.UPDATED))) { final com.orientechnologies.orient.core.record.ORecord record = txEntry.getRecord(); if (record instanceof com.orientechnologies.orient.core.record.impl.ODocument) ((com.orientechnologies.orient.core.record.impl.ODocument) (record)).validate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8870/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage.java", "BodyUseAPI": ["com.orientechnologies.orient.core.db.record.ORecordOperation.getRecord()"], "Fixed commit": "2949af2283c5e43403c99221ab2ab971925e47c6", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-03-11T02:40:20Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLocation) == null) { android.location.LocationManager locationManager = ((android.location.LocationManager) (getContext().getSystemService(Context.LOCATION_SERVICE))); android.location.Criteria criteria = new android.location.Criteria(); java.lang.String provider = locationManager.getBestProvider(criteria, true); if (((android.support.v4.app.ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { } currentLocation = locationManager.getLastKnownLocation(provider); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3618/buggy-version/app.src.main.java.com.example.nitishbhaskar.cherrypick.SellFragment.java", "BodyUseAPI": [], "Fixed commit": "96b1ef502d1c507e2fa21e677d38b82ccc44d1a3", "Url": "https://api.github.com/repos/nitishbhaskar/CherryPick", "Date": "2016-04-30T16:23:45Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAttachedFragment) != null) { mViewPagerAdapter.putItem(mAttachedFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6448/buggy-version/src.org.kiwix.kiwixmobile.KiwixMobileActivity.java", "BodyUseAPI": [], "Fixed commit": "99a21c92e8f09e694330bc5d78617426dbc0a796", "Url": "https://api.github.com/repos/kiwix/kiwix-android", "Date": "2014-06-19T11:25:19Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1607/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "6dedc07cc4bc62a998e5bb42230346806f5fb7d1", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-25T19:28:41Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((root.left) == null) && ((root.right) == null)) { return root; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3497/buggy-version/chapter4.src.problem11.Solution.java", "BodyUseAPI": [], "Fixed commit": "d459452f67f4fbea51db4d41e14c70e923ce4427", "Url": "https://api.github.com/repos/anarwal/crackingthecodinginterviews", "Date": "2017-03-07T06:59:28Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getMapService().getMapWidget()) != null) { getMapService().getMapWidget().triggerResize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2820/buggy-version/src.main.java.pl.org.epf.client.local.view.MapTabViewModel.java", "BodyUseAPI": [], "Fixed commit": "29c3a8e0529523ff8163cae88155be6b0e3059d5", "Url": "https://api.github.com/repos/baldram/tristar-eye", "Date": "2016-12-10T05:30:24Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getInt(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (position != 0) showsFavorites = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2289/buggy-version/app.src.main.java.com.owenlarosa.popularmovies.MovieActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "23a746b28dcf5ba31528625b39841444d0e1e0f5", "Url": "https://api.github.com/repos/OwenLaRosa/popular-movies-android", "Date": "2016-08-18T23:38:14Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.elseClause) != null) { semant.second_pass.StatementHandler.secondPass(env, cinfo, minfo, node.elseClause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1457/buggy-version/MiniJava.src.semant.second_pass.StatementHandler.java", "BodyUseAPI": ["semant.second_pass.StatementHandler.secondPass(semant.Env,symbol.ClassInfo,symbol.MethodInfo,node.elseClause)"], "Fixed commit": "1e01a8373ccd4efc9808112f4c011358a043fe94", "Url": "https://api.github.com/repos/rafaelcgo/MC011-2011s1", "Date": "2011-05-13T04:29:07Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.newCall(request).execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((response.code()) == 200) { localRepoFile.getParentFile().mkdirs(); java.io.FileWriter out = new java.io.FileWriter(localRepoFile); out.write(response.body().string()); out.flush(); out.close(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6193/buggy-version/repairnator.repairnator-pipeline.src.main.java.fr.inria.spirals.repairnator.process.maven.RepositoryModelResolver.java", "BodyUseAPI": ["java.io.FileWriter.write(response.body().string())", "response.body().string()", "okhttp3.Response.body()"], "Fixed commit": "f8a4327be07a6d970d268c9e2e67044e11b7e735", "Url": "https://api.github.com/repos/Spirals-Team/repairnator", "Date": "2017-09-20T15:44:03Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.transitangel.transitangel.schedule.ScheduleFragment.mFromStationId) == null) { com.transitangel.transitangel.model.Transit.Trip trip = com.transitangel.transitangel.Manager.TransitManager.getSharedInstance().fetchRecentTrip(); if (trip != null) { com.transitangel.transitangel.schedule.ScheduleFragment.mFromStationId = trip.getFromStop().getId(); com.transitangel.transitangel.schedule.ScheduleFragment.mToStationId = trip.getToStop().getId(); }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4954/buggy-version/app.src.main.java.com.transitangel.transitangel.schedule.ScheduleFragment.java", "BodyUseAPI": [], "Fixed commit": "d14b22aa952e06f5eb39fe6ca8dd657fadee59f9", "Url": "https://api.github.com/repos/TransitHelper/TransitAngel", "Date": "2016-08-29T03:07:27Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bedework.webcommon.BwRequest.getClient()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cl.getPublicAdmin()) { sess.embedContactCollection(request, BwSession.preferredEntity); sess.embedLocations(request, BwSession.preferredEntity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7828/buggy-version/bw-calendar-client-webcommon.src.main.java.org.bedework.webcommon.event.FetchEventAction.java", "BodyUseAPI": [], "Fixed commit": "959e9e68f862ab76196c2936e94a770398fc113b", "Url": "https://api.github.com/repos/Bedework/bw-calendar-client", "Date": "2014-02-10T20:27:17Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Document.createElement(XMLElements.CONSTANT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((constantElt.getElementsByTagName(XMLElements.CONCEPTS).getLength()) == 0) { conceptsElt = msi.gama.precompiler.doc.DocProcessorAnnotations.getConcepts(e, doc, doc.createElement(XMLElements.CONCEPTS), tc); }else { conceptsElt = msi.gama.precompiler.doc.DocProcessorAnnotations.getConcepts(e, doc, ((org.w3c.dom.Element) (constantElt.getElementsByTagName(XMLElements.CONCEPTS).item(0))), tc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6793/buggy-version/msi.gama.processor.src.msi.gama.precompiler.GamlDocProcessor.java", "BodyUseAPI": ["org.w3c.dom.Element.getElementsByTagName(XMLElements.CONCEPTS)", "org.w3c.dom.NodeList.item(int)", "msi.gama.precompiler.doc.DocProcessorAnnotations.getConcepts(javax.lang.model.element.Element,org.w3c.dom.Document,((org.w3c.dom.Element) (constantElt.getElementsByTagName(XMLElements.CONCEPTS).item(0))),msi.gama.precompiler.TypeConverter)"], "Fixed commit": "1330d7fbe1845c8b139d51d1bbe01766d7e7f4c0", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2016-02-27T06:48:44Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getLayoutPosition()) >= (adapter.getHeaderLayoutCount())) { return (getLayoutPosition()) - (adapter.getHeaderLayoutCount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5215/buggy-version/library.src.main.java.com.chad.library.adapter.base.BaseViewHolder.java", "BodyUseAPI": ["com.chad.library.adapter.base.BaseQuickAdapter.getHeaderLayoutCount()"], "Fixed commit": "68cc05fd9fa8b4621b1ab0a62a76ee36fbe7cbd6", "Url": "https://api.github.com/repos/shichaohui/BaseRecyclerViewAdapterHelper", "Date": "2017-09-16T04:09:22Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((operation.getHeaders()) != null) && ((operation.getHeaders().getHeaders()) != null)) { for (de.jeha.batch_api.generated.model.Header header : operation.getHeaders().getHeaders()) { headerMap.put(header.getName(), header.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4012/buggy-version/client.src.main.java.de.jeha.batch_api.BatchClient.java", "BodyUseAPI": ["operation.getHeaders().getHeaders()", "de.jeha.batch_api.generated.model.Operation.getHeaders()"], "Fixed commit": "64f3fb01772b5c1784f5985670b89e88bc005f3e", "Url": "https://api.github.com/repos/jenshadlich/batch-api-prototype", "Date": "2013-04-12T13:28:30Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(kmelia.getPublicationAccessController().isUserAuthorized(kmelia.getUserId(), kmeliaPublication.getPk()))) { return \"/admin/jsp/accessForbidden.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2209/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": [], "Fixed commit": "074edb01cffcf823355bc98095b68947627f491f", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-07T11:45:50Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((blL) == null) && ((bl) != null)) { blL = eu.transkribus.errorrate.util.PolygonUtil.string2Polygon(bl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7088/buggy-version/src.main.java.eu.transkribus.errorrate.types.KWS.java", "BodyUseAPI": [], "Fixed commit": "5fad291e1500395a6ae968af83c62841cc62826e", "Url": "https://api.github.com/repos/Transkribus/TranskribusErrorRate", "Date": "2017-10-16T11:58:53Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((directionChangeInfo) != null) directionChangeInfo = original.directionChangeInfo.clone();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/980/buggy-version/src.soot.jimple.infoflow.data.Abstraction.java", "BodyUseAPI": [], "Fixed commit": "e7010abe64cc21ec5fd5e493d8e12398dd830752", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow", "Date": "2013-06-13T12:43:57Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((lastBranches != null) && ((lastBranches.length) > 0)) branchList.setListData(lastBranches);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4135/buggy-version/src.main.java.admin.astor.tools.LastBranchesListDialog.java", "BodyUseAPI": [], "Fixed commit": "de3463d765f0f3b90da9e7964c8d97230a800b41", "Url": "https://api.github.com/repos/tango-controls/Astor", "Date": "2016-11-24T12:01:48Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((src.length) < l) { src = com.kcash.util.MyByte.builder().copy(0, (l - (src.length))).copy(src).getData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7276/buggy-version/src.main.java.com.kcash.util.MyByte.java", "BodyUseAPI": ["com.kcash.util.MyByte.BuildList.getData()", "com.kcash.util.MyByte.BuildList.copy(byte[])", "com.kcash.util.MyByte.BuildList.copy(int,int)"], "Fixed commit": "611004898ad5f6709a7976d83d8aa46f25a75aad", "Url": "https://api.github.com/repos/Valeamor/kcash-trs-server", "Date": "2017-11-17T16:02:09Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (property.matches(\"Linux.*\")) { path = \"/usr/local/Wolfram\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8778/buggy-version/src.de.halirutan.mathematica.sdk.MathematicaSdkType.java", "BodyUseAPI": [], "Fixed commit": "fdc226f56be026f73fa203c2e3a5de54a46548d8", "Url": "https://api.github.com/repos/halirutan/Mathematica-IntelliJ-Plugin", "Date": "2014-05-23T07:27:54Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<elec332.core.main.ModContainer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mc.getMod()) == (this)) { hook.onConstuct(event); if (i == ((mcl.size()) - 1)) { onConstructionLast(event); reg = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6523/buggy-version/src.main.java.elec332.core.main.ElecCore.java", "BodyUseAPI": [], "Fixed commit": "9ae45752ed7a7d339ef48c7da0424fd69e5cb03a", "Url": "https://api.github.com/repos/Elecs-Mods/ElecCore", "Date": "2017-03-02T07:26:30Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(json))) { try { _filter = co.smartreceipts.android.filters.FilterFactory.getReceiptFilter(new org.json.JSONObject(json)); } catch (org.json.JSONException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6612/buggy-version/SmartReceiptsLibrary.src.co.smartreceipts.android.model.TripRow.java", "BodyUseAPI": ["co.smartreceipts.android.filters.FilterFactory.getReceiptFilter(org.json.JSONObject)"], "Fixed commit": "693116a19c2ecebf45d6fa5ff4ce66bbe7470df0", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2014-08-03T00:59:09Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (json != null) { try { _filter = co.smartreceipts.android.filters.FilterFactory.getReceiptFilter(json); } catch (org.json.JSONException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6612/buggy-version/SmartReceiptsLibrary.src.co.smartreceipts.android.model.TripRow.java", "BodyUseAPI": ["co.smartreceipts.android.filters.FilterFactory.getReceiptFilter(org.json.JSONObject)"], "Fixed commit": "693116a19c2ecebf45d6fa5ff4ce66bbe7470df0", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2014-08-03T00:59:09Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((executionCallback) != null) { future.andThen(executionCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/937/buggy-version/hazelcast.src.main.java.com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.java", "BodyUseAPI": [], "Fixed commit": "f0270683eff57132d6d1a9b65bf98331879432e4", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2016-03-19T16:02:13Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (device.equals(pendingLeft)) { pendingLeft = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1571/buggy-version/src.main.java.network.PairingHandler.java", "BodyUseAPI": [], "Fixed commit": "062cc1e7c8a98836e8f06fd6e11b7a3d3b731d78", "Url": "https://api.github.com/repos/nikake/Communication-and-data-collection-without-dependance-on-existing-infrastructure", "Date": "2017-05-10T11:40:55Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (device.equals(pendingRight)) { pendingRight = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1571/buggy-version/src.main.java.network.PairingHandler.java", "BodyUseAPI": [], "Fixed commit": "062cc1e7c8a98836e8f06fd6e11b7a3d3b731d78", "Url": "https://api.github.com/repos/nikake/Communication-and-data-collection-without-dependance-on-existing-infrastructure", "Date": "2017-05-10T11:40:55Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.getParameters().isEmpty()) { throw new de.peeeq.wurstscript.attributes.CompileError(node1.attrSource(), \"Could not get 'this'.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8499/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.translation.imtranslation.ImTranslator.java", "BodyUseAPI": [], "Fixed commit": "d87889a8c16669ebcff92e5883ce9330badd606f", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2013-10-13T15:03:47Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node instanceof de.peeeq.wurstscript.ast.TranslatedToImFunction) && (!(node instanceof de.peeeq.wurstscript.ast.ExprClosure))) { return getThisVar(((de.peeeq.wurstscript.ast.TranslatedToImFunction) (node))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8499/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.translation.imtranslation.ImTranslator.java", "BodyUseAPI": [], "Fixed commit": "d87889a8c16669ebcff92e5883ce9330badd606f", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2013-10-13T15:03:47Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fpsLabel.isDisposed())) { fpsLabel.setText(java.lang.String.format(\"%.3f mspf (%.3f fps)\", (timeDiff / (numFrames)), (1000.0 / (timeDiff / (numFrames))))); fpsLabel.getParent().layout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7701/buggy-version/jogl.swt.utils.src.jogl.swt.utils.views.JOGLView.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Label.getParent()", "fpsLabel.getParent().layout()", "org.eclipse.swt.widgets.Label.setText(java.lang.String)"], "Fixed commit": "0494375580600bc352504b007ef891d859f25c77", "Url": "https://api.github.com/repos/lmoretto/jogl-swt-sb6", "Date": "2014-01-15T11:26:49Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFragmentTag) != null) { switch (id) { case R.id.nav_discover : if (!(mFragmentTag.equals(DashConstants.TAG_DISCOVER))) { loadFragment(com.huhx0015.doordashchallenge.view.fragments.RestaurantListFragment.newInstance(mLatitude, mLongitude, DashConstants.TAG_DISCOVER), DashConstants.TAG_DISCOVER); } break; case R.id.nav_favorites : if (!(mFragmentTag.equals(DashConstants.TAG_FAVORITES))) { loadFragment(com.huhx0015.doordashchallenge.view.fragments.RestaurantListFragment.newInstance(mLatitude, mLongitude, DashConstants.TAG_FAVORITES), DashConstants.TAG_FAVORITES); } break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3600/buggy-version/app.src.main.java.com.huhx0015.doordashchallenge.view.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "02b9314df7f5d519850bbc409a2269191c640cfb", "Url": "https://api.github.com/repos/huhx0015/DashNearby", "Date": "2017-06-09T06:30:25Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((game.getIconPath()) != null) && ((game.getIconPath().length) > 0)) application.setApplicationIconImage(com.remote.remote2d.engine.art.TextureLoader.loadImage(game.getIconPath()[0]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3200/buggy-version/Remote2D.src.com.remote.remote2d.engine.Remote2D.java", "BodyUseAPI": ["org.simplericity.macify.eawt.Application.setApplicationIconImage(com.remote.remote2d.engine.art.TextureLoader.loadImage(game.getIconPath()[0]))", "com.remote.remote2d.engine.art.TextureLoader.loadImage(game.getIconPath()[0])", "com.remote.remote2d.engine.Remote2DGame.getIconPath()"], "Fixed commit": "b462020f695e25c2a153598faa0d987a593fef9a", "Url": "https://api.github.com/repos/Flafla2/Remote2D-Engine", "Date": "2013-11-22T19:57:29Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.specpolicy.ClusterSpecFactory.getDefaultHdfsVersion(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hdpVersion == (com.vmware.bdd.specpolicy.ClusterSpecFactory.HDP_VERSION.V2_0)) { return com.vmware.bdd.specpolicy.ClusterSpecFactory.loadFromFile(com.vmware.bdd.specpolicy.ClusterSpecFactory.locateSpecFile(com.vmware.bdd.specpolicy.ClusterSpecFactory.AM_HDP_2_0_HBASE_TEMPLATE_SPEC)); }else { return com.vmware.bdd.specpolicy.ClusterSpecFactory.loadFromFile(com.vmware.bdd.specpolicy.ClusterSpecFactory.locateSpecFile(com.vmware.bdd.specpolicy.ClusterSpecFactory.AM_HDP_2_1_HBASE_TEMPLATE_SPEC)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7789/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.specpolicy.ClusterSpecFactory.java", "BodyUseAPI": [], "Fixed commit": "2ffa0e434a39190d0845ed453dcdad4dc48d09c2", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-03T06:34:32Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buildContext) != null) { buildContext.refresh(parentFoder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8963/buggy-version/wro4j-maven-plugin.src.main.java.ro.isdc.wro.maven.plugin.Wro4jMojo.java", "BodyUseAPI": [], "Fixed commit": "7a757b78c15e9dbdfe15070f126eb6fe7f421cb3", "Url": "https://api.github.com/repos/UAK-35/wro4j", "Date": "2015-08-28T21:17:15Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isReplay) { runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { makeToast(\"\u5373\u5c06\u5f00\u59cb\u56de\u653e\"); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7064/buggy-version/app.src.main.java.com.tongxue.client.Discuss.WhiteBoardActivity.java", "BodyUseAPI": [], "Fixed commit": "ddcd5e5634f311b834a5b401264f8066f501e75c", "Url": "https://api.github.com/repos/newnius/TongXue", "Date": "2016-04-21T11:12:54Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thisOrg.getOrgType().contains(recurseUpOrgType)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1908/buggy-version/model.model-common.src.main.java.com.evolveum.midpoint.model.common.expression.evaluator.AssociationFromLinkExpressionEvaluator.java", "BodyUseAPI": [], "Fixed commit": "1e170b1e8e812f491392f3530a92839d40c457af", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2017-09-28T08:45:33Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isNullOrEmpty(contentSpec.getPublicanCfg()))) && (contentSpec.getPublicanCfg().contains(\"mainfile:\"))) { log.warn(ProcessorConstants.WARN_MAINFILE_WILL_BE_REMOVED_MSG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5783/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.processor.ContentSpecValidator.java", "BodyUseAPI": [], "Fixed commit": "9d0193ee8ba923ed54b9af37e5aef38f9df66131", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpecProcessor", "Date": "2014-05-05T05:18:53Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (fs == null) { com.asakusafw.cleaner.log.Log.log(com.asakusafw.cleaner.main.HDFSCleaner.CLASS, MessageIdConst.HCLN_CLEN_DIR_ERROR, \"Path.getFileSystem\u306e\u623b\u308a\u5024\u304cnull\", cleanPath.toString()); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4007/buggy-version/asakusa-cleaner.src.main.java.com.asakusafw.cleaner.main.HDFSCleaner.java", "BodyUseAPI": [], "Fixed commit": "99677b7213090d7ec55b1bf99577e99cc1ea3b8d", "Url": "https://api.github.com/repos/asakusafw/asakusafw", "Date": "2011-05-03T01:23:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.size()) == 1) { return backend.main.Parser.handleSingleCountable(input); }else { return backend.main.Parser.handleSingleCountable(backend.main.Parser.removeOuterBrackets(input)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9136/buggy-version/src.backend.main.Parser.java", "BodyUseAPI": ["backend.main.Parser.handleSingleCountable(java.util.List<backend.blocks.Numerical>)", "backend.main.Parser.removeOuterBrackets(java.util.List<backend.blocks.Numerical>)", "backend.main.Parser.handleSingleCountable(java.util.List<backend.blocks.Numerical>)"], "Fixed commit": "ccc038f7289730f377cb000427743415c44151c6", "Url": "https://api.github.com/repos/kaiherng/linalg", "Date": "2013-05-06T21:42:28Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((packet.getMessage()) instanceof cnt.network.Broadcast) message = packet.getMessage(); else if ((packet.getMessage()) instanceof cnt.network.Whisper) message = packet.getMessage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1852/buggy-version/src.cnt.network.GameNetworking.java", "BodyUseAPI": ["cnt.network.Packet.getMessage()", "cnt.network.Packet.getMessage()", "cnt.network.Packet.getMessage()"], "Fixed commit": "fa8ecff6d775c5999d0acc0a58b29b7686230349", "Url": "https://api.github.com/repos/maandree/cnt", "Date": "2012-06-05T07:28:55Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (instance != null) { current = com.datastax.hectorjpa.proxy.ProxyUtils.getAdded(instance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8369/buggy-version/src.main.java.com.datastax.hectorjpa.meta.AbstractIndexField.java", "BodyUseAPI": ["com.datastax.hectorjpa.proxy.ProxyUtils.getAdded(java.lang.Object)"], "Fixed commit": "f4ed69d9591b7e3a8f41e9576dfb540f00ce75dc", "Url": "https://api.github.com/repos/riptano/hector-jpa", "Date": "2011-04-20T02:17:41Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getChangeTracker()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tracker == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8369/buggy-version/src.main.java.com.datastax.hectorjpa.proxy.ProxyUtils.java", "BodyUseAPI": [], "Fixed commit": "f4ed69d9591b7e3a8f41e9576dfb540f00ce75dc", "Url": "https://api.github.com/repos/riptano/hector-jpa", "Date": "2011-04-20T02:17:41Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getChangeTracker()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tracker == null) { return field; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8369/buggy-version/src.main.java.com.datastax.hectorjpa.proxy.ProxyUtils.java", "BodyUseAPI": [], "Fixed commit": "f4ed69d9591b7e3a8f41e9576dfb540f00ce75dc", "Url": "https://api.github.com/repos/riptano/hector-jpa", "Date": "2011-04-20T02:17:41Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getChangeTracker()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tracker == null) { return field; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8369/buggy-version/src.main.java.com.datastax.hectorjpa.proxy.ProxyUtils.java", "BodyUseAPI": [], "Fixed commit": "f4ed69d9591b7e3a8f41e9576dfb540f00ce75dc", "Url": "https://api.github.com/repos/riptano/hector-jpa", "Date": "2011-04-20T02:17:41Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((currentExp.getObjs()) == null) || ((currentExp.getObjs().size()) == 0)) && ((currentExp.getExpressions().size()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/210/buggy-version/javaprolog.logic.LogicalExpression.java", "BodyUseAPI": [], "Fixed commit": "c3b8ee7e9a43e3fa718f3e87eb9bf1c3e30b79d9", "Url": "https://api.github.com/repos/anerud/AIGroup1", "Date": "2014-05-19T15:12:54Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (treeGoal.getExpression().isEmpty()) { treeGoal = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/210/buggy-version/javaprolog.main.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "c3b8ee7e9a43e3fa718f3e87eb9bf1c3e30b79d9", "Url": "https://api.github.com/repos/anerud/AIGroup1", "Date": "2014-05-19T15:12:54Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length > (java.lang.Integer.MAX_VALUE)) { length = -1L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2400/buggy-version/src.main.java.com.goebl.david.WebbUtils.java", "BodyUseAPI": [], "Fixed commit": "846caad2f44ea6bd65df2c42eb80d92ca54d2e3d", "Url": "https://api.github.com/repos/hgoebl/DavidWebb", "Date": "2014-01-20T20:08:58Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (execViaStorm) { executableManager = new org.apache.pig.impl.streaming.ExecutableManager(); }else { executableManager = new org.apache.pig.backend.hadoop.streaming.HadoopExecutableManager(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7438/buggy-version/src.org.apache.pig.impl.PigContext.java", "BodyUseAPI": [], "Fixed commit": "cf253ce39954d43130a2aa8975061d151626d59f", "Url": "https://api.github.com/repos/dorefiend/pig", "Date": "2013-03-03T17:25:29Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((cal.YEAR) == (target_cal.YEAR)) && ((cal.MONTH) == (target_cal.MONTH))) && ((cal.DATE) == ((target_cal.DATE) + 1))) { list.add(sc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5994/buggy-version/cloud_garden_sever.src.jp.cloudgarden.sever.jax.CloudController.java", "BodyUseAPI": [], "Fixed commit": "fdc00bc23f7e0e2033b7ca58f3db36e9ef3cc984", "Url": "https://api.github.com/repos/cloud-garden/cloud-garden-server", "Date": "2015-10-25T18:49:53Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id2 != (R.id.galery)) { changeActivityCompat(this, finalNextIntent); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4260/buggy-version/app.src.main.java.ru.velkonost.robofest.RecyclerView_Activity.java", "BodyUseAPI": [], "Fixed commit": "ee314fb46e3bd2a4b1944e289846b74648b185a4", "Url": "https://api.github.com/repos/Velkonost/App-Robofest2017", "Date": "2017-02-10T16:08:03Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.length()) < 2) { return input + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5569/buggy-version/src.jenkem.shared.AsciiScheme.java", "BodyUseAPI": [], "Fixed commit": "c3400ce4a5c093d0ad3ab87d5c081fe2d1776165", "Url": "https://api.github.com/repos/Tok/Jenkem-9000", "Date": "2012-04-21T15:39:15Z"},
{"Line": "=>885", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((indices[Logic.TASK_LIST_POSITION]) != (cs2103_w09_1j.esther.Task.UNCODED_TASK_INDEX)) { indices[Logic.TASK_ITEM_POSITION] = (_taskDisplayLists.get(addedTask.getTaskCode(_today)).size()) - 1; }else { indices[Logic.TASK_ITEM_POSITION] = (((((_taskDisplayLists.get(Task.OVERDUE_TASK_INDEX).size()) + (_taskDisplayLists.get(Task.TODAY_TASK_INDEX).size())) + (_taskDisplayLists.get(Task.TOMORROW_TASK_INDEX).size())) + (_taskDisplayLists.get(Task.THIS_WEEK_TASK_INDEX).size())) + (_taskDisplayLists.get(addedTask.getTaskCode(_today)).size())) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/478/buggy-version/src.Logic.java", "BodyUseAPI": [], "Fixed commit": "c678fb7d07717ac2253063771a854906d3c093f1", "Url": "https://api.github.com/repos/cs2103jan2016-w09-1j/main", "Date": "2016-04-06T07:08:15Z"},
{"Line": "=>1087", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((indices[Logic.TASK_LIST_POSITION]) != (cs2103_w09_1j.esther.Task.UNCODED_TASK_INDEX)) { indices[Logic.TASK_ITEM_POSITION] = (_taskDisplayLists.get(copyOfOldTask.getTaskCode(_today)).size()) - 1; }else { indices[Logic.TASK_ITEM_POSITION] = (((((_taskDisplayLists.get(Task.OVERDUE_TASK_INDEX).size()) + (_taskDisplayLists.get(Task.TODAY_TASK_INDEX).size())) + (_taskDisplayLists.get(Task.TOMORROW_TASK_INDEX).size())) + (_taskDisplayLists.get(Task.THIS_WEEK_TASK_INDEX).size())) + (_taskDisplayLists.get(copyOfOldTask.getTaskCode(_today)).size())) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/478/buggy-version/src.Logic.java", "BodyUseAPI": [], "Fixed commit": "c678fb7d07717ac2253063771a854906d3c093f1", "Url": "https://api.github.com/repos/cs2103jan2016-w09-1j/main", "Date": "2016-04-06T07:08:15Z"},
{"Line": "=>1022", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((indices[Logic.TASK_LIST_POSITION]) != (cs2103_w09_1j.esther.Task.UNCODED_TASK_INDEX)) { indices[Logic.TASK_ITEM_POSITION] = (_taskDisplayLists.get(copyOfOldTask.getTaskCode(_today)).size()) - 1; }else { indices[Logic.TASK_ITEM_POSITION] = (((((_taskDisplayLists.get(Task.OVERDUE_TASK_INDEX).size()) + (_taskDisplayLists.get(Task.TODAY_TASK_INDEX).size())) + (_taskDisplayLists.get(Task.TOMORROW_TASK_INDEX).size())) + (_taskDisplayLists.get(Task.THIS_WEEK_TASK_INDEX).size())) + (_taskDisplayLists.get(copyOfOldTask.getTaskCode(_today)).size())) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/478/buggy-version/src.Logic.java", "BodyUseAPI": [], "Fixed commit": "c678fb7d07717ac2253063771a854906d3c093f1", "Url": "https://api.github.com/repos/cs2103jan2016-w09-1j/main", "Date": "2016-04-06T07:08:15Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (genraString == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5429/buggy-version/src.data.Song.java", "BodyUseAPI": [], "Fixed commit": "b0570be77d117af8477e9f9ab115583fb424348f", "Url": "https://api.github.com/repos/ychalier/l2t", "Date": "2017-11-18T11:58:56Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (matchs == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5429/buggy-version/src.data.Song.java", "BodyUseAPI": [], "Fixed commit": "b0570be77d117af8477e9f9ab115583fb424348f", "Url": "https://api.github.com/repos/ychalier/l2t", "Date": "2017-11-18T11:58:56Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["database.DatabaseConnector.setTempPassword(dto.UserDto,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (set.isVerified()) { server.EmailExchanger.sendEmail(u.getEmail(), server.EmailExchanger.getInvitationSubject(), server.EmailExchanger.getInvitationBody(u)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1169/buggy-version/src.rmi.CertusServer.java", "BodyUseAPI": [], "Fixed commit": "3f961108aa1ed17c19f71b45ffad31d67c53489a", "Url": "https://api.github.com/repos/sfrink/CERTUS-Server", "Date": "2014-04-23T22:22:37Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1521/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "0d8b3463327a57129d1f67072c6e9829e9fc9e2d", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Thread.currentThread().isInterrupted()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/438/buggy-version/src.ClashCommands.java", "BodyUseAPI": [], "Fixed commit": "2c11377c3676ef0d60382a916b3fcb1ac183c9c5", "Url": "https://api.github.com/repos/KyleBoyer/ADB-Clash-Royale-Bot", "Date": "2017-11-03T18:48:28Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.redhat.ceylon.compiler.java.codegen.CodegenUtil.isUnBoxed(param))) { flags |= AbstractTransformer.JT_NO_PRIMITIVES; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/861/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.CallableBuilder.java", "BodyUseAPI": [], "Fixed commit": "b3169966d228da8bddc1a616664fe5b13ec3ca9d", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2013-01-28T15:38:48Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((forwardCallTo) != null) flags |= AbstractTransformer.JT_RAW;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/861/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.CallableBuilder.java", "BodyUseAPI": [], "Fixed commit": "b3169966d228da8bddc1a616664fe5b13ec3ca9d", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2013-01-28T15:38:48Z"},
{"Line": "=>710", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (lCount == 2430) java.lang.System.out.println(\"break for inspection\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4600/buggy-version/src.uk.ac.gla.dcs.tp3.w.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "41da454374a897e95a5bd33166630c4fb8bdd369", "Url": "https://api.github.com/repos/TeamW/Sports-Elimination-TP3", "Date": "2012-12-22T11:17:04Z"},
{"Line": "=>8887", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, java.util.LinkedList<lu.fisch.structorizer.elements.Call>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (clients != null) { for (lu.fisch.structorizer.elements.Call client : clients) { client.getComment().add(((\"The called \" + (sop.isSection ? \"section\" : \"paragraph\")) + \" seems to be empty, corrupt, or vanished.\")); client.disabled = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8642/buggy-version/src.lu.fisch.structorizer.parsers.COBOLParser.java", "BodyUseAPI": [], "Fixed commit": "86707705817f6c1cdf2ad64c4f8817e3166c05ee", "Url": "https://api.github.com/repos/fesch/Structorizer.Desktop", "Date": "2017-12-10T12:32:43Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (plan != null) { if ((plan.getType()) == (com.custommods.ai.WorkTreePlan.Type.moveTo)) { int index; if ((index = blockInList(items, plan)) == (NOT_FOUND)) { items.add(plan); }else { union(((com.custommods.ai.WorkTreePlan) (items.get(index))), plan); plan.remove(); plan = null; return true; } } if (plan != null) { for (int i = 0; i < (childrenLenght()); i++) { if (union(((com.custommods.ai.WorkTreePlan) (plan.getChild(i))), items)) { plan.removeChild(i); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8772/buggy-version/WorkTreePlan.java", "BodyUseAPI": ["java.util.List.add(com.custommods.ai.WorkTreePlan)", "com.custommods.ai.WorkTreePlan.getType()", "com.custommods.ai.WorkTreePlan.remove()", "com.custommods.ai.WorkTreePlan.union(java.lang.Object,com.custommods.ai.WorkTreePlan)", "com.custommods.ai.WorkTreePlan.blockInList(java.util.List,com.custommods.ai.WorkTreePlan)"], "Fixed commit": "bdf6df4634ec760b2a445695ac7267bd10cc6bea", "Url": "https://api.github.com/repos/itai-m/Minecraft-A.I", "Date": "2016-06-22T16:26:34Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((roles.size()) == 1) factorForMultipleStyle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5987/buggy-version/ggp-base-master.src.main.java.org.ggp.base.util.propnet.architecture.PropNet.java", "BodyUseAPI": [], "Fixed commit": "8874da250d9557f116ef7e1cc47585cf009fc5a1", "Url": "https://api.github.com/repos/brianmhiggins/cs227B-LighthouseParty", "Date": "2016-05-25T06:47:58Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.ducksmanager.whattheduck.AddIssue.originActivity) instanceof net.ducksmanager.whattheduck.IssueList) { ((net.ducksmanager.whattheduck.IssueList) (net.ducksmanager.whattheduck.AddIssue.originActivity)).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6075/buggy-version/app.src.main.java.net.ducksmanager.whattheduck.AddIssue.java", "BodyUseAPI": [], "Fixed commit": "8c806b9afe5cbb34ddda9b216ba79d52bedae9fc", "Url": "https://api.github.com/repos/bperel/WhatTheDuck", "Date": "2017-06-18T08:19:42Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchPromptPresenter) != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2954/buggy-version/app.src.main.java.cn.fuyoushuo.fqbb.view.flagment.SearchPromptFragment.java", "BodyUseAPI": [], "Fixed commit": "633a2d48628d37ed8dfcb9b1cdbd8379c52eac04", "Url": "https://api.github.com/repos/mylovemaliang/BmAndroid", "Date": "2016-11-28T11:05:34Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchPresenter) != null) { searchPresenter.onDestroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2954/buggy-version/app.src.main.java.cn.fuyoushuo.fqbb.view.flagment.TbSearchResFlagment.java", "BodyUseAPI": [], "Fixed commit": "633a2d48628d37ed8dfcb9b1cdbd8379c52eac04", "Url": "https://api.github.com/repos/mylovemaliang/BmAndroid", "Date": "2016-11-28T11:05:34Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (printCheckMessages) { java.lang.System.out.println(\"Move failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7970/buggy-version/MoveExecuter.java", "BodyUseAPI": [], "Fixed commit": "bc63be4c9621c05ffd80152dc56e4f75f1b510ee", "Url": "https://api.github.com/repos/emdoyle/ChessProgram", "Date": "2015-09-20T19:32:49Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mView) != null) { mView.onError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4539/buggy-version/app.src.main.java.name.gudong.translate.mvp.presenters.MainPresenter.java", "BodyUseAPI": [], "Fixed commit": "a05c605c374857712fc529a3c3174496f93b777a", "Url": "https://api.github.com/repos/maoruibin/TranslateApp", "Date": "2017-04-02T15:15:22Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (filePathTemp.startsWith(\"\\\\\")) filePathTemp = filePathTemp.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2267/buggy-version/src.Makefile.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "66e5eff094452ffbcd4c7a109409a1216550e7ee", "Url": "https://api.github.com/repos/DallanHealey/Makefile-Generator", "Date": "2015-11-26T06:31:07Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.quran.labs.androidquran.util.QuranScreenInfo.getInstance().getRatio()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (screenRatio < pageRatio) { scaledPageHeight = getHeight(); scaledPageWidth = ((float) (((1.0 * (getHeight())) / (page.getIntrinsicHeight())) * (page.getIntrinsicWidth()))); }else { scaledPageWidth = getWidth(); scaledPageHeight = ((float) (((1.0 * (getWidth())) / (page.getIntrinsicWidth())) * (page.getIntrinsicHeight()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2407/buggy-version/src.com.quran.labs.androidquran.widgets.HighlightingImageView.java", "BodyUseAPI": [], "Fixed commit": "858468df41cdc58b0fc07572bf7d08bfa9cdb334", "Url": "https://api.github.com/repos/afarra/quran_android", "Date": "2011-08-14T15:56:55Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((className.compareTo(o.className)) != 0) { return className.compareTo(o.className); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8183/buggy-version/src.main.tracer.FieldKey.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "9f36636e5fb854aad06917240069a1161f6f0b99", "Url": "https://api.github.com/repos/davidstreader/JavaAutomata", "Date": "2015-10-16T01:30:01Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (orcidId == null) { return url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8001/buggy-version/orcid-core.src.main.java.org.orcid.core.analytics.AnalyticsProcess.java", "BodyUseAPI": [], "Fixed commit": "4818cef9a4d6f30d20bd2afcdd3d715ea6834a3b", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2017-05-08T13:06:01Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editedEvent.hasAlarm()) && ((!(oldEvent.hasAlarm())) || (!(editedEvent.getAlarm().equals(oldEvent.getAlarm()))))) { showAlarmToast(editedEvent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3462/buggy-version/src.com.timetable.android.EventController.java", "BodyUseAPI": ["com.timetable.android.EventController.showAlarmToast(com.timetable.android.Event)"], "Fixed commit": "ba3911176b413a75c82363260ddfd51923911f17", "Url": "https://api.github.com/repos/kasis/Timetable", "Date": "2014-09-27T18:04:39Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lukesmoljak.lukesmoljakdemo.SplashActivity.getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (actionBar != null) actionBar.hide();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9015/buggy-version/app.src.main.java.com.lukesmoljak.lukesmoljakdemo.SplashActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.hide()"], "Fixed commit": "297c5b93ae4eda3cdaca440a2d28c86a4660116b", "Url": "https://api.github.com/repos/lukesmoljak/LukeSmoljakDemo", "Date": "2017-01-19T04:41:58Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsat.linear.Vec.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (z < 0) newW_i = java.lang.Math.min(0, (z + ((l1U) - (l1Q_k[i]))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1205/buggy-version/JSAT.src.jsat.classifiers.linear.LinearSGD.java", "BodyUseAPI": ["java.lang.Math.min(int,double)"], "Fixed commit": "47479f6f22b396dfa384616020c9fef25be44dcb", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2016-03-01T04:25:28Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (status.equals(\"edge\")) { currentDTField.setIsPrimaryKey(EdgeConvertGUI.jcheckDTPrimaryKey.isSelected()); }else if (status.equals(\"xml\")) { xmlCurrentDTField.setIsPrimaryKey(EdgeConvertGUI.jcheckDTPrimaryKey.isSelected()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8585/buggy-version/src.EdgeConvertGUI.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "91502227a389529e23922af897d51634aefc90cd", "Url": "https://api.github.com/repos/je6095/422-Project", "Date": "2017-04-23T16:59:57Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (EdgeConvertGUI.jrbDataType[0].isSelected()) { EdgeConvertGUI.jbDTVarchar.setEnabled(true); if (status.equals(\"edge\")) { EdgeConvertGUI.jtfDTVarchar.setText(java.lang.Integer.toString(currentDTField.getVarcharValue())); }else if (status.equals(\"xml\")) { EdgeConvertGUI.jtfDTVarchar.setText(java.lang.Integer.toString(xmlCurrentDTField.getVarcharValue())); } }else { EdgeConvertGUI.jtfDTVarchar.setText(\"\"); EdgeConvertGUI.jbDTVarchar.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8585/buggy-version/src.EdgeConvertGUI.java", "BodyUseAPI": [], "Fixed commit": "91502227a389529e23922af897d51634aefc90cd", "Url": "https://api.github.com/repos/je6095/422-Project", "Date": "2017-04-23T16:59:57Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((this) instanceof spoon.reflect.factory.ModuleFactory.CtUnnamedModule)) { getFactory().getEnvironment().getModelChangeListener().onObjectUpdate(this, CtRole.SUB_PACKAGE, rootPackage, this.rootPackage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3196/buggy-version/src.main.java.spoon.support.reflect.declaration.CtModuleImpl.java", "BodyUseAPI": [], "Fixed commit": "cd6fdc369cbd6400facbe5e44a3cd08d1cc6e7b3", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2017-11-21T13:38:51Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.restoreState) != null) this.restoreState.execute(); else new ch.wisv.chue.states.BlankState().execute(this.bridge, \"all\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5407/buggy-version/src.main.java.ch.wisv.chue.HueService.java", "BodyUseAPI": [], "Fixed commit": "0d8b846c2bfd5a42ecd8a40dc0fdfd07b9a5be67", "Url": "https://api.github.com/repos/WISVCH/chue", "Date": "2015-06-11T12:55:27Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.PATHopan.sketchsample.fragment.AppPackageListFragment.1.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (context == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3818/buggy-version/sample.src.main.java.me.PATHopan.sketchsample.fragment.AppPackageListFragment.java", "BodyUseAPI": [], "Fixed commit": "5a3b0da44e59c185eb26368a3a1bb8d2d7dca789", "Url": "https://api.github.com/repos/panpf/sketch", "Date": "2017-08-30T14:23:01Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nih.nci.cananolab.dto.common.ExperimentConfigBean.getInstrumentDisplayNames()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (instNames != null) { for (java.lang.String instName : instNames) { if ((sb.length()) > 0) sb.append(\",\"); sb.append(instName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5018/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.restful.view.SimpleCharacterizationSummaryViewBean.java", "BodyUseAPI": [], "Fixed commit": "220636ae6a53cf636a6f694d05a41c8536c463dd", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2014-07-23T20:42:47Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(p2p_user.BACKUP_HOST.equals(\"\"))) { java.lang.String thisip = \"\"; try { thisip = java.net.InetAddress.getLocalHost().getHostAddress(); } catch (java.net.UnknownHostException e) { p2p_user.gui.set_text(\"Unable to verify you are the emergency host.\"); } if (((p2p_user.SUBNET) + (p2p_user.BACKUP_HOST)).equals(thisip)) { p2p_user.hosting = \"h\"; p2p_user.gui.set_text(\"Recreating server.\"); }else { p2p_user.hosting = \"c\"; p2p_user.gui.set_text(\"Connecting to backup server.\"); } p2p_user.HOST = p2p_user.BACKUP_HOST; }else { p2p_user.hosting = \"h\"; p2p_user.gui.set_text(\"No backup server found. Starting a new server.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/568/buggy-version/src.main.listener_receiver.java", "BodyUseAPI": [], "Fixed commit": "3f9fa6d776ae907296d700b5f3ff7f58a6855c7e", "Url": "https://api.github.com/repos/metal-crow/P2P-Group-Chat", "Date": "2014-05-22T11:56:36Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (circuitStateUpdated) { queue.putWriteBuffer(stateBuffer, true); circuitStateUpdated = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8995/buggy-version/simulation.mechaverse-simulation-common.src.main.java.org.mechaverse.simulation.common.opencl.OpenClCircuitSimulator.java", "BodyUseAPI": [], "Fixed commit": "3ffdd948f2ae8ddf5d274c69e0c8020746885539", "Url": "https://api.github.com/repos/thorntonv/mechaverse", "Date": "2014-11-04T06:57:21Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getDepartment().getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (departId == 3L) { phar = true; session.setAttribute(\"phar\", phar); }else if (departId == 1L) { admin = true; session.setAttribute(\"admin\", admin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4071/buggy-version/src.java.com.jsfbean.SessionManagedBean.java", "BodyUseAPI": [], "Fixed commit": "8ae079270d92cf0a31e3b45bfdbc7baf08d72ba3", "Url": "https://api.github.com/repos/SwingWillwow/MedicalSystem", "Date": "2017-12-08T03:50:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (timeStampDate != null) resultMap.put(\"timeStampDate\", timeStampDate.getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5265/buggy-version/CurrencyServer.src.main.java.org.votingsystem.web.currency.jaxrs.CMSMessageResource.java", "BodyUseAPI": ["java.util.Map.put(java.lang.String,long)", "java.util.Date.getTime()"], "Fixed commit": "5657912ca7ad5409ae648e6358ceea8404d2ef56", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2016-03-14T14:55:11Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (timeStampDate != null) req.getSession().setAttribute(\"timeStampDate\", timeStampDate.getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5265/buggy-version/CurrencyServer.src.main.java.org.votingsystem.web.currency.jaxrs.CMSMessageResource.java", "BodyUseAPI": ["java.util.Date.getTime()", "req.getSession().setAttribute(java.lang.String,long)"], "Fixed commit": "5657912ca7ad5409ae648e6358ceea8404d2ef56", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2016-03-14T14:55:11Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.as.console.client.core.DefaultPlaceManager.ContextCreation.getRequest()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(placeRequest.getParameterNames().isEmpty())) { nameToken.append(\";\"); for (java.lang.String param : placeRequest.getParameterNames()) { nameToken.append(param).append(\"=\").append(placeRequest.getParameter(param, \"\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6138/buggy-version/gui.src.main.java.org.jboss.as.console.client.core.DefaultPlaceManager.java", "BodyUseAPI": ["com.gwtplatform.mvp.client.proxy.PlaceRequest.getParameter(java.lang.String,java.lang.String)", "com.gwtplatform.mvp.client.proxy.PlaceRequest.getParameterNames()", "java.lang.StringBuffer.append(placeRequest.getParameter(param, \"\"))"], "Fixed commit": "9bf28de904daeeb2a6b2bd94001ee4995a2c943c", "Url": "https://api.github.com/repos/hal/core", "Date": "2013-12-16T09:31:56Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((code.length()) == 1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4505/buggy-version/library.src.main.java.me.shkschneider.openlocationcodes.OpenLocationCodes.java", "BodyUseAPI": [], "Fixed commit": "203a4778f30926768292968aec2ef33d59f6e898", "Url": "https://api.github.com/repos/shkschneider/android_OpenLocationCodes", "Date": "2015-07-16T08:15:50Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.terasology.input.cameraTarget.PlayerTargetSystem.getTarget()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (targetEntity.exists()) { targetEntity.send(new org.terasology.logic.characters.events.AttackEvent(character, event.getItem())); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5733/buggy-version/engine.src.main.java.org.terasology.logic.characters.CharacterSystem.java", "BodyUseAPI": ["org.terasology.entitySystem.entity.EntityRef.send(org.terasology.logic.characters.events.AttackEvent)"], "Fixed commit": "b41d24db4dd413beabeadaceaadaba5014b769c1", "Url": "https://api.github.com/repos/pollend/Terasology", "Date": "2017-04-09T02:37:36Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (baseSymbol.contains(\" \")) { baseSymbol = baseSymbol.substring(0, baseSymbol.indexOf(\" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1821/buggy-version/src.data.downloaders.interactivebrokers.IBWorker.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "8866a7ffc438bccc6bee19e1fc6329942ba9f2a0", "Url": "https://api.github.com/repos/MatthewPDingle/CSCSPMonitor", "Date": "2017-07-06T03:10:00Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((regularQuoteUpdateJob) != null) regularQuoteUpdateJob.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8245/buggy-version/name.abuchen.portfolio.ui.src.name.abuchen.portfolio.ui.PortfolioPart.java", "BodyUseAPI": [], "Fixed commit": "ec94500d64c6582e0b8f33bd0cd7cd73bd5ebcc4", "Url": "https://api.github.com/repos/buchen/portfolio", "Date": "2014-08-16T06:27:41Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((url == null) || (params == null)) || (params.isEmpty())) { return url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2395/buggy-version/okhttputils.src.main.java.com.zhy.http.okhttp.builder.GetBuilder.java", "BodyUseAPI": [], "Fixed commit": "c27c218d92d9898779c913e19b493ab08d2a74cb", "Url": "https://api.github.com/repos/hongyangAndroid/okhttputils", "Date": "2016-05-06T17:59:26Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.Character>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((map.get(firstKey).get(0)) == firstKey) { return \"\" + firstKey; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5368/buggy-version/src.AlienDictionary.java", "BodyUseAPI": [], "Fixed commit": "25738acbacc3b74b2ea1d2393d35060245d563d0", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-08-05T06:46:26Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1096/buggy-version/muCkk.DeathAndRebirth.DARHandler.java", "BodyUseAPI": [], "Fixed commit": "f175c15bd59f7a78d686236d421be604647a7008", "Url": "https://api.github.com/repos/muCkk/Death-and-Rebirth", "Date": "2011-08-14T17:58:29Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTargets().getPointToNavigate()) == null) { mapActivity.getMapActions().stopNavigationWithoutConfirm(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1206/buggy-version/OsmAnd.src.net.osmand.plus.mapcontextmenu.other.MapRouteInfoMenu.java", "BodyUseAPI": [], "Fixed commit": "d4a8fabda942a226f763d1798cae41f8b68ff287", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-01-13T09:10:32Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jsonObject.optJSONObject(\"boundaries\")) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9109/buggy-version/Gazetteer.src.main.java.me.osm.gazetter.join.out_handlers.AddressPerRowJOHBase.java", "BodyUseAPI": [], "Fixed commit": "c1ee734e1f4f8205cd0b0899755033b5b8e09fae", "Url": "https://api.github.com/repos/kiselev-dv/gazetteer", "Date": "2014-12-19T06:22:14Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token.equals(\"output\")) { returningToken = \"output\"; }else { returningToken = \"ID\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8562/buggy-version/src.ScannerCompiler.java", "BodyUseAPI": [], "Fixed commit": "06a9bf90565b9879a8a98dd4798443eb1df01568", "Url": "https://api.github.com/repos/sadrasafa/Compiler", "Date": "2017-07-07T23:46:19Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pi.getGroupId().equals(project.getGroupId())) { for (int x = 0; x < (artfactIdNodes.getLength()); x++) { org.w3c.dom.Node artfactIdNode = artfactIdNodes.item(x); if (artfactIdNode != null) { artfactIdNode.setTextContent(pi.getExpectedArtifactId()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2115/buggy-version/src.main.java.org.jboss.maven.plugins.qstools.fixers.ArtifactIdNameFixer.java", "BodyUseAPI": ["org.w3c.dom.Node.setTextContent(pi.getExpectedArtifactId())", "ArtifactIdNameUtil.PomInformation.getExpectedArtifactId()"], "Fixed commit": "1da7262ba86d58a1491fef358b0f730d7c21aa03", "Url": "https://api.github.com/repos/jboss-developer/maven-qstools-plugin", "Date": "2015-02-09T23:09:37Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.twill.internal.zookeeper.DefaultZKClientService.ServiceDelegate.state()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (state != (State.RUNNING)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1677/buggy-version/twill-zookeeper.src.main.java.org.apache.twill.internal.zookeeper.DefaultZKClientService.java", "BodyUseAPI": [], "Fixed commit": "0dd41d0ca36b66d58d6c547a55bd1088c070063f", "Url": "https://api.github.com/repos/chtyim/incubator-twill", "Date": "2015-06-15T19:43:44Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.data.api.my.MyAsset.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(location.isEmpty())) { if (view.equals(net.nikr.eve.jeveasset.i18n.TabsOverview.get().regions())) { locationName = asset.getLocation().getRegion(); location = net.nikr.eve.jeveasset.io.shared.ApiIdConverter.getLocation(asset.getLocation().getRegionID()); } if (view.equals(net.nikr.eve.jeveasset.i18n.TabsOverview.get().systems())) { locationName = asset.getLocation().getSystem(); location = net.nikr.eve.jeveasset.io.shared.ApiIdConverter.getLocation(asset.getLocation().getSystemID()); } if (view.equals(net.nikr.eve.jeveasset.i18n.TabsOverview.get().stations())) { locationName = asset.getLocation().getLocation(); location = net.nikr.eve.jeveasset.io.shared.ApiIdConverter.getLocation(asset.getLocation().getStationID()); } }else { locationName = location.getLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4395/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.tabs.overview.OverviewTab.java", "BodyUseAPI": ["net.nikr.eve.jeveasset.data.sde.MyLocation.getLocation()"], "Fixed commit": "03917049e38375fc4cf4e6c733fe2fe906f9ef24", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-11-12T16:27:41Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((items == null) || ((items.length) == 0)) { com.devspark.appmsg.AppMsg.makeText(ma, ma.getResources().getString(R.string.no_restore), AppMsg.STYLE_INFO).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7424/buggy-version/src.de.micmun.android.miwotreff.utils.BackupActionProvider.java", "BodyUseAPI": [], "Fixed commit": "c50e45d174b0383d44e3d7d26f2228512a099e06", "Url": "https://api.github.com/repos/MicMun/MiWoTreff", "Date": "2013-04-02T18:43:00Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cburch.logisim.instance.InstancePainter.getData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (data == null) { for (int stage = 0; stage < len; stage++) { DrawDataBlock(painter, xpos, ypos, len, wid, stage, data.get(((len - stage) - 1)).toIntValue(), parallelObj); } }else { for (int stage = 0; stage < len; stage++) { DrawDataBlock(painter, xpos, ypos, len, wid, stage, data.get(((len - stage) - 1)).toIntValue(), parallelObj); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2771/buggy-version/src.com.cburch.logisim.std.memory.ShiftRegister.java", "BodyUseAPI": ["com.cburch.logisim.std.memory.ShiftRegister.DrawDataBlock(com.cburch.logisim.instance.InstancePainter,int,int,int,int,int,data.get(((len - stage) - 1)).toIntValue(),java.lang.Boolean)", "com.cburch.logisim.std.memory.ShiftRegisterData.get(int)", "com.cburch.logisim.std.memory.ShiftRegisterData.get(int)", "com.cburch.logisim.std.memory.ShiftRegister.DrawDataBlock(com.cburch.logisim.instance.InstancePainter,int,int,int,int,int,data.get(((len - stage) - 1)).toIntValue(),java.lang.Boolean)", "data.get(((len - stage) - 1)).toIntValue()", "data.get(((len - stage) - 1)).toIntValue()"], "Fixed commit": "fe71aac700f3fe6d556aab46f71184f6f39c2f27", "Url": "https://api.github.com/repos/reds-heig/logisim-evolution", "Date": "2016-07-12T04:56:11Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getBaseMetaTileEntity().getAirAtSide(getBaseMetaTileEntity().getFrontFacing())) { gregtech.common.GT_Pollution.addPollution(new net.minecraft.world.ChunkPosition(this.getBaseMetaTileEntity().getXCoord(), this.getBaseMetaTileEntity().getYCoord(), this.getBaseMetaTileEntity().getZCoord()), calculatePollutionReduction(10000)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2702/buggy-version/src.main.java.gregtech.api.metatileentity.implementations.GT_MetaTileEntity_Hatch_Muffler.java", "BodyUseAPI": [], "Fixed commit": "2d5c40ef8f77287547f437fdcf493f5040494414", "Url": "https://api.github.com/repos/Blood-Asp/GT5-Unofficial", "Date": "2016-10-25T22:57:33Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stateMachine.stateIs(waitState)) { if (changed) { changed = false; routePlanner.update(communicator.getParcels(), getCurrentTime().getTime()); final com.google.common.base.Optional<rinde.sim.pdptw.common.DefaultParcel> cur = routePlanner.current(); if (cur.isPresent()) { communicator.waitFor(cur.get()); } } final com.google.common.base.Optional<rinde.sim.pdptw.common.DefaultParcel> cur = routePlanner.current(); if (cur.isPresent()) { setRoute(java.util.Arrays.asList(cur.get())); }else { setRoute(new java.util.LinkedList<rinde.sim.pdptw.common.DefaultParcel>()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5020/buggy-version/src.main.java.rinde.logistics.pdptw.mas.Truck.java", "BodyUseAPI": [], "Fixed commit": "26804d1f547c242265f114b259a9db8daabbd488", "Url": "https://api.github.com/repos/rinde/RinLog", "Date": "2013-09-05T15:07:49Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.trainingdataprocessor.data.preprocessing.TrainingDataRow.containsSubSentences()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (containsSubSentences) { int numberOfSubSentences = trainingDataRow.getTagsMultiList().size(); for (int i = 0; i < numberOfSubSentences; i++) { java.util.List<java.lang.String> tokensList = trainingDataRow.getTokensMultiList().get(i); java.util.List<java.lang.String> tagsList = trainingDataRow.getTagsMultiList().get(i); java.util.List<java.lang.String> encodedTagsList = trainingDataRow.getEncodedTagsMultiList().get(i); java.util.List<java.lang.String> processedTokensList = new java.util.ArrayList<>(); java.util.List<java.lang.String> processedTagsList = new java.util.ArrayList<>(); java.util.List<java.lang.String> processedEncodedTagsList = new java.util.ArrayList<>(); runCapitalizationLogic(tokensList, tagsList, encodedTagsList, processedTokensList, processedTagsList, processedEncodedTagsList, trainingDataRow, containsSubSentences, i); } }else { java.util.List<java.lang.String> tokensList = trainingDataRow.getTokensList(); java.util.List<java.lang.String> tagsList = trainingDataRow.getTagsList(); java.util.List<java.lang.String> encodedTagsList = trainingDataRow.getEncodedTagsList(); java.util.List<java.lang.String> processedTokensList = new java.util.ArrayList<>(); java.util.List<java.lang.String> processedTagsList = new java.util.ArrayList<>(); java.util.List<java.lang.String> processedEncodedTagsList = new java.util.ArrayList<>(); runCapitalizationLogic(tokensList, tagsList, encodedTagsList, processedTokensList, processedTagsList, processedEncodedTagsList, trainingDataRow, containsSubSentences, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1799/buggy-version/src.main.java.com.trainingdataprocessor.preprocessing.CapitalizedTokensProcessorImpl.java", "BodyUseAPI": ["com.trainingdataprocessor.preprocessing.CapitalizedTokensProcessorImpl.runCapitalizationLogic(java.util.List<java.lang.String>,java.util.List<java.lang.String>,java.util.List<java.lang.String>,java.util.List<java.lang.String>,java.util.List<java.lang.String>,java.util.List<java.lang.String>,com.trainingdataprocessor.data.preprocessing.TrainingDataRow,boolean,int)", "com.trainingdataprocessor.preprocessing.CapitalizedTokensProcessorImpl.runCapitalizationLogic(java.util.List<java.lang.String>,java.util.List<java.lang.String>,java.util.List<java.lang.String>,java.util.List<java.lang.String>,java.util.List<java.lang.String>,java.util.List<java.lang.String>,com.trainingdataprocessor.data.preprocessing.TrainingDataRow,boolean,int)"], "Fixed commit": "a8276f75d07a4e7a78a6b11a179ca9eb7d2102a7", "Url": "https://api.github.com/repos/ares2015/AresPosTaggerModelDataProcessor", "Date": "2017-01-10T14:40:10Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.parents) == null) || (this.parents.isEmpty())) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/36/buggy-version/src.main.java.ninja.leaping.permissionsex.backend.memory.MemoryOptionSubjectData.java", "BodyUseAPI": [], "Fixed commit": "d616228b11b15519ce1ef058b0437df171c2288f", "Url": "https://api.github.com/repos/PEXPlugins/PermissionsEx", "Date": "2015-04-19T04:06:55Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.parents) != null) { parents.addAll(this.parents); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/36/buggy-version/src.main.java.ninja.leaping.permissionsex.backend.memory.MemoryOptionSubjectData.java", "BodyUseAPI": [], "Fixed commit": "d616228b11b15519ce1ef058b0437df171c2288f", "Url": "https://api.github.com/repos/PEXPlugins/PermissionsEx", "Date": "2015-04-19T04:06:55Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPaths().size()) > 0) { url += (com.hpe.adm.nga.sdk.OctaneUrl.PATH_SEPARATOR) + (getPaths().stream().collect(java.util.stream.Collectors.joining(com.hpe.adm.nga.sdk.OctaneUrl.PATH_SEPARATOR))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4628/buggy-version/sdk-src.src.main.java.com.hpe.adm.nga.sdk.OctaneUrl.java", "BodyUseAPI": [], "Fixed commit": "82f5d31c4a2af0cb433652ddebcc87fe2c6f2932", "Url": "https://api.github.com/repos/MicroFocus/ALMOctaneJavaRESTSDK", "Date": "2017-05-08T15:22:27Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/696/buggy-version/FindMyThingsServer.src.edu.gatech.oad.rocket.findmythings.server.db.DatabaseService.java", "BodyUseAPI": [], "Fixed commit": "e4c87d16ce97d3409b1b425acd14a97ea145d633", "Url": "https://api.github.com/repos/zwaldowski/ProjectTeamRocket", "Date": "2013-04-04T20:33:12Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/696/buggy-version/FindMyThingsServer.src.edu.gatech.oad.rocket.findmythings.server.db.DatabaseService.java", "BodyUseAPI": [], "Fixed commit": "e4c87d16ce97d3409b1b425acd14a97ea145d633", "Url": "https://api.github.com/repos/zwaldowski/ProjectTeamRocket", "Date": "2013-04-04T20:33:12Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((m_Connection) != null) && (m_Connection.isConnected())) { m_Connection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7270/buggy-version/src.main.java.net.wimpi.modbus.io.ModbusTCPTransaction.java", "BodyUseAPI": ["net.wimpi.modbus.net.TCPMasterConnection.close()"], "Fixed commit": "f850d52dfef69e21929c18b9f77ae1b94e528a60", "Url": "https://api.github.com/repos/openhab/jamod", "Date": "2015-10-02T06:06:45Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getCam().getCurrent()) != null) { edu.virginia.cs.sgd.libgdx.path.Path p = new edu.virginia.cs.sgd.libgdx.path.Path(game.getMaze(), this.location, player.location); int xdiff = java.lang.Math.abs(((this.location.getX()) - (player.getCam().getCurrent().getX()))); int ydiff = java.lang.Math.abs(((this.location.getY()) - (player.getCam().getCurrent().getY()))); if ((p.shortPathLen()) <= (this.perception)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7357/buggy-version/ProjectTheseus.src.edu.virginia.cs.sgd.libgdx.entities.Creature.java", "BodyUseAPI": ["player.getCam().getCurrent()", "edu.virginia.cs.sgd.libgdx.player.Player.getCam()", "java.lang.Math.abs(((this.location.getX()) - (player.getCam().getCurrent().getX())))", "player.getCam().getCurrent().getX()", "java.lang.Math.abs(((this.location.getY()) - (player.getCam().getCurrent().getY())))", "player.getCam().getCurrent().getY()", "edu.virginia.cs.sgd.libgdx.player.Player.getCam()", "player.getCam().getCurrent()"], "Fixed commit": "026dc7732597256681fcf5fa75aca4a349f6350c", "Url": "https://api.github.com/repos/ProjectTheseus/Project-Theseus-Main", "Date": "2014-12-06T00:19:18Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gj.web.crawler.Crawler.getParseString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == parseStr) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4080/buggy-version/src.main.java.com.gj.web.crawler.Crawler.java", "BodyUseAPI": [], "Fixed commit": "56b7dcca11d2c57e5c4c7eff8cbe7cb3269b1e0e", "Url": "https://api.github.com/repos/Davidhua1996/gj-crawler", "Date": "2017-04-30T02:28:53Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ast.getFirstChild().getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.RESOURCE_SPECIFICATION)) { lcurly = ast.getFirstChild().getNextSibling(); }else { lcurly = ast.getFirstChild(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6049/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()", "ast.getFirstChild().getNextSibling()"], "Fixed commit": "ac1a09490d17cfefde1b8388e40547c051ba860c", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-01-30T20:29:10Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (nextToken == null) { shouldCheckLastRcurly = true; nextToken = com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.getNextToken(ast); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6049/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.java", "BodyUseAPI": [], "Fixed commit": "ac1a09490d17cfefde1b8388e40547c051ba860c", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-01-30T20:29:10Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((req.getParameter(\"menuPermitId\")) != null) { req.getSession().setAttribute(\"CUR_MENU_PERMIT_ID\", req.getParameter(\"menuPermitId\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2211/buggy-version/src.auth.AuthFilter.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getSession()", "req.getSession().setAttribute(java.lang.String,req.getParameter(\"menuPermitId\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "a064a554b0231cc71e3f1cb988e3949f30bffd76", "Url": "https://api.github.com/repos/RicoFung/paper", "Date": "2016-11-09T08:22:13Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(winCondition)) { endTurn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1884/buggy-version/logic.src.uno.logic.GameCore.java", "BodyUseAPI": [], "Fixed commit": "ba963b45080ccedc6d086342bb6fb38fe873a4af", "Url": "https://api.github.com/repos/GoryMoon/UNO", "Date": "2017-02-28T12:46:07Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1015/buggy-version/services.billing.src.main.java.com.epam.dlab.configuration.SchedulerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "4f091aa5f3cdb0a0944f02ac97a42f9fc765d6ed", "Url": "https://api.github.com/repos/epam/DLab", "Date": "2017-10-18T15:04:26Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof com.epam.dlab.configuration.SchedulerConfiguration)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1015/buggy-version/services.billing.src.main.java.com.epam.dlab.configuration.SchedulerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "4f091aa5f3cdb0a0944f02ac97a42f9fc765d6ed", "Url": "https://api.github.com/repos/epam/DLab", "Date": "2017-10-18T15:04:26Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iValue instanceof java.util.Date) value = ((java.util.Date) (iValue)).getTime(); else value = iValue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3815/buggy-version/blueprints-orient-graph.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientGraphQuery.java", "BodyUseAPI": [], "Fixed commit": "d725af42236cd6620e094ca8aa81da4f43e0154e", "Url": "https://api.github.com/repos/jankotek/blueprints", "Date": "2013-08-30T17:12:10Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.source.util.TreePath.getLeaf()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(annotations.io.ASTIndex.indexOf(pathToNode.getCompilationUnit()).containsKey(node))) { checkers.inference.util.ASTPathUtil.logger.fine(((\"Did not find ASTRecord for node: \" + node) + \". Clear cache and retry\")); annotations.io.ASTIndex.clearCache(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4436/buggy-version/src.checkers.inference.util.ASTPathUtil.java", "BodyUseAPI": ["java.util.logging.Logger.fine(java.lang.String)"], "Fixed commit": "b401dbdd8a6d69b07886fc18f62688a4ec21bdce", "Url": "https://api.github.com/repos/bitterfox/checker-framework-inference", "Date": "2017-06-13T13:13:14Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((DISPLAY_SCORE) && (!(game.isMenu()))) { drawScore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1459/buggy-version/src.client.graphics.GameRenderer.java", "BodyUseAPI": [], "Fixed commit": "c6edfe680d64621d5fdfb11e67a8729ae2160ad3", "Url": "https://api.github.com/repos/PTruscott/OpenSnake", "Date": "2017-04-03T23:40:14Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((DISPLAY_SCORE) && (!(game.isMenu()))) { drawScore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1459/buggy-version/src.client.graphics.GameRenderer.java", "BodyUseAPI": [], "Fixed commit": "c6edfe680d64621d5fdfb11e67a8729ae2160ad3", "Url": "https://api.github.com/repos/PTruscott/OpenSnake", "Date": "2017-04-03T23:40:14Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changesApplied) { mRoom.saveInBackground(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6688/buggy-version/RadarApp.app.src.main.java.bg.mentormate.academy.radarapp.activities.EditRoomActivity.java", "BodyUseAPI": [], "Fixed commit": "b1958ac0f35696217280200a29d464909ee74633", "Url": "https://api.github.com/repos/tl-nguyen/RadarApp", "Date": "2015-02-23T22:16:05Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.fig.xuegong.xcurencies.MainActivity.isNumeric(java.lang.String.valueOf(mAmountEditText.getText()))) { new com.fig.xuegong.xcurencies.MainActivity.CurrencyConverterTask().execute(((com.fig.xuegong.xcurencies.MainActivity.URL_BASE) + (mKey))); }else { android.widget.Toast.makeText(this, \"Not a numberic value, try again\").show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/60/buggy-version/app.src.main.java.com.fig.xuegong.xcurencies.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a6513e8f4660e28ef87d54c04f0e1b40619098b9", "Url": "https://api.github.com/repos/hanyedeleng/XCurencies", "Date": "2016-01-26T15:23:37Z"},
{"Line": "=>856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.ichi2.anki.DeckTask.taskIsRunning())) { displayProgressDialogAndLoadDeck(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5625/buggy-version/src.com.ichi2.anki.StudyOptions.java", "BodyUseAPI": [], "Fixed commit": "d5895682d331818f83b544b3dd55937a6e112598", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-03T10:44:43Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 14) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6353/buggy-version/android.src.fq.router2.life_cycle.Deployer.java", "BodyUseAPI": [], "Fixed commit": "5e0e25b78b1ab9af89abe634333c3ad073f9bfa3", "Url": "https://api.github.com/repos/fqrouter/fqrouter", "Date": "2013-11-20T14:09:14Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.uima.fit.util.JCasUtil.selectSingle(org.apache.uima.jcas.JCas,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((meta.getDatePublished()) != null) { java.text.DateFormat df = new java.text.SimpleDateFormat(\"yyyy\", java.util.Locale.ENGLISH); int year = 0; try { java.util.Date date = df.parse(meta.getDatePublished()); java.util.Calendar cal = java.util.Calendar.getInstance(); cal.setTime(date); year = cal.get(java.util.Calendar.YEAR); } catch (java.text.ParseException e) { e.printStackTrace(); } org.json.JSONArray holders; try { holders = ((org.json.JSONArray) (jsonOffice.get(java.lang.Integer.valueOf(year).toString()))); } catch (org.json.JSONException e) { continue; } java.lang.System.out.println(holders); for (int i = 0; i < (holders.length()); i++) { if (holders.get(i).equals(annotation.getMostSimilarPerson())) { java.lang.System.out.println(holders.get(i)); nameAnnotation = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7504/buggy-version/src.main.java.com.iai.uima.analysis_component.OfficeHolderAnnotator.java", "BodyUseAPI": ["java.text.DateFormat.parse(meta.getDatePublished())", "eu.eumssi.uima.ts.SourceMeta.getDatePublished()"], "Fixed commit": "b4753e6be9a5325bfdec1c4d5d7219cc329f7f43", "Url": "https://api.github.com/repos/EUMSSI/OfficeHolderAnnotor", "Date": "2016-09-02T12:06:59Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((method.getReturnType().getName().equals(\"groovy.lang.MetaClass\")) && ((method.getName().equals(\"getMetaClass\")) || (method.getName().startsWith(\"$\")))) return proxy.invokeSuper(obj, args);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7532/buggy-version/core.src.main.java.org.modelmapper.internal.ExplicitMappingInterceptor.java", "BodyUseAPI": [], "Fixed commit": "efe4e47807c8ababff2e55c0cb7f93fc22eea129", "Url": "https://api.github.com/repos/jhalterman/modelmapper", "Date": "2013-08-24T23:26:23Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (val != (DUMMY)) { this.addPosition(row, column, val); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5593/buggy-version/Puzzle.java", "BodyUseAPI": ["Puzzle.addPosition(int,int,int)"], "Fixed commit": "e2a993a5f993553f915111e299a2b70870bda7d0", "Url": "https://api.github.com/repos/RichardZhang94/COMP2911Projecet", "Date": "2013-05-30T09:52:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.stevennl.tastysnake.util.bluetooth.BluetoothManager.getInstance().isSupport()) { startActivity(new android.content.Intent(this, com.example.stevennl.tastysnake.controller.test.BluetoothTestActivity.class)); }else { com.example.stevennl.tastysnake.util.CommonUtil.showToast(this, getString(R.string.bluetooth_not_support)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1403/buggy-version/app.src.main.java.com.example.stevennl.tastysnake.controller.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9c42d482abb5503894f04d880ed0ba5af226baa8", "Url": "https://api.github.com/repos/chuyangliu/TastySnake", "Date": "2017-03-27T12:25:58Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.operatorId) == null) || (this.operatorId.isEmpty())) { com.homeCenter.common.Log.error((\"No operator found for: \" + (this.getDevice()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7474/buggy-version/src.com.homeCenter.io.Radiator.java", "BodyUseAPI": [], "Fixed commit": "6af58653257b7cd8a1b9c7350c9550f936610024", "Url": "https://api.github.com/repos/NukulaPoncho/homeCenter", "Date": "2016-03-25T19:15:03Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(zmq.TcpListener.isWindows)) { handle.socket().setReuseAddress(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5512/buggy-version/src.main.java.zmq.TcpListener.java", "BodyUseAPI": [], "Fixed commit": "7e74ae59f022b199602bbc614a9d3244d61e294f", "Url": "https://api.github.com/repos/c-rack/jeromq", "Date": "2014-11-10T02:47:52Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (worldPropertiesFile.getPath().contains(\"/.DS_STORE\")) { worldPropertiesFile = new java.io.File(worldPropertiesFile.getPath().replace(\"/.DS_STORE\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8251/buggy-version/Forge.mcp.src.minecraft.mca.core.io.WorldPropertiesManager.java", "BodyUseAPI": [], "Fixed commit": "1b7f3892a2fe242382b35282e16d0c645e3b5734", "Url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive", "Date": "2013-09-14T22:14:45Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.pms.util.StringUtil.hasValue(tagInfo.year)) { if ((tagInfo.year.length()) > 4) { result.updateString(\"YEAR\", tagInfo.year.substring(0, 4)); }else { result.updateString(\"YEAR\", tagInfo.year); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5015/buggy-version/src.main.java.net.pms.database.TableMusicBrainzReleases.java", "BodyUseAPI": ["tagInfo.year.length()", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year.substring(0, 4))", "tagInfo.year.substring(int,int)", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year)"], "Fixed commit": "8ba624b01184bf1d29a043c2a15256358c755395", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2016-12-18T06:28:01Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aggStar == null) { subquery = column.getTable().getSubQueryAlias(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3395/buggy-version/src.main.mondrian.rolap.SqlConstraintUtils.java", "BodyUseAPI": [], "Fixed commit": "f1f8923029960a0ebf57fde5b2069109821da701", "Url": "https://api.github.com/repos/wgorman/mondrian", "Date": "2014-06-02T19:52:11Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (testSdkHome != null) { sdkPath = testSdkHome; }else if (goRoot != null) { sdkPath = goRoot; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1383/buggy-version/src.ro.redeul.google.go.sdk.GoSdkUtil.java", "BodyUseAPI": [], "Fixed commit": "7f2873a799565af5efa46d0eb74013625755040a", "Url": "https://api.github.com/repos/go-lang-plugin-org/go-lang-idea-plugin", "Date": "2011-05-25T00:10:24Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["deploymentConfiguration.getProviders().getOpenstack()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((openstackProvider.getPrimaryAccount()) != null) { com.netflix.spinnaker.halyard.config.model.v1.providers.openstack.OpenstackAccount openstackAccount = ((com.netflix.spinnaker.halyard.config.model.v1.providers.openstack.OpenstackAccount) (accountService.getProviderAccount(deploymentConfiguration.getName(), \"openstack\", openstackProvider.getPrimaryAccount()))); java.lang.String firstRegion = org.apache.commons.lang3.StringUtils.substringBefore(openstackAccount.getRegions(), \",\"); bindings.put(\"openstack.default.region\", firstRegion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3851/buggy-version/halyard-deploy.src.main.java.com.netflix.spinnaker.halyard.deploy.spinnaker.v1.profile.DeckProfile.java", "BodyUseAPI": ["com.netflix.spinnaker.halyard.config.model.v1.providers.openstack.OpenstackProvider.getPrimaryAccount()", "com.netflix.spinnaker.halyard.config.services.v1.AccountService.getProviderAccount(deploymentConfiguration.getName(),java.lang.String,openstackProvider.getPrimaryAccount())"], "Fixed commit": "603ddb4461dc7263d2328a2f39f9780948c4ee0a", "Url": "https://api.github.com/repos/spinnaker/halyard", "Date": "2017-03-03T00:21:58Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((food.getRestaurantID()) == null) pstmt.setNull(8, java.sql.Types.NULL); else pstmt.setInt(8, food.getRestaurantID());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5362/buggy-version/src.phr.dao.sqlimpl.FoodDaoSqlImpl.java", "BodyUseAPI": ["java.sql.PreparedStatement.setInt(int,food.getRestaurantID())", "phr.models.Food.getRestaurantID()"], "Fixed commit": "37504a4119e35bee08bed4c6f5493364d913eef6", "Url": "https://api.github.com/repos/givmefive5/PHR-WebServer", "Date": "2014-10-20T06:54:25Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((includesBuilder.length()) > 0) { return com.typesafe.config.ConfigFactory.parseString(includesBuilder.toString()).withFallback(com.typesafe.config.ConfigFactory.defaultOverrides()).resolve().getStringList(gobblin.config.store.hdfs.SimpleHDFSConfigStore.INCLUDES_KEY_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7610/buggy-version/gobblin-config-management.gobblin-config-core.src.main.java.gobblin.config.store.hdfs.SimpleHDFSConfigStore.java", "BodyUseAPI": ["com.typesafe.config.ConfigFactory.parseString(includesBuilder.toString()).withFallback(com.typesafe.config.ConfigFactory.defaultOverrides()).resolve().getStringList(java.lang.String)", "com.typesafe.config.ConfigFactory.parseString(includesBuilder.toString()).withFallback(com.typesafe.config.ConfigFactory.defaultOverrides())", "java.lang.StringBuilder.toString()", "com.typesafe.config.ConfigFactory.parseString(includesBuilder.toString()).withFallback(com.typesafe.config.ConfigFactory.defaultOverrides()).resolve()", "com.typesafe.config.ConfigFactory.parseString(java.lang.String)"], "Fixed commit": "31e5afe492fd38f9d1cce8348a897538b3385e2e", "Url": "https://api.github.com/repos/pcadabam/gobblin", "Date": "2016-04-15T04:59:54Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.commons.lang.StringUtils.isNotBlank(include)) && (!(org.apache.commons.lang.StringUtils.startsWith(include, \"#\")))) { includesBuilder.append(gobblin.config.store.hdfs.SimpleHDFSConfigStore.INCLUDES_KEY_NAME).append(\"+=\").append(include).append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7610/buggy-version/gobblin-config-management.gobblin-config-core.src.main.java.gobblin.config.store.hdfs.SimpleHDFSConfigStore.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "31e5afe492fd38f9d1cce8348a897538b3385e2e", "Url": "https://api.github.com/repos/pcadabam/gobblin", "Date": "2016-04-15T04:59:54Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((decompiler.getSource()) == null) || ((decompiler.getSource().length()) == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5871/buggy-version/org.sf.feeling.decompiler.src.org.sf.feeling.decompiler.jad.JadSourceMapper.java", "BodyUseAPI": [], "Fixed commit": "4e3e8170ef64c816aa60fba64784ec9ae54f79e2", "Url": "https://api.github.com/repos/cnfree/Eclipse-Class-Decompiler", "Date": "2016-05-09T09:16:27Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((decompiler.getSource()) == null) || ((decompiler.getSource().length()) == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5871/buggy-version/org.sf.feeling.decompiler.src.org.sf.feeling.decompiler.jad.JadSourceMapper.java", "BodyUseAPI": [], "Fixed commit": "4e3e8170ef64c816aa60fba64784ec9ae54f79e2", "Url": "https://api.github.com/repos/cnfree/Eclipse-Class-Decompiler", "Date": "2016-05-09T09:16:27Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contours.size()) > 0) { Rect rect = findLargestContour(contours); org.opencv.imgproc.Imgproc.rectangle(hsv, new Point(rect.x, rect.y), new Point(((rect.x) + (rect.width)), ((rect.y) + (rect.height))), contourColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7341/buggy-version/vision.src.main.java.Vision.java", "BodyUseAPI": ["Vision.findLargestContour(java.util.ArrayList<MatOfPoint>)"], "Fixed commit": "4259b5921b24dd6df34e7dabd91603a294a82943", "Url": "https://api.github.com/repos/wbaisrobotics/Wattson", "Date": "2017-01-17T00:14:01Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (socket.getSocketHint().getView().equals(SocketHint.View.NONE)) { return \"null\" + value; }else if (value.contains(\"Optional[\")) { return value.substring(((value.indexOf(\"[\")) + 1), value.lastIndexOf(\"]\")); }else { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3503/buggy-version/ui.src.main.java.edu.wpi.grip.ui.codeGeneration.TemplateMethods.java", "BodyUseAPI": [], "Fixed commit": "80c6b03c941dfe58399760c5c7b5e1316f72de1c", "Url": "https://api.github.com/repos/PatrickPenguinTurtle/GRIP", "Date": "2016-05-27T19:48:38Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p != (e.getPlayer())) { if (PM.useOldWay ? msg.contains((PM.needsPrefix ? (PM.regPrefix) + (p.getName().toLowerCase()) : p.getName().toLowerCase())) : java.util.Arrays.asList(split).contains((PM.needsPrefix ? (PM.regPrefix) + (p.getName().toLowerCase()) : p.getName().toLowerCase()))) { MP.mention(e.getPlayer(), p.getPlayer()); if (PM.regReplacementEnabled) { e.setMessage(e.getMessage().replaceAll((PM.needsPrefix ? (PM.regPrefix) + (p.getName()) : p.getName()), PM.convertPlaceholders(p, PM.regReplacement.replaceAll(\"%player%\", p.getName()).replaceAll(\"%nick%\", p.getDisplayName())))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7420/buggy-version/src.events.MentionListener.java", "BodyUseAPI": ["p.getName().toLowerCase()", "org.bukkit.entity.Player.getName()", "org.bukkit.entity.Player.getName()", "org.bukkit.event.player.AsyncPlayerChatEvent.getPlayer()", "p.getName().toLowerCase()", "p.getName().toLowerCase()", "org.bukkit.event.player.AsyncPlayerChatEvent.setMessage(e.getMessage().replaceAll((PM.needsPrefix ? (PM.regPrefix) + (p.getName()) : p.getName()), PM.convertPlaceholders(p, PM.regReplacement.replaceAll(\"%player%\", p.getName()).replaceAll(\"%nick%\", p.getDisplayName()))))", "java.lang.String.contains((PM.needsPrefix ? (PM.regPrefix) + (p.getName().toLowerCase()) : p.getName().toLowerCase()))", "org.bukkit.entity.Player.getName()", "java.util.List<java.lang.String>.contains((PM.needsPrefix ? (PM.regPrefix) + (p.getName().toLowerCase()) : p.getName().toLowerCase()))", "PM.regReplacement.replaceAll(java.lang.String,p.getName())", "PM.regReplacement.replaceAll(\"%player%\", p.getName()).replaceAll(java.lang.String,p.getDisplayName())", "org.bukkit.entity.Player.getName()", "org.bukkit.event.player.AsyncPlayerChatEvent.getMessage()", "methods.MentionPlayer.mention(e.getPlayer(),p.getPlayer())", "org.bukkit.entity.Player.getName()", "p.getName().toLowerCase()", "e.getMessage().replaceAll((PM.needsPrefix ? (PM.regPrefix) + (p.getName()) : p.getName()),PM.convertPlaceholders(p, PM.regReplacement.replaceAll(\"%player%\", p.getName()).replaceAll(\"%nick%\", p.getDisplayName())))", "org.bukkit.entity.Player.getDisplayName()", "org.bukkit.entity.Player.getName()", "org.bukkit.entity.Player.getPlayer()", "net.hypexmon5ter.pm.PlayerMention.convertPlaceholders(org.bukkit.entity.Player,PM.regReplacement.replaceAll(\"%player%\", p.getName()).replaceAll(\"%nick%\", p.getDisplayName()))", "org.bukkit.entity.Player.getName()"], "Fixed commit": "9ecdc1f09a61837825b73b06c19777fe6882e8b6", "Url": "https://api.github.com/repos/HYPExMon5ter/PlayerMention", "Date": "2017-12-18T02:47:32Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.mikepenz.iconics.Iconics.FONTS) == null) { com.mikepenz.iconics.Iconics.init(ctx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7873/buggy-version/library-core.src.main.java.com.mikepenz.iconics.Iconics.java", "BodyUseAPI": [], "Fixed commit": "e6b024502b8b44cc07d09843679f7a2ade903e18", "Url": "https://api.github.com/repos/mikepenz/Android-Iconics", "Date": "2015-08-04T19:16:45Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player == null) return getValue(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3184/buggy-version/src.com.nisovin.magicspells.variables.Variable.java", "BodyUseAPI": [], "Fixed commit": "1d867fa4d144f37f663a234198c670045baec490", "Url": "https://api.github.com/repos/nisovin/MagicSpells", "Date": "2014-12-03T20:52:04Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errorStatus) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/188/buggy-version/src.Comm.java", "BodyUseAPI": [], "Fixed commit": "4a15377dcd34f76386ec9e453a68c52502fb8d94", "Url": "https://api.github.com/repos/KrashLeviathan/codable_media_mashup", "Date": "2016-12-07T21:53:14Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((risk) == null) { risk = 0.5; java.lang.String log = java.text.MessageFormat.format(Context.INSTANCE.getResources().getString(\"log.default.alternative.risk\"), name, risk); return java.util.Collections.singletonList(log); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2260/buggy-version/decision-making-toolkit.src.main.java.com.gmail.alekmiel91.decisionmaking.toolkit.data.Alternative.java", "BodyUseAPI": [], "Fixed commit": "cd31b6312986a6d0e6d1ef6968f32170000b0c7c", "Url": "https://api.github.com/repos/AleksanderMielczarek/decision-making", "Date": "2015-04-05T10:52:00Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path.endsWith(\"/\")) == false) { path = path + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4987/buggy-version/src.main.java.com.thunder.util.Util.java", "BodyUseAPI": [], "Fixed commit": "b4ff4bb54f3dbd909960a80b7ce5b7efbee01cf0", "Url": "https://api.github.com/repos/100cm/thunder", "Date": "2016-04-06T09:51:35Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(logdir.canWrite())) { java.lang.System.out.println(\"Can't write.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7499/buggy-version/app_android.src.com.projectkaiser.app_android.AppAndroid.java", "BodyUseAPI": [], "Fixed commit": "fce0036394cf7ed99e1a5b880f35f97dae3a16a1", "Url": "https://api.github.com/repos/ProjectKaiser/pkandroid", "Date": "2015-01-11T20:35:00Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(logfile.exists())) { try { logfile.createNewFile(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7499/buggy-version/app_android.src.com.projectkaiser.app_android.AppAndroid.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "fce0036394cf7ed99e1a5b880f35f97dae3a16a1", "Url": "https://api.github.com/repos/ProjectKaiser/pkandroid", "Date": "2015-01-11T20:35:00Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(logdir.exists())) { logdir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7499/buggy-version/app_android.src.com.projectkaiser.app_android.AppAndroid.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "fce0036394cf7ed99e1a5b880f35f97dae3a16a1", "Url": "https://api.github.com/repos/ProjectKaiser/pkandroid", "Date": "2015-01-11T20:35:00Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(src.contains(target))) { return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1340/buggy-version/app.src.main.java.com.pluszero.rostertogo.PdfManager.java", "BodyUseAPI": [], "Fixed commit": "93551d45f7b244bb367b53c69efe4fd750d7b6b5", "Url": "https://api.github.com/repos/cyrilreal/RosterToGo_Android_Edition", "Date": "2016-09-27T19:46:50Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (objects.isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"Member does not exist\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8615/buggy-version/GradeUP.app.src.main.java.com.ufl.gradeup.CreateGroupActivity.java", "BodyUseAPI": [], "Fixed commit": "93eecb2195633faaf08bb4a789128512d8a45247", "Url": "https://api.github.com/repos/shashankufl/A-Team-DD-v1.0", "Date": "2015-12-01T06:31:01Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Vector<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (col.equals(edu.georgetown.library.fileAnalyzer.importer.IngestFolderCreate.COLLECTIONS)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9033/buggy-version/dspace.src.main.edu.georgetown.library.fileAnalyzer.importer.IngestFolderCreate.java", "BodyUseAPI": [], "Fixed commit": "82ab46b4dd31f828e86bcb9e3349d65ef051a9cc", "Url": "https://api.github.com/repos/Georgetown-University-Libraries/File-Analyzer", "Date": "2015-07-22T17:26:00Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Files.exists(java.nio.file.Path)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (exists) { timestamp = java.nio.file.Files.getLastModifiedTime(resourcePath).toMillis(); }else { timestamp = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4864/buggy-version/org.eclipse.flux.watcher.src.main.java.org.eclipse.flux.watcher.fs.JDKProjectWatchService.java", "BodyUseAPI": [], "Fixed commit": "a8130a3b2de14ebc616c0199afce6a8a11f19685", "Url": "https://api.github.com/repos/fjodorver/flux", "Date": "2016-08-16T21:01:07Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.phenotips.data.script.PatientSpecificityScriptService.FakePatient.TERM_FORMAT.matcher(symptom).matches()) { result.add(new org.phenotips.data.script.PatientSpecificityScriptService.FakeFeature(symptom, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2068/buggy-version/components.specificity-meter.api.src.main.java.org.phenotips.data.script.PatientSpecificityScriptService.java", "BodyUseAPI": [], "Fixed commit": "28c378c6cb113816455e6a545d88fe1e1c09e3bc", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2014-09-08T15:52:21Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.phenotips.data.script.PatientSpecificityScriptService.FakePatient.TERM_FORMAT.matcher(symptom).matches()) { result.add(new org.phenotips.data.script.PatientSpecificityScriptService.FakeFeature(symptom, false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2068/buggy-version/components.specificity-meter.api.src.main.java.org.phenotips.data.script.PatientSpecificityScriptService.java", "BodyUseAPI": [], "Fixed commit": "28c378c6cb113816455e6a545d88fe1e1c09e3bc", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2014-09-08T15:52:21Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slot < 0) { slot = createSession(mapName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1129/buggy-version/tygron-environment.src.main.java.nl.tudelft.contextproject.tygron.SessionManager.java", "BodyUseAPI": [], "Fixed commit": "795c42db5d45f2e10d988479d05a30f8272cff29", "Url": "https://api.github.com/repos/tygron-virtual-humans/tygron-connect", "Date": "2015-05-19T10:11:35Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getModularizedSystem().getTypes(referenceName, resourceModule).isEmpty()) { return referenceName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/111/buggy-version/org.bundlemaker.core.src.org.bundlemaker.core.internal.analysis.AdapterType2IArtifact.java", "BodyUseAPI": [], "Fixed commit": "e8a64c32bb78a656909f5a7ec6dd177413399c0a", "Url": "https://api.github.com/repos/nilshartmann/bundlemaker", "Date": "2011-07-07T09:30:06Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.utils.ShortcutUtil.timeToPointOfDay(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tmpMap.containsKey(index)) { int airSize = (mapSize.get(index)) + 1; float airTotal = tmpMap.get(index); tmpMap.put(index, (airTotal + air)); mapSize.put(index, airSize); }else { mapSize.put(index, 1); tmpMap.put(index, air); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4837/buggy-version/pM.src.main.java.app.utils.DataCalculator.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Float>.put(int,float)", "java.util.Map<java.lang.Integer, java.lang.Float>.get(int)", "java.util.Map<java.lang.Integer, java.lang.Integer>.put(int,int)", "java.util.Map<java.lang.Integer, java.lang.Integer>.get(int)", "java.util.Map<java.lang.Integer, java.lang.Float>.put(int,float)", "java.util.Map<java.lang.Integer, java.lang.Integer>.put(int,int)"], "Fixed commit": "d8930797dde7648cf74f4d6a9a6c243c925ed7e8", "Url": "https://api.github.com/repos/liute62/Andorid-PM2.5", "Date": "2016-02-09T11:45:52Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInvalidated()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2217/buggy-version/mopub-sdk.src.main.java.com.mopub.mobileads.CustomEventInterstitialAdapter.java", "BodyUseAPI": [], "Fixed commit": "2bb6c8502d7bb5af56daf1e0ee350ac223e897ed", "Url": "https://api.github.com/repos/Ranzdo/mopub-android-sdk", "Date": "2014-07-22T15:46:05Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Object>.getCanonicalName()", "com.google.common.collect.Sets.newHashSet()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(extensionNames.contains(moduleName))) { io.druid.initialization.Initialization.log.info(\"Adding extension module[%s] for class[%s]\", moduleName, clazz.getName()); extensionNames.add(moduleName); retVal.add(module); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2792/buggy-version/server.src.main.java.io.druid.initialization.Initialization.java", "BodyUseAPI": ["com.metamx.common.logger.Logger.info(java.lang.String,java.lang.String,java.lang.String)", "java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "50e26bb9aa67eba3bdc84c388296a5ed4ce69287", "Url": "https://api.github.com/repos/guobingkun/druid", "Date": "2015-06-05T06:01:23Z"},
{"Line": "=>1417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.logstorage.TableScanRequest.getMinId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((minId < 0) || (readerMaxId < 0)) || (readerMaxId >= minId)) { org.araqne.logstorage.TableScanRequest tabletReq = req.clone(); tabletReq.setMaxId(readerMaxId); reader.traverse(tabletReq); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2600/buggy-version/araqne-logstorage.src.main.java.org.araqne.logstorage.engine.LogStorageEngine.java", "BodyUseAPI": ["org.araqne.logstorage.TableScanRequest.setMaxId(long)"], "Fixed commit": "d266e47764fecc2fad74819d36806f086f535081", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-01-26T05:52:17Z"},
{"Line": "=>1428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.logstorage.TableScanRequest.getMinId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((minId < 0) || (readerMaxId < 0)) || (readerMaxId >= minId)) { org.araqne.logstorage.TableScanRequest tabletReq = req.clone(); tabletReq.setMaxId(readerMaxId); reader.traverse(tabletReq); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2600/buggy-version/araqne-logstorage.src.main.java.org.araqne.logstorage.engine.LogStorageEngine.java", "BodyUseAPI": ["org.araqne.logstorage.TableScanRequest.setMaxId(long)"], "Fixed commit": "d266e47764fecc2fad74819d36806f086f535081", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-01-26T05:52:17Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valueMap == null) { throw new java.lang.IllegalArgumentException(\"valueMap is expected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5819/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionCountIfZeroPos.java", "BodyUseAPI": [], "Fixed commit": "2df8d5b6115c1521c19251eff11736a931ff3be7", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-22T18:55:22Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"One argument is expected\"); }else if ((arguments.size()) != 1) { throw new java.lang.IllegalArgumentException(((\"One argument was expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5819/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionCountIfZeroPos.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "2df8d5b6115c1521c19251eff11736a931ff3be7", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-22T18:55:22Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.hisp.dhis.rules.RuleVariableValue>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((ruleVariableValue.value()) != null) { java.lang.String value = ruleVariableValue.value().replace(\"'\", \"\"); if (ifZeroPos(value)) { return 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5819/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionCountIfZeroPos.java", "BodyUseAPI": ["org.hisp.dhis.rules.RuleVariableValue.value()", "ruleVariableValue.value().replace(java.lang.String,java.lang.String)"], "Fixed commit": "2df8d5b6115c1521c19251eff11736a931ff3be7", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-22T18:55:22Z"},
{"Line": "=>2894", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.china.center.oa.publics.dao.InvoiceDAO.find(bean.getSailInvoice())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (invoiceBean != null) { bean.setDutyType((((int) (invoiceBean.getVal())) + \"%\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5706/buggy-version/oa_product_portal.src.com.china.center.oa.product.action.ProductAction.java", "BodyUseAPI": ["com.china.center.oa.product.action.ProductVO.setDutyType(java.lang.String)", "com.china.center.oa.publics.bean.InvoiceBean.getVal()"], "Fixed commit": "eb88d94d02534524bda40762e71a2730f6331881", "Url": "https://api.github.com/repos/kingofhawks/yycoin", "Date": "2017-03-31T09:01:42Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dateTimeMap.containsKey(seedu.agendum.logic.parser.Parser.ADD_ARGS_FROM)) && (dateTimeMap.containsKey(seedu.agendum.logic.parser.Parser.ADD_ARGS_TO))) { return new seedu.agendum.logic.parser.AddCommand(taskTitle, dateTimeMap.get(seedu.agendum.logic.parser.Parser.ADD_ARGS_FROM), dateTimeMap.get(seedu.agendum.logic.parser.Parser.ADD_ARGS_TO), seedu.agendum.logic.parser.Parser.getTagsFromArgs(\"test\")); }else if (((!(dateTimeMap.containsKey(seedu.agendum.logic.parser.Parser.ADD_ARGS_FROM))) && (!(dateTimeMap.containsKey(seedu.agendum.logic.parser.Parser.ADD_ARGS_TO)))) && (!(dateTimeMap.containsKey(seedu.agendum.logic.parser.Parser.ADD_ARGS_BY)))) { return new seedu.agendum.logic.parser.AddCommand(taskTitle, seedu.agendum.logic.parser.Parser.getTagsFromArgs(\"test\")); }else { return new seedu.agendum.logic.parser.IncorrectCommand(java.lang.String.format(seedu.agendum.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6878/buggy-version/src.main.java.seedu.agendum.logic.parser.Parser.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.Optional<java.time.LocalDateTime>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.Optional<java.time.LocalDateTime>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.Optional<java.time.LocalDateTime>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.Optional<java.time.LocalDateTime>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.Optional<java.time.LocalDateTime>>.get(java.lang.String)"], "Fixed commit": "6b8065502a0b6fa36867e023c0f929766ebda3d2", "Url": "https://api.github.com/repos/CS2103AUG2016-W11-C2/main", "Date": "2016-10-12T15:20:27Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((column < 0) || (column >= (numberOfColumns))) { throw new java.lang.IllegalArgumentException((((((\"invalid column (\" + column) + \") specified for \") + (imageFile.getAbsolutePath())) + \", column values must be between 0 and \") + ((numberOfColumns) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6829/buggy-version/render-ws-java-client.src.main.java.org.janelia.render.client.IGridPaths.java", "BodyUseAPI": [], "Fixed commit": "b319e7fad7a4c1b8d55a074a339852295b3ec047", "Url": "https://api.github.com/repos/saalfeldlab/render", "Date": "2015-07-13T19:23:17Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row < 0) || (row >= (numberOfRows))) { throw new java.lang.IllegalArgumentException((((((\"invalid row (\" + row) + \") specified for \") + (imageFile.getAbsolutePath())) + \", row values must be between 0 and \") + ((numberOfRows) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6829/buggy-version/render-ws-java-client.src.main.java.org.janelia.render.client.IGridPaths.java", "BodyUseAPI": [], "Fixed commit": "b319e7fad7a4c1b8d55a074a339852295b3ec047", "Url": "https://api.github.com/repos/saalfeldlab/render", "Date": "2015-07-13T19:23:17Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((sp.length) > 1) { obj.data.worldObjectTag.put(sp[0], ((multiverse.world.base.WorldObject) (java.lang.Class.forName(sp[1]).newInstance()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2349/buggy-version/src.multiverse.world.World.java", "BodyUseAPI": ["obj.data.worldObjectTag.put(java.lang.String,((multiverse.world.base.WorldObject) (java.lang.Class.forName(sp[1]).newInstance())))", "java.lang.Class.forName(java.lang.String)", "java.lang.Class<?>.newInstance()"], "Fixed commit": "1ace8737dea4c39871851e45052f1632afae2c3f", "Url": "https://api.github.com/repos/Helios41/Multiverse", "Date": "2014-02-05T01:20:34Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((sp.length) > 1) { obj.data.intTag.put(sp[0], java.lang.Integer.parseInt(sp[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2349/buggy-version/src.multiverse.world.World.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "obj.data.intTag.put(java.lang.String,int)"], "Fixed commit": "1ace8737dea4c39871851e45052f1632afae2c3f", "Url": "https://api.github.com/repos/Helios41/Multiverse", "Date": "2014-02-05T01:20:34Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((sp.length) > 1) { obj.data.stringTag.put(sp[0], sp[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2349/buggy-version/src.multiverse.world.World.java", "BodyUseAPI": ["obj.data.stringTag.put(java.lang.String,java.lang.String)"], "Fixed commit": "1ace8737dea4c39871851e45052f1632afae2c3f", "Url": "https://api.github.com/repos/Helios41/Multiverse", "Date": "2014-02-05T01:20:34Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != null) { out.append(((((entry.getKey()) + \"/\") + (entry.getValue())) + \" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2349/buggy-version/src.multiverse.world.base.WorldObject.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "1ace8737dea4c39871851e45052f1632afae2c3f", "Url": "https://api.github.com/repos/Helios41/Multiverse", "Date": "2014-02-05T01:20:34Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != null) { out.append(((((entry.getKey()) + \"/\") + (entry.getValue())) + \" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2349/buggy-version/src.multiverse.world.base.WorldObject.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()"], "Fixed commit": "1ace8737dea4c39871851e45052f1632afae2c3f", "Url": "https://api.github.com/repos/Helios41/Multiverse", "Date": "2014-02-05T01:20:34Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != null) { out.append(((((entry.getKey()) + \"/\") + (entry.getValue().getClass().getName())) + \" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2349/buggy-version/src.multiverse.world.base.WorldObject.java", "BodyUseAPI": ["java.lang.Class<? extends multiverse.world.base.WorldObject>.getName()", "java.lang.StringBuilder.append(java.lang.String)", "multiverse.world.base.WorldObject.getClass()", "java.util.Map.Entry<java.lang.String, multiverse.world.base.WorldObject>.getKey()", "java.util.Map.Entry<java.lang.String, multiverse.world.base.WorldObject>.getValue()"], "Fixed commit": "1ace8737dea4c39871851e45052f1632afae2c3f", "Url": "https://api.github.com/repos/Helios41/Multiverse", "Date": "2014-02-05T01:20:34Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (cloneOperation.getTargetNodeGraph())) { ps = connection.prepareStatement(Query.CREATE_GRAPH); ps.setString(1, cloneOperation.getTargetNodeGraph()); ps.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5932/buggy-version/src.main.java.com.weaverplatform.postgresql.database.Database.java", "BodyUseAPI": ["com.weaverplatform.postgresql.database.query.model.CloneOperation.getTargetNodeGraph()", "java.sql.PreparedStatement.setString(int,cloneOperation.getTargetNodeGraph())"], "Fixed commit": "6024c9e4cff9b47faa73fca0e14efa1b441999a0", "Url": "https://api.github.com/repos/weaverplatform/weaver-database-postgresql", "Date": "2017-12-01T19:29:51Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mustUnlock) { unlock(userAnonymizedID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8481/buggy-version/analysisservice.src.main.java.nu.yona.server.analysis.service.UserAnonymizedSynchronizer.java", "BodyUseAPI": [], "Fixed commit": "b97d3bfd87d1337bcc9e6afc5c609c68d4b872e8", "Url": "https://api.github.com/repos/yonadev/yona-server", "Date": "2016-10-03T05:48:46Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prof) && (graph)) { createUser(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1040/buggy-version/app.src.main.java.dev.blunch.blunch.activity.LogInActivity.java", "BodyUseAPI": [], "Fixed commit": "b6f7e826f3deb20dab34a9f966e5d937ae9e57ff", "Url": "https://api.github.com/repos/BlunchDev/blunch_android", "Date": "2016-05-08T16:48:12Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getSelectedItem()) == 1) { inactivePanel.onShown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8851/buggy-version/server.admin.src.main.java.org.kaaproject.kaa.server.admin.client.mvp.view.struct.AbstractRecordPanel.java", "BodyUseAPI": [], "Fixed commit": "3fac2a2df761f2010212e068c5a6d87bbd460d5d", "Url": "https://api.github.com/repos/kaaproject/kaa", "Date": "2015-02-27T15:26:24Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (trimmedArgs.equals(\"\")) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, ThemeCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6213/buggy-version/src.main.java.seedu.address.logic.parser.ThemeCommandParser.java", "BodyUseAPI": [], "Fixed commit": "21ca720b254be4292a520c5163a1b73bb818f6f3", "Url": "https://api.github.com/repos/aver0214/addressbook-level4", "Date": "2017-11-02T07:59:04Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fallbackServlet) == null) { if (!(rootServlets.isEmpty())) { return io.datakernel.http.MiddlewareServlet.ProcessResult.NOT_ALLOWED; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6411/buggy-version/http.src.main.java.io.datakernel.http.MiddlewareServlet.java", "BodyUseAPI": [], "Fixed commit": "5e17d08cf118b83894eb195fc16e0cbb7f20ec36", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2017-03-03T12:47:57Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((process) != null) process.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6637/buggy-version/src.main.java.de.flapdoodle.embed.process.runtime.AbstractProcess.java", "BodyUseAPI": [], "Fixed commit": "e57a916016d66606dd51a0968ff580fca5fc45fd", "Url": "https://api.github.com/repos/flapdoodle-oss/de.flapdoodle.embed.process", "Date": "2012-09-30T09:21:45Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (healthCheck(request)) { channel.sendResponse(new org.elasticsearch.rest.BytesRestResponse(OK, \"{\\\"OK\\\":{}}\")); }else { sendAuthenticationChallenge(request, channel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1068/buggy-version/src.main.java.com.asquera.elasticsearch.plugins.http.AbstractAuthRestFilter.java", "BodyUseAPI": ["com.asquera.elasticsearch.plugins.http.AbstractAuthRestFilter.sendAuthenticationChallenge(org.elasticsearch.rest.RestRequest,org.elasticsearch.rest.RestChannel)"], "Fixed commit": "1a7f80073524152b51884d21b4d5d06d6e6db91e", "Url": "https://api.github.com/repos/hmalphettes/elasticsearch-http-basic", "Date": "2014-07-31T00:56:25Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTempMarker) != null) { clearTempMarker(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4128/buggy-version/app.src.main.java.com.mybus.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0ba8d5e27d5537dfcdd238dbdcf8664b17ee573c", "Url": "https://api.github.com/repos/sparkdigital/mybus-android", "Date": "2016-04-21T15:12:17Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["poli.comp.checker.ASTIfStatement.getElseBlockStatements()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (elseBlockStatements != null) { for (poli.comp.checker.ASTStatement stt : elseBlockStatements) { stt.visit(this, scopeTracker); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5586/buggy-version/src.poli.comp.checker.Checker.java", "BodyUseAPI": [], "Fixed commit": "fe4b9321ab6957caa95f4f4801dc12ebb2cbb1ee", "Url": "https://api.github.com/repos/ferrgo/fortran", "Date": "2016-12-16T23:55:29Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["settings.get(\"login_defaultPassword\", \":\").split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((passwordHash.length) == 2) { savedUser = passwordHash[0]; savedPass = new com.github.kolandroid.kol.model.models.login.PasswordHash(passwordHash[1], true); }else { savedUser = null; savedPass = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8412/buggy-version/app.src.main.java.com.github.kolandroid.kol.android.login.LoginController.java", "BodyUseAPI": [], "Fixed commit": "c0cda8a3d67771291c70e9a87f441f4d3fd01d0a", "Url": "https://api.github.com/repos/Kasekopf/kolandroid", "Date": "2015-09-27T11:51:08Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (childNode.nodeName().equals(\"br\")) { pagelet = null; }else { java.lang.String text = ((childNode.getClass()) == (org.jsoup.nodes.TextNode.class)) ? ((org.jsoup.nodes.TextNode) (childNode)).text().trim() : ((org.jsoup.nodes.Element) (childNode)).text().trim(); if (text.isEmpty()) continue; if (pagelet == null) { pagelet = new com.pratilipi.data.client.PratilipiContentData.Pagelet(text, com.pratilipi.data.client.PratilipiContentData.PageletType.TEXT); pageletList.add(pagelet); }else { pagelet = new com.pratilipi.data.client.PratilipiContentData.Pagelet((((pagelet.getData()) + \" \") + text), com.pratilipi.data.client.PratilipiContentData.PageletType.TEXT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2852/buggy-version/src.main.java.com.pratilipi.common.util.PratilipiContentUtil.java", "BodyUseAPI": ["org.jsoup.nodes.Node.getClass()"], "Fixed commit": "6f073c96d19ece855b865fac3924780792a98fbd", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-07-22T05:47:04Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tr.rp.parser.ConcreteParser.visit(fsc.stat())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (s == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6142/buggy-version/src.main.java.com.tr.rp.parser.ConcreteParser.java", "BodyUseAPI": [], "Fixed commit": "13aa5bb91696f6efa12b15cced8331ac09cbb0ad", "Url": "https://api.github.com/repos/tjitze/RankPL", "Date": "2017-06-24T19:23:34Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moe.minori.pgpclipper.PGPClipperResultShowActivity.KEY_ID) != null) intent.putExtra(\"KEY_ID\", convertToStringArray(moe.minori.pgpclipper.PGPClipperResultShowActivity.KEY_ID));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1540/buggy-version/app.src.main.java.moe.minori.pgpclipper.PGPClipperResultShowActivity.java", "BodyUseAPI": [], "Fixed commit": "3cc6ccacb79ddf9e4974a3baa920677c5bef5989", "Url": "https://api.github.com/repos/Mnkai/PGPClipper", "Date": "2015-09-27T05:49:51Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exportTime) == null) { exportTime = new com.google.common.base.Stopwatch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2691/buggy-version/annis-gui.src.main.java.annis.gui.controlpanel.ExportPanel.java", "BodyUseAPI": [], "Fixed commit": "c5c160c1ddfc903a4345af038a5592adaba604f7", "Url": "https://api.github.com/repos/korpling/ANNIS", "Date": "2013-06-13T15:23:48Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.net.UnknownHostException) { return \"Es konnte keine Verbindung mit dem Internet hergestellt werden.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6486/buggy-version/src.de.deadlocker8.budgetmaster.logic.ExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "657c1d23bcec6bdb78820ea9c1caf70b8846cbd4", "Url": "https://api.github.com/repos/deadlocker8/BudgetMaster", "Date": "2017-06-10T17:49:00Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.floor(((L) / (rc)))) == 1) { M = 1; }else { M = ((int) ((java.lang.Math.floor(((L) / (rc)))) - (EPSILON))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/807/buggy-version/TP2-CellularAutomata.src.main.java.itba.ss.TP2_CellularAutomata.SelfDrivenParticles.java", "BodyUseAPI": ["java.lang.Math.floor(double)"], "Fixed commit": "8f72072874d1ac157f33b68d950893e0ce42d588", "Url": "https://api.github.com/repos/iitzco/SystemSimulations", "Date": "2016-08-30T15:55:26Z"},
{"Line": "=>1882", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.derivo.sparqldlapi.impl.OWLDataFactory.getOWLClassAssertionAxiom(de.derivo.sparqldlapi.impl.OWLClass,de.derivo.sparqldlapi.impl.OWLNamedIndividual)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (reasoner.getRootOntology().containsAxiom(ax, true)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8067/buggy-version/src.main.java.de.derivo.sparqldlapi.impl.QueryEngineImpl.java", "BodyUseAPI": [], "Fixed commit": "3833b4c8290f04bfeea04efccdf5d549cc46eac4", "Url": "https://api.github.com/repos/protegeproject/sparql-dl-api", "Date": "2015-06-12T03:50:15Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Common.envProps.getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isSsl) { int port = Common.envProps.getInt(\"ssl.port\", 443); uri = (((\"https://\" + (request.getServerName())) + \":\") + port) + (com.serotonin.m2m2.module.DefaultPagesDefinition.getLoginUri(request, response)); }else { uri = com.serotonin.m2m2.module.DefaultPagesDefinition.getLoginUri(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/163/buggy-version/Core.src.com.serotonin.m2m2.web.servlet.StatusServlet.java", "BodyUseAPI": [], "Fixed commit": "2665335254d56e7c3e747c6eb18521e4823aa236", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2017-05-24T03:35:38Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nobody.dom.DOM.getAllDynamicObjects()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((v.get(0)) != null) before = ((java.awt.Point) (v.get(0)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8961/buggy-version/src.com.nobody.renderEngine.SRE.java", "BodyUseAPI": ["java.util.Vector.get(int)"], "Fixed commit": "1f5ac7c89d3395095149122ab2fa0b5f32e8f653", "Url": "https://api.github.com/repos/NCU-2015-nobody/ncu2015-nobody", "Date": "2016-01-03T13:55:10Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (p != null) pci.setProviderId(p.getPersonId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8735/buggy-version/omod.src.main.java.org.openmrs.module.vcttrac.web.controller.VCTCounselingFormController.java", "BodyUseAPI": ["org.openmrs.module.vcttrac.VCTPreCounselingInfo.setProviderId(p.getPersonId())", "org.openmrs.Person.getPersonId()"], "Fixed commit": "ecf8ba3a68c71fddabb3e83f0238142ca153e3c3", "Url": "https://api.github.com/repos/rwanda-rbc-emr/openmrs-module-vcttrac", "Date": "2016-04-19T19:25:01Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((accessesManager) != null) { accessesManager.setMaxNumberOfKeysToRequest(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2773/buggy-version/core.src.main.java.org.infinispan.dataplacement.DataPlacementManager.java", "BodyUseAPI": [], "Fixed commit": "6f0d6d9babffa4ef16546ef7c108e91d5f7cef50", "Url": "https://api.github.com/repos/pruivo/infinispan", "Date": "2013-03-25T22:10:44Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.isMobileUser()) { user.setVerified(true); }else { user.setIsMobileUser(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3465/buggy-version/modules.openlmis-web.src.main.java.org.openlmis.web.controller.UserController.java", "BodyUseAPI": ["org.openlmis.core.domain.User.setIsMobileUser(boolean)", "org.openlmis.core.domain.User.setVerified(boolean)"], "Fixed commit": "dfd223bba33ebfa51dcc7d75d8d8b1c74ae90887", "Url": "https://api.github.com/repos/OpenLMIS/open-lmis", "Date": "2015-08-12T06:21:34Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stateScore) == (s2.stateScore)) { if ((stateScore) == 0) { if ((depth) == (s2.depth)) { return 0; }else return (depth) > (s2.depth) ? 1 : -1; }else { if ((depth) == (s2.depth)) { return 0; }else return (depth) < (s2.depth) ? 1 : -1; } }else { return java.lang.Float.compare(stateScore, s2.stateScore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5621/buggy-version/src.util.heuristic.Score.java", "BodyUseAPI": ["java.lang.Float.compare(float,float)"], "Fixed commit": "459177b82bc4eb7b15b16133d1090d0bc961b4f9", "Url": "https://api.github.com/repos/derenrich/unpronounceablestring", "Date": "2012-05-02T07:44:11Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xml == null) { java.lang.System.out.println(\"Something's wrong with the pblist input\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5639/buggy-version/src.main.java.nl.pvanassen.bplist.converter.ConvertToXml.java", "BodyUseAPI": [], "Fixed commit": "c7bc4fa0e4216432df212464e9df93c62f890adf", "Url": "https://api.github.com/repos/Kethen/java-bplist", "Date": "2017-08-15T16:30:14Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(frame.isVisible())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7175/buggy-version/src.parts.MicropartMonster.java", "BodyUseAPI": [], "Fixed commit": "aba03b3570e9d44a249f3d111c34430893383c2f", "Url": "https://api.github.com/repos/julianh2o/MicropartMonster", "Date": "2014-07-22T07:22:08Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputStack == null) { slots.remove(slotAt.getId()); slotsList.remove(slotAt); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1018/buggy-version/src.main.java.com.InfinityRaider.AgriCraft.tileentity.storage.TileEntitySeedStorage.java", "BodyUseAPI": [], "Fixed commit": "a2e0fc32858fbd54577d7b6b259e2d142e0e24fb", "Url": "https://api.github.com/repos/AgriCraft/AgriCraft", "Date": "2015-12-13T11:22:51Z"},
{"Line": "=>624", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fakePlayer) != null) { tag.setString(\"owner\", fakePlayer.getCommandSenderName()); if ((fakePlayer.getGameProfile().getId()) != null) tag.setString(\"ownerUUID\", fakePlayer.getGameProfile().getId().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2547/buggy-version/src.pneumaticCraft.common.entity.living.EntityDrone.java", "BodyUseAPI": [], "Fixed commit": "bfb79354f3d7930921ac5ab7e201d18ded5b4cc7", "Url": "https://api.github.com/repos/DarkStarDS9/PneumaticCraft", "Date": "2014-12-26T18:34:10Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((writeAheadLog) != null) { writeAheadLog.flush(); java.util.concurrent.Future<?> future = commitExecutor.submit(new com.orientechnologies.orient.core.index.hashindex.local.cache.OWOWCache.PeriodicalFuzzyCheckpointTask()); try { future.get(); } catch (java.lang.Exception e) { com.orientechnologies.common.log.OLogManager.instance().error(this, \"Error during fuzzy checkpoint execution for storage %s .\", e, storageLocal.getName()); } freeSpace = storageDir.getFreeSpace(); effectiveFreeSpace = freeSpace - (allocatedSpace.get()); if (effectiveFreeSpace < (freeSpaceLimit)) callLowSpaceListeners(new com.orientechnologies.orient.core.index.hashindex.local.cache.OWOWCache.LowDiskSpaceInformation(effectiveFreeSpace, freeSpaceLimit)); }else { callLowSpaceListeners(new com.orientechnologies.orient.core.index.hashindex.local.cache.OWOWCache.LowDiskSpaceInformation(effectiveFreeSpace, freeSpaceLimit)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1633/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.cache.OWOWCache.java", "BodyUseAPI": [], "Fixed commit": "bca92e72d8ac25b47fcc0ad91c1c9ecae0908133", "Url": "https://api.github.com/repos/fabriziofortino/orientdb", "Date": "2015-01-12T15:07:35Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (splitHeader[i].contains(\"stop_id\")) idIndex = i;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1583/buggy-version/src.osmtools.GTFSStopLoader.java", "BodyUseAPI": [], "Fixed commit": "891ed59ecd74d34c00df4e3be3ee214f2fb61b8e", "Url": "https://api.github.com/repos/demory/osmtools", "Date": "2012-09-13T14:39:48Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.getItemMeta()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (itemMeta == null) { return \"nothing\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7628/buggy-version/src.uk.co.codefoo.bukkit.saywhat.GameVariableToken.InMyHand.java", "BodyUseAPI": [], "Fixed commit": "c13a1c48d3e6fe2fc35b796089d251ec0e749f9f", "Url": "https://api.github.com/repos/CodeFooGames/SayWhat", "Date": "2013-05-18T21:14:40Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((etudiant.getId()) != 0) groupe.addEtudiant(etudiant);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7751/buggy-version/serveur.qre.src.main.java.database.BDD_Groupe.java", "BodyUseAPI": ["model.Groupe.addEtudiant(model.Etudiant)"], "Fixed commit": "0604348a36eb9e5c143786768ab1b2f4e282053e", "Url": "https://api.github.com/repos/ccocoual/QREmargement", "Date": "2016-02-26T15:51:13Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.express.service.history.dao.HistoryDao.loadHistory(java.lang.Long,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.springframework.util.CollectionUtils.isEmpty(videoIds)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6702/buggy-version/src.main.java.com.express.service.history.HistoryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "fd2bf64fe5181ee32fe174a31b6863dad33e4447", "Url": "https://api.github.com/repos/vDigit-solutions/expressright", "Date": "2017-05-21T23:24:45Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.express.service.history.dao.HistoryDao.loadHistory(java.lang.Long,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (toIndex > (videoIds.size())) { toIndex = videoIds.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6702/buggy-version/src.main.java.com.express.service.history.HistoryServiceImpl.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.size()"], "Fixed commit": "fd2bf64fe5181ee32fe174a31b6863dad33e4447", "Url": "https://api.github.com/repos/vDigit-solutions/expressright", "Date": "2017-05-21T23:24:45Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broad.igv.hic.DatasetReaderV2.getMagicString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (magicString.equals(\"HIC\")) { reader = new org.broad.igv.hic.DatasetReaderV2(file); }else { reader = new org.broad.igv.hic.DatasetReaderV1(file); if ((reader.getVersion()) == (-1)) return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2960/buggy-version/src.org.broad.igv.hic.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "081502b7d71b531a163062d151481b536ac5fc3b", "Url": "https://api.github.com/repos/broadinstitute/IGV", "Date": "2012-10-24T01:50:01Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(query.startsWith(org.autosparql.server.search.TBSLSearch.QUERY_PREFIX))) { query = (org.autosparql.server.search.TBSLSearch.QUERY_PREFIX) + query; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7653/buggy-version/autosparql-lite.src.main.java.org.autosparql.server.search.TBSLSearch.java", "BodyUseAPI": [], "Fixed commit": "f95f7f1346a5b724d8c602b7a3aa6a1ee1b6ce62", "Url": "https://api.github.com/repos/AskNowQA/AutoSPARQL", "Date": "2011-09-15T10:51:47Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(query.startsWith(org.autosparql.server.search.TBSLSearch.QUERY_PREFIX))) { query = (org.autosparql.server.search.TBSLSearch.QUERY_PREFIX) + query; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7653/buggy-version/autosparql-lite.src.main.java.org.autosparql.server.search.TBSLSearch.java", "BodyUseAPI": [], "Fixed commit": "f95f7f1346a5b724d8c602b7a3aa6a1ee1b6ce62", "Url": "https://api.github.com/repos/AskNowQA/AutoSPARQL", "Date": "2011-09-15T10:51:47Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((numBuilder.length()) == 0) { numBuilder.append(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7315/buggy-version/app.src.main.java.com.guomaooo.simplecalculator.MainActivity.java", "BodyUseAPI": ["java.lang.StringBuilder.append(int)"], "Fixed commit": "0603a37663fed27f2a774686056b31bb435a9313", "Url": "https://api.github.com/repos/guomaooo/SimpleCalculator", "Date": "2017-01-20T09:46:26Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataDefinition.getThisClass()) != null) { params = params.getNext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4563/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.term.definition.visitor.DefinitionCheckTypeVisitor.java", "BodyUseAPI": [], "Fixed commit": "16705be4b60254ad75786b640031de34381e6636", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2016-02-04T11:53:53Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((constructor.getThisClass()) != null) { params = params.getNext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4563/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.term.definition.visitor.DefinitionCheckTypeVisitor.java", "BodyUseAPI": [], "Fixed commit": "16705be4b60254ad75786b640031de34381e6636", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2016-02-04T11:53:53Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buttons) != null) { for (java.lang.Object btn : buttons) { btns = btns.append(btn); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7558/buggy-version/rapidoid-pages.src.main.java.org.rapidoid.widget.FormWidget.java", "BodyUseAPI": [], "Fixed commit": "051fb638d73577e11e964be255bc5353f1288a12", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2014-12-30T04:51:24Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFragmentManager().getBackStackEntryCount()) > 0) { getFragmentManager().popBackStackImmediate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/999/buggy-version/app.src.main.java.com.fetchpups.android.fetch.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "96da8a58ad2a8008e88d97ea73015db698c12bf5", "Url": "https://api.github.com/repos/FetchDev/Fetch", "Date": "2017-04-04T18:09:02Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (javax.swing.SwingUtilities.isLeftMouseButton(e)) { if ((e.getClickCount()) == 1) { if (e.isControlDown()) { setSelected((!(isSelected()))); repaint(); } } if ((e.getClickCount()) == 2) { if (isTappable()) tap((!(isTapped()))); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2853/buggy-version/src.org.magic.game.gui.components.DisplayableCard.java", "BodyUseAPI": ["java.awt.event.MouseEvent.isControlDown()", "java.awt.event.MouseEvent.getClickCount()", "java.awt.event.MouseEvent.getClickCount()"], "Fixed commit": "fae5247d157f0812f9b3895c097c8c6561d0f61e", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-06-08T18:37:14Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((betragField) != null) { try { kontoNummer = java.lang.Integer.parseInt(this.kontoNummerField.getText()); } catch (java.lang.NumberFormatException e) { try { throw new de.g18.BitBank.Exception.KeineGueltigeZahlException(\"Kontonummer\"); } catch (de.g18.BitBank.Exception.KeineGueltigeZahlException e1) { e1.showDialog(); return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7608/buggy-version/BitBank.src.de.g18.BitBank.Gui.Listener.ZahlungVornehmenListener.java", "BodyUseAPI": [], "Fixed commit": "b6ce9ecdb3f1691c92bd7cb8cb624b2d87abfa0f", "Url": "https://api.github.com/repos/CitySim/bitbank", "Date": "2013-04-20T17:14:11Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wait < 0) { wait = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9045/buggy-version/src.Main.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "ced1e99cbe68579efeff8bd68c7ff6631d4c4e1f", "Url": "https://api.github.com/repos/MadProgrammas/Game", "Date": "2015-06-02T00:55:22Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getUser().getAttribute(MyPlugin.GREETING)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(myPolly.commands().executeString(greet, e.getUser().getCurrentNickName(), true, e.getUser(), this.myPolly.irc()))) { this.myPolly.irc().sendMessage(e.getUser().getCurrentNickName(), greet, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7130/buggy-version/projects.de.skuzzle.polly.plugin.core.src.core.GreetDeliverer.java", "BodyUseAPI": ["de.skuzzle.polly.sdk.MyPolly.irc()", "this.myPolly.irc().sendMessage(e.getUser().getCurrentNickName(),java.lang.String,core.GreetDeliverer)", "e.getUser().getCurrentNickName()", "de.skuzzle.polly.sdk.eventlistener.UserEvent.getUser()"], "Fixed commit": "86d41ae46147984c2f9a435ad596254884f75d49", "Url": "https://api.github.com/repos/skuzzle/polly", "Date": "2013-04-24T10:14:30Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.gfarcasiu.client.MultiServer.game.getPlayers().length) > 0) android.util.Log.i(\"Debug\", (\"(Server side) Player Cards: \" + (java.util.Arrays.toString(com.gfarcasiu.client.MultiServer.game.getPlayers()[0].getCards()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1771/buggy-version/app.src.main.java.com.gfarcasiu.client.MultiServer.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,(\"(Server side) Player Cards: \" + (java.util.Arrays.toString(com.gfarcasiu.client.MultiServer.game.getPlayers()[0].getCards()))))", "com.gfarcasiu.client.Game.getPlayers()", "java.util.Arrays.toString(com.gfarcasiu.client.MultiServer.game.getPlayers()[0].getCards())", "com.gfarcasiu.client.MultiServer.game.getPlayers()[0].getCards()"], "Fixed commit": "d0621c5ac510f71c032298390f2548754ef2ee03", "Url": "https://api.github.com/repos/georgeaf99/CardGameApp", "Date": "2015-04-25T03:01:54Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.Inventory.getItem(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (((existingHotbar != null) && ((existingHotbar.getType()) != (Material.AIR))) && (!(com.elmakers.mine.bukkit.wand.Wand.isWand(existingHotbar)))) { if (((item) == null) || (!(com.elmakers.mine.bukkit.wand.Wand.isWand(item)))) { com.elmakers.mine.bukkit.wand.Bukkit.getLogger().warning(\"Wand item isn't a wand\"); return; } hotbar.setItem(selectedItem, item); addToInventory(existingHotbar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1577/buggy-version/src.main.java.com.elmakers.mine.bukkit.wand.Wand.java", "BodyUseAPI": ["com.elmakers.mine.bukkit.wand.Wand.addToInventory(org.bukkit.inventory.ItemStack)"], "Fixed commit": "14547f69df4f99333eff52592f78152ca220c447", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2014-07-21T13:19:51Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index < (templates.size())) { return templates.get(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2723/buggy-version/src.main.java.com.seveniu.template.PagesTemplate.java", "BodyUseAPI": ["java.util.List<com.seveniu.template.def.Template>.get(int)"], "Fixed commit": "0ee5a96afba35512bd911e189bfb4744893523c9", "Url": "https://api.github.com/repos/seveniu/OneCrawl", "Date": "2016-11-06T14:56:07Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (((consumesAnnotation != null) && (org.lambadaframework.runtime.ResourceMethodInvoker.consumesSpecificType(consumesAnnotation, MediaType.APPLICATION_JSON))) && ((parameter.getType()) == (java.lang.String.class))) { varargs.add(request.getRequestBody()); }else if ((parameter.getType()) == (com.amazonaws.services.lambda.runtime.Context.class)) { varargs.add(lambdaContext); }else { try { java.lang.Object requestBody = request.getRequestBody(); java.lang.reflect.Type parameterType = parameter.getParameterizedType(); com.fasterxml.jackson.databind.JavaType javaType = org.lambadaframework.runtime.ResourceMethodInvoker.objectMapper.getTypeFactory().constructType(parameterType); if (requestBody instanceof java.lang.String) { varargs.add(org.lambadaframework.runtime.ResourceMethodInvoker.objectMapper.readValue(((java.lang.String) (requestBody)), javaType)); }else { varargs.add(org.lambadaframework.runtime.ResourceMethodInvoker.objectMapper.convertValue(requestBody, javaType)); } } catch (java.io.IOException ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2067/buggy-version/runtime.src.main.java.org.lambadaframework.runtime.ResourceMethodInvoker.java", "BodyUseAPI": ["java.lang.reflect.Parameter.getParameterizedType()", "java.lang.reflect.Parameter.getType()"], "Fixed commit": "b781efb66d170b9601f952e8e74e9174b682960f", "Url": "https://api.github.com/repos/lambm/lambadaframework", "Date": "2016-07-08T11:48:48Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.getInventory().isInInventory(command.getSecondWord().trim()))) java.lang.System.out.println(\"You are not carrying that item\"); else { if (command.getSecondWord().equals(\"fists\")) java.lang.System.out.println(\"That is not physically possible\"); else { if ((player.getInventory().getItem(command.getSecondWord())) instanceof com.bayviewglen.zork.EquippableItem) if (((com.bayviewglen.zork.EquippableItem) (player.getInventory().getItem(command.getSecondWord()))).getEquipped()) player.unequip(command.getSecondWord()); player.drop(command.getSecondWord(), currentRoom); java.lang.System.out.println((\"You dropped: \" + (command.getSecondWord()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8815/buggy-version/DictatorWars.src.com.bayviewglen.zork.Game.java", "BodyUseAPI": ["com.bayviewglen.zork.Player.unequip(command.getSecondWord())", "com.bayviewglen.zork.Command.getSecondWord()", "com.bayviewglen.zork.Command.getSecondWord()", "java.io.PrintStream.println((\"You dropped: \" + (command.getSecondWord())))", "player.getInventory().getItem(command.getSecondWord())", "com.bayviewglen.zork.Player.drop(command.getSecondWord(),com.bayviewglen.zork.Room)", "((com.bayviewglen.zork.EquippableItem) (player.getInventory().getItem(command.getSecondWord()))).getEquipped()", "player.getInventory().getItem(command.getSecondWord())", "command.getSecondWord().equals(java.lang.String)", "com.bayviewglen.zork.Command.getSecondWord()", "com.bayviewglen.zork.Player.getInventory()", "com.bayviewglen.zork.Command.getSecondWord()", "com.bayviewglen.zork.Command.getSecondWord()", "com.bayviewglen.zork.Command.getSecondWord()", "com.bayviewglen.zork.Player.getInventory()"], "Fixed commit": "c841115369b721f400934293236d0302313750f3", "Url": "https://api.github.com/repos/ajollymarlier/Zork", "Date": "2017-05-30T23:27:40Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validate(((org.xdi.oxd.common.params.HasProtectionAccessTokenParams) (params)))) { isClientLocal = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1699/buggy-version/oxd-server.src.main.java.org.xdi.oxd.server.service.ValidationService.java", "BodyUseAPI": [], "Fixed commit": "bb6347a57f33e3416e6edba7848246623275f334", "Url": "https://api.github.com/repos/GluuFederation/oxd", "Date": "2017-08-01T22:48:03Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((m.find()) == true) { filename.add(filelist[i].getName().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3492/buggy-version/app.src.main.java.zsd.example.com.soundspread.FindFile.java", "BodyUseAPI": [], "Fixed commit": "1431dcc8c72ca53c4856669c6dde58fa5dca50d0", "Url": "https://api.github.com/repos/Sida63/SoundSpread", "Date": "2016-02-28T15:17:03Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rm) { mrs.setValReg(pc, v); }else { mrs.setValMemory(pc, v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8646/buggy-version/src.com.zms.zpc.execute.InstructionExecutor2.java", "BodyUseAPI": [], "Fixed commit": "e2fa5010bce34ea2a27060bec939d95fcdd45758", "Url": "https://api.github.com/repos/zms351/ZPC", "Date": "2017-07-30T15:55:58Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contributionsList) != null) contributionsList.add(storedContributions.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2490/buggy-version/app.src.main.java.org.wikimedia.commons.wikimedia.Fragments.ImageFragment.java", "BodyUseAPI": [], "Fixed commit": "7d82a9251efeebf6b7b11317c677458ffcaf6b9f", "Url": "https://api.github.com/repos/CommonsLab/CommonsLab", "Date": "2017-06-11T20:10:13Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contributionsList) != null) contributionsList.add(storedContributions.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2490/buggy-version/app.src.main.java.org.wikimedia.commons.wikimedia.Fragments.VideoFragment.java", "BodyUseAPI": [], "Fixed commit": "7d82a9251efeebf6b7b11317c677458ffcaf6b9f", "Url": "https://api.github.com/repos/CommonsLab/CommonsLab", "Date": "2017-06-11T20:10:13Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contributionsList) != null) contributionsList.add(storedContributions.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2490/buggy-version/app.src.main.java.org.wikimedia.commons.wikimedia.Fragments.AudioFragment.java", "BodyUseAPI": [], "Fixed commit": "7d82a9251efeebf6b7b11317c677458ffcaf6b9f", "Url": "https://api.github.com/repos/CommonsLab/CommonsLab", "Date": "2017-06-11T20:10:13Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((payload) == null) || (map == null)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7915/buggy-version/src.gui.org.deidentifier.arx.gui.worker.WorkerLoad.java", "BodyUseAPI": [], "Fixed commit": "a7f6121798b80c148cbdd17da2fe7f63fa5ac98b", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-02-24T12:25:17Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (destroyed) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5032/buggy-version/kouchat-android-impl.src.main.java.net.usikkert.kouchat.android.controller.PrivateChatController.java", "BodyUseAPI": [], "Fixed commit": "77f9e2761c2c4526bb57af4a80fd9c9a54eca658", "Url": "https://api.github.com/repos/blurpy/kouchat-android", "Date": "2014-01-20T18:08:54Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["femr.data.daos.IRepository<femr.common.models.IPatient>.findAll(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((patients.size()) > 0) { response.setResponseObject(patients); }else { response.addError(\"patients\", \"No patients available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8694/buggy-version/app.femr.business.services.ResearchService.java", "BodyUseAPI": ["femr.business.dtos.ServiceResponse<java.util.List<? extends femr.common.models.IPatient>>.setResponseObject(java.util.List<? extends femr.common.models.IPatient>)"], "Fixed commit": "5da19ffeeaf04aab36eb798947b03867cfd4d113", "Url": "https://api.github.com/repos/codeitandloadit/femr", "Date": "2014-03-09T04:02:22Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencron.agent.CommandUtils.createShellFile(java.lang.String,java.lang.String,request.getParams().get(\"runAs\"),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.opencron.agent.CommonUtils.notEmpty(shellFile)) { shellFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2762/buggy-version/opencron-agent.src.main.java.org.opencron.agent.AgentProcessor.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "0387177cff5ad1bdc999ecbfa9ff3f45447c698c", "Url": "https://api.github.com/repos/jobxhub/JobX", "Date": "2017-07-10T02:45:42Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.widgets.FileDialog.open()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (fileName != null) text_5.setText(fileName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9237/buggy-version/fNIRs.src.fNIRs.Hello.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Text.setText(java.lang.String)"], "Fixed commit": "8587f0c804233739800418b1f0ceb3f6307bc115", "Url": "https://api.github.com/repos/CS-Seminar/fNIRS", "Date": "2013-10-25T15:54:02Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cookieString.length()) > 0) { cookieString.append(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8166/buggy-version/src.android.com.eclipsesource.tabris.browser.BrowserWidgetPropertyHandler.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "4bb517a0d45a2bfdfdfc728947be5e09cd6d45d1", "Url": "https://api.github.com/repos/wilsonna/tabris-browser2", "Date": "2016-06-15T09:38:38Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.pms.util.StringUtil.hasValue(tagInfo.year)) { if ((tagInfo.year.length()) > 4) { result.updateString(\"YEAR\", tagInfo.year.substring(0, 4)); }else { result.updateString(\"YEAR\", tagInfo.year); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1253/buggy-version/src.main.java.net.pms.database.TableMusicBrainzReleases.java", "BodyUseAPI": ["tagInfo.year.substring(int,int)", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year.substring(0, 4))", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year)", "tagInfo.year.length()"], "Fixed commit": "ddec79902755f4e1d997be1341967f18883500ab", "Url": "https://api.github.com/repos/Nadahar/UniversalMediaServer", "Date": "2016-12-18T06:28:01Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((google_api_client) != null) { google_api_client.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9093/buggy-version/app.src.main.java.com.prembros.programming.quizapp.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "68111e86a6a3b612b5a26ae6780c77a9ab72d3f7", "Url": "https://api.github.com/repos/premacck1/QuizApp", "Date": "2016-09-06T15:50:00Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currbmp == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4045/buggy-version/DailyAppLib.src.com.dailystudio.app.utils.BitmapUtils.java", "BodyUseAPI": [], "Fixed commit": "6dc435a53a05b9a290a786db724136ab5a17ebb7", "Url": "https://api.github.com/repos/dailystudio/dspublic", "Date": "2014-10-11T16:21:25Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["head.getValue().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (type.equals(\"start\")) { if ((gamer.getMatch()) != null) { return createErrorPseudoRequest(((org.ggp.base.util.symbol.grammar.SymbolAtom) (list.get(1))).getValue(), \"busy\"); } java.lang.String lMatchID = ((org.ggp.base.util.symbol.grammar.SymbolAtom) (list.get(1))).getValue(); org.apache.logging.log4j.ThreadContext.put(\"matchID\", ((lMatchID + \"-\") + (gamer.getPort()))); if ((gamer.getPort()) == 9147) { org.ggp.base.player.request.factory.RequestFactory.LOGGER.info(\"======================================================\"); org.ggp.base.player.request.factory.RequestFactory.LOGGER.info((\"Beginning new game: \" + lMatchID)); org.ggp.base.player.request.factory.RequestFactory.LOGGER.info((\"Logs available at: http://localhost:9199/localview/\" + lMatchID)); } gamer.setGDLTranslator(new org.ggp.base.util.game.GDLTranslator(((org.ggp.base.util.symbol.grammar.SymbolList) (list.get(3))))); return createStart(gamer, list); }else if (((type.equals(\"play\")) || (type.equals(\"stop\"))) || (type.equals(\"abort\"))) { if ((gamer.getMatch()) == null) { java.lang.String matchId = ((org.ggp.base.util.symbol.grammar.SymbolAtom) (list.get(1))).getValue(); gamer.notifyObservers(new org.ggp.base.player.gamer.event.GamerUnrecognizedMatchEvent(matchId)); org.ggp.base.util.logging.GamerLogger.logError(\"GamePlayer\", ((\"Got \" + type) + \" message not intended for current game: ignoring.\")); return createErrorPseudoRequest(matchId, \"busy\"); } if (type.equals(\"play\")) { return createPlay(gamer, list); }else if (type.equals(\"stop\")) { return createStop(gamer, list); }else if (type.equals(\"abort\")) { return createAbort(gamer, list); } return null; }else { throw new java.lang.IllegalArgumentException(\"Unrecognized request type!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1575/buggy-version/src.org.ggp.base.player.request.factory.RequestFactory.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.ggp.base.util.logging.GamerLogger.logError(java.lang.String,java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "ea951d4fd692a735901c31ab295cc6733136bc87", "Url": "https://api.github.com/repos/SteveDraper/ggp-base", "Date": "2014-07-09T22:12:14Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (worldIn.isBlockPowered(pos)) { net.minecraft.util.BlockPos tmp = pos; this.triggerFire(pos, tmp.offset(EnumFacing.NORTH)); this.isOn = true; }else { this.isOn = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3590/buggy-version/java.com.brilliantcrash.FTLcraft.blocks.WeaponFile.java", "BodyUseAPI": ["com.brilliantcrash.FTLcraft.blocks.WeaponFile.triggerFire(net.minecraft.util.BlockPos,tmp.offset(EnumFacing.NORTH))"], "Fixed commit": "164afb4a5072e863b128b115de8f72bbb757dfee", "Url": "https://api.github.com/repos/Bungee54/FTLcraft", "Date": "2015-08-13T18:32:52Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.emc.storageos.db.client.util.NullColumnValueGetter.isNotNullValue(from.getReplicationGroupInstance())) { to.setReplicationGroupInstance(from.getReplicationGroupInstance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7184/buggy-version/apisvc.src.main.java.com.emc.storageos.api.mapper.BlockMapper.java", "BodyUseAPI": ["com.emc.storageos.model.block.VolumeRestRep.setReplicationGroupInstance(from.getReplicationGroupInstance())", "com.emc.storageos.db.client.model.Volume.getReplicationGroupInstance()"], "Fixed commit": "0aa858174ffdef983159f76b3dbd30e2fa35279b", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-03-17T18:55:28Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((actor.getLocation()) != null) { jsonObjectActor.addProperty(\"location\", gson.toJson(actor.getLocation())); }else { jsonObjectActor.addProperty(\"location\", gson.toJson(com.bitdubai.fermat_api.layer.all_definition.location_system.NetworkNodeCommunicationDeviceLocation.getInstance(new java.lang.Double(0), new java.lang.Double(0)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7290/buggy-version/P2P.plugin.communication.fermat-p2p-plugin-communication-network-node-bitdubai.src.main.java.com.bitdubai.fermat_p2p_plugin.layer.communications.network.node.developer.bitdubai.version_1.structure.rest.services.Actors.java", "BodyUseAPI": ["com.google.gson.JsonObject.addProperty(java.lang.String,gson.toJson(actor.getLocation()))", "com.google.gson.Gson.toJson(actor.getLocation())", "com.bitdubai.fermat_p2p_plugin.layer.communications.network.node.developer.bitdubai.version_1.structure.database.jpa.entities.ActorCatalog.getLocation()"], "Fixed commit": "2ac31a89722251699e8d4df86f2e605b25aa878b", "Url": "https://api.github.com/repos/Rart3001/fermat", "Date": "2016-08-06T13:31:53Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((board[main.java.hackerearth.Board.neighbours[i][j][0][k]][main.java.hackerearth.Board.neighbours[i][j][1][k]]) == 0) { moves[player][((options[player])++)] = new main.java.hackerearth.Move(i, j, main.java.hackerearth.Board.neighbours[i][j][0][k], main.java.hackerearth.Board.neighbours[i][j][1][k], player, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5950/buggy-version/src.main.java.main.java.hackerearth.Hexagon.java", "BodyUseAPI": [], "Fixed commit": "7433fdd08e9428e600abdcd5a681854f4c718c2f", "Url": "https://api.github.com/repos/gkcs/Competitive-Programming", "Date": "2017-01-13T17:43:39Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((board[main.java.hackerearth.Board.jumpables[i][j][0][k]][main.java.hackerearth.Board.jumpables[i][j][1][k]]) == 0) { moves[player][((options[player])++)] = new main.java.hackerearth.Move(i, j, main.java.hackerearth.Board.jumpables[i][j][0][k], main.java.hackerearth.Board.jumpables[i][j][1][k], player, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5950/buggy-version/src.main.java.main.java.hackerearth.Hexagon.java", "BodyUseAPI": [], "Fixed commit": "7433fdd08e9428e600abdcd5a681854f4c718c2f", "Url": "https://api.github.com/repos/gkcs/Competitive-Programming", "Date": "2017-01-13T17:43:39Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mChannelListFragment) != null) { mChannelListFragment.setLastSelectedChannel(new com.igordotsenko.dotsenkorssreader.entities.Channel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4966/buggy-version/app.src.main.java.com.igordotsenko.dotsenkorssreader.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6ca7dc0b6dc92dc92452852882328ac312315bc3", "Url": "https://api.github.com/repos/igordotsenko/RSSReader", "Date": "2016-04-25T11:20:15Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mChannelListFragment.getLastSelectedChannel().getId()) != 0) { onItemSelected(mChannelListFragment.getLastSelectedChannel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4966/buggy-version/app.src.main.java.com.igordotsenko.dotsenkorssreader.MainActivity.java", "BodyUseAPI": ["com.igordotsenko.dotsenkorssreader.ChannelListFragment.getLastSelectedChannel()", "com.igordotsenko.dotsenkorssreader.MainActivity.onItemSelected(mChannelListFragment.getLastSelectedChannel())"], "Fixed commit": "6ca7dc0b6dc92dc92452852882328ac312315bc3", "Url": "https://api.github.com/repos/igordotsenko/RSSReader", "Date": "2016-04-25T11:20:15Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.concurrent.Future>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (future != null) { exec.execute(new finalproject.AlterImageTask(fileName, future)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1466/buggy-version/src.finalproject.Main.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.execute(finalproject.AlterImageTask)"], "Fixed commit": "2ca183256c9f7fe2fe4b8e14500ecd8b40ca23d4", "Url": "https://api.github.com/repos/mnorr9/ConcurrencyFinal", "Date": "2015-05-06T02:32:16Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((personalForm.getAreaOfSpecializationDto()) != null) && ((personalForm.getAreaOfSpecializationDto().getUserSpecializationId()) == 0)) { userSpecialization = userSpecializationDao.getSpecializationInfo(user.getId()); if (userSpecialization == null) { userSpecialization = new com.nagarro.gde.persistence.model.UserSpecialization(); userSpecialization.setUser(user); userSpecialization.setId(0); } }else { userSpecialization = new com.nagarro.gde.persistence.model.UserSpecialization(); userSpecialization.setUser(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2169/buggy-version/gde-backend.src.main.java.com.nagarro.gde.service.UserRegistrationInformationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "961e4ae4c5e21eee3b78fb8c3a1caf6ac70c6565", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-02-26T10:05:23Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((areaOfSpecializationDto.getUserSpecializationId()) != 0) { this.id = areaOfSpecializationDto.getUserSpecializationId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2169/buggy-version/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java", "BodyUseAPI": ["com.nagarro.gde.dto.AreaOfSpecializationDto.getUserSpecializationId()"], "Fixed commit": "961e4ae4c5e21eee3b78fb8c3a1caf6ac70c6565", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-02-26T10:05:23Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj2 instanceof java.lang.String) && (com.nhb.common.utils.StringUtils.isRepresentNumber(((java.lang.String) (obj2))))) { obj1 = new com.nhb.common.predicate.object.getter.NumberAttributeGetterValue(((java.lang.String) (obj1))); }else { obj1 = new com.nhb.common.predicate.object.getter.StringAttributeGetterValue(((java.lang.String) (obj1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4765/buggy-version/NHBCommonPredicate.src.main.java.com.nhb.common.predicate.sql.SqlPredicateParser.java", "BodyUseAPI": [], "Fixed commit": "094f18b6fbb4c8a410ab05b52a8f9270b41023ad", "Url": "https://api.github.com/repos/bachden/nhb-common", "Date": "2017-06-30T18:30:30Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj1 instanceof com.nhb.common.predicate.value.NumberValue) { obj2 = new com.nhb.common.predicate.object.getter.NumberAttributeGetterValue(((java.lang.String) (obj2))); }else { obj2 = new com.nhb.common.predicate.object.getter.StringAttributeGetterValue(((java.lang.String) (obj2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4765/buggy-version/NHBCommonPredicate.src.main.java.com.nhb.common.predicate.sql.SqlPredicateParser.java", "BodyUseAPI": [], "Fixed commit": "094f18b6fbb4c8a410ab05b52a8f9270b41023ad", "Url": "https://api.github.com/repos/bachden/nhb-common", "Date": "2017-06-30T18:30:30Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.janinko.xmppmuc.Room.getMuc()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (muc == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8327/buggy-version/src.main.java.eu.janinko.xmppmuc.Commands.java", "BodyUseAPI": [], "Fixed commit": "f416c87b906be7b1da9b24bfc37818c5b13cbfe2", "Url": "https://api.github.com/repos/janinko/xmppmuc", "Date": "2013-04-17T14:15:19Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mParentTask.getStatus()) != (Status.STATUS_DONE)) { wait(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/141/buggy-version/init.src.main.java.cn.zhaiyifan.init.Task.java", "BodyUseAPI": [], "Fixed commit": "5ad1ab16c090edb7b00623ee74e62181a285dae8", "Url": "https://api.github.com/repos/markzhai/init", "Date": "2015-10-13T14:05:04Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pdfSizeFloat != (-1)) { htmlCode.append(pdfSizeUnit).append(\".\").append(pdfSizeFloat).append(\" MB\"); }else { htmlCode.append(pdfSizeUnit).append(\" KB\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2948/buggy-version/src.com.easypoli.contentAutomator.ApplicationUI.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(long)"], "Fixed commit": "3852c01453fb7df9f3832a1f7ed649569379fef5", "Url": "https://api.github.com/repos/leonardoarcari/EasyPoli-ContentAutomator", "Date": "2015-09-12T10:58:39Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tmpPdfFile.length()) > 1048576L) { pdfSizeUnit = (tmpPdfFile.length()) / 1048576L; pdfSizeFloat = ((tmpPdfFile.length()) % 1048576L) / 100000; }else { pdfSizeUnit = (tmpPdfFile.length()) / 1024L; pdfSizeFloat = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2948/buggy-version/src.com.easypoli.contentAutomator.ApplicationUI.java", "BodyUseAPI": ["java.io.File.length()", "java.io.File.length()", "java.io.File.length()"], "Fixed commit": "3852c01453fb7df9f3832a1f7ed649569379fef5", "Url": "https://api.github.com/repos/leonardoarcari/EasyPoli-ContentAutomator", "Date": "2015-09-12T10:58:39Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.transparent) { backgroundColour = new java.awt.Color(0, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3352/buggy-version/wms.src.main.java.uk.ac.rdg.resc.edal.wms.GetMapStyleParams.java", "BodyUseAPI": [], "Fixed commit": "390363db818cd857339912c50c30ac308b989cac", "Url": "https://api.github.com/repos/Reading-eScience-Centre/edal-java", "Date": "2016-04-26T10:52:06Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Attr.getLocalName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (localName == null) { localName = a.getName(); final int i = localName.indexOf(':'); if (i != (-1)) { localName = localName.substring((i + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/451/buggy-version/src.org.dita.dost.util.XMLUtils.java", "BodyUseAPI": [], "Fixed commit": "44f8e38f43cf3af6d3e51fa81d378c1076f7a5ab", "Url": "https://api.github.com/repos/jelovirt/dita-ot", "Date": "2012-02-08T10:50:57Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getWindow()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (window.isAddingLines()) { vm.addLine(v1, v2); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2356/buggy-version/src.org.nschmidt.ldparteditor.helpers.composite3d.MouseActions.java", "BodyUseAPI": [], "Fixed commit": "6d0dfcf6b0dbc542cbfba5eecf60e6cd2a1f323e", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-14T13:27:54Z"},
{"Line": "=>671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getWindow()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (window.isAddingLines()) { vm.addLine(datfile.getNearestObjVertex1(), nv); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2356/buggy-version/src.org.nschmidt.ldparteditor.helpers.composite3d.MouseActions.java", "BodyUseAPI": [], "Fixed commit": "6d0dfcf6b0dbc542cbfba5eecf60e6cd2a1f323e", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-14T13:27:54Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getWindow()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (window.isAddingLines()) { vm.addLine(datfile.getNearestObjVertex1(), nv); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2356/buggy-version/src.org.nschmidt.ldparteditor.helpers.composite3d.MouseActions.java", "BodyUseAPI": [], "Fixed commit": "6d0dfcf6b0dbc542cbfba5eecf60e6cd2a1f323e", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-14T13:27:54Z"},
{"Line": "=>3067", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modeList != null) && ((modeList.length) > 0)) for (int currMode : modeList) { if (currMode == mode) { isAvailable = true; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9220/buggy-version/src.com.almalence.opencam.cameracontroller.CameraController.java", "BodyUseAPI": [], "Fixed commit": "14b5d45e57e963725f581d8bc052649e408b781f", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2015-09-03T10:43:37Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.classIndex()) >= 0) { m_session.executeScript(\"args['y'] = Y\", getDebug()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4985/buggy-version/src.main.java.weka.filters.pyscript.PyScriptFilter.java", "BodyUseAPI": [], "Fixed commit": "f602272bc47b6030b282661ab4dd921cdf36d2dc", "Url": "https://api.github.com/repos/christopher-beckham/weka-pyscript", "Date": "2015-11-26T03:53:16Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cT) != null) { cT.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2323/buggy-version/src.com.denyszaiats.myreactions.ChooseColorFragment.java", "BodyUseAPI": [], "Fixed commit": "c89fa53b6813f18b2de8fb7f78f24e702d7f82dd", "Url": "https://api.github.com/repos/tricky-trick/myreactions", "Date": "2015-01-06T20:02:50Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cT) != null) { cT.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2323/buggy-version/src.com.denyszaiats.myreactions.RememberColorFragment.java", "BodyUseAPI": [], "Fixed commit": "c89fa53b6813f18b2de8fb7f78f24e702d7f82dd", "Url": "https://api.github.com/repos/tricky-trick/myreactions", "Date": "2015-01-06T20:02:50Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tltv.gantt.client.GanttWidget.getElementHeightWithMargin(com.google.gwt.dom.client.DivElement)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((contentHeight) < (top + height)) { contentHeight = top + height; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5962/buggy-version/gantt-addon.src.main.java.org.tltv.gantt.client.GanttWidget.java", "BodyUseAPI": [], "Fixed commit": "7824b410b72e75903acc6aa3c5c1fd17b23c8010", "Url": "https://api.github.com/repos/tistvan/gantt", "Date": "2016-11-16T13:47:42Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag = true) { foo.setText(email); if (i != null) { startActivity(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5033/buggy-version/BowlingApp.app.src.main.java.purdue.bowlingapp.CompareStatisticsLookupActivity.java", "BodyUseAPI": [], "Fixed commit": "04988e9d67716566b1b57bdbe1fadea05ffa83f1", "Url": "https://api.github.com/repos/BrandonLoi/BowlingTeam", "Date": "2017-10-05T18:53:35Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(firstTick)) { org.lwjgl.input.Mouse.setCursorPosition(mouseX, mouseY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7850/buggy-version/src.main.java.com.gildedgames.util.menu.client.MenuClientEvents.java", "BodyUseAPI": [], "Fixed commit": "38033bded12f7de9e0a00a61123407b50ee71879", "Url": "https://api.github.com/repos/gildedgames/gilded-games-util", "Date": "2015-11-04T10:15:27Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstTick) { firstTick = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7850/buggy-version/src.main.java.com.gildedgames.util.menu.client.MenuClientEvents.java", "BodyUseAPI": [], "Fixed commit": "38033bded12f7de9e0a00a61123407b50ee71879", "Url": "https://api.github.com/repos/gildedgames/gilded-games-util", "Date": "2015-11-04T10:15:27Z"},
{"Line": "=>837", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myValueMarkers) != null) { myValueMarkers.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2464/buggy-version/platform.xdebugger-impl.src.com.intellij.xdebugger.impl.XDebugSessionImpl.java", "BodyUseAPI": [], "Fixed commit": "c7a1fbb90cbeb7f430ae6c37d99c2440c81e3602", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2014-06-05T08:10:44Z"},
{"Line": "=>2317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mContext.getPackageManager().getPackagesForUid(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (packages != null) { for (java.lang.String packageName : packages) { if (!(mUsageStats.isAppIdle(packageName, uid, userId))) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3209/buggy-version/services.core.java.com.android.server.net.NetworkPolicyManagerService.java", "BodyUseAPI": [], "Fixed commit": "e903431dc3df240ec3f0546e2cd3c8fe47bc0c79", "Url": "https://api.github.com/repos/OmniEvo/android_frameworks_base", "Date": "2016-06-06T08:10:32Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((shopDataList.size()) == 0) { tv_no_shop.setVisibility(View.VISIBLE); }else { tv_no_shop.setVisibility(View.GONE); shopAdapter.setData(shopDataList); shopAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9247/buggy-version/app.src.main.java.com.codenicely.brandstore.project.shops.view.ShopFragment.java", "BodyUseAPI": ["com.codenicely.brandstore.project.shops.view.ShopAdapter.setData(java.util.List<com.codenicely.brandstore.project.shops.model.data.ShopData>)"], "Fixed commit": "09ab9d40509b2f14af7077b297376cfff391c3bd", "Url": "https://api.github.com/repos/CodeNicely/OfferCartApp", "Date": "2017-07-08T09:41:59Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getTileEntity(((int) (location.x())),((int) (location.y())),((int) (location.z())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ent instanceof com.builtbroken.mc.api.tile.multiblock.IMultiTile) { ((com.builtbroken.mc.api.tile.multiblock.IMultiTile) (ent)).setHost(tile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7067/buggy-version/src.main.scala.com.builtbroken.mc.prefab.tile.multiblock.MultiBlockHelper.java", "BodyUseAPI": [], "Fixed commit": "7ac7a254aae7e19ad20739b4aa50decf7bf9557a", "Url": "https://api.github.com/repos/VoltzEngine-Project/Engine", "Date": "2015-08-17T03:17:39Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hyperic.hq.ui.action.resource.server.inventory.NewServerFormPrepareActionNG.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((selectedType != null) && (!(selectedType.equalsIgnoreCase(\"\")))) { newForm.setResourceType(java.lang.Integer.valueOf(selectedType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/37/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.server.inventory.NewServerFormPrepareActionNG.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "org.hyperic.hq.ui.action.resource.server.inventory.ServerFormNG.setResourceType(java.lang.Integer)"], "Fixed commit": "2e1c34b7e5ddc637be5be52ffcf85fbef06ec6c6", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-10-06T11:33:10Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.alaCartes.contains(ac)) { java.lang.System.out.println(java.lang.String.format(\"%-5s%-5s%-40s%-50s%-15s\", \" \", ac.id, ac.name, ac.description, ac.getType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1631/buggy-version/RRPSS.src.rrpss.Menu.java", "BodyUseAPI": ["rrpss.AlaCarte.getType()", "java.io.PrintStream.println(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,ac.id,ac.name,ac.description,ac.getType())"], "Fixed commit": "4678501e26bc5d444947f7d205f3b79465bcbe54", "Url": "https://api.github.com/repos/edocsss/RRPSS", "Date": "2014-11-14T07:12:33Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ncombat.combatants.BotShip.azimuth(org.ncombat.combatants.Combatant)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((java.lang.Math.abs(azimuth)) <= 1.0) && (laserReady())) { org.ncombat.command.LaserCommand laserCmd = new org.ncombat.command.LaserCommand(1000.0); batch.addCommand(laserCmd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5358/buggy-version/src.main.java.org.ncombat.combatants.BotShip.java", "BodyUseAPI": [], "Fixed commit": "8010536628f43b7106d98b7c5580599efbbc841e", "Url": "https://api.github.com/repos/ncombat/ncombat", "Date": "2016-02-04T11:23:38Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mShouldRepeat)) { if ((mLastVisibleChild) == ((mAdapter.getCount()) - 1)) { mRightEdge = right; } if ((mFirstVisibleChild) == 0) { mLeftEdge = selectedLeft; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/490/buggy-version/library.src.main.java.com.appl.library.Carousel.java", "BodyUseAPI": [], "Fixed commit": "29b8c0cc0103a3a2c305b684baf141783023cab7", "Url": "https://api.github.com/repos/gintechsystems/Android-Carousel", "Date": "2016-03-09T22:01:41Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == (this.xmlFile.getFilePath())) || (\"\".equals(this.xmlFile.getFilePath()))) { javax.swing.JOptionPane.showMessageDialog(null, \"Open xml or insense file first!\"); }else { actionEventView(myMenu.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8573/buggy-version/InsenseCodeGenerator.src.GUI.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "b044b87de34838f232d6f32f6c50f95c21de0f77", "Url": "https://api.github.com/repos/avasilsg/InsenseGenerator", "Date": "2014-08-14T03:07:49Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((op.targetResource()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3302/buggy-version/src.main.java.com.microsoft.azure.vmagent.AzureVMCloud.java", "BodyUseAPI": [], "Fixed commit": "ac47c1fcce9d490ad52a778877d95af4365b9762", "Url": "https://api.github.com/repos/clguimanMSFT/azure-vm-agents-plugin", "Date": "2017-02-07T21:36:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 1) { return (player.getCountSmall()) > 0; }else if (i == 2) { return (player.getCountMiddle()) > 0; }else if (i == 3) { return (player.getCountBig()) > 0; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3143/buggy-version/boatbusters.src.main.java.c2f.boatbusters.classes.WarShip.java", "BodyUseAPI": [], "Fixed commit": "21e8822c7329e6cb98bd7b48935a2b3b2f1eb24a", "Url": "https://api.github.com/repos/ManicanPiss/BoatBusters", "Date": "2017-05-02T13:33:52Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (plugin.CheckPerm(priest, \"marry.offlinedivorce\", false)) { plugin.DB.DivorcePlayer(player); priest.sendMessage(((org.bukkit.ChatColor.GREEN) + (java.lang.String.format(plugin.lang.Get(\"Priest.Divorced\"), ((player.getDisplayName()) + (org.bukkit.ChatColor.GREEN)), (((org.bukkit.ChatColor.GRAY) + otP) + (org.bukkit.ChatColor.GREEN)))))); player.sendMessage(((org.bukkit.ChatColor.GREEN) + (java.lang.String.format(plugin.lang.Get(\"Priest.DivorcedPlayer\"), ((priest.getDisplayName()) + (org.bukkit.ChatColor.GREEN)), (((org.bukkit.ChatColor.GRAY) + otP) + (org.bukkit.ChatColor.GREEN)))))); if (plugin.config.GetAnnouncementEnabled()) { plugin.getServer().broadcastMessage(((org.bukkit.ChatColor.GREEN) + (java.lang.String.format(plugin.lang.Get(\"Priest.BroadcastDivorce\"), ((priest.getDisplayName()) + (org.bukkit.ChatColor.GREEN)), ((player.getDisplayName()) + (org.bukkit.ChatColor.GREEN)), (((org.bukkit.ChatColor.GRAY) + otP) + (org.bukkit.ChatColor.GREEN)))))); } }else { priest.sendMessage(((org.bukkit.ChatColor.RED) + (java.lang.String.format(plugin.lang.Get(\"Priest.PartnerOffline\"), player.getName(), otP)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2671/buggy-version/src.at.pcgamingfreaks.MarriageMaster.Bukkit.Commands.Priest.java", "BodyUseAPI": ["plugin.lang.Get(java.lang.String)", "plugin.config.GetAnnouncementEnabled()", "java.lang.String.format(plugin.lang.Get(\"Priest.DivorcedPlayer\"),((priest.getDisplayName()) + (org.bukkit.ChatColor.GREEN)),(((org.bukkit.ChatColor.GRAY) + otP) + (org.bukkit.ChatColor.GREEN)))", "org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.RED) + (java.lang.String.format(plugin.lang.Get(\"Priest.PartnerOffline\"), player.getName(), otP))))", "org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.GREEN) + (java.lang.String.format(plugin.lang.Get(\"Priest.DivorcedPlayer\"), ((priest.getDisplayName()) + (org.bukkit.ChatColor.GREEN)), (((org.bukkit.ChatColor.GRAY) + otP) + (org.bukkit.ChatColor.GREEN))))))", "plugin.DB.DivorcePlayer(org.bukkit.entity.Player)", "plugin.lang.Get(java.lang.String)", "at.pcgamingfreaks.MarriageMaster.Bukkit.MarriageMaster.getServer()", "org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.GREEN) + (java.lang.String.format(plugin.lang.Get(\"Priest.Divorced\"), ((player.getDisplayName()) + (org.bukkit.ChatColor.GREEN)), (((org.bukkit.ChatColor.GRAY) + otP) + (org.bukkit.ChatColor.GREEN))))))", "org.bukkit.entity.Player.getDisplayName()", "plugin.lang.Get(java.lang.String)", "org.bukkit.entity.Player.getDisplayName()", "java.lang.String.format(plugin.lang.Get(\"Priest.Divorced\"),((player.getDisplayName()) + (org.bukkit.ChatColor.GREEN)),(((org.bukkit.ChatColor.GRAY) + otP) + (org.bukkit.ChatColor.GREEN)))", "java.lang.String.format(plugin.lang.Get(\"Priest.BroadcastDivorce\"),((priest.getDisplayName()) + (org.bukkit.ChatColor.GREEN)),((player.getDisplayName()) + (org.bukkit.ChatColor.GREEN)),(((org.bukkit.ChatColor.GRAY) + otP) + (org.bukkit.ChatColor.GREEN)))", "plugin.getServer().broadcastMessage(((org.bukkit.ChatColor.GREEN) + (java.lang.String.format(plugin.lang.Get(\"Priest.BroadcastDivorce\"), ((priest.getDisplayName()) + (org.bukkit.ChatColor.GREEN)), ((player.getDisplayName()) + (org.bukkit.ChatColor.GREEN)), (((org.bukkit.ChatColor.GRAY) + otP) + (org.bukkit.ChatColor.GREEN))))))", "java.lang.String.format(plugin.lang.Get(\"Priest.PartnerOffline\"),player.getName(),java.lang.String)", "plugin.lang.Get(java.lang.String)"], "Fixed commit": "415e5c9dbad1b572cd9e0879ed049d61be96b769", "Url": "https://api.github.com/repos/FabioZumbi12/Bukkit_MarriageMaster", "Date": "2015-07-05T12:06:33Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aSrc.itemStacks) != null) { itemStacks = aSrc.itemStacks.clone(); }else { itemStacks = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3949/buggy-version/src.com.mahn42.framework.BlockArea.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack[].clone()"], "Fixed commit": "bad31e06e9b43dbadb2cc5c56b9b03657ee47906", "Url": "https://api.github.com/repos/Mahn42/Minecraft-Bukkit-Mahn42-Framework", "Date": "2012-09-07T19:23:15Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((segment.indexOf(']')) == (-1)) && ((segment.indexOf('[')) == (-1))) { lyricsByArtistDesired += segment; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1847/buggy-version/src.lyrics.Lyrics.java", "BodyUseAPI": [], "Fixed commit": "a0a987f106e37cd50656c2331347e3357a941be8", "Url": "https://api.github.com/repos/mikemelch/MarkovChainz", "Date": "2016-01-16T20:01:47Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.model.Volume.fetchExportMaskBlockObject(com.emc.storageos.volumecontroller.impl.block.VnxMaskingOrchestrator,java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((bo != null) && (mask.hasExistingVolume(bo))) { com.emc.storageos.volumecontroller.impl.block.VnxMaskingOrchestrator._log.info(java.lang.String.format(\"volume %s is already in mask %s. Removing it from mask's existing volumes and adding to user created volumes\", bo.getWWN(), mask.getMaskName())); java.lang.String hlu = mask.getExistingVolumes().get(com.emc.storageos.db.client.model.BlockObject.normalizeWWN(bo.getWWN())); mask.removeFromExistingVolumes(bo); mask.addVolume(bo.getId(), java.lang.Integer.parseInt(hlu)); mask.addToUserCreatedVolumes(bo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7038/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.block.VnxMaskingOrchestrator.java", "BodyUseAPI": ["mask.getExistingVolumes().get(com.emc.storageos.db.client.model.BlockObject.normalizeWWN(bo.getWWN()))", "com.emc.storageos.db.client.model.BlockObject.normalizeWWN(bo.getWWN())", "com.emc.storageos.db.client.model.BlockObject.getId()", "com.emc.storageos.db.client.model.ExportMask.removeFromExistingVolumes(com.emc.storageos.db.client.model.BlockObject)", "com.emc.storageos.db.client.model.ExportMask.getMaskName()", "com.emc.storageos.db.client.model.BlockObject.getWWN()", "com.emc.storageos.db.client.model.ExportMask.addVolume(bo.getId(),int)", "com.emc.storageos.db.client.model.BlockObject.getWWN()", "com.emc.storageos.db.client.model.ExportMask.getExistingVolumes()", "org.slf4j.Logger.info(java.lang.String)", "java.lang.String.format(java.lang.String,bo.getWWN(),mask.getMaskName())", "com.emc.storageos.db.client.model.ExportMask.addToUserCreatedVolumes(com.emc.storageos.db.client.model.BlockObject)"], "Fixed commit": "29d03c93da9c790c727007a55487d925d6788865", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-11-23T01:58:56Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((noteItems.get(position).image) != \"\") { java.io.File imgFile = new java.io.File(noteItems.get(position).image); if (imgFile.exists()) { android.graphics.Bitmap myBitmap = android.graphics.BitmapFactory.decodeFile(imgFile.getAbsolutePath()); holder.imageView.setImageBitmap(myBitmap); } }else { holder.imageView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5258/buggy-version/app.src.main.java.com.example.ekta.notes_taking.NotesAdapter.java", "BodyUseAPI": ["java.util.ArrayList<com.example.ekta.notes_taking.Notes>.get(int)"], "Fixed commit": "f71def260fdc4816572cdc3f7d3b588f85f18d43", "Url": "https://api.github.com/repos/ektakakkar/Notes-Taking", "Date": "2016-03-28T02:48:19Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marketCandles.size()) > 1) { getFirstAverages(); RSI = getRSI(gainAverage, lossAverage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2969/buggy-version/app.src.main.java.com.chariotinstruments.markets.CalcRSI.java", "BodyUseAPI": [], "Fixed commit": "71bf4d40e0fc433d6598a9faf1f8d3801b3a00c2", "Url": "https://api.github.com/repos/mikemey01/Markets", "Date": "2016-05-16T17:00:32Z"},
{"Line": "=>888", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.getLayoutManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (layoutManager instanceof android.support.v7.widget.LinearLayoutManager) { layoutManagerType = 0; }else if (layoutManager instanceof android.support.v7.widget.StaggeredGridLayoutManager) { layoutManagerType = 2; }else { throw new java.lang.RuntimeException(\"Unsupported LayoutManager used. Valid ones are LinearLayoutManager, GridLayoutManager and StaggeredGridLayoutManager\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5708/buggy-version/library.src.main.java.com.ajguan.library.EasyRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "eb13eff97bfaff43c36cfa9bb4ed3b3f6cfac856", "Url": "https://api.github.com/repos/anzaizai/EasyRefreshLayout", "Date": "2016-09-28T03:02:32Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.detOct()) == 0) { this.root = (this.detNote()) + (java.lang.Integer.toString(this.detOct())); }else { this.root = (this.detNote()) + (java.lang.Integer.toString(((this.detOct()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3042/buggy-version/src.main.java.Chordy.java", "BodyUseAPI": [], "Fixed commit": "cbbae0df5a3a41049cf0712271f89b703ad70fa6", "Url": "https://api.github.com/repos/colbymorrison/chord-app-v2", "Date": "2017-11-10T02:28:28Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (theCalendar.addAuction(myAuction)) { java.lang.System.out.println(\"Auction has been edited.\"); }else { theCalendar.addAuction(theAuction); java.lang.System.out.println(\"There was an error. Your auction has not been edited.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5992/buggy-version/NonProfit.java", "BodyUseAPI": ["Calendar.addAuction(Auction)"], "Fixed commit": "fa5c45f9de4fe415083c9e7cc852e4284b69f0f6", "Url": "https://api.github.com/repos/TCSS360group5/AuctionCentral", "Date": "2015-11-16T19:25:22Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameterBindingVariable) != null) { parameterBindingVariable.setType(returned); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5154/buggy-version/gina-api.src.main.java.org.openflexo.gina.model.graph.FIBDiscreteSimpleFunctionGraph.java", "BodyUseAPI": [], "Fixed commit": "923a3b1dce0583607bdcda9596e4fd2b9e459cac", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2017-09-13T14:59:23Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position < (mResult.size())) { com.grafian.ftsearch.SearchEngine.Item item = mResult.get(position); new com.grafian.ftsearch.MainActivity.DownloadTask().execute(item.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4635/buggy-version/src.com.grafian.ftsearch.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<SearchEngine.Item>.get(int)"], "Fixed commit": "6ece2a227a5c74697fe0fce0bfa5a640322fd78e", "Url": "https://api.github.com/repos/arkusuma/ftsearch-client", "Date": "2012-07-05T20:05:01Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(creatorRights.allowedToCreate(toCheck))) { throw new pl.allegro.tech.hermes.management.domain.PermissionDeniedException(\"You are not allowed to create subscriptions for this topic.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5509/buggy-version/hermes-management.src.main.java.pl.allegro.tech.hermes.management.domain.subscription.validator.SubscriptionValidator.java", "BodyUseAPI": [], "Fixed commit": "4b8c07905634814c7a12cb4b0a1f73873bfb2c77", "Url": "https://api.github.com/repos/allegro/hermes", "Date": "2017-07-08T07:26:49Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args[1].getOperator()) == (com.blazingkin.interpreter.expressionabstraction.Operator.CommaDelimit)) { v2 = com.blazingkin.interpreter.variables.Variable.getValueAsArray(args[1].execute(con)); }else { v2 = new com.blazingkin.interpreter.variables.Value[1]; v2[0] = args[1].execute(con); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2373/buggy-version/com.blazingkin.interpreter.executor.astnodes.CommaDelimitNode.java", "BodyUseAPI": ["args[1].execute(com.blazingkin.interpreter.variables.Context)", "com.blazingkin.interpreter.variables.Variable.getValueAsArray(args[1].execute(con))", "args[1].execute(com.blazingkin.interpreter.variables.Context)"], "Fixed commit": "1eec1d7c51a8a1b156238d9f34bf27dfe6905ea2", "Url": "https://api.github.com/repos/blazingkin/blz-ospl", "Date": "2017-12-01T21:13:31Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args[0].getOperator()) == (com.blazingkin.interpreter.expressionabstraction.Operator.CommaDelimit)) { v1 = com.blazingkin.interpreter.variables.Variable.getValueAsArray(args[0].execute(con)); }else { v1 = new com.blazingkin.interpreter.variables.Value[1]; v1[0] = args[0].execute(con); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2373/buggy-version/com.blazingkin.interpreter.executor.astnodes.CommaDelimitNode.java", "BodyUseAPI": ["com.blazingkin.interpreter.variables.Variable.getValueAsArray(args[0].execute(con))", "args[0].execute(com.blazingkin.interpreter.variables.Context)", "args[0].execute(com.blazingkin.interpreter.variables.Context)"], "Fixed commit": "1eec1d7c51a8a1b156238d9f34bf27dfe6905ea2", "Url": "https://api.github.com/repos/blazingkin/blz-ospl", "Date": "2017-12-01T21:13:31Z"},
{"Line": "=>693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ds.responseIsSet(i))) { java.lang.System.out.println((\"ERROR WITH RESP AT INDEX \" + i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4752/buggy-version/src.main.java.asl.sensor.gui.InputPanel.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "671b42bcb2b5c32e23c57fa1be01467c3e258893", "Url": "https://api.github.com/repos/kschramm-usgs/asl_sensor_suite", "Date": "2017-06-14T23:05:43Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controlService) == null) controlService = husacct.ServiceProvider.getInstance().getControlService();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2379/buggy-version/src.husacct.control.task.CodeViewController.java", "BodyUseAPI": [], "Fixed commit": "1d97fdd85f6a1577225282e0e9c5daafd2543570", "Url": "https://api.github.com/repos/bbsss/HUSACCT", "Date": "2013-06-25T19:35:59Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fit.getPDFConfigurator()) == null) { fit.setPDFConfigurator(new rapidFit.PDFConfiguratorType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7025/buggy-version/src.rapidFit.DataSetPanel.java", "BodyUseAPI": ["rapidFit.ToFitType.setPDFConfigurator(rapidFit.PDFConfiguratorType)"], "Fixed commit": "06c8abb06ac639640da475e0474cbbea2e196de1", "Url": "https://api.github.com/repos/mchchiang/rapid_fit_gui", "Date": "2015-06-11T12:36:10Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.charAt((endIndex - 1))) == '/') { java.lang.String tagName = line.substring((startIndex + 1), (endIndex - 1)); writer.println(((((((line.substring(0, startIndex)) + \"<\") + tagName) + \"></\") + tagName) + \">\")); }else { writer.println(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7025/buggy-version/src.rapidFit.XMLIO.java", "BodyUseAPI": ["java.io.PrintWriter.println(java.lang.String)", "java.io.PrintWriter.println(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "06c8abb06ac639640da475e0474cbbea2e196de1", "Url": "https://api.github.com/repos/mchchiang/rapid_fit_gui", "Date": "2015-06-11T12:36:10Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((order.getStatus()) != 0) { mOrderArrayList.add(order); mCostumAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5004/buggy-version/app.src.main.java.com.example.marni.registerapp.Presentation.Presentation.Activities.OrderHistoryActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.example.marni.registerapp.Presentation.Domain.Order>.add(com.example.marni.registerapp.Presentation.Domain.Order)"], "Fixed commit": "16c9228279628cdf39c232753718619dbb5f10c0", "Url": "https://api.github.com/repos/Mschoot1/RegisterApp", "Date": "2017-05-24T10:44:53Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response == null) { org.wordpress.android.util.AppLog.w(AppLog.T.NOTIFS, \"Success, but did not receive any notes\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3572/buggy-version/WordPress.src.main.java.org.wordpress.android.push.NotificationsProcessingService.java", "BodyUseAPI": [], "Fixed commit": "6767bedbc671c924d8efc8927175b646eaf348a0", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2016-10-29T14:49:13Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mMenuShow)) { menuViewShow(dx); getParent().requestDisallowInterceptTouchEvent(true); com.example.swipemenuview.SwipeMenuLayout.mSlideView = this; }else if (((mMenuShow) && (dx > 0)) && ((mLeftMenuView.getVisibility()) == (android.view.View.INVISIBLE))) { menuViewHide(); menuViewShow(dx); }else if (((mMenuShow) && (dx < 0)) && ((mRightMenuView.getVisibility()) == (android.view.View.INVISIBLE))) { menuViewHide(); menuViewShow(dx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8833/buggy-version/swipemenuview.src.main.java.com.example.swipemenuview.SwipeMenuLayout.java", "BodyUseAPI": [], "Fixed commit": "4c2970f233971634660a043dea1275c7e814a47b", "Url": "https://api.github.com/repos/louiewh/QuickSwipeMenuLayout", "Date": "2016-07-11T02:30:47Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rec != (-1)) totalRec += rec;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5816/buggy-version/src.FileUtils.FileSend.java", "BodyUseAPI": [], "Fixed commit": "a2d5876c9ddeaed76776d51ee2fa2632ab6e2201", "Url": "https://api.github.com/repos/jlsuarezdiaz/NoMoreDropboxMSN", "Date": "2016-02-02T22:46:17Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(bitmap.hasAlpha())) { if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.HONEYCOMB)) { bitmap.setHasAlpha(true); }else { bitmap = addAlphaChannel(bitmap); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7961/buggy-version/Paintroid.src.org.catrobat.paintroid.MainActivity.java", "BodyUseAPI": ["android.graphics.Bitmap.setHasAlpha(boolean)", "org.catrobat.paintroid.MainActivity.1.addAlphaChannel(android.graphics.Bitmap)"], "Fixed commit": "ff5d6ab4a4f94128d01470be4519e6551f526dfe", "Url": "https://api.github.com/repos/Catrobat/Paintroid", "Date": "2014-09-04T13:26:29Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result != null) { if ((result.resultCode) == (au.org.intersect.faims.android.net.FAIMSClientResultCode.SUCCESS)) { beanShellLinker.execute(callback); }else if ((result.resultCode) == (au.org.intersect.faims.android.net.FAIMSClientResultCode.FAILURE)) { activity.showUploadDatabaseFailureDialog(callback); }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6620/buggy-version/faims-android-app.src.au.org.intersect.faims.android.ui.activity.handlers.UploadDatabaseHandler.java", "BodyUseAPI": [], "Fixed commit": "f6c62ca5495fd3898b695e8f3cd261bb339df86e", "Url": "https://api.github.com/repos/IntersectAustralia/faims-android", "Date": "2015-08-19T06:07:08Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previousRequested == 0) { try { for (java.lang.Object value : deque) { notification.accept(subscriber, value); } } catch (java.lang.Throwable e) { subscriber.onError(e); } finally { deque.clear(); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2827/buggy-version/rxjava-core.src.main.java.rx.internal.operators.OperatorTakeLast.java", "BodyUseAPI": [], "Fixed commit": "212af0a0f2fbcaaac792de4c4041eff35127437f", "Url": "https://api.github.com/repos/abersnaze/RxJava", "Date": "2014-07-26T16:26:30Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rVDO.getValue()) != null) && (!(rVDO.getValue().startsWith(\"<\")))) rowData.put(\"microbe\", \"P\"); else rowData.put(\"microbe\", \"A\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6344/buggy-version/ejb.src.org.openelis.bean.SDWISUnloadReportBean.java", "BodyUseAPI": [], "Fixed commit": "7ae606bcd1fb383c1936ebed85a21c71a032debd", "Url": "https://api.github.com/repos/mbielicke/OpenELIS-Iowa", "Date": "2011-08-31T20:51:19Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(txtCreator.getText().equals(\"\"))) { defect.setCreator(new edu.wpi.cs.wpisuitetng.modules.core.models.User(\"\", txtCreator.getText(), \"\", (-1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3322/buggy-version/DefectTracker.src.edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectPanel.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.defecttracker.models.Defect.setCreator(edu.wpi.cs.wpisuitetng.modules.core.models.User)", "javax.swing.JTextField.getText()"], "Fixed commit": "a0e39e9f48ac788e59cd2d9ea2f5297546600eae", "Url": "https://api.github.com/repos/fracture91/wpi-suite-tng", "Date": "2013-01-21T22:33:03Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMinutesOnes) != null) { mMinutesOnes.updatePaddingForBoldDate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3583/buggy-version/library.src.com.doomonafireball.betterpickers.hmspicker.HmsView.java", "BodyUseAPI": [], "Fixed commit": "f96dfabe7d77a06c6b952b1708a78649814990f5", "Url": "https://api.github.com/repos/thorinside/android-betterpickers", "Date": "2014-01-22T03:18:06Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMinutesTens) != null) { mMinutesTens.updatePaddingForBoldDate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3583/buggy-version/library.src.com.doomonafireball.betterpickers.hmspicker.HmsView.java", "BodyUseAPI": [], "Fixed commit": "f96dfabe7d77a06c6b952b1708a78649814990f5", "Url": "https://api.github.com/repos/thorinside/android-betterpickers", "Date": "2014-01-22T03:18:06Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemsBrowserFragment) != null) { itemsBrowserFragment.getDialog().setTitle(\"Select item\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3154/buggy-version/sitecore-sdk-sample.src.net.sitecore.android.sdk.sample.browser.StyledListDialogFromCode.java", "BodyUseAPI": [], "Fixed commit": "f0b13bbe360866e2c714aaad1b26761472f95134", "Url": "https://api.github.com/repos/Sitecore/sitecore-android-sdk-sample", "Date": "2013-12-16T13:06:56Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hdfs) conf2.set(\"fs.default.name\", \"file:///\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5673/buggy-version/src.java.org.apache.nutch.scoring.UsageRankNormalization.java", "BodyUseAPI": [], "Fixed commit": "5f1cbb38754eb2a38a8d7924ee9cf90b927a4446", "Url": "https://api.github.com/repos/AGMLab/nutch", "Date": "2014-02-27T12:36:08Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((inputData.tags) == null) this.tags = \"\"; else this.tags = inputData.tags;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7925/buggy-version/src.main.java.logic.ExtractionExecutor.java", "BodyUseAPI": [], "Fixed commit": "58eee6934775ea970bb3b9f691b15916956ce4a7", "Url": "https://api.github.com/repos/jirayusjiar/FExtraction", "Date": "2015-10-23T04:43:51Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((inputData.body) == null) this.body = \"\"; else this.body = inputData.body;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7925/buggy-version/src.main.java.logic.ExtractionExecutor.java", "BodyUseAPI": [], "Fixed commit": "58eee6934775ea970bb3b9f691b15916956ce4a7", "Url": "https://api.github.com/repos/jirayusjiar/FExtraction", "Date": "2015-10-23T04:43:51Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serverSocket) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/964/buggy-version/src.com.awaker.server.LegacyUploadServer.java", "BodyUseAPI": [], "Fixed commit": "d7b1ae79537628ad8317ef474387502ab0291e23", "Url": "https://api.github.com/repos/caleron/awaker", "Date": "2016-09-19T11:57:31Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LOGOInterpreter.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (root == null) { if (LOGOPP.errorhandler.error()) LOGOPP.errorhandler.errorOut(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6290/buggy-version/DevVersion.LOGOPP.java", "BodyUseAPI": [], "Fixed commit": "394b587ac1a70298eddcd8b759629056cf93c1d4", "Url": "https://api.github.com/repos/jl3931/PLT", "Date": "2013-04-24T20:25:06Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isWireActive(p.x, p.y, wireID)) != active) { setWireActive(p.x, p.y, wireID, active); level.getObject(p.x, p.y).wireUpdate(level, p.x, p.y, wireID, active); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5183/buggy-version/src.level.maps.wireManager.WireManager.java", "BodyUseAPI": ["level.maps.wireManager.WireManager.setWireActive(int,int,int,boolean)", "level.maps.Level.getObject(int,int)", "level.getObject(p.x, p.y).wireUpdate(level.maps.Level,int,int,int,boolean)"], "Fixed commit": "52dc2b38c9fa9cbfed27a90a070592e742c94202", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2015-12-16T15:30:41Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!active) && (level.getObject(x, y).isWireActive(level, x, y, wireID))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5183/buggy-version/src.level.maps.wireManager.WireManager.java", "BodyUseAPI": [], "Fixed commit": "52dc2b38c9fa9cbfed27a90a070592e742c94202", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2015-12-16T15:30:41Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.initializedCalData)) { if (showCommOnCal) try { dayPane.displayCommitments(commList.filter(day)); } catch (edu.wpi.cs.wpisuitetng.modules.calendar.CalendarException e) { e.printStackTrace(); } else dayPane.displayCommitments(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5098/buggy-version/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.DayView.java", "BodyUseAPI": [], "Fixed commit": "88c9f5fa32ff38fce22455ef41892abbd90c5062", "Url": "https://api.github.com/repos/magwitch324/wpi-suite", "Date": "2013-12-07T20:54:09Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(java.lang.Character.isLetter(ch))) { ret.append(ch); last = -1; }else if (java.lang.Character.isUpperCase(ch)) { if ((i > 0) && ((last == 0) || (((last != (-1)) && (i < (strLen - 1))) && (java.lang.Character.isLowerCase(str.charAt((i + 1))))))) { ret.append('_'); } ret.append(java.lang.Character.toLowerCase(ch)); last = 1; }else { ret.append(ch); last = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1888/buggy-version/sothis-core.src.main.java.org.sothis.core.util.StringUtils.java", "BodyUseAPI": ["java.lang.Character.isUpperCase(char)", "java.lang.StringBuilder.append(char)", "java.lang.Character.toLowerCase(char)", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "8c70ef087c9ae62c71254c09a355536d351690e6", "Url": "https://api.github.com/repos/velna/sothis", "Date": "2017-06-05T09:44:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.rabbithole.sra.HttpVerb.getVerb(java.lang.reflect.Method)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (verb == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7084/buggy-version/src.main.java.ch.rabbithole.sra.ResourceManager.java", "BodyUseAPI": [], "Fixed commit": "25dcf318488a1413b3a9c07273244abd11422077", "Url": "https://api.github.com/repos/nimloth05/simple-rest-api", "Date": "2016-10-03T15:53:48Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (right != null) { avltree.AVLNode.setNext(max, right); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3978/buggy-version/src.avltree.AVLTree.java", "BodyUseAPI": ["avltree.AVLNode.setNext(avltree.AVLNode<E>,avltree.AVLNode<E>)"], "Fixed commit": "f2a4601e4589503fe09d5341776ef4aaa86f63f0", "Url": "https://api.github.com/repos/kichatos/AVLTree", "Date": "2016-04-26T14:20:22Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (left != null) { avltree.AVLNode.setNext(left, min); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3978/buggy-version/src.avltree.AVLTree.java", "BodyUseAPI": ["avltree.AVLNode.setNext(avltree.AVLNode<E>,avltree.AVLNode<E>)"], "Fixed commit": "f2a4601e4589503fe09d5341776ef4aaa86f63f0", "Url": "https://api.github.com/repos/kichatos/AVLTree", "Date": "2016-04-26T14:20:22Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((game.getTutorialStage()) == 2) || ((game.getTutorialStage()) == 3)) { bounds.grow(0, 50); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2063/buggy-version/src.views.GameView.java", "BodyUseAPI": [], "Fixed commit": "9d7e5b07352f43afc7cf6cfa4cba0d1ab831d57c", "Url": "https://api.github.com/repos/seanclen/SwampGod", "Date": "2015-12-13T21:06:59Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.spbau.annikura.calculator.Calculator.findFirstBracketsBlock(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ru.spbau.annikura.calculator.OperatorType.isOperator(expression.charAt(pos)))) { throw new java.lang.IllegalArgumentException(\"An error occurred. The expression is invalid.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6561/buggy-version/Mock.src.main.java.ru.spbau.annikura.calculator.Calculator.java", "BodyUseAPI": [], "Fixed commit": "675abdcceaec7f993da869de628a3d42d22ed0d3", "Url": "https://api.github.com/repos/annikura/java", "Date": "2017-12-03T18:19:43Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (superMarket.Client.marketPlace.buy(superMarket.Client.itemName, superMarket.Client.clientname, superMarket.Client.userBuyFrom)) { java.lang.System.out.println(\"buy is succeeded\"); }else { java.lang.System.out.println(\"buy is not succeeded\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/148/buggy-version/src.superMarket.Client.java", "BodyUseAPI": [], "Fixed commit": "c21bd08420ffc50ec7f77cdd00c3da2ed15bfddb", "Url": "https://api.github.com/repos/samanjahan/supermarket", "Date": "2014-11-24T18:33:56Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((token.op.o) == (com.bitsofproof.supernode.common.ScriptFormat.Opcode.OP_PUSHDATA1.o)) { writeByte(token.data.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6105/buggy-version/api.src.main.java.com.bitsofproof.supernode.common.ScriptFormat.java", "BodyUseAPI": ["com.bitsofproof.supernode.common.ScriptFormat.Writer.writeByte(int)"], "Fixed commit": "8c864ed86683a451505787c4f783e6fc9c6f5a9a", "Url": "https://api.github.com/repos/bitsofproof/supernode", "Date": "2013-07-09T12:03:35Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((token.op.o) == (com.bitsofproof.supernode.common.ScriptFormat.Opcode.OP_PUSHDATA2.o)) { writeInt16(token.data.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6105/buggy-version/api.src.main.java.com.bitsofproof.supernode.common.ScriptFormat.java", "BodyUseAPI": ["com.bitsofproof.supernode.common.ScriptFormat.Writer.writeInt16(int)"], "Fixed commit": "8c864ed86683a451505787c4f783e6fc9c6f5a9a", "Url": "https://api.github.com/repos/bitsofproof/supernode", "Date": "2013-07-09T12:03:35Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((token.op.o) == (com.bitsofproof.supernode.common.ScriptFormat.Opcode.OP_PUSHDATA4.o)) { writeInt32(token.data.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6105/buggy-version/api.src.main.java.com.bitsofproof.supernode.common.ScriptFormat.java", "BodyUseAPI": ["com.bitsofproof.supernode.common.ScriptFormat.Writer.writeInt32(int)"], "Fixed commit": "8c864ed86683a451505787c4f783e6fc9c6f5a9a", "Url": "https://api.github.com/repos/bitsofproof/supernode", "Date": "2013-07-09T12:03:35Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.worldcretornica.plotme.PlotManager.getPlotById(org.bukkit.Location)", "com.worldcretornica.plotme.PlotManager.getPlotById(org.bukkit.Location)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((minp == null) || (maxp == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/618/buggy-version/src.main.java.com.codelanx.weplotrestrict.WEPlotRestrict.java", "BodyUseAPI": [], "Fixed commit": "081c9cad2a5f185b74a3ecb3b89e4232881a16ed", "Url": "https://api.github.com/repos/CodeLanx/WEPlotRestrict", "Date": "2014-04-01T07:00:26Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ids.sardine.TransferUtil.getObject(java.lang.String,java.lang.Object[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (object instanceof java.math.BigDecimal) return ((java.math.BigDecimal) (object));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/510/buggy-version/src.ids.sardine.TransferUtil.java", "BodyUseAPI": [], "Fixed commit": "ea5bb8fc402b33ec95a7364597797d218d745620", "Url": "https://api.github.com/repos/sharklite/Sardine", "Date": "2017-01-17T07:47:50Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["resources[i].getURI().toString().substring(resourceRoot.getURI().toString().length())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (relPath.startsWith(\"/\")) { relPath = relPath.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3156/buggy-version/src.main.java.fr.pilato.spring.elasticsearch.ElasticsearchAbstractClientFactoryBean.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "fb36452f1bb2619013d4667a8d01075b3af4a6fb", "Url": "https://api.github.com/repos/dadoonet/spring-elasticsearch", "Date": "2012-12-13T13:37:56Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getIntExtra(Constants.PENDING_INTENT_EXTRA_REQUEST_CODE,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (requestCode == (Constants.PENDING_INTENT_REQUEST_CODE)) { try { com.mobilemakers.juansoler.appradar.MainActivity.onHandleTransition fragment = ((com.mobilemakers.juansoler.appradar.MainActivity.onHandleTransition) (getSupportFragmentManager().findFragmentById(R.id.container))); fragment.handleTransition(intent); } catch (java.lang.ClassCastException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5425/buggy-version/app.src.main.java.com.mobilemakers.juansoler.appradar.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a958b2cf23713bc806a93f44ab967fe2bc412afc", "Url": "https://api.github.com/repos/juancruzgs/AppRadar", "Date": "2015-03-18T16:28:54Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < (lDOFValueList.size())) { getAdaptiveEngine().addPoint(getName(), lChartName, (i == 0), lDOFValueList.get(i), lMetricArray[i]); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8621/buggy-version/src.clearcontrol.microscope.lightsheet.adaptive.modules.StandardAdaptationModule.java", "BodyUseAPI": ["getAdaptiveEngine().addPoint(getName(),java.lang.String,boolean,lDOFValueList.get(i),double)", "gnu.trove.list.array.TDoubleArrayList.get(int)"], "Fixed commit": "8be98e0e50442a4a8cd730b085c77f741401c5f8", "Url": "https://api.github.com/repos/ClearControl/clearcontrol-lightsheet", "Date": "2017-11-28T15:26:21Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (user == null) { return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5886/buggy-version/src.main.java.pl.morecraft.dev.settler.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "1388142c9451d41df2cf06b2c6ca1644da8d7246", "Url": "https://api.github.com/repos/EmhyrVarEmreis/Settler", "Date": "2016-12-21T23:37:48Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.morecraft.dev.settler.domain.User.getAvatar()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileObject == null) { return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.OK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5886/buggy-version/src.main.java.pl.morecraft.dev.settler.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "1388142c9451d41df2cf06b2c6ca1644da8d7246", "Url": "https://api.github.com/repos/EmhyrVarEmreis/Settler", "Date": "2016-12-21T23:37:48Z"},
{"Line": "=>774", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entryPosition == null) { entryPosition = new com.alibaba.otter.canal.protocol.position.EntryPosition(logfilename, logfileoffset, logposTimestamp, serverId); logger.debug(\"set {} to be pending start position before finding another proper one...\", entryPosition); logPosition.setPostion(entryPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9035/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.MysqlEventParser.java", "BodyUseAPI": [], "Fixed commit": "c60b04424b0a357c69ced2e68a847e16ca87a002", "Url": "https://api.github.com/repos/yakirChen/canal", "Date": "2017-12-10T14:24:24Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (review == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/853/buggy-version/proj.app.src.main.java.com.mun.minh_minhh.interlac.Events.EventSpecific.java", "BodyUseAPI": [], "Fixed commit": "35143752511e9113f75fdd69dd8d25a752807534", "Url": "https://api.github.com/repos/eilx2/interLAC", "Date": "2017-05-30T11:48:40Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { return \"logged-out-test\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3645/buggy-version/app.src.main.java.com.pixplicity.bikefinder.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1694b836b720c7a8f216aaba5796fa1e13002fa9", "Url": "https://api.github.com/repos/Pixplicity/dude-wheres-my-bike", "Date": "2017-01-21T16:00:30Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getValueIsAdjusting()) doTableSelection(e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1638/buggy-version/src.main.java.org.reactome.cytoscape.pgm.IPAPathwaySummaryPane.java", "BodyUseAPI": ["org.reactome.cytoscape.pgm.IPAPathwaySummaryPane.3.doTableSelection(javax.swing.event.ListSelectionEvent)"], "Fixed commit": "7f5e39617729df517430bae2a792ea4fd81ddb36", "Url": "https://api.github.com/repos/reactome-fi/CytoscapePlugIn", "Date": "2015-02-14T19:31:47Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(speed)) < 0.1) { setBrake(true); liftMotor.set(0.0); }else if (((speed < 0) && (isAtBottom())) || ((speed > 0) && (isAtTop()))) { setBrake(true); liftMotor.set(0.0); }else { setBrake(false); liftMotor.set(speed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4999/buggy-version/src.edu.stuy.subsystems.Lift.java", "BodyUseAPI": ["edu.wpi.first.wpilibj.CANTalon.set(double)"], "Fixed commit": "7155e9d90494b1ae8af60cac02dfaa8eb775435a", "Url": "https://api.github.com/repos/Team694/PEGasus1", "Date": "2015-02-13T01:11:14Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.sitedoph.uniph.infraestrutura.dao.GenericDAO<br.com.sitedoph.uniph.dominio.entidade.Turma, java.lang.Long>.buscarTodos()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((exemplo != null) && (!(exemplo.isEmpty()))) { return exemplo; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/118/buggy-version/src.main.java.br.com.sitedoph.uniph.infraestrutura.dao.impl.TurmaDAO.java", "BodyUseAPI": [], "Fixed commit": "d969d7f12edfb26c3570b382d8f21b973838c2c5", "Url": "https://api.github.com/repos/DanSilva41/uniph", "Date": "2017-09-26T04:47:40Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fields[i].equals(\"null\"))) fields[i] = (\"'\" + (fields[i])) + \"'\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7572/buggy-version/app.src.main.java.org.wheatgenetics.inventory.InventoryRecord.java", "BodyUseAPI": [], "Fixed commit": "15866510353dd350fda7671eea5a8115e7dc6cdc", "Url": "https://api.github.com/repos/PhenoApps/Inventory", "Date": "2017-04-12T21:24:43Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (edu.cascadia.bookmarked.BookWantedActivity.EDIT_REQUEST_CODE)) { if (resultCode == (RESULT_OK)) { java.lang.System.out.println(\"***Received Edit Request Code with OK result\"); needsUpdating = true; finish(); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7487/buggy-version/app.src.main.java.edu.cascadia.bookmarked.BookWantedActivity.java", "BodyUseAPI": [], "Fixed commit": "42dd5b5c5b66993bb6bf28db0f628e65eec5bde9", "Url": "https://api.github.com/repos/MobileApps-Cascadia/BOOKMARKed", "Date": "2015-12-07T23:12:03Z"},
{"Line": "=>691", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.zxing.integration.android.IntentIntegrator.parseActivityResult(int,int,android.content.Intent)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (scanningResult != null) { java.lang.String scanContent = scanningResult.getContents(); isbnEditText.setText(scanContent); lookUpIsbnDB(scanContent); }else { android.widget.Toast.makeText(getApplicationContext(), \"No scan data received!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7487/buggy-version/app.src.main.java.edu.cascadia.bookmarked.BookWantedActivity.java", "BodyUseAPI": ["com.google.zxing.integration.android.IntentResult.getContents()"], "Fixed commit": "42dd5b5c5b66993bb6bf28db0f628e65eec5bde9", "Url": "https://api.github.com/repos/MobileApps-Cascadia/BOOKMARKed", "Date": "2015-12-07T23:12:03Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileFolder.mkdirs()) { return fileFolder; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9103/buggy-version/jui.src.main.java.net.michaelsoftware.android.jui.network.HttpImageAsync.java", "BodyUseAPI": [], "Fixed commit": "056492893771555e3b8df89d6b89e0f0695c1241", "Url": "https://api.github.com/repos/michael-software/vision-android", "Date": "2016-11-03T19:39:24Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileFile.exists()) { return fileFile; }else if ((fileFile.createNewFile()) && (fileFile.exists())) { return fileFile; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9103/buggy-version/jui.src.main.java.net.michaelsoftware.android.jui.network.HttpImageAsync.java", "BodyUseAPI": ["java.io.File.createNewFile()", "java.io.File.exists()"], "Fixed commit": "056492893771555e3b8df89d6b89e0f0695c1241", "Url": "https://api.github.com/repos/michael-software/vision-android", "Date": "2016-11-03T19:39:24Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.michaelsoftware.android.jui.network.HttpImageAsync.getFolder(java.net.URL)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (folder != null) { file = this.getFile(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9103/buggy-version/jui.src.main.java.net.michaelsoftware.android.jui.network.HttpImageAsync.java", "BodyUseAPI": [], "Fixed commit": "056492893771555e3b8df89d6b89e0f0695c1241", "Url": "https://api.github.com/repos/michael-software/vision-android", "Date": "2016-11-03T19:39:24Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Gdx.input.getInputProcessor()) == (stage)) { Gdx.input.setInputProcessor(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2017/buggy-version/src.de.onyxbits.bureauengine.screen.BureauScreen.java", "BodyUseAPI": [], "Fixed commit": "20da47f60b8ec2b983dc191dcb0fdf661834ecb7", "Url": "https://api.github.com/repos/onyxbits/pocketbandit", "Date": "2012-12-30T23:55:22Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((realcalc.calc(textViewFormula.getText().toString())) == \"ERROR!\") textViewResult.setText(\"ERROR!\"); else textViewResult.setText((\"\" + (com.example.turingmac.programbox.NativeCalc.calc(((textViewFormula.getText().toString()) + \"=\")))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6842/buggy-version/ProgramBox.app.src.main.java.com.example.turingmac.programbox.CalculatorActivity.java", "BodyUseAPI": ["com.example.turingmac.programbox.NativeCalc.calc(((textViewFormula.getText().toString()) + \"=\"))", "android.widget.TextView.getText()", "android.widget.TextView.setText((\"\" + (com.example.turingmac.programbox.NativeCalc.calc(((textViewFormula.getText().toString()) + \"=\")))))", "textViewFormula.getText().toString()"], "Fixed commit": "94943e940efc64907080d0f5f52728c178d2c0c0", "Url": "https://api.github.com/repos/TuringMacLee/HIT-MobileApplication", "Date": "2016-06-30T15:46:00Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index >= (newArray.length)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1929/buggy-version/src.com.minecarts.familyjewels.NetServerHandlerHook.java", "BodyUseAPI": [], "Fixed commit": "f4e13a543b63a46e4e82a8213187ebb57d375161", "Url": "https://api.github.com/repos/Minecarts/FamilyJewels", "Date": "2011-07-19T11:31:36Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nearbyGoDateArrayList.get(i).price) != null) { if (nearbyGoDateArrayList.get(i).price.equals(\"0.00\")) { noFlight(View.VISIBLE); listFlight(View.GONE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3878/buggy-version/app.src.main.java.com.reka.tour.flight.activity.DepartureActivity.java", "BodyUseAPI": ["nearbyGoDateArrayList.get(i).price.equals(java.lang.String)", "java.util.ArrayList<com.reka.tour.flight.model.NearbyGoDate>.get(int)"], "Fixed commit": "236a5a8be8edb9559385c178c91ad5084b799359", "Url": "https://api.github.com/repos/fachrifaul/reka", "Date": "2016-03-03T11:01:59Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.ArrayList<com.wowza.wms.pushpublish.model.PushPublishBase>>.remove(entry.id)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentPublishers == null) { com.kaltura.media.server.wowza.PushPublishManager.logger.info(((\"No publishers were found for entry ID \" + (entry.id)) + \".\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/138/buggy-version/KalturaWowzaServer.src.com.kaltura.media.server.wowza.PushPublishManager.java", "BodyUseAPI": [], "Fixed commit": "6003eca785952b8a22ef9aeccdbed24fab2009f2", "Url": "https://api.github.com/repos/kaltura/media-server", "Date": "2014-11-12T17:23:08Z"},
{"Line": "=>739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kaltura.media.server.managers.KalturaLiveManager.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((liveEntry.recordedEntryId) != null) && ((liveEntry.recordedEntryId.length()) > 0)) { impersonateClient.getMediaService().cancelReplace(liveEntry.recordedEntryId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/138/buggy-version/KalturaMediaServer.src.com.kaltura.media.server.managers.KalturaLiveManager.java", "BodyUseAPI": ["impersonateClient.getMediaService().cancelReplace(liveEntry.recordedEntryId)"], "Fixed commit": "6003eca785952b8a22ef9aeccdbed24fab2009f2", "Url": "https://api.github.com/repos/kaltura/media-server", "Date": "2014-11-12T17:23:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((branch) != null) { branch.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3173/buggy-version/src.main.java.me.Fupery.PlayerJobs.JobUI.MenuHandler.java", "BodyUseAPI": [], "Fixed commit": "4c3f293838bbd85360ee1e2578643069f1ca64f0", "Url": "https://api.github.com/repos/Fupery/PlayerJobs", "Date": "2015-07-28T08:41:05Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasDueTime) return com.todoroo.astrid.data.Task.createDueDate(Task.URGENCY_SPECIFIC_DAY_TIME, time); else return com.todoroo.astrid.data.Task.createDueDate(Task.URGENCY_SPECIFIC_DAY, time);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1135/buggy-version/astrid.plugin-src.com.todoroo.astrid.repeats.RepeatTaskCompleteListener.java", "BodyUseAPI": [], "Fixed commit": "897a5dab81ef2c67b2dba425a96e8e562361b2ac", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2013-04-17T21:44:05Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (slog.isDebugEnabled()) { slog.debug(\"log: {}, key: {}\", log.toString(), key.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5216/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.logapi.StatsSummaryLogger.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,log.toString(),key.toString())"], "Fixed commit": "320627381cad29236877307916f49b694bfe5c99", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2013-12-18T11:11:43Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (srcFile.isFile()) { distFile.getParentFile().mkdirs(); if (!(distFile.getParentFile().exists())) { return false; } }else { distFile.mkdirs(); if (!(distFile.exists())) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/242/buggy-version/AndroidLibrary@wada811.src.at.wada811.utils.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "620b22fd59b40bb4fa37ec2faa124ebc74d1ca28", "Url": "https://api.github.com/repos/wada811/AndroidLibrary-wada811", "Date": "2014-06-24T23:39:19Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rs.getString(1)) != null) { maxEvent = (java.lang.Integer.parseInt(rs.getString(1))) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7014/buggy-version/src.main.java.database.DBUtils.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.sql.ResultSet.getString(int)"], "Fixed commit": "e5c6fcb9bf7242606030b670b4add25eff61b9c9", "Url": "https://api.github.com/repos/VARK1234/VARK_GREEN_GAURDIAN", "Date": "2017-08-05T02:59:59Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getWorld()) != null) this.getWorld().removeEntity(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3622/buggy-version/src.asteroids.model.Entity.java", "BodyUseAPI": [], "Fixed commit": "efffdfd98a496dea41d44a17096c294c4c981a4b", "Url": "https://api.github.com/repos/R1D1CUL0US/Asteroids", "Date": "2017-03-31T20:27:37Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(dontReloadOnStart)) && (webView.getUrl().startsWith(com.nordnetab.chcp.main.HotCodePushPlugin.LOCAL_ASSETS_FOLDER))) { redirectToLocalStorageIndexPage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8025/buggy-version/src.android.src.com.nordnetab.chcp.main.HotCodePushPlugin.java", "BodyUseAPI": [], "Fixed commit": "a35e9d0b547b62b1a6d71cf86f343e8bdef489e7", "Url": "https://api.github.com/repos/nordnet/cordova-hot-code-push", "Date": "2016-01-20T20:15:06Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (player != null) { playSpellEffectsTrail(player.getLocation(), target.getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4963/buggy-version/src.com.nisovin.magicspells.spells.targeted.ZapSpell.java", "BodyUseAPI": ["org.bukkit.entity.Player.getLocation()", "com.nisovin.magicspells.spells.targeted.ZapSpell.playSpellEffectsTrail(player.getLocation(),target.getLocation())"], "Fixed commit": "b308c477095d2d142f75b382f919c5ef025ec3db", "Url": "https://api.github.com/repos/pascoej/MagicSpells", "Date": "2015-02-07T02:48:50Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Location.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (canZap(block)) { zap(block, null); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4963/buggy-version/src.com.nisovin.magicspells.spells.targeted.ZapSpell.java", "BodyUseAPI": ["com.nisovin.magicspells.spells.targeted.ZapSpell.zap(org.bukkit.block.Block,<nulltype>)"], "Fixed commit": "b308c477095d2d142f75b382f919c5ef025ec3db", "Url": "https://api.github.com/repos/pascoej/MagicSpells", "Date": "2015-02-07T02:48:50Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (player != null) { playSpellEffects(EffectPosition.CASTER, player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4963/buggy-version/src.com.nisovin.magicspells.spells.targeted.ZapSpell.java", "BodyUseAPI": ["com.nisovin.magicspells.spells.targeted.ZapSpell.playSpellEffects(EffectPosition.CASTER,org.bukkit.entity.Player)"], "Fixed commit": "b308c477095d2d142f75b382f919c5ef025ec3db", "Url": "https://api.github.com/repos/pascoej/MagicSpells", "Date": "2015-02-07T02:48:50Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(parentDir.exists())) { parentDir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8384/buggy-version/src.com.seafile.seadroid.data.DataManager.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "8ed0b106611fb096736b9d0633852145aa96a17c", "Url": "https://api.github.com/repos/haiwen/seadroid", "Date": "2013-03-30T13:54:33Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.eclipse.jface.viewers.StructuredSelection) (arg0.getSelection())).getFirstElement()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6016/buggy-version/journal.src.net.viperfish.journal.swtGui.conf.JournalSetup.java", "BodyUseAPI": [], "Fixed commit": "df0a391cd60a8e50559be0066b5406efa85f5b24", "Url": "https://api.github.com/repos/shilongdai/vsDiaryWriter", "Date": "2016-03-07T22:23:10Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.transformation) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/767/buggy-version/src.main.java.svg.Placeable.java", "BodyUseAPI": [], "Fixed commit": "19514550d915562f7a43f243b6ae4174a4301bde", "Url": "https://api.github.com/repos/fablab-neckar-alb/camm-gl3", "Date": "2015-12-21T01:52:27Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paymentReceived) { lblDisplay.setText((\"Payment Confirmed: \" + (betalningsmedel.getText()))); se.humanus.DigitCashier.CashRegister.setTotal(sum); se.humanus.DigitCashier.CashRegister.setBetalningsmedel(betalningsmedel.getText()); se.humanus.DigitCashier.CashRegister.createVoucherNr(); se.humanus.DigitCashier.Receipt currentReceipt = new se.humanus.DigitCashier.Receipt(); currentReceipt.showReceipt(); se.humanus.DigitCashier.CashRegister.clearSale(); lblSaleDisplay.setText(\"\"); changeInput.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8507/buggy-version/src.se.humanus.DigitCashier.CashRegisterWindow.java", "BodyUseAPI": [], "Fixed commit": "cd14e79ea64bb36eaf62dbd5f35dbb6a83968e4f", "Url": "https://api.github.com/repos/Mirrorspawn/DigitCashier", "Date": "2017-01-03T17:16:11Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!paymentReceived) { switch (betalningsmedel.getText()) { case \"Cash\" : lblDisplay.setText(\"No amount registered for Cash payment.\"); break; case \"Giftcard\" : lblDisplay.setText(\"No amount registered for coupon.\"); break; case \"Creditcard\" : changeInput.setText(java.lang.String.valueOf(sum)); se.humanus.DigitCashier.CashRegister.setChange(sum); paymentReceived = true; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8507/buggy-version/src.se.humanus.DigitCashier.CashRegisterWindow.java", "BodyUseAPI": [], "Fixed commit": "cd14e79ea64bb36eaf62dbd5f35dbb6a83968e4f", "Url": "https://api.github.com/repos/Mirrorspawn/DigitCashier", "Date": "2017-01-03T17:16:11Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageUrls.size()) <= 1) springIndicator.setVisibility(com.prashant.showcaseviewpager.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8922/buggy-version/imagesliderlib.src.main.java.com.prashant.showcaseviewpager.BaseImageSlider.java", "BodyUseAPI": [], "Fixed commit": "38e07109dd80a7af0acc6553f1858b4b099462f8", "Url": "https://api.github.com/repos/prashantsolanki3/ImageSliderLib", "Date": "2015-12-08T17:14:25Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.jaudiotagger.tag.id3.ID3v23Frame.EncodingFlags) (encodingFlags)).isEncryption()) { frameBody = readEncryptedBody(id, frameBodyBuffer, decompressedFrameSize); }else { frameBody = readBody(id, frameBodyBuffer, decompressedFrameSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5370/buggy-version/src.org.jaudiotagger.tag.id3.ID3v23Frame.java", "BodyUseAPI": [], "Fixed commit": "f21f61baf3cf55658522ba295e365b44ae1e22f7", "Url": "https://api.github.com/repos/maxbruecken/jaudiotagger-android", "Date": "2015-02-09T15:08:50Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.jaudiotagger.tag.id3.ID3v24Frame.EncodingFlags) (encodingFlags)).isEncryption()) { frameBody = readEncryptedBody(identifier, frameBodyBuffer, dataLengthSize); }else { frameBody = readBody(identifier, frameBodyBuffer, dataLengthSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5370/buggy-version/src.org.jaudiotagger.tag.id3.ID3v24Frame.java", "BodyUseAPI": [], "Fixed commit": "f21f61baf3cf55658522ba295e365b44ae1e22f7", "Url": "https://api.github.com/repos/maxbruecken/jaudiotagger-android", "Date": "2015-02-09T15:08:50Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((waitCount) != null) { throw new java.lang.IllegalArgumentException(\"It's forbidden to call ListFindr.where() after whereElemCount() has been called.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3689/buggy-version/core.src.main.java.com.pojosontheweb.selenium.Findr.java", "BodyUseAPI": [], "Fixed commit": "4f5a2574838a204749ab2a61fd106ae0fd26461f", "Url": "https://api.github.com/repos/pojosontheweb/selenium-utils", "Date": "2014-08-14T10:58:40Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((histories != null) && ((histories.size()) > 0)) for (net.somethingdreadful.MAL.api.MALModels.History history : histories) { historyArrayList.add(history.createBaseModel(username)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1179/buggy-version/Atarashii.src.net.somethingdreadful.MAL.api.MALModels.History.java", "BodyUseAPI": [], "Fixed commit": "209b3851dd74eacd218593f6be486f06c3f5f3c2", "Url": "https://api.github.com/repos/AnimeNeko/Atarashii", "Date": "2016-04-22T15:11:48Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((formattedDate.length()) > 12) { formattedDate = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6325/buggy-version/src.whatsupnext.parser.extractor.ParseDate.java", "BodyUseAPI": [], "Fixed commit": "1e373ac622e2fae303336c76bd458c6eb2fa0fbe", "Url": "https://api.github.com/repos/cs2103aug2014-f09-1j/main", "Date": "2014-11-07T07:03:04Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.Collection<org.bukkit.potion.PotionEffect>>.get(entityplayer.name)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (newEffects != null) { for (org.bukkit.potion.PotionEffect effect : newEffects) { player.addPotionEffect(effect); entityplayer.playerConnection.sendPacket(new net.minecraft.server.v1_5_R2.Packet41MobEffect(entityplayer.id, new net.minecraft.server.v1_5_R2.MobEffect(effect.getType().getId(), effect.getDuration(), effect.getAmplifier()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/867/buggy-version/src.nu.nerd.modmode.ModMode.java", "BodyUseAPI": [], "Fixed commit": "bc88bd965e628db436e72fd81635d2befe722732", "Url": "https://api.github.com/repos/NerdNu/ModMode", "Date": "2013-04-26T13:47:56Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (keyword.contains(\"brennende \")) { keyword = keyword.replace(\"brennende \", \"brennender \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4358/buggy-version/alertmonitor.src.ffw.alertmonitor.actions.AlertSpeaker.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "5a2328e90030249b9f79b9b6e7327b07ea3a3828", "Url": "https://api.github.com/repos/DirtyDan88/ffw-alertsystem", "Date": "2015-03-10T16:32:42Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((application.currentUser()) != null) application.getIHMtoDATA().logout();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2151/buggy-version/controllers.WelcomeController.java", "BodyUseAPI": ["application.getIHMtoDATA().logout()", "IHM.controllers.MainController.getIHMtoDATA()"], "Fixed commit": "0231aa257008d2f83615456899573a24a66701c7", "Url": "https://api.github.com/repos/adoulrac/IHM", "Date": "2014-11-27T16:31:12Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compare.getCharacter(i)) == (this.getCharacter(i))) { return (this.nextIndex) - (compare.nextIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2531/buggy-version/src.assignment3.Identifier.java", "BodyUseAPI": [], "Fixed commit": "3c2fef0c397048ea9b21ccbeccaafdca6440894f", "Url": "https://api.github.com/repos/TjarcoKerssens/AP3", "Date": "2014-10-15T11:21:31Z"},
{"Line": "=>1159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (error != 0) report(error);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/57/buggy-version/dfu.src.main.java.no.nordicsemi.android.dfu.DfuBaseService.java", "BodyUseAPI": ["no.nordicsemi.android.dfu.DfuBaseService.report(int)"], "Fixed commit": "792c751f65ab16971ee30d255f450d000f253df2", "Url": "https://api.github.com/repos/NordicSemiconductor/Android-DFU-Library", "Date": "2016-09-21T14:25:48Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((database.getPurchasingTransactions().size()) > 0) { addOrdersFromDB(); orderListTable.setRowSelectionInterval(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5256/buggy-version/FCPbicycle.src.bicyclestore.cardlayouts.ordercardlayouts.ViewOldOrdersCard.java", "BodyUseAPI": [], "Fixed commit": "d125a986241b03270e545638bc90733d391e5080", "Url": "https://api.github.com/repos/carrole9/FCP-Bicycle-Packages", "Date": "2015-08-28T15:38:33Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((database.getPurchasingTransactions().size()) > 0) { addOrdersFromDB(); orderListTable.setRowSelectionInterval(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5256/buggy-version/FCPbicycle.src.bicyclestore.cardlayouts.ordercardlayouts.ViewOrdersCard.java", "BodyUseAPI": [], "Fixed commit": "d125a986241b03270e545638bc90733d391e5080", "Url": "https://api.github.com/repos/carrole9/FCP-Bicycle-Packages", "Date": "2015-08-28T15:38:33Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currRateBtn) != ((android.widget.ToggleButton) (view))) { currRateBtn.setChecked(false); currRateBtn = ((android.widget.ToggleButton) (view)); }else { currRateBtn.setChecked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3518/buggy-version/src.com.mchan.fastforwardclock.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3f384794df241a2c9020747be16a94624c0f37e0", "Url": "https://api.github.com/repos/MChan127/fast-forward-clock", "Date": "2014-07-03T22:04:16Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.trim(parser.getValueByLabel(\"Reference\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(refList)) { refList = \"Byrnes pers. obs.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8111/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.data.StudyImporterForByrnes.java", "BodyUseAPI": [], "Fixed commit": "9f12f704801e3b246b8089e37bedb5b90542e553", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2014-09-12T19:24:23Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mage.client.MageFrame.getInstance().getFocusOwner()) == null) { requestFocusAllowed = false; }else if (((connectedChatPanel) != null) && ((connectedChatPanel.getTxtMessageInputComponent()) != null)) { if (connectedChatPanel.getTxtMessageInputComponent().hasFocus()) { requestFocusAllowed = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3406/buggy-version/Mage.Client.src.main.java.mage.client.game.FeedbackPanel.java", "BodyUseAPI": [], "Fixed commit": "9be613beb9e82892d6b438f1bd3949e069f7ea3b", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-07-06T08:51:06Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (resultDao != null) { sted2DaoList.add(resultDao); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3807/buggy-version/src.no.systema.jservices.tror.controller.TrorResponseOutputterController_STED2.java", "BodyUseAPI": ["java.util.List<no.systema.jservices.common.dao.Sted2Dao>.add(no.systema.jservices.common.dao.Sted2Dao)"], "Fixed commit": "9517e77a861a3e5a7c976a94b58f6c2ce7fa6d9a", "Url": "https://api.github.com/repos/SystemaAS/syjservicestror", "Date": "2017-09-01T11:28:49Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(networkPartitionIdFilter.equals(\"\"))) { if (memberActivatedEvent.getNetworkPartitionId().equals(networkPartitionIdFilter)) { addMember(serviceName, clusterId, memberId); } }else { addMember(serviceName, clusterId, memberId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6635/buggy-version/components.org.apache.stratos.load.balancer.common.src.main.java.org.apache.stratos.load.balancer.common.event.receivers.LoadBalancerCommonTopologyEventReceiver.java", "BodyUseAPI": ["memberActivatedEvent.getNetworkPartitionId().equals(java.lang.String)"], "Fixed commit": "91335592e30cb4659ce471bb544ffb4bb9fa632c", "Url": "https://api.github.com/repos/Pranavan135/stratos", "Date": "2015-06-03T08:52:02Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(f.mkdirs())) { java.lang.System.err.println(\"I can't create the directory\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/225/buggy-version/src.ru.fizteh.fivt.students.gudkov394.shell.Mkdir.java", "BodyUseAPI": [], "Fixed commit": "75f90d70254349beaabf24cd13e9950e4049de5d", "Url": "https://api.github.com/repos/annafedyushkina/fizteh-java-2014", "Date": "2014-09-20T15:38:57Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAnonymous) { response = getString(R.string.anonymous_users_false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3515/buggy-version/UlisesMapAndroidClient.src.org.escoladeltreball.ulisesmap.activities.ShowCommentsActivity.java", "BodyUseAPI": [], "Fixed commit": "0b4276bed6796c548a5120a84c947d6dfbd98bb2", "Url": "https://api.github.com/repos/enavar/UlisesMap", "Date": "2014-05-23T14:40:06Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args[0].equalsIgnoreCase(\"link\")) && ((args.length) >= 3)) { plugin.VortexManager.getVortex(args[1]).destination = args[2]; return true; }else if ((args[0].equalsIgnoreCase(\"height\")) && ((args.length) >= 3)) { plugin.VortexManager.getVortex(args[1]).height = args[2]; return true; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4801/buggy-version/src.me.sorroko.vortex.commands.VortexCommand.java", "BodyUseAPI": ["plugin.VortexManager.getVortex(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "plugin.VortexManager.getVortex(java.lang.String)"], "Fixed commit": "e446355e765f6e672443804cffba2553fa041ff6", "Url": "https://api.github.com/repos/PlugMania/AirPortal", "Date": "2012-07-20T13:42:46Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFirstGlobalLayoutPerformed) { mLastScrollPosition = scrollPosition; mLastDampedScroll = dampedScroll; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4850/buggy-version/library.src.com.manuelpeinado.fadingactionbar.FadingActionBarHelper.java", "BodyUseAPI": [], "Fixed commit": "c776826c8e25d5afbed92c7d95596511937c5b59", "Url": "https://api.github.com/repos/ManuelPeinado/FadingActionBar", "Date": "2013-07-13T09:42:03Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.prior) != (other.prior)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5515/buggy-version/src.main.java.com.datascience.gal.Category.java", "BodyUseAPI": [], "Fixed commit": "797d6fb6a9349d2a90f00e6e48863db8d8262dc2", "Url": "https://api.github.com/repos/ipeirotis/Troia-Server", "Date": "2012-11-12T12:42:02Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1192/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "4d799a161205bb113fe4cac615dc96af1bb507d1", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tagsTextfield) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2339/buggy-version/editor.core.src.main.java.es.eucm.ead.editor.view.widgets.engine.wrappers.EditorGameLoop.java", "BodyUseAPI": [], "Fixed commit": "6cdfcb64bca1da4b63e4a481840ca2eab6b8a5bd", "Url": "https://api.github.com/repos/e-ucm/ead", "Date": "2014-03-16T23:17:04Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContentResolver().query(android.net.Uri,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (movie.moveToFirst()) { return movie.getLong(movie.getColumnIndex(MoviesContract.DetailsColumns.MOVIE_ID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/515/buggy-version/app.src.main.java.edu.boisestate.azamattulepbergenovu.popularmovies.DetailActivity.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(MoviesContract.DetailsColumns.MOVIE_ID)", "android.database.Cursor.getLong(movie.getColumnIndex(MoviesContract.DetailsColumns.MOVIE_ID))"], "Fixed commit": "fb088c6c6acb16652f0c66ff408ed3909c57b75f", "Url": "https://api.github.com/repos/atulep/Popular-Movies", "Date": "2016-08-17T02:22:05Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Multiplexer.computeFitness(Operator)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (f == 64) java.lang.System.out.println(o.mathematicaNotation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1319/buggy-version/src.Multiplexer.java", "BodyUseAPI": [], "Fixed commit": "43c4e0e70e9f602900a1c7bfd16c0498b9209ef5", "Url": "https://api.github.com/repos/jonathanellis/GP-Multiplexer", "Date": "2011-03-05T20:23:41Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((data != null) && ((data.getGroup()) != null)) { this.id = java.lang.Integer.parseInt(data.getGroup().getGroup().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2520/buggy-version/Client.src.ch.zhaw.budgettool.datatransfer.Group.java", "BodyUseAPI": ["ch.zhaw.budgettool.datatransfer.JSONClasses.GroupData.getGroup()", "data.getGroup().getGroup()", "java.lang.Integer.parseInt(data.getGroup().getGroup().getId())", "data.getGroup().getGroup().getId()"], "Fixed commit": "562be758cdcebedfb5b1da94e981e4e2fe249851", "Url": "https://api.github.com/repos/aschi/budgettool", "Date": "2013-02-20T01:49:41Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((data != null) && ((data.getGroup()) != null)) { this.id = java.lang.Integer.parseInt(data.getGroup().getGroup().getId()); this.budget = java.lang.Double.parseDouble(data.getGroup().getGroup().getBudget()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2520/buggy-version/Client.src.ch.zhaw.budgettool.datatransfer.Group.java", "BodyUseAPI": ["data.getGroup().getGroup()", "ch.zhaw.budgettool.datatransfer.JSONClasses.GroupData.getGroup()", "data.getGroup().getGroup().getId()", "data.getGroup().getGroup()", "ch.zhaw.budgettool.datatransfer.JSONClasses.GroupData.getGroup()", "data.getGroup().getGroup().getBudget()", "java.lang.Integer.parseInt(data.getGroup().getGroup().getId())", "java.lang.Double.parseDouble(data.getGroup().getGroup().getBudget())"], "Fixed commit": "562be758cdcebedfb5b1da94e981e4e2fe249851", "Url": "https://api.github.com/repos/aschi/budgettool", "Date": "2013-02-20T01:49:41Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (tclId != null) { if ((versionsPerClassMap.get(tclId)) != null) { tvlist = versionsPerClassMap.get(tclId).get(targetObjId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3085/buggy-version/src.main.java.org.rapidprom.operators.padas.GenerateSLEXMMOperator.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.Integer>>.get(java.lang.String)", "java.util.HashMap<java.lang.Integer, java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.Integer>>>.get(java.lang.Integer)", "java.util.HashMap<java.lang.Integer, java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.Integer>>>.get(java.lang.Integer)"], "Fixed commit": "d4d6009cfbfe39fee4f31d6d5126e60b5cf1beb5", "Url": "https://api.github.com/repos/rapidprom/rapidprom-source", "Date": "2016-11-28T20:17:40Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.client.MinecraftForgeClient.getItemRenderer(this.mc.thePlayer.getCurrentEquippedItem(),ItemRenderType.EQUIPPED_FIRST_PERSON)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (renderer == null) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7729/buggy-version/src.main.java.io.github.phantamanta44.war3.gui.GuiWarOverlay.java", "BodyUseAPI": [], "Fixed commit": "99fb9246d0b42fa6261e4d75b4568b573dbf7f02", "Url": "https://api.github.com/repos/phantamanta44/war3", "Date": "2015-07-09T22:28:59Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mcmmofix) { event.getBlock().setType(Material.AIR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/440/buggy-version/src.tux2.MonsterBox.MonsterBoxBlockListener.java", "BodyUseAPI": [], "Fixed commit": "e55cdd1a3d34303b56f789e118f812ae77723fcc", "Url": "https://api.github.com/repos/Tux2/MonsterBox", "Date": "2012-06-23T10:08:40Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (journals != null) { for (com.journee.model.Journal journal : journals) { com.journee.model.User myself = activity.dbLink.selectUser(activity.mEmail); com.journee.model.Journal journalInDB = activity.dbLink.selectJournalsByIdInServer(journal.getIdInServer()); if (journalInDB == null) { activity.dbLink.insertJournal(journal); activity.dbLink.insertUserToJournal(myself, journal); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6622/buggy-version/Journee.app.src.main.java.com.journee.clients.JournalClient.java", "BodyUseAPI": [], "Fixed commit": "4bb7eb723e06df12eb3248d4e6158042ce3eb6f3", "Url": "https://api.github.com/repos/alon-itzhaki/tau_workshop_repo", "Date": "2016-05-20T07:13:53Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.demo.controller.IndexController.filterAddByType(java.util.List<com.demo.domain.Content>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (content != null) { bytes = content.getImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5958/buggy-version/demo.src.main.java.com.demo.controller.IndexController.java", "BodyUseAPI": ["com.demo.domain.Content.getImage()"], "Fixed commit": "85435684c08c5db8c17b9fb419f08a08abba31e4", "Url": "https://api.github.com/repos/mnhmilu/spring_boot_rnd", "Date": "2017-07-19T14:28:32Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pt.getChild(2).getChildCount()) != 0) { output.addAll(this.walkTree(pt.getChild(2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1170/buggy-version/src.CodeGenerator.BasicCodeGenerator.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)", "org.antlr.v4.runtime.tree.ParseTree.getChild(int)", "CodeGenerator.BasicCodeGenerator.walkTree(pt.getChild(2))"], "Fixed commit": "c446a85807a7fed83fb5648a1611ce49a28f9776", "Url": "https://api.github.com/repos/mpersing/MiniJava-Compiler", "Date": "2016-05-08T20:52:23Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pt.getChild(2).getChildCount()) != 0) { output.addAll(this.walkTree(pt.getChild(2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1170/buggy-version/src.CodeGenerator.BasicCodeGenerator.java", "BodyUseAPI": ["CodeGenerator.BasicCodeGenerator.walkTree(pt.getChild(2))", "java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)", "org.antlr.v4.runtime.tree.ParseTree.getChild(int)"], "Fixed commit": "c446a85807a7fed83fb5648a1611ce49a28f9776", "Url": "https://api.github.com/repos/mpersing/MiniJava-Compiler", "Date": "2016-05-08T20:52:23Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startTime) == 0) { startTime = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6759/buggy-version/skywalking-application-toolkit.skywalking-toolkit-opentracing.src.main.java.com.a.eye.skywalking.toolkit.opentracing.SkyWalkingSpanBuilder.java", "BodyUseAPI": [], "Fixed commit": "6509e7b7580640bb716eeb7ccc5e0be67f9942e1", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2017-04-04T02:16:57Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isNumber(leftInvoker.getReturnClass())) && (isNumber(rightInvoker.getReturnClass()))) { return new se.l4.dust.core.internal.expression.invoke.NumericComparisonInvoker(node, leftInvoker, rightInvoker); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9153/buggy-version/dust-core.src.main.java.se.l4.dust.core.internal.expression.ExpressionResolver.java", "BodyUseAPI": [], "Fixed commit": "e6a9d51915d5b0fbc8819d054c8e5a87ee30878b", "Url": "https://api.github.com/repos/LevelFourAB/dust", "Date": "2012-11-26T21:08:26Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (clazz.equals(org.walkmod.javalang.ast.stmt.BlockStmt.class)) { result = astParser.Block(); }else { java.lang.reflect.Method method = null; try { method = astParser.getClass().getMethod(clazz.getSimpleName()); } catch (java.lang.Exception e) { throw new org.walkmod.javalang.ParseException(((\"The \" + (clazz.getSimpleName())) + \" cannot be parseable\")); } try { try { result = ((org.walkmod.javalang.ast.Node) (method.invoke(astParser))); } catch (java.lang.IllegalAccessException e) { throw new org.walkmod.javalang.ParseException(((\"The \" + (clazz.getSimpleName())) + \" cannot be parseable\")); } catch (java.lang.IllegalArgumentException e) { throw new org.walkmod.javalang.ParseException(((\"The \" + (clazz.getSimpleName())) + \" cannot be parseable\")); } catch (java.lang.reflect.InvocationTargetException e) { throw ((org.walkmod.javalang.ParseException) (e.getTargetException())); } } finally { sr.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/519/buggy-version/src.main.java.org.walkmod.javalang.ASTManager.java", "BodyUseAPI": ["java.lang.Class<?>.getSimpleName()", "astParser.getClass().getMethod(java.lang.String)", "java.lang.Class<?>.getSimpleName()", "java.lang.Class<?>.getSimpleName()", "java.lang.Class<?>.getSimpleName()"], "Fixed commit": "94c9ab4f3a411125d0769c0c18ed8f130922c973", "Url": "https://api.github.com/repos/cal101/javalang-compiler", "Date": "2014-04-07T18:47:58Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sslConfig.getTrustStorePath()) != null) { java.io.InputStream trustStoreIS = org.eclipse.jetty.util.resource.Resource.newResource(sslConfig.getTrustStorePath()).getInputStream(); final java.security.KeyStore trustStore = java.security.KeyStore.getInstance(sslConfig.getTrustStoreType()); trustStore.load(trustStoreIS, sslConfig.getTrustStorePassword().toCharArray()); final javax.net.ssl.TrustManagerFactory trustManagerFactory = javax.net.ssl.TrustManagerFactory.getInstance(javax.net.ssl.TrustManagerFactory.getDefaultAlgorithm()); trustManagerFactory.init(trustStore); trustManagers = trustManagerFactory.getTrustManagers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3881/buggy-version/src.main.java.com.discoverydns.dnsapiclient.internal.DefaultSSLContextFactory.java", "BodyUseAPI": ["org.eclipse.jetty.util.resource.Resource.newResource(sslConfig.getTrustStorePath())", "com.discoverydns.dnsapiclient.config.DefaultSSLContextFactoryConfig.getTrustStorePath()", "com.discoverydns.dnsapiclient.config.DefaultSSLContextFactoryConfig.getTrustStoreType()", "java.security.KeyStore.load(java.io.InputStream,sslConfig.getTrustStorePassword().toCharArray())", "com.discoverydns.dnsapiclient.config.DefaultSSLContextFactoryConfig.getTrustStorePassword()", "sslConfig.getTrustStorePassword().toCharArray()", "org.eclipse.jetty.util.resource.Resource.newResource(sslConfig.getTrustStorePath()).getInputStream()", "java.security.KeyStore.getInstance(sslConfig.getTrustStoreType())"], "Fixed commit": "2de096c63b68ce524af08f53d2c0b75a52ec2163", "Url": "https://api.github.com/repos/discoverydns/dnsapi-client", "Date": "2014-02-04T23:55:06Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.Row.getCell(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.vaadin.addon.spreadsheet.SpreadsheetUtil.needsLeadingQuote(cell)) { value = \"'\" + (spreadsheet.getCellValue(cell)); }else { value = spreadsheet.getCellValue(cell); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8590/buggy-version/vaadin-spreadsheet.src.main.java.com.vaadin.addon.spreadsheet.CellSelectionManager.java", "BodyUseAPI": ["com.vaadin.addon.spreadsheet.Spreadsheet.getCellValue(org.apache.poi.ss.usermodel.Cell)", "com.vaadin.addon.spreadsheet.Spreadsheet.getCellValue(org.apache.poi.ss.usermodel.Cell)"], "Fixed commit": "619ec32186d36e1a7e8be2df0eac7f86e7098d79", "Url": "https://api.github.com/repos/tagetik/tagetik-2017-spreadsheet", "Date": "2017-05-11T11:03:23Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInRepMode) { repetitionActivity.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/643/buggy-version/StuderaEffektivt.app.src.main.java.se.chalmers.datx02_15_36.studeraeffektivt.activity.EventActivity.java", "BodyUseAPI": [], "Fixed commit": "f7b875e1afbcc4c8e747cea8acc84dc319bf6fea", "Url": "https://api.github.com/repos/Soya93/DATX02_15_36", "Date": "2015-05-12T20:52:19Z"},
{"Line": "=>759", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasOverflow)) { values.clear(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6718/buggy-version/lucene.core.src.java.org.apache.lucene.util.packed.NPlaneMutable.java", "BodyUseAPI": [], "Fixed commit": "a35c05410258ebe820147babfb8c318ba7ece17e", "Url": "https://api.github.com/repos/tokee/lucene-solr", "Date": "2015-04-13T20:38:55Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 0) score += temp / count;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1599/buggy-version/src.main.java.cp.hw3.pagerank.PageRankReducer.java", "BodyUseAPI": [], "Fixed commit": "4e06f424134a7bb8f44924a87c5c3ad1594671fc", "Url": "https://api.github.com/repos/yuzzwx/CP2015-hw3-PageRank", "Date": "2015-06-26T17:11:26Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.isPowerDown) { batch.draw(Man.TextureM.powerDown, m.x, m.y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7267/buggy-version/states.Playstate.java", "BodyUseAPI": ["com.badlogic.gdx.graphics.g2d.SpriteBatch.draw(Man.TextureM.powerDown,m.x,m.y)"], "Fixed commit": "774b1e42228de2dcd1d223eb12e45833d6e5e251", "Url": "https://api.github.com/repos/skossi/src", "Date": "2015-07-20T23:15:33Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(m.isPowerDown)) batch.draw(createType(m.typeOne, m.typeTwo), m.x, m.y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7267/buggy-version/states.Playstate.java", "BodyUseAPI": ["com.badlogic.gdx.graphics.g2d.SpriteBatch.draw(com.badlogic.gdx.graphics.Texture,m.x,m.y)", "states.Playstate.createType(m.typeOne,m.typeTwo)"], "Fixed commit": "774b1e42228de2dcd1d223eb12e45833d6e5e251", "Url": "https://api.github.com/repos/skossi/src", "Date": "2015-07-20T23:15:33Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.revature.application.service.OfficeService.find(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (office != null) return office.getComplexes();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5333/buggy-version/Complex.src.main.java.com.revature.application.controller.OfficeController.java", "BodyUseAPI": ["com.revature.application.model.Office.getComplexes()"], "Fixed commit": "c905ed022233995a1e2c4b1395a556e1a7051922", "Url": "https://api.github.com/repos/revaturelabs/homes", "Date": "2017-09-20T13:57:26Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.revature.application.service.ComplexService.findByComplexId(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (com != null) return com.getUnits();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5333/buggy-version/Complex.src.main.java.com.revature.application.controller.ComplexController.java", "BodyUseAPI": ["com.revature.application.model.Complex.getUnits()"], "Fixed commit": "c905ed022233995a1e2c4b1395a556e1a7051922", "Url": "https://api.github.com/repos/revaturelabs/homes", "Date": "2017-09-20T13:57:26Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count < 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3791/buggy-version/TopCoder.src.StreetParking.java", "BodyUseAPI": [], "Fixed commit": "de496d1634afe2722ccc4deee267c9760d76b7aa", "Url": "https://api.github.com/repos/prideloki/practicecoding", "Date": "2014-01-27T14:22:18Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(user.getContact().getEmail().equals(\"\"))) { uniqueEmail = userService.isUniqueEmail(user.getContact().getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8418/buggy-version/Backend.src.main.java.cz.cvut.fit.genepi.presentationLayer.controller.UserController.java", "BodyUseAPI": ["cz.cvut.fit.genepi.businessLayer.service.UserService.isUniqueEmail(user.getContact().getEmail())", "user.getContact().getEmail()", "cz.cvut.fit.genepi.businessLayer.VO.form.UserVO.getContact()"], "Fixed commit": "85fe8f45500c1b1a520d1cfaffa4e74eca4aa6e2", "Url": "https://api.github.com/repos/Dworzaaa/database-epileptic-patients", "Date": "2014-04-17T12:32:30Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (tmp != null) { data.put(key, tmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8579/buggy-version/WEB-INF.classes.src.com.zmychou.paces.response.UpdateUserInfoHandler.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "d3e9a5641b447d1263f142a6331618351706e240", "Url": "https://api.github.com/repos/zmychou/Paces_server", "Date": "2017-05-13T02:04:37Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (columnLayout.isUriColumn()) { cz.cuni.mff.vkget.data.model.RdfLiteralProperty rdfProperty = new cz.cuni.mff.vkget.data.model.RdfLiteralProperty(); rdfProperty.setProperty(columnLayout.getProperty()); rdfProperty.setValue(subjectUri.getUri()); instance.getLiteralProperties().add(rdfProperty); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3182/buggy-version/visual-knowledge-graph-editing-tool.src.main.java.cz.cuni.mff.vkget.connect.CommonDataConnector.java", "BodyUseAPI": ["cz.cuni.mff.vkget.data.layout.ColumnLayout.getProperty()", "cz.cuni.mff.vkget.data.model.RdfLiteralProperty.setProperty(columnLayout.getProperty())"], "Fixed commit": "c74a3ff5a62db68f074db7b7120c9e29942b584e", "Url": "https://api.github.com/repos/ales-woska/vkget", "Date": "2016-06-21T21:42:55Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.channel) != null) { java.lang.Integer channelIdx = java.lang.Integer.valueOf((((this.channel.getIndex()) % 8) + 1)); return java.lang.String.format(\"ols.channelgroup%d.channel%d.default.color\", groupIdx, channelIdx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4134/buggy-version/client.src.main.java.nl.lxtreme.ols.client.signaldisplay.signalelement.SignalElement.java", "BodyUseAPI": [], "Fixed commit": "b57af97fd4018ecd5fa1dd940f4649458212b107", "Url": "https://api.github.com/repos/tbraunP/ols", "Date": "2012-10-18T12:06:57Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions.getVisualSignature()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (visualSignature != null) { visualSignature.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5262/buggy-version/pdf-as-pdfbox.src.main.java.at.gv.egiz.pdfas.lib.impl.signing.pdfbox.PADESPDFBOXSigner.java", "BodyUseAPI": ["org.apache.pdfbox.cos.COSDocument.close()"], "Fixed commit": "3d673b3bcb1ce0be79e79813ed55246bcbe371af", "Url": "https://api.github.com/repos/primesign/pdf-as-4", "Date": "2015-09-10T16:22:03Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tmc.BetterProtected.listeners.BlockListener.getMostRecentBlockEvent(org.bukkit.block.Block)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (mostRecentBlockEvent == null) { blockEventRepository.save(tmc.BetterProtected.domain.BlockEvent.newBlockEvent(block, player.getName(), tmc.BetterProtected.listeners.REMOVED)); }else if (isMaterialIgnored(block.getType())) { if (isMaterialIgnored(mostRecentBlockEvent.getMaterial())) { blockEventRepository.save(tmc.BetterProtected.domain.BlockEvent.newBlockEvent(block, player.getName(), tmc.BetterProtected.listeners.REMOVED)); }else if (doesPlayerHavePermissionToBreak(player, mostRecentBlockEvent)) { blockEventRepository.save(tmc.BetterProtected.domain.BlockEvent.newBlockEvent(block, player.getName(), tmc.BetterProtected.listeners.REMOVED)); } }else if (doesPlayerHavePermissionToBreak(player, mostRecentBlockEvent)) { blockEventRepository.save(tmc.BetterProtected.domain.BlockEvent.newBlockEvent(block, player.getName(), tmc.BetterProtected.listeners.REMOVED)); }else { event.setCancelled(true); player.sendMessage(((org.bukkit.ChatColor.DARK_RED) + \"You cannot break this block!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6113/buggy-version/src.tmc.BetterProtected.Listeners.BlockListener.java", "BodyUseAPI": ["tmc.BetterProtected.listeners.BlockListener.doesPlayerHavePermissionToBreak(org.bukkit.entity.Player,tmc.BetterProtected.domain.BlockEvent)", "tmc.BetterProtected.domain.BlockEvent.getMaterial()", "tmc.BetterProtected.listeners.BlockListener.isMaterialIgnored(mostRecentBlockEvent.getMaterial())", "tmc.BetterProtected.listeners.BlockListener.doesPlayerHavePermissionToBreak(org.bukkit.entity.Player,tmc.BetterProtected.domain.BlockEvent)"], "Fixed commit": "6dbbbfdede67dad0fb1044d4fbfaa6842b65bd18", "Url": "https://api.github.com/repos/TheMineCart/BetterProtected", "Date": "2012-04-01T21:15:58Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(messageModel.getTitle().isEmpty())) { messageEntity.setSubject(messageModel.getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3480/buggy-version/src.main.java.com.sbu.controller.MessageController.java", "BodyUseAPI": ["com.sbu.controller.model.MessageModel.getTitle()", "com.sbu.dao.model.MessageEntity.setSubject(messageModel.getTitle())"], "Fixed commit": "45c03c06b76ac441375f4687137f02e3b7a1538f", "Url": "https://api.github.com/repos/Ardeshir-Shon/CharityProject", "Date": "2017-06-25T05:21:51Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(messageModel.getFirstName().isEmpty())) { messageEntity.setName(messageModel.getFirstName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3480/buggy-version/src.main.java.com.sbu.controller.MessageController.java", "BodyUseAPI": ["com.sbu.dao.model.MessageEntity.setName(messageModel.getFirstName())", "com.sbu.controller.model.MessageModel.getFirstName()"], "Fixed commit": "45c03c06b76ac441375f4687137f02e3b7a1538f", "Url": "https://api.github.com/repos/Ardeshir-Shon/CharityProject", "Date": "2017-06-25T05:21:51Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(messageModel.getBody().isEmpty())) { messageEntity.setText(messageModel.getBody()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3480/buggy-version/src.main.java.com.sbu.controller.MessageController.java", "BodyUseAPI": ["com.sbu.controller.model.MessageModel.getBody()", "com.sbu.dao.model.MessageEntity.setText(messageModel.getBody())"], "Fixed commit": "45c03c06b76ac441375f4687137f02e3b7a1538f", "Url": "https://api.github.com/repos/Ardeshir-Shon/CharityProject", "Date": "2017-06-25T05:21:51Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (out != null) { out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6482/buggy-version/src.main.java.cn.lechange.happor.container.JarContainerServer.java", "BodyUseAPI": ["java.io.PrintWriter.close()"], "Fixed commit": "c39bda85867527cb967ab9eb8e3a04cf65a11286", "Url": "https://api.github.com/repos/xphh/happor", "Date": "2016-02-11T13:47:42Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fantom.open(portName)) { setInputStream(new jp.digitalmuseum.connector.FantomConnector.FantomInputStream()); setOutputStream(new jp.digitalmuseum.connector.FantomConnector.FantomOutputStream()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/290/buggy-version/connector.src.jp.digitalmuseum.connector.FantomConnector.java", "BodyUseAPI": [], "Fixed commit": "8aad185237a413d33c319801a534225b8addaa81", "Url": "https://api.github.com/repos/arcatdmz/phybots", "Date": "2013-03-20T01:02:28Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sumologic.client.SumologicKinesisUtils.compressGzip(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (compressedData == null) { com.sumologic.client.SumologicSender.LOG.error((\"Unable to compress data to send: \" + data)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1074/buggy-version/src.main.java.com.sumologic.client.SumologicSender.java", "BodyUseAPI": [], "Fixed commit": "e2d3b199d5666b92017868da585c083b1a7b7850", "Url": "https://api.github.com/repos/jpdiazvaz/sumologic-kinesis-connector", "Date": "2015-07-31T21:09:10Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCollision()) { activeShape.rotateCounterClockwise(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8156/buggy-version/src.com.ewerp.ejtris.pits.BasicPit.java", "BodyUseAPI": [], "Fixed commit": "083ed75a6b9242c57e86aa5fa98665e7ae98096a", "Url": "https://api.github.com/repos/cjboyden/ejTris", "Date": "2011-09-18T02:30:45Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2073/buggy-version/src.main.java.service.validator.Validator.java", "BodyUseAPI": [], "Fixed commit": "5fdf26649c491852fc0a3c1ca633aa08f01cc9e3", "Url": "https://api.github.com/repos/gdanguy/training-java-gdanguy", "Date": "2017-04-13T12:23:23Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((erroredUsers.size()) > 0) && ((request.getUsers().size()) > 0)) { warningMessages.add(\"Some users are removed since there is no userid\"); }else if (((erroredUsers.size()) > 0) && ((request.getUsers().size()) == 0)) { errorMessages.add(\"All users are without userids hence removed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2699/buggy-version/PTEService.src.com.app.pte.service.validators.UserResourceValidator.java", "BodyUseAPI": ["request.getUsers().size()", "java.util.List<com.app.pte.api.user.User>.size()", "com.app.pte.api.user.UserRequest.getUsers()"], "Fixed commit": "a1bdf3eccb75e183c4015ef435f0940f86b8b3c3", "Url": "https://api.github.com/repos/Gurunath-lohar/PTETool", "Date": "2016-02-28T13:46:03Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((audioTrack) != null) { i = audioTrack.getPlaybackHeadPosition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/126/buggy-version/SputifyGUI.src.se.mah.patmic.sputifygui.PlayActivity.java", "BodyUseAPI": [], "Fixed commit": "abb547161aa60af53616ef67c81b4ee1f7285adb", "Url": "https://api.github.com/repos/P1-Sputify/SputifyGUI", "Date": "2014-06-01T11:53:14Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (representationId != null) { uri = org.roda.wui.common.client.tools.RestUtils.createRepresentationDescriptiveMetadataHTMLUri(representationId, descId, versionKey); }else { uri = org.roda.wui.common.client.tools.RestUtils.createDescriptiveMetadataHTMLUri(aipId, descId, versionKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3709/buggy-version/roda-ui.roda-wui.src.main.java.org.roda.wui.client.browse.DescriptiveMetadataHistory.java", "BodyUseAPI": ["org.roda.wui.common.client.tools.RestUtils.createRepresentationDescriptiveMetadataHTMLUri(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "74545af8bbcbb7ac194d72879d4460da42284e0a", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2016-10-13T11:52:48Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (representationId != null) { uri = org.roda.wui.common.client.tools.RestUtils.createRepresentationDescriptiveMetadataDownloadUri(representationId, descId, versionKey); }else { uri = org.roda.wui.common.client.tools.RestUtils.createDescriptiveMetadataDownloadUri(aipId, descId, versionKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3709/buggy-version/roda-ui.roda-wui.src.main.java.org.roda.wui.client.browse.DescriptiveMetadataHistory.java", "BodyUseAPI": ["org.roda.wui.common.client.tools.RestUtils.createRepresentationDescriptiveMetadataDownloadUri(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "74545af8bbcbb7ac194d72879d4460da42284e0a", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2016-10-13T11:52:48Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sk89q.worldedit.bukkit.WorldEditPlugin.getSelection(org.bukkit.command.CommandSender)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sel == null) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"You have not made a selection!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6594/buggy-version/src.main.java.com.sk89q.craftbook.bukkit.commands.AreaCommands.java", "BodyUseAPI": [], "Fixed commit": "9273e0ebb289d64f96bea5ee7a756cc8838e4dfb", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2012-12-31T02:40:53Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((followedUsernames.size()) > 0) { return followedUsersComments.updated(followedUsernames); }else { return followedUsersComments; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1764/buggy-version/CMPUT301T02Project.src.ca.ualberta.cs.cmput301t02project.model.User.java", "BodyUseAPI": ["ca.ualberta.cs.cmput301t02project.model.FollowedUserListCommentsModel.updated(java.util.ArrayList<java.lang.String>)"], "Fixed commit": "cb908b287804a03e28179fbd747fe432399dff35", "Url": "https://api.github.com/repos/CMPUT301W14T02/Comput301Project", "Date": "2014-04-05T02:56:41Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pool.getCollectionUsage()) != null) { gauges.put(com.codahale.metrics.MetricRegistry.name(poolName, \"used-after-gc\"), new com.codahale.metrics.Gauge<java.lang.Long>() { @java.lang.Override public java.lang.Long getValue() { return pool.getCollectionUsage().getUsed(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2098/buggy-version/metrics-jvm.src.main.java.com.codahale.metrics.jvm.MemoryUsageGaugeSet.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.codahale.metrics.Metric>.put(com.codahale.metrics.MetricRegistry.name(poolName, \"used-after-gc\"),com.codahale.metrics.Gauge<java.lang.Long>)", "java.lang.management.MemoryUsage.getUsed()", "java.lang.management.MemoryPoolMXBean.getCollectionUsage()"], "Fixed commit": "d4163651cc549d9813d3487e2f66615fb87c86c6", "Url": "https://api.github.com/repos/v-garki/metrics", "Date": "2015-05-18T00:36:24Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checking == (endNode)) { endNode = newNode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/855/buggy-version/07LinkedList.MyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "59d9c555f4014d4c32c569f2bd1218211a98c7bd", "Url": "https://api.github.com/repos/roddajohn/APCS2", "Date": "2015-03-18T16:19:25Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.mojo.xml.AbstractXmlMojo.asAbsoluteFile(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(absoluteCatalog.exists())) || (!(absoluteCatalog.isFile()))) { throw new org.apache.maven.plugin.MojoExecutionException((\"That catalog does not exist:\" + (absoluteCatalog.getPath())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7307/buggy-version/src.main.java.org.codehaus.mojo.xml.AbstractXmlMojo.java", "BodyUseAPI": ["java.io.File.getPath()"], "Fixed commit": "c8aef203e0e54338209389bcad07f2df03912558", "Url": "https://api.github.com/repos/rosslamont/xml-maven-plugin", "Date": "2017-08-08T04:34:00Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (rdfFormat == null) { if (item.getName().contains(\".ttl\")) rdfFormat = \"TURTLE\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2259/buggy-version/diachron-archive.archive-web-services.src.main.java.org.athena.imis.diachron.archive.web.controllers.DatasetVersionController.java", "BodyUseAPI": [], "Fixed commit": "8d418c0c0b5812b54ad54261f0e6d772ca7cef34", "Url": "https://api.github.com/repos/diachron/archive", "Date": "2015-12-16T14:51:40Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(url.getPath().endsWith(\"/\"))) { url = new java.net.URL(((url.toExternalForm()) + \"/\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7374/buggy-version/src.us.kbase.common.executionengine.CallbackServerConfigBuilder.java", "BodyUseAPI": ["java.net.URL.toExternalForm()"], "Fixed commit": "6cf44845ae5a31b8db2c3a3da0efeb369d4e8941", "Url": "https://api.github.com/repos/MrCreosote/njs_wrapper", "Date": "2016-05-25T18:20:55Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((theSearchQueryString != null) && ((theSearchQueryString.length()) > (ca.uhn.fhir.jpa.entity.Search.MAX_SEARCH_QUERY_STRING))) { mySearchQueryString = null; }else { mySearchQueryString = theSearchQueryString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1674/buggy-version/hapi-fhir-jpaserver-base.src.main.java.ca.uhn.fhir.jpa.entity.Search.java", "BodyUseAPI": [], "Fixed commit": "0ab8a9a0ba521f67016b316a674d050db99ee070", "Url": "https://api.github.com/repos/jamesagnew/hapi-fhir", "Date": "2017-10-05T17:41:22Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((auditLog.getUserId()) == null) || ((auditLog.getPrimaryContentId()) == null)) com.googlecode.objectify.ObjectifyService.ofy().delete().entity(auditLog).now();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5062/buggy-version/src.main.java.com.pratilipi.api.impl.auditlog.AuditLogProcessApi.java", "BodyUseAPI": ["com.googlecode.objectify.ObjectifyService.ofy().delete().entity(auditLog).now()", "com.googlecode.objectify.ObjectifyService.ofy().delete().entity(com.pratilipi.data.type.AuditLog)"], "Fixed commit": "44090e1b24e3021d1d519095a431650974d85548", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-12-03T12:03:23Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputType.equalsIgnoreCase(\"jpg\")) || (outputType.equalsIgnoreCase(\"jpeg\"))) { bufferedImage = new java.awt.image.BufferedImage(rectangle.width, rectangle.height, java.awt.image.BufferedImage.TYPE_INT_RGB); }else { bufferedImage = new java.awt.image.BufferedImage(rectangle.width, rectangle.height, java.awt.image.BufferedImage.TYPE_INT_ARGB); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8221/buggy-version/modules.output.src.main.java.org.ianturton.cookbook.output.SaveMapAsImage.java", "BodyUseAPI": [], "Fixed commit": "1c646aeff722a9fe9264dafd634a4fce1811584f", "Url": "https://api.github.com/repos/ianturton/geotools-cookbook", "Date": "2014-11-13T16:32:48Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (outputImageFile != null) { outputImageFile.flush(); outputImageFile.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8221/buggy-version/modules.output.src.main.java.org.ianturton.cookbook.output.SaveMapAsImage.java", "BodyUseAPI": ["javax.imageio.stream.ImageOutputStream.close()", "javax.imageio.stream.ImageOutputStream.flush()"], "Fixed commit": "1c646aeff722a9fe9264dafd634a4fce1811584f", "Url": "https://api.github.com/repos/ianturton/geotools-cookbook", "Date": "2014-11-13T16:32:48Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mockit.coverage.modification.ClassSelection.findLocationInCodeSource(java.lang.String,java.security.ProtectionDomain)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (location == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1695/buggy-version/coverage.src.mockit.coverage.modification.ClassSelection.java", "BodyUseAPI": [], "Fixed commit": "51f957cab43fdaa67bde0f249b18ea79d5016c1d", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2015-10-25T20:20:11Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zhao_ren_db.db_connector.getSingleQuery(java.lang.String)", "zhao_ren_db.Hash.encode(java.lang.String,java.lang.String)", "zhao_ren_db.db_connector.getSingleQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((status.equals(\"0\")) && (passDb.equals(passCur))) return true; else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5624/buggy-version/zhao_ren_db.src.zhao_ren_db.db_connector.java", "BodyUseAPI": [], "Fixed commit": "c6829ed8ff6857a9e8afc2148f8570e7d8443c8f", "Url": "https://api.github.com/repos/R3G3X/zhao.ren", "Date": "2016-08-16T13:18:21Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.isep.rottencave.GlobalConfiguration.musicOn) music.play();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2698/buggy-version/core.src.org.isep.rottencave.screens.GameOverScreen.java", "BodyUseAPI": [], "Fixed commit": "87255419957b596efa8fb04a30eec76ac1c8ee3d", "Url": "https://api.github.com/repos/gcleenew/RottenCave", "Date": "2016-01-10T17:39:14Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentConnection) == null) { return false; }else { return this.currentConnection.isConnected(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6872/buggy-version/app.src.main.java.org.monkey.d.ruffy.ruffy.driver.BTConnection.java", "BodyUseAPI": [], "Fixed commit": "76c9901c8c777ee53e603b26e91a6dfde7836c5c", "Url": "https://api.github.com/repos/gregorybel/ruffy", "Date": "2017-07-16T16:00:02Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source.isReset()) { com.o3dr.services.android.lib.drone.mission.item.command.ResetROI temp = new com.o3dr.services.android.lib.drone.mission.item.command.ResetROI(); proxyMissionItem = temp; }else { com.o3dr.services.android.lib.drone.mission.item.spatial.RegionOfInterest temp = new com.o3dr.services.android.lib.drone.mission.item.spatial.RegionOfInterest(); temp.setCoordinate(source.getCoordinate()); proxyMissionItem = temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5115/buggy-version/ServiceApp.src.org.droidplanner.services.android.utils.ProxyUtils.java", "BodyUseAPI": ["org.droidplanner.services.android.core.mission.waypoints.RegionOfInterestImpl.getCoordinate()", "com.o3dr.services.android.lib.drone.mission.item.spatial.RegionOfInterest.setCoordinate(source.getCoordinate())"], "Fixed commit": "bcfa59ae6195960bd2fe7c8ce49195e6d85c1575", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2015-10-21T01:15:53Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!isWriteKey) && (!isReadKey)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4937/buggy-version/src.main.java.com.turn.ttorrent.client.network.keyProcessors.CleanupKeyProcessor.java", "BodyUseAPI": [], "Fixed commit": "b0acc3ccb8bd14379e604541bc8e475b2ef25f86", "Url": "https://api.github.com/repos/JetBrains/ttorrent-lib", "Date": "2017-11-28T15:38:38Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((g.state) != 0) TetrisStart.contr.releaseAll();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2991/buggy-version/src.TetrisStart.java", "BodyUseAPI": [], "Fixed commit": "b8ce3fd2e7acdedaef590a5fb6944a79f3c7b7e1", "Url": "https://api.github.com/repos/lutetia/Tetris", "Date": "2013-11-08T03:47:02Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b2) { if (b) { getFragmentManager().beginTransaction().setCustomAnimations(R.anim.slide_in_left, R.anim.slide_out_right).add(R.id.container, new com.example.sgm.japgolfapp.registration.MainMenuFragment()).commit(); }else { getFragmentManager().beginTransaction().setCustomAnimations(R.anim.slide_in_left, R.anim.slide_out_right).add(R.id.container, new com.example.sgm.japgolfapp.registration.IntroScreenFragment()).commit(); } }else { prefs.edit().putBoolean(firstTime, true).apply(); getFragmentManager().beginTransaction().setCustomAnimations(R.anim.slide_in_left, R.anim.slide_out_right).add(R.id.container, new com.example.sgm.japgolfapp.registration.IntroScreenFragment()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1930/buggy-version/app.src.main.java.com.example.sgm.japgolfapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a416b45d4540c6c92d62e63e167cd6ca8017056f", "Url": "https://api.github.com/repos/rnecesito/k3l1kjf90rl", "Date": "2015-01-07T02:03:33Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstRow > lastRow) { firstRow = lastRow = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4886/buggy-version/src.main.java.tyates.bananasolve.util.MatrixUtil.java", "BodyUseAPI": [], "Fixed commit": "d68d2aefa12654968896b2ef4b91d70d57a792d2", "Url": "https://api.github.com/repos/Tyler-Yates/bananasolve", "Date": "2017-06-03T22:08:02Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstCol > lastCol) { firstCol = lastCol = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4886/buggy-version/src.main.java.tyates.bananasolve.util.MatrixUtil.java", "BodyUseAPI": [], "Fixed commit": "d68d2aefa12654968896b2ef4b91d70d57a792d2", "Url": "https://api.github.com/repos/Tyler-Yates/bananasolve", "Date": "2017-06-03T22:08:02Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((used_storage_size) == null) || (used_storage_size.isEmpty())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3254/buggy-version/src.main.java.com.mediafire.sdk.api.responses.upload.CheckResponse.java", "BodyUseAPI": [], "Fixed commit": "aeae08ac06e7050f15eb169f42c7991e70f516e7", "Url": "https://api.github.com/repos/MediaFire/mediafire-java-sdk", "Date": "2015-04-09T20:18:51Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((storage_limit) == null) || (used_storage_size.isEmpty())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3254/buggy-version/src.main.java.com.mediafire.sdk.api.responses.upload.CheckResponse.java", "BodyUseAPI": [], "Fixed commit": "aeae08ac06e7050f15eb169f42c7991e70f516e7", "Url": "https://api.github.com/repos/MediaFire/mediafire-java-sdk", "Date": "2015-04-09T20:18:51Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (user == null) { session().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5709/buggy-version/app.controllers.Application.java", "BodyUseAPI": [], "Fixed commit": "ef3cf6c3f1b09099a282e561cfbc08875f3eb724", "Url": "https://api.github.com/repos/pmichna/citygame", "Date": "2014-01-10T22:19:41Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.arjvik.arjmart.api.ItemDAO.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (defaultItem == null) return javax.ws.rs.core.Response.status(Status.NOT_FOUND).build();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1499/buggy-version/src.com.arjvik.arjmart.api.ItemResource.java", "BodyUseAPI": [], "Fixed commit": "7b99869d9053dd20092d39784f2824d469840782", "Url": "https://api.github.com/repos/ArjMart/API", "Date": "2017-08-16T17:17:56Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chest.getValue()) instanceof net.minecraft.inventory.ISidedInventory) { net.minecraft.inventory.ISidedInventory sided = ((net.minecraft.inventory.ISidedInventory) (chest.getValue())); if (!(sided.canExtractItem(stack.getKey(), stack.getValue(), chest.getKey().ordinal()))) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4973/buggy-version/src.powercrystals.minefactoryreloaded.tile.machine.TileEntityEjector.java", "BodyUseAPI": ["java.util.Map.Entry<net.minecraftforge.common.ForgeDirection, net.minecraft.inventory.IInventory>.getKey()", "chest.getKey().ordinal()", "java.util.Map.Entry<net.minecraftforge.common.ForgeDirection, net.minecraft.inventory.IInventory>.getValue()", "net.minecraft.inventory.ISidedInventory.canExtractItem(stack.getKey(),stack.getValue(),chest.getKey().ordinal())"], "Fixed commit": "170b0d8e84f05e2ccc58b5e72b2607d3e0010ec6", "Url": "https://api.github.com/repos/skyboy/MineFactoryReloaded", "Date": "2013-05-19T19:11:54Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!show) { view.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2951/buggy-version/android.app.src.main.java.com.reactnativenavigation.animation.VisibilityAnimator.java", "BodyUseAPI": [], "Fixed commit": "8052da500b5297ac9c7d300978f2fb89b4dd9ad8", "Url": "https://api.github.com/repos/3sidedcube/react-native-navigation", "Date": "2017-01-05T13:05:15Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (show) { view.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2951/buggy-version/android.app.src.main.java.com.reactnativenavigation.animation.VisibilityAnimator.java", "BodyUseAPI": [], "Fixed commit": "8052da500b5297ac9c7d300978f2fb89b4dd9ad8", "Url": "https://api.github.com/repos/3sidedcube/react-native-navigation", "Date": "2017-01-05T13:05:15Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pipe.blockLoc.getWorld().equals(on.getWorld()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5080/buggy-version/src.main.java.de.robotricker.transportpipes.protocol.PipePacketManager.java", "BodyUseAPI": [], "Fixed commit": "a6dc4f8f615b673f904df4a0075e9bb918a9673a", "Url": "https://api.github.com/repos/RoboTricker/Transport-Pipes", "Date": "2017-07-18T17:27:23Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(item.getBlockLoc().getWorld().equals(on.getWorld()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5080/buggy-version/src.main.java.de.robotricker.transportpipes.protocol.PipePacketManager.java", "BodyUseAPI": [], "Fixed commit": "a6dc4f8f615b673f904df4a0075e9bb918a9673a", "Url": "https://api.github.com/repos/RoboTricker/Transport-Pipes", "Date": "2017-07-18T17:27:23Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (moduleName.equalsIgnoreCase(\"user\")) moduleName = this.NameOfFileNoSlash;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3654/buggy-version/prolog-Doc.src.main.java.parsers.CodeqParser.java", "BodyUseAPI": [], "Fixed commit": "e7d9e933d2b6e02d318b05e33d2ee1b8cec7a377", "Url": "https://api.github.com/repos/birkhoff/prolog_doc_gen", "Date": "2013-08-13T12:33:57Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((mEntry) != null) && ((mEntry.getCoverArt()) == null)) && (mEntry.isDirectory())) && (!(github.daneren2005.dsub.util.Util.isOffline(context)))) { github.daneren2005.dsub.domain.MusicDirectory.Entry firstChild = github.daneren2005.dsub.util.FileUtil.lookupChild(context, mEntry, true); if (firstChild != null) { mEntry.setCoverArt(firstChild.getCoverArt()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6180/buggy-version/src.github.daneren2005.dsub.util.ImageLoader.java", "BodyUseAPI": ["github.daneren2005.dsub.util.FileUtil.lookupChild(android.content.Context,MusicDirectory.Entry,boolean)", "MusicDirectory.Entry.setCoverArt(firstChild.getCoverArt())"], "Fixed commit": "97000f52056a2367f169f122842c5df6eedd62db", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2015-01-20T02:19:18Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notifTab) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2755/buggy-version/SEPPrototype.app.src.main.java.uts.sep.tcba.sepprototype.Controller_TutorMenu.java", "BodyUseAPI": [], "Fixed commit": "00ae6d9aeab26ccfc70b543fa8f5e2714ea4021f", "Url": "https://api.github.com/repos/sc1122/SEPProject", "Date": "2017-10-08T07:17:50Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((current_file_path.endsWith(\".java\")) && (!(current_file_path.toLowerCase().contains(\"test\")))) { java.util.List<java.lang.Integer> tmp = new java.util.ArrayList<>(); tmp.add(commit_ids.get(i)); tmp.add(resultSet.getInt(1)); commit_fileIds.add(tmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4302/buggy-version/src.pers.bbn.changeBug.extraction.Extraction.java", "BodyUseAPI": [], "Fixed commit": "aca39a4707619b4eb3507d5c33ca949c3230f7a2", "Url": "https://api.github.com/repos/408620775/ChangeClassify", "Date": "2017-01-12T03:16:58Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(ConstAndUtil.positionOK(pos))) { pos = ConstAndUtil.getLegalRandomPosition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7730/buggy-version/src.Tree.java", "BodyUseAPI": [], "Fixed commit": "91be844ce0241f50b45dc6ae194db62fb89aaca6", "Url": "https://api.github.com/repos/TheAIBot/Afl-Hjemmeopgave-3", "Date": "2015-11-19T08:49:14Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["carpentersblocks.util.BlockProperties.getCoverBlock(net.minecraft.tileentity.TileEntity,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (block instanceof carpentersblocks.block.BlockBase) { event.name = Block.soundWoodFootstep.getStepSound(); }else if ((block.stepSound) != null) { event.name = block.stepSound.getStepSound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/221/buggy-version/carpentersblocks.util.handler.ClientEventHandler.java", "BodyUseAPI": ["block.stepSound.getStepSound()"], "Fixed commit": "4b7ecec8cdb3bd8203da1b73c803e4214642eeed", "Url": "https://api.github.com/repos/Mineshopper/carpentersblocks", "Date": "2013-12-03T04:26:04Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.startsWith(\"www.\")) url = \"http://\" + (url);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/356/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.asynctasks.RetrieveMetaDataAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "8433fdc8c235084e64ed7b81d28d80d87ca60e91", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-29T11:32:08Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((this.getCurrentAnimation()) != null) && (!(this.getCurrentAnimation().isLoop()))) && (this.getCurrentAnimation().isPlaying())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3043/buggy-version/src.de.gurkenlabs.litiengine.graphics.animation.EntityAnimationController.java", "BodyUseAPI": [], "Fixed commit": "f7ad3397bc3707be80403d0ae00e0c6786b829bf", "Url": "https://api.github.com/repos/gurkenlabs/litiengine", "Date": "2017-11-21T16:37:45Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (registrationDate != null) { itemValues.addStringItem(ItemValuesMap.RecordProfile.REGISTRATION_DATE, dateFormat.format(registrationDate)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3397/buggy-version/app.src.main.java.org.unicef.rapidreg.base.record.recordregister.RecordRegisterPresenter.java", "BodyUseAPI": ["org.unicef.rapidreg.service.cache.ItemValuesMap.addStringItem(ItemValuesMap.RecordProfile.REGISTRATION_DATE,java.lang.String)", "java.text.DateFormat.format(java.util.Date)"], "Fixed commit": "23cb8d1011e7da53a31cb1708d26eb276f6395fd", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2017-01-18T06:52:25Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (itemValues.has(org.unicef.rapidreg.service.REGISTRATION_DATE)) { incident.setRegistrationDate(org.unicef.rapidreg.utils.Utils.getRegisterDate(itemValues.getAsString(org.unicef.rapidreg.service.REGISTRATION_DATE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3397/buggy-version/app.src.main.java.org.unicef.rapidreg.service.IncidentService.java", "BodyUseAPI": ["org.unicef.rapidreg.model.Incident.setRegistrationDate(org.unicef.rapidreg.utils.Utils.getRegisterDate(itemValues.getAsString(org.unicef.rapidreg.service.REGISTRATION_DATE)))", "org.unicef.rapidreg.service.cache.ItemValuesMap.getAsString(org.unicef.rapidreg.service.REGISTRATION_DATE)", "org.unicef.rapidreg.utils.Utils.getRegisterDate(itemValues.getAsString(org.unicef.rapidreg.service.REGISTRATION_DATE))"], "Fixed commit": "23cb8d1011e7da53a31cb1708d26eb276f6395fd", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2017-01-18T06:52:25Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(jazmin.log.LoggerFactory.isConsoleLogEnabled)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9193/buggy-version/JazminServer.src.jazmin.log.LoggerFactory.java", "BodyUseAPI": [], "Fixed commit": "8cecf28796a36b1667fd7e631bb576ef048a5cce", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2015-07-18T14:13:27Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Short, jsettlers.common.position.ShortPoint2D>.get(java.lang.Short)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((getPartitionIdAt(existingPartitionPos.x, existingPartitionPos.y)) != currPartitionId) { foundPartitionsSet.put(currPartitionId, currPartition.e2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4554/buggy-version/jsettlers.logic.src.jsettlers.logic.map.grid.partition.PartitionsGrid.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Short, jsettlers.common.position.ShortPoint2D>.put(java.lang.Short,currPartition.e2)"], "Fixed commit": "bd77d9555cfec34a33334398634dddfef7b5f00f", "Url": "https://api.github.com/repos/jsettlers/settlers-remake", "Date": "2015-10-21T12:44:02Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (target.exists()) target.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3499/buggy-version/src.com.qweex.callisto.StaticBlob.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "3b7da0fea5ccf130afa9c6ba64debe89e627f03f", "Url": "https://api.github.com/repos/MrQweex/callisto-app", "Date": "2013-08-16T22:23:35Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (d == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6985/buggy-version/Engine.Engine-Objects.src.org.shaman.rpg.engine.objects.view.JMEGrassView.java", "BodyUseAPI": [], "Fixed commit": "0bc019dd9f75eb590cf47967f705cc0d8aeffcb6", "Url": "https://api.github.com/repos/shamanDevel/shaman.rpg", "Date": "2016-01-24T13:21:55Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.shaman.rpg.engine.objects.view.JMEGrassView.getMap()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (map == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6985/buggy-version/Engine.Engine-Objects.src.org.shaman.rpg.engine.objects.view.JMEGrassView.java", "BodyUseAPI": [], "Fixed commit": "0bc019dd9f75eb590cf47967f705cc0d8aeffcb6", "Url": "https://api.github.com/repos/shamanDevel/shaman.rpg", "Date": "2016-01-24T13:21:55Z"},
{"Line": "=>973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.eclipse.core.runtime.Platform.getPreferencesService().getBoolean(IdePlugin.PLUGIN_ID, IPreferenceConstants.EDITOR_LINE_NUMBER_SET, false, null))) { prefs.putBoolean(AbstractDecoratedTextEditorPreferenceConstants.EDITOR_LINE_NUMBER_RULER, true); prefs = com.aptana.core.util.EclipseUtil.instanceScope().getNode(IdePlugin.PLUGIN_ID); prefs.putBoolean(IPreferenceConstants.EDITOR_LINE_NUMBER_SET, true); try { prefs.flush(); } catch (org.osgi.service.prefs.BackingStoreException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3466/buggy-version/plugins.com.aptana.rcp.src.com.aptana.rcp.IDEWorkbenchAdvisor.java", "BodyUseAPI": [], "Fixed commit": "a96dd9aa30555f8acd5a54ee51e48c2fab17ff74", "Url": "https://api.github.com/repos/aptana/studio3-rcp", "Date": "2011-09-01T22:02:33Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.CharSequence.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (offset >= len) return new veeju.parser.ParsingResult(form, offset);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4451/buggy-version/src.veeju.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "3bd767b49e88789e861c1329f1c6cfc7cd3015fd", "Url": "https://api.github.com/repos/veeyu/veeju", "Date": "2012-03-14T16:47:02Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.CharSequence.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((offset >= length) || ((text.charAt(offset)) != ')')) { throw new veeju.parser.InvalidSyntaxException(text, offset, \"expected end of parentheses ')'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4451/buggy-version/src.veeju.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "3bd767b49e88789e861c1329f1c6cfc7cd3015fd", "Url": "https://api.github.com/repos/veeyu/veeju", "Date": "2012-03-14T16:47:02Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(playlistEntry.addMusicToPlaylist(loggeduser.getUsername(), playlistname, selectedmusic.getId()))) { addMessage(\"Not possible to add this music to playlist\", FacesMessage.SEVERITY_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8053/buggy-version/p4-playlist-web.src.main.java.pt.uc.dei.aor.paj.Playlistinterface.java", "BodyUseAPI": [], "Fixed commit": "c8707c6f39702b4cb5129189d41974cce72f04e0", "Url": "https://api.github.com/repos/joaopedromartins/P4-JoaoMartins-RicardoRodrigues", "Date": "2015-06-07T13:49:08Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mData)) { for (com.ualberta.team17.QAModel item : mData) { if (item instanceof com.ualberta.team17.UpvoteItem) { com.ualberta.team17.UpvoteItem upvote = ((com.ualberta.team17.UpvoteItem) (item)); if (upvote.getAuthor().equals(mUserContext.getUserName())) { com.ualberta.team17.AuthoredTextItem parent = ((com.ualberta.team17.AuthoredTextItem) (mItemRefById.get(upvote.getParentItem()))); if (parent != null) { parent.setHaveUpvoted(); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5412/buggy-version/moqa.src.com.ualberta.team17.datamanager.LocalDataManager.java", "BodyUseAPI": [], "Fixed commit": "24ae29e576a02e06f2e43b4793c603f5a39d8d43", "Url": "https://api.github.com/repos/coreyjamison/Team17Project", "Date": "2014-11-20T10:09:23Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.symplifier.db.driver.jdbc.JDBCField.get(java.sql.ResultSet,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (id != null) { net.symplifier.db.driver.jdbc.ModelInstance child = seed.get(ref, id); if (child == null) { net.symplifier.db.driver.jdbc.ModelRow newRow = m.model.getRow(id); child = ((net.symplifier.db.driver.jdbc.ModelInstance) (m.model.create(newRow))); seed.set(ref, id, child); m.recursiveLoad(rs, newRow, child); }else { m.recursiveLoad(rs, child.getPrimaryRow(), child); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6216/buggy-version/src.main.java.net.symplifier.db.driver.jdbc.JDBCQuery.java", "BodyUseAPI": ["net.symplifier.db.driver.jdbc.ModelInstance.set(net.symplifier.db.driver.jdbc.Reference,java.lang.Long,net.symplifier.db.driver.jdbc.ModelInstance)", "net.symplifier.db.driver.jdbc.ModelStructure.getRow(java.lang.Long)", "net.symplifier.db.driver.jdbc.ModelInstance.get(net.symplifier.db.driver.jdbc.Reference,java.lang.Long)"], "Fixed commit": "1a916ccacf5533c1f046a415fdfb92039791c899", "Url": "https://api.github.com/repos/ranjan-sym/sym.net-db", "Date": "2015-09-08T18:22:24Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.World.getBlockAt(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (this.gears.containsKey(new com.aleksey.castlegates.types.BlockCoord(block))) return com.aleksey.castlegates.manager.GearManager.PowerResult.CannotDrawGear;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3314/buggy-version/src.main.java.com.aleksey.castlegates.manager.GearManager.java", "BodyUseAPI": [], "Fixed commit": "46d87312a57f55fe8a572a2556330a73c02f8c4e", "Url": "https://api.github.com/repos/DevotedMC/CastleGates", "Date": "2016-06-19T04:51:10Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.aleksey.castlegates.CastleGates.getCitadelManager().canInteract(players, block.getLocation()))) { event.getPlayer().sendMessage(((org.bukkit.ChatColor.RED) + \"Gear\")); }else if ((gear.getLink()) == null) { event.getPlayer().sendMessage(((org.bukkit.ChatColor.GREEN) + \"Gear not linked\")); if ((gear.getBrokenLink()) != null) { event.getPlayer().sendMessage(((((org.bukkit.ChatColor.GREEN) + \"But contains \") + (gear.getBrokenLink().getBlocks().size())) + \" drawn blocks\")); } }else { com.aleksey.castlegates.types.GearState gear2 = ((gear.getLink().getGear1()) == gear) ? gear.getLink().getGear2() : gear.getLink().getGear1(); event.getPlayer().sendMessage((((((((org.bukkit.ChatColor.GREEN) + \"Gear linked to gear at x = \") + (gear2.getCoord().getX())) + \", y = \") + (+(gear2.getCoord().getY()))) + \", z = \") + (+(gear2.getCoord().getZ())))); if (gear.getLink().isDrawn()) { event.getPlayer().sendMessage(((org.bukkit.ChatColor.GREEN) + \"Link is in drawn state\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3314/buggy-version/src.main.java.com.aleksey.castlegates.manager.CastleGatesManager.java", "BodyUseAPI": [], "Fixed commit": "46d87312a57f55fe8a572a2556330a73c02f8c4e", "Url": "https://api.github.com/repos/DevotedMC/CastleGates", "Date": "2016-06-19T04:51:10Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.isVersioned()) { final net.sourceforge.fenixedu.domain.phd.PhdProgramProcessDocument document = getCandidacyProcess().getLatestDocumentVersionFor(type); if (document != null) { result.add(document); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8291/buggy-version/src.main.java.net.sourceforge.fenixedu.domain.phd.candidacy.feedbackRequest.PhdCandidacyFeedbackRequestProcess.java", "BodyUseAPI": ["getCandidacyProcess().getLatestDocumentVersionFor(net.sourceforge.fenixedu.domain.phd.PhdIndividualProgramDocumentType)"], "Fixed commit": "e18840aaadd2dfcd32c81d431b40ebfaac7264a0", "Url": "https://api.github.com/repos/FenixEdu/fenix", "Date": "2014-03-31T15:31:40Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(browser.afh.BuildConfig.DEBUG)) { com.crashlytics.android.Crashlytics.logException(e); com.crashlytics.android.Crashlytics.log((\"flid : \" + (url.flid))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3358/buggy-version/app.src.main.java.browser.afh.data.FindFiles.java", "BodyUseAPI": [], "Fixed commit": "1713c56f87df58c2cd2d19be4ba8d300c46ab760", "Url": "https://api.github.com/repos/MSF-Jarvis/AndroidFileHost_Browser", "Date": "2017-03-20T06:21:20Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(browser.afh.BuildConfig.DEBUG)) { com.crashlytics.android.Crashlytics.logException(e); com.crashlytics.android.Crashlytics.log((\"did : \" + did)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3358/buggy-version/app.src.main.java.browser.afh.data.FindFiles.java", "BodyUseAPI": [], "Fixed commit": "1713c56f87df58c2cd2d19be4ba8d300c46ab760", "Url": "https://api.github.com/repos/MSF-Jarvis/AndroidFileHost_Browser", "Date": "2017-03-20T06:21:20Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clusterSize[i]) > 1) { clustersSizes.add(clusterSize[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2890/buggy-version/disambiguation-author.disambiguation-author-logic.src.main.java.pl.edu.icm.coansys.disambiguation.author.pig.AproximateAND.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "ff57b76f20e5c79746a0ea46e7c296e83bd2842e", "Url": "https://api.github.com/repos/pdendek/CoAnSys", "Date": "2013-09-12T15:58:31Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((value.startsWith(\"\\\"\")) && (value.endsWith(\"\\\"\"))) { value = value.substring(1, ((value.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/217/buggy-version/core.src.main.java.org.httpobjects.header.response.SetCookieField.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "8825018b43b9e7fa596509a5ff4203e6ba9f7802", "Url": "https://api.github.com/repos/chrisalbright/httpobjects", "Date": "2013-06-06T07:06:51Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cookie.path) != null) { c.setPath(cookie.path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/217/buggy-version/servlet.src.main.java.org.httpobjects.servlet.ServletMethodInvoker.java", "BodyUseAPI": ["javax.servlet.http.Cookie.setPath(cookie.path)"], "Fixed commit": "8825018b43b9e7fa596509a5ff4203e6ba9f7802", "Url": "https://api.github.com/repos/chrisalbright/httpobjects", "Date": "2013-06-06T07:06:51Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cookie.domain) != null) { c.setDomain(cookie.domain); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/217/buggy-version/servlet.src.main.java.org.httpobjects.servlet.ServletMethodInvoker.java", "BodyUseAPI": ["javax.servlet.http.Cookie.setDomain(cookie.domain)"], "Fixed commit": "8825018b43b9e7fa596509a5ff4203e6ba9f7802", "Url": "https://api.github.com/repos/chrisalbright/httpobjects", "Date": "2013-06-06T07:06:51Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cookie.secure) != null) { c.setSecure(cookie.secure); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/217/buggy-version/servlet.src.main.java.org.httpobjects.servlet.ServletMethodInvoker.java", "BodyUseAPI": ["javax.servlet.http.Cookie.setSecure(cookie.secure)"], "Fixed commit": "8825018b43b9e7fa596509a5ff4203e6ba9f7802", "Url": "https://api.github.com/repos/chrisalbright/httpobjects", "Date": "2013-06-06T07:06:51Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eduze.livestream.exchange.client.FramePullResult.getData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((data != null) && ((data.length) > 0)) { for (byte[] b : data) { if (isPlayReceived()) { sourceline.write(b, 0, b.length); } java.lang.System.out.println(((java.lang.String.valueOf(b.length)) + \" bytes sent to audio out.\")); notifyAudioReceived(b); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4652/buggy-version/livestream.src.eduze.livestream.AudioReceiver.java", "BodyUseAPI": [], "Fixed commit": "dbf084a45c069007a0ba727168fae849ae53fcb1", "Url": "https://api.github.com/repos/madhawav/livestream", "Date": "2016-04-15T07:57:31Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((caRequiredGender.getFinalValue().size()) == 0) { return org.openimmunizationsoftware.cdsi.core.logic.items.LogicResult.YES; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3573/buggy-version/src.main.java.org.openimmunizationsoftware.cdsi.core.logic.EvaluateGender.java", "BodyUseAPI": [], "Fixed commit": "696c4c1f98036a2a83e60f9460ca2c9db95f6ded", "Url": "https://api.github.com/repos/immregistries/StepIntoCDSI", "Date": "2017-02-20T17:42:24Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mMapView.getZoomLevel()) <= 12) mMapView.getController().setZoom(((mMapView.getZoomLevel()) + 4));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7617/buggy-version/src.com.sylwke3100.freetrackgps.WorkoutInfoMapFragment.java", "BodyUseAPI": ["mMapView.getController().setZoom(((mMapView.getZoomLevel()) + 4))", "org.osmdroid.views.MapView.getController()", "org.osmdroid.views.MapView.getZoomLevel()"], "Fixed commit": "8279f5f610f8c1b49fe4c1c9df4b2905f4b40524", "Url": "https://api.github.com/repos/sylwke3100/FreeTrackGPS", "Date": "2015-11-12T20:50:54Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mHeaders.getUserAgent()) == null) mHeaders.setUserAgent(getDefaultUserAgent());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4887/buggy-version/AndroidAsync.src.com.koushikdutta.async.http.AsyncHttpRequest.java", "BodyUseAPI": [], "Fixed commit": "1cfe23907ef164b0ff6770a27b1845b0a2c05383", "Url": "https://api.github.com/repos/schwiz/AndroidAsync", "Date": "2013-07-07T05:03:03Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.egit.github.core.Issue.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.gh4a.utils.StringUtils.isBlank(body))) { body = body.replaceAll(\"\\n\", \"<br/>\"); tvDesc.setText(android.text.Html.fromHtml(body)); tvDesc.setTypeface(getApplicationContext().regular); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4073/buggy-version/src.com.gh4a.IssueActivity.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "a8573eb85e83992ffd3486947a23ecfa2484bfbc", "Url": "https://api.github.com/repos/slapperwan/gh4a", "Date": "2012-07-09T02:15:01Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.egit.github.core.PullRequest.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.gh4a.utils.StringUtils.isBlank(body))) { body = body.replaceAll(\"\\n\", \"<br/>\"); tvDesc.setText(android.text.Html.fromHtml(body)); tvDesc.setTypeface(getApplicationContext().regular); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4073/buggy-version/src.com.gh4a.PullRequestActivity.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "a8573eb85e83992ffd3486947a23ecfa2484bfbc", "Url": "https://api.github.com/repos/slapperwan/gh4a", "Date": "2012-07-09T02:15:01Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.materialService.getLatestMaterial(materialDefinition.getId()).getObject()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (dbLatestVersion == null) { areTheSame = false; }else { areTheSame = this.materialUpdater.areMaterialsSameVersion(latestVersion, dbLatestVersion.getMaterialDefinition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8143/buggy-version/Server.src.main.java.net.hawkengine.core.materialupdater.MaterialHandlerService.java", "BodyUseAPI": ["net.hawkengine.core.materialupdater.IMaterialUpdater.areMaterialsSameVersion(net.hawkengine.model.MaterialDefinition,dbLatestVersion.getMaterialDefinition())", "net.hawkengine.model.Material.getMaterialDefinition()"], "Fixed commit": "70b967628dd6e56a8f7e339fff20d6aa5b0523c0", "Url": "https://api.github.com/repos/rndsolutions/hawkcd", "Date": "2016-07-13T08:10:05Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["composer.rules.rtcomp.c.CRuntimeFunctionRefinement.Signature.fromString(terminalB.getBody())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (sigB.returnType.trim().equals(\"void\")) { newBody3 = (((((((((((((((sigB.toString()) + \" {\\n\") + \" if (\") + switchIdentifier) + \") {\\n\") + \" \") + roleFunctionName) + (sigB.arglist)) + \";\\n\") + \" } else {\\n\") + \" \") + beforeFunctionName) + (sigB.arglist)) + \";\\n\") + \" }\\n\") + \"}\\n\\n\"; }else { newBody3 = (((((((((((((((sigB.toString()) + \" {\\n\") + \" if (\") + switchIdentifier) + \") {\\n\") + \" return \") + roleFunctionName) + (sigB.arglist)) + \";\\n\") + \" } else {\\n\") + \" return \") + beforeFunctionName) + (sigB.arglist)) + \";\\n\") + \" }\\n\") + \"}\\n\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4743/buggy-version/fstcomp.composer.rules.rtcomp.c.CRuntimeFunctionRefinement.java", "BodyUseAPI": ["composer.rules.rtcomp.c.CRuntimeFunctionRefinement.Signature.toString()", "composer.rules.rtcomp.c.CRuntimeFunctionRefinement.Signature.toString()"], "Fixed commit": "b0b3cb282b71459563342683d180670e8199d8f8", "Url": "https://api.github.com/repos/joliebig/featurehouse", "Date": "2012-10-23T15:23:08Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((null != description) && (null != (description.getChildren()))) { for (org.junit.runner.Description test : description.getChildren()) { processor.addToSuiteKeeper(test); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5657/buggy-version/src.main.java.com.epam.reportportal.junit.ParallelRunningHandler.java", "BodyUseAPI": ["org.junit.runner.Description.getChildren()"], "Fixed commit": "ae48761b074ce5312f09755a968a9adc2117dffb", "Url": "https://api.github.com/repos/reportportal/agent-java-junit", "Date": "2017-06-05T11:24:33Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/406/buggy-version/src.main.java.com.mridang.processes.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "3d035164b23e2ccb14dc378fcd7006d741cde6d3", "Url": "https://api.github.com/repos/mridang/dashclock-processes", "Date": "2015-03-29T09:11:53Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isMessageMarkedForDeletion((i + 1)))) println((((i + 1) + \" \") + (messages.get(i).getProxyuid())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2586/buggy-version/src.main.java.de.haw_hamburg.server.Pop3Server.java", "BodyUseAPI": ["java.util.List<de.haw_hamburg.db.MessageType>.get(int)", "messages.get(i).getProxyuid()", "de.haw_hamburg.server.Pop3Server.println((((i + 1) + \" \") + (messages.get(i).getProxyuid())))"], "Fixed commit": "bbcda838072cfe957cdf0861d7ad7174d42f050e", "Url": "https://api.github.com/repos/HAW-AI/RN-2013-OBPD-A1", "Date": "2013-04-20T17:49:48Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isMessageMarkedForDeletion((i + 1)))) println((((i + 1) + \" \") + (messages.get(i).getContentLengthInBytes())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2586/buggy-version/src.main.java.de.haw_hamburg.server.Pop3Server.java", "BodyUseAPI": ["java.util.List<de.haw_hamburg.db.MessageType>.get(int)", "messages.get(i).getContentLengthInBytes()", "de.haw_hamburg.server.Pop3Server.println((((i + 1) + \" \") + (messages.get(i).getContentLengthInBytes())))"], "Fixed commit": "bbcda838072cfe957cdf0861d7ad7174d42f050e", "Url": "https://api.github.com/repos/HAW-AI/RN-2013-OBPD-A1", "Date": "2013-04-20T17:49:48Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isMessageMarkedForDeletion((indexOfMessage + 1))) sendError(\"message marked for deletion\"); else { sendOk(de.haw_hamburg.server.OkReply.okReply((((\"\" + indexOfMessage) + \" \") + (message.getProxyuid())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2586/buggy-version/src.main.java.de.haw_hamburg.server.Pop3Server.java", "BodyUseAPI": ["de.haw_hamburg.server.OkReply.okReply((((\"\" + indexOfMessage) + \" \") + (message.getProxyuid())))", "de.haw_hamburg.server.Pop3Server.sendOk(de.haw_hamburg.server.OkReply.okReply((((\"\" + indexOfMessage) + \" \") + (message.getProxyuid()))))"], "Fixed commit": "bbcda838072cfe957cdf0861d7ad7174d42f050e", "Url": "https://api.github.com/repos/HAW-AI/RN-2013-OBPD-A1", "Date": "2013-04-20T17:49:48Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rstudio.studio.client.rmarkdown.model.RmdChunkOutput.getUnits()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((output.isReplay()) && ((state_) == (org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOutputWidget.CHUNK_EMPTY))) && ((units.length()) > 0)) state_ = org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOutputWidget.CHUNK_PRE_OUTPUT;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3429/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOutputWidget.java", "BodyUseAPI": [], "Fixed commit": "1ffeed07b7aa6a75cca72820e087c69717cea9e0", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2016-04-15T18:39:39Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jazmin.driver.file.FileServerDriver.getFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (localFile != null) { return localFile; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6888/buggy-version/JazminServer.src.jazmin.driver.file.FileServerDriver.java", "BodyUseAPI": [], "Fixed commit": "92f657b2180bfbee1b397c9d15bcf8dd83df7045", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2016-04-20T17:00:37Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDataManager()) != null) getDataManager().remove(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2077/buggy-version/app.src.main.java.com.kimeeo.kandroid.sample.projectCore.DefaultVerticalListView.java", "BodyUseAPI": [], "Fixed commit": "ba60bf1a74d4bab762d659d9269d5ab274ceb741", "Url": "https://api.github.com/repos/kimeeo/Kandroid", "Date": "2016-02-25T05:34:46Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nybatis.core.file.FileUtil.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resource == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/152/buggy-version/src.main.java.org.nybatis.core.conf.NConfigulator.java", "BodyUseAPI": [], "Fixed commit": "f0379059ec04211924ae5e846ca5400ecb46f886", "Url": "https://api.github.com/repos/NyBatis/NyBatisCore", "Date": "2017-10-19T09:35:20Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jjoe64.graphview.GraphViewStyle.getNumHorizontalLabels()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((horLabelsToShow > 0) && ((hors / horLabelsToShow) > 0)) { if ((i % (hors / horLabelsToShow)) == 0) canvas.drawText(horlabels[i], x, (height - 4), paint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6096/buggy-version/src.com.jjoe64.graphview.GraphView.java", "BodyUseAPI": [], "Fixed commit": "28cafcfbc35fd42f3b69c1678fdc1c4d5f944548", "Url": "https://api.github.com/repos/xtreme-fredrich-ombico/GraphView", "Date": "2013-08-23T14:22:08Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((replaces[i]) != null) && ((replaces[(i + 1)]) != null)) translatedMessage = translatedMessage.replace(replaces[i], replaces[(i + 1)]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2420/buggy-version/src.bone008.bukkit.deathcontrol.MessageHelper.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "4ad97ff00092baabefefb56135b24a9718bc4299", "Url": "https://api.github.com/repos/Bone008/DeathControl", "Date": "2012-12-13T23:50:38Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((error) < 0) { Robot.driveTrain.driveAutoVoltage(speed, ((-(speed)) * (error))); }else if ((error) == 0) { Robot.driveTrain.driveAutoVoltage(speed, speed); onTarget = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3619/buggy-version/src.org.usfirst.frc.team997.robot.commands.VisionTurnToPeg.java", "BodyUseAPI": ["Robot.driveTrain.driveAutoVoltage(double,double)"], "Fixed commit": "a8609b6711383663547cdae0dd4d770d61923c7d", "Url": "https://api.github.com/repos/Team997Coders/2017SteamBot2", "Date": "2017-07-23T22:47:57Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.peg4d.regex.RegexObject.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((child.getQuantifier()) != null) && (!(\"Times\".equals(child.getTag())))) { continuation.pushHead(child); continuation = continuationBasedConversion(((org.peg4d.regex.RegSeq) (child)), continuation); child.rmQuantifier(); return continuation.get(0); }else { target.concat(continuation); return target; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5403/buggy-version/src.org.peg4d.regex.RegexObjectConverter.java", "BodyUseAPI": ["org.peg4d.regex.RegexObject.rmQuantifier()", "org.peg4d.regex.RegexObject.pushHead(org.peg4d.regex.RegexObject)"], "Fixed commit": "0c99ff023ed8ae1482cb644482118ee96ac16227", "Url": "https://api.github.com/repos/Y--Tamura/peg4d-java", "Date": "2015-01-14T11:40:36Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.peg4d.regex.RegexObject.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rHead instanceof org.peg4d.regex.RegCharSet) && (charSet.contains(rHead))) { if (((charSet.getQuantifier()) != null) && (!(\"Times\".equals(charSet.getTag())))) { return continuationBasedConversion(charSet, continuation); }else { target.concat(continuation); return target; } }else { target.concat(continuation); return target; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5403/buggy-version/src.org.peg4d.regex.RegexObjectConverter.java", "BodyUseAPI": ["org.peg4d.regex.RegCharSet.getQuantifier()", "org.peg4d.regex.RegexObjectConverter.continuationBasedConversion(org.peg4d.regex.RegCharSet,org.peg4d.regex.RegexObject)", "java.lang.String.equals(charSet.getTag())", "org.peg4d.regex.RegCharSet.getTag()"], "Fixed commit": "0c99ff023ed8ae1482cb644482118ee96ac16227", "Url": "https://api.github.com/repos/Y--Tamura/peg4d-java", "Date": "2015-01-14T11:40:36Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getChildAt(i)) instanceof com.github.clans.fab.FloatingActionButton) { final com.github.clans.fab.FloatingActionButton fab = ((com.github.clans.fab.FloatingActionButton) (getChildAt(i))); if ((fab.getTag(R.id.fab_label)) != null) { continue; } addLabel(fab); if (fab == (mMenuButton)) { mMenuButton.setOnClickListener(new com.github.clans.fab.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { toggle(mIsAnimated); } }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3854/buggy-version/library.src.main.java.com.github.clans.fab.FloatingActionMenu.java", "BodyUseAPI": ["com.github.clans.fab.FloatingActionMenu.getChildAt(int)"], "Fixed commit": "45b10197dc0f461e16b167d0afbcf65a42646835", "Url": "https://api.github.com/repos/hannesa2/FloatingActionButton", "Date": "2016-03-29T11:47:15Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (groupDest == 0) { request.getRequestDispatcher((\"Bacheca?user=\" + utenteDest)).forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/907/buggy-version/Progetto_AMM.src.java.M3.servlet.NuovoPost.java", "BodyUseAPI": [], "Fixed commit": "09dd0c2688f988be955d93e3d4093bbc2d52f431", "Url": "https://api.github.com/repos/fatzeri/Progetto_AMM", "Date": "2017-05-21T10:00:16Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (utenteDest == 0) { request.getRequestDispatcher((\"Bacheca?group=\" + groupDest)).forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/907/buggy-version/Progetto_AMM.src.java.M3.servlet.NuovoPost.java", "BodyUseAPI": [], "Fixed commit": "09dd0c2688f988be955d93e3d4093bbc2d52f431", "Url": "https://api.github.com/repos/fatzeri/Progetto_AMM", "Date": "2017-05-21T10:00:16Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (column < ((at.dranner.LightsOut_Android.Board.COLUMN_COUNT) - 1)) toggleLightWithoutSideEffect((index + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1863/buggy-version/src.at.dranner.LightsOut_Android.Board.java", "BodyUseAPI": [], "Fixed commit": "a562e2d7d0038c46c6bb0a97c319170ea388416c", "Url": "https://api.github.com/repos/Suigi/LightsOut.Android", "Date": "2015-06-02T14:04:59Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (column > 0) toggleLightWithoutSideEffect((index - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1863/buggy-version/src.at.dranner.LightsOut_Android.Board.java", "BodyUseAPI": [], "Fixed commit": "a562e2d7d0038c46c6bb0a97c319170ea388416c", "Url": "https://api.github.com/repos/Suigi/LightsOut.Android", "Date": "2015-06-02T14:04:59Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.equalsIgnoreCase(\"Clear\")) { for (int i = 0; i < (DATA.length); i++) { DATA[i][1] = java.lang.Boolean.FALSE; } ((javax.swing.table.AbstractTableModel) (table.getModel())).fireTableDataChanged(); }else if (name.equalsIgnoreCase(\"Back\")) { javax.swing.JPanel parent = ((javax.swing.JPanel) (getParent())); java.awt.CardLayout cardLayout = ((java.awt.CardLayout) (parent.getLayout())); cardLayout.previous(parent); }else { for (int i = 0; i < (dataModel.getRowCount()); i++) { if (selectionModel.isSelectedIndex(i)) { java.lang.System.out.println(((((\"selected index \" + \" \") + i) + \" \") + (name))); } java.lang.System.out.println((((((((\"actionPerformed value : \" + (value)) + \" \") + i) + \" \") + (com.expeditors.eiscanning.ConfigureCustomer.CHECK_COL)) + \" \") + (name))); dataModel.setValueAt(value, i, com.expeditors.eiscanning.ConfigureCustomer.CHECK_COL); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3280/buggy-version/src.com.expeditors.eiscanning.ConfigureCustomer.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "08f217db00f549a701807ceb9dfea108a1bcca9c", "Url": "https://api.github.com/repos/rajdiran/EIScanning-Desktop", "Date": "2017-10-31T09:03:09Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(best_presed)) { intent = new android.content.Intent(v.getContext(), com.example.administrator.ex02.settings.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9084/buggy-version/Ex02.app.src.main.java.com.example.administrator.ex02.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "207b5181214c834d1b0a6ead2a40ceb566202a2e", "Url": "https://api.github.com/repos/idanbe/Ex02", "Date": "2015-12-16T09:05:09Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hit) { java.lang.System.out.println((\"Invalid adid: \" + adid)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1484/buggy-version/src.main.java.net.kafka.consumer.adpv.AdpvCombinedRowkey.java", "BodyUseAPI": [], "Fixed commit": "f8351361763344da8533350c8a5507ff2fda9045", "Url": "https://api.github.com/repos/mayanhui/storm-kafka-consumer", "Date": "2014-01-24T02:39:21Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noValidResponses) { boolean throwException; if (ignoreLeavers) { members = getMembers(); throwException = false; for (org.infinispan.remoting.transport.Address target : rpcCommands.keySet()) { if (members.contains(target)) { throwException = true; break; } } }else { throwException = true; } if (throwException) throw new org.infinispan.util.concurrent.TimeoutException(\"Timed out waiting for valid responses!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7351/buggy-version/core.src.main.java.org.infinispan.remoting.transport.jgroups.JGroupsTransport.java", "BodyUseAPI": [], "Fixed commit": "ec5544ed63ecfd5dc287565fcebfbb71caf57c2f", "Url": "https://api.github.com/repos/wburns/infinispan", "Date": "2015-03-23T18:17:05Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mScannerView) != null) { mScannerView.stopCamera(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1222/buggy-version/app.src.main.java.com.andrewdubs.qrcodescanner.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "44874349b8e7215a2b5c24ee1f6ee7e71c78f8a0", "Url": "https://api.github.com/repos/hidden-sound-team/Hidden-Sound-Android", "Date": "2017-02-06T02:20:23Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (id != null) params.put(\"id\", id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6214/buggy-version/common.src.models.FilterTotalSoldProduct.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Long)"], "Fixed commit": "fabcb44250f63109a126ff71c1caa447b9e7a437", "Url": "https://api.github.com/repos/Askanio007/shop", "Date": "2016-12-23T14:53:24Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(categories.containsKey(category))) { categories.put(category, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6839/buggy-version/src.main.java.com.lge.lai.parser.report.ExcelReport.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)"], "Fixed commit": "11c7a27fb5223deafd8dd958d8ef25d740eeee5e", "Url": "https://api.github.com/repos/jungho1978/lai-parser-lib", "Date": "2015-07-20T10:17:18Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((trList.size()) == 0) { trList = doc.select(\"table:has(input[type=checkbox]) tr\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2690/buggy-version/opacclient.libopac.src.main.java.de.geeksfactory.opacclient.apis.BiBer1992.java", "BodyUseAPI": [], "Fixed commit": "aa2cf1e90d3a76a74b010b2148090468fa1faac4", "Url": "https://api.github.com/repos/johan12345/opacclient", "Date": "2017-05-28T14:56:15Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((i + 3) <= 5) && ((j + 3) <= 6)) { if ((array[i][j]) == (check)) { if ((array[(i + 1)][(j + 1)]) == (check)) { if ((array[(i + 2)][(j + 2)]) == (check)) { if ((array[(i + 3)][(j + 3)]) == (check)) { return true; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8959/buggy-version/CheckGrid.java", "BodyUseAPI": [], "Fixed commit": "be967acbdd2319deafb89b786fca6def24752669", "Url": "https://api.github.com/repos/msweet168/connect4", "Date": "2017-02-27T15:23:09Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (OrderedItemType.NORMAL.equals(orderedItemVo.getOrderedItem().getType())) { operatedOrderVo.getOrdercat().setTotal(((operatedOrderVo.getOrdercat().getTotal()) - (orderedItemVo.getTotalPrice()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8541/buggy-version/src.main.java.com.aooci.ordercat.service.impl.OrderOperationServiceImpl.java", "BodyUseAPI": ["operatedOrderVo.getOrdercat().setTotal(((operatedOrderVo.getOrdercat().getTotal()) - (orderedItemVo.getTotalPrice())))", "com.aooci.ordercat.vo.OrderedItemVo.getTotalPrice()"], "Fixed commit": "79e0430ad668923c3ffabe6e77bda25c873ec6bd", "Url": "https://api.github.com/repos/pangbuddy/ordercat", "Date": "2015-05-11T23:06:33Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.client.RestTemplate.getForObject(java.lang.String,java.lang.Class,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(response.getStatus())) { LOGGER.warn(\"**{}**{} ** api key:{} : Unable to find details for placeid: {}\", response.getStatus(), response.getErrorMessage(), apiKey, searchId); return null; }else { throw new java.lang.RuntimeException((\"Unable to find details for placeid: \" + searchId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2493/buggy-version/src.main.java.develop.odata.etl.services.googleplaces.PlaceService.java", "BodyUseAPI": ["develop.odata.etl.model.googleplaces.mappings.PlaceDetailsResponse.getStatus()", "org.slf4j.Logger.warn(java.lang.String,response.getStatus(),response.getErrorMessage(),java.lang.String,java.lang.String)", "develop.odata.etl.model.googleplaces.mappings.PlaceDetailsResponse.getErrorMessage()"], "Fixed commit": "a1a243d3774edacb5c15121ba63d56d2d35f20dd", "Url": "https://api.github.com/repos/robert0714/GooglePlaceMongo", "Date": "2017-11-27T05:43:59Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (place == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2493/buggy-version/src.main.java.develop.odata.etl.services.googleplaces.jobs.DailyJob.java", "BodyUseAPI": [], "Fixed commit": "a1a243d3774edacb5c15121ba63d56d2d35f20dd", "Url": "https://api.github.com/repos/robert0714/GooglePlaceMongo", "Date": "2017-11-27T05:43:59Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((descriptions.size()) > 0) { org.jsoup.nodes.Element descr = descriptions.get(0); if (descr.hasAttr(\"content\")) { result = descr.attr(\"content\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9241/buggy-version/Qora.src.namewebserver.NamesWebResource.java", "BodyUseAPI": ["org.jsoup.select.Elements.get(int)"], "Fixed commit": "22e00ddc7564d00b34ed7e0bdcecefe7e158ee6a", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2015-06-13T12:35:14Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rgi.common.task.Settings.getFiles(Setting.FileSelection)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4854/buggy-version/Gdal2Tiles.src.com.rgi.g2t.Tiler.java", "BodyUseAPI": [], "Fixed commit": "b56cfcc3cfa95c201a326a3e1d2d6ac523655719", "Url": "https://api.github.com/repos/GitHubRGI/swagd", "Date": "2015-02-23T14:14:41Z"},
{"Line": "=>956", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(backLocation)) { return backLocation; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2693/buggy-version/kns.src.main.java.org.kuali.rice.kns.util.WebUtils.java", "BodyUseAPI": [], "Fixed commit": "99f41b74d6fc28c7d7eccbd9c6cb0d550f590e99", "Url": "https://api.github.com/repos/jwbennet/rice", "Date": "2016-03-11T05:17:02Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.rascalmpl.values.uptr.ProductionAdapter.isDefault(((org.rascalmpl.value.IConstructor) (rule)))) { for (org.rascalmpl.value.IValue arg : org.rascalmpl.values.uptr.ProductionAdapter.getSymbols(((org.rascalmpl.value.IConstructor) (rule)))) { addRulesForSort(vf, ((org.rascalmpl.value.IConstructor) (arg)), syntax, grammar, done); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6792/buggy-version/src.org.rascalmpl.interpreter.types.NonTerminalType.java", "BodyUseAPI": ["org.rascalmpl.values.uptr.ProductionAdapter.getSymbols(org.rascalmpl.value.IValue)"], "Fixed commit": "61f9466d9aadea62e4fd5aab62e7a84e27012eb5", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2016-10-14T20:53:05Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((evt.getObject()) instanceof net.minecraft.entity.player.EntityPlayer) { evt.addCapability(new net.minecraft.util.ResourceLocation(ValkyrienWarfareMod.MODID, \"IAirshipCounter\"), new net.minecraftforge.common.capabilities.ICapabilitySerializable<net.minecraft.nbt.NBTPrimitive>() { ValkyrienWarfareBase.Capability.IAirshipCounterCapability inst = ValkyrienWarfareMod.airshipCounter.getDefaultInstance(); @java.lang.Override public boolean hasCapability(net.minecraftforge.common.capabilities.Capability<?> capability, net.minecraft.util.EnumFacing facing) { return capability == (ValkyrienWarfareMod.airshipCounter); } @java.lang.Override public <T> T getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, net.minecraft.util.EnumFacing facing) { return capability == (ValkyrienWarfareMod.airshipCounter) ? ValkyrienWarfareMod.airshipCounter.<T>cast(inst) : null; } @java.lang.Override public net.minecraft.nbt.NBTPrimitive serializeNBT() { return ((net.minecraft.nbt.NBTPrimitive) (ValkyrienWarfareMod.airshipCounter.getStorage().writeNBT(ValkyrienWarfareMod.airshipCounter, inst, null))); } @java.lang.Override public void deserializeNBT(net.minecraft.nbt.NBTPrimitive nbt) { ValkyrienWarfareMod.airshipCounter.getStorage().readNBT(ValkyrienWarfareMod.airshipCounter, inst, null, nbt); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8136/buggy-version/src.main.java.ValkyrienWarfareBase.EventsCommon.java", "BodyUseAPI": ["net.minecraftforge.event.AttachCapabilitiesEvent.addCapability(net.minecraft.util.ResourceLocation,net.minecraftforge.common.capabilities.ICapabilitySerializable<net.minecraft.nbt.NBTPrimitive>)"], "Fixed commit": "87ead6026a88697f4108b64b87966717e4e25433", "Url": "https://api.github.com/repos/ValkyrienWarfare/Valkyrien-Warfare-Revamped", "Date": "2017-02-06T03:19:40Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1598/buggy-version/lib.impl.src.main.java.net.openhft.collect.impl.hash.HashConfigWrapper.java", "BodyUseAPI": [], "Fixed commit": "6ffd5725d42af5d13d6b4c3d3b6233afa6f2ee46", "Url": "https://api.github.com/repos/OpenHFT/UntitledCollectionsProject", "Date": "2014-05-28T19:41:59Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isLHash(cxt)) { lines(((cxt.keyUnwrappedRawType()) + \" curKey;\")); curKeyAssignment = \"(curKey = this.curKey)\"; }else { curKeyAssignment = \"curKey\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1598/buggy-version/lib.impl-generator.src.main.java.net.openhft.jpsg.collect.algo.hash.HashCursorMethodGenerator.java", "BodyUseAPI": ["net.openhft.jpsg.collect.algo.hash.HashCursorMethodGenerator.keyUnwrappedRawType()", "net.openhft.jpsg.collect.algo.hash.HashCursorMethodGenerator.lines(((cxt.keyUnwrappedRawType()) + \" curKey;\"))"], "Fixed commit": "6ffd5725d42af5d13d6b4c3d3b6233afa6f2ee46", "Url": "https://api.github.com/repos/OpenHFT/UntitledCollectionsProject", "Date": "2014-05-28T19:41:59Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getUsableSpace()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (freeSpaceOnDestination == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/845/buggy-version/ContentBroker.src.main.java.de.uzk.hki.da.core.LoadBalancer.java", "BodyUseAPI": [], "Fixed commit": "df6f279887857aa58419b83e1c1a4b7daab684f8", "Url": "https://api.github.com/repos/da-nrw/DNSCore", "Date": "2014-01-22T15:23:18Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.jar.JarFile.getJarEntry(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entry == null) { entry = jar.getJarEntry(\"plugin.yaml\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7644/buggy-version/server.src.com.chiorichan.plugin.java.JavaPluginLoader.java", "BodyUseAPI": [], "Fixed commit": "7e805fe510745f6ebe6ad5b8d049457668388e20", "Url": "https://api.github.com/repos/ChioriGreene/ChioriWebServer", "Date": "2014-01-13T06:41:58Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (var2 instanceof com.esotericsoftware.kryonet.FrameworkMessage.KeepAlive) { }else if (var2 instanceof com.esotericsoftware.kryonet.FrameworkMessage.Ping) { }else { com.chiorichan.Loader.getLogger().severe(((\"We received an incoming packet from the server but we can't process it because it was not an instance of Packet. (\" + (var2.getClass())) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7644/buggy-version/server.src.com.chiorichan.net.PacketListener.java", "BodyUseAPI": ["com.chiorichan.Loader.getLogger().severe(java.lang.String)", "java.lang.Object.getClass()"], "Fixed commit": "7e805fe510745f6ebe6ad5b8d049457668388e20", "Url": "https://api.github.com/repos/ChioriGreene/ChioriWebServer", "Date": "2014-01-13T06:41:58Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFinished) { java.lang.System.out.println(\"Add complete!\"); waitEnterKey(\"continue\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4947/buggy-version/UI.java", "BodyUseAPI": [], "Fixed commit": "288a56234a534414d3ae277531cdc951ae3f5a20", "Url": "https://api.github.com/repos/cybergartar/Ass0010Sec1", "Date": "2016-09-11T18:47:09Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(dataEntry.getValue()))) { java.lang.String headerName = dataEntry.getKey(); org.amanzi.neo.loader.core.saver.impl.internal.AbstractSynonymsSaver.Property<?> property = properties.get(headerName); if (property == null) { property = createProperty(nodeType, headerName, addNonMappedHeaders); properties.put(headerName, property); } java.lang.Object value = property.parse(data); if (value != null) { result.put(property.getPropertyName(), value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8470/buggy-version/org.amanzi.neo.loader.core.src.org.amanzi.neo.loader.core.saver.impl.internal.AbstractSynonymsSaver.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Fixed commit": "e80cf8c681d14efaa7b3c58d40d87a895f9939be", "Url": "https://api.github.com/repos/AmanziTel/awe-core", "Date": "2012-08-21T10:46:15Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temporaryError) { response.addHeader(\"Retry-After\", \"5\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2987/buggy-version/src.com.t_oster.visicam.VisiCamServer.java", "BodyUseAPI": [], "Fixed commit": "7e989511366135a6109be2c4dafc5843c42feb91", "Url": "https://api.github.com/repos/t-oster/VisiCam", "Date": "2015-08-29T22:54:37Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cc.getHomographyMatrix()) == null) { return servePlaintextError(\"Could not find markers. Is the lasercutter open and your camera calibrated correctly?\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2987/buggy-version/src.com.t_oster.visicam.VisiCamServer.java", "BodyUseAPI": [], "Fixed commit": "7e989511366135a6109be2c4dafc5843c42feb91", "Url": "https://api.github.com/repos/t-oster/VisiCam", "Date": "2015-08-29T22:54:37Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((homographyMatrix) != null) { com.googlecode.javacv.cpp.opencv_core.IplImage in = com.googlecode.javacv.cpp.opencv_core.IplImage.createFrom(img); cvWarpPerspective(in, in, homographyMatrix); return in.getBufferedImage(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2987/buggy-version/src.com.t_oster.visicam.CameraController.java", "BodyUseAPI": [], "Fixed commit": "7e989511366135a6109be2c4dafc5843c42feb91", "Url": "https://api.github.com/repos/t-oster/VisiCam", "Date": "2015-08-29T22:54:37Z"},
{"Line": "=>786", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((first) == null) || ((first) == (last))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4163/buggy-version/src.com.catherine.data_type.MyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "66868bb7a2872eaecdb0cc47c23306943302df6e", "Url": "https://api.github.com/repos/Catherine22/Algorithm", "Date": "2017-02-23T05:44:39Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaRecorder) != null) { try { mediaRecorder.stop(); } catch (java.lang.RuntimeException ex) { onDoneRecordingListener.onFailure(ex.toString()); mediaRecorder.release(); mediaRecorder = null; return; } mediaRecorder.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2663/buggy-version/audiorecorder.src.main.java.com.allyants.audiorecorder.AudioDialog.java", "BodyUseAPI": [], "Fixed commit": "bd195e2eb0ece4c10c0e86008fbef84089d015ed", "Url": "https://api.github.com/repos/jakebonk/AudioRecorder", "Date": "2017-07-16T02:47:31Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.silverpeas.util.StringUtil.isDefined(event.getDescription())) { com.silverpeas.util.html.HtmlCleaner cleaner = new com.silverpeas.util.html.HtmlCleaner(); java.lang.String plainText = \"\"; try { plainText = cleaner.cleanHtmlFragment(event.getDescription()); } catch (java.lang.Exception e) { } iCalEvent.getProperties().add(new net.fortuna.ical4j.model.property.Description(plainText)); iCalEvent.getProperties().add(new com.silverpeas.export.ical.ical4j.Html(event.getDescription())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6996/buggy-version/lib-core.src.main.java.com.silverpeas.export.ical.ical4j.ICal4JICalCodec.java", "BodyUseAPI": ["com.silverpeas.util.html.HtmlCleaner.cleanHtmlFragment(event.getDescription())", "com.silverpeas.calendar.CalendarEvent.getDescription()", "iCalEvent.getProperties().add(com.silverpeas.export.ical.ical4j.Html)", "com.silverpeas.calendar.CalendarEvent.getDescription()"], "Fixed commit": "194728fb9c789f019043728354222a3ee73c8dc3", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2015-06-26T12:58:51Z"},
{"Line": "=>936", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dotmarketing.portlets.structure.model.Field.getDefaultValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((defaultValue.equalsIgnoreCase(\"true\")) || (defaultValue.equalsIgnoreCase(\"1\"))) || (defaultValue.equalsIgnoreCase(\"yes\"))) || (defaultValue.equalsIgnoreCase(\"y\"))) || (defaultValue.equalsIgnoreCase(\"on\"))) defaultValueBoolean = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5119/buggy-version/src.com.dotmarketing.portlets.contentlet.action.EditContentletAction.java", "BodyUseAPI": [], "Fixed commit": "7ecc7edae9232a66dc0b8c16b9caf822bc742e79", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2013-07-03T13:46:55Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map.size()) > 0) { com.github.ucchyocean.ct.DelayedTeleportTask task = new com.github.ucchyocean.ct.DelayedTeleportTask(map, plugin.getCTConfig().getTeleportDelay()); task.startTask(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2172/buggy-version/src.main.java.com.github.ucchyocean.ct.command.CTPCommand.java", "BodyUseAPI": [], "Fixed commit": "7ff8f0a2e1b8077bac3cc4c79f7465620883dcb7", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2013-09-16T05:49:18Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map.size()) > 0) { com.github.ucchyocean.ct.DelayedTeleportTask task = new com.github.ucchyocean.ct.DelayedTeleportTask(map, plugin.getCTConfig().getTeleportDelay()); task.startTask(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2172/buggy-version/src.main.java.com.github.ucchyocean.ct.command.CTPCommand.java", "BodyUseAPI": [], "Fixed commit": "7ff8f0a2e1b8077bac3cc4c79f7465620883dcb7", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2013-09-16T05:49:18Z"},
{"Line": "=>2922", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((version) <= 4) { bufferOffset = 1; }else { bufferOffset = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7203/buggy-version/src.com.zaxsoft.zmachine.ZCPU.java", "BodyUseAPI": [], "Fixed commit": "93d79f64cfd670baef49f9c5345542a32ff8af17", "Url": "https://api.github.com/repos/pillingworthz/zax", "Date": "2012-05-19T15:05:36Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(marker.getTitle().equals(\"Current Position\"))) { for (groupproject.cmsc436.flow.Event e : eventList) { if (((e.getEventName().equals(marker.getTitle())) && ((e.getLatitude()) == (marker.getPosition().latitude))) && ((e.getLongtitude()) == (marker.getPosition().longitude))) { id = e.getEventID(); } } android.content.Intent intent = groupproject.cmsc436.flow.EventActivity.newIntent(getApplicationContext(), id); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4993/buggy-version/app.src.main.java.groupproject.cmsc436.flow.MapActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.model.Marker.getTitle()", "com.google.android.gms.maps.model.Marker.getPosition()", "com.google.android.gms.maps.model.Marker.getPosition()", "e.getEventName().equals(marker.getTitle())"], "Fixed commit": "7964b11fac8aaec78a672792a4c107cb03fe2116", "Url": "https://api.github.com/repos/TrAnMu/CMSC436SemesterProject", "Date": "2017-05-10T06:29:24Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((database.get(java.lang.Integer.parseInt(parsed[1]))) == null) { this.getFourni(0).setInformation(\"Le code du produit que vous cherchez n'existe pas\"); }else { if ((parsed.length) == 2) { this.getFourni(0).setInformation(database.get(java.lang.Integer.parseInt(parsed[1])).toString()); }else { database.put(java.lang.Integer.parseInt(parsed[1]), parsed[2]); this.getFourni(0).setInformation(\"Database mise a jour\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7162/buggy-version/src.M1.ServerDetail.DataBase.java", "BodyUseAPI": ["M1.Interface.PortComposantFourni.setInformation(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.util.HashMap<java.lang.Integer, java.lang.String>.put(int,java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.toString()", "java.util.HashMap<java.lang.Integer, java.lang.String>.get(int)"], "Fixed commit": "47f4ae2895257b1eb9d9191937b97c1588255b4c", "Url": "https://api.github.com/repos/ferchouche/HADL", "Date": "2016-11-27T10:43:32Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (edgeData == null) { e = data.put(from, to, EMPTY); }else { e = data.put(from, to, edgeData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4491/buggy-version/core.src.main.java.rinde.sim.core.graph.TableGraph.java", "BodyUseAPI": ["com.google.common.collect.Table<rinde.sim.core.graph.Point, rinde.sim.core.graph.Point, E>.put(rinde.sim.core.graph.Point,rinde.sim.core.graph.Point,E)"], "Fixed commit": "da1163c67d6a8fc3bc5beecabdcc35215d2e27e7", "Url": "https://api.github.com/repos/rinde/RinSim", "Date": "2012-05-26T19:54:46Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrent) != null) { mCurrent.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5784/buggy-version/BezierView.src.main.java.com.github.wrdlbrnft.bezier.BezierView.java", "BodyUseAPI": [], "Fixed commit": "6a52ee3f0ca37527873fb01bab31f458b34cb9af", "Url": "https://api.github.com/repos/Wrdlbrnft/BezierView", "Date": "2017-12-17T21:41:33Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (n == null) writeNull(token); else addField(token, n.getToken());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7939/buggy-version/bonaparte-core.src.main.java.de.jpaw.bonaparte.core.ExternalizableComposer.java", "BodyUseAPI": ["de.jpaw.bonaparte.core.ExternalizableComposer.addField(de.jpaw.bonaparte.pojos.meta.AlphanumericElementaryDataItem,n.getToken())", "de.jpaw.enums.TokenizableEnum.getToken()"], "Fixed commit": "e8bb25a5a64072b9118b4c2174646dd3cf39701a", "Url": "https://api.github.com/repos/jpaw/bonaparte-java", "Date": "2013-11-21T13:38:03Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (n == null) writeNull(token); else addField(token, n.getToken());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7939/buggy-version/bonaparte-poi.src.main.java.de.jpaw.bonaparte.poi.BaseExcelComposer.java", "BodyUseAPI": ["de.jpaw.bonaparte.poi.BaseExcelComposer.addField(de.jpaw.bonaparte.pojos.meta.AlphanumericElementaryDataItem,n.getToken())", "de.jpaw.enums.TokenizableEnum.getToken()"], "Fixed commit": "e8bb25a5a64072b9118b4c2174646dd3cf39701a", "Url": "https://api.github.com/repos/jpaw/bonaparte-java", "Date": "2013-11-21T13:38:03Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (n == null) writeNull(token); else addField(token, n.getToken());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7939/buggy-version/bonaparte-core.src.main.java.de.jpaw.bonaparte.core.ByteArrayComposer.java", "BodyUseAPI": ["de.jpaw.bonaparte.core.ByteArrayComposer.addField(de.jpaw.bonaparte.pojos.meta.AlphanumericElementaryDataItem,n.getToken())", "de.jpaw.enums.TokenizableEnum.getToken()"], "Fixed commit": "e8bb25a5a64072b9118b4c2174646dd3cf39701a", "Url": "https://api.github.com/repos/jpaw/bonaparte-java", "Date": "2013-11-21T13:38:03Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (n == null) writeNull(token); else addField(token, n.getToken());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7939/buggy-version/bonaparte-core.src.main.java.de.jpaw.bonaparte.core.AppendableComposer.java", "BodyUseAPI": ["de.jpaw.enums.TokenizableEnum.getToken()", "de.jpaw.bonaparte.core.AppendableComposer.addField(de.jpaw.bonaparte.pojos.meta.AlphanumericElementaryDataItem,n.getToken())"], "Fixed commit": "e8bb25a5a64072b9118b4c2174646dd3cf39701a", "Url": "https://api.github.com/repos/jpaw/bonaparte-java", "Date": "2013-11-21T13:38:03Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (module.existResponseTimeRequirement()) { toReturn.getMonitoringRules().addAll(eu.seaclouds.monitor.monitoringdamgenerator.rulesgenerators.RuleSchemaGenerator.fillMonitoringRuleSchema((\"nuroThirtySecondsSlaRuntimeRule\" + (module.getModuleName())), \"30\", \"30\", \"InternalComponent\", module.getModuleName(), \"NUROServerLastTenSecondsAverageRunTime\", parameters, \"Average\", \"InternalComponent\", (\"METRIC > \" + (module.getResponseTime())), (\"NUROServerLastThirtySecondsAverageRunTime_Violation_\" + (module.getModuleName()))).getMonitoringRules()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1051/buggy-version/monitor.monitoring-dam-generator-core.src.main.java.eu.seaclouds.monitor.monitoringdamgenerator.rulesgenerators.NuroRulesGenerator.java", "BodyUseAPI": ["java.lang.Module.getModuleName()", "java.lang.Module.getResponseTime()", "java.lang.Module.getModuleName()", "toReturn.getMonitoringRules().addAll(eu.seaclouds.monitor.monitoringdamgenerator.rulesgenerators.RuleSchemaGenerator.fillMonitoringRuleSchema((\"nuroThirtySecondsSlaRuntimeRule\" + (module.getModuleName())), \"30\", \"30\", \"InternalComponent\", module.getModuleName(), \"NUROServerLastTenSecondsAverageRunTime\", parameters, \"Average\", \"InternalComponent\", (\"METRIC > \" + (module.getResponseTime())), (\"NUROServerLastThirtySecondsAverageRunTime_Violation_\" + (module.getModuleName()))).getMonitoringRules())", "java.lang.Module.getModuleName()", "eu.seaclouds.monitor.monitoringdamgenerator.rulesgenerators.RuleSchemaGenerator.fillMonitoringRuleSchema((\"nuroThirtySecondsSlaRuntimeRule\" + (module.getModuleName())), \"30\", \"30\", \"InternalComponent\", module.getModuleName(), \"NUROServerLastTenSecondsAverageRunTime\", parameters, \"Average\", \"InternalComponent\", (\"METRIC > \" + (module.getResponseTime())), (\"NUROServerLastThirtySecondsAverageRunTime_Violation_\" + (module.getModuleName()))).getMonitoringRules()", "eu.seaclouds.monitor.monitoringdamgenerator.rulesgenerators.RuleSchemaGenerator.fillMonitoringRuleSchema((\"nuroThirtySecondsSlaRuntimeRule\" + (module.getModuleName())),java.lang.String,java.lang.String,java.lang.String,module.getModuleName(),java.lang.String,java.util.Map<java.lang.String, java.lang.String>,java.lang.String,java.lang.String,(\"METRIC > \" + (module.getResponseTime())),(\"NUROServerLastThirtySecondsAverageRunTime_Violation_\" + (module.getModuleName())))"], "Fixed commit": "e983bfce7ff436cf3956916e3abc47658b201021", "Url": "https://api.github.com/repos/MicheleGuerriero/SeaCloudsPlatform", "Date": "2016-05-06T09:29:48Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.util.SparseIntArray.get(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type == (-1)) { if (hasConstraint(codenameOneInputType, TextArea.NUMERIC)) { type = android.text.InputType.TYPE_CLASS_NUMBER; }else if (hasConstraint(codenameOneInputType, TextArea.DECIMAL)) { type = ((android.text.InputType.TYPE_CLASS_NUMBER) | (android.text.InputType.TYPE_NUMBER_FLAG_DECIMAL)) | (android.text.InputType.TYPE_NUMBER_FLAG_SIGNED); }else if (hasConstraint(codenameOneInputType, TextArea.EMAILADDR)) { type = makeNonPredictive(codenameOneInputType, ((android.text.InputType.TYPE_CLASS_TEXT) | (android.text.InputType.TYPE_TEXT_VARIATION_EMAIL_ADDRESS))); }else if (hasConstraint(codenameOneInputType, TextArea.INITIAL_CAPS_SENTENCE)) { type = makeNonPredictive(codenameOneInputType, ((android.text.InputType.TYPE_CLASS_TEXT) | (android.text.InputType.TYPE_TEXT_FLAG_CAP_SENTENCES))); }else if (hasConstraint(codenameOneInputType, TextArea.INITIAL_CAPS_WORD)) { type = makeNonPredictive(codenameOneInputType, ((android.text.InputType.TYPE_CLASS_TEXT) | (android.text.InputType.TYPE_TEXT_FLAG_CAP_WORDS))); }else if (hasConstraint(codenameOneInputType, TextArea.PASSWORD)) { type = (android.text.InputType.TYPE_CLASS_TEXT) | (android.text.InputType.TYPE_TEXT_VARIATION_PASSWORD); }else if (hasConstraint(codenameOneInputType, TextArea.PHONENUMBER)) { type = makeNonPredictive(codenameOneInputType, InputType.TYPE_CLASS_PHONE); }else if (hasConstraint(codenameOneInputType, TextArea.URL)) { type = makeNonPredictive(codenameOneInputType, ((android.text.InputType.TYPE_CLASS_TEXT) | (android.text.InputType.TYPE_TEXT_VARIATION_URI))); }else { type = makeNonPredictive(codenameOneInputType, InputType.TYPE_CLASS_TEXT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8154/buggy-version/Ports.Android.src.com.codename1.impl.android.InPlaceEditView.java", "BodyUseAPI": [], "Fixed commit": "22a2d65ca59b10c850bc29d7a00cf79c7834da4c", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-08-18T19:26:02Z"},
{"Line": "=>1881", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.vmware.bdd.software.mgmt.plugin.monitor.NodeReport>.get(node.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (nodeReport != null) { nodeReport.setStatus(hostStates.get(fqdn)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8910/buggy-version/server.software-mgmt-plugin-ambari.src.main.java.com.vmware.bdd.plugin.ambari.service.AmbariImpl.java", "BodyUseAPI": ["com.vmware.bdd.software.mgmt.plugin.monitor.NodeReport.setStatus(hostStates.get(fqdn))"], "Fixed commit": "8641b64a93ae823c442577de32d01e8adeab8c72", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2015-11-05T07:35:11Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (progress != null) progress.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2517/buggy-version/de.bund.bfr.knime.openkrise.db.src.de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.BackTraceImporter.java", "BodyUseAPI": ["javax.swing.JProgressBar.setVisible(boolean)"], "Fixed commit": "dfaa5e37cd41ebd25516bcba6e81e7c42d440895", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2015-05-05T10:58:07Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateSolved) != null) { jsonObject.put(com.example.karhades_pc.tag_it.NfcTag.JSON_DATE_SOLVED, dateSolved); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5230/buggy-version/app.src.main.java.com.example.karhades_pc.tag_it.NfcTag.java", "BodyUseAPI": [], "Fixed commit": "92785e6bb755c8d66652a45be2bf6c6105bbedf3", "Url": "https://api.github.com/repos/karhades/tag-it", "Date": "2015-10-16T11:27:52Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tracker.level) <= 14) && (((mBatteryStyle) == (com.android.systemui.BatteryMeterView.BATTERY_STYLE_PERCENT)) || ((mBatteryStyle) == (com.android.systemui.BatteryMeterView.BATTERY_STYLE_ICON_PERCENT)))) { mTextPaint.setColor(Color.RED); }else if ((mPercentageColor) == (-2)) { if ((mBatteryStyle) == (com.android.systemui.BatteryMeterView.BATTERY_STYLE_ICON_PERCENT)) { mTextPaint.setColor(mChameleonBatteryColor); }else { mTextPaint.setColor(mChameleonBoltColor); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4223/buggy-version/packages.SystemUI.src.com.android.systemui.BatteryMeterView.java", "BodyUseAPI": [], "Fixed commit": "91adc03ed40453f74bccd384c6133d1aa65684cb", "Url": "https://api.github.com/repos/ThinkingBridge/platform_frameworks_base", "Date": "2014-01-21T01:29:36Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.kylin.storage.hbase.steps.RowValueDecoder.hasMemHungryCountDistinct(rowValueDecoders)) { org.apache.kylin.storage.hbase.cube.v1.coprocessor.observer.ObserverEnabler.logger.info(\"Coprocessor is disabled because there is memory hungry count distinct\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9057/buggy-version/storage-hbase.src.main.java.org.apache.kylin.storage.hbase.cube.v1.coprocessor.observer.ObserverEnabler.java", "BodyUseAPI": [], "Fixed commit": "a035cc27a8c7eaebde5d4db3e1ac031c16b1c045", "Url": "https://api.github.com/repos/terry-chelsea/kylin", "Date": "2015-12-28T07:56:47Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.kylin.storage.hbase.HBaseStorage.overwriteStorageQuery) != null) { cubeStorageQuery = org.apache.kylin.storage.hbase.HBaseStorage.overwriteStorageQuery; }else if (\"v1\".equalsIgnoreCase(org.apache.kylin.common.debug.BackdoorToggles.getHbaseCubeQueryVersion())) { cubeStorageQuery = org.apache.kylin.storage.hbase.HBaseStorage.v1CubeStorageQuery; }else { cubeStorageQuery = org.apache.kylin.storage.hbase.HBaseStorage.v2CubeStorageQuery; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9057/buggy-version/storage-hbase.src.main.java.org.apache.kylin.storage.hbase.HBaseStorage.java", "BodyUseAPI": [], "Fixed commit": "a035cc27a8c7eaebde5d4db3e1ac031c16b1c045", "Url": "https://api.github.com/repos/terry-chelsea/kylin", "Date": "2015-12-28T07:56:47Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kylin.storage.hbase.cube.v1.CubeStorageQuery.translateToAndDimRanges(andFilter.getChildren(),org.apache.kylin.cube.CubeSegment)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (andRanges != null) { result.add(andRanges); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9057/buggy-version/storage-hbase.src.main.java.org.apache.kylin.storage.hbase.cube.v1.CubeStorageQuery.java", "BodyUseAPI": ["java.util.List<java.util.Collection<org.apache.kylin.storage.translate.ColumnValueRange>>.add(java.util.Collection<org.apache.kylin.storage.translate.ColumnValueRange>)"], "Fixed commit": "a035cc27a8c7eaebde5d4db3e1ac031c16b1c045", "Url": "https://api.github.com/repos/terry-chelsea/kylin", "Date": "2015-12-28T07:56:47Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nextX < 1600) { if (grid[nextX][nextY].equals(\"-1\")) { for (int i = 0; i < (width); i++) for (int j = 0; j < (gridHeight); j++) if (grid[i][j].equals(sensorId)) grid[i][j] = \"-1\"; grid[nextX][nextY] = sensorId; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1043/buggy-version/src.br.ufal.ic.mwsn.gui.Environment.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "141ef3ec5bb14ba3622b7c88bc4bbfe6eebe002f", "Url": "https://api.github.com/repos/josmarios/mobile-wsn", "Date": "2016-08-15T01:35:50Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.connectionCatalog.containsKey(client.getSessionId())) { com.rc.transporter.socketio.SocketIoTransportSession.logger.error(\"Duplicate onConnect call\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7856/buggy-version/socketio.src.main.java.com.rc.transporter.socketio.SocketIoTransportSession.java", "BodyUseAPI": [], "Fixed commit": "6c0545ffeb0e8600715e0bba3d364257e91013ca", "Url": "https://api.github.com/repos/RainingClouds/transporter", "Date": "2014-01-15T16:32:50Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rohanx96.admobproto.utils.JSONUtils.getQuestionAt(android.support.v7.app.AppCompatActivity,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((question.layout_type) != 0) { showhiddensolution.setText((((question.answer) + \"\\n\") + (question.explanation))); }else { showhiddensolution.setText((((question.options.split(\";\")[((java.lang.Integer.parseInt(question.answer)) - 1)]) + \"\\n\") + (question.explanation))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3324/buggy-version/app.src.main.java.com.rohanx96.admobproto.ui.CharacterHelper.java", "BodyUseAPI": ["android.widget.TextView.setText((((question.answer) + \"\\n\") + (question.explanation)))", "android.widget.TextView.setText((((question.options.split(\";\")[((java.lang.Integer.parseInt(question.answer)) - 1)]) + \"\\n\") + (question.explanation)))", "question.options.split(java.lang.String)", "java.lang.Integer.parseInt(question.answer)"], "Fixed commit": "d356ec872d23f2e5f11ed1c6e5bc176478538cae", "Url": "https://api.github.com/repos/rohanx96/Perplexy", "Date": "2016-04-06T15:19:28Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rohanx96.admobproto.utils.JSONUtils.getQuestionAt(android.support.v7.app.AppCompatActivity,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((question.layout_type) != 0) { solution.setText((((question.answer) + \"\\n\") + (question.explanation))); }else solution.setText((((question.options.split(\";\")[((java.lang.Integer.parseInt(question.answer)) - 1)]) + \"\\n\") + (question.explanation)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3324/buggy-version/app.src.main.java.com.rohanx96.admobproto.ui.CharacterHelper.java", "BodyUseAPI": ["android.widget.TextView.setText((((question.answer) + \"\\n\") + (question.explanation)))", "android.widget.TextView.setText((((question.options.split(\";\")[((java.lang.Integer.parseInt(question.answer)) - 1)]) + \"\\n\") + (question.explanation)))", "question.options.split(java.lang.String)", "java.lang.Integer.parseInt(question.answer)"], "Fixed commit": "d356ec872d23f2e5f11ed1c6e5bc176478538cae", "Url": "https://api.github.com/repos/rohanx96/Perplexy", "Date": "2016-04-06T15:19:28Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rohanx96.admobproto.utils.JSONUtils.getQuestionAt(android.support.v7.app.AppCompatActivity,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((question.layout_type) != 0) { showhiddensolution.setText((((question.answer) + \"\\n\") + (question.explanation))); }else { showhiddensolution.setText((((question.options.split(\";\")[((java.lang.Integer.parseInt(question.answer)) - 1)]) + \"\\n\") + (question.explanation))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3324/buggy-version/app.src.main.java.com.rohanx96.admobproto.ui.CharacterHelper.java", "BodyUseAPI": ["question.options.split(java.lang.String)", "java.lang.Integer.parseInt(question.answer)", "android.widget.TextView.setText((((question.options.split(\";\")[((java.lang.Integer.parseInt(question.answer)) - 1)]) + \"\\n\") + (question.explanation)))", "android.widget.TextView.setText((((question.answer) + \"\\n\") + (question.explanation)))"], "Fixed commit": "d356ec872d23f2e5f11ed1c6e5bc176478538cae", "Url": "https://api.github.com/repos/rohanx96/Perplexy", "Date": "2016-04-06T15:19:28Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(hasData(list))) { java.util.List<java.lang.Object> objects = new java.util.ArrayList<>(); objects.add(value); setData(list, objects); }else return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7772/buggy-version/src.com.igufguf.kingdomcraft.objects.KingdomData.java", "BodyUseAPI": ["com.igufguf.kingdomcraft.objects.KingdomData.setData(java.lang.String,java.util.List<java.lang.Object>)"], "Fixed commit": "bae65f81c1c9769a73df2c296104951ec0463c61", "Url": "https://api.github.com/repos/jorisguffens/KingdomCraft", "Date": "2017-06-11T16:18:37Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(hasInLocalList(\"changes\", list))) addInLocalList(\"changes\", list);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7772/buggy-version/src.com.igufguf.kingdomcraft.objects.KingdomData.java", "BodyUseAPI": ["com.igufguf.kingdomcraft.objects.KingdomData.addInLocalList(java.lang.String,java.lang.String)"], "Fixed commit": "bae65f81c1c9769a73df2c296104951ec0463c61", "Url": "https://api.github.com/repos/jorisguffens/KingdomCraft", "Date": "2017-06-11T16:18:37Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(hasInLocalList(\"changes\", list))) addInLocalList(\"changes\", list);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7772/buggy-version/src.com.igufguf.kingdomcraft.objects.KingdomData.java", "BodyUseAPI": ["com.igufguf.kingdomcraft.objects.KingdomData.addInLocalList(java.lang.String,java.lang.String)"], "Fixed commit": "bae65f81c1c9769a73df2c296104951ec0463c61", "Url": "https://api.github.com/repos/jorisguffens/KingdomCraft", "Date": "2017-06-11T16:18:37Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.JavaCore.create(org.eclipse.core.resources.IResource)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (unit.isOpen()) { final java.lang.String className = dclsuite.util.DCLUtil.getClassName(unit); result.add(className); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6137/buggy-version/dclsuite.src.dclsuite.util.DCLUtil.java", "BodyUseAPI": ["dclsuite.util.DCLUtil.getClassName(org.eclipse.jdt.core.ICompilationUnit)"], "Fixed commit": "56a4aa7b7777f727df17e9b06f163b555e1d8be2", "Url": "https://api.github.com/repos/rterrabh/DCL", "Date": "2013-11-20T21:54:11Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.JavaCore.create(org.eclipse.core.resources.IResource)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(unit.isOpen())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6137/buggy-version/dclsuite.src.dclsuite.builder.DCLBuilder.java", "BodyUseAPI": [], "Fixed commit": "56a4aa7b7777f727df17e9b06f163b555e1d8be2", "Url": "https://api.github.com/repos/rterrabh/DCL", "Date": "2013-11-20T21:54:11Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.HONEYCOMB)) db.getDatabase().enableWriteAheadLogging();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8433/buggy-version/xutils.src.main.java.org.xutils.DaoConfigFactory.java", "BodyUseAPI": [], "Fixed commit": "92b9e15a5245961c274cc910acf1f2f6969dfd3f", "Url": "https://api.github.com/repos/Alinvor/xUtils3", "Date": "2017-07-15T01:11:04Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canGoBack()) { super.onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8331/buggy-version/SecureChat_android.app.src.main.java.com.chaosinmotion.securechat.activities.AbstractWizardActivity.java", "BodyUseAPI": [], "Fixed commit": "3665dc180a29dd5576e9841979e10b6d54ac9160", "Url": "https://api.github.com/repos/w3woody/securechat", "Date": "2016-04-17T14:01:15Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDrive) != null) { getDataFromApi(); }else { com.github.privacystreams.utils.Logging.error(\"mDrive is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/459/buggy-version/privacystreams-core.src.main.java.com.github.privacystreams.document.BaseGoogleDriveProvider.java", "BodyUseAPI": [], "Fixed commit": "2d03d98f4d2ae44e4b6c096ef3bfd1fab92e1d8f", "Url": "https://api.github.com/repos/MessageOnTap/PrivacyStreams", "Date": "2017-07-10T19:56:35Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedInputStream.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b != (-1)) { header.write(bufferedStream.read()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4941/buggy-version/backend.src.main.java.com.benine.backend.video.MJPEGStreamReader.java", "BodyUseAPI": [], "Fixed commit": "c427317d43351a8791bd342868024c256fb78a73", "Url": "https://api.github.com/repos/doriandekoning/Contextproject-BeNine", "Date": "2016-05-26T14:45:54Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedInputStream.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b != (-1)) { jpeg.write(bufferedStream.read()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4941/buggy-version/backend.src.main.java.com.benine.backend.video.MJPEGStreamReader.java", "BodyUseAPI": [], "Fixed commit": "c427317d43351a8791bd342868024c256fb78a73", "Url": "https://api.github.com/repos/doriandekoning/Contextproject-BeNine", "Date": "2016-05-26T14:45:54Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (textViewEventID.getText().toString().equals(\"\")) { com.rooksoto.parallel.utility.geolocation.ParallelLocation.eventID = \"empty\"; }else { com.rooksoto.parallel.utility.geolocation.ParallelLocation.eventID = textViewEventID.getText().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8372/buggy-version/app.src.main.java.com.rooksoto.parallel.activityhub.enterid.FragmentHubEnterID.java", "BodyUseAPI": ["textViewEventID.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "a418dc1f645f5c34db95afb78c50e73a7999156e", "Url": "https://api.github.com/repos/rooksoto/Parallel", "Date": "2017-03-18T03:19:59Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entity.Update(EDependencyType.OUT)) > 0) comp_changed.add(entity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/543/buggy-version/src.main.java.ru.parallel.octotron.logic.RuleProcessor.java", "BodyUseAPI": ["ru.parallel.octotron.utils.OctoEntityList.add(ru.parallel.octotron.core.OctoEntity)"], "Fixed commit": "79cd46ce0cb8e422fdacd2266d6efd8ba08e648e", "Url": "https://api.github.com/repos/srcc-msu/octotron_core", "Date": "2014-07-08T10:00:38Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((more.getSize()) != 1) { dataRank = more.getSliceView().squeeze().getRank(); }else { more.setShape(new int[]{ 1 }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/610/buggy-version/org.dawb.common.ui.src.org.dawb.common.ui.plot.tools.IDataReductionToolPage.java", "BodyUseAPI": ["more.getSliceView().squeeze()", "org.eclipse.dawnsci.analysis.api.dataset.IDataset.setShape(int[])", "org.eclipse.dawnsci.analysis.api.dataset.IDataset.getSliceView()", "more.getSliceView().squeeze().getRank()"], "Fixed commit": "9aa54adbe036d072294ac874931095101ef825d5", "Url": "https://api.github.com/repos/DawnScience/dawn-common", "Date": "2015-11-13T09:16:01Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mt) != null) mt.detach();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3987/buggy-version/src.ar.com.globant.githubrepository.RepositoriesActivity.java", "BodyUseAPI": [], "Fixed commit": "fd8eaea8ba50ee8c4c199c2b267f5fd7e96cf68c", "Url": "https://api.github.com/repos/nicolaquartieri/GitHubRepository", "Date": "2014-06-27T21:33:40Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message.sentTime) == 0) { message.sentTime = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2375/buggy-version/JazminServer.src.jazmin.server.rpc.RpcSession.java", "BodyUseAPI": [], "Fixed commit": "093dc687bca11c285f3ac81af43ccbe45590b652", "Url": "https://api.github.com/repos/ginkosen/JazminServer", "Date": "2016-06-15T09:48:10Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.isBlackJack()) && (dealer.isBlackJack())) throw new Exceptions.PlayerEndOfGameException(\"/photos/Its_a_Tie.png\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9024/buggy-version/src.Model.ModelLogic.java", "BodyUseAPI": [], "Fixed commit": "fc87bafafedb8e8d97268329217f6c103603c4f3", "Url": "https://api.github.com/repos/Edenm/BlackJack", "Date": "2015-01-04T18:48:57Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((warningBar_) != null) && (warningBar_.isAttached())) beforeWidget = warningBar_;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1857/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.TextEditingTargetWidget.java", "BodyUseAPI": [], "Fixed commit": "543c97519c04708f7537bf0b500857e50d644781", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2012-08-23T23:23:37Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getApplicationContext().getFileStreamPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (file.exists()) { es.softwareprocess.as1.CounterController cntrl = new es.softwareprocess.as1.CounterController(counterList); counterList.setCounterList(cntrl.loadCounters(this.getApplicationContext())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5874/buggy-version/src.es.softwareprocess.as1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7a7e27aea417dd3603b8fab44139217b6251c1fb", "Url": "https://api.github.com/repos/kchow3/as1", "Date": "2014-01-26T03:54:08Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.String) { return ((com.alibaba.fastjson.JSONArray) (com.alibaba.fastjson.JSON.parse(((java.lang.String) (value))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/975/buggy-version/src.main.java.com.alibaba.fastjson.JSONObject.java", "BodyUseAPI": [], "Fixed commit": "3f4e3a864fa0790a9c5706acfb7bc9a592003ef0", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-08-25T02:50:47Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(aGetter.isNull(_ID))) _id = aGetter.getLong(_ID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3588/buggy-version/src.main.java.com.vokal.db.AbstractDataModel.java", "BodyUseAPI": [], "Fixed commit": "e3ad45b399911dd93be76e16ef07fcc432c1f97f", "Url": "https://api.github.com/repos/nick-fedesna/android_database_helper", "Date": "2014-03-20T15:15:21Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (citizenship.equals(\"CAN\")) { citizenship = \"Canada\"; }else if (citizenship.equals(\"OTH\")) { citizenship = \"Other\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3037/buggy-version/scaha.src.com.scaha.beans.loiBean.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "97c8d599bae54c0114b919f851b5822f2551fa6e", "Url": "https://api.github.com/repos/dbigelow25/scaha", "Date": "2014-04-03T03:07:43Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUnitsOfType(unitTypeUnderConstruction).size()) != (currentCount)) { jnibwapi.types.UnitType temp = buildOrder.getNextBuild(false, false); if ((temp.isBuilding()) || ((train(temp)) != (bot.protossClient.SUCCESSFUL))) { buildOrder.queue.add(temp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5047/buggy-version/java.bot.protossClient.java", "BodyUseAPI": [], "Fixed commit": "16c7883e92f95a79639bc43c8c18411927a4c52d", "Url": "https://api.github.com/repos/mp6867a/StarCraft568", "Date": "2016-12-16T06:22:19Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < ((profiles.size()) - 1)) outputString += java.lang.System.lineSeparator();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7871/buggy-version/BrickBreakerStudent.src.brickbreakerstudent.GameProfiles.java", "BodyUseAPI": [], "Fixed commit": "8802581ece0283b00114c2f23d5e485c7bffd1c7", "Url": "https://api.github.com/repos/NCAT-COMP167-Fall2017/MP1-solution", "Date": "2017-09-30T22:44:18Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectedKey.equals(\"end\")) s = init.endServ; else s = init.serviceMap.get(selectedKey);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3026/buggy-version/src.wsc.WSCMutationPipeline.java", "BodyUseAPI": ["init.serviceMap.get(java.lang.String)"], "Fixed commit": "fb8adfdc5dd4677a2fc08e72f0c0417a961a2f89", "Url": "https://api.github.com/repos/silvalex/MultiObjectiveFragmentedTree", "Date": "2017-03-16T08:39:51Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<Message>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (m.getTitle().equals(titleSearch.getText())) { if (((++counter) % 2) != 0) midPanel.add(createMessagePanel(m, false)); else midPanel.add(createMessagePanel(m, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/355/buggy-version/ClientGUI.java", "BodyUseAPI": ["javax.swing.JPanel.add(javax.swing.JPanel)", "javax.swing.JPanel.add(javax.swing.JPanel)", "ClientGUI.createMessagePanel(Message,boolean)", "ClientGUI.createMessagePanel(Message,boolean)"], "Fixed commit": "b21379f853f69012d40882d5b0323372c5fecb0d", "Url": "https://api.github.com/repos/Gokimster/JavaChatCNS", "Date": "2014-11-11T17:05:53Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!forLogging) && (getAction().equals(Stomp.Commands.KEEPALIVE))) { return \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5311/buggy-version/activemq-stomp.src.main.java.org.apache.activemq.transport.stomp.StompFrame.java", "BodyUseAPI": [], "Fixed commit": "4db585da15fee9f4a0e4a69cbbd3e023cd31f224", "Url": "https://api.github.com/repos/apache/activemq", "Date": "2013-10-30T17:55:55Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"describeContents\".equals(entry.getKey())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/228/buggy-version/src.main.java.com.ryanharter.autoparcel.AutoParcelExtension.java", "BodyUseAPI": [], "Fixed commit": "bfaba143737bd820d4b6c045f93446456591c08c", "Url": "https://api.github.com/repos/rharter/auto-value-parcel", "Date": "2015-07-02T22:02:12Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(hasChannel(address.getElement(0)))) { throw new org.jboss.as.clustering.jgroups.subsystem.NoSuchResourceException(address.getElement(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1048/buggy-version/clustering.jgroups.src.main.java.org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemRootResource.java", "BodyUseAPI": ["org.jboss.as.controller.PathAddress.getElement(int)"], "Fixed commit": "83589d6d562b928b12750f47e2ff66926ad0c20f", "Url": "https://api.github.com/repos/rachmatowicz/wildfly", "Date": "2013-04-26T20:12:32Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exFuncs) != null) { for (com.xmlcalabash.functions.XProcExtensionFunctionDefinition xf : exFuncs) { xf.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3109/buggy-version/src.main.java.com.xmlcalabash.core.XProcRuntime.java", "BodyUseAPI": [], "Fixed commit": "10a18f0039a8b082c863b258ec49ff2eb83e822f", "Url": "https://api.github.com/repos/ndw/xmlcalabash1", "Date": "2016-08-14T15:00:40Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((((dog.getName()) == null) || ((dog.getWeight()) == 0)) || ((dog.getHeartbeat()) == 0)) || ((dog.getLat()) == 0.0)) || ((dog.getLon()) == 0.0)) { model.addAttribute(\"error\", \"one or more fields is empty. Please review the form and fill all informaton.\"); }else { model.addAttribute(\"dog\", dog); model.addAttribute(\"message\", ((dog.getName()) + \" has been entered into the system!\")); repo.save(dog); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1009/buggy-version/src.main.java.com.dog.controller.CreateDogController.java", "BodyUseAPI": ["com.dog.repository.DogRepository.save(com.dog.controller.CreateDogs)", "org.springframework.ui.Model.addAttribute(java.lang.String,com.dog.controller.CreateDogs)", "org.springframework.ui.Model.addAttribute(java.lang.String,((dog.getName()) + \" has been entered into the system!\"))", "com.dog.controller.CreateDogs.getName()"], "Fixed commit": "cf3ce52a2e90a16bd6a2edc47d463b110749a14b", "Url": "https://api.github.com/repos/mdost/CodeChallenge", "Date": "2015-07-15T01:34:16Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getBuildContext()) != null) { getBuildContext().refresh(parentFoder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4965/buggy-version/wro4j-maven-plugin.src.main.java.ro.isdc.wro.maven.plugin.Wro4jMojo.java", "BodyUseAPI": [], "Fixed commit": "f62b96186c9dfcdca89a899c12bc942809ff38b0", "Url": "https://api.github.com/repos/UAK-35/wro4j", "Date": "2015-09-05T11:04:10Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isValidRelation(((world.RelativeWorldObject) (wo1)).getRelation(), wo, wo1)) { ((world.RelativeWorldObject) (wo1)).setObj(wo); }else { if (attachTo.getOp().equals(LogicalExpression.Operator.AND)) { toBeRemoved.addAll(tops); break; }else { toBeRemoved.add(wo1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8411/buggy-version/javaprolog.world.World.java", "BodyUseAPI": ["java.util.Set<world.WorldObject>.add(world.WorldObject)", "world.WorldObject.setObj(world.WorldObject)"], "Fixed commit": "f0e71eda026c6711d0b087369067ffe3a3e250f1", "Url": "https://api.github.com/repos/anerud/AIGroup1", "Date": "2014-05-13T00:12:55Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.RelativeEntityNode.getTenseNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((tenseNode != null) && (tenseNode.getTense().equals(Tense.NOW))) { java.util.Set<world.WorldObject> wobjs = world.filterByRelation(matchesArg1.getObjs(), matchesLocation, LogicalExpression.Operator.OR); logic.LogicalExpression<world.WorldObject> le = new logic.LogicalExpression<world.WorldObject>(wobjs, matchesArg1.getOp()); return le; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8411/buggy-version/javaprolog.main.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "f0e71eda026c6711d0b087369067ffe3a3e250f1", "Url": "https://api.github.com/repos/anerud/AIGroup1", "Date": "2014-05-13T00:12:55Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rel instanceof org.apache.calcite.rel.core.Window) { int childFieldCount = ((org.apache.calcite.rel.core.Window) (rel)).getInput().getRowType().getFieldCount(); for (int bit : groupKey) { if (bit >= childFieldCount) { return super.getDistinctRowCount(rel, groupKey, predicate); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1094/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.cost.DrillRelMdDistinctRowCount.java", "BodyUseAPI": ["org.apache.calcite.rel.metadata.RelMdDistinctRowCount.getDistinctRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)"], "Fixed commit": "5528f1fa60c98f6247c32b703852fff6d1755a56", "Url": "https://api.github.com/repos/gparai/drill", "Date": "2017-02-24T08:19:06Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((edu.cmu.chimps.messageontap_api.MessageOnTapPlugin.RESERVED_KEYWORDS.contains(tag.getName())) && ((tag.getRegularExpressions()) != null)) && ((tag.getRegularExpressions().size()) > 0)) throw new java.lang.UnsupportedOperationException(\"Common (built-in) tags cannot have regular expressions set.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/690/buggy-version/api.src.main.java.edu.cmu.chimps.messageontap_api.MessageOnTapPlugin.java", "BodyUseAPI": [], "Fixed commit": "5dc0df2282f55a8cf5450007943663fec4673e9b", "Url": "https://api.github.com/repos/adamyi/MessageOnTap_API", "Date": "2017-08-30T00:20:49Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cep) != null) { return cep.replace(\"-\", \"\").trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3238/buggy-version/app.src.main.java.br.com.wnascimento.entreguei.features.address.Address.java", "BodyUseAPI": [], "Fixed commit": "b5103c8b5e939c6353f69ce3479c06300821e9d9", "Url": "https://api.github.com/repos/wnascimento/entreguei", "Date": "2017-09-18T16:17:52Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iAscendentOrder) target = new com.orientechnologies.orient.core.iterator.ORecordIteratorClass<com.orientechnologies.orient.core.record.ORecordInternal<?>>(database, database, cls.getName(), true, request.isUseCache(), false, locking).setRange(range[0], range[1]); else target = new com.orientechnologies.orient.core.iterator.ORecordIteratorClassDescendentOrder<com.orientechnologies.orient.core.record.ORecordInternal<?>>(database, database, cls.getName(), true, request.isUseCache(), false, locking).setRange(range[0], range[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7171/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLResultsetAbstract.java", "BodyUseAPI": [], "Fixed commit": "1cb4d248130b3ea00dcd0ad1bbb6300bf719bf0b", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-07-14T22:29:48Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current.getRightTree()) == null) stack.pop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1913/buggy-version/src.com.pathfromroottoleafs.PathFromRootToNode.java", "BodyUseAPI": [], "Fixed commit": "2f68d6c00581f0efe4e1f98fadb29ffe3801ed2f", "Url": "https://api.github.com/repos/abhishyam21/trees", "Date": "2016-12-24T09:13:36Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onClickListener) != null) { android.view.View clickedView = getChildAt(getTargetAtCoor(((int) (event.getX())), ((int) (event.getY())))); if (clickedView != null) onClickListener.onClick(clickedView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5675/buggy-version/lib.src.ca.laplanete.mobile.pageddragdropgrid.DragDropGrid.java", "BodyUseAPI": [], "Fixed commit": "254e414e87daba5e18cd05ab4590775329f32925", "Url": "https://api.github.com/repos/mrKlar/PagedDragDropGrid", "Date": "2012-10-31T16:59:12Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (false) { for (int d = 0; d < (interval.numDimensions()); ++d) { java.lang.System.out.println(((((\"[ \" + (min[d])) + \" : \") + (max[d])) + \" ]\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4098/buggy-version/src.main.java.gui.InteractiveRadialSymmetry.java", "BodyUseAPI": [], "Fixed commit": "f7065422ac5abab8c179057ecbf2fe078c5eb848", "Url": "https://api.github.com/repos/milkyklim/RadialSymmetryLocalization", "Date": "2016-12-06T10:36:48Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (false) { for (int d = 0; d < (net.imglib2.view.Views.interval(mpicbg.imglib.wrapper.ImgLib1.wrapFloatToImgLib2(extractImage(source, rectangle, 0)), min, max).numDimensions()); ++d) { long val = net.imglib2.view.Views.interval(mpicbg.imglib.wrapper.ImgLib1.wrapFloatToImgLib2(extractImage(source, rectangle, 0)), min, max).dimension(d); java.lang.System.out.println(val); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4098/buggy-version/src.main.java.gui.InteractiveRadialSymmetry.java", "BodyUseAPI": [], "Fixed commit": "f7065422ac5abab8c179057ecbf2fe078c5eb848", "Url": "https://api.github.com/repos/milkyklim/RadialSymmetryLocalization", "Date": "2016-12-06T10:36:48Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.bind.DatatypeConverter.parseBase64Binary(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((decodedBytes.length) <= (200 * 1024)) { photoTransportService.fildUpload(generatePathByUserId(userId), decodedBytes); result.append(\"errono\", 0); result.append(\"imgUrl\", (((com.netease.roommates.controller.PhotoController.PHOTO_URL_PREFIX) + userId) + (com.netease.roommates.controller.PhotoController.SUFFIX))); return result.build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8369/buggy-version/src.main.java.com.netease.roommates.controller.PhotoController.java", "BodyUseAPI": ["com.netease.user.service.IFileService.fildUpload(java.lang.String,byte[])"], "Fixed commit": "eca4056cbfad3462a50e431e18cfcd8c0ef33b30", "Url": "https://api.github.com/repos/linqinli/Roommates", "Date": "2015-08-08T10:57:56Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.neo4j.shell.kernel.apps.IndexProviderShellApp.getCurrent(org.neo4j.shell.Session)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (current.isNode()) { theIndex = getIndex(index, org.neo4j.graphdb.Node.class, out); }else { theIndex = getIndex(index, org.neo4j.graphdb.Relationship.class, out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4319/buggy-version/community.shell.src.main.java.org.neo4j.shell.kernel.apps.IndexProviderShellApp.java", "BodyUseAPI": [], "Fixed commit": "802c70e6a94697e88fb6f75140210569ccd7edac", "Url": "https://api.github.com/repos/thobe/neo4j", "Date": "2015-09-10T19:59:15Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.m4gik.views.component.MusicPlayerPanel.isRunning()) { com.m4gik.views.component.MusicPlayerPanel.setPlayerLayout(playerLayout); com.m4gik.views.component.MusicPlayerPanel.runDefaultSetup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/302/buggy-version/src.main.java.com.m4gik.views.MainView.java", "BodyUseAPI": [], "Fixed commit": "b7b604134bf84003b6b7662f6a91fa6840ade6c5", "Url": "https://api.github.com/repos/M4GiK/MusicPlayer", "Date": "2014-01-06T11:00:31Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (is == null) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7438/buggy-version/regxmllib.src.main.java.com.sandflow.smpte.klv.KLVInputStream.java", "BodyUseAPI": [], "Fixed commit": "d82c3342642035763e0c316576128c8754a618ec", "Url": "https://api.github.com/repos/sandflow/regxmllib", "Date": "2016-10-07T03:38:35Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ConfReader.instance.heartbeatEnable()) HeartBeater.instance.updateStatusMsgMap(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7837/buggy-version/src.java.org.apache.cassandra.db.Mutation.java", "BodyUseAPI": [], "Fixed commit": "b0e8472c27d480fc01eb5e5a1d14bdee9ddfacc1", "Url": "https://api.github.com/repos/guanxi55nba/key-value-store", "Date": "2014-12-27T19:40:36Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.automatalib.automata.UniversalDeterministicAutomaton<S, I, T, SP, TP>.getTransition(S,I)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (trans != null) { TP prop = automaton.getTransitionProperty(trans); S oldSucc = automaton.getSuccessor(trans); net.automatalib.util.minimizer.Block<S, TransitionEdge.Property<I, TP>> succBlock = mr.getBlockForState(oldSucc); SO newSucc = bm.get(succBlock); output.addTransition(state, input, newSucc, prop); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1691/buggy-version/util.src.main.java.net.automatalib.util.automata.Automata.java", "BodyUseAPI": ["net.automatalib.automata.UniversalDeterministicAutomaton<S, I, T, SP, TP>.getTransitionProperty(T)", "net.automatalib.automata.UniversalDeterministicAutomaton<S, I, T, SP, TP>.getSuccessor(T)"], "Fixed commit": "53004e5b17979984400c377f914cab88b2f97a9d", "Url": "https://api.github.com/repos/misberner/automatalib", "Date": "2014-02-11T15:33:44Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transferred == totalToTransfer) { savedFile = true; org.apache.commons.httpclient.Header modificationTime = mGet.getResponseHeader(\"Last-Modified\"); if (modificationTime != null) { java.util.Date d = com.owncloud.android.lib.common.network.WebdavUtils.parseResponseDate(((java.lang.String) (modificationTime.getValue()))); mModificationTimestamp = (d != null) ? d.getTime() : 0; } }else { client.exhaustResponse(mGet.getResponseBodyAsStream()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3892/buggy-version/src.com.owncloud.android.lib.resources.files.DownloadRemoteFileOperation.java", "BodyUseAPI": [], "Fixed commit": "fb267a0564392adf4938b8f8824e5c89c22776a0", "Url": "https://api.github.com/repos/owncloud/android-library", "Date": "2014-02-28T12:53:56Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c.moveToFirst()) { do { result.add(com.cachirulop.moneybox.manager.MovementsManager.createMovement(c)); } while (c.moveToNext() ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6450/buggy-version/Moneybox.src.com.cachirulop.moneybox.manager.MovementsManager.java", "BodyUseAPI": ["com.cachirulop.moneybox.manager.MovementsManager.createMovement(android.database.Cursor)", "android.database.Cursor.moveToNext()", "java.util.ArrayList<com.cachirulop.moneybox.entity.Movement>.add(com.cachirulop.moneybox.entity.Movement)"], "Fixed commit": "b85372adf7725abd56d5355433542e1d31a57851", "Url": "https://api.github.com/repos/cachirulop/Moneybox", "Date": "2012-03-27T10:15:49Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((invalidCells.size()) <= 0) { saveButton.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4079/buggy-version/RequirementsManagement.src.edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.gui.ListRequirementsPanel.java", "BodyUseAPI": [], "Fixed commit": "4dadc9310247e0c9429232cfb18605fbd71cbfdc", "Url": "https://api.github.com/repos/alexhenning/wpi-suite-tng", "Date": "2013-04-13T21:34:18Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((error.start) != null) { int startOffset = lineNumbering.positionToOffset(error.start); int endOffset = lineNumbering.positionToOffset(error.end); holder.createAnnotation(severities.get(error.type), new com.intellij.openapi.editor.impl.TextRangeInterval(startOffset, endOffset), error.message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2584/buggy-version/src.com.reason.ide.highlight.MerlinErrorAnnotator.java", "BodyUseAPI": ["com.reason.ide.LineNumbering.positionToOffset(error.end)", "com.intellij.lang.annotation.AnnotationHolder.createAnnotation(severities.get(error.type),com.intellij.openapi.editor.impl.TextRangeInterval,error.message)", "java.util.Map<com.reason.merlin.types.MerlinErrorType, com.intellij.lang.annotation.HighlightSeverity>.get(error.type)", "com.reason.ide.LineNumbering.positionToOffset(error.start)"], "Fixed commit": "fc0c39168bd782432da0974991939e3304450380", "Url": "https://api.github.com/repos/reasonml-editor/reasonml-idea-plugin", "Date": "2017-05-06T15:09:55Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(UserAdminUIConstants.INTERNAL_DOMAIN.equalsIgnoreCase(domain))) { domain = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2786/buggy-version/components.user-mgt.org.wso2.carbon.user.mgt.ui.src.main.java.org.wso2.carbon.user.mgt.ui.RoleBean.java", "BodyUseAPI": [], "Fixed commit": "ff52fa9c1319b37b16b49e6ee8f158d77e52d858", "Url": "https://api.github.com/repos/thanujalk/carbon-identity-framework", "Date": "2017-11-24T06:27:17Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (score > 21) { hand.busts(); com.blackjack.client.action.BustAction b = new com.blackjack.client.action.BustAction(panel); b.processAction(event); }else if (score == 21) { panel.dealerTwentyone(); com.blackjack.client.action.HandEndAction h = new com.blackjack.client.action.HandEndAction(panel); h.processAction(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8555/buggy-version/Code.CMSC495-BlackJack.src.com.blackjack.client.action.HitAction.java", "BodyUseAPI": [], "Fixed commit": "f40c7e323ca12a5a25473ec38f8228df768c7e15", "Url": "https://api.github.com/repos/Palmy523/CMSC495-BlackJack", "Date": "2017-03-02T17:45:19Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selfie.processSelfie()) { imageView.setImageBitmap(selfie.getBmpToPost()); txtUpdate.setText(selfie.getStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4792/buggy-version/AutoSelfie.src.main.java.za.co.maiatoday.autoselfie.ui.MainFragment.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(selfie.getBmpToPost())", "android.widget.EditText.setText(selfie.getStatus())", "za.co.maiatoday.autoselfie.util.SelfieStatus.getBmpToPost()", "za.co.maiatoday.autoselfie.util.SelfieStatus.getStatus()"], "Fixed commit": "22fbea5c055c22d928d5108b59db584e66a62d30", "Url": "https://api.github.com/repos/maiatoday/autoSelfie", "Date": "2013-09-24T10:01:50Z"},
{"Line": "=>744", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channelsToProcess.size()) > 1) spim.process.fusion.deconvolution.EfficientBayesianBased.defaultSamePSFForAllChannels = gd.getNextBoolean();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1219/buggy-version/src.main.java.spim.process.fusion.deconvolution.EfficientBayesianBased.java", "BodyUseAPI": [], "Fixed commit": "9041910a39ead4f35bc788b836c86eb4d440d591", "Url": "https://api.github.com/repos/nicost/SPIM_Registration", "Date": "2015-04-18T20:39:43Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spim.fiji.spimdata.SpimData2.getAllIlluminationsSorted(spim.process.fusion.deconvolution.EfficientBayesianBased,spim.process.fusion.deconvolution.EfficientBayesianBased)", "spim.fiji.spimdata.SpimData2.getAllAnglesSorted(spim.process.fusion.deconvolution.EfficientBayesianBased,spim.process.fusion.deconvolution.EfficientBayesianBased)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((anglesToProcess.size()) * (illumsToProcess.size())) > 1) spim.process.fusion.deconvolution.EfficientBayesianBased.defaultSamePSFForAllAnglesIllums = gd.getNextBoolean();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1219/buggy-version/src.main.java.spim.process.fusion.deconvolution.EfficientBayesianBased.java", "BodyUseAPI": [], "Fixed commit": "9041910a39ead4f35bc788b836c86eb4d440d591", "Url": "https://api.github.com/repos/nicost/SPIM_Registration", "Date": "2015-04-18T20:39:43Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (j >= knn) { j = l_rand.nextInt(knn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1255/buggy-version/JSAT.src.jsat.datatransform.visualization.LargeViz.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "1ec6882691cc397bfe009d646960b973bd78dbfa", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2016-12-05T02:10:23Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (monthDiff > 6) { year -= 1; }else if (monthDiff < (-6)) { year += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5948/buggy-version/src.yahoofinance.Utils.java", "BodyUseAPI": [], "Fixed commit": "bdcd1dc3dfbaed557530e769f96b0c7992909cb3", "Url": "https://api.github.com/repos/sstrickx/yahoofinance-api", "Date": "2015-01-25T19:19:24Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.jaguarlandrover.auto.remote.vehicleentry.ServerNode.needsToRequestNewCredentials) { com.jaguarlandrover.auto.remote.vehicleentry.ServerNode.needsToRequestNewCredentials = false; com.jaguarlandrover.auto.remote.vehicleentry.ServerNode.requestRemoteCredentials(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2954/buggy-version/app.src.main.java.com.jaguarlandrover.auto.remote.vehicleentry.ServerNode.java", "BodyUseAPI": [], "Fixed commit": "4c7dfe1bbf15aa0c7aaf0effa563020738e68cd2", "Url": "https://api.github.com/repos/lillialexis/rvi_mobile_unlock", "Date": "2016-10-11T00:46:32Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Helix.Main.infile) == null) { Helix.Main.infile = arg; }else if (arg.equals(\"-noexec\")) { Helix.Main.execute = false; }else if (arg.equals(\"-simulation\")) { Helix.Main.simulation = true; }else { java.lang.System.out.println((\"Invalid argument: \" + arg)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8776/buggy-version/src.Helix.Main.java", "BodyUseAPI": [], "Fixed commit": "e6bc41388eba5a1b8b6eae2399227d8794284d75", "Url": "https://api.github.com/repos/GonMolon/Helix", "Date": "2017-05-31T22:16:16Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["calendarData.getLecturesEventIDs().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (eventIDs == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/926/buggy-version/app.src.main.java.de.hof.university.app.calendar.CalendarInterface.java", "BodyUseAPI": [], "Fixed commit": "c5675605d2719f61abf17aa19e82e4dedca6161a", "Url": "https://api.github.com/repos/HochschuleHofStundenplanapp/AndroidStundenplanHof", "Date": "2017-07-16T11:11:40Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keys[(midiValue - (lowKey))].isDown()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5398/buggy-version/Fermata.src.com.fermata.ui.Piano.java", "BodyUseAPI": [], "Fixed commit": "3d88aa03846b8447e339bb8e6d918f25f2d6c4ac", "Url": "https://api.github.com/repos/FragLegs/Fermata", "Date": "2013-02-05T01:30:49Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(keys[(midiValue - (lowKey))].isDown())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5398/buggy-version/Fermata.src.com.fermata.ui.Piano.java", "BodyUseAPI": [], "Fixed commit": "3d88aa03846b8447e339bb8e6d918f25f2d6c4ac", "Url": "https://api.github.com/repos/FragLegs/Fermata", "Date": "2013-02-05T01:30:49Z"},
{"Line": "=>804", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (output.toString().endsWith(\" \")) { output.delete(((output.length()) - 3), output.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2407/buggy-version/src.de.marcel_kapfer.c.morseconverter.Morse.java", "BodyUseAPI": ["java.lang.StringBuffer.length()", "java.lang.StringBuffer.delete(int,int)", "java.lang.StringBuffer.length()"], "Fixed commit": "c99d23eafdc3fd666a84db239a22bdb765469ba3", "Url": "https://api.github.com/repos/mmk2410/morse-converter", "Date": "2015-01-04T18:33:01Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.access) instanceof leola.ast.OwnableExpr) { ((leola.ast.OwnableExpr) (this.access)).setParent(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5391/buggy-version/src.leola.ast.ChainedMemberAccessExpr.java", "BodyUseAPI": [], "Fixed commit": "34540afe56b108c9f6e235db07bc1793d1174839", "Url": "https://api.github.com/repos/tonysparks/leola", "Date": "2013-03-19T20:12:58Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.unibas.medizin.osce.server.spalloc.model.VarAssignment.getAssignment()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(usedPatients.contains(p.getPatientInRole()))) usedPatients.add(p.getPatientInRole());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2994/buggy-version/OsceManager.src.main.java.ch.unibas.medizin.osce.server.spalloc.SPAllocator.java", "BodyUseAPI": ["ch.unibas.medizin.osce.server.spalloc.model.ValPatient.getPatientInRole()", "java.util.Set<ch.unibas.medizin.osce.domain.PatientInRole>.add(p.getPatientInRole())"], "Fixed commit": "95ac15df97da5673c27f99ce30d49e9339178d69", "Url": "https://api.github.com/repos/nikotsunami/osce", "Date": "2012-08-08T14:58:30Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (o == null) s += \"null\"; else s += o.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5664/buggy-version/src.soot.dexpler.Debug.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "a3d96813f081591fe0bc1c743865ed00f6ba81e7", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2013-10-29T09:41:32Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.preference.PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getBoolean(getString(R.string.key_twenty_four_hour), false)) { sdf = new java.text.SimpleDateFormat(\"kk:mm:ss\"); }else { sdf = new java.text.SimpleDateFormat(\"hh:mm:ss aa\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7490/buggy-version/src.com.tywholland.simpletimer.AlarmApplication.java", "BodyUseAPI": [], "Fixed commit": "f464913e9be4e7d6f73790ae21d37fbf73a33bea", "Url": "https://api.github.com/repos/Tywholland/SimpleTimer", "Date": "2012-10-24T02:06:08Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mCountingDown)) { mAlarmApplication.stopTimer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7490/buggy-version/src.com.tywholland.simpletimer.SimpleTimerActivity.java", "BodyUseAPI": [], "Fixed commit": "f464913e9be4e7d6f73790ae21d37fbf73a33bea", "Url": "https://api.github.com/repos/Tywholland/SimpleTimer", "Date": "2012-10-24T02:06:08Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id > 0) { userObject = new model.UserObject(id, name, headImgUrl, java.lang.System.currentTimeMillis()); session(\"id\", (id + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4143/buggy-version/app.controllers.User.java", "BodyUseAPI": ["controllers.User.session(java.lang.String,java.lang.String)"], "Fixed commit": "54dd74114f2fcf83d93afafd9735615e22fbc87d", "Url": "https://api.github.com/repos/jiangecho/maopao_server", "Date": "2015-05-24T16:40:41Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getWorld().isRemote) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7318/buggy-version/src.main.java.buildcraft.additionalpipes.pipes.PipeItemsTeleport.java", "BodyUseAPI": [], "Fixed commit": "b80663fe85d58b9490b975f9f7bfa595f6bab917", "Url": "https://api.github.com/repos/tcooc/AdditionalPipesBC", "Date": "2015-07-04T19:23:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.event.core.sharedmemory.util.SubscriptionClusterMessage.log.isDebugEnabled()) { org.wso2.carbon.event.core.sharedmemory.util.SubscriptionClusterMessage.log.debug(((((\"Subscription ID: \" + (subscriptionID)) + \" for the topic: \") + (topicName)) + \" is received.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1617/buggy-version/components.event.org.wso2.carbon.event.core.src.main.java.org.wso2.carbon.event.core.sharedmemory.util.SubscriptionClusterMessage.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "05bb3fc25e572283134a8f0075333208fc9c04ed", "Url": "https://api.github.com/repos/daneshk/carbon-utils", "Date": "2015-01-25T18:18:51Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) instanceof prompto.expression.InstanceExpression) id = ((prompto.expression.InstanceExpression) (parent)).getId(); else if ((parent) instanceof prompto.expression.UnresolvedIdentifier) id = ((prompto.expression.UnresolvedIdentifier) (parent)).getId();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2184/buggy-version/Java-Core.src.main.java.prompto.expression.MethodSelector.java", "BodyUseAPI": [], "Fixed commit": "7ebaae0a6e7184ab9c30de02bd1be6751547f370", "Url": "https://api.github.com/repos/prompto/prompto-java", "Date": "2016-12-17T10:47:11Z"},
{"Line": "=>1182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.web.foundation.dao.DAOResult.getInvocationResult()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((responseMap.size()) > 0) { for (int i = 0; i < (responseMap.size()); i++) { java.util.HashMap<java.lang.String, java.lang.Object> resultSetMap = responseMap.get(i); handleAndThrowException(resultSetMap); setAuditAttributes(skuOpr.getProductSkuRecord(), resultSetMap); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7040/buggy-version/PortalBase.src.com.web.bc.systemowner.modules.skumanagement.SkuDefinitionBC.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.util.HashMap<java.lang.String, java.lang.Object>>.get(int)", "java.util.HashMap<java.lang.Integer, java.util.HashMap<java.lang.String, java.lang.Object>>.size()"], "Fixed commit": "730cf39c87f68b9dadc77acf3c01d650db95fc14", "Url": "https://api.github.com/repos/santlalvishwakarma/RootBranch", "Date": "2017-03-13T19:07:42Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strLine.startsWith((\"\\\\\" + \"end{document}\"))) { if (!(grammarItem.isEmptyExcludingTitle())) { if (10 <= (grammarItem.numberOfExamples())) { grammarBook.addGrammarItem(grammarItem); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8289/buggy-version/src.grammar_book.GrammarBookLoader.java", "BodyUseAPI": [], "Fixed commit": "707ec560025a4013a9d20f1896bd4bcb728d6b9f", "Url": "https://api.github.com/repos/vgabor10/language_studyer", "Date": "2016-04-22T19:50:11Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["methodCaches.get(invoker).getBinderEntity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((pars == null) && ((binderEntity.getPars()) == null)) { }else if ((pars.length) != (binderEntity.getPars().length)) { throw new java.lang.IllegalArgumentException(\"\u8f93\u5165\u53c2\u6570\u4e0d\u5339\u914d\"); }else { httpTemplet.setPars(pars); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/463/buggy-version/src.main.java.net.gy.SwiftFrameWork.MVVM.Entity.HttpMethodProxy.java", "BodyUseAPI": ["net.gy.SwiftFrameWork.MVVM.Impl.HttpTemplet.setPars(java.lang.Object[])", "net.gy.SwiftFrameWork.MVVM.Entity.HttpBinderEntity.getPars()"], "Fixed commit": "b9f6efed523f14ea2bd3dbb90b3e7f8fe84b416f", "Url": "https://api.github.com/repos/ganyao114/SwiftFrameWork", "Date": "2016-09-14T05:58:23Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.macisamuele.network.WebApplicationClient.getBaseUrl()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((baseUrl.charAt(((baseUrl.length()) - 1))) == '/') { baseUrl = baseUrl.substring(0, ((baseUrl.length()) - 1)); android.util.Log.v(it.macisamuele.network.WebApplicationClient.TAG, \"the base url of the web application should not end with '/' (automatically removed)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3294/buggy-version/WebApplicationClient.src.it.macisamuele.network.WebApplicationClient.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "36d306ca54928664af0f0330649dc92d9f6966a4", "Url": "https://api.github.com/repos/macisamuele/WebApplicationClient", "Date": "2015-03-23T22:15:25Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.snapsigns.ImageSign>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (originalSize != (mNearbySigns.size())) mContext.sendBroadcast(nearbySignsIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5250/buggy-version/app.src.main.java.com.snapsigns.utilities.FireBaseUtility.java", "BodyUseAPI": [], "Fixed commit": "912f007768bab462be120f062b3f559ba4cf9b63", "Url": "https://api.github.com/repos/fahadhd/SnapSigns", "Date": "2016-12-03T16:16:31Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diffHours >= 24) { diffHours = diffHours - 24; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4482/buggy-version/src.edu.brown.cs32.scheddar.gui.MeetingPane.java", "BodyUseAPI": [], "Fixed commit": "6e53bb39c1b13990246c469f79dd102ab8ec9bd5", "Url": "https://api.github.com/repos/Destitude2112/scheddar", "Date": "2013-05-09T07:36:20Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) { java.lang.System.out.println(\"this is true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2136/buggy-version/src.snippet.Snippet.java", "BodyUseAPI": [], "Fixed commit": "411615d003df17ccf29b8d9f32c4a5b34c9f9bec", "Url": "https://api.github.com/repos/liweidong1216/MyGitHubTest", "Date": "2016-07-08T12:30:25Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tmp != null) { com.itextpdf.text.pdf.SimpleBookmark.shiftPageNumbers(tmp, page_offset, null); bookmarks.addAll(tmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/496/buggy-version/src.com.github.sgelb.sldownloader.model.Pdf.java", "BodyUseAPI": ["com.itextpdf.text.pdf.SimpleBookmark.shiftPageNumbers(java.util.List<java.util.HashMap<java.lang.String, java.lang.Object>>,int,<nulltype>)", "java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.Object>>.addAll(java.util.List<java.util.HashMap<java.lang.String, java.lang.Object>>)"], "Fixed commit": "0af6cbf3c5d2c0483daa83292c74c42e43892928", "Url": "https://api.github.com/repos/sgelb/sldownloader", "Date": "2013-07-20T09:43:44Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(bookmarks.isEmpty())) { destPdf.setOutlines(bookmarks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/496/buggy-version/src.com.github.sgelb.sldownloader.model.Pdf.java", "BodyUseAPI": ["com.itextpdf.text.pdf.PdfCopy.setOutlines(java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.Object>>)"], "Fixed commit": "0af6cbf3c5d2c0483daa83292c74c42e43892928", "Url": "https://api.github.com/repos/sgelb/sldownloader", "Date": "2013-07-20T09:43:44Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.fuwa.bomberman.es.Entity.get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((entityData.getComponent(explosionComponent.getCreator(), de.fuwa.bomberman.game.appstates.ScoreComponent.class)) != null) { entityData.setComponent(explosionComponent.getCreator(), new de.fuwa.bomberman.game.appstates.ScoreComponent(((entityData.getComponent(explosionComponent.getCreator(), de.fuwa.bomberman.game.appstates.ScoreComponent.class).getScore()) + 100))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3958/buggy-version/src.de.fuwa.bomberman.game.appstates.ExplosionAppState.java", "BodyUseAPI": ["de.fuwa.bomberman.es.EntityData.setComponent(explosionComponent.getCreator(),de.fuwa.bomberman.game.appstates.ScoreComponent)", "entityData.getComponent(explosionComponent.getCreator(), de.fuwa.bomberman.game.appstates.ScoreComponent.class).getScore()", "de.fuwa.bomberman.es.EntityData.getComponent(explosionComponent.getCreator(),java.lang.Class)", "de.fuwa.bomberman.game.appstates.ExplosionComponent.getCreator()", "de.fuwa.bomberman.game.appstates.ExplosionComponent.getCreator()"], "Fixed commit": "04d23d24ff49c7adc4f94d8cc73146f81f784a63", "Url": "https://api.github.com/repos/DomenicDev/FuwaMan", "Date": "2017-12-12T16:49:52Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bookmark == null) { throw new javax.ws.rs.WebApplicationException(javax.ws.rs.core.Response.Status.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7155/buggy-version/c05_web_services_restful.bookmark-app.src.main.java.fr.epsi.i4.bookmark.web.BookmarkResource.java", "BodyUseAPI": [], "Fixed commit": "02c0a652e4c98ca8661119332d38e94cdec23cfd", "Url": "https://api.github.com/repos/spoonless/epsi-i4-web-services", "Date": "2013-11-12T12:51:45Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gv15.ReadManager.GetReadFromID(currentSample.FileName,feature.TargetReadID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((insertedPos > (-1)) && (((startCoordinate - ((targetRead.StartPosition) + 1)) + insertedPos) >= 0)) { if ((InsertionArrays.get(type)[insertedPos]) < (feature.InsertedBases.size())) InsertionArrays.get(type)[insertedPos] = feature.InsertedBases.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6442/buggy-version/src.gv15.ReadManager.java", "BodyUseAPI": [], "Fixed commit": "71572db78230c0fafb541c60c0ae8bd97cf813a8", "Url": "https://api.github.com/repos/Shamitha-R/gv15", "Date": "2016-08-12T10:05:32Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.body().text()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(text)) { linkDB.setStatus(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/502/buggy-version/app.HtmlAndEmlParser.java", "BodyUseAPI": [], "Fixed commit": "3a648019d053496860dacb12e8b18a2c4101e1ea", "Url": "https://api.github.com/repos/mindnervestech/adv-email-client", "Date": "2014-05-14T06:16:41Z"},
{"Line": "=>1417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (condition == null) condition = treeutils.trueLit;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9199/buggy-version/OpenJML.src.org.jmlspecs.openjml.esc.JmlAssertionAdder.java", "BodyUseAPI": [], "Fixed commit": "2a293337b947e439e55de5ed58e2c2db5f3e85ab", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2017-02-28T05:13:32Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((ru.sdevteam.vinv.game.Bug) (UpdateBugsIterator.current())).getHp()) == 0) { modelOfLevel.removeBug(((ru.sdevteam.vinv.game.Bug) (UpdateBugsIterator.current()))); mover.deleteBug(((ru.sdevteam.vinv.game.Bug) (UpdateBugsIterator.current()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3337/buggy-version/src.ru.sdevteam.vinv.game.logics.LevelController.java", "BodyUseAPI": ["ru.sdevteam.vinv.game.logics.BugsMover.deleteBug(((ru.sdevteam.vinv.game.Bug) (UpdateBugsIterator.current())))", "ru.sdevteam.vinv.game.Level.removeBug(((ru.sdevteam.vinv.game.Bug) (UpdateBugsIterator.current())))", "ru.sdevteam.vinv.game.Level.Iterator.current()", "ru.sdevteam.vinv.game.Level.Iterator.current()"], "Fixed commit": "114809c08e80012dda8804d0c9a5f8390e1ea759", "Url": "https://api.github.com/repos/SleepyDevelopersTeam/vinvasion", "Date": "2015-07-03T17:14:39Z"},
{"Line": "=>2634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cjmalloy.stratego.Piece.getColor()", "com.cjmalloy.stratego.Board.getPiece(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((flagp != (flag[color])) && (maybe_count == 1)) isBombedFlag[color] = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8271/buggy-version/src.com.cjmalloy.stratego.Board.java", "BodyUseAPI": [], "Fixed commit": "1d8e6a93c1072ffad1e895ee1f5a21661f4bab49", "Url": "https://api.github.com/repos/braathwaate/stratego", "Date": "2016-10-19T00:42:38Z"},
{"Line": "=>761", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((comboSpace.getText()) == null) comboSpace.setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4018/buggy-version/fr.inria.soctrace.tools.ocelotl.ui.src.fr.inria.soctrace.tools.ocelotl.ui.views.OcelotlView.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Combo.setText(java.lang.String)"], "Fixed commit": "f9301508f55e3b614316df4266bb8e1709d676bc", "Url": "https://api.github.com/repos/dosimont/ocelotl", "Date": "2014-06-12T14:55:02Z"},
{"Line": "=>752", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (op.equals(\"Proportion\")) { comboSpace.setText(op); comboSpace.notifyListeners(SWT.Selection, new org.eclipse.swt.widgets.Event()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4018/buggy-version/fr.inria.soctrace.tools.ocelotl.ui.src.fr.inria.soctrace.tools.ocelotl.ui.views.OcelotlView.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Combo.setText(java.lang.String)"], "Fixed commit": "f9301508f55e3b614316df4266bb8e1709d676bc", "Url": "https://api.github.com/repos/dosimont/ocelotl", "Date": "2014-06-12T14:55:02Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((CaldroidFragment.selectedBackgroundDrawable) == (-1)) CaldroidFragment.selectedBackgroundDrawable = R.drawable.cell_bg;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8887/buggy-version/caldroid.src.main.java.com.roomorama.caldroid.CaldroidGridAdapter.java", "BodyUseAPI": [], "Fixed commit": "e6579a180b7142a26a25e846b2b7009df73614b6", "Url": "https://api.github.com/repos/krazykira/Caldroid", "Date": "2015-04-23T12:08:03Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((robPlayerArray.length) == 0) { if ((soldierCard) == true) { clientFacade.soldier((-1), clientFacade.getRobber()); soldierCard = false; robView.closeModal(); }else { clientFacade.robPlayer((-1), clientFacade.getRobber()); robView.closeModal(); clientFacade.refresh(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5875/buggy-version/client.map.MapController.java", "BodyUseAPI": [], "Fixed commit": "36d41173fa34abfafe03bf85133495ba9f507ec5", "Url": "https://api.github.com/repos/JoshuaMathias/catan", "Date": "2015-07-20T18:31:05Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xrtb.db.Database.getUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (u == null) throw new java.lang.Exception((\"Can't find user: \" + name));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1029/buggy-version/src.com.xrtb.db.Database.java", "BodyUseAPI": [], "Fixed commit": "cb7efc732ebbb0f9b69de71824d28df838a41ef0", "Url": "https://api.github.com/repos/benmfaul/XRTB", "Date": "2016-06-03T17:22:22Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((check) == false) { android.content.Intent intent = new android.content.Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS); startActivity(intent); check = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8436/buggy-version/app.src.main.java.demo.kolorob.kolorobdemoversion.fragment.MapRouteDrawingFragment.java", "BodyUseAPI": [], "Fixed commit": "ab5d012091c3af46a29e26a546cc055accf558f0", "Url": "https://api.github.com/repos/Kolorob/Kolorob", "Date": "2016-02-16T05:07:43Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bingo.lang.Strings.isNotBlank(resolvedString)) return ((ODataConstants.QueryOptions.FILTER) + \"=\") + resolvedString; else return resolvedString;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5299/buggy-version/odata-consumer.src.main.java.bingo.odata.consumer.util.ODataQueryTranslator.java", "BodyUseAPI": [], "Fixed commit": "db7a2c343efd7f5bfaad97ac984d5fd0751e79a6", "Url": "https://api.github.com/repos/bingo-open-source/bingo-odata", "Date": "2013-07-08T09:03:25Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d instanceof hudson.model.PasswordParameterDefinition) return (\"\\\"\" + (((hudson.model.PasswordParameterValue) (v)).getValue().getEncryptedValue())) + \"\\\"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1084/buggy-version/src.main.java.org.jenkinsci.plugins.jobparametersummary.Summary.java", "BodyUseAPI": [], "Fixed commit": "d0cb5d24ef37797677caa59758ab55c53440fde9", "Url": "https://api.github.com/repos/jenkinsci/job-parameter-summary-plugin", "Date": "2014-07-26T13:26:31Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((automaton.getStartState()) == state) { startStates[0] = newState; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3391/buggy-version/src.org.jgll.regex.AutomatonOperations.java", "BodyUseAPI": [], "Fixed commit": "d2f422f9ade9c9909ef6f8cd3ac1b6274d268419", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2014-01-07T22:36:42Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkLogin())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2249/buggy-version/LectureChat.app.src.main.java.kr.co.hoonki.lecturechat.Chat.ChatListActivity.java", "BodyUseAPI": [], "Fixed commit": "aa8c104e7b33b8013339c19dabb1652b9cb561b3", "Url": "https://api.github.com/repos/ChaeByunghoon/LectureChat", "Date": "2017-11-12T01:42:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.ai.paas.ipaas.util.StringUtil.isBlank(java.lang.System.getProperty(AuthConstant.MONGO_INFO)))) auth.setMongoInfo(java.lang.System.getProperty(AuthConstant.MONGO_INFO));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/36/buggy-version/idps-web.src.main.java.com.ai.paas.ipaas.utils.AuthUtil.java", "BodyUseAPI": [], "Fixed commit": "6c5fa08dfb993482518d626c567cffc2f9a05653", "Url": "https://api.github.com/repos/AIPaaS/service-sdk-idps", "Date": "2016-09-08T12:23:19Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currency) == (com.github.moneytostr.MoneyToStr.Currency.PER1000)) { fractPart = java.lang.Math.round(((theMoney - intPart) * (com.github.moneytostr.MoneyToStr.NUM1000))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/44/buggy-version/src.main.java.com.github.moneytostr.MoneyToStr.java", "BodyUseAPI": [], "Fixed commit": "7622adbc249f9a1edbad40a0f06d8f3abbe76da6", "Url": "https://api.github.com/repos/javadev/moneytostr-russian", "Date": "2012-06-23T19:00:10Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osgi.cdi.api.extension.annotation.Publish.contracts()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (contracts[i].isAssignableFrom(clazz)) { names[i] = contracts[i].getName(); org.osgi.cdi.impl.integration.ServicePublisher.logger.info(\"Registering OSGi service {} as {}\", clazz.getName(), names[i]); }else { java.lang.RuntimeException e = new java.lang.RuntimeException((((((\"Contract \" + (contracts[i])) + \" is not assignable from \") + clazz) + \". Unable to publish the service \") + clazz)); org.osgi.cdi.impl.integration.ServicePublisher.logger.error(e.getMessage()); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7515/buggy-version/cdi-osgi-core.cdi-osgi-extension-impl.src.main.java.org.osgi.cdi.impl.integration.ServicePublisher.java", "BodyUseAPI": ["java.lang.Class<?>.getName()", "java.lang.Class.getName()", "org.slf4j.Logger.info(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "3b27c9cfe46804b23c83da5b711201b1d2d78424", "Url": "https://api.github.com/repos/arcane86/weld-osgi", "Date": "2011-08-02T09:59:36Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (response.isSuccess()) { if ((response.body()) == null) { bus.post(new org.stepic.droid.events.instructors.FailureLoadInstructorsEvent(mCourse, null)); }else { bus.post(new org.stepic.droid.events.instructors.OnResponseLoadingInstructorsEvent(mCourse, response, retrofit)); } }else { bus.post(new org.stepic.droid.events.instructors.FailureLoadInstructorsEvent(mCourse, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4628/buggy-version/app.src.main.java.org.stepic.droid.view.fragments.CourseDetailFragment.java", "BodyUseAPI": ["retrofit.Response<org.stepic.droid.web.UserStepicResponse>.body()", "org.stepic.droid.view.fragments.CourseDetailFragment.2.post(org.stepic.droid.events.instructors.OnResponseLoadingInstructorsEvent)"], "Fixed commit": "b414c0090a86a0eb0ac6b9b1b70615b045ee902c", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2016-06-02T12:45:37Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.gouv.etalab.mastodon.client.Entities.Notification.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((status.getContents()) != null) { holder.notification_status_content.setText(status.getContents(), TextView.BufferType.SPANNABLE); }else { content = status.getContent(); if (content != null) { content = content.replaceAll(\"</p>\", \"<br/><br/>\"); content = content.replaceAll(\"<p>\", \"\"); if (content.endsWith(\"<br/><br/>\")) content = content.substring(0, ((content.length()) - 10)); } android.text.SpannableString spannableString = fr.gouv.etalab.mastodon.helper.Helper.clickableElements(context, content, ((status.getReblog()) != null ? status.getReblog().getMentions() : status.getMentions()), ((status.getReblog()) != null ? status.getReblog().getEmojis() : status.getEmojis()), position, true, this); holder.notification_status_content.setText(spannableString, TextView.BufferType.SPANNABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5850/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.drawers.NotificationsListAdapter.java", "BodyUseAPI": ["fr.gouv.etalab.mastodon.client.Entities.Status.getEmojis()", "fr.gouv.etalab.mastodon.client.Entities.Status.getContent()", "status.getReblog().getMentions()", "fr.gouv.etalab.mastodon.client.Entities.Status.getReblog()", "fr.gouv.etalab.mastodon.client.Entities.Status.getContents()", "android.widget.TextView.setText(status.getContents(),TextView.BufferType.SPANNABLE)", "fr.gouv.etalab.mastodon.client.Entities.Status.getReblog()", "fr.gouv.etalab.mastodon.client.Entities.Status.getReblog()", "status.getReblog().getEmojis()", "fr.gouv.etalab.mastodon.helper.Helper.clickableElements(android.content.Context,java.lang.String,((status.getReblog()) != null ? status.getReblog().getMentions() : status.getMentions()),((status.getReblog()) != null ? status.getReblog().getEmojis() : status.getEmojis()),int,boolean,fr.gouv.etalab.mastodon.drawers.NotificationsListAdapter)", "fr.gouv.etalab.mastodon.client.Entities.Status.getMentions()", "fr.gouv.etalab.mastodon.client.Entities.Status.getReblog()"], "Fixed commit": "30bc6089d9551c5b60ec328956201e04ddf8c172", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-16T18:14:54Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (widgetModel != null) setExecutionMode(widgetModel.getExecutionMode());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8097/buggy-version/applications.plugins.org.csstudio.opibuilder.src.org.csstudio.opibuilder.properties.AbstractWidgetProperty.java", "BodyUseAPI": ["org.csstudio.opibuilder.properties.AbstractWidgetProperty.setExecutionMode(widgetModel.getExecutionMode())", "org.csstudio.opibuilder.model.AbstractWidgetModel.getExecutionMode()"], "Fixed commit": "71228ac7701656e67d9c1a6a24faa844bc082ae8", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2012-09-10T20:44:13Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cumulate_p == 1) && ((this.around[i]) == previous)) return next_random(previous);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2273/buggy-version/Case.java", "BodyUseAPI": ["Case.next_random(Case)"], "Fixed commit": "ae680017d4a4a8ab7312165e83904cf9b524ad1a", "Url": "https://api.github.com/repos/cubouyaka/AntTower", "Date": "2017-05-10T12:20:21Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ga.gradtech.Cards.NotePad.NotepadSQLiteHelper.getInstance(mainActivity).getNotepadItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cursor.getCount()) == 0) { android.util.Log.d(com.ga.gradtech.Cards.NotePad.NotepadViewHolderConfigurer.TAG, \"initNotePad: TABLE IS EMPTY <<<<<=========\"); java.lang.String initText = \"My Notes\"; db.insertNotepadItem(1, \"FirstNote\", initText); vh9.mEditText.setText(initText); }else { java.lang.String description = cursor.getString(cursor.getColumnIndex(NotepadSQLiteHelper.COL_NOTEPAD_DESCRIPTION)); android.util.Log.d(com.ga.gradtech.Cards.NotePad.NotepadViewHolderConfigurer.TAG, java.lang.String.format(\"onCreate: description: %s \", description)); vh9.mCurrentText.setText(description); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7250/buggy-version/GradTech.app.src.main.java.com.ga.gradtech.Cards.NotePad.NotepadViewHolderConfigurer.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(NotepadSQLiteHelper.COL_NOTEPAD_DESCRIPTION)", "android.database.Cursor.getString(cursor.getColumnIndex(NotepadSQLiteHelper.COL_NOTEPAD_DESCRIPTION))"], "Fixed commit": "0c08ab082f8e0fbd01ed5b9badd4df8bfaf1b717", "Url": "https://api.github.com/repos/jamie-ayer/gradtech", "Date": "2016-04-20T17:23:40Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchMenu) != null) { searchMenu.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4727/buggy-version/src.io.recom.howabout.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7ee73cb11d0e4cd33eaa0b487507bb0c8ee19fc4", "Url": "https://api.github.com/repos/recomio/howabout-android", "Date": "2013-05-17T17:41:16Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchMenu) != null) { searchMenu.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4727/buggy-version/src.io.recom.howabout.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7ee73cb11d0e4cd33eaa0b487507bb0c8ee19fc4", "Url": "https://api.github.com/repos/recomio/howabout-android", "Date": "2013-05-17T17:41:16Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.equals(query.field, \"premiere\")) { tableQuery = com.microsoft.windowsazure.mobileservices.table.query.QueryOperations.field(query.field).eq(val(java.lang.String.valueOf(query.id))); }else { tableQuery = com.microsoft.windowsazure.mobileservices.table.query.QueryOperations.field(query.field).eq(val(query.id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6127/buggy-version/app.src.main.java.com.example.dscs.preview.MovieInfoGatherer.java", "BodyUseAPI": ["com.example.dscs.preview.MovieInfoGatherer.val(java.lang.String)", "com.microsoft.windowsazure.mobileservices.table.query.QueryOperations.field(query.field)", "com.microsoft.windowsazure.mobileservices.table.query.QueryOperations.field(query.field).eq(val(java.lang.String.valueOf(query.id)))", "java.lang.String.valueOf(query.id)", "com.microsoft.windowsazure.mobileservices.table.query.QueryOperations.field(query.field)", "com.microsoft.windowsazure.mobileservices.table.query.QueryOperations.field(query.field).eq(val(query.id))", "com.example.dscs.preview.MovieInfoGatherer.val(query.id)"], "Fixed commit": "eea76e18c7eb3c80aca223a21a71f2580012dabd", "Url": "https://api.github.com/repos/bmilovanovic/dscs", "Date": "2017-02-05T23:36:17Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"restart\".equals(command)) { execute(\"restart.sh\"); }else if (\"setallmax\".equals(command)) { sendCommand(\"set 1 1 allmax\"); }else { doGet(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2886/buggy-version/src.main.java.com.rfview.servlets.RFMazeServlet.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "e24cb840487f566abc5656c2d82a9375617f52cb", "Url": "https://api.github.com/repos/rfmaze2012/rfmaze-client", "Date": "2017-06-12T01:07:35Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"restart\".equals(command)) { execute(\"restart.sh\"); }else if (\"setallmax\".equals(command)) { sendCommand(\"set 1 1 allmax\"); }else { doGet(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2886/buggy-version/src.main.java.com.rfview.servlets.RFMazeAdminServlet.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "e24cb840487f566abc5656c2d82a9375617f52cb", "Url": "https://api.github.com/repos/rfmaze2012/rfmaze-client", "Date": "2017-06-12T01:07:35Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (matcher.group(4).equals(\"[\")) maxLimit = maxLimit - 1.0E-10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3969/buggy-version/bundles.core.org.openhab.core.transform.src.main.java.org.openhab.core.transform.internal.service.ScaleTransformationService.java", "BodyUseAPI": [], "Fixed commit": "196bfc6f057f0dba00ecc4eacde838db19555773", "Url": "https://api.github.com/repos/juri8/openhab", "Date": "2015-01-22T14:08:29Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (matcher.group(4).equals(\"]\")) maxLimit = maxLimit + 1.0E-10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3969/buggy-version/bundles.core.org.openhab.core.transform.src.main.java.org.openhab.core.transform.internal.service.ScaleTransformationService.java", "BodyUseAPI": [], "Fixed commit": "196bfc6f057f0dba00ecc4eacde838db19555773", "Url": "https://api.github.com/repos/juri8/openhab", "Date": "2015-01-22T14:08:29Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.LOLLIPOP)) { android.webkit.CookieManager.getInstance().setAcceptThirdPartyCookies(inAppWebView, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6750/buggy-version/src.android.InAppBrowser.java", "BodyUseAPI": [], "Fixed commit": "00e11710097bdb30610657a7444923ae1551f075", "Url": "https://api.github.com/repos/ngyewch/cordova-plugin-inappbrowser", "Date": "2016-04-07T11:40:08Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (riter.isValid()) { while ((lindex > (riter.index())) && (riter.advance())); if ((riter.isValid()) && (liter.isValid())) { rindex = riter.index(); while ((rindex > (liter.index())) && (liter.advance())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5395/buggy-version/src.com.spbsu.commons.math.vectors.VecTools.java", "BodyUseAPI": ["com.spbsu.commons.math.vectors.VecIterator.advance()", "com.spbsu.commons.math.vectors.VecIterator.index()", "com.spbsu.commons.math.vectors.VecIterator.isValid()", "com.spbsu.commons.math.vectors.VecIterator.index()"], "Fixed commit": "e54f44f6c4523f4f7792a2e9019825ca5244e164", "Url": "https://api.github.com/repos/spbsu-ml-community/commons", "Date": "2014-04-18T13:54:33Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.N)) { outputFileUri = android.net.Uri.fromFile(tmpFile); }else { outputFileUri = android.support.v4.content.FileProvider.getUriForFile(getActivity(), ((getActivity().getApplicationContext().getPackageName()) + \".provider\"), tmpFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2079/buggy-version/app.src.main.java.com.kiminonawa.mydiary.entries.diary.DiaryPhotoBottomSheet.java", "BodyUseAPI": [], "Fixed commit": "c1363bb1babacb84f5eb65fe4afd9f6a1ca66678", "Url": "https://api.github.com/repos/DaPATHK/MyDiary", "Date": "2017-04-12T09:30:21Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (refererParam == null) model.addAttribute(\"previousPage\", referer); else model.addAttribute(\"previousPage\", refererParam);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7471/buggy-version/src.main.java.ru.hd.olaf.mvc.controller.DataController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "22e6cabd204c2aeac61a7dcb48815d6cb65d86e8", "Url": "https://api.github.com/repos/Cistercian/WebAccountManager3", "Date": "2017-05-19T03:07:33Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sLoadingView) == null) { addLoadingView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8037/buggy-version/sjylib.src.main.java.com.zx.xsk.views.LoadingRelativeLayout.java", "BodyUseAPI": [], "Fixed commit": "5b05846d1f87626959ea7ab4306fad57ddbb286a", "Url": "https://api.github.com/repos/shajinyang/SjyndriodLibrarys", "Date": "2017-10-18T05:49:06Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((liked_view) != null) ((com.tattood.tattood.TattooRecyclerViewAdapter) (liked_view.getAdapter())).removeTattoo(t);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4198/buggy-version/app.src.main.java.com.tattood.tattood.User.java", "BodyUseAPI": [], "Fixed commit": "8a02709953608275275007d1f365410e81dd41e8", "Url": "https://api.github.com/repos/tattood/tattood-android", "Date": "2017-04-26T14:38:23Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((liked_view) != null) ((com.tattood.tattood.TattooRecyclerViewAdapter) (liked_view.getAdapter())).addTattoo(t);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4198/buggy-version/app.src.main.java.com.tattood.tattood.User.java", "BodyUseAPI": [], "Fixed commit": "8a02709953608275275007d1f365410e81dd41e8", "Url": "https://api.github.com/repos/tattood/tattood-android", "Date": "2017-04-26T14:38:23Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(url_string.contains(\".\"))) { return url_string; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8131/buggy-version/app.src.main.java.com.example.julia.webbrowsersimple.IndividualBrowserControlCenter.java", "BodyUseAPI": [], "Fixed commit": "b18c8abc32f6b1ce8434a432f732188aa3cd66a3", "Url": "https://api.github.com/repos/jlee512/SWEN502-WebBrowserSimple", "Date": "2017-10-22T00:42:43Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (com.magnet.max.android.User.getCurrentUser())) { com.magnet.max.android.User.getCurrentUser().setAvatar(bitmap, null, new com.magnet.max.android.ApiCallback<java.lang.String>() { @java.lang.Override public void success(java.lang.String s) { com.magnet.magnetchat.util.AppLogger.info(this, (\"Set user avatar successfuly \" + s)); } @java.lang.Override public void failure(com.magnet.max.android.ApiError apiError) { com.magnet.magnetchat.util.AppLogger.error(this, java.lang.String.format(\"Failed to set user avatar %s\", apiError.toString())); } }); }else { showMessage(\"Current user session timeout, please logout and login\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1088/buggy-version/Messenger.app.src.main.java.com.magnet.magnetchat.ui.activities.sections.register.EditProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "e9ba63088c77dcad0f4015a684ff8cfa436c772b", "Url": "https://api.github.com/repos/magnetsystems/message-samples-android", "Date": "2016-02-19T20:03:03Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.melonbrew.fe.database.databases.ItemDB.getAccounts()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((topAccounts.size()) > size) { topAccounts.subList(0, (size - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7052/buggy-version/src.org.melonbrew.fe.database.databases.ItemDB.java", "BodyUseAPI": ["java.util.List<org.melonbrew.fe.database.Account>.subList(int,int)"], "Fixed commit": "52850a1916f83349b6c1ee4f19bdc23e901e8e39", "Url": "https://api.github.com/repos/niccholaspage/Fe", "Date": "2013-09-02T17:41:16Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.EntityManager.createQuery(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((q.getResultList().size()) > 0) { return q.getSingleResult(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4149/buggy-version/src.main.java.au.gov.nsw.records.search.model.Item.java", "BodyUseAPI": ["javax.persistence.TypedQuery<au.gov.nsw.records.search.model.AccessDirection>.getSingleResult()"], "Fixed commit": "ffa4ee5ee3032b5a2dcc37effbe904ef4cca9930", "Url": "https://api.github.com/repos/srnsw/State-Records-Search", "Date": "2013-05-07T03:57:17Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.iljabooij.garmintrainer.model.Length.createLengthInMeters(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((initial.getValue()) == 0) && ((trackPoint.getDistance().getValue()) > 0)) { initial = trackPoint.getDistance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8064/buggy-version/src.java.nl.iljabooij.garmintrainer.model.Lap.java", "BodyUseAPI": ["nl.iljabooij.garmintrainer.model.TrackPoint.getDistance()"], "Fixed commit": "9bb9f07ddf0692a10d00f06887b442f570aa49a9", "Url": "https://api.github.com/repos/bluebottle/is.illuminati.block.spyros", "Date": "2014-01-11T21:47:54Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getState()) != (CalculatorState.GRAPHING)) { setState(CalculatorState.INPUT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9238/buggy-version/mobile.src.main.java.com.android2.calculator3.GraphingCalculator.java", "BodyUseAPI": [], "Fixed commit": "1eb8d4607bb3089fabfb44e52fb521867cb71f5f", "Url": "https://api.github.com/repos/Xlythe/Calculator", "Date": "2015-07-11T00:05:28Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (com.example.mcw0805.wheres_my_stuff.Model.ItemType.LOST)) { ((com.example.mcw0805.wheres_my_stuff.Model.LostItem) (item)).setReward(ds.getValue(com.example.mcw0805.wheres_my_stuff.Model.LostItem.class).getReward()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6787/buggy-version/app.src.main.java.com.example.mcw0805.wheres_my_stuff.Controller.Dashboard.java", "BodyUseAPI": [], "Fixed commit": "5616dca4e7cc1967a252e9a57be43d422d26c102", "Url": "https://api.github.com/repos/mcw0805/wheres-my-stuff", "Date": "2017-07-17T04:58:17Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["IC.Symbols.ClassSymbolTable.getSymbol(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((locationSym.getKind()) == (IC.Types.Kind.MemberVariable)) { location.setSymbolType(locationSym.getType()); }else { if (((locationSym.getKind()) == (IC.Types.Kind.Method)) || ((locationSym.getKind()) == (IC.Types.Kind.Method))) { throw new IC.SemanticChecks.SemanticError(location.getLine(), java.lang.String.format(\"None field location Identifier. %s.\", locationId)); }else { throw new IC.SemanticChecks.SemanticError(location.getLine(), java.lang.String.format(\"Identifier is not defined in location %s.\", locationId)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2215/buggy-version/src.IC.SemanticChecks.TypesCheck.java", "BodyUseAPI": ["IC.Symbols.Symbol.getType()", "IC.Symbols.Symbol.getKind()", "IC.Symbols.Symbol.getKind()", "IC.AST.VariableLocation.setSymbolType(locationSym.getType())"], "Fixed commit": "ae4430d2e8076436168d41295604b5c2aa428312", "Url": "https://api.github.com/repos/sharon-rozinsky/ICCompiler", "Date": "2014-12-18T22:24:43Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doubleRoundedValue < (oceanHeight)) doubleRoundedValue = oceanHeight;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9023/buggy-version/isoScratch.src.mapGenerator.MapGenerator.java", "BodyUseAPI": [], "Fixed commit": "8dfe11715cbc7070f54d83247ef666035c3033f2", "Url": "https://api.github.com/repos/monopolyman900/isoScratch", "Date": "2015-05-24T18:25:02Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clazz == (byte[].class)) { return ((T) (com.alibaba.fastjson.util.TypeUtils.castToBytes(obj))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8163/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "96a77e096f660daaea0c56b624c11f163baebc35", "Url": "https://api.github.com/repos/rabbitgyk/fastjson", "Date": "2014-10-02T16:55:58Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (patient != null) { clinicName = patient.getClinic().getName(); }else if ((likelyPatientDocIds != null) && ((likelyPatientDocIds.size()) > 0)) { clinicName = allPatients.get(likelyPatientDocIds.get(0)).getClinic().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1775/buggy-version/presentation.src.main.java.org.motechproject.tama.web.mapper.CallLogViewMapper.java", "BodyUseAPI": ["patient.getClinic().getName()", "org.motechproject.tama.domain.Patient.getClinic()"], "Fixed commit": "a3d433b96f3dc30e9730756f720996783d3fcb48", "Url": "https://api.github.com/repos/motech/TAMA-Web", "Date": "2011-11-25T11:36:32Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((option.equals(\"no\")) || (option.equals(\"n\"))) { exit = false; }else if ((option.equals(\"yes\")) || (option.equals(\"y\"))) { }else { java.lang.System.out.println(\"invalid input back to select bid item\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8006/buggy-version/src.auctionClient.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "9bea4ff28a767720409dbb99204b5ee799f0715c", "Url": "https://api.github.com/repos/fuhchang/DAS_assignment", "Date": "2016-11-05T13:34:16Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pic02_num) <= 49) { ready_2 = new com.badlogic.gdx.graphics.g2d.Sprite(new com.badlogic.gdx.graphics.Texture(Gdx.files.internal((((location) + (pic02_num)) + \".png\")))); }else { ready_2 = new com.badlogic.gdx.graphics.g2d.Sprite(new com.badlogic.gdx.graphics.Texture(Gdx.files.internal((((location) + (pic02_num)) + \".jpg\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2060/buggy-version/ThisOrThat.src.com.OxiStudios.ThisOrThat.Game.RandomPhoto.java", "BodyUseAPI": ["Gdx.files.internal(java.lang.String)", "Gdx.files.internal(java.lang.String)"], "Fixed commit": "e1c604348c9e60e1b29ce0d37a10ead2f6c96d83", "Url": "https://api.github.com/repos/OxiStudios/ThisOrThat", "Date": "2014-02-24T04:26:43Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pic01_num) <= 49) { ready_1 = new com.badlogic.gdx.graphics.g2d.Sprite(new com.badlogic.gdx.graphics.Texture(Gdx.files.internal((((location) + (pic01_num)) + \".png\")))); }else { ready_1 = new com.badlogic.gdx.graphics.g2d.Sprite(new com.badlogic.gdx.graphics.Texture(Gdx.files.internal((((location) + (pic01_num)) + \".jpg\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2060/buggy-version/ThisOrThat.src.com.OxiStudios.ThisOrThat.Game.RandomPhoto.java", "BodyUseAPI": ["Gdx.files.internal(java.lang.String)", "Gdx.files.internal(java.lang.String)"], "Fixed commit": "e1c604348c9e60e1b29ce0d37a10ead2f6c96d83", "Url": "https://api.github.com/repos/OxiStudios/ThisOrThat", "Date": "2014-02-24T04:26:43Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URI.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (relativeFilePath.endsWith(java.io.File.separator)) { relativeFilePath = relativeFilePath.substring(0, ((relativeFilePath.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8550/buggy-version/syncany-util.src.main.java.org.syncany.util.FileUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "295bd59d00015b6a696d50738f14e0cd7dbc4c52", "Url": "https://api.github.com/repos/gtrefs/syncany", "Date": "2013-12-15T01:52:28Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yunzhanghu.redpacketdemo.utils.GridItemDecoration.getSpanCount(android.support.v7.widget.RecyclerView)", "parent.getAdapter().getItemCount()", "android.support.v7.widget.RecyclerView.getChildAdapterPosition(android.view.View)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isLastColumn(parent, itemPosition, spanCount, childCount)) { outRect.set(0, 0, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7485/buggy-version/RedPacketDemo.app.src.main.java.com.yunzhanghu.redpacketdemo.utils.GridItemDecoration.java", "BodyUseAPI": [], "Fixed commit": "1e8d8ea7b2e7ae7a674a249e4b3f6c18bf3e9fd4", "Url": "https://api.github.com/repos/YunzhanghuOpen/AndroidRedPacketDemo", "Date": "2016-12-08T07:45:57Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showParentMembers) { span = rowHeader.getSpans().get(hierarchyIndex); }else { span = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3676/buggy-version/src.main.java.com.eyeq.pivot4j.ui.AbstractTableBuilder.java", "BodyUseAPI": [], "Fixed commit": "12fd452c63545a7a66bcf01905535d9a0df1c046", "Url": "https://api.github.com/repos/mysticfall/pivot4j", "Date": "2012-10-06T01:11:21Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((shareRule.getStart()) != null) && ((shareRule.getEnd()) != null)) { answer.setDuration(new eu.ascetic.asceticarchitecture.iaas.energymodeller.types.TimePeriod(shareRule.getStart(), shareRule.getEnd())); }else { answer.setDuration(timePeriod); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7684/buggy-version/iaas.energy-modeller.src.main.java.eu.ascetic.asceticarchitecture.iaas.energymodeller.EnergyModeller.java", "BodyUseAPI": ["eu.ascetic.asceticarchitecture.iaas.energymodeller.types.usage.HistoricUsageRecord.setDuration(eu.ascetic.asceticarchitecture.iaas.energymodeller.types.TimePeriod)", "eu.ascetic.asceticarchitecture.iaas.energymodeller.energypredictor.vmenergyshare.historic.HistoricLoadBasedDivision.getStart()", "eu.ascetic.asceticarchitecture.iaas.energymodeller.energypredictor.vmenergyshare.historic.HistoricLoadBasedDivision.getEnd()"], "Fixed commit": "1ad577084961baa9d89df57bf42b417c9d5d44eb", "Url": "https://api.github.com/repos/ascetictoolbox/ascetictoolbox", "Date": "2016-06-01T10:42:50Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (object != null) { this.bulletAppState.getPhysicsSpace().remove(object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2381/buggy-version/src.main.java.edu.chl.LifeOfAGoblin.utils.PhysicsWrapper.java", "BodyUseAPI": ["this.bulletAppState.getPhysicsSpace().remove(com.jme3.bullet.collision.PhysicsCollisionObject)"], "Fixed commit": "57455346fb04db27ca279b7fd39a9120949b43a1", "Url": "https://api.github.com/repos/Mrmiffo/LifeOfAGoblin", "Date": "2015-05-29T17:51:38Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.easyinnova.tiff.model.TiffDocument.getFirstIFD()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((ifd != null) && (ifd.hasNextIFD())) { hasIFDList = ifd.hasNextIFD(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6505/buggy-version/src.main.java.dpfmanager.shell.modules.reporting.ReportHtml.java", "BodyUseAPI": ["com.easyinnova.tiff.model.types.IFD.hasNextIFD()"], "Fixed commit": "acf44f0285a553194f70bd4409d188a5462b9a71", "Url": "https://api.github.com/repos/EasyinnovaSL/DPFManager", "Date": "2016-01-27T10:39:54Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasIFDList) { java.lang.String bold = \"\"; if (index == 0) { bold = \"bold\"; } aIni = (((((\"<a id='liifd\" + index) + \"' href='javascript:void(0)' onclick='showIfd(\") + index) + \")' class='liifdlist \") + bold) + \"'>\"; aEnd = \"</a>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6505/buggy-version/src.main.java.dpfmanager.shell.modules.reporting.ReportHtml.java", "BodyUseAPI": [], "Fixed commit": "acf44f0285a553194f70bd4409d188a5462b9a71", "Url": "https://api.github.com/repos/EasyinnovaSL/DPFManager", "Date": "2016-01-27T10:39:54Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(canChildScrollDown())) { mIsDown = true; }else if (!(canChildScrollUp())) { mIsDown = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7662/buggy-version/src.us.shandian.blacklight.ui.common.SwipeUpAndDownRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "93f4b524a1682596f4225caa804db5b5781fa114", "Url": "https://api.github.com/repos/PeterCxy/BlackLight", "Date": "2014-05-27T10:38:52Z"},
{"Line": "=>1174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (numberOfTicks.equals(getString(R.string.settings_number_ticks_default))) { mNumberTicks = 4; }else { mNumberTicks = java.lang.Integer.parseInt(numberOfTicks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8405/buggy-version/wear.src.main.java.io.nxt3.ioclassic.IOClassicWatchFaceService.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "8af92e0ebfa6e56179fc93f5ac22023a9c1abb0e", "Url": "https://api.github.com/repos/Nxt3/IO_Classic_WatchFace", "Date": "2017-05-31T17:26:39Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.momia.api.product.sku.Sku.getAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(address)) address = product.getAddress();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6834/buggy-version/deal.service-deal.src.main.java.cn.momia.service.deal.web.ctrl.CallbackController.java", "BodyUseAPI": [], "Fixed commit": "658461933b057c5a084d220d1dec355890d24af0", "Url": "https://api.github.com/repos/lovemomia/service", "Date": "2015-09-01T07:55:04Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mMp.isPlaying()) { mMp.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7968/buggy-version/app.src.main.java.com.autochime.autochimeapplication.Alarm.java", "BodyUseAPI": ["android.media.MediaPlayer.pause()"], "Fixed commit": "09840a040b3f72202385ea0492004c381a533913", "Url": "https://api.github.com/repos/yuwilbur/autochime", "Date": "2016-08-28T12:39:27Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mMp.isPlaying())) { mMp.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7968/buggy-version/app.src.main.java.com.autochime.autochimeapplication.Alarm.java", "BodyUseAPI": ["android.media.MediaPlayer.start()"], "Fixed commit": "09840a040b3f72202385ea0492004c381a533913", "Url": "https://api.github.com/repos/yuwilbur/autochime", "Date": "2016-08-28T12:39:27Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["common.web.rest.RestServlet.getMapping(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (mapping == null) { httpResponse.sendError(404); }else { mapping.execute(httpRequest, httpResponse, injector); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/458/buggy-version/feedreader-webapp.src.main.java.common.web.rest.RestServlet.java", "BodyUseAPI": ["common.web.rest.RestServlet.RequestHandlerMapping.execute(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.google.inject.Injector)"], "Fixed commit": "bfcad8bedd7487cd04f1074838a5214ab765edd8", "Url": "https://api.github.com/repos/jaredpearson/feedreader", "Date": "2015-05-31T17:35:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["shipper.com.ads.utils.Utils.randInt(int,getAdsResponse.vipAdsList.size())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (indexRand >= (getAdsResponse.vipAdsList.size())) --indexRand;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/909/buggy-version/app.src.main.java.com.shipper.ship.ui.fragment.home.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "5607618cfdc524ef70200d16c61706e886c639b0", "Url": "https://api.github.com/repos/hanhbless/ship", "Date": "2016-01-08T02:59:19Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mode) == (main.MyAlgorithm.MODE_PLAYER_COMPUTER)) { thisMovePlayer = main.MyAlgorithm.ENEMY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/90/buggy-version/src.main.MyAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "799865ddb7aa184915ede3e07f3bf2863b7d0a74", "Url": "https://api.github.com/repos/karp157/GiS", "Date": "2014-01-15T19:32:19Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(checkFormLogin(request, response, filterChain))) { if (uk.ac.bbsrc.tgac.miso.webapp.context.RestSignatureFilter.UNAUTHENTICATED_MODE) { filterUnauthenticated(request, response, filterChain); }else { throw new uk.ac.bbsrc.tgac.miso.webapp.controller.rest.RestException(\"Cannot enact RESTful request without a user specified!\", javax.ws.rs.core.Response.Status.UNAUTHORIZED); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3862/buggy-version/miso-web.src.main.java.uk.ac.bbsrc.tgac.miso.webapp.context.RestSignatureFilter.java", "BodyUseAPI": ["uk.ac.bbsrc.tgac.miso.webapp.context.RestSignatureFilter.filterUnauthenticated(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)"], "Fixed commit": "40fc1ddab006225250979e270a9f4c60a9eb6a8d", "Url": "https://api.github.com/repos/oicr-gsi/miso-lims", "Date": "2016-01-13T15:37:39Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.level.get(new util.Vec2i(this.position.x, ((this.position.y) + 1)))) == null) this.deltaDecay += delta;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/763/buggy-version/src.EntityBox.java", "BodyUseAPI": [], "Fixed commit": "986ed98746d14ca5ff2abbc1c933fac959b533e0", "Url": "https://api.github.com/repos/philippguenther/DogeDigger", "Date": "2014-03-22T22:23:05Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (priceDiff == 0) { return (first.weight) - (second.weight); }else { return priceDiff; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2603/buggy-version/src.PriceComparator.java", "BodyUseAPI": [], "Fixed commit": "5866ff43dbc597c4f2f82f8c382b377b7929e873", "Url": "https://api.github.com/repos/ecc-weizhi/ToteFitter", "Date": "2017-04-06T08:21:07Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getParcelableArrayExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((uuidExtra != null) && ((uuidExtra.length) > 0)) { org.envirocar.app.bluetooth.BluetoothConnection.logger.info((\"Found the following UUIDs for device \" + (deviceExtra.getName()))); for (android.os.Parcelable uuid : uuidExtra) { org.envirocar.app.bluetooth.BluetoothConnection.logger.info(uuid.toString()); uuidCandidates.add(java.util.UUID.fromString(uuid.toString())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5052/buggy-version/org.envirocar.app.src.org.envirocar.app.bluetooth.BluetoothConnection.java", "BodyUseAPI": [], "Fixed commit": "5c26396aac27e3b78ab738770335cb582f3de6b8", "Url": "https://api.github.com/repos/enviroCar/enviroCar-app", "Date": "2013-09-19T11:02:40Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.druid.segment.realtime.plumber.RealtimePlumberSchool.1.computeBaseDir(io.druid.segment.realtime.Schema)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((baseDir == null) || (!(baseDir.exists()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6585/buggy-version/realtime.src.main.java.io.druid.segment.realtime.plumber.RealtimePlumberSchool.java", "BodyUseAPI": [], "Fixed commit": "bf157ea8ef507a67e7ce6e3636f50c28f075791c", "Url": "https://api.github.com/repos/AsherBond/druid", "Date": "2013-10-03T17:54:25Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6585/buggy-version/realtime.src.main.java.io.druid.segment.realtime.plumber.RealtimePlumberSchool.java", "BodyUseAPI": [], "Fixed commit": "bf157ea8ef507a67e7ce6e3636f50c28f075791c", "Url": "https://api.github.com/repos/AsherBond/druid", "Date": "2013-10-03T17:54:25Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scripname.charAt(2)) == ':') scripname = scripname.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9040/buggy-version/vocabularyrecommender.src.main.java.cz.muni.fi.pv245.vocabularyrecommender.data.TfIdf.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "96495e0a37fa5192473af4c769a412ed73791aab", "Url": "https://api.github.com/repos/hochla-simon/PV245-vocabulary_recommender", "Date": "2016-12-08T08:34:51Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.shadow.remoteloggerclient.domain.dao.ServerDAO.getInstance().saveServer(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6488/buggy-version/app.src.main.java.org.shadow.remoteloggerclient.views.ServerRegister.java", "BodyUseAPI": [], "Fixed commit": "e5c811400703d70fbb894abdcf3d5cd0a71adca3", "Url": "https://api.github.com/repos/BlaShadow/Remote-Logger-Android", "Date": "2015-08-07T20:57:28Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getInput(transform).getAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allInputs.isEmpty()) { org.apache.flink.api.java.operators.DataSource<java.lang.String> dummySource = context.getExecutionEnvironment().fromElements(\"dummy\"); result = dummySource.flatMap(new org.apache.flink.api.common.functions.FlatMapFunction<java.lang.String, T>() { @java.lang.Override public void flatMap(java.lang.String s, org.apache.flink.util.Collector<T> collector) throws java.lang.Exception { } }).returns(new org.apache.beam.runners.flink.translation.types.CoderTypeInformation(((org.apache.beam.sdk.coders.Coder<T>) (org.apache.beam.sdk.coders.VoidCoder.of())))); }else { for (org.apache.beam.sdk.values.PCollection<T> collection : allInputs) { org.apache.flink.api.java.DataSet<T> current = context.getInputDataSet(collection); if (result == null) { result = current; }else { result = result.union(current); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4725/buggy-version/runners.flink.runner.src.main.java.org.apache.beam.runners.flink.translation.FlinkBatchTransformTranslators.java", "BodyUseAPI": [], "Fixed commit": "9ae0f46115222ec5026a17b8d4144f8f38b8c41f", "Url": "https://api.github.com/repos/kennknowles/beam", "Date": "2016-05-06T11:31:18Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 5) { if ((\"1\".equals(args[5])) || (\"true\".equalsIgnoreCase(args[5]))) { around = true; } if ((args.length) > 6) { try { chunksPerRun = java.lang.Integer.parseInt(args[6]); } catch (java.lang.Exception ex) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6002/buggy-version/src.main.java.mort.mineralvein.MineralVein.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "7f94032437f53ee9288e1403635e1a374898e5cd", "Url": "https://api.github.com/repos/nallar/MineralVeinplusplus", "Date": "2012-05-13T21:05:32Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length < 0) { x -= length; length = -length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6002/buggy-version/src.main.java.mort.mineralvein.MineralVein.java", "BodyUseAPI": [], "Fixed commit": "7f94032437f53ee9288e1403635e1a374898e5cd", "Url": "https://api.github.com/repos/nallar/MineralVeinplusplus", "Date": "2012-05-13T21:05:32Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (width < 0) { z -= width; width = -width; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6002/buggy-version/src.main.java.mort.mineralvein.MineralVein.java", "BodyUseAPI": [], "Fixed commit": "7f94032437f53ee9288e1403635e1a374898e5cd", "Url": "https://api.github.com/repos/nallar/MineralVeinplusplus", "Date": "2012-05-13T21:05:32Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (msg_content.equals(\"\")) { request.setAttribute(\"errMsg\", \"Please enter a non-empty message.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4674/buggy-version/src.com.accounts.pages.SendMessageServlet.java", "BodyUseAPI": [], "Fixed commit": "7480baba89711534d15761a46c426364b3f4f3d4", "Url": "https://api.github.com/repos/christky/QuizWebsite", "Date": "2015-03-06T03:05:07Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(internationalNumber))) { new com.globalfriends.com.aroundme.protocol.yelp.YelpManager.YelpNetworkTask(internationalNumber, com.globalfriends.com.aroundme.protocol.yelp.YelpManager.PLACE_DETAIL_REQUEST).execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3635/buggy-version/app.src.main.java.com.globalfriends.com.aroundme.protocol.yelp.YelpManager.java", "BodyUseAPI": ["com.globalfriends.com.aroundme.protocol.yelp.YelpManager.YelpNetworkTask.execute()"], "Fixed commit": "900f4a12118418817a11602ae00bf68864c330ae", "Url": "https://api.github.com/repos/GlobalFriends/AroundMe", "Date": "2016-01-14T18:19:11Z"},
{"Line": "=>1241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.otherDocumentAnnotations) != null) annotationTypes.addAll(this.otherDocumentAnnotations.keySet());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8137/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.data.annotation.nlp.DocumentNLPInMemory.java", "BodyUseAPI": [], "Fixed commit": "1e892a746f6e3a722a159d3fc3ca18487c69d14d", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2015-05-18T18:17:16Z"},
{"Line": "=>1245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.otherTokenSpanAnnotations) != null) annotationTypes.addAll(this.otherTokenSpanAnnotations.keySet());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8137/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.data.annotation.nlp.DocumentNLPInMemory.java", "BodyUseAPI": [], "Fixed commit": "1e892a746f6e3a722a159d3fc3ca18487c69d14d", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2015-05-18T18:17:16Z"},
{"Line": "=>1243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.otherSentenceAnnotations) != null) annotationTypes.addAll(this.otherSentenceAnnotations.keySet());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8137/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.data.annotation.nlp.DocumentNLPInMemory.java", "BodyUseAPI": [], "Fixed commit": "1e892a746f6e3a722a159d3fc3ca18487c69d14d", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2015-05-18T18:17:16Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tiles.getFormat()) != null) { formatOptions.put(\"format\", tiles.getFormat()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7887/buggy-version/src.community.geopkg.src.main.java.org.geoserver.geopkg.wps.GeoPackageProcess.java", "BodyUseAPI": ["java.util.Map.put(java.lang.String,tiles.getFormat())", "org.geotools.geopkg.wps.GeoPackageProcessRequest.TilesLayer.getFormat()"], "Fixed commit": "ed865f505a096e409d338f80e19c489a4b83bdde", "Url": "https://api.github.com/repos/johngschulz/geoserver", "Date": "2017-10-01T03:05:33Z"},
{"Line": "=>1167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(storyMode)) { if ((getToppingClimaxCount()) >= 2) return com.majalis.battle.Battle.Outcome.SATISFIED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7295/buggy-version/core.src.com.majalis.character.EnemyCharacter.java", "BodyUseAPI": [], "Fixed commit": "b5856ea4d8d45525c414d14dfbda0de6e4ea3371", "Url": "https://api.github.com/repos/majalistic/tales-of-androgyny", "Date": "2017-11-28T02:26:48Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (sqlStatement.endsWith(\";\")) { sqlStatement = sqlStatement.substring(0, ((sqlStatement.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7704/buggy-version/common.util.src.main.java.io.apiman.common.util.ddl.DdlParser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "3fef81e9623c24748f0f2c98f628f2e5d5a89c1f", "Url": "https://api.github.com/repos/msavy/apiman", "Date": "2016-06-17T12:57:45Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oPrice == 0) { return \"\u9762\u8b70\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6754/buggy-version/app.src.main.java.com.yahoo.serviceplushousefinder.models.Item.java", "BodyUseAPI": [], "Fixed commit": "ef66a60d9bd9839db931a94fe987e0c0a2293288", "Url": "https://api.github.com/repos/AlikeGroup/devinAlikeServicePlus", "Date": "2015-09-03T03:33:21Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (price.contentEquals(\"E\")) { java.lang.String[] priceSplit = price.split(\"E\"); float basePrice = java.lang.Float.parseFloat(priceSplit[0]); int multiPrice = java.lang.Integer.parseInt(priceSplit[1]); oPrice = basePrice * (java.lang.Math.pow(10, multiPrice)); }else { oPrice = java.lang.Double.parseDouble(price); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6754/buggy-version/app.src.main.java.com.yahoo.serviceplushousefinder.models.Item.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "ef66a60d9bd9839db931a94fe987e0c0a2293288", "Url": "https://api.github.com/repos/AlikeGroup/devinAlikeServicePlus", "Date": "2015-09-03T03:33:21Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (price == null) { price = \"0.0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6754/buggy-version/app.src.main.java.com.yahoo.serviceplushousefinder.models.Item.java", "BodyUseAPI": [], "Fixed commit": "ef66a60d9bd9839db931a94fe987e0c0a2293288", "Url": "https://api.github.com/repos/AlikeGroup/devinAlikeServicePlus", "Date": "2015-09-03T03:33:21Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(delta)) > INVERSE_TOLERANCE) { massagedAzimuth = (mAzimuth) + invertedDelta; }else { massagedAzimuth = adjustedAzimuth; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1239/buggy-version/shootout.src.com.davidykay.shootout.simulation.Simulation.java", "BodyUseAPI": [], "Fixed commit": "0f4ef1dce77c278fc6217aab67ba7600758bc02d", "Url": "https://api.github.com/repos/DavidYKay/shootout", "Date": "2011-08-10T03:55:34Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user != null) { dbCurrentUser = dbUsers.child(mAuth.getCurrentUser().getUid()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1093/buggy-version/app.src.main.java.com.example.backloginsurmountable.ui.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "ecab4ac5fd4a14ed043b792b58627662bf572477", "Url": "https://api.github.com/repos/AlainaTraxler/android-BacklogInsurmountable", "Date": "2016-12-13T23:07:38Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((result.length) - i) > 1) { java.lang.String dozens = util.Speller.dozens(java.lang.Integer.valueOf(result[i]), java.lang.Integer.valueOf(result[(i + 1)])); if ((dozens != null) && (!(dozens.isEmpty()))) list.add(dozens); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1936/buggy-version/src.util.Speller.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "util.Speller.dozens(java.lang.Integer,java.lang.Integer)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "18e425a0501ca6fbacf9fd0ed2fb033d89a59054", "Url": "https://api.github.com/repos/edmilson-fnk/ProjectEuler", "Date": "2017-06-25T16:48:11Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.Speller.greaterThanAHundred(java.lang.Integer,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((hundred != null) && (!(hundred.isEmpty()))) list.add(hundred);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1936/buggy-version/src.util.Speller.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "18e425a0501ca6fbacf9fd0ed2fb033d89a59054", "Url": "https://api.github.com/repos/edmilson-fnk/ProjectEuler", "Date": "2017-06-25T16:48:11Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.Speller.greaterThanAHundred(java.lang.Integer,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((thousand != null) && (!(thousand.isEmpty()))) list.add(thousand);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1936/buggy-version/src.util.Speller.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "18e425a0501ca6fbacf9fd0ed2fb033d89a59054", "Url": "https://api.github.com/repos/edmilson-fnk/ProjectEuler", "Date": "2017-06-25T16:48:11Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (results != null) { try { java.util.List<U> mappedResults = new java.util.ArrayList<U>(); for (T result : results) { mappedResults.add(mapper.apply(result)); } callback.onResult(mappedResults, null); } catch (java.lang.Throwable t1) { callback.onResult(null, t1); } }else { callback.onResult(null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1533/buggy-version/driver-async.src.main.com.mongodb.async.client.MappingAsyncBatchCursor.java", "BodyUseAPI": [], "Fixed commit": "07c8833b6de9ceacd8ea48fe4d29f54dc2aa4cb7", "Url": "https://api.github.com/repos/mongodb/mongo-java-driver", "Date": "2015-01-16T18:25:59Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trimToEmpty(source).isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/206/buggy-version/src.main.java.ru.itbasis.utils.spring.security.accessrole.converters.String2AccessRoleConverter.java", "BodyUseAPI": [], "Fixed commit": "a6090b5790004818006201f6b3ccaa2ecc978c0d", "Url": "https://api.github.com/repos/BorzdeG/ru.itbasis.utils.spring-boot-starter-security-accessrole", "Date": "2016-07-12T06:30:12Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getStatus()) == (Status.Running)) { if (isCreationMode) flightOfMud(); else flightOfBullets(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1663/buggy-version/src.com.kry.brickgame.games.GunGame.java", "BodyUseAPI": [], "Fixed commit": "f9df6b1b969242442615d66ee670adbf10604cf5", "Url": "https://api.github.com/repos/n0Live/BrickGame", "Date": "2014-10-10T16:25:45Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { isWaitingForCallback = false; updateUI(org.mozilla.fxa_data.example.FirefoxDataInRecyclerViewExampleActivity.UIState.SIGN_IN_PROMPT); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/158/buggy-version/example.src.main.java.org.mozilla.fxa_data.example.FirefoxDataInRecyclerViewExampleActivity.java", "BodyUseAPI": [], "Fixed commit": "8f841d8d571c00a5d8c863c38687e63fcd24a26d", "Url": "https://api.github.com/repos/cnevinc/FirefoxData-android", "Date": "2017-09-28T21:46:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.getStatusCode()) != 200) { mListener.onUsernameError(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3365/buggy-version/app.src.main.java.com.foi.air1603.sport_manager.model.UserInteractorImpl.java", "BodyUseAPI": [], "Fixed commit": "86d4b44b26765e3f36357a533a20e5bd9b895e74", "Url": "https://api.github.com/repos/maxxis95/Sport-Manager", "Date": "2016-11-13T10:41:56Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (data != null) { call = serviceCaller.getData(method, args, gson.toJson(data, entityType)); }else { call = serviceCaller.getData(method, args, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3365/buggy-version/webservice.src.main.java.com.example.webservice.AirWebServiceCaller.java", "BodyUseAPI": ["com.google.gson.Gson.toJson(java.lang.Object,java.lang.reflect.Type)", "com.example.webservice.AirWebService.getData(java.lang.String,java.lang.String,gson.toJson(data, entityType))"], "Fixed commit": "86d4b44b26765e3f36357a533a20e5bd9b895e74", "Url": "https://api.github.com/repos/maxxis95/Sport-Manager", "Date": "2016-11-13T10:41:56Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(selections.contains(path))) android.widget.Toast.makeText(context, ((\"Maximum \" + (selectionLimit)) + \" selection allowed\"), Toast.LENGTH_SHORT).show(); else { selections.remove(path); onItemClickListener.onItemClick(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8987/buggy-version/src.main.java.com.ivpicker.GalleryAdapter.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.remove(java.lang.String)", "com.ivpicker.GalleryAdapter.OnItemClickListener.onItemClick(java.lang.String)"], "Fixed commit": "4ca1a32ff7c1c37960c99810cc3220ac5a79a954", "Url": "https://api.github.com/repos/harsewak/ivpicker", "Date": "2016-02-28T09:37:31Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jenkins == null) { throw new java.lang.AssertionError(\"No Jenkins instance available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9324/buggy-version/src.main.java.com.mesosphere.velocity.marathon.DeploymentConfig.java", "BodyUseAPI": [], "Fixed commit": "a63400396d88cbd491a4ec39d0a1640f5d886411", "Url": "https://api.github.com/repos/TheSentinel454/marathon-plugin", "Date": "2017-01-09T20:10:44Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.dvs.eshop.admin.ui.fragments.TypeListFragment.3.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (activity == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9002/buggy-version/app.src.main.java.ru.dvs.eshop.admin.ui.fragments.TypeListFragment.java", "BodyUseAPI": [], "Fixed commit": "c469855f42870c896f62d06c2d22671a4c157a38", "Url": "https://api.github.com/repos/daniilsv/eShop-Administrator", "Date": "2017-02-06T23:35:09Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.dvs.eshop.admin.ui.fragments.TypeListFragment.3.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (activity == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9002/buggy-version/app.src.main.java.ru.dvs.eshop.admin.ui.fragments.TypeListFragment.java", "BodyUseAPI": [], "Fixed commit": "c469855f42870c896f62d06c2d22671a4c157a38", "Url": "https://api.github.com/repos/daniilsv/eShop-Administrator", "Date": "2017-02-06T23:35:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.twentyFour)) { bottomGlasses = bottomGlasses % 12; topGlasses = 12 - bottomGlasses; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2511/buggy-version/Hourglass.app.src.main.java.com.example.evan.hourglass.hourglass.java", "BodyUseAPI": [], "Fixed commit": "43406a1eae1b0372a5daa8f8b3a6c952600d1ec5", "Url": "https://api.github.com/repos/jamwjam/CMSC434-IA05", "Date": "2014-11-14T03:01:13Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bottomGlasses < 0) { bottomGlasses = 24 + bottomGlasses; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2511/buggy-version/Hourglass.app.src.main.java.com.example.evan.hourglass.hourglass.java", "BodyUseAPI": [], "Fixed commit": "43406a1eae1b0372a5daa8f8b3a6c952600d1ec5", "Url": "https://api.github.com/repos/jamwjam/CMSC434-IA05", "Date": "2014-11-14T03:01:13Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (pos == (-1)) addRef(parent); else addRef(parent.substring(0, pos));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8928/buggy-version/lib.src.genericsutil.GenericsUtilImpl.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "genericsutil.GenericsUtilImpl.OntologyData.addRef(java.lang.String)"], "Fixed commit": "74c21a21badc2fc4f212207c14f286b386501753", "Url": "https://api.github.com/repos/kbaseapps/GenericsUtil", "Date": "2017-04-24T17:59:02Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (activeEditor == null) { }else if (activeEditor instanceof org.eclipse.ui.IEditorPart) { part = ((org.eclipse.ui.IEditorPart) (activeEditor)); currentEditor = activeEditor; }else { org.eclipse.ui.IWorkbenchPage page = activeEditor.getSite().getPage(); if (page != null) { part = page.getActiveEditor(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3163/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.views.collaboration.CollaborationView.java", "BodyUseAPI": ["org.eclipse.ui.IWorkbenchPart.getSite()", "activeEditor.getSite().getPage()"], "Fixed commit": "7dab9f9fedee5a98f49bc83a3f8e8c7503f82f22", "Url": "https://api.github.com/repos/tthuem/FeatureIDE", "Date": "2014-09-17T15:18:31Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (part == (currentEditor)) { setEditorActions(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3163/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.views.collaboration.CollaborationView.java", "BodyUseAPI": [], "Fixed commit": "7dab9f9fedee5a98f49bc83a3f8e8c7503f82f22", "Url": "https://api.github.com/repos/tthuem/FeatureIDE", "Date": "2014-09-17T15:18:31Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"Add new task\".equalsIgnoreCase(tasksList.getSelectionModel().getSelectedItem().toString()))) { tmanage.classes.Task task = ((tmanage.classes.Task) (Storage.tasks.getTaskByName(((java.lang.String) (tasksList.getSelectionModel().getSelectedItem()))))); task.setSpentTime(((int) (timeSpent))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5931/buggy-version/src.tmanage.MainController.java", "BodyUseAPI": ["tasksList.getSelectionModel().getSelectedItem()", "Storage.tasks.getTaskByName(((java.lang.String) (tasksList.getSelectionModel().getSelectedItem())))", "javafx.scene.control.ChoiceBox.getSelectionModel()"], "Fixed commit": "7076edc99311b5d6ca9700193cb55a2966bbb9de", "Url": "https://api.github.com/repos/MartinSolie/tmanage", "Date": "2013-12-27T22:43:39Z"},
{"Line": "=>1493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.connie.BindingVariable.getFlexoRole()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (role != null) { if (role.getCardinality().isMultipleCardinality()) { if (value instanceof java.util.List) { for (java.lang.Object o : ((java.util.List) (value))) { addToFlexoActors(o, role); } }else { org.openflexo.foundation.fml.rt.FlexoConceptInstance.FlexoConceptInstanceImpl.logger.warning((((\"Unexpected value \" + value) + \" for multiple cardinality role: \") + role)); } }else { setFlexoActor(value, role); } }else { org.openflexo.foundation.fml.rt.FlexoConceptInstance.FlexoConceptInstanceImpl.logger.warning((\"Unexpected property \" + variable)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4819/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.fml.rt.FlexoConceptInstance.java", "BodyUseAPI": ["role.getCardinality().isMultipleCardinality()", "org.openflexo.foundation.fml.rt.FlexoConceptInstance.FlexoConceptInstanceImpl.addToFlexoActors(java.lang.Object,org.openflexo.foundation.fml.FlexoRole)", "java.util.logging.Logger.warning((((\"Unexpected value \" + value) + \" for multiple cardinality role: \") + role))", "org.openflexo.foundation.fml.rt.FlexoConceptInstance.FlexoConceptInstanceImpl.setFlexoActor(java.lang.Object,org.openflexo.foundation.fml.FlexoRole)", "org.openflexo.foundation.fml.FlexoRole.getCardinality()"], "Fixed commit": "ec2c7c924676600141204f88a8db1e9c8c02fb85", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2017-09-06T10:37:35Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scannerStack.size()) > 20) { java.lang.System.out.println(\"Too many scripts.\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9152/buggy-version/src.miniSQL.interpreter.Main.java", "BodyUseAPI": [], "Fixed commit": "068c6638ccfccca49794b7e3553777e3e9c736c2", "Url": "https://api.github.com/repos/YunYe-Pu/ZJUDB-miniSQL", "Date": "2016-06-15T08:29:14Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(new java.io.File(destFolderPath).exists())) new java.io.File(destFolderPath).mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5041/buggy-version/components.analytics.analytics-processors.org.wso2.carbon.analytics.spark.core.src.main.java.org.wso2.carbon.analytics.spark.core.internal.SparkDataListener.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "3ffa5a6deab6adbfeba311d9417d2c87805c27cd", "Url": "https://api.github.com/repos/nirandaperera/carbon-analytics", "Date": "2015-03-14T07:20:06Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.uco.houselannister.saveasingle.service.StaticUserModel.mFilename) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4194/buggy-version/app.src.main.java.edu.uco.houselannister.saveasingle.service.StaticUserModel.java", "BodyUseAPI": [], "Fixed commit": "79ac89a81882c84f30a61015cb1395e4fada3a06", "Url": "https://api.github.com/repos/ParaSwarm/House-Lannister", "Date": "2016-10-04T02:10:46Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.uco.houselannister.saveasingle.service.StaticUserModel.mFilename) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4194/buggy-version/app.src.main.java.edu.uco.houselannister.saveasingle.service.StaticUserModel.java", "BodyUseAPI": [], "Fixed commit": "79ac89a81882c84f30a61015cb1395e4fada3a06", "Url": "https://api.github.com/repos/ParaSwarm/House-Lannister", "Date": "2016-10-04T02:10:46Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((java.lang.System.getSecurityManager()) != null) { java.security.AccessController.checkPermission(io.undertow.servlet.handlers.ServletInitialHandler.PERMISSION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4594/buggy-version/servlet.src.main.java.io.undertow.servlet.handlers.ServletInitialHandler.java", "BodyUseAPI": [], "Fixed commit": "f091bb6016edf65a0e613d22a53828728575bd2a", "Url": "https://api.github.com/repos/stuartwdouglas/undertow", "Date": "2013-11-05T12:06:00Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getSecurityManager()) == null) { dispatchRequest(exchange, servletRequestContext, info.getServletChain(), DispatcherType.REQUEST); }else { java.security.AccessController.doPrivileged(new java.security.PrivilegedExceptionAction<java.lang.Object>() { @java.lang.Override public java.lang.Object run() throws java.lang.Exception { dispatchRequest(exchange, servletRequestContext, info.getServletChain(), DispatcherType.REQUEST); return null; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4594/buggy-version/servlet.src.main.java.io.undertow.servlet.handlers.ServletInitialHandler.java", "BodyUseAPI": [], "Fixed commit": "f091bb6016edf65a0e613d22a53828728575bd2a", "Url": "https://api.github.com/repos/stuartwdouglas/undertow", "Date": "2013-11-05T12:06:00Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r) this.got += ret;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8370/buggy-version/src.main.java.com.yogpc.mc_lib.APowerTile.java", "BodyUseAPI": [], "Fixed commit": "1bca40cbedba81de6bddcb7c85b201a9a32fc7dd", "Url": "https://api.github.com/repos/yogpstop/QuarryPlus", "Date": "2014-11-09T21:35:15Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((codeAttr != null) && ((attrs = codeAttr.getLocalValueTableAttr()) != null)) { tables = attrs.getTables(); }else { tables = new com.baislsl.decompiler.structure.LocalVariableTable[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1266/buggy-version/src.main.java.com.baislsl.decompiler.structure.Method.java", "BodyUseAPI": [], "Fixed commit": "663de248c5dbcde7a7b431b602755e16c91fd935", "Url": "https://api.github.com/repos/baislsl/java-class-reader", "Date": "2017-10-14T12:26:29Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["activity.getResources().getString(R.string.oldActivityName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((oldActivityName == null) || ((oldActivityName.length()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2313/buggy-version/src.com.tbd.forkfront.UpdateAssets.java", "BodyUseAPI": [], "Fixed commit": "f4f8fe54be7aabb060fcf7117856c121a7d5752c", "Url": "https://api.github.com/repos/gurrhack/ForkFront-Android", "Date": "2016-07-15T15:54:57Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (metadata instanceof edu.isi.karma.metadata.OntologyMetadata) metadata.setup(updateContainer, workspace);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3286/buggy-version/karma-common.src.main.java.edu.isi.karma.metadata.KarmaMetadataManager.java", "BodyUseAPI": ["edu.isi.karma.metadata.KarmaMetadata.setup(edu.isi.karma.controller.update.UpdateContainer,edu.isi.karma.rep.Workspace)"], "Fixed commit": "a89f83c93698959652b8da63c04e260b3ffe1cfe", "Url": "https://api.github.com/repos/usc-isi-i2/Web-Karma", "Date": "2015-06-23T19:57:03Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (start <= end) { return operation.substring(start, end); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7079/buggy-version/src.parser.Parser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "2665bccf42522d0836d77a76f33475db0a7cc305", "Url": "https://api.github.com/repos/CS2103jan2015-w13-2j/main", "Date": "2015-03-24T16:52:54Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.accounts.AccountManager.getAccountsByType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((accounts != null) && ((accounts.length) > 0)) { dialog = new org.tomahawk.tomahawk_android.dialogs.GMusicConfigDialog(); }else { dialog = new org.tomahawk.tomahawk_android.dialogs.ResolverConfigDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/822/buggy-version/app.src.main.java.org.tomahawk.tomahawk_android.fragments.PreferenceConnectFragment.java", "BodyUseAPI": [], "Fixed commit": "562c1877083d3126b78393d278350e0d6b953872", "Url": "https://api.github.com/repos/tomahawk-player/tomahawk-android", "Date": "2016-06-24T14:35:03Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isGameObjectSelected(gameObject, getCamera(), x, ((getCamera().viewportHeight) - y))) selections.add(new com.suiton2d.editor.framework.Selection(gameObject));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3206/buggy-version/editor.src.main.java.com.suiton2d.editor.ui.render.RenderCanvas.java", "BodyUseAPI": ["java.util.List<com.suiton2d.editor.framework.Selection>.add(com.suiton2d.editor.framework.Selection)"], "Fixed commit": "c6e5c0926ee55f3a2e20cabc8252eb8b2a9fe538", "Url": "https://api.github.com/repos/jonbonazza/suiton", "Date": "2015-08-07T06:48:12Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((point.getX()) < 0) || ((point.getX()) > (mMeasuredWidth))) || ((point.getY()) < 0)) || ((point.getY()) > (mMeasuredHeight))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8561/buggy-version/src.main.java.io.github.data4all.view.CaptureAssistView.java", "BodyUseAPI": [], "Fixed commit": "2d39f0c077510e319075616be5170673fde435cf", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-04-11T08:52:07Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((filter.getPropertyIds()) != null) { conditions.add(WIKIDATA_STATEMENT.PROP_ID.in(filter.getPropertyIds())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3779/buggy-version/wikAPIdia-wikidata.src.main.java.org.wikapidia.wikidata.WikidataSqlDao.java", "BodyUseAPI": ["org.wikapidia.wikidata.WikidataFilter.getPropertyIds()", "WIKIDATA_STATEMENT.PROP_ID.in(filter.getPropertyIds())", "java.util.List<org.wikapidia.wikidata.Condition>.add(WIKIDATA_STATEMENT.PROP_ID.in(filter.getPropertyIds()))"], "Fixed commit": "3d3ab7bfeaf93a760606ac7845a4d1ba8f8798b8", "Url": "https://api.github.com/repos/shilad/wikAPIdia", "Date": "2014-04-07T07:19:41Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.smarties.Interpreter.locomotives.containsKey(args[0])) == true) { if (args[2].equals(\"0\")) { com.smarties.Interpreter.locomotives.get(args[0]).setDirection(0); }else if (args[2].equals(\"-1\")) { com.smarties.Interpreter.locomotives.get(args[0]).setDirection((-1)); }else if (args[2].equals(\"1\")) { com.smarties.Interpreter.locomotives.get(args[0]).setDirection(1); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6954/buggy-version/TrainSimulator.src.com.smarties.Interpreter.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "com.smarties.Interpreter.locomotives.get(args[0]).setDirection(int)", "java.util.HashMap<java.lang.String, com.smarties.Locomotive>.get(java.lang.String)", "java.util.HashMap<java.lang.String, com.smarties.Locomotive>.get(java.lang.String)", "java.lang.String.equals(java.lang.String)", "com.smarties.Interpreter.locomotives.get(args[0]).setDirection(int)", "java.lang.String.equals(java.lang.String)", "java.util.HashMap<java.lang.String, com.smarties.Locomotive>.get(java.lang.String)", "com.smarties.Interpreter.locomotives.get(args[0]).setDirection(int)"], "Fixed commit": "e834f667794d9d4c0c986566a6cc92b964f58266", "Url": "https://api.github.com/repos/percsim/ae3a11bsmarties", "Date": "2017-04-18T17:34:33Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (geoPointInfo != null) { if ((this.edit) == null) { this.edit = new de.k3b.android.locationMapViewer.geobmp.GeoBmpEditDialog(this.context, this, R.layout.geobmp_edit_name); this.edit.setTitle(context.getString(R.string.title_bookmark_edit)); } if (!(de.k3b.android.locationMapViewer.geobmp.BookmarkUtil.isBookmark(geoPointInfo))) { geoPointInfo = de.k3b.android.locationMapViewer.geobmp.BookmarkUtil.createBookmark(geoPointInfo); } this.edit.onGeoInfo(geoPointInfo); this.context.showDialog(de.k3b.android.locationMapViewer.geobmp.BookmarkListOverlay.EDIT_MENU_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7445/buggy-version/LocationMapViewer.src.main.java.de.k3b.android.locationMapViewer.geobmp.BookmarkListOverlay.java", "BodyUseAPI": ["de.k3b.android.locationMapViewer.geobmp.BookmarkUtil.isBookmark(de.k3b.android.locationMapViewer.geobmp.GeoBmpDto)", "de.k3b.android.locationMapViewer.geobmp.BookmarkUtil.createBookmark(de.k3b.android.locationMapViewer.geobmp.GeoBmpDto)"], "Fixed commit": "dd8229ca08949a28013b25b2334038ccc577ea0c", "Url": "https://api.github.com/repos/k3b/LocationMapViewer", "Date": "2017-09-11T18:57:32Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alerts) == null) return redAlerts;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6170/buggy-version/src.main.java.org.jenkinsci.plugins.codesonar.models.analysis.Analysis.java", "BodyUseAPI": [], "Fixed commit": "b3c8cb9635c2557b6da86890d58d35bbe4a876cf", "Url": "https://api.github.com/repos/jenkinsci/codesonar-plugin", "Date": "2016-06-16T13:01:46Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alerts) == null) return yellowAlerts;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6170/buggy-version/src.main.java.org.jenkinsci.plugins.codesonar.models.analysis.Analysis.java", "BodyUseAPI": [], "Fixed commit": "b3c8cb9635c2557b6da86890d58d35bbe4a876cf", "Url": "https://api.github.com/repos/jenkinsci/codesonar-plugin", "Date": "2016-06-16T13:01:46Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(result.hasErrors())) { isProjectSaveSuccessful = projectService.createSubProject(subProjectDetail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8390/buggy-version/src.main.java.com.psk.pms.controller.ProjectController.java", "BodyUseAPI": [], "Fixed commit": "28b9477e479d6bf14ab8607565614d0d42eb1d45", "Url": "https://api.github.com/repos/devintqa/pms", "Date": "2015-05-09T12:54:58Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deckSize) > 0) { return new com.game.loot.Move(ACTION.DRAW, null, null); }else { java.lang.System.out.println(\"No cards left to draw. Pick another move.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9167/buggy-version/src.com.game.loot.PhysicalPlayer.java", "BodyUseAPI": [], "Fixed commit": "366090faa7ac6e43baa8370504baf7dc0c757af8", "Url": "https://api.github.com/repos/asood123/Loot", "Date": "2013-12-24T03:07:26Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errorMessage) != null) { new nl.guno.ccollab.intellij.ui.Notification(project, errorMessage, com.intellij.openapi.ui.MessageType.WARNING).showBalloon(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4460/buggy-version/src.main.java.nl.guno.ccollab.intellij.AddToReviewTask.java", "BodyUseAPI": [], "Fixed commit": "558cdbcea57f0d00ab704c9202f6b9908002c8a8", "Url": "https://api.github.com/repos/GunoH/intellicollab", "Date": "2015-10-14T16:31:27Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (qName.equals(org.iviPro.newExport.profile.xml.ELEMENT_AUDIO_VARIANTS)) { }else if (qName.equals(org.iviPro.newExport.profile.xml.ELEMENT_AUDIO_VARIANT)) { handleAudioVariantElement(attributes); }else if (qName.equals(org.iviPro.newExport.profile.xml.ELEMENT_AUDIO_PROFILE)) { handleAudioProfileElement(attributes); }else if (qName.equals(org.iviPro.newExport.profile.xml.ELEMENT_VIDEO_VARIANTS)) { }else if (qName.equals(org.iviPro.newExport.profile.xml.ELEMENT_VIDEO_VARIANT)) { handleVideoVariantElement(attributes); }else if (qName.equals(org.iviPro.newExport.profile.xml.ELEMENT_VIDEO_PROFILE)) { handleVideoProfileElement(attributes); }else { org.iviPro.newExport.profile.xml.ProfileHandler.logger.warn((\"Skipping unknown xml element: \" + qName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5754/buggy-version/producer.org.iviPro.export.src.org.iviPro.newExport.profile.xml.ProfileHandler.java", "BodyUseAPI": ["org.apache.log4j.Logger.warn(java.lang.String)", "java.lang.String.equals(org.iviPro.newExport.profile.xml.ELEMENT_VIDEO_VARIANTS)", "java.lang.String.equals(org.iviPro.newExport.profile.xml.ELEMENT_AUDIO_PROFILE)", "java.lang.String.equals(org.iviPro.newExport.profile.xml.ELEMENT_VIDEO_VARIANT)", "java.lang.String.equals(org.iviPro.newExport.profile.xml.ELEMENT_VIDEO_PROFILE)", "java.lang.String.equals(org.iviPro.newExport.profile.xml.ELEMENT_AUDIO_VARIANT)"], "Fixed commit": "2a7c3901f8db395ca29f45c735ecdf7b64f38358", "Url": "https://api.github.com/repos/SIVAteam/SIVA-Suite", "Date": "2015-05-22T09:45:15Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (qName.equals(org.iviPro.newExport.profile.xml.ELEMENT_VIDEO_VARIANTS)) { }else if (qName.equals(org.iviPro.newExport.profile.xml.ELEMENT_VIDEO_VARIANT)) { handleVideoVariantElement(attributes); }else if (qName.equals(org.iviPro.newExport.profile.xml.ELEMENT_VIDEO_PROFILE)) { handleVideoProfileElement(attributes); }else { org.iviPro.newExport.profile.xml.ProfileHandler.logger.warn((\"Skipping unknown xml element: \" + qName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5754/buggy-version/producer.org.iviPro.export.src.org.iviPro.newExport.profile.xml.ProfileHandler.java", "BodyUseAPI": ["java.lang.String.equals(org.iviPro.newExport.profile.xml.ELEMENT_VIDEO_PROFILE)", "java.lang.String.equals(org.iviPro.newExport.profile.xml.ELEMENT_VIDEO_VARIANT)", "org.apache.log4j.Logger.warn(java.lang.String)"], "Fixed commit": "2a7c3901f8db395ca29f45c735ecdf7b64f38358", "Url": "https://api.github.com/repos/SIVAteam/SIVA-Suite", "Date": "2015-05-22T09:45:15Z"},
{"Line": "=>1057", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (message != null) { message.setAddress(address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4014/buggy-version/artemis-core-client.src.main.java.org.apache.activemq.artemis.core.client.impl.ClientSessionImpl.java", "BodyUseAPI": ["org.apache.activemq.artemis.api.core.Message.setAddress(org.apache.activemq.artemis.api.core.SimpleString)"], "Fixed commit": "17ea05bce666e27b9a2808f4a186307ef92c1b2b", "Url": "https://api.github.com/repos/dejanb/activemq-artemis", "Date": "2016-06-03T15:59:09Z"},
{"Line": "=>1061", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (message != null) { if (!(address.equals(defaultAddress))) { message.setAddress(address); }else { message.setAddress(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4014/buggy-version/artemis-core-client.src.main.java.org.apache.activemq.artemis.core.client.impl.ClientSessionImpl.java", "BodyUseAPI": ["org.apache.activemq.artemis.api.core.Message.setAddress(<nulltype>)", "org.apache.activemq.artemis.api.core.Message.setAddress(org.apache.activemq.artemis.api.core.SimpleString)"], "Fixed commit": "17ea05bce666e27b9a2808f4a186307ef92c1b2b", "Url": "https://api.github.com/repos/dejanb/activemq-artemis", "Date": "2016-06-03T15:59:09Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id >= (com.tommythegeek.sackLunch.dao.People.CROWD.size())) { com.tommythegeek.sackLunch.dao.People.introduce(guy); return com.tommythegeek.sackLunch.dao.People.stat; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6917/buggy-version/src.java.com.tommythegeek.sackLunch.dao.People.java", "BodyUseAPI": [], "Fixed commit": "716372b1bdbc2952efa1f4803862bbe060894402", "Url": "https://api.github.com/repos/tbodine88/arch-sack-lunch-organizer02", "Date": "2017-01-06T16:12:19Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tommythegeek.sackLunch.dao.People.getNextRowId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rowId < 0) || (rowId > (nextId - 1))) { rowId = nextId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6917/buggy-version/src.java.com.tommythegeek.sackLunch.controller.updateMember.java", "BodyUseAPI": [], "Fixed commit": "716372b1bdbc2952efa1f4803862bbe060894402", "Url": "https://api.github.com/repos/tbodine88/arch-sack-lunch-organizer02", "Date": "2017-01-06T16:12:19Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ox.zoo.seeg.abraid.mp.dataacquisition.acquirers.DiseaseOccurrenceDataAcquirer.continueLocationConversion(occurrence.getLocation())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((location.getId()) == null) { locationService.saveLocation(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5480/buggy-version/src.DataAcquisition.src.uk.ac.ox.zoo.seeg.abraid.mp.dataacquisition.acquirers.DiseaseOccurrenceDataAcquirer.java", "BodyUseAPI": ["uk.ac.ox.zoo.seeg.abraid.mp.common.service.core.LocationService.saveLocation(uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location)"], "Fixed commit": "85049bd49c228735d3ac86cc3ea578f0e01d6c84", "Url": "https://api.github.com/repos/SEEG-Oxford/ABRAID-MP", "Date": "2015-07-31T14:39:03Z"},
{"Line": "=>1169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (localDatabaseDirty) { mainWindow.getSyncWithRemoteDatabaseMenuItem().setDisable(false); mainWindow.getSyncWithRemoteDatabaseButton().setDisable(false); }else { mainWindow.getSyncWithRemoteDatabaseMenuItem().setDisable(true); mainWindow.getSyncWithRemoteDatabaseButton().setDisable(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/615/buggy-version/src.com._17od.upm.gui.DatabaseActions.java", "BodyUseAPI": [], "Fixed commit": "cfd4c8132e33b12a2cfaf841cc87f26b9c6d96c4", "Url": "https://api.github.com/repos/MCampbell08/UPMRe-Architecture", "Date": "2017-08-29T04:41:59Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.type.Array.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (len > 0) { java.util.Iterator it = arr.valueIterator(); int row = 1; while (it.hasNext()) { qry = railo.runtime.orm.hibernate.HibernateCaster.toQuery(pc, session, railo.runtime.type.util.ComponentUtil.toComponentPro(railo.runtime.orm.hibernate.HibernateCaster.toComponent(it.next())), name, qry, len, (row++)); } }else qry = new railo.runtime.type.QueryImpl(new railo.runtime.type.Collection.Key[0], 1, \"orm\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5960/buggy-version/railo-java.railo-core.src.railo.runtime.orm.hibernate.HibernateCaster.java", "BodyUseAPI": ["railo.runtime.orm.hibernate.HibernateCaster.toQuery(railo.runtime.PageContext,railo.runtime.orm.hibernate.HibernateORMSession,railo.runtime.type.util.ComponentUtil.toComponentPro(railo.runtime.orm.hibernate.HibernateCaster.toComponent(it.next())),java.lang.String,railo.runtime.type.Query,int,int)"], "Fixed commit": "62f6f83ca6ff6cd875cc43cb0a9f00ab4ff355d1", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-03-21T18:30:25Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.vertx.ext.web.impl.HeaderParser.matchedSelector(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (value != null) { weightCallback.accept(java.lang.Float.parseFloat(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6678/buggy-version/vertx-web.src.main.java.io.vertx.ext.web.impl.HeaderParser.java", "BodyUseAPI": ["java.util.function.Consumer<java.lang.Float>.accept(float)", "java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "ea2a95a08f7fc15d2833b1f20efa51823dc40492", "Url": "https://api.github.com/repos/brunoais/vertx-web", "Date": "2016-09-25T16:43:29Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ekranac.root.activities.MainActivity.findViewById(R.id.display_old_content)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((oldCalcDisplay.length()) != 0) { oldCalcDisplay.setSelection(((oldCalcDisplay.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4685/buggy-version/app.src.main.java.com.ekranac.root.activities.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.setSelection(((oldCalcDisplay.length()) - 1))", "android.widget.EditText.length()"], "Fixed commit": "9afba3d974baa377eb795f7c1a96b76884159fb6", "Url": "https://api.github.com/repos/ekranac/calculator", "Date": "2015-03-04T14:00:57Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSearch)) { mNeedsListView.setAdapter(mNeedsAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6267/buggy-version/app.src.main.java.com.softjourn.ubm.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ab648c8537c62ff77f62f173e716fe05b94466f1", "Url": "https://api.github.com/repos/igorko88/ubm", "Date": "2016-06-10T09:06:21Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((totalTime) == (com.dattack.dbtools.ping.LogEntry.LogEntryBuilder.UNKNOWN)) { this.totalTime = computeRelativeTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5915/buggy-version/src.main.java.com.dattack.dbtools.ping.LogEntry.java", "BodyUseAPI": [], "Fixed commit": "4c1174c5e934c7b973fc9d50ffb221582efbebcc", "Url": "https://api.github.com/repos/dattack/dbtools", "Date": "2015-03-10T21:24:58Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dawhey.mlij_blogapp.Activities.MainActivity.getSupportFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((fragmentManager.getBackStackEntryCount()) > 0) { fragmentManager.popBackStack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1836/buggy-version/app.src.main.java.com.dawhey.mlij_blogapp.Activities.MainActivity.java", "BodyUseAPI": ["android.support.v4.app.FragmentManager.popBackStack()"], "Fixed commit": "d5c5c96197516c86d5118a88217c2538000810dc", "Url": "https://api.github.com/repos/dawhey/mlij-blog-reader", "Date": "2017-03-19T20:01:18Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1633/buggy-version/src.main.battlecode.client.viewer.MatchPlayer.java", "BodyUseAPI": [], "Fixed commit": "b2d270829a2c7fd6ef6c6534253ff12341abd16c", "Url": "https://api.github.com/repos/toby1984/battlecode-client", "Date": "2014-01-13T04:43:28Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1633/buggy-version/src.main.battlecode.client.viewer.MatchPlayer.java", "BodyUseAPI": [], "Fixed commit": "b2d270829a2c7fd6ef6c6534253ff12341abd16c", "Url": "https://api.github.com/repos/toby1984/battlecode-client", "Date": "2014-01-13T04:43:28Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (items.get(position).author.equals(adnan.haber.adapters.ChatAdapter.ownUsername)) rowView = inflater.inflate(R.layout.single_own_chat_item, parent, false); else rowView = inflater.inflate(R.layout.single_chat_item, parent, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7339/buggy-version/app.src.main.java.adnan.haber.adapters.ChatAdapter.java", "BodyUseAPI": [], "Fixed commit": "6b618fdc456cf62831744655631df5a4152d6678", "Url": "https://api.github.com/repos/adnanel/HaberApp", "Date": "2015-02-07T23:50:00Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adnan.haber.adapters.ChatAdapter.ownUsername) == null) adnan.haber.adapters.ChatAdapter.ownUsername = adnan.haber.Haber.getShortUsername(adnan.haber.Haber.getUsername());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7339/buggy-version/app.src.main.java.adnan.haber.adapters.ChatAdapter.java", "BodyUseAPI": [], "Fixed commit": "6b618fdc456cf62831744655631df5a4152d6678", "Url": "https://api.github.com/repos/adnanel/HaberApp", "Date": "2015-02-07T23:50:00Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(classList.contains(clazz))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/343/buggy-version/src.main.java.com.thoughtworks.elk.container.ElkContainer.java", "BodyUseAPI": [], "Fixed commit": "2eabc5d757418bf36d66c5e2f29f19695dccbcac", "Url": "https://api.github.com/repos/szpyxlwoni/Elk", "Date": "2013-04-23T06:41:04Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value != null) && (brooklyn.location.PortRange.class.isAssignableFrom(value.getClass()))) { brooklyn.location.PortRange p = ((brooklyn.location.PortRange) (value)); if ((p != null) && (!(p.isEmpty()))) ports.add(p.iterator().next()); }else if (k.getName().matches(\".*\\\\.port\")) { if (value instanceof java.lang.Integer) { ports.add(((java.lang.Integer) (value))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6709/buggy-version/software.base.src.main.java.brooklyn.entity.basic.SoftwareProcessImpl.java", "BodyUseAPI": [], "Fixed commit": "02981a8e50f3ba94f6fb14398b491ae6024fef2a", "Url": "https://api.github.com/repos/nakomis/incubator-brooklyn", "Date": "2015-06-25T14:14:30Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value != null) && (brooklyn.location.PortRange.class.isAssignableFrom(value.getClass()))) { brooklyn.location.PortRange p = ((brooklyn.location.PortRange) (value)); if ((p != null) && (!(p.isEmpty()))) ports.add(p.iterator().next()); }else if (k.getName().matches(\".*\\\\.port\")) { if (value instanceof java.lang.Integer) { ports.add(((java.lang.Integer) (value))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6709/buggy-version/software.base.src.main.java.brooklyn.entity.basic.SameServerDriverLifecycleEffectorTasks.java", "BodyUseAPI": [], "Fixed commit": "02981a8e50f3ba94f6fb14398b491ae6024fef2a", "Url": "https://api.github.com/repos/nakomis/incubator-brooklyn", "Date": "2015-06-25T14:14:30Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((block.getConstructor()) != null) { unquietcode.tools.flapi.MethodParser parsed = new unquietcode.tools.flapi.MethodParser(block.getConstructor().getMethodSignature()); name.append(\"_\").append(parsed.methodName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7635/buggy-version/src.main.java.unquietcode.tools.flapi.outline.DescriptorOutline.java", "BodyUseAPI": ["block.getConstructor().getMethodSignature()", "unquietcode.tools.flapi.outline.BlockOutline.getConstructor()"], "Fixed commit": "04fd8c83d9fd83c65e08e25d377f0e9e475a1fbd", "Url": "https://api.github.com/repos/cwensel/Flapi", "Date": "2014-07-14T06:34:51Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (org.appcelerator.titanium.TiC.API_LEVEL_JELLY_BEAN)) { activity.startIntentSenderForResult(intent, code, fillInIntent, flagsMask, flagsValues, extraFlags); }else { activity.startIntentSenderForResult(intent, code, fillInIntent, flagsMask, flagsValues, extraFlags, options); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6704/buggy-version/android.titanium.src.java.org.appcelerator.titanium.util.TiActivitySupportHelper.java", "BodyUseAPI": [], "Fixed commit": "97e80cfe227be1b72aa8ba9166de4b9c32b14016", "Url": "https://api.github.com/repos/Akylas/titanium_mobile", "Date": "2015-01-02T08:46:53Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.projectionName.getValue()) == null) { return \"\"; }else { return this.projectionName.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/999/buggy-version/src.main.java.org.geowe.client.local.layermanager.tool.create.GeoDataImportDialog.java", "BodyUseAPI": ["org.geowe.client.local.ui.ProjectionComboBox.getValue()"], "Fixed commit": "559fe373d494decd11f042514e41fe553e54d61b", "Url": "https://api.github.com/repos/geowe/geowe-core", "Date": "2017-01-20T07:26:31Z"}]}
